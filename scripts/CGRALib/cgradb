#!/bin/bash 
X=0
Y=0
R=0
IC=0
CGRAclock=0
CPUClock=0
ccf_root="/home/local/ASUAD/quoclon1/ccf9_27"

executable=$1
shift

subcommand=$1
shift

if [[ "$subcommand" == "--prog-args" ]]; then
    args=""
    for arg in "$@"
    do
        args+="$arg "
    done
elif [[ "$subcommand" == "" ]]; then
    args=""
else
    echo "If your program has arguments, add the flag --prog-args"
    exit 1
fi

if [ -f "CGRA_config.csv" ]; then
    INPUTFILE="CGRA_config.csv"
    X=$(grep -w X $INPUTFILE | cut -d, -f2)
    Y=$(grep -w Y $INPUTFILE | cut -d, -f2)
    R=$(grep -w R $INPUTFILE | cut -d, -f2)
    IC=$(grep -w IC $INPUTFILE | cut -d, -f2)
    CGRAclock=$(grep -w Cclock $INPUTFILE | cut -d, -f2)
    CPUclock=$(grep -w CPUclock $INPUTFILE | cut -d, -f2)
else
    echo "Please include CGRA architecture file"
    exit 1
fi

echo $args

#if [ "$R" -le  "2" ] || [ "$R" -eq "3" ] || [ "$R" -eq "5" ] || [ "$R" -eq "6" ] || [ "$R" -eq "7" ] || [ "$R" -gt "8" ] && [ "$R" - t "16" ] || [ "$R" -gt "16" ]; then                                                   
#    echo -e "\e[31mRegister size of 4, 8 and 16 are only supported! Please change the CGRA_config.csv file to reflect this.\e[0m" 
#    exit 1                                                                                     
#fi                                                                                                                               

echo "Simulation for CGRA for $X x $Y with $R registers per PE"

Ghz="GHz"
cgraclock="$CGRAclock$Ghz"
cpuclock="$CPUclock$Ghz"

echo "CPU frequency @ $cpuclock"
echo "CGRA frequency @ $cgraclock"

echo CGRA${X}x${Y}R${R}torus
# CGRA Execution                          
gdb --args ${ccf_root}/gem5/build/ARM/gem5.debug --debug-flags=CGRA_Detailed ${ccf_root}/gem5/configs/example/se_cgra.py -n 2 --cpu-type "AtomicSimpleCPU" --cgra --cgra-type "CGRA${X}x${Y}R${R}torus" -c ./${executable} -o ${args}

