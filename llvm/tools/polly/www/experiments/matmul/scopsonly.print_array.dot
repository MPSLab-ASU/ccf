digraph "Scop Graph for 'print_array' function" {
	label="Scop Graph for 'print_array' function";

	Node0x5ae5e30 [shape=record,label="{entry}"];
	Node0x5ae5e30 -> Node0x5ae5f50;
	Node0x5ae5f50 [shape=record,label="{entry.split}"];
	Node0x5ae5f50 -> Node0x5ae7d90;
	Node0x5ae7d90 [shape=record,label="{for.cond1.preheader}"];
	Node0x5ae7d90 -> Node0x5ae7f20;
	Node0x5ae7f20 [shape=record,label="{for.body3}"];
	Node0x5ae7f20 -> Node0x5ae7f40;
	Node0x5ae7f20 -> Node0x5ae7f60;
	Node0x5ae7f40 [shape=record,label="{if.then}"];
	Node0x5ae7f40 -> Node0x5ae7f60;
	Node0x5ae7f60 [shape=record,label="{for.inc}"];
	Node0x5ae7f60 -> Node0x5ae7f20[constraint=false];
	Node0x5ae7f60 -> Node0x5ae7e30;
	Node0x5ae7e30 [shape=record,label="{for.end}"];
	Node0x5ae7e30 -> Node0x5ae7d90[constraint=false];
	Node0x5ae7e30 -> Node0x5ae8110;
	Node0x5ae8110 [shape=record,label="{for.end12}"];
	colorscheme = "paired12"
        subgraph cluster_0x5abb9a0 {
          label = "";
          style = solid;
          color = 1
          subgraph cluster_0x5ae32c0 {
            label = "Call instruction:   %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %conv) #2";
            style = solid;
            color = 6
            subgraph cluster_0x5ae3240 {
              label = "Call instruction:   %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), double %conv) #2";
              style = solid;
              color = 5
              subgraph cluster_0x5abba20 {
                label = "Region can not profitably be optimized!";
                style = solid;
                color = 7
                Node0x5ae7f20;
                Node0x5ae7f40;
              }
              Node0x5ae7f60;
            }
            Node0x5ae7d90;
            Node0x5ae7e30;
          }
          Node0x5ae5e30;
          Node0x5ae5f50;
          Node0x5ae8110;
        }
}
