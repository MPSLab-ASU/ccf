// This file is distributed under the University of Illinois Open Source License.
// See LICENSE.TXT for details.
// RUN: c_compiler -c -o %t1.o -I "common" "common/testsuite.c"
// RUN: c_compiler -c %s -I "common" -o %t2.o
// RUN: linker -o %t1%exeext  %t1.o %t2.o
// RUN: runtool %t1%exeext | checker "TEST PASSED"
#include "testsuite.h"
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu1i { unsigned long long v1:17; unsigned long long :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu1ll { unsigned long long v1:17; unsigned long long :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu1s { unsigned long long v1:17; unsigned long long :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu31i { unsigned long long v1:17; unsigned long long :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu31ll { unsigned long long v1:17; unsigned long long :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu32i { unsigned long long v1:17; unsigned long long :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu32ll { unsigned long long v1:17; unsigned long long :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu33 { unsigned long long v1:17; unsigned long long :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu7c { unsigned long long v1:17; unsigned long long :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu7i { unsigned long long v1:17; unsigned long long :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu7ll { unsigned long long v1:17; unsigned long long :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu7s { unsigned long long v1:17; unsigned long long :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu8c { unsigned long long v1:17; unsigned long long :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu8i { unsigned long long v1:17; unsigned long long :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu8ll { unsigned long long v1:17; unsigned long long :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu8s { unsigned long long v1:17; unsigned long long :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu9i { unsigned long long v1:17; unsigned long long :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu9ll { unsigned long long v1:17; unsigned long long :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_BFu9s { unsigned long long v1:17; unsigned long long :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_C { unsigned long long v1:17; unsigned long long :0; char v2; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_D { unsigned long long v1:17; unsigned long long :0; double v2; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_F { unsigned long long v1:17; unsigned long long :0; float v2; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_I { unsigned long long v1:17; unsigned long long :0; int v2; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_Ip { unsigned long long v1:17; unsigned long long :0; int * v2; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_L { unsigned long long v1:17; unsigned long long :0; long long v2; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_S { unsigned long long v1:17; unsigned long long :0; short v2; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_Uc { unsigned long long v1:17; unsigned long long :0; unsigned char v2; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_Ui { unsigned long long v1:17; unsigned long long :0; unsigned int v2; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_Ul { unsigned long long v1:17; unsigned long long :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_Us { unsigned long long v1:17; unsigned long long :0; unsigned short v2; };
struct __attribute__((packed)) aBFu17ll_BFu0ll_Vp { unsigned long long v1:17; unsigned long long :0; void * v2; };
struct __attribute__((packed)) aBFu17ll_BFu0s { unsigned long long v1:17; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu0c { unsigned long long v1:17; unsigned short :0; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu0i { unsigned long long v1:17; unsigned short :0; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu0ll { unsigned long long v1:17; unsigned short :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu0s { unsigned long long v1:17; unsigned short :0; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu15i { unsigned long long v1:17; unsigned short :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu15ll { unsigned long long v1:17; unsigned short :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu15s { unsigned long long v1:17; unsigned short :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu16i { unsigned long long v1:17; unsigned short :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu16ll { unsigned long long v1:17; unsigned short :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu16s { unsigned long long v1:17; unsigned short :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu17i { unsigned long long v1:17; unsigned short :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu17ll { unsigned long long v1:17; unsigned short :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu1c { unsigned long long v1:17; unsigned short :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu1i { unsigned long long v1:17; unsigned short :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu1ll { unsigned long long v1:17; unsigned short :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu1s { unsigned long long v1:17; unsigned short :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu31i { unsigned long long v1:17; unsigned short :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu31ll { unsigned long long v1:17; unsigned short :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu32i { unsigned long long v1:17; unsigned short :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu32ll { unsigned long long v1:17; unsigned short :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu33 { unsigned long long v1:17; unsigned short :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu7c { unsigned long long v1:17; unsigned short :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu7i { unsigned long long v1:17; unsigned short :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu7ll { unsigned long long v1:17; unsigned short :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu7s { unsigned long long v1:17; unsigned short :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu8c { unsigned long long v1:17; unsigned short :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu8i { unsigned long long v1:17; unsigned short :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu8ll { unsigned long long v1:17; unsigned short :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu8s { unsigned long long v1:17; unsigned short :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu9i { unsigned long long v1:17; unsigned short :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu9ll { unsigned long long v1:17; unsigned short :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu17ll_BFu0s_BFu9s { unsigned long long v1:17; unsigned short :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu17ll_BFu0s_C { unsigned long long v1:17; unsigned short :0; char v2; };
struct __attribute__((packed)) aBFu17ll_BFu0s_D { unsigned long long v1:17; unsigned short :0; double v2; };
struct __attribute__((packed)) aBFu17ll_BFu0s_F { unsigned long long v1:17; unsigned short :0; float v2; };
struct __attribute__((packed)) aBFu17ll_BFu0s_I { unsigned long long v1:17; unsigned short :0; int v2; };
struct __attribute__((packed)) aBFu17ll_BFu0s_Ip { unsigned long long v1:17; unsigned short :0; int * v2; };
struct __attribute__((packed)) aBFu17ll_BFu0s_L { unsigned long long v1:17; unsigned short :0; long long v2; };
struct __attribute__((packed)) aBFu17ll_BFu0s_S { unsigned long long v1:17; unsigned short :0; short v2; };
struct __attribute__((packed)) aBFu17ll_BFu0s_Uc { unsigned long long v1:17; unsigned short :0; unsigned char v2; };
struct __attribute__((packed)) aBFu17ll_BFu0s_Ui { unsigned long long v1:17; unsigned short :0; unsigned int v2; };
struct __attribute__((packed)) aBFu17ll_BFu0s_Ul { unsigned long long v1:17; unsigned short :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu17ll_BFu0s_Us { unsigned long long v1:17; unsigned short :0; unsigned short v2; };
struct __attribute__((packed)) aBFu17ll_BFu0s_Vp { unsigned long long v1:17; unsigned short :0; void * v2; };
struct __attribute__((packed)) aBFu17ll_BFu15i_BFu0c { unsigned long long v1:17; unsigned int v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu15i_BFu0i { unsigned long long v1:17; unsigned int v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu15i_BFu0ll { unsigned long long v1:17; unsigned int v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu15i_BFu0s { unsigned long long v1:17; unsigned int v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu15ll_BFu0c { unsigned long long v1:17; unsigned long long v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu15ll_BFu0i { unsigned long long v1:17; unsigned long long v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu15ll_BFu0ll { unsigned long long v1:17; unsigned long long v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu15ll_BFu0s { unsigned long long v1:17; unsigned long long v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu15s_BFu0c { unsigned long long v1:17; unsigned short v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu15s_BFu0i { unsigned long long v1:17; unsigned short v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu15s_BFu0ll { unsigned long long v1:17; unsigned short v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu15s_BFu0s { unsigned long long v1:17; unsigned short v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu16i_BFu0c { unsigned long long v1:17; unsigned int v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu16i_BFu0i { unsigned long long v1:17; unsigned int v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu16i_BFu0ll { unsigned long long v1:17; unsigned int v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu16i_BFu0s { unsigned long long v1:17; unsigned int v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu16ll_BFu0c { unsigned long long v1:17; unsigned long long v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu16ll_BFu0i { unsigned long long v1:17; unsigned long long v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu16ll_BFu0ll { unsigned long long v1:17; unsigned long long v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu16ll_BFu0s { unsigned long long v1:17; unsigned long long v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu16s_BFu0c { unsigned long long v1:17; unsigned short v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu16s_BFu0i { unsigned long long v1:17; unsigned short v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu16s_BFu0ll { unsigned long long v1:17; unsigned short v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu16s_BFu0s { unsigned long long v1:17; unsigned short v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu17i_BFu0c { unsigned long long v1:17; unsigned int v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu17i_BFu0i { unsigned long long v1:17; unsigned int v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu17i_BFu0ll { unsigned long long v1:17; unsigned int v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu17i_BFu0s { unsigned long long v1:17; unsigned int v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu17ll_BFu0c { unsigned long long v1:17; unsigned long long v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu17ll_BFu0i { unsigned long long v1:17; unsigned long long v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu17ll_BFu0ll { unsigned long long v1:17; unsigned long long v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu17ll_BFu0s { unsigned long long v1:17; unsigned long long v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu1c_BFu0c { unsigned long long v1:17; unsigned char v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu1c_BFu0i { unsigned long long v1:17; unsigned char v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu1c_BFu0ll { unsigned long long v1:17; unsigned char v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu1c_BFu0s { unsigned long long v1:17; unsigned char v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu1i_BFu0c { unsigned long long v1:17; unsigned int v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu1i_BFu0i { unsigned long long v1:17; unsigned int v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu1i_BFu0ll { unsigned long long v1:17; unsigned int v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu1i_BFu0s { unsigned long long v1:17; unsigned int v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu1ll_BFu0c { unsigned long long v1:17; unsigned long long v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu1ll_BFu0i { unsigned long long v1:17; unsigned long long v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu1ll_BFu0ll { unsigned long long v1:17; unsigned long long v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu1ll_BFu0s { unsigned long long v1:17; unsigned long long v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu1s_BFu0c { unsigned long long v1:17; unsigned short v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu1s_BFu0i { unsigned long long v1:17; unsigned short v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu1s_BFu0ll { unsigned long long v1:17; unsigned short v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu1s_BFu0s { unsigned long long v1:17; unsigned short v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu31i_BFu0c { unsigned long long v1:17; unsigned int v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu31i_BFu0i { unsigned long long v1:17; unsigned int v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu31i_BFu0ll { unsigned long long v1:17; unsigned int v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu31i_BFu0s { unsigned long long v1:17; unsigned int v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu31ll_BFu0c { unsigned long long v1:17; unsigned long long v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu31ll_BFu0i { unsigned long long v1:17; unsigned long long v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu31ll_BFu0ll { unsigned long long v1:17; unsigned long long v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu31ll_BFu0s { unsigned long long v1:17; unsigned long long v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu32i_BFu0c { unsigned long long v1:17; unsigned int v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu32i_BFu0i { unsigned long long v1:17; unsigned int v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu32i_BFu0ll { unsigned long long v1:17; unsigned int v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu32i_BFu0s { unsigned long long v1:17; unsigned int v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu32ll_BFu0c { unsigned long long v1:17; unsigned long long v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu32ll_BFu0i { unsigned long long v1:17; unsigned long long v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu32ll_BFu0ll { unsigned long long v1:17; unsigned long long v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu32ll_BFu0s { unsigned long long v1:17; unsigned long long v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu33_BFu0c { unsigned long long v1:17; unsigned long long v2:33; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu33_BFu0i { unsigned long long v1:17; unsigned long long v2:33; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu33_BFu0ll { unsigned long long v1:17; unsigned long long v2:33; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu33_BFu0s { unsigned long long v1:17; unsigned long long v2:33; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu7c_BFu0c { unsigned long long v1:17; unsigned char v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu7c_BFu0i { unsigned long long v1:17; unsigned char v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu7c_BFu0ll { unsigned long long v1:17; unsigned char v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu7c_BFu0s { unsigned long long v1:17; unsigned char v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu7i_BFu0c { unsigned long long v1:17; unsigned int v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu7i_BFu0i { unsigned long long v1:17; unsigned int v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu7i_BFu0ll { unsigned long long v1:17; unsigned int v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu7i_BFu0s { unsigned long long v1:17; unsigned int v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu7ll_BFu0c { unsigned long long v1:17; unsigned long long v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu7ll_BFu0i { unsigned long long v1:17; unsigned long long v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu7ll_BFu0ll { unsigned long long v1:17; unsigned long long v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu7ll_BFu0s { unsigned long long v1:17; unsigned long long v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu7s_BFu0c { unsigned long long v1:17; unsigned short v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu7s_BFu0i { unsigned long long v1:17; unsigned short v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu7s_BFu0ll { unsigned long long v1:17; unsigned short v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu7s_BFu0s { unsigned long long v1:17; unsigned short v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu8c_BFu0c { unsigned long long v1:17; unsigned char v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu8c_BFu0i { unsigned long long v1:17; unsigned char v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu8c_BFu0ll { unsigned long long v1:17; unsigned char v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu8c_BFu0s { unsigned long long v1:17; unsigned char v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu8i_BFu0c { unsigned long long v1:17; unsigned int v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu8i_BFu0i { unsigned long long v1:17; unsigned int v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu8i_BFu0ll { unsigned long long v1:17; unsigned int v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu8i_BFu0s { unsigned long long v1:17; unsigned int v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu8ll_BFu0c { unsigned long long v1:17; unsigned long long v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu8ll_BFu0i { unsigned long long v1:17; unsigned long long v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu8ll_BFu0ll { unsigned long long v1:17; unsigned long long v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu8ll_BFu0s { unsigned long long v1:17; unsigned long long v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu8s_BFu0c { unsigned long long v1:17; unsigned short v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu8s_BFu0i { unsigned long long v1:17; unsigned short v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu8s_BFu0ll { unsigned long long v1:17; unsigned short v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu8s_BFu0s { unsigned long long v1:17; unsigned short v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu9i_BFu0c { unsigned long long v1:17; unsigned int v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu9i_BFu0i { unsigned long long v1:17; unsigned int v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu9i_BFu0ll { unsigned long long v1:17; unsigned int v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu9i_BFu0s { unsigned long long v1:17; unsigned int v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu9ll_BFu0c { unsigned long long v1:17; unsigned long long v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu9ll_BFu0i { unsigned long long v1:17; unsigned long long v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu9ll_BFu0ll { unsigned long long v1:17; unsigned long long v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu9ll_BFu0s { unsigned long long v1:17; unsigned long long v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_BFu9s_BFu0c { unsigned long long v1:17; unsigned short v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_BFu9s_BFu0i { unsigned long long v1:17; unsigned short v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_BFu9s_BFu0ll { unsigned long long v1:17; unsigned short v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_BFu9s_BFu0s { unsigned long long v1:17; unsigned short v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_C_BFu0c { unsigned long long v1:17; char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_C_BFu0i { unsigned long long v1:17; char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_C_BFu0ll { unsigned long long v1:17; char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_C_BFu0s { unsigned long long v1:17; char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_D_BFu0c { unsigned long long v1:17; double v2; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_D_BFu0i { unsigned long long v1:17; double v2; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_D_BFu0ll { unsigned long long v1:17; double v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_D_BFu0s { unsigned long long v1:17; double v2; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_F_BFu0c { unsigned long long v1:17; float v2; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_F_BFu0i { unsigned long long v1:17; float v2; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_F_BFu0ll { unsigned long long v1:17; float v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_F_BFu0s { unsigned long long v1:17; float v2; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_I_BFu0c { unsigned long long v1:17; int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_I_BFu0i { unsigned long long v1:17; int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_I_BFu0ll { unsigned long long v1:17; int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_I_BFu0s { unsigned long long v1:17; int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_Ip_BFu0c { unsigned long long v1:17; int * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_Ip_BFu0i { unsigned long long v1:17; int * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_Ip_BFu0ll { unsigned long long v1:17; int * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_Ip_BFu0s { unsigned long long v1:17; int * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_L_BFu0c { unsigned long long v1:17; long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_L_BFu0i { unsigned long long v1:17; long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_L_BFu0ll { unsigned long long v1:17; long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_L_BFu0s { unsigned long long v1:17; long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_S_BFu0c { unsigned long long v1:17; short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_S_BFu0i { unsigned long long v1:17; short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_S_BFu0ll { unsigned long long v1:17; short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_S_BFu0s { unsigned long long v1:17; short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_Uc_BFu0c { unsigned long long v1:17; unsigned char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_Uc_BFu0i { unsigned long long v1:17; unsigned char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_Uc_BFu0ll { unsigned long long v1:17; unsigned char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_Uc_BFu0s { unsigned long long v1:17; unsigned char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_Ui_BFu0c { unsigned long long v1:17; unsigned int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_Ui_BFu0i { unsigned long long v1:17; unsigned int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_Ui_BFu0ll { unsigned long long v1:17; unsigned int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_Ui_BFu0s { unsigned long long v1:17; unsigned int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_Ul_BFu0c { unsigned long long v1:17; unsigned long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_Ul_BFu0i { unsigned long long v1:17; unsigned long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_Ul_BFu0ll { unsigned long long v1:17; unsigned long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_Ul_BFu0s { unsigned long long v1:17; unsigned long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_Us_BFu0c { unsigned long long v1:17; unsigned short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_Us_BFu0i { unsigned long long v1:17; unsigned short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_Us_BFu0ll { unsigned long long v1:17; unsigned short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_Us_BFu0s { unsigned long long v1:17; unsigned short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu17ll_Vp_BFu0c { unsigned long long v1:17; void * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu17ll_Vp_BFu0i { unsigned long long v1:17; void * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu17ll_Vp_BFu0ll { unsigned long long v1:17; void * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu17ll_Vp_BFu0s { unsigned long long v1:17; void * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu0c { unsigned char v1:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu0c { unsigned char v1:1; unsigned char :0; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu0i { unsigned char v1:1; unsigned char :0; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu0ll { unsigned char v1:1; unsigned char :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu0s { unsigned char v1:1; unsigned char :0; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu15i { unsigned char v1:1; unsigned char :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu15ll { unsigned char v1:1; unsigned char :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu15s { unsigned char v1:1; unsigned char :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu16i { unsigned char v1:1; unsigned char :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu16ll { unsigned char v1:1; unsigned char :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu16s { unsigned char v1:1; unsigned char :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu17i { unsigned char v1:1; unsigned char :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu17ll { unsigned char v1:1; unsigned char :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu1c { unsigned char v1:1; unsigned char :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu1i { unsigned char v1:1; unsigned char :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu1ll { unsigned char v1:1; unsigned char :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu1s { unsigned char v1:1; unsigned char :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu31i { unsigned char v1:1; unsigned char :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu31ll { unsigned char v1:1; unsigned char :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu32i { unsigned char v1:1; unsigned char :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu32ll { unsigned char v1:1; unsigned char :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu33 { unsigned char v1:1; unsigned char :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu7c { unsigned char v1:1; unsigned char :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu7i { unsigned char v1:1; unsigned char :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu7ll { unsigned char v1:1; unsigned char :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu7s { unsigned char v1:1; unsigned char :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu8c { unsigned char v1:1; unsigned char :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu8i { unsigned char v1:1; unsigned char :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu8ll { unsigned char v1:1; unsigned char :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu8s { unsigned char v1:1; unsigned char :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu9i { unsigned char v1:1; unsigned char :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu9ll { unsigned char v1:1; unsigned char :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu1c_BFu0c_BFu9s { unsigned char v1:1; unsigned char :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu1c_BFu0c_C { unsigned char v1:1; unsigned char :0; char v2; };
struct __attribute__((packed)) aBFu1c_BFu0c_D { unsigned char v1:1; unsigned char :0; double v2; };
struct __attribute__((packed)) aBFu1c_BFu0c_F { unsigned char v1:1; unsigned char :0; float v2; };
struct __attribute__((packed)) aBFu1c_BFu0c_I { unsigned char v1:1; unsigned char :0; int v2; };
struct __attribute__((packed)) aBFu1c_BFu0c_Ip { unsigned char v1:1; unsigned char :0; int * v2; };
struct __attribute__((packed)) aBFu1c_BFu0c_L { unsigned char v1:1; unsigned char :0; long long v2; };
struct __attribute__((packed)) aBFu1c_BFu0c_S { unsigned char v1:1; unsigned char :0; short v2; };
struct __attribute__((packed)) aBFu1c_BFu0c_Uc { unsigned char v1:1; unsigned char :0; unsigned char v2; };
struct __attribute__((packed)) aBFu1c_BFu0c_Ui { unsigned char v1:1; unsigned char :0; unsigned int v2; };
struct __attribute__((packed)) aBFu1c_BFu0c_Ul { unsigned char v1:1; unsigned char :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu1c_BFu0c_Us { unsigned char v1:1; unsigned char :0; unsigned short v2; };
struct __attribute__((packed)) aBFu1c_BFu0c_Vp { unsigned char v1:1; unsigned char :0; void * v2; };
struct __attribute__((packed)) aBFu1c_BFu0i { unsigned char v1:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu0c { unsigned char v1:1; unsigned int :0; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu0i { unsigned char v1:1; unsigned int :0; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu0ll { unsigned char v1:1; unsigned int :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu0s { unsigned char v1:1; unsigned int :0; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu15i { unsigned char v1:1; unsigned int :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu15ll { unsigned char v1:1; unsigned int :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu15s { unsigned char v1:1; unsigned int :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu16i { unsigned char v1:1; unsigned int :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu16ll { unsigned char v1:1; unsigned int :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu16s { unsigned char v1:1; unsigned int :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu17i { unsigned char v1:1; unsigned int :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu17ll { unsigned char v1:1; unsigned int :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu1c { unsigned char v1:1; unsigned int :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu1i { unsigned char v1:1; unsigned int :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu1ll { unsigned char v1:1; unsigned int :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu1s { unsigned char v1:1; unsigned int :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu31i { unsigned char v1:1; unsigned int :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu31ll { unsigned char v1:1; unsigned int :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu32i { unsigned char v1:1; unsigned int :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu32ll { unsigned char v1:1; unsigned int :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu33 { unsigned char v1:1; unsigned int :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu7c { unsigned char v1:1; unsigned int :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu7i { unsigned char v1:1; unsigned int :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu7ll { unsigned char v1:1; unsigned int :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu7s { unsigned char v1:1; unsigned int :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu8c { unsigned char v1:1; unsigned int :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu8i { unsigned char v1:1; unsigned int :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu8ll { unsigned char v1:1; unsigned int :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu8s { unsigned char v1:1; unsigned int :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu9i { unsigned char v1:1; unsigned int :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu9ll { unsigned char v1:1; unsigned int :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu1c_BFu0i_BFu9s { unsigned char v1:1; unsigned int :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu1c_BFu0i_C { unsigned char v1:1; unsigned int :0; char v2; };
struct __attribute__((packed)) aBFu1c_BFu0i_D { unsigned char v1:1; unsigned int :0; double v2; };
struct __attribute__((packed)) aBFu1c_BFu0i_F { unsigned char v1:1; unsigned int :0; float v2; };
struct __attribute__((packed)) aBFu1c_BFu0i_I { unsigned char v1:1; unsigned int :0; int v2; };
struct __attribute__((packed)) aBFu1c_BFu0i_Ip { unsigned char v1:1; unsigned int :0; int * v2; };
struct __attribute__((packed)) aBFu1c_BFu0i_L { unsigned char v1:1; unsigned int :0; long long v2; };
struct __attribute__((packed)) aBFu1c_BFu0i_S { unsigned char v1:1; unsigned int :0; short v2; };
struct __attribute__((packed)) aBFu1c_BFu0i_Uc { unsigned char v1:1; unsigned int :0; unsigned char v2; };
struct __attribute__((packed)) aBFu1c_BFu0i_Ui { unsigned char v1:1; unsigned int :0; unsigned int v2; };
struct __attribute__((packed)) aBFu1c_BFu0i_Ul { unsigned char v1:1; unsigned int :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu1c_BFu0i_Us { unsigned char v1:1; unsigned int :0; unsigned short v2; };
struct __attribute__((packed)) aBFu1c_BFu0i_Vp { unsigned char v1:1; unsigned int :0; void * v2; };
struct __attribute__((packed)) aBFu1c_BFu0ll { unsigned char v1:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu0c { unsigned char v1:1; unsigned long long :0; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu0i { unsigned char v1:1; unsigned long long :0; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu0ll { unsigned char v1:1; unsigned long long :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu0s { unsigned char v1:1; unsigned long long :0; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu15i { unsigned char v1:1; unsigned long long :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu15ll { unsigned char v1:1; unsigned long long :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu15s { unsigned char v1:1; unsigned long long :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu16i { unsigned char v1:1; unsigned long long :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu16ll { unsigned char v1:1; unsigned long long :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu16s { unsigned char v1:1; unsigned long long :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu17i { unsigned char v1:1; unsigned long long :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu17ll { unsigned char v1:1; unsigned long long :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu1c { unsigned char v1:1; unsigned long long :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu1i { unsigned char v1:1; unsigned long long :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu1ll { unsigned char v1:1; unsigned long long :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu1s { unsigned char v1:1; unsigned long long :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu31i { unsigned char v1:1; unsigned long long :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu31ll { unsigned char v1:1; unsigned long long :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu32i { unsigned char v1:1; unsigned long long :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu32ll { unsigned char v1:1; unsigned long long :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu33 { unsigned char v1:1; unsigned long long :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu7c { unsigned char v1:1; unsigned long long :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu7i { unsigned char v1:1; unsigned long long :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu7ll { unsigned char v1:1; unsigned long long :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu7s { unsigned char v1:1; unsigned long long :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu8c { unsigned char v1:1; unsigned long long :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu8i { unsigned char v1:1; unsigned long long :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu8ll { unsigned char v1:1; unsigned long long :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu8s { unsigned char v1:1; unsigned long long :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu9i { unsigned char v1:1; unsigned long long :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu9ll { unsigned char v1:1; unsigned long long :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu1c_BFu0ll_BFu9s { unsigned char v1:1; unsigned long long :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu1c_BFu0ll_C { unsigned char v1:1; unsigned long long :0; char v2; };
struct __attribute__((packed)) aBFu1c_BFu0ll_D { unsigned char v1:1; unsigned long long :0; double v2; };
struct __attribute__((packed)) aBFu1c_BFu0ll_F { unsigned char v1:1; unsigned long long :0; float v2; };
struct __attribute__((packed)) aBFu1c_BFu0ll_I { unsigned char v1:1; unsigned long long :0; int v2; };
struct __attribute__((packed)) aBFu1c_BFu0ll_Ip { unsigned char v1:1; unsigned long long :0; int * v2; };
struct __attribute__((packed)) aBFu1c_BFu0ll_L { unsigned char v1:1; unsigned long long :0; long long v2; };
struct __attribute__((packed)) aBFu1c_BFu0ll_S { unsigned char v1:1; unsigned long long :0; short v2; };
struct __attribute__((packed)) aBFu1c_BFu0ll_Uc { unsigned char v1:1; unsigned long long :0; unsigned char v2; };
struct __attribute__((packed)) aBFu1c_BFu0ll_Ui { unsigned char v1:1; unsigned long long :0; unsigned int v2; };
struct __attribute__((packed)) aBFu1c_BFu0ll_Ul { unsigned char v1:1; unsigned long long :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu1c_BFu0ll_Us { unsigned char v1:1; unsigned long long :0; unsigned short v2; };
struct __attribute__((packed)) aBFu1c_BFu0ll_Vp { unsigned char v1:1; unsigned long long :0; void * v2; };
struct __attribute__((packed)) aBFu1c_BFu0s { unsigned char v1:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu0c { unsigned char v1:1; unsigned short :0; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu0i { unsigned char v1:1; unsigned short :0; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu0ll { unsigned char v1:1; unsigned short :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu0s { unsigned char v1:1; unsigned short :0; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu15i { unsigned char v1:1; unsigned short :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu15ll { unsigned char v1:1; unsigned short :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu15s { unsigned char v1:1; unsigned short :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu16i { unsigned char v1:1; unsigned short :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu16ll { unsigned char v1:1; unsigned short :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu16s { unsigned char v1:1; unsigned short :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu17i { unsigned char v1:1; unsigned short :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu17ll { unsigned char v1:1; unsigned short :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu1c { unsigned char v1:1; unsigned short :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu1i { unsigned char v1:1; unsigned short :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu1ll { unsigned char v1:1; unsigned short :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu1s { unsigned char v1:1; unsigned short :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu31i { unsigned char v1:1; unsigned short :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu31ll { unsigned char v1:1; unsigned short :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu32i { unsigned char v1:1; unsigned short :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu32ll { unsigned char v1:1; unsigned short :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu33 { unsigned char v1:1; unsigned short :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu7c { unsigned char v1:1; unsigned short :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu7i { unsigned char v1:1; unsigned short :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu7ll { unsigned char v1:1; unsigned short :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu7s { unsigned char v1:1; unsigned short :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu8c { unsigned char v1:1; unsigned short :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu8i { unsigned char v1:1; unsigned short :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu8ll { unsigned char v1:1; unsigned short :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu8s { unsigned char v1:1; unsigned short :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu9i { unsigned char v1:1; unsigned short :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu9ll { unsigned char v1:1; unsigned short :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu1c_BFu0s_BFu9s { unsigned char v1:1; unsigned short :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu1c_BFu0s_C { unsigned char v1:1; unsigned short :0; char v2; };
struct __attribute__((packed)) aBFu1c_BFu0s_D { unsigned char v1:1; unsigned short :0; double v2; };
struct __attribute__((packed)) aBFu1c_BFu0s_F { unsigned char v1:1; unsigned short :0; float v2; };
struct __attribute__((packed)) aBFu1c_BFu0s_I { unsigned char v1:1; unsigned short :0; int v2; };
struct __attribute__((packed)) aBFu1c_BFu0s_Ip { unsigned char v1:1; unsigned short :0; int * v2; };
struct __attribute__((packed)) aBFu1c_BFu0s_L { unsigned char v1:1; unsigned short :0; long long v2; };
struct __attribute__((packed)) aBFu1c_BFu0s_S { unsigned char v1:1; unsigned short :0; short v2; };
struct __attribute__((packed)) aBFu1c_BFu0s_Uc { unsigned char v1:1; unsigned short :0; unsigned char v2; };
struct __attribute__((packed)) aBFu1c_BFu0s_Ui { unsigned char v1:1; unsigned short :0; unsigned int v2; };
struct __attribute__((packed)) aBFu1c_BFu0s_Ul { unsigned char v1:1; unsigned short :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu1c_BFu0s_Us { unsigned char v1:1; unsigned short :0; unsigned short v2; };
struct __attribute__((packed)) aBFu1c_BFu0s_Vp { unsigned char v1:1; unsigned short :0; void * v2; };
struct __attribute__((packed)) aBFu1c_BFu15i_BFu0c { unsigned char v1:1; unsigned int v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu15i_BFu0i { unsigned char v1:1; unsigned int v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu15i_BFu0ll { unsigned char v1:1; unsigned int v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu15i_BFu0s { unsigned char v1:1; unsigned int v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu15ll_BFu0c { unsigned char v1:1; unsigned long long v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu15ll_BFu0i { unsigned char v1:1; unsigned long long v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu15ll_BFu0ll { unsigned char v1:1; unsigned long long v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu15ll_BFu0s { unsigned char v1:1; unsigned long long v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu15s_BFu0c { unsigned char v1:1; unsigned short v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu15s_BFu0i { unsigned char v1:1; unsigned short v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu15s_BFu0ll { unsigned char v1:1; unsigned short v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu15s_BFu0s { unsigned char v1:1; unsigned short v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu16i_BFu0c { unsigned char v1:1; unsigned int v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu16i_BFu0i { unsigned char v1:1; unsigned int v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu16i_BFu0ll { unsigned char v1:1; unsigned int v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu16i_BFu0s { unsigned char v1:1; unsigned int v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu16ll_BFu0c { unsigned char v1:1; unsigned long long v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu16ll_BFu0i { unsigned char v1:1; unsigned long long v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu16ll_BFu0ll { unsigned char v1:1; unsigned long long v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu16ll_BFu0s { unsigned char v1:1; unsigned long long v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu16s_BFu0c { unsigned char v1:1; unsigned short v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu16s_BFu0i { unsigned char v1:1; unsigned short v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu16s_BFu0ll { unsigned char v1:1; unsigned short v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu16s_BFu0s { unsigned char v1:1; unsigned short v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu17i_BFu0c { unsigned char v1:1; unsigned int v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu17i_BFu0i { unsigned char v1:1; unsigned int v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu17i_BFu0ll { unsigned char v1:1; unsigned int v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu17i_BFu0s { unsigned char v1:1; unsigned int v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu17ll_BFu0c { unsigned char v1:1; unsigned long long v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu17ll_BFu0i { unsigned char v1:1; unsigned long long v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu17ll_BFu0ll { unsigned char v1:1; unsigned long long v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu17ll_BFu0s { unsigned char v1:1; unsigned long long v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu1c_BFu0c { unsigned char v1:1; unsigned char v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu1c_BFu0i { unsigned char v1:1; unsigned char v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu1c_BFu0ll { unsigned char v1:1; unsigned char v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu1c_BFu0s { unsigned char v1:1; unsigned char v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu1i_BFu0c { unsigned char v1:1; unsigned int v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu1i_BFu0i { unsigned char v1:1; unsigned int v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu1i_BFu0ll { unsigned char v1:1; unsigned int v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu1i_BFu0s { unsigned char v1:1; unsigned int v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu1ll_BFu0c { unsigned char v1:1; unsigned long long v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu1ll_BFu0i { unsigned char v1:1; unsigned long long v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu1ll_BFu0ll { unsigned char v1:1; unsigned long long v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu1ll_BFu0s { unsigned char v1:1; unsigned long long v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu1s_BFu0c { unsigned char v1:1; unsigned short v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu1s_BFu0i { unsigned char v1:1; unsigned short v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu1s_BFu0ll { unsigned char v1:1; unsigned short v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu1s_BFu0s { unsigned char v1:1; unsigned short v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu31i_BFu0c { unsigned char v1:1; unsigned int v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu31i_BFu0i { unsigned char v1:1; unsigned int v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu31i_BFu0ll { unsigned char v1:1; unsigned int v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu31i_BFu0s { unsigned char v1:1; unsigned int v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu31ll_BFu0c { unsigned char v1:1; unsigned long long v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu31ll_BFu0i { unsigned char v1:1; unsigned long long v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu31ll_BFu0ll { unsigned char v1:1; unsigned long long v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu31ll_BFu0s { unsigned char v1:1; unsigned long long v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu32i_BFu0c { unsigned char v1:1; unsigned int v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu32i_BFu0i { unsigned char v1:1; unsigned int v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu32i_BFu0ll { unsigned char v1:1; unsigned int v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu32i_BFu0s { unsigned char v1:1; unsigned int v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu32ll_BFu0c { unsigned char v1:1; unsigned long long v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu32ll_BFu0i { unsigned char v1:1; unsigned long long v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu32ll_BFu0ll { unsigned char v1:1; unsigned long long v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu32ll_BFu0s { unsigned char v1:1; unsigned long long v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu33_BFu0c { unsigned char v1:1; unsigned long long v2:33; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu33_BFu0i { unsigned char v1:1; unsigned long long v2:33; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu33_BFu0ll { unsigned char v1:1; unsigned long long v2:33; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu33_BFu0s { unsigned char v1:1; unsigned long long v2:33; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu7c_BFu0c { unsigned char v1:1; unsigned char v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu7c_BFu0i { unsigned char v1:1; unsigned char v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu7c_BFu0ll { unsigned char v1:1; unsigned char v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu7c_BFu0s { unsigned char v1:1; unsigned char v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu7i_BFu0c { unsigned char v1:1; unsigned int v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu7i_BFu0i { unsigned char v1:1; unsigned int v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu7i_BFu0ll { unsigned char v1:1; unsigned int v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu7i_BFu0s { unsigned char v1:1; unsigned int v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu7ll_BFu0c { unsigned char v1:1; unsigned long long v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu7ll_BFu0i { unsigned char v1:1; unsigned long long v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu7ll_BFu0ll { unsigned char v1:1; unsigned long long v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu7ll_BFu0s { unsigned char v1:1; unsigned long long v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu7s_BFu0c { unsigned char v1:1; unsigned short v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu7s_BFu0i { unsigned char v1:1; unsigned short v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu7s_BFu0ll { unsigned char v1:1; unsigned short v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu7s_BFu0s { unsigned char v1:1; unsigned short v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu8c_BFu0c { unsigned char v1:1; unsigned char v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu8c_BFu0i { unsigned char v1:1; unsigned char v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu8c_BFu0ll { unsigned char v1:1; unsigned char v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu8c_BFu0s { unsigned char v1:1; unsigned char v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu8i_BFu0c { unsigned char v1:1; unsigned int v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu8i_BFu0i { unsigned char v1:1; unsigned int v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu8i_BFu0ll { unsigned char v1:1; unsigned int v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu8i_BFu0s { unsigned char v1:1; unsigned int v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu8ll_BFu0c { unsigned char v1:1; unsigned long long v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu8ll_BFu0i { unsigned char v1:1; unsigned long long v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu8ll_BFu0ll { unsigned char v1:1; unsigned long long v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu8ll_BFu0s { unsigned char v1:1; unsigned long long v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu8s_BFu0c { unsigned char v1:1; unsigned short v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu8s_BFu0i { unsigned char v1:1; unsigned short v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu8s_BFu0ll { unsigned char v1:1; unsigned short v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu8s_BFu0s { unsigned char v1:1; unsigned short v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu9i_BFu0c { unsigned char v1:1; unsigned int v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu9i_BFu0i { unsigned char v1:1; unsigned int v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu9i_BFu0ll { unsigned char v1:1; unsigned int v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu9i_BFu0s { unsigned char v1:1; unsigned int v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu9ll_BFu0c { unsigned char v1:1; unsigned long long v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu9ll_BFu0i { unsigned char v1:1; unsigned long long v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu9ll_BFu0ll { unsigned char v1:1; unsigned long long v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu9ll_BFu0s { unsigned char v1:1; unsigned long long v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_BFu9s_BFu0c { unsigned char v1:1; unsigned short v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_BFu9s_BFu0i { unsigned char v1:1; unsigned short v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_BFu9s_BFu0ll { unsigned char v1:1; unsigned short v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_BFu9s_BFu0s { unsigned char v1:1; unsigned short v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_C_BFu0c { unsigned char v1:1; char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_C_BFu0i { unsigned char v1:1; char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_C_BFu0ll { unsigned char v1:1; char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_C_BFu0s { unsigned char v1:1; char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_D_BFu0c { unsigned char v1:1; double v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_D_BFu0i { unsigned char v1:1; double v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_D_BFu0ll { unsigned char v1:1; double v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_D_BFu0s { unsigned char v1:1; double v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_F_BFu0c { unsigned char v1:1; float v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_F_BFu0i { unsigned char v1:1; float v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_F_BFu0ll { unsigned char v1:1; float v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_F_BFu0s { unsigned char v1:1; float v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_I_BFu0c { unsigned char v1:1; int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_I_BFu0i { unsigned char v1:1; int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_I_BFu0ll { unsigned char v1:1; int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_I_BFu0s { unsigned char v1:1; int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_Ip_BFu0c { unsigned char v1:1; int * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_Ip_BFu0i { unsigned char v1:1; int * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_Ip_BFu0ll { unsigned char v1:1; int * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_Ip_BFu0s { unsigned char v1:1; int * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_L_BFu0c { unsigned char v1:1; long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_L_BFu0i { unsigned char v1:1; long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_L_BFu0ll { unsigned char v1:1; long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_L_BFu0s { unsigned char v1:1; long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_S_BFu0c { unsigned char v1:1; short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_S_BFu0i { unsigned char v1:1; short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_S_BFu0ll { unsigned char v1:1; short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_S_BFu0s { unsigned char v1:1; short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_Uc_BFu0c { unsigned char v1:1; unsigned char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_Uc_BFu0i { unsigned char v1:1; unsigned char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_Uc_BFu0ll { unsigned char v1:1; unsigned char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_Uc_BFu0s { unsigned char v1:1; unsigned char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_Ui_BFu0c { unsigned char v1:1; unsigned int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_Ui_BFu0i { unsigned char v1:1; unsigned int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_Ui_BFu0ll { unsigned char v1:1; unsigned int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_Ui_BFu0s { unsigned char v1:1; unsigned int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_Ul_BFu0c { unsigned char v1:1; unsigned long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_Ul_BFu0i { unsigned char v1:1; unsigned long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_Ul_BFu0ll { unsigned char v1:1; unsigned long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_Ul_BFu0s { unsigned char v1:1; unsigned long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_Us_BFu0c { unsigned char v1:1; unsigned short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_Us_BFu0i { unsigned char v1:1; unsigned short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_Us_BFu0ll { unsigned char v1:1; unsigned short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_Us_BFu0s { unsigned char v1:1; unsigned short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1c_Vp_BFu0c { unsigned char v1:1; void * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1c_Vp_BFu0i { unsigned char v1:1; void * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1c_Vp_BFu0ll { unsigned char v1:1; void * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1c_Vp_BFu0s { unsigned char v1:1; void * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu0c { unsigned int v1:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu0c { unsigned int v1:1; unsigned char :0; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu0i { unsigned int v1:1; unsigned char :0; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu0ll { unsigned int v1:1; unsigned char :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu0s { unsigned int v1:1; unsigned char :0; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu15i { unsigned int v1:1; unsigned char :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu15ll { unsigned int v1:1; unsigned char :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu15s { unsigned int v1:1; unsigned char :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu16i { unsigned int v1:1; unsigned char :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu16ll { unsigned int v1:1; unsigned char :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu16s { unsigned int v1:1; unsigned char :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu17i { unsigned int v1:1; unsigned char :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu17ll { unsigned int v1:1; unsigned char :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu1c { unsigned int v1:1; unsigned char :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu1i { unsigned int v1:1; unsigned char :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu1ll { unsigned int v1:1; unsigned char :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu1s { unsigned int v1:1; unsigned char :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu31i { unsigned int v1:1; unsigned char :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu31ll { unsigned int v1:1; unsigned char :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu32i { unsigned int v1:1; unsigned char :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu32ll { unsigned int v1:1; unsigned char :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu33 { unsigned int v1:1; unsigned char :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu7c { unsigned int v1:1; unsigned char :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu7i { unsigned int v1:1; unsigned char :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu7ll { unsigned int v1:1; unsigned char :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu7s { unsigned int v1:1; unsigned char :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu8c { unsigned int v1:1; unsigned char :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu8i { unsigned int v1:1; unsigned char :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu8ll { unsigned int v1:1; unsigned char :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu8s { unsigned int v1:1; unsigned char :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu9i { unsigned int v1:1; unsigned char :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu9ll { unsigned int v1:1; unsigned char :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu1i_BFu0c_BFu9s { unsigned int v1:1; unsigned char :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu1i_BFu0c_C { unsigned int v1:1; unsigned char :0; char v2; };
struct __attribute__((packed)) aBFu1i_BFu0c_D { unsigned int v1:1; unsigned char :0; double v2; };
struct __attribute__((packed)) aBFu1i_BFu0c_F { unsigned int v1:1; unsigned char :0; float v2; };
struct __attribute__((packed)) aBFu1i_BFu0c_I { unsigned int v1:1; unsigned char :0; int v2; };
struct __attribute__((packed)) aBFu1i_BFu0c_Ip { unsigned int v1:1; unsigned char :0; int * v2; };
struct __attribute__((packed)) aBFu1i_BFu0c_L { unsigned int v1:1; unsigned char :0; long long v2; };
struct __attribute__((packed)) aBFu1i_BFu0c_S { unsigned int v1:1; unsigned char :0; short v2; };
struct __attribute__((packed)) aBFu1i_BFu0c_Uc { unsigned int v1:1; unsigned char :0; unsigned char v2; };
struct __attribute__((packed)) aBFu1i_BFu0c_Ui { unsigned int v1:1; unsigned char :0; unsigned int v2; };
struct __attribute__((packed)) aBFu1i_BFu0c_Ul { unsigned int v1:1; unsigned char :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu1i_BFu0c_Us { unsigned int v1:1; unsigned char :0; unsigned short v2; };
struct __attribute__((packed)) aBFu1i_BFu0c_Vp { unsigned int v1:1; unsigned char :0; void * v2; };
struct __attribute__((packed)) aBFu1i_BFu0i { unsigned int v1:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu0c { unsigned int v1:1; unsigned int :0; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu0i { unsigned int v1:1; unsigned int :0; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu0ll { unsigned int v1:1; unsigned int :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu0s { unsigned int v1:1; unsigned int :0; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu15i { unsigned int v1:1; unsigned int :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu15ll { unsigned int v1:1; unsigned int :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu15s { unsigned int v1:1; unsigned int :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu16i { unsigned int v1:1; unsigned int :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu16ll { unsigned int v1:1; unsigned int :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu16s { unsigned int v1:1; unsigned int :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu17i { unsigned int v1:1; unsigned int :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu17ll { unsigned int v1:1; unsigned int :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu1c { unsigned int v1:1; unsigned int :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu1i { unsigned int v1:1; unsigned int :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu1ll { unsigned int v1:1; unsigned int :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu1s { unsigned int v1:1; unsigned int :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu31i { unsigned int v1:1; unsigned int :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu31ll { unsigned int v1:1; unsigned int :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu32i { unsigned int v1:1; unsigned int :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu32ll { unsigned int v1:1; unsigned int :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu33 { unsigned int v1:1; unsigned int :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu7c { unsigned int v1:1; unsigned int :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu7i { unsigned int v1:1; unsigned int :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu7ll { unsigned int v1:1; unsigned int :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu7s { unsigned int v1:1; unsigned int :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu8c { unsigned int v1:1; unsigned int :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu8i { unsigned int v1:1; unsigned int :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu8ll { unsigned int v1:1; unsigned int :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu8s { unsigned int v1:1; unsigned int :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu9i { unsigned int v1:1; unsigned int :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu9ll { unsigned int v1:1; unsigned int :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu1i_BFu0i_BFu9s { unsigned int v1:1; unsigned int :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu1i_BFu0i_C { unsigned int v1:1; unsigned int :0; char v2; };
struct __attribute__((packed)) aBFu1i_BFu0i_D { unsigned int v1:1; unsigned int :0; double v2; };
struct __attribute__((packed)) aBFu1i_BFu0i_F { unsigned int v1:1; unsigned int :0; float v2; };
struct __attribute__((packed)) aBFu1i_BFu0i_I { unsigned int v1:1; unsigned int :0; int v2; };
struct __attribute__((packed)) aBFu1i_BFu0i_Ip { unsigned int v1:1; unsigned int :0; int * v2; };
struct __attribute__((packed)) aBFu1i_BFu0i_L { unsigned int v1:1; unsigned int :0; long long v2; };
struct __attribute__((packed)) aBFu1i_BFu0i_S { unsigned int v1:1; unsigned int :0; short v2; };
struct __attribute__((packed)) aBFu1i_BFu0i_Uc { unsigned int v1:1; unsigned int :0; unsigned char v2; };
struct __attribute__((packed)) aBFu1i_BFu0i_Ui { unsigned int v1:1; unsigned int :0; unsigned int v2; };
struct __attribute__((packed)) aBFu1i_BFu0i_Ul { unsigned int v1:1; unsigned int :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu1i_BFu0i_Us { unsigned int v1:1; unsigned int :0; unsigned short v2; };
struct __attribute__((packed)) aBFu1i_BFu0i_Vp { unsigned int v1:1; unsigned int :0; void * v2; };
struct __attribute__((packed)) aBFu1i_BFu0ll { unsigned int v1:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu0c { unsigned int v1:1; unsigned long long :0; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu0i { unsigned int v1:1; unsigned long long :0; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu0ll { unsigned int v1:1; unsigned long long :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu0s { unsigned int v1:1; unsigned long long :0; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu15i { unsigned int v1:1; unsigned long long :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu15ll { unsigned int v1:1; unsigned long long :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu15s { unsigned int v1:1; unsigned long long :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu16i { unsigned int v1:1; unsigned long long :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu16ll { unsigned int v1:1; unsigned long long :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu16s { unsigned int v1:1; unsigned long long :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu17i { unsigned int v1:1; unsigned long long :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu17ll { unsigned int v1:1; unsigned long long :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu1c { unsigned int v1:1; unsigned long long :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu1i { unsigned int v1:1; unsigned long long :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu1ll { unsigned int v1:1; unsigned long long :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu1s { unsigned int v1:1; unsigned long long :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu31i { unsigned int v1:1; unsigned long long :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu31ll { unsigned int v1:1; unsigned long long :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu32i { unsigned int v1:1; unsigned long long :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu32ll { unsigned int v1:1; unsigned long long :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu33 { unsigned int v1:1; unsigned long long :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu7c { unsigned int v1:1; unsigned long long :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu7i { unsigned int v1:1; unsigned long long :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu7ll { unsigned int v1:1; unsigned long long :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu7s { unsigned int v1:1; unsigned long long :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu8c { unsigned int v1:1; unsigned long long :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu8i { unsigned int v1:1; unsigned long long :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu8ll { unsigned int v1:1; unsigned long long :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu8s { unsigned int v1:1; unsigned long long :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu9i { unsigned int v1:1; unsigned long long :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu9ll { unsigned int v1:1; unsigned long long :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu1i_BFu0ll_BFu9s { unsigned int v1:1; unsigned long long :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu1i_BFu0ll_C { unsigned int v1:1; unsigned long long :0; char v2; };
struct __attribute__((packed)) aBFu1i_BFu0ll_D { unsigned int v1:1; unsigned long long :0; double v2; };
struct __attribute__((packed)) aBFu1i_BFu0ll_F { unsigned int v1:1; unsigned long long :0; float v2; };
struct __attribute__((packed)) aBFu1i_BFu0ll_I { unsigned int v1:1; unsigned long long :0; int v2; };
struct __attribute__((packed)) aBFu1i_BFu0ll_Ip { unsigned int v1:1; unsigned long long :0; int * v2; };
struct __attribute__((packed)) aBFu1i_BFu0ll_L { unsigned int v1:1; unsigned long long :0; long long v2; };
struct __attribute__((packed)) aBFu1i_BFu0ll_S { unsigned int v1:1; unsigned long long :0; short v2; };
struct __attribute__((packed)) aBFu1i_BFu0ll_Uc { unsigned int v1:1; unsigned long long :0; unsigned char v2; };
struct __attribute__((packed)) aBFu1i_BFu0ll_Ui { unsigned int v1:1; unsigned long long :0; unsigned int v2; };
struct __attribute__((packed)) aBFu1i_BFu0ll_Ul { unsigned int v1:1; unsigned long long :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu1i_BFu0ll_Us { unsigned int v1:1; unsigned long long :0; unsigned short v2; };
struct __attribute__((packed)) aBFu1i_BFu0ll_Vp { unsigned int v1:1; unsigned long long :0; void * v2; };
struct __attribute__((packed)) aBFu1i_BFu0s { unsigned int v1:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu0c { unsigned int v1:1; unsigned short :0; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu0i { unsigned int v1:1; unsigned short :0; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu0ll { unsigned int v1:1; unsigned short :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu0s { unsigned int v1:1; unsigned short :0; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu15i { unsigned int v1:1; unsigned short :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu15ll { unsigned int v1:1; unsigned short :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu15s { unsigned int v1:1; unsigned short :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu16i { unsigned int v1:1; unsigned short :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu16ll { unsigned int v1:1; unsigned short :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu16s { unsigned int v1:1; unsigned short :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu17i { unsigned int v1:1; unsigned short :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu17ll { unsigned int v1:1; unsigned short :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu1c { unsigned int v1:1; unsigned short :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu1i { unsigned int v1:1; unsigned short :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu1ll { unsigned int v1:1; unsigned short :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu1s { unsigned int v1:1; unsigned short :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu31i { unsigned int v1:1; unsigned short :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu31ll { unsigned int v1:1; unsigned short :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu32i { unsigned int v1:1; unsigned short :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu32ll { unsigned int v1:1; unsigned short :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu33 { unsigned int v1:1; unsigned short :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu7c { unsigned int v1:1; unsigned short :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu7i { unsigned int v1:1; unsigned short :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu7ll { unsigned int v1:1; unsigned short :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu7s { unsigned int v1:1; unsigned short :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu8c { unsigned int v1:1; unsigned short :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu8i { unsigned int v1:1; unsigned short :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu8ll { unsigned int v1:1; unsigned short :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu8s { unsigned int v1:1; unsigned short :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu9i { unsigned int v1:1; unsigned short :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu9ll { unsigned int v1:1; unsigned short :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu1i_BFu0s_BFu9s { unsigned int v1:1; unsigned short :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu1i_BFu0s_C { unsigned int v1:1; unsigned short :0; char v2; };
struct __attribute__((packed)) aBFu1i_BFu0s_D { unsigned int v1:1; unsigned short :0; double v2; };
struct __attribute__((packed)) aBFu1i_BFu0s_F { unsigned int v1:1; unsigned short :0; float v2; };
struct __attribute__((packed)) aBFu1i_BFu0s_I { unsigned int v1:1; unsigned short :0; int v2; };
struct __attribute__((packed)) aBFu1i_BFu0s_Ip { unsigned int v1:1; unsigned short :0; int * v2; };
struct __attribute__((packed)) aBFu1i_BFu0s_L { unsigned int v1:1; unsigned short :0; long long v2; };
struct __attribute__((packed)) aBFu1i_BFu0s_S { unsigned int v1:1; unsigned short :0; short v2; };
struct __attribute__((packed)) aBFu1i_BFu0s_Uc { unsigned int v1:1; unsigned short :0; unsigned char v2; };
struct __attribute__((packed)) aBFu1i_BFu0s_Ui { unsigned int v1:1; unsigned short :0; unsigned int v2; };
struct __attribute__((packed)) aBFu1i_BFu0s_Ul { unsigned int v1:1; unsigned short :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu1i_BFu0s_Us { unsigned int v1:1; unsigned short :0; unsigned short v2; };
struct __attribute__((packed)) aBFu1i_BFu0s_Vp { unsigned int v1:1; unsigned short :0; void * v2; };
struct __attribute__((packed)) aBFu1i_BFu15i_BFu0c { unsigned int v1:1; unsigned int v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu15i_BFu0i { unsigned int v1:1; unsigned int v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu15i_BFu0ll { unsigned int v1:1; unsigned int v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu15i_BFu0s { unsigned int v1:1; unsigned int v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu15ll_BFu0c { unsigned int v1:1; unsigned long long v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu15ll_BFu0i { unsigned int v1:1; unsigned long long v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu15ll_BFu0ll { unsigned int v1:1; unsigned long long v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu15ll_BFu0s { unsigned int v1:1; unsigned long long v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu15s_BFu0c { unsigned int v1:1; unsigned short v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu15s_BFu0i { unsigned int v1:1; unsigned short v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu15s_BFu0ll { unsigned int v1:1; unsigned short v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu15s_BFu0s { unsigned int v1:1; unsigned short v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu16i_BFu0c { unsigned int v1:1; unsigned int v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu16i_BFu0i { unsigned int v1:1; unsigned int v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu16i_BFu0ll { unsigned int v1:1; unsigned int v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu16i_BFu0s { unsigned int v1:1; unsigned int v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu16ll_BFu0c { unsigned int v1:1; unsigned long long v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu16ll_BFu0i { unsigned int v1:1; unsigned long long v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu16ll_BFu0ll { unsigned int v1:1; unsigned long long v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu16ll_BFu0s { unsigned int v1:1; unsigned long long v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu16s_BFu0c { unsigned int v1:1; unsigned short v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu16s_BFu0i { unsigned int v1:1; unsigned short v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu16s_BFu0ll { unsigned int v1:1; unsigned short v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu16s_BFu0s { unsigned int v1:1; unsigned short v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu17i_BFu0c { unsigned int v1:1; unsigned int v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu17i_BFu0i { unsigned int v1:1; unsigned int v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu17i_BFu0ll { unsigned int v1:1; unsigned int v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu17i_BFu0s { unsigned int v1:1; unsigned int v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu17ll_BFu0c { unsigned int v1:1; unsigned long long v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu17ll_BFu0i { unsigned int v1:1; unsigned long long v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu17ll_BFu0ll { unsigned int v1:1; unsigned long long v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu17ll_BFu0s { unsigned int v1:1; unsigned long long v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu1c_BFu0c { unsigned int v1:1; unsigned char v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu1c_BFu0i { unsigned int v1:1; unsigned char v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu1c_BFu0ll { unsigned int v1:1; unsigned char v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu1c_BFu0s { unsigned int v1:1; unsigned char v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu1i_BFu0c { unsigned int v1:1; unsigned int v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu1i_BFu0i { unsigned int v1:1; unsigned int v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu1i_BFu0ll { unsigned int v1:1; unsigned int v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu1i_BFu0s { unsigned int v1:1; unsigned int v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu1ll_BFu0c { unsigned int v1:1; unsigned long long v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu1ll_BFu0i { unsigned int v1:1; unsigned long long v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu1ll_BFu0ll { unsigned int v1:1; unsigned long long v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu1ll_BFu0s { unsigned int v1:1; unsigned long long v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu1s_BFu0c { unsigned int v1:1; unsigned short v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu1s_BFu0i { unsigned int v1:1; unsigned short v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu1s_BFu0ll { unsigned int v1:1; unsigned short v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu1s_BFu0s { unsigned int v1:1; unsigned short v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu31i_BFu0c { unsigned int v1:1; unsigned int v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu31i_BFu0i { unsigned int v1:1; unsigned int v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu31i_BFu0ll { unsigned int v1:1; unsigned int v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu31i_BFu0s { unsigned int v1:1; unsigned int v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu31ll_BFu0c { unsigned int v1:1; unsigned long long v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu31ll_BFu0i { unsigned int v1:1; unsigned long long v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu31ll_BFu0ll { unsigned int v1:1; unsigned long long v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu31ll_BFu0s { unsigned int v1:1; unsigned long long v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu32i_BFu0c { unsigned int v1:1; unsigned int v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu32i_BFu0i { unsigned int v1:1; unsigned int v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu32i_BFu0ll { unsigned int v1:1; unsigned int v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu32i_BFu0s { unsigned int v1:1; unsigned int v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu32ll_BFu0c { unsigned int v1:1; unsigned long long v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu32ll_BFu0i { unsigned int v1:1; unsigned long long v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu32ll_BFu0ll { unsigned int v1:1; unsigned long long v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu32ll_BFu0s { unsigned int v1:1; unsigned long long v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu33_BFu0c { unsigned int v1:1; unsigned long long v2:33; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu33_BFu0i { unsigned int v1:1; unsigned long long v2:33; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu33_BFu0ll { unsigned int v1:1; unsigned long long v2:33; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu33_BFu0s { unsigned int v1:1; unsigned long long v2:33; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu7c_BFu0c { unsigned int v1:1; unsigned char v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu7c_BFu0i { unsigned int v1:1; unsigned char v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu7c_BFu0ll { unsigned int v1:1; unsigned char v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu7c_BFu0s { unsigned int v1:1; unsigned char v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu7i_BFu0c { unsigned int v1:1; unsigned int v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu7i_BFu0i { unsigned int v1:1; unsigned int v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu7i_BFu0ll { unsigned int v1:1; unsigned int v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu7i_BFu0s { unsigned int v1:1; unsigned int v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu7ll_BFu0c { unsigned int v1:1; unsigned long long v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu7ll_BFu0i { unsigned int v1:1; unsigned long long v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu7ll_BFu0ll { unsigned int v1:1; unsigned long long v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu7ll_BFu0s { unsigned int v1:1; unsigned long long v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu7s_BFu0c { unsigned int v1:1; unsigned short v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu7s_BFu0i { unsigned int v1:1; unsigned short v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu7s_BFu0ll { unsigned int v1:1; unsigned short v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu7s_BFu0s { unsigned int v1:1; unsigned short v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu8c_BFu0c { unsigned int v1:1; unsigned char v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu8c_BFu0i { unsigned int v1:1; unsigned char v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu8c_BFu0ll { unsigned int v1:1; unsigned char v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu8c_BFu0s { unsigned int v1:1; unsigned char v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu8i_BFu0c { unsigned int v1:1; unsigned int v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu8i_BFu0i { unsigned int v1:1; unsigned int v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu8i_BFu0ll { unsigned int v1:1; unsigned int v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu8i_BFu0s { unsigned int v1:1; unsigned int v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu8ll_BFu0c { unsigned int v1:1; unsigned long long v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu8ll_BFu0i { unsigned int v1:1; unsigned long long v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu8ll_BFu0ll { unsigned int v1:1; unsigned long long v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu8ll_BFu0s { unsigned int v1:1; unsigned long long v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu8s_BFu0c { unsigned int v1:1; unsigned short v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu8s_BFu0i { unsigned int v1:1; unsigned short v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu8s_BFu0ll { unsigned int v1:1; unsigned short v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu8s_BFu0s { unsigned int v1:1; unsigned short v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu9i_BFu0c { unsigned int v1:1; unsigned int v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu9i_BFu0i { unsigned int v1:1; unsigned int v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu9i_BFu0ll { unsigned int v1:1; unsigned int v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu9i_BFu0s { unsigned int v1:1; unsigned int v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu9ll_BFu0c { unsigned int v1:1; unsigned long long v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu9ll_BFu0i { unsigned int v1:1; unsigned long long v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu9ll_BFu0ll { unsigned int v1:1; unsigned long long v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu9ll_BFu0s { unsigned int v1:1; unsigned long long v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_BFu9s_BFu0c { unsigned int v1:1; unsigned short v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_BFu9s_BFu0i { unsigned int v1:1; unsigned short v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_BFu9s_BFu0ll { unsigned int v1:1; unsigned short v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_BFu9s_BFu0s { unsigned int v1:1; unsigned short v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_C_BFu0c { unsigned int v1:1; char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_C_BFu0i { unsigned int v1:1; char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_C_BFu0ll { unsigned int v1:1; char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_C_BFu0s { unsigned int v1:1; char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_D_BFu0c { unsigned int v1:1; double v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_D_BFu0i { unsigned int v1:1; double v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_D_BFu0ll { unsigned int v1:1; double v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_D_BFu0s { unsigned int v1:1; double v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_F_BFu0c { unsigned int v1:1; float v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_F_BFu0i { unsigned int v1:1; float v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_F_BFu0ll { unsigned int v1:1; float v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_F_BFu0s { unsigned int v1:1; float v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_I_BFu0c { unsigned int v1:1; int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_I_BFu0i { unsigned int v1:1; int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_I_BFu0ll { unsigned int v1:1; int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_I_BFu0s { unsigned int v1:1; int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_Ip_BFu0c { unsigned int v1:1; int * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_Ip_BFu0i { unsigned int v1:1; int * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_Ip_BFu0ll { unsigned int v1:1; int * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_Ip_BFu0s { unsigned int v1:1; int * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_L_BFu0c { unsigned int v1:1; long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_L_BFu0i { unsigned int v1:1; long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_L_BFu0ll { unsigned int v1:1; long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_L_BFu0s { unsigned int v1:1; long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_S_BFu0c { unsigned int v1:1; short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_S_BFu0i { unsigned int v1:1; short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_S_BFu0ll { unsigned int v1:1; short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_S_BFu0s { unsigned int v1:1; short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_Uc_BFu0c { unsigned int v1:1; unsigned char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_Uc_BFu0i { unsigned int v1:1; unsigned char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_Uc_BFu0ll { unsigned int v1:1; unsigned char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_Uc_BFu0s { unsigned int v1:1; unsigned char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_Ui_BFu0c { unsigned int v1:1; unsigned int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_Ui_BFu0i { unsigned int v1:1; unsigned int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_Ui_BFu0ll { unsigned int v1:1; unsigned int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_Ui_BFu0s { unsigned int v1:1; unsigned int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_Ul_BFu0c { unsigned int v1:1; unsigned long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_Ul_BFu0i { unsigned int v1:1; unsigned long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_Ul_BFu0ll { unsigned int v1:1; unsigned long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_Ul_BFu0s { unsigned int v1:1; unsigned long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_Us_BFu0c { unsigned int v1:1; unsigned short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_Us_BFu0i { unsigned int v1:1; unsigned short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_Us_BFu0ll { unsigned int v1:1; unsigned short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_Us_BFu0s { unsigned int v1:1; unsigned short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1i_Vp_BFu0c { unsigned int v1:1; void * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1i_Vp_BFu0i { unsigned int v1:1; void * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1i_Vp_BFu0ll { unsigned int v1:1; void * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1i_Vp_BFu0s { unsigned int v1:1; void * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu0c { unsigned long long v1:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu0c { unsigned long long v1:1; unsigned char :0; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu0i { unsigned long long v1:1; unsigned char :0; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu0ll { unsigned long long v1:1; unsigned char :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu0s { unsigned long long v1:1; unsigned char :0; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu15i { unsigned long long v1:1; unsigned char :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu15ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu15s { unsigned long long v1:1; unsigned char :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu16i { unsigned long long v1:1; unsigned char :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu16ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu16s { unsigned long long v1:1; unsigned char :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu17i { unsigned long long v1:1; unsigned char :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu17ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu1c { unsigned long long v1:1; unsigned char :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu1i { unsigned long long v1:1; unsigned char :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu1ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu1s { unsigned long long v1:1; unsigned char :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu31i { unsigned long long v1:1; unsigned char :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu31ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu32i { unsigned long long v1:1; unsigned char :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu32ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu33 { unsigned long long v1:1; unsigned char :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu7c { unsigned long long v1:1; unsigned char :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu7i { unsigned long long v1:1; unsigned char :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu7ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu7s { unsigned long long v1:1; unsigned char :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu8c { unsigned long long v1:1; unsigned char :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu8i { unsigned long long v1:1; unsigned char :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu8ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu8s { unsigned long long v1:1; unsigned char :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu9i { unsigned long long v1:1; unsigned char :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu9ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu1ll_BFu0c_BFu9s { unsigned long long v1:1; unsigned char :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu1ll_BFu0c_C { unsigned long long v1:1; unsigned char :0; char v2; };
struct __attribute__((packed)) aBFu1ll_BFu0c_D { unsigned long long v1:1; unsigned char :0; double v2; };
struct __attribute__((packed)) aBFu1ll_BFu0c_F { unsigned long long v1:1; unsigned char :0; float v2; };
struct __attribute__((packed)) aBFu1ll_BFu0c_I { unsigned long long v1:1; unsigned char :0; int v2; };
struct __attribute__((packed)) aBFu1ll_BFu0c_Ip { unsigned long long v1:1; unsigned char :0; int * v2; };
struct __attribute__((packed)) aBFu1ll_BFu0c_L { unsigned long long v1:1; unsigned char :0; long long v2; };
struct __attribute__((packed)) aBFu1ll_BFu0c_S { unsigned long long v1:1; unsigned char :0; short v2; };
struct __attribute__((packed)) aBFu1ll_BFu0c_Uc { unsigned long long v1:1; unsigned char :0; unsigned char v2; };
struct __attribute__((packed)) aBFu1ll_BFu0c_Ui { unsigned long long v1:1; unsigned char :0; unsigned int v2; };
struct __attribute__((packed)) aBFu1ll_BFu0c_Ul { unsigned long long v1:1; unsigned char :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu1ll_BFu0c_Us { unsigned long long v1:1; unsigned char :0; unsigned short v2; };
struct __attribute__((packed)) aBFu1ll_BFu0c_Vp { unsigned long long v1:1; unsigned char :0; void * v2; };
struct __attribute__((packed)) aBFu1ll_BFu0i { unsigned long long v1:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu0c { unsigned long long v1:1; unsigned int :0; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu0i { unsigned long long v1:1; unsigned int :0; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu0ll { unsigned long long v1:1; unsigned int :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu0s { unsigned long long v1:1; unsigned int :0; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu15i { unsigned long long v1:1; unsigned int :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu15ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu15s { unsigned long long v1:1; unsigned int :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu16i { unsigned long long v1:1; unsigned int :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu16ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu16s { unsigned long long v1:1; unsigned int :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu17i { unsigned long long v1:1; unsigned int :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu17ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu1c { unsigned long long v1:1; unsigned int :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu1i { unsigned long long v1:1; unsigned int :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu1ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu1s { unsigned long long v1:1; unsigned int :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu31i { unsigned long long v1:1; unsigned int :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu31ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu32i { unsigned long long v1:1; unsigned int :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu32ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu33 { unsigned long long v1:1; unsigned int :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu7c { unsigned long long v1:1; unsigned int :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu7i { unsigned long long v1:1; unsigned int :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu7ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu7s { unsigned long long v1:1; unsigned int :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu8c { unsigned long long v1:1; unsigned int :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu8i { unsigned long long v1:1; unsigned int :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu8ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu8s { unsigned long long v1:1; unsigned int :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu9i { unsigned long long v1:1; unsigned int :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu9ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu1ll_BFu0i_BFu9s { unsigned long long v1:1; unsigned int :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu1ll_BFu0i_C { unsigned long long v1:1; unsigned int :0; char v2; };
struct __attribute__((packed)) aBFu1ll_BFu0i_D { unsigned long long v1:1; unsigned int :0; double v2; };
struct __attribute__((packed)) aBFu1ll_BFu0i_F { unsigned long long v1:1; unsigned int :0; float v2; };
struct __attribute__((packed)) aBFu1ll_BFu0i_I { unsigned long long v1:1; unsigned int :0; int v2; };
struct __attribute__((packed)) aBFu1ll_BFu0i_Ip { unsigned long long v1:1; unsigned int :0; int * v2; };
struct __attribute__((packed)) aBFu1ll_BFu0i_L { unsigned long long v1:1; unsigned int :0; long long v2; };
struct __attribute__((packed)) aBFu1ll_BFu0i_S { unsigned long long v1:1; unsigned int :0; short v2; };
struct __attribute__((packed)) aBFu1ll_BFu0i_Uc { unsigned long long v1:1; unsigned int :0; unsigned char v2; };
struct __attribute__((packed)) aBFu1ll_BFu0i_Ui { unsigned long long v1:1; unsigned int :0; unsigned int v2; };
struct __attribute__((packed)) aBFu1ll_BFu0i_Ul { unsigned long long v1:1; unsigned int :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu1ll_BFu0i_Us { unsigned long long v1:1; unsigned int :0; unsigned short v2; };
struct __attribute__((packed)) aBFu1ll_BFu0i_Vp { unsigned long long v1:1; unsigned int :0; void * v2; };
struct __attribute__((packed)) aBFu1ll_BFu0ll { unsigned long long v1:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu0c { unsigned long long v1:1; unsigned long long :0; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu0i { unsigned long long v1:1; unsigned long long :0; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu0ll { unsigned long long v1:1; unsigned long long :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu0s { unsigned long long v1:1; unsigned long long :0; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu15i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu15ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu15s { unsigned long long v1:1; unsigned long long :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu16i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu16ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu16s { unsigned long long v1:1; unsigned long long :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu17i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu17ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu1c { unsigned long long v1:1; unsigned long long :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu1i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu1ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu1s { unsigned long long v1:1; unsigned long long :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu31i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu31ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu32i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu32ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu33 { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu7c { unsigned long long v1:1; unsigned long long :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu7i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu7ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu7s { unsigned long long v1:1; unsigned long long :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu8c { unsigned long long v1:1; unsigned long long :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu8i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu8ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu8s { unsigned long long v1:1; unsigned long long :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu9i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu9ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_BFu9s { unsigned long long v1:1; unsigned long long :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_C { unsigned long long v1:1; unsigned long long :0; char v2; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_D { unsigned long long v1:1; unsigned long long :0; double v2; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_F { unsigned long long v1:1; unsigned long long :0; float v2; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_I { unsigned long long v1:1; unsigned long long :0; int v2; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_Ip { unsigned long long v1:1; unsigned long long :0; int * v2; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_L { unsigned long long v1:1; unsigned long long :0; long long v2; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_S { unsigned long long v1:1; unsigned long long :0; short v2; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_Uc { unsigned long long v1:1; unsigned long long :0; unsigned char v2; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_Ui { unsigned long long v1:1; unsigned long long :0; unsigned int v2; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_Ul { unsigned long long v1:1; unsigned long long :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_Us { unsigned long long v1:1; unsigned long long :0; unsigned short v2; };
struct __attribute__((packed)) aBFu1ll_BFu0ll_Vp { unsigned long long v1:1; unsigned long long :0; void * v2; };
struct __attribute__((packed)) aBFu1ll_BFu0s { unsigned long long v1:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu0c { unsigned long long v1:1; unsigned short :0; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu0i { unsigned long long v1:1; unsigned short :0; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu0ll { unsigned long long v1:1; unsigned short :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu0s { unsigned long long v1:1; unsigned short :0; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu15i { unsigned long long v1:1; unsigned short :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu15ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu15s { unsigned long long v1:1; unsigned short :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu16i { unsigned long long v1:1; unsigned short :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu16ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu16s { unsigned long long v1:1; unsigned short :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu17i { unsigned long long v1:1; unsigned short :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu17ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu1c { unsigned long long v1:1; unsigned short :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu1i { unsigned long long v1:1; unsigned short :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu1ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu1s { unsigned long long v1:1; unsigned short :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu31i { unsigned long long v1:1; unsigned short :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu31ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu32i { unsigned long long v1:1; unsigned short :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu32ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu33 { unsigned long long v1:1; unsigned short :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu7c { unsigned long long v1:1; unsigned short :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu7i { unsigned long long v1:1; unsigned short :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu7ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu7s { unsigned long long v1:1; unsigned short :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu8c { unsigned long long v1:1; unsigned short :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu8i { unsigned long long v1:1; unsigned short :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu8ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu8s { unsigned long long v1:1; unsigned short :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu9i { unsigned long long v1:1; unsigned short :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu9ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu1ll_BFu0s_BFu9s { unsigned long long v1:1; unsigned short :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu1ll_BFu0s_C { unsigned long long v1:1; unsigned short :0; char v2; };
struct __attribute__((packed)) aBFu1ll_BFu0s_D { unsigned long long v1:1; unsigned short :0; double v2; };
struct __attribute__((packed)) aBFu1ll_BFu0s_F { unsigned long long v1:1; unsigned short :0; float v2; };
struct __attribute__((packed)) aBFu1ll_BFu0s_I { unsigned long long v1:1; unsigned short :0; int v2; };
struct __attribute__((packed)) aBFu1ll_BFu0s_Ip { unsigned long long v1:1; unsigned short :0; int * v2; };
struct __attribute__((packed)) aBFu1ll_BFu0s_L { unsigned long long v1:1; unsigned short :0; long long v2; };
struct __attribute__((packed)) aBFu1ll_BFu0s_S { unsigned long long v1:1; unsigned short :0; short v2; };
struct __attribute__((packed)) aBFu1ll_BFu0s_Uc { unsigned long long v1:1; unsigned short :0; unsigned char v2; };
struct __attribute__((packed)) aBFu1ll_BFu0s_Ui { unsigned long long v1:1; unsigned short :0; unsigned int v2; };
struct __attribute__((packed)) aBFu1ll_BFu0s_Ul { unsigned long long v1:1; unsigned short :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu1ll_BFu0s_Us { unsigned long long v1:1; unsigned short :0; unsigned short v2; };
struct __attribute__((packed)) aBFu1ll_BFu0s_Vp { unsigned long long v1:1; unsigned short :0; void * v2; };
struct __attribute__((packed)) aBFu1ll_BFu15i_BFu0c { unsigned long long v1:1; unsigned int v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu15i_BFu0i { unsigned long long v1:1; unsigned int v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu15i_BFu0ll { unsigned long long v1:1; unsigned int v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu15i_BFu0s { unsigned long long v1:1; unsigned int v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu15ll_BFu0c { unsigned long long v1:1; unsigned long long v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu15ll_BFu0i { unsigned long long v1:1; unsigned long long v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu15ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu15ll_BFu0s { unsigned long long v1:1; unsigned long long v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu15s_BFu0c { unsigned long long v1:1; unsigned short v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu15s_BFu0i { unsigned long long v1:1; unsigned short v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu15s_BFu0ll { unsigned long long v1:1; unsigned short v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu15s_BFu0s { unsigned long long v1:1; unsigned short v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu16i_BFu0c { unsigned long long v1:1; unsigned int v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu16i_BFu0i { unsigned long long v1:1; unsigned int v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu16i_BFu0ll { unsigned long long v1:1; unsigned int v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu16i_BFu0s { unsigned long long v1:1; unsigned int v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu16ll_BFu0c { unsigned long long v1:1; unsigned long long v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu16ll_BFu0i { unsigned long long v1:1; unsigned long long v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu16ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu16ll_BFu0s { unsigned long long v1:1; unsigned long long v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu16s_BFu0c { unsigned long long v1:1; unsigned short v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu16s_BFu0i { unsigned long long v1:1; unsigned short v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu16s_BFu0ll { unsigned long long v1:1; unsigned short v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu16s_BFu0s { unsigned long long v1:1; unsigned short v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu17i_BFu0c { unsigned long long v1:1; unsigned int v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu17i_BFu0i { unsigned long long v1:1; unsigned int v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu17i_BFu0ll { unsigned long long v1:1; unsigned int v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu17i_BFu0s { unsigned long long v1:1; unsigned int v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu17ll_BFu0c { unsigned long long v1:1; unsigned long long v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu17ll_BFu0i { unsigned long long v1:1; unsigned long long v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu17ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu17ll_BFu0s { unsigned long long v1:1; unsigned long long v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu1c_BFu0c { unsigned long long v1:1; unsigned char v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu1c_BFu0i { unsigned long long v1:1; unsigned char v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu1c_BFu0ll { unsigned long long v1:1; unsigned char v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu1c_BFu0s { unsigned long long v1:1; unsigned char v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu1i_BFu0c { unsigned long long v1:1; unsigned int v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu1i_BFu0i { unsigned long long v1:1; unsigned int v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu1i_BFu0ll { unsigned long long v1:1; unsigned int v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu1i_BFu0s { unsigned long long v1:1; unsigned int v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu1ll_BFu0c { unsigned long long v1:1; unsigned long long v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu1ll_BFu0i { unsigned long long v1:1; unsigned long long v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu1ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu1ll_BFu0s { unsigned long long v1:1; unsigned long long v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu1s_BFu0c { unsigned long long v1:1; unsigned short v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu1s_BFu0i { unsigned long long v1:1; unsigned short v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu1s_BFu0ll { unsigned long long v1:1; unsigned short v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu1s_BFu0s { unsigned long long v1:1; unsigned short v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu31i_BFu0c { unsigned long long v1:1; unsigned int v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu31i_BFu0i { unsigned long long v1:1; unsigned int v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu31i_BFu0ll { unsigned long long v1:1; unsigned int v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu31i_BFu0s { unsigned long long v1:1; unsigned int v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu31ll_BFu0c { unsigned long long v1:1; unsigned long long v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu31ll_BFu0i { unsigned long long v1:1; unsigned long long v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu31ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu31ll_BFu0s { unsigned long long v1:1; unsigned long long v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu32i_BFu0c { unsigned long long v1:1; unsigned int v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu32i_BFu0i { unsigned long long v1:1; unsigned int v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu32i_BFu0ll { unsigned long long v1:1; unsigned int v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu32i_BFu0s { unsigned long long v1:1; unsigned int v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu32ll_BFu0c { unsigned long long v1:1; unsigned long long v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu32ll_BFu0i { unsigned long long v1:1; unsigned long long v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu32ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu32ll_BFu0s { unsigned long long v1:1; unsigned long long v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu33_BFu0c { unsigned long long v1:1; unsigned long long v2:33; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu33_BFu0i { unsigned long long v1:1; unsigned long long v2:33; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu33_BFu0ll { unsigned long long v1:1; unsigned long long v2:33; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu33_BFu0s { unsigned long long v1:1; unsigned long long v2:33; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu7c_BFu0c { unsigned long long v1:1; unsigned char v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu7c_BFu0i { unsigned long long v1:1; unsigned char v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu7c_BFu0ll { unsigned long long v1:1; unsigned char v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu7c_BFu0s { unsigned long long v1:1; unsigned char v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu7i_BFu0c { unsigned long long v1:1; unsigned int v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu7i_BFu0i { unsigned long long v1:1; unsigned int v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu7i_BFu0ll { unsigned long long v1:1; unsigned int v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu7i_BFu0s { unsigned long long v1:1; unsigned int v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu7ll_BFu0c { unsigned long long v1:1; unsigned long long v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu7ll_BFu0i { unsigned long long v1:1; unsigned long long v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu7ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu7ll_BFu0s { unsigned long long v1:1; unsigned long long v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu7s_BFu0c { unsigned long long v1:1; unsigned short v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu7s_BFu0i { unsigned long long v1:1; unsigned short v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu7s_BFu0ll { unsigned long long v1:1; unsigned short v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu7s_BFu0s { unsigned long long v1:1; unsigned short v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu8c_BFu0c { unsigned long long v1:1; unsigned char v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu8c_BFu0i { unsigned long long v1:1; unsigned char v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu8c_BFu0ll { unsigned long long v1:1; unsigned char v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu8c_BFu0s { unsigned long long v1:1; unsigned char v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu8i_BFu0c { unsigned long long v1:1; unsigned int v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu8i_BFu0i { unsigned long long v1:1; unsigned int v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu8i_BFu0ll { unsigned long long v1:1; unsigned int v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu8i_BFu0s { unsigned long long v1:1; unsigned int v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu8ll_BFu0c { unsigned long long v1:1; unsigned long long v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu8ll_BFu0i { unsigned long long v1:1; unsigned long long v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu8ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu8ll_BFu0s { unsigned long long v1:1; unsigned long long v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu8s_BFu0c { unsigned long long v1:1; unsigned short v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu8s_BFu0i { unsigned long long v1:1; unsigned short v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu8s_BFu0ll { unsigned long long v1:1; unsigned short v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu8s_BFu0s { unsigned long long v1:1; unsigned short v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu9i_BFu0c { unsigned long long v1:1; unsigned int v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu9i_BFu0i { unsigned long long v1:1; unsigned int v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu9i_BFu0ll { unsigned long long v1:1; unsigned int v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu9i_BFu0s { unsigned long long v1:1; unsigned int v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu9ll_BFu0c { unsigned long long v1:1; unsigned long long v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu9ll_BFu0i { unsigned long long v1:1; unsigned long long v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu9ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu9ll_BFu0s { unsigned long long v1:1; unsigned long long v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_BFu9s_BFu0c { unsigned long long v1:1; unsigned short v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_BFu9s_BFu0i { unsigned long long v1:1; unsigned short v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_BFu9s_BFu0ll { unsigned long long v1:1; unsigned short v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_BFu9s_BFu0s { unsigned long long v1:1; unsigned short v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_C_BFu0c { unsigned long long v1:1; char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_C_BFu0i { unsigned long long v1:1; char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_C_BFu0ll { unsigned long long v1:1; char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_C_BFu0s { unsigned long long v1:1; char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_D_BFu0c { unsigned long long v1:1; double v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_D_BFu0i { unsigned long long v1:1; double v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_D_BFu0ll { unsigned long long v1:1; double v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_D_BFu0s { unsigned long long v1:1; double v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_F_BFu0c { unsigned long long v1:1; float v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_F_BFu0i { unsigned long long v1:1; float v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_F_BFu0ll { unsigned long long v1:1; float v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_F_BFu0s { unsigned long long v1:1; float v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_I_BFu0c { unsigned long long v1:1; int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_I_BFu0i { unsigned long long v1:1; int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_I_BFu0ll { unsigned long long v1:1; int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_I_BFu0s { unsigned long long v1:1; int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_Ip_BFu0c { unsigned long long v1:1; int * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_Ip_BFu0i { unsigned long long v1:1; int * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_Ip_BFu0ll { unsigned long long v1:1; int * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_Ip_BFu0s { unsigned long long v1:1; int * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_L_BFu0c { unsigned long long v1:1; long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_L_BFu0i { unsigned long long v1:1; long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_L_BFu0ll { unsigned long long v1:1; long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_L_BFu0s { unsigned long long v1:1; long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_S_BFu0c { unsigned long long v1:1; short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_S_BFu0i { unsigned long long v1:1; short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_S_BFu0ll { unsigned long long v1:1; short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_S_BFu0s { unsigned long long v1:1; short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_Uc_BFu0c { unsigned long long v1:1; unsigned char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_Uc_BFu0i { unsigned long long v1:1; unsigned char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_Uc_BFu0ll { unsigned long long v1:1; unsigned char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_Uc_BFu0s { unsigned long long v1:1; unsigned char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_Ui_BFu0c { unsigned long long v1:1; unsigned int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_Ui_BFu0i { unsigned long long v1:1; unsigned int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_Ui_BFu0ll { unsigned long long v1:1; unsigned int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_Ui_BFu0s { unsigned long long v1:1; unsigned int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_Ul_BFu0c { unsigned long long v1:1; unsigned long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_Ul_BFu0i { unsigned long long v1:1; unsigned long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_Ul_BFu0ll { unsigned long long v1:1; unsigned long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_Ul_BFu0s { unsigned long long v1:1; unsigned long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_Us_BFu0c { unsigned long long v1:1; unsigned short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_Us_BFu0i { unsigned long long v1:1; unsigned short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_Us_BFu0ll { unsigned long long v1:1; unsigned short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_Us_BFu0s { unsigned long long v1:1; unsigned short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1ll_Vp_BFu0c { unsigned long long v1:1; void * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1ll_Vp_BFu0i { unsigned long long v1:1; void * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1ll_Vp_BFu0ll { unsigned long long v1:1; void * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1ll_Vp_BFu0s { unsigned long long v1:1; void * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu0c { unsigned short v1:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu0c { unsigned short v1:1; unsigned char :0; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu0i { unsigned short v1:1; unsigned char :0; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu0ll { unsigned short v1:1; unsigned char :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu0s { unsigned short v1:1; unsigned char :0; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu15i { unsigned short v1:1; unsigned char :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu15ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu15s { unsigned short v1:1; unsigned char :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu16i { unsigned short v1:1; unsigned char :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu16ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu16s { unsigned short v1:1; unsigned char :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu17i { unsigned short v1:1; unsigned char :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu17ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu1c { unsigned short v1:1; unsigned char :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu1i { unsigned short v1:1; unsigned char :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu1ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu1s { unsigned short v1:1; unsigned char :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu31i { unsigned short v1:1; unsigned char :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu31ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu32i { unsigned short v1:1; unsigned char :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu32ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu33 { unsigned short v1:1; unsigned char :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu7c { unsigned short v1:1; unsigned char :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu7i { unsigned short v1:1; unsigned char :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu7ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu7s { unsigned short v1:1; unsigned char :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu8c { unsigned short v1:1; unsigned char :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu8i { unsigned short v1:1; unsigned char :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu8ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu8s { unsigned short v1:1; unsigned char :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu9i { unsigned short v1:1; unsigned char :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu9ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu1s_BFu0c_BFu9s { unsigned short v1:1; unsigned char :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu1s_BFu0c_C { unsigned short v1:1; unsigned char :0; char v2; };
struct __attribute__((packed)) aBFu1s_BFu0c_D { unsigned short v1:1; unsigned char :0; double v2; };
struct __attribute__((packed)) aBFu1s_BFu0c_F { unsigned short v1:1; unsigned char :0; float v2; };
struct __attribute__((packed)) aBFu1s_BFu0c_I { unsigned short v1:1; unsigned char :0; int v2; };
struct __attribute__((packed)) aBFu1s_BFu0c_Ip { unsigned short v1:1; unsigned char :0; int * v2; };
struct __attribute__((packed)) aBFu1s_BFu0c_L { unsigned short v1:1; unsigned char :0; long long v2; };
struct __attribute__((packed)) aBFu1s_BFu0c_S { unsigned short v1:1; unsigned char :0; short v2; };
struct __attribute__((packed)) aBFu1s_BFu0c_Uc { unsigned short v1:1; unsigned char :0; unsigned char v2; };
struct __attribute__((packed)) aBFu1s_BFu0c_Ui { unsigned short v1:1; unsigned char :0; unsigned int v2; };
struct __attribute__((packed)) aBFu1s_BFu0c_Ul { unsigned short v1:1; unsigned char :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu1s_BFu0c_Us { unsigned short v1:1; unsigned char :0; unsigned short v2; };
struct __attribute__((packed)) aBFu1s_BFu0c_Vp { unsigned short v1:1; unsigned char :0; void * v2; };
struct __attribute__((packed)) aBFu1s_BFu0i { unsigned short v1:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu0c { unsigned short v1:1; unsigned int :0; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu0i { unsigned short v1:1; unsigned int :0; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu0ll { unsigned short v1:1; unsigned int :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu0s { unsigned short v1:1; unsigned int :0; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu15i { unsigned short v1:1; unsigned int :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu15ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu15s { unsigned short v1:1; unsigned int :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu16i { unsigned short v1:1; unsigned int :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu16ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu16s { unsigned short v1:1; unsigned int :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu17i { unsigned short v1:1; unsigned int :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu17ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu1c { unsigned short v1:1; unsigned int :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu1i { unsigned short v1:1; unsigned int :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu1ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu1s { unsigned short v1:1; unsigned int :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu31i { unsigned short v1:1; unsigned int :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu31ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu32i { unsigned short v1:1; unsigned int :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu32ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu33 { unsigned short v1:1; unsigned int :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu7c { unsigned short v1:1; unsigned int :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu7i { unsigned short v1:1; unsigned int :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu7ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu7s { unsigned short v1:1; unsigned int :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu8c { unsigned short v1:1; unsigned int :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu8i { unsigned short v1:1; unsigned int :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu8ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu8s { unsigned short v1:1; unsigned int :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu9i { unsigned short v1:1; unsigned int :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu9ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu1s_BFu0i_BFu9s { unsigned short v1:1; unsigned int :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu1s_BFu0i_C { unsigned short v1:1; unsigned int :0; char v2; };
struct __attribute__((packed)) aBFu1s_BFu0i_D { unsigned short v1:1; unsigned int :0; double v2; };
struct __attribute__((packed)) aBFu1s_BFu0i_F { unsigned short v1:1; unsigned int :0; float v2; };
struct __attribute__((packed)) aBFu1s_BFu0i_I { unsigned short v1:1; unsigned int :0; int v2; };
struct __attribute__((packed)) aBFu1s_BFu0i_Ip { unsigned short v1:1; unsigned int :0; int * v2; };
struct __attribute__((packed)) aBFu1s_BFu0i_L { unsigned short v1:1; unsigned int :0; long long v2; };
struct __attribute__((packed)) aBFu1s_BFu0i_S { unsigned short v1:1; unsigned int :0; short v2; };
struct __attribute__((packed)) aBFu1s_BFu0i_Uc { unsigned short v1:1; unsigned int :0; unsigned char v2; };
struct __attribute__((packed)) aBFu1s_BFu0i_Ui { unsigned short v1:1; unsigned int :0; unsigned int v2; };
struct __attribute__((packed)) aBFu1s_BFu0i_Ul { unsigned short v1:1; unsigned int :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu1s_BFu0i_Us { unsigned short v1:1; unsigned int :0; unsigned short v2; };
struct __attribute__((packed)) aBFu1s_BFu0i_Vp { unsigned short v1:1; unsigned int :0; void * v2; };
struct __attribute__((packed)) aBFu1s_BFu0ll { unsigned short v1:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu0c { unsigned short v1:1; unsigned long long :0; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu0i { unsigned short v1:1; unsigned long long :0; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu0ll { unsigned short v1:1; unsigned long long :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu0s { unsigned short v1:1; unsigned long long :0; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu15i { unsigned short v1:1; unsigned long long :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu15ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu15s { unsigned short v1:1; unsigned long long :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu16i { unsigned short v1:1; unsigned long long :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu16ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu16s { unsigned short v1:1; unsigned long long :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu17i { unsigned short v1:1; unsigned long long :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu17ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu1c { unsigned short v1:1; unsigned long long :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu1i { unsigned short v1:1; unsigned long long :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu1ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu1s { unsigned short v1:1; unsigned long long :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu31i { unsigned short v1:1; unsigned long long :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu31ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu32i { unsigned short v1:1; unsigned long long :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu32ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu33 { unsigned short v1:1; unsigned long long :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu7c { unsigned short v1:1; unsigned long long :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu7i { unsigned short v1:1; unsigned long long :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu7ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu7s { unsigned short v1:1; unsigned long long :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu8c { unsigned short v1:1; unsigned long long :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu8i { unsigned short v1:1; unsigned long long :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu8ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu8s { unsigned short v1:1; unsigned long long :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu9i { unsigned short v1:1; unsigned long long :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu9ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu1s_BFu0ll_BFu9s { unsigned short v1:1; unsigned long long :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu1s_BFu0ll_C { unsigned short v1:1; unsigned long long :0; char v2; };
struct __attribute__((packed)) aBFu1s_BFu0ll_D { unsigned short v1:1; unsigned long long :0; double v2; };
struct __attribute__((packed)) aBFu1s_BFu0ll_F { unsigned short v1:1; unsigned long long :0; float v2; };
struct __attribute__((packed)) aBFu1s_BFu0ll_I { unsigned short v1:1; unsigned long long :0; int v2; };
struct __attribute__((packed)) aBFu1s_BFu0ll_Ip { unsigned short v1:1; unsigned long long :0; int * v2; };
struct __attribute__((packed)) aBFu1s_BFu0ll_L { unsigned short v1:1; unsigned long long :0; long long v2; };
struct __attribute__((packed)) aBFu1s_BFu0ll_S { unsigned short v1:1; unsigned long long :0; short v2; };
struct __attribute__((packed)) aBFu1s_BFu0ll_Uc { unsigned short v1:1; unsigned long long :0; unsigned char v2; };
struct __attribute__((packed)) aBFu1s_BFu0ll_Ui { unsigned short v1:1; unsigned long long :0; unsigned int v2; };
struct __attribute__((packed)) aBFu1s_BFu0ll_Ul { unsigned short v1:1; unsigned long long :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu1s_BFu0ll_Us { unsigned short v1:1; unsigned long long :0; unsigned short v2; };
struct __attribute__((packed)) aBFu1s_BFu0ll_Vp { unsigned short v1:1; unsigned long long :0; void * v2; };
struct __attribute__((packed)) aBFu1s_BFu0s { unsigned short v1:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu0c { unsigned short v1:1; unsigned short :0; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu0i { unsigned short v1:1; unsigned short :0; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu0ll { unsigned short v1:1; unsigned short :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu0s { unsigned short v1:1; unsigned short :0; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu15i { unsigned short v1:1; unsigned short :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu15ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu15s { unsigned short v1:1; unsigned short :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu16i { unsigned short v1:1; unsigned short :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu16ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu16s { unsigned short v1:1; unsigned short :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu17i { unsigned short v1:1; unsigned short :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu17ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu1c { unsigned short v1:1; unsigned short :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu1i { unsigned short v1:1; unsigned short :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu1ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu1s { unsigned short v1:1; unsigned short :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu31i { unsigned short v1:1; unsigned short :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu31ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu32i { unsigned short v1:1; unsigned short :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu32ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu33 { unsigned short v1:1; unsigned short :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu7c { unsigned short v1:1; unsigned short :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu7i { unsigned short v1:1; unsigned short :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu7ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu7s { unsigned short v1:1; unsigned short :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu8c { unsigned short v1:1; unsigned short :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu8i { unsigned short v1:1; unsigned short :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu8ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu8s { unsigned short v1:1; unsigned short :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu9i { unsigned short v1:1; unsigned short :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu9ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu1s_BFu0s_BFu9s { unsigned short v1:1; unsigned short :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu1s_BFu0s_C { unsigned short v1:1; unsigned short :0; char v2; };
struct __attribute__((packed)) aBFu1s_BFu0s_D { unsigned short v1:1; unsigned short :0; double v2; };
struct __attribute__((packed)) aBFu1s_BFu0s_F { unsigned short v1:1; unsigned short :0; float v2; };
struct __attribute__((packed)) aBFu1s_BFu0s_I { unsigned short v1:1; unsigned short :0; int v2; };
struct __attribute__((packed)) aBFu1s_BFu0s_Ip { unsigned short v1:1; unsigned short :0; int * v2; };
struct __attribute__((packed)) aBFu1s_BFu0s_L { unsigned short v1:1; unsigned short :0; long long v2; };
struct __attribute__((packed)) aBFu1s_BFu0s_S { unsigned short v1:1; unsigned short :0; short v2; };
struct __attribute__((packed)) aBFu1s_BFu0s_Uc { unsigned short v1:1; unsigned short :0; unsigned char v2; };
struct __attribute__((packed)) aBFu1s_BFu0s_Ui { unsigned short v1:1; unsigned short :0; unsigned int v2; };
struct __attribute__((packed)) aBFu1s_BFu0s_Ul { unsigned short v1:1; unsigned short :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu1s_BFu0s_Us { unsigned short v1:1; unsigned short :0; unsigned short v2; };
struct __attribute__((packed)) aBFu1s_BFu0s_Vp { unsigned short v1:1; unsigned short :0; void * v2; };
struct __attribute__((packed)) aBFu1s_BFu15i_BFu0c { unsigned short v1:1; unsigned int v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu15i_BFu0i { unsigned short v1:1; unsigned int v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu15i_BFu0ll { unsigned short v1:1; unsigned int v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu15i_BFu0s { unsigned short v1:1; unsigned int v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu15ll_BFu0c { unsigned short v1:1; unsigned long long v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu15ll_BFu0i { unsigned short v1:1; unsigned long long v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu15ll_BFu0ll { unsigned short v1:1; unsigned long long v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu15ll_BFu0s { unsigned short v1:1; unsigned long long v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu15s_BFu0c { unsigned short v1:1; unsigned short v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu15s_BFu0i { unsigned short v1:1; unsigned short v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu15s_BFu0ll { unsigned short v1:1; unsigned short v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu15s_BFu0s { unsigned short v1:1; unsigned short v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu16i_BFu0c { unsigned short v1:1; unsigned int v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu16i_BFu0i { unsigned short v1:1; unsigned int v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu16i_BFu0ll { unsigned short v1:1; unsigned int v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu16i_BFu0s { unsigned short v1:1; unsigned int v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu16ll_BFu0c { unsigned short v1:1; unsigned long long v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu16ll_BFu0i { unsigned short v1:1; unsigned long long v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu16ll_BFu0ll { unsigned short v1:1; unsigned long long v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu16ll_BFu0s { unsigned short v1:1; unsigned long long v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu16s_BFu0c { unsigned short v1:1; unsigned short v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu16s_BFu0i { unsigned short v1:1; unsigned short v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu16s_BFu0ll { unsigned short v1:1; unsigned short v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu16s_BFu0s { unsigned short v1:1; unsigned short v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu17i_BFu0c { unsigned short v1:1; unsigned int v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu17i_BFu0i { unsigned short v1:1; unsigned int v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu17i_BFu0ll { unsigned short v1:1; unsigned int v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu17i_BFu0s { unsigned short v1:1; unsigned int v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu17ll_BFu0c { unsigned short v1:1; unsigned long long v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu17ll_BFu0i { unsigned short v1:1; unsigned long long v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu17ll_BFu0ll { unsigned short v1:1; unsigned long long v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu17ll_BFu0s { unsigned short v1:1; unsigned long long v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu1c_BFu0c { unsigned short v1:1; unsigned char v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu1c_BFu0i { unsigned short v1:1; unsigned char v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu1c_BFu0ll { unsigned short v1:1; unsigned char v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu1c_BFu0s { unsigned short v1:1; unsigned char v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu1i_BFu0c { unsigned short v1:1; unsigned int v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu1i_BFu0i { unsigned short v1:1; unsigned int v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu1i_BFu0ll { unsigned short v1:1; unsigned int v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu1i_BFu0s { unsigned short v1:1; unsigned int v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu1ll_BFu0c { unsigned short v1:1; unsigned long long v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu1ll_BFu0i { unsigned short v1:1; unsigned long long v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu1ll_BFu0ll { unsigned short v1:1; unsigned long long v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu1ll_BFu0s { unsigned short v1:1; unsigned long long v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu1s_BFu0c { unsigned short v1:1; unsigned short v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu1s_BFu0i { unsigned short v1:1; unsigned short v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu1s_BFu0ll { unsigned short v1:1; unsigned short v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu1s_BFu0s { unsigned short v1:1; unsigned short v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu31i_BFu0c { unsigned short v1:1; unsigned int v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu31i_BFu0i { unsigned short v1:1; unsigned int v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu31i_BFu0ll { unsigned short v1:1; unsigned int v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu31i_BFu0s { unsigned short v1:1; unsigned int v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu31ll_BFu0c { unsigned short v1:1; unsigned long long v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu31ll_BFu0i { unsigned short v1:1; unsigned long long v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu31ll_BFu0ll { unsigned short v1:1; unsigned long long v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu31ll_BFu0s { unsigned short v1:1; unsigned long long v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu32i_BFu0c { unsigned short v1:1; unsigned int v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu32i_BFu0i { unsigned short v1:1; unsigned int v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu32i_BFu0ll { unsigned short v1:1; unsigned int v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu32i_BFu0s { unsigned short v1:1; unsigned int v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu32ll_BFu0c { unsigned short v1:1; unsigned long long v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu32ll_BFu0i { unsigned short v1:1; unsigned long long v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu32ll_BFu0ll { unsigned short v1:1; unsigned long long v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu32ll_BFu0s { unsigned short v1:1; unsigned long long v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu33_BFu0c { unsigned short v1:1; unsigned long long v2:33; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu33_BFu0i { unsigned short v1:1; unsigned long long v2:33; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu33_BFu0ll { unsigned short v1:1; unsigned long long v2:33; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu33_BFu0s { unsigned short v1:1; unsigned long long v2:33; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu7c_BFu0c { unsigned short v1:1; unsigned char v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu7c_BFu0i { unsigned short v1:1; unsigned char v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu7c_BFu0ll { unsigned short v1:1; unsigned char v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu7c_BFu0s { unsigned short v1:1; unsigned char v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu7i_BFu0c { unsigned short v1:1; unsigned int v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu7i_BFu0i { unsigned short v1:1; unsigned int v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu7i_BFu0ll { unsigned short v1:1; unsigned int v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu7i_BFu0s { unsigned short v1:1; unsigned int v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu7ll_BFu0c { unsigned short v1:1; unsigned long long v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu7ll_BFu0i { unsigned short v1:1; unsigned long long v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu7ll_BFu0ll { unsigned short v1:1; unsigned long long v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu7ll_BFu0s { unsigned short v1:1; unsigned long long v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu7s_BFu0c { unsigned short v1:1; unsigned short v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu7s_BFu0i { unsigned short v1:1; unsigned short v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu7s_BFu0ll { unsigned short v1:1; unsigned short v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu7s_BFu0s { unsigned short v1:1; unsigned short v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu8c_BFu0c { unsigned short v1:1; unsigned char v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu8c_BFu0i { unsigned short v1:1; unsigned char v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu8c_BFu0ll { unsigned short v1:1; unsigned char v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu8c_BFu0s { unsigned short v1:1; unsigned char v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu8i_BFu0c { unsigned short v1:1; unsigned int v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu8i_BFu0i { unsigned short v1:1; unsigned int v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu8i_BFu0ll { unsigned short v1:1; unsigned int v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu8i_BFu0s { unsigned short v1:1; unsigned int v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu8ll_BFu0c { unsigned short v1:1; unsigned long long v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu8ll_BFu0i { unsigned short v1:1; unsigned long long v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu8ll_BFu0ll { unsigned short v1:1; unsigned long long v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu8ll_BFu0s { unsigned short v1:1; unsigned long long v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu8s_BFu0c { unsigned short v1:1; unsigned short v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu8s_BFu0i { unsigned short v1:1; unsigned short v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu8s_BFu0ll { unsigned short v1:1; unsigned short v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu8s_BFu0s { unsigned short v1:1; unsigned short v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu9i_BFu0c { unsigned short v1:1; unsigned int v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu9i_BFu0i { unsigned short v1:1; unsigned int v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu9i_BFu0ll { unsigned short v1:1; unsigned int v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu9i_BFu0s { unsigned short v1:1; unsigned int v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu9ll_BFu0c { unsigned short v1:1; unsigned long long v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu9ll_BFu0i { unsigned short v1:1; unsigned long long v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu9ll_BFu0ll { unsigned short v1:1; unsigned long long v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu9ll_BFu0s { unsigned short v1:1; unsigned long long v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_BFu9s_BFu0c { unsigned short v1:1; unsigned short v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_BFu9s_BFu0i { unsigned short v1:1; unsigned short v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_BFu9s_BFu0ll { unsigned short v1:1; unsigned short v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_BFu9s_BFu0s { unsigned short v1:1; unsigned short v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_C_BFu0c { unsigned short v1:1; char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_C_BFu0i { unsigned short v1:1; char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_C_BFu0ll { unsigned short v1:1; char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_C_BFu0s { unsigned short v1:1; char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_D_BFu0c { unsigned short v1:1; double v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_D_BFu0i { unsigned short v1:1; double v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_D_BFu0ll { unsigned short v1:1; double v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_D_BFu0s { unsigned short v1:1; double v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_F_BFu0c { unsigned short v1:1; float v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_F_BFu0i { unsigned short v1:1; float v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_F_BFu0ll { unsigned short v1:1; float v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_F_BFu0s { unsigned short v1:1; float v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_I_BFu0c { unsigned short v1:1; int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_I_BFu0i { unsigned short v1:1; int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_I_BFu0ll { unsigned short v1:1; int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_I_BFu0s { unsigned short v1:1; int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_Ip_BFu0c { unsigned short v1:1; int * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_Ip_BFu0i { unsigned short v1:1; int * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_Ip_BFu0ll { unsigned short v1:1; int * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_Ip_BFu0s { unsigned short v1:1; int * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_L_BFu0c { unsigned short v1:1; long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_L_BFu0i { unsigned short v1:1; long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_L_BFu0ll { unsigned short v1:1; long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_L_BFu0s { unsigned short v1:1; long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_S_BFu0c { unsigned short v1:1; short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_S_BFu0i { unsigned short v1:1; short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_S_BFu0ll { unsigned short v1:1; short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_S_BFu0s { unsigned short v1:1; short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_Uc_BFu0c { unsigned short v1:1; unsigned char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_Uc_BFu0i { unsigned short v1:1; unsigned char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_Uc_BFu0ll { unsigned short v1:1; unsigned char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_Uc_BFu0s { unsigned short v1:1; unsigned char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_Ui_BFu0c { unsigned short v1:1; unsigned int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_Ui_BFu0i { unsigned short v1:1; unsigned int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_Ui_BFu0ll { unsigned short v1:1; unsigned int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_Ui_BFu0s { unsigned short v1:1; unsigned int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_Ul_BFu0c { unsigned short v1:1; unsigned long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_Ul_BFu0i { unsigned short v1:1; unsigned long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_Ul_BFu0ll { unsigned short v1:1; unsigned long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_Ul_BFu0s { unsigned short v1:1; unsigned long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_Us_BFu0c { unsigned short v1:1; unsigned short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_Us_BFu0i { unsigned short v1:1; unsigned short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_Us_BFu0ll { unsigned short v1:1; unsigned short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_Us_BFu0s { unsigned short v1:1; unsigned short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu1s_Vp_BFu0c { unsigned short v1:1; void * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu1s_Vp_BFu0i { unsigned short v1:1; void * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu1s_Vp_BFu0ll { unsigned short v1:1; void * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu1s_Vp_BFu0s { unsigned short v1:1; void * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu0c { unsigned int v1:31; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu0c { unsigned int v1:31; unsigned char :0; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu0i { unsigned int v1:31; unsigned char :0; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu0ll { unsigned int v1:31; unsigned char :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu0s { unsigned int v1:31; unsigned char :0; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu15i { unsigned int v1:31; unsigned char :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu15ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu15s { unsigned int v1:31; unsigned char :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu16i { unsigned int v1:31; unsigned char :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu16ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu16s { unsigned int v1:31; unsigned char :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu17i { unsigned int v1:31; unsigned char :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu17ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu1c { unsigned int v1:31; unsigned char :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu1i { unsigned int v1:31; unsigned char :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu1ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu1s { unsigned int v1:31; unsigned char :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu31i { unsigned int v1:31; unsigned char :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu31ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu32i { unsigned int v1:31; unsigned char :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu32ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu33 { unsigned int v1:31; unsigned char :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu7c { unsigned int v1:31; unsigned char :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu7i { unsigned int v1:31; unsigned char :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu7ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu7s { unsigned int v1:31; unsigned char :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu8c { unsigned int v1:31; unsigned char :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu8i { unsigned int v1:31; unsigned char :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu8ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu8s { unsigned int v1:31; unsigned char :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu9i { unsigned int v1:31; unsigned char :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu9ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu31i_BFu0c_BFu9s { unsigned int v1:31; unsigned char :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu31i_BFu0c_C { unsigned int v1:31; unsigned char :0; char v2; };
struct __attribute__((packed)) aBFu31i_BFu0c_D { unsigned int v1:31; unsigned char :0; double v2; };
struct __attribute__((packed)) aBFu31i_BFu0c_F { unsigned int v1:31; unsigned char :0; float v2; };
struct __attribute__((packed)) aBFu31i_BFu0c_I { unsigned int v1:31; unsigned char :0; int v2; };
struct __attribute__((packed)) aBFu31i_BFu0c_Ip { unsigned int v1:31; unsigned char :0; int * v2; };
struct __attribute__((packed)) aBFu31i_BFu0c_L { unsigned int v1:31; unsigned char :0; long long v2; };
struct __attribute__((packed)) aBFu31i_BFu0c_S { unsigned int v1:31; unsigned char :0; short v2; };
struct __attribute__((packed)) aBFu31i_BFu0c_Uc { unsigned int v1:31; unsigned char :0; unsigned char v2; };
struct __attribute__((packed)) aBFu31i_BFu0c_Ui { unsigned int v1:31; unsigned char :0; unsigned int v2; };
struct __attribute__((packed)) aBFu31i_BFu0c_Ul { unsigned int v1:31; unsigned char :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu31i_BFu0c_Us { unsigned int v1:31; unsigned char :0; unsigned short v2; };
struct __attribute__((packed)) aBFu31i_BFu0c_Vp { unsigned int v1:31; unsigned char :0; void * v2; };
struct __attribute__((packed)) aBFu31i_BFu0i { unsigned int v1:31; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu0c { unsigned int v1:31; unsigned int :0; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu0i { unsigned int v1:31; unsigned int :0; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu0ll { unsigned int v1:31; unsigned int :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu0s { unsigned int v1:31; unsigned int :0; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu15i { unsigned int v1:31; unsigned int :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu15ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu15s { unsigned int v1:31; unsigned int :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu16i { unsigned int v1:31; unsigned int :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu16ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu16s { unsigned int v1:31; unsigned int :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu17i { unsigned int v1:31; unsigned int :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu17ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu1c { unsigned int v1:31; unsigned int :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu1i { unsigned int v1:31; unsigned int :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu1ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu1s { unsigned int v1:31; unsigned int :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu31i { unsigned int v1:31; unsigned int :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu31ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu32i { unsigned int v1:31; unsigned int :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu32ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu33 { unsigned int v1:31; unsigned int :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu7c { unsigned int v1:31; unsigned int :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu7i { unsigned int v1:31; unsigned int :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu7ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu7s { unsigned int v1:31; unsigned int :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu8c { unsigned int v1:31; unsigned int :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu8i { unsigned int v1:31; unsigned int :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu8ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu8s { unsigned int v1:31; unsigned int :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu9i { unsigned int v1:31; unsigned int :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu9ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu31i_BFu0i_BFu9s { unsigned int v1:31; unsigned int :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu31i_BFu0i_C { unsigned int v1:31; unsigned int :0; char v2; };
struct __attribute__((packed)) aBFu31i_BFu0i_D { unsigned int v1:31; unsigned int :0; double v2; };
struct __attribute__((packed)) aBFu31i_BFu0i_F { unsigned int v1:31; unsigned int :0; float v2; };
struct __attribute__((packed)) aBFu31i_BFu0i_I { unsigned int v1:31; unsigned int :0; int v2; };
struct __attribute__((packed)) aBFu31i_BFu0i_Ip { unsigned int v1:31; unsigned int :0; int * v2; };
struct __attribute__((packed)) aBFu31i_BFu0i_L { unsigned int v1:31; unsigned int :0; long long v2; };
struct __attribute__((packed)) aBFu31i_BFu0i_S { unsigned int v1:31; unsigned int :0; short v2; };
struct __attribute__((packed)) aBFu31i_BFu0i_Uc { unsigned int v1:31; unsigned int :0; unsigned char v2; };
struct __attribute__((packed)) aBFu31i_BFu0i_Ui { unsigned int v1:31; unsigned int :0; unsigned int v2; };
struct __attribute__((packed)) aBFu31i_BFu0i_Ul { unsigned int v1:31; unsigned int :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu31i_BFu0i_Us { unsigned int v1:31; unsigned int :0; unsigned short v2; };
struct __attribute__((packed)) aBFu31i_BFu0i_Vp { unsigned int v1:31; unsigned int :0; void * v2; };
struct __attribute__((packed)) aBFu31i_BFu0ll { unsigned int v1:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu0c { unsigned int v1:31; unsigned long long :0; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu0i { unsigned int v1:31; unsigned long long :0; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu0ll { unsigned int v1:31; unsigned long long :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu0s { unsigned int v1:31; unsigned long long :0; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu15i { unsigned int v1:31; unsigned long long :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu15ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu15s { unsigned int v1:31; unsigned long long :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu16i { unsigned int v1:31; unsigned long long :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu16ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu16s { unsigned int v1:31; unsigned long long :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu17i { unsigned int v1:31; unsigned long long :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu17ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu1c { unsigned int v1:31; unsigned long long :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu1i { unsigned int v1:31; unsigned long long :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu1ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu1s { unsigned int v1:31; unsigned long long :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu31i { unsigned int v1:31; unsigned long long :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu31ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu32i { unsigned int v1:31; unsigned long long :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu32ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu33 { unsigned int v1:31; unsigned long long :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu7c { unsigned int v1:31; unsigned long long :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu7i { unsigned int v1:31; unsigned long long :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu7ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu7s { unsigned int v1:31; unsigned long long :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu8c { unsigned int v1:31; unsigned long long :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu8i { unsigned int v1:31; unsigned long long :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu8ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu8s { unsigned int v1:31; unsigned long long :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu9i { unsigned int v1:31; unsigned long long :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu9ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu31i_BFu0ll_BFu9s { unsigned int v1:31; unsigned long long :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu31i_BFu0ll_C { unsigned int v1:31; unsigned long long :0; char v2; };
struct __attribute__((packed)) aBFu31i_BFu0ll_D { unsigned int v1:31; unsigned long long :0; double v2; };
struct __attribute__((packed)) aBFu31i_BFu0ll_F { unsigned int v1:31; unsigned long long :0; float v2; };
struct __attribute__((packed)) aBFu31i_BFu0ll_I { unsigned int v1:31; unsigned long long :0; int v2; };
struct __attribute__((packed)) aBFu31i_BFu0ll_Ip { unsigned int v1:31; unsigned long long :0; int * v2; };
struct __attribute__((packed)) aBFu31i_BFu0ll_L { unsigned int v1:31; unsigned long long :0; long long v2; };
struct __attribute__((packed)) aBFu31i_BFu0ll_S { unsigned int v1:31; unsigned long long :0; short v2; };
struct __attribute__((packed)) aBFu31i_BFu0ll_Uc { unsigned int v1:31; unsigned long long :0; unsigned char v2; };
struct __attribute__((packed)) aBFu31i_BFu0ll_Ui { unsigned int v1:31; unsigned long long :0; unsigned int v2; };
struct __attribute__((packed)) aBFu31i_BFu0ll_Ul { unsigned int v1:31; unsigned long long :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu31i_BFu0ll_Us { unsigned int v1:31; unsigned long long :0; unsigned short v2; };
struct __attribute__((packed)) aBFu31i_BFu0ll_Vp { unsigned int v1:31; unsigned long long :0; void * v2; };
struct __attribute__((packed)) aBFu31i_BFu0s { unsigned int v1:31; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu0c { unsigned int v1:31; unsigned short :0; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu0i { unsigned int v1:31; unsigned short :0; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu0ll { unsigned int v1:31; unsigned short :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu0s { unsigned int v1:31; unsigned short :0; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu15i { unsigned int v1:31; unsigned short :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu15ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu15s { unsigned int v1:31; unsigned short :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu16i { unsigned int v1:31; unsigned short :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu16ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu16s { unsigned int v1:31; unsigned short :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu17i { unsigned int v1:31; unsigned short :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu17ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu1c { unsigned int v1:31; unsigned short :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu1i { unsigned int v1:31; unsigned short :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu1ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu1s { unsigned int v1:31; unsigned short :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu31i { unsigned int v1:31; unsigned short :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu31ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu32i { unsigned int v1:31; unsigned short :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu32ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu33 { unsigned int v1:31; unsigned short :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu7c { unsigned int v1:31; unsigned short :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu7i { unsigned int v1:31; unsigned short :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu7ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu7s { unsigned int v1:31; unsigned short :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu8c { unsigned int v1:31; unsigned short :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu8i { unsigned int v1:31; unsigned short :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu8ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu8s { unsigned int v1:31; unsigned short :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu9i { unsigned int v1:31; unsigned short :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu9ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu31i_BFu0s_BFu9s { unsigned int v1:31; unsigned short :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu31i_BFu0s_C { unsigned int v1:31; unsigned short :0; char v2; };
struct __attribute__((packed)) aBFu31i_BFu0s_D { unsigned int v1:31; unsigned short :0; double v2; };
struct __attribute__((packed)) aBFu31i_BFu0s_F { unsigned int v1:31; unsigned short :0; float v2; };
struct __attribute__((packed)) aBFu31i_BFu0s_I { unsigned int v1:31; unsigned short :0; int v2; };
struct __attribute__((packed)) aBFu31i_BFu0s_Ip { unsigned int v1:31; unsigned short :0; int * v2; };
struct __attribute__((packed)) aBFu31i_BFu0s_L { unsigned int v1:31; unsigned short :0; long long v2; };
struct __attribute__((packed)) aBFu31i_BFu0s_S { unsigned int v1:31; unsigned short :0; short v2; };
struct __attribute__((packed)) aBFu31i_BFu0s_Uc { unsigned int v1:31; unsigned short :0; unsigned char v2; };
struct __attribute__((packed)) aBFu31i_BFu0s_Ui { unsigned int v1:31; unsigned short :0; unsigned int v2; };
struct __attribute__((packed)) aBFu31i_BFu0s_Ul { unsigned int v1:31; unsigned short :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu31i_BFu0s_Us { unsigned int v1:31; unsigned short :0; unsigned short v2; };
struct __attribute__((packed)) aBFu31i_BFu0s_Vp { unsigned int v1:31; unsigned short :0; void * v2; };
struct __attribute__((packed)) aBFu31i_BFu15i_BFu0c { unsigned int v1:31; unsigned int v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu15i_BFu0i { unsigned int v1:31; unsigned int v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu15i_BFu0ll { unsigned int v1:31; unsigned int v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu15i_BFu0s { unsigned int v1:31; unsigned int v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu15ll_BFu0c { unsigned int v1:31; unsigned long long v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu15ll_BFu0i { unsigned int v1:31; unsigned long long v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu15ll_BFu0ll { unsigned int v1:31; unsigned long long v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu15ll_BFu0s { unsigned int v1:31; unsigned long long v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu15s_BFu0c { unsigned int v1:31; unsigned short v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu15s_BFu0i { unsigned int v1:31; unsigned short v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu15s_BFu0ll { unsigned int v1:31; unsigned short v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu15s_BFu0s { unsigned int v1:31; unsigned short v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu16i_BFu0c { unsigned int v1:31; unsigned int v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu16i_BFu0i { unsigned int v1:31; unsigned int v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu16i_BFu0ll { unsigned int v1:31; unsigned int v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu16i_BFu0s { unsigned int v1:31; unsigned int v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu16ll_BFu0c { unsigned int v1:31; unsigned long long v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu16ll_BFu0i { unsigned int v1:31; unsigned long long v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu16ll_BFu0ll { unsigned int v1:31; unsigned long long v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu16ll_BFu0s { unsigned int v1:31; unsigned long long v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu16s_BFu0c { unsigned int v1:31; unsigned short v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu16s_BFu0i { unsigned int v1:31; unsigned short v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu16s_BFu0ll { unsigned int v1:31; unsigned short v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu16s_BFu0s { unsigned int v1:31; unsigned short v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu17i_BFu0c { unsigned int v1:31; unsigned int v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu17i_BFu0i { unsigned int v1:31; unsigned int v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu17i_BFu0ll { unsigned int v1:31; unsigned int v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu17i_BFu0s { unsigned int v1:31; unsigned int v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu17ll_BFu0c { unsigned int v1:31; unsigned long long v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu17ll_BFu0i { unsigned int v1:31; unsigned long long v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu17ll_BFu0ll { unsigned int v1:31; unsigned long long v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu17ll_BFu0s { unsigned int v1:31; unsigned long long v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu1c_BFu0c { unsigned int v1:31; unsigned char v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu1c_BFu0i { unsigned int v1:31; unsigned char v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu1c_BFu0ll { unsigned int v1:31; unsigned char v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu1c_BFu0s { unsigned int v1:31; unsigned char v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu1i_BFu0c { unsigned int v1:31; unsigned int v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu1i_BFu0i { unsigned int v1:31; unsigned int v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu1i_BFu0ll { unsigned int v1:31; unsigned int v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu1i_BFu0s { unsigned int v1:31; unsigned int v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu1ll_BFu0c { unsigned int v1:31; unsigned long long v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu1ll_BFu0i { unsigned int v1:31; unsigned long long v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu1ll_BFu0ll { unsigned int v1:31; unsigned long long v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu1ll_BFu0s { unsigned int v1:31; unsigned long long v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu1s_BFu0c { unsigned int v1:31; unsigned short v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu1s_BFu0i { unsigned int v1:31; unsigned short v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu1s_BFu0ll { unsigned int v1:31; unsigned short v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu1s_BFu0s { unsigned int v1:31; unsigned short v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu31i_BFu0c { unsigned int v1:31; unsigned int v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu31i_BFu0i { unsigned int v1:31; unsigned int v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu31i_BFu0ll { unsigned int v1:31; unsigned int v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu31i_BFu0s { unsigned int v1:31; unsigned int v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu31ll_BFu0c { unsigned int v1:31; unsigned long long v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu31ll_BFu0i { unsigned int v1:31; unsigned long long v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu31ll_BFu0ll { unsigned int v1:31; unsigned long long v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu31ll_BFu0s { unsigned int v1:31; unsigned long long v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu32i_BFu0c { unsigned int v1:31; unsigned int v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu32i_BFu0i { unsigned int v1:31; unsigned int v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu32i_BFu0ll { unsigned int v1:31; unsigned int v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu32i_BFu0s { unsigned int v1:31; unsigned int v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu32ll_BFu0c { unsigned int v1:31; unsigned long long v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu32ll_BFu0i { unsigned int v1:31; unsigned long long v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu32ll_BFu0ll { unsigned int v1:31; unsigned long long v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu32ll_BFu0s { unsigned int v1:31; unsigned long long v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu33_BFu0c { unsigned int v1:31; unsigned long long v2:33; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu33_BFu0i { unsigned int v1:31; unsigned long long v2:33; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu33_BFu0ll { unsigned int v1:31; unsigned long long v2:33; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu33_BFu0s { unsigned int v1:31; unsigned long long v2:33; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu7c_BFu0c { unsigned int v1:31; unsigned char v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu7c_BFu0i { unsigned int v1:31; unsigned char v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu7c_BFu0ll { unsigned int v1:31; unsigned char v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu7c_BFu0s { unsigned int v1:31; unsigned char v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu7i_BFu0c { unsigned int v1:31; unsigned int v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu7i_BFu0i { unsigned int v1:31; unsigned int v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu7i_BFu0ll { unsigned int v1:31; unsigned int v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu7i_BFu0s { unsigned int v1:31; unsigned int v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu7ll_BFu0c { unsigned int v1:31; unsigned long long v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu7ll_BFu0i { unsigned int v1:31; unsigned long long v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu7ll_BFu0ll { unsigned int v1:31; unsigned long long v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu7ll_BFu0s { unsigned int v1:31; unsigned long long v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu7s_BFu0c { unsigned int v1:31; unsigned short v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu7s_BFu0i { unsigned int v1:31; unsigned short v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu7s_BFu0ll { unsigned int v1:31; unsigned short v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu7s_BFu0s { unsigned int v1:31; unsigned short v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu8c_BFu0c { unsigned int v1:31; unsigned char v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu8c_BFu0i { unsigned int v1:31; unsigned char v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu8c_BFu0ll { unsigned int v1:31; unsigned char v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu8c_BFu0s { unsigned int v1:31; unsigned char v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu8i_BFu0c { unsigned int v1:31; unsigned int v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu8i_BFu0i { unsigned int v1:31; unsigned int v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu8i_BFu0ll { unsigned int v1:31; unsigned int v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu8i_BFu0s { unsigned int v1:31; unsigned int v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu8ll_BFu0c { unsigned int v1:31; unsigned long long v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu8ll_BFu0i { unsigned int v1:31; unsigned long long v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu8ll_BFu0ll { unsigned int v1:31; unsigned long long v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu8ll_BFu0s { unsigned int v1:31; unsigned long long v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu8s_BFu0c { unsigned int v1:31; unsigned short v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu8s_BFu0i { unsigned int v1:31; unsigned short v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu8s_BFu0ll { unsigned int v1:31; unsigned short v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu8s_BFu0s { unsigned int v1:31; unsigned short v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu9i_BFu0c { unsigned int v1:31; unsigned int v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu9i_BFu0i { unsigned int v1:31; unsigned int v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu9i_BFu0ll { unsigned int v1:31; unsigned int v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu9i_BFu0s { unsigned int v1:31; unsigned int v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu9ll_BFu0c { unsigned int v1:31; unsigned long long v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu9ll_BFu0i { unsigned int v1:31; unsigned long long v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu9ll_BFu0ll { unsigned int v1:31; unsigned long long v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu9ll_BFu0s { unsigned int v1:31; unsigned long long v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_BFu9s_BFu0c { unsigned int v1:31; unsigned short v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_BFu9s_BFu0i { unsigned int v1:31; unsigned short v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_BFu9s_BFu0ll { unsigned int v1:31; unsigned short v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_BFu9s_BFu0s { unsigned int v1:31; unsigned short v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_C_BFu0c { unsigned int v1:31; char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_C_BFu0i { unsigned int v1:31; char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_C_BFu0ll { unsigned int v1:31; char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_C_BFu0s { unsigned int v1:31; char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_D_BFu0c { unsigned int v1:31; double v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_D_BFu0i { unsigned int v1:31; double v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_D_BFu0ll { unsigned int v1:31; double v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_D_BFu0s { unsigned int v1:31; double v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_F_BFu0c { unsigned int v1:31; float v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_F_BFu0i { unsigned int v1:31; float v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_F_BFu0ll { unsigned int v1:31; float v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_F_BFu0s { unsigned int v1:31; float v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_I_BFu0c { unsigned int v1:31; int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_I_BFu0i { unsigned int v1:31; int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_I_BFu0ll { unsigned int v1:31; int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_I_BFu0s { unsigned int v1:31; int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_Ip_BFu0c { unsigned int v1:31; int * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_Ip_BFu0i { unsigned int v1:31; int * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_Ip_BFu0ll { unsigned int v1:31; int * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_Ip_BFu0s { unsigned int v1:31; int * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_L_BFu0c { unsigned int v1:31; long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_L_BFu0i { unsigned int v1:31; long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_L_BFu0ll { unsigned int v1:31; long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_L_BFu0s { unsigned int v1:31; long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_S_BFu0c { unsigned int v1:31; short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_S_BFu0i { unsigned int v1:31; short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_S_BFu0ll { unsigned int v1:31; short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_S_BFu0s { unsigned int v1:31; short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_Uc_BFu0c { unsigned int v1:31; unsigned char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_Uc_BFu0i { unsigned int v1:31; unsigned char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_Uc_BFu0ll { unsigned int v1:31; unsigned char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_Uc_BFu0s { unsigned int v1:31; unsigned char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_Ui_BFu0c { unsigned int v1:31; unsigned int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_Ui_BFu0i { unsigned int v1:31; unsigned int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_Ui_BFu0ll { unsigned int v1:31; unsigned int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_Ui_BFu0s { unsigned int v1:31; unsigned int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_Ul_BFu0c { unsigned int v1:31; unsigned long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_Ul_BFu0i { unsigned int v1:31; unsigned long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_Ul_BFu0ll { unsigned int v1:31; unsigned long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_Ul_BFu0s { unsigned int v1:31; unsigned long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_Us_BFu0c { unsigned int v1:31; unsigned short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_Us_BFu0i { unsigned int v1:31; unsigned short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_Us_BFu0ll { unsigned int v1:31; unsigned short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_Us_BFu0s { unsigned int v1:31; unsigned short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31i_Vp_BFu0c { unsigned int v1:31; void * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31i_Vp_BFu0i { unsigned int v1:31; void * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31i_Vp_BFu0ll { unsigned int v1:31; void * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31i_Vp_BFu0s { unsigned int v1:31; void * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu0c { unsigned long long v1:31; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu0c { unsigned long long v1:31; unsigned char :0; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu0i { unsigned long long v1:31; unsigned char :0; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu0ll { unsigned long long v1:31; unsigned char :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu0s { unsigned long long v1:31; unsigned char :0; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu15i { unsigned long long v1:31; unsigned char :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu15ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu15s { unsigned long long v1:31; unsigned char :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu16i { unsigned long long v1:31; unsigned char :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu16ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu16s { unsigned long long v1:31; unsigned char :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu17i { unsigned long long v1:31; unsigned char :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu17ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu1c { unsigned long long v1:31; unsigned char :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu1i { unsigned long long v1:31; unsigned char :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu1ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu1s { unsigned long long v1:31; unsigned char :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu31i { unsigned long long v1:31; unsigned char :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu31ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu32i { unsigned long long v1:31; unsigned char :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu32ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu33 { unsigned long long v1:31; unsigned char :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu7c { unsigned long long v1:31; unsigned char :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu7i { unsigned long long v1:31; unsigned char :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu7ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu7s { unsigned long long v1:31; unsigned char :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu8c { unsigned long long v1:31; unsigned char :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu8i { unsigned long long v1:31; unsigned char :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu8ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu8s { unsigned long long v1:31; unsigned char :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu9i { unsigned long long v1:31; unsigned char :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu9ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu31ll_BFu0c_BFu9s { unsigned long long v1:31; unsigned char :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu31ll_BFu0c_C { unsigned long long v1:31; unsigned char :0; char v2; };
struct __attribute__((packed)) aBFu31ll_BFu0c_D { unsigned long long v1:31; unsigned char :0; double v2; };
struct __attribute__((packed)) aBFu31ll_BFu0c_F { unsigned long long v1:31; unsigned char :0; float v2; };
struct __attribute__((packed)) aBFu31ll_BFu0c_I { unsigned long long v1:31; unsigned char :0; int v2; };
struct __attribute__((packed)) aBFu31ll_BFu0c_Ip { unsigned long long v1:31; unsigned char :0; int * v2; };
struct __attribute__((packed)) aBFu31ll_BFu0c_L { unsigned long long v1:31; unsigned char :0; long long v2; };
struct __attribute__((packed)) aBFu31ll_BFu0c_S { unsigned long long v1:31; unsigned char :0; short v2; };
struct __attribute__((packed)) aBFu31ll_BFu0c_Uc { unsigned long long v1:31; unsigned char :0; unsigned char v2; };
struct __attribute__((packed)) aBFu31ll_BFu0c_Ui { unsigned long long v1:31; unsigned char :0; unsigned int v2; };
struct __attribute__((packed)) aBFu31ll_BFu0c_Ul { unsigned long long v1:31; unsigned char :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu31ll_BFu0c_Us { unsigned long long v1:31; unsigned char :0; unsigned short v2; };
struct __attribute__((packed)) aBFu31ll_BFu0c_Vp { unsigned long long v1:31; unsigned char :0; void * v2; };
struct __attribute__((packed)) aBFu31ll_BFu0i { unsigned long long v1:31; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu0c { unsigned long long v1:31; unsigned int :0; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu0i { unsigned long long v1:31; unsigned int :0; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu0ll { unsigned long long v1:31; unsigned int :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu0s { unsigned long long v1:31; unsigned int :0; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu15i { unsigned long long v1:31; unsigned int :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu15ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu15s { unsigned long long v1:31; unsigned int :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu16i { unsigned long long v1:31; unsigned int :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu16ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu16s { unsigned long long v1:31; unsigned int :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu17i { unsigned long long v1:31; unsigned int :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu17ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu1c { unsigned long long v1:31; unsigned int :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu1i { unsigned long long v1:31; unsigned int :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu1ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu1s { unsigned long long v1:31; unsigned int :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu31i { unsigned long long v1:31; unsigned int :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu31ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu32i { unsigned long long v1:31; unsigned int :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu32ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu33 { unsigned long long v1:31; unsigned int :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu7c { unsigned long long v1:31; unsigned int :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu7i { unsigned long long v1:31; unsigned int :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu7ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu7s { unsigned long long v1:31; unsigned int :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu8c { unsigned long long v1:31; unsigned int :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu8i { unsigned long long v1:31; unsigned int :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu8ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu8s { unsigned long long v1:31; unsigned int :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu9i { unsigned long long v1:31; unsigned int :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu9ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu31ll_BFu0i_BFu9s { unsigned long long v1:31; unsigned int :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu31ll_BFu0i_C { unsigned long long v1:31; unsigned int :0; char v2; };
struct __attribute__((packed)) aBFu31ll_BFu0i_D { unsigned long long v1:31; unsigned int :0; double v2; };
struct __attribute__((packed)) aBFu31ll_BFu0i_F { unsigned long long v1:31; unsigned int :0; float v2; };
struct __attribute__((packed)) aBFu31ll_BFu0i_I { unsigned long long v1:31; unsigned int :0; int v2; };
struct __attribute__((packed)) aBFu31ll_BFu0i_Ip { unsigned long long v1:31; unsigned int :0; int * v2; };
struct __attribute__((packed)) aBFu31ll_BFu0i_L { unsigned long long v1:31; unsigned int :0; long long v2; };
struct __attribute__((packed)) aBFu31ll_BFu0i_S { unsigned long long v1:31; unsigned int :0; short v2; };
struct __attribute__((packed)) aBFu31ll_BFu0i_Uc { unsigned long long v1:31; unsigned int :0; unsigned char v2; };
struct __attribute__((packed)) aBFu31ll_BFu0i_Ui { unsigned long long v1:31; unsigned int :0; unsigned int v2; };
struct __attribute__((packed)) aBFu31ll_BFu0i_Ul { unsigned long long v1:31; unsigned int :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu31ll_BFu0i_Us { unsigned long long v1:31; unsigned int :0; unsigned short v2; };
struct __attribute__((packed)) aBFu31ll_BFu0i_Vp { unsigned long long v1:31; unsigned int :0; void * v2; };
struct __attribute__((packed)) aBFu31ll_BFu0ll { unsigned long long v1:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu0c { unsigned long long v1:31; unsigned long long :0; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu0i { unsigned long long v1:31; unsigned long long :0; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu0ll { unsigned long long v1:31; unsigned long long :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu0s { unsigned long long v1:31; unsigned long long :0; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu15i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu15ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu15s { unsigned long long v1:31; unsigned long long :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu16i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu16ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu16s { unsigned long long v1:31; unsigned long long :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu17i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu17ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu1c { unsigned long long v1:31; unsigned long long :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu1i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu1ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu1s { unsigned long long v1:31; unsigned long long :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu31i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu31ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu32i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu32ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu33 { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu7c { unsigned long long v1:31; unsigned long long :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu7i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu7ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu7s { unsigned long long v1:31; unsigned long long :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu8c { unsigned long long v1:31; unsigned long long :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu8i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu8ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu8s { unsigned long long v1:31; unsigned long long :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu9i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu9ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_BFu9s { unsigned long long v1:31; unsigned long long :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_C { unsigned long long v1:31; unsigned long long :0; char v2; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_D { unsigned long long v1:31; unsigned long long :0; double v2; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_F { unsigned long long v1:31; unsigned long long :0; float v2; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_I { unsigned long long v1:31; unsigned long long :0; int v2; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_Ip { unsigned long long v1:31; unsigned long long :0; int * v2; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_L { unsigned long long v1:31; unsigned long long :0; long long v2; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_S { unsigned long long v1:31; unsigned long long :0; short v2; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_Uc { unsigned long long v1:31; unsigned long long :0; unsigned char v2; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_Ui { unsigned long long v1:31; unsigned long long :0; unsigned int v2; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_Ul { unsigned long long v1:31; unsigned long long :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_Us { unsigned long long v1:31; unsigned long long :0; unsigned short v2; };
struct __attribute__((packed)) aBFu31ll_BFu0ll_Vp { unsigned long long v1:31; unsigned long long :0; void * v2; };
struct __attribute__((packed)) aBFu31ll_BFu0s { unsigned long long v1:31; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu0c { unsigned long long v1:31; unsigned short :0; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu0i { unsigned long long v1:31; unsigned short :0; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu0ll { unsigned long long v1:31; unsigned short :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu0s { unsigned long long v1:31; unsigned short :0; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu15i { unsigned long long v1:31; unsigned short :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu15ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu15s { unsigned long long v1:31; unsigned short :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu16i { unsigned long long v1:31; unsigned short :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu16ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu16s { unsigned long long v1:31; unsigned short :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu17i { unsigned long long v1:31; unsigned short :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu17ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu1c { unsigned long long v1:31; unsigned short :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu1i { unsigned long long v1:31; unsigned short :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu1ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu1s { unsigned long long v1:31; unsigned short :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu31i { unsigned long long v1:31; unsigned short :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu31ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu32i { unsigned long long v1:31; unsigned short :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu32ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu33 { unsigned long long v1:31; unsigned short :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu7c { unsigned long long v1:31; unsigned short :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu7i { unsigned long long v1:31; unsigned short :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu7ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu7s { unsigned long long v1:31; unsigned short :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu8c { unsigned long long v1:31; unsigned short :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu8i { unsigned long long v1:31; unsigned short :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu8ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu8s { unsigned long long v1:31; unsigned short :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu9i { unsigned long long v1:31; unsigned short :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu9ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu31ll_BFu0s_BFu9s { unsigned long long v1:31; unsigned short :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu31ll_BFu0s_C { unsigned long long v1:31; unsigned short :0; char v2; };
struct __attribute__((packed)) aBFu31ll_BFu0s_D { unsigned long long v1:31; unsigned short :0; double v2; };
struct __attribute__((packed)) aBFu31ll_BFu0s_F { unsigned long long v1:31; unsigned short :0; float v2; };
struct __attribute__((packed)) aBFu31ll_BFu0s_I { unsigned long long v1:31; unsigned short :0; int v2; };
struct __attribute__((packed)) aBFu31ll_BFu0s_Ip { unsigned long long v1:31; unsigned short :0; int * v2; };
struct __attribute__((packed)) aBFu31ll_BFu0s_L { unsigned long long v1:31; unsigned short :0; long long v2; };
struct __attribute__((packed)) aBFu31ll_BFu0s_S { unsigned long long v1:31; unsigned short :0; short v2; };
struct __attribute__((packed)) aBFu31ll_BFu0s_Uc { unsigned long long v1:31; unsigned short :0; unsigned char v2; };
struct __attribute__((packed)) aBFu31ll_BFu0s_Ui { unsigned long long v1:31; unsigned short :0; unsigned int v2; };
struct __attribute__((packed)) aBFu31ll_BFu0s_Ul { unsigned long long v1:31; unsigned short :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu31ll_BFu0s_Us { unsigned long long v1:31; unsigned short :0; unsigned short v2; };
struct __attribute__((packed)) aBFu31ll_BFu0s_Vp { unsigned long long v1:31; unsigned short :0; void * v2; };
struct __attribute__((packed)) aBFu31ll_BFu15i_BFu0c { unsigned long long v1:31; unsigned int v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu15i_BFu0i { unsigned long long v1:31; unsigned int v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu15i_BFu0ll { unsigned long long v1:31; unsigned int v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu15i_BFu0s { unsigned long long v1:31; unsigned int v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu15ll_BFu0c { unsigned long long v1:31; unsigned long long v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu15ll_BFu0i { unsigned long long v1:31; unsigned long long v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu15ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu15ll_BFu0s { unsigned long long v1:31; unsigned long long v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu15s_BFu0c { unsigned long long v1:31; unsigned short v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu15s_BFu0i { unsigned long long v1:31; unsigned short v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu15s_BFu0ll { unsigned long long v1:31; unsigned short v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu15s_BFu0s { unsigned long long v1:31; unsigned short v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu16i_BFu0c { unsigned long long v1:31; unsigned int v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu16i_BFu0i { unsigned long long v1:31; unsigned int v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu16i_BFu0ll { unsigned long long v1:31; unsigned int v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu16i_BFu0s { unsigned long long v1:31; unsigned int v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu16ll_BFu0c { unsigned long long v1:31; unsigned long long v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu16ll_BFu0i { unsigned long long v1:31; unsigned long long v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu16ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu16ll_BFu0s { unsigned long long v1:31; unsigned long long v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu16s_BFu0c { unsigned long long v1:31; unsigned short v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu16s_BFu0i { unsigned long long v1:31; unsigned short v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu16s_BFu0ll { unsigned long long v1:31; unsigned short v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu16s_BFu0s { unsigned long long v1:31; unsigned short v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu17i_BFu0c { unsigned long long v1:31; unsigned int v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu17i_BFu0i { unsigned long long v1:31; unsigned int v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu17i_BFu0ll { unsigned long long v1:31; unsigned int v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu17i_BFu0s { unsigned long long v1:31; unsigned int v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu17ll_BFu0c { unsigned long long v1:31; unsigned long long v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu17ll_BFu0i { unsigned long long v1:31; unsigned long long v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu17ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu17ll_BFu0s { unsigned long long v1:31; unsigned long long v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu1c_BFu0c { unsigned long long v1:31; unsigned char v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu1c_BFu0i { unsigned long long v1:31; unsigned char v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu1c_BFu0ll { unsigned long long v1:31; unsigned char v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu1c_BFu0s { unsigned long long v1:31; unsigned char v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu1i_BFu0c { unsigned long long v1:31; unsigned int v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu1i_BFu0i { unsigned long long v1:31; unsigned int v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu1i_BFu0ll { unsigned long long v1:31; unsigned int v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu1i_BFu0s { unsigned long long v1:31; unsigned int v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu1ll_BFu0c { unsigned long long v1:31; unsigned long long v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu1ll_BFu0i { unsigned long long v1:31; unsigned long long v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu1ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu1ll_BFu0s { unsigned long long v1:31; unsigned long long v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu1s_BFu0c { unsigned long long v1:31; unsigned short v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu1s_BFu0i { unsigned long long v1:31; unsigned short v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu1s_BFu0ll { unsigned long long v1:31; unsigned short v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu1s_BFu0s { unsigned long long v1:31; unsigned short v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu31i_BFu0c { unsigned long long v1:31; unsigned int v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu31i_BFu0i { unsigned long long v1:31; unsigned int v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu31i_BFu0ll { unsigned long long v1:31; unsigned int v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu31i_BFu0s { unsigned long long v1:31; unsigned int v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu31ll_BFu0c { unsigned long long v1:31; unsigned long long v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu31ll_BFu0i { unsigned long long v1:31; unsigned long long v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu31ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu31ll_BFu0s { unsigned long long v1:31; unsigned long long v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu32i_BFu0c { unsigned long long v1:31; unsigned int v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu32i_BFu0i { unsigned long long v1:31; unsigned int v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu32i_BFu0ll { unsigned long long v1:31; unsigned int v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu32i_BFu0s { unsigned long long v1:31; unsigned int v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu32ll_BFu0c { unsigned long long v1:31; unsigned long long v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu32ll_BFu0i { unsigned long long v1:31; unsigned long long v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu32ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu32ll_BFu0s { unsigned long long v1:31; unsigned long long v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu33_BFu0c { unsigned long long v1:31; unsigned long long v2:33; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu33_BFu0i { unsigned long long v1:31; unsigned long long v2:33; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu33_BFu0ll { unsigned long long v1:31; unsigned long long v2:33; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu33_BFu0s { unsigned long long v1:31; unsigned long long v2:33; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu7c_BFu0c { unsigned long long v1:31; unsigned char v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu7c_BFu0i { unsigned long long v1:31; unsigned char v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu7c_BFu0ll { unsigned long long v1:31; unsigned char v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu7c_BFu0s { unsigned long long v1:31; unsigned char v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu7i_BFu0c { unsigned long long v1:31; unsigned int v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu7i_BFu0i { unsigned long long v1:31; unsigned int v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu7i_BFu0ll { unsigned long long v1:31; unsigned int v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu7i_BFu0s { unsigned long long v1:31; unsigned int v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu7ll_BFu0c { unsigned long long v1:31; unsigned long long v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu7ll_BFu0i { unsigned long long v1:31; unsigned long long v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu7ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu7ll_BFu0s { unsigned long long v1:31; unsigned long long v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu7s_BFu0c { unsigned long long v1:31; unsigned short v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu7s_BFu0i { unsigned long long v1:31; unsigned short v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu7s_BFu0ll { unsigned long long v1:31; unsigned short v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu7s_BFu0s { unsigned long long v1:31; unsigned short v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu8c_BFu0c { unsigned long long v1:31; unsigned char v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu8c_BFu0i { unsigned long long v1:31; unsigned char v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu8c_BFu0ll { unsigned long long v1:31; unsigned char v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu8c_BFu0s { unsigned long long v1:31; unsigned char v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu8i_BFu0c { unsigned long long v1:31; unsigned int v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu8i_BFu0i { unsigned long long v1:31; unsigned int v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu8i_BFu0ll { unsigned long long v1:31; unsigned int v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu8i_BFu0s { unsigned long long v1:31; unsigned int v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu8ll_BFu0c { unsigned long long v1:31; unsigned long long v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu8ll_BFu0i { unsigned long long v1:31; unsigned long long v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu8ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu8ll_BFu0s { unsigned long long v1:31; unsigned long long v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu8s_BFu0c { unsigned long long v1:31; unsigned short v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu8s_BFu0i { unsigned long long v1:31; unsigned short v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu8s_BFu0ll { unsigned long long v1:31; unsigned short v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu8s_BFu0s { unsigned long long v1:31; unsigned short v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu9i_BFu0c { unsigned long long v1:31; unsigned int v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu9i_BFu0i { unsigned long long v1:31; unsigned int v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu9i_BFu0ll { unsigned long long v1:31; unsigned int v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu9i_BFu0s { unsigned long long v1:31; unsigned int v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu9ll_BFu0c { unsigned long long v1:31; unsigned long long v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu9ll_BFu0i { unsigned long long v1:31; unsigned long long v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu9ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu9ll_BFu0s { unsigned long long v1:31; unsigned long long v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_BFu9s_BFu0c { unsigned long long v1:31; unsigned short v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_BFu9s_BFu0i { unsigned long long v1:31; unsigned short v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_BFu9s_BFu0ll { unsigned long long v1:31; unsigned short v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_BFu9s_BFu0s { unsigned long long v1:31; unsigned short v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_C_BFu0c { unsigned long long v1:31; char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_C_BFu0i { unsigned long long v1:31; char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_C_BFu0ll { unsigned long long v1:31; char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_C_BFu0s { unsigned long long v1:31; char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_D_BFu0c { unsigned long long v1:31; double v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_D_BFu0i { unsigned long long v1:31; double v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_D_BFu0ll { unsigned long long v1:31; double v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_D_BFu0s { unsigned long long v1:31; double v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_F_BFu0c { unsigned long long v1:31; float v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_F_BFu0i { unsigned long long v1:31; float v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_F_BFu0ll { unsigned long long v1:31; float v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_F_BFu0s { unsigned long long v1:31; float v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_I_BFu0c { unsigned long long v1:31; int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_I_BFu0i { unsigned long long v1:31; int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_I_BFu0ll { unsigned long long v1:31; int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_I_BFu0s { unsigned long long v1:31; int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_Ip_BFu0c { unsigned long long v1:31; int * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_Ip_BFu0i { unsigned long long v1:31; int * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_Ip_BFu0ll { unsigned long long v1:31; int * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_Ip_BFu0s { unsigned long long v1:31; int * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_L_BFu0c { unsigned long long v1:31; long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_L_BFu0i { unsigned long long v1:31; long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_L_BFu0ll { unsigned long long v1:31; long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_L_BFu0s { unsigned long long v1:31; long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_S_BFu0c { unsigned long long v1:31; short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_S_BFu0i { unsigned long long v1:31; short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_S_BFu0ll { unsigned long long v1:31; short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_S_BFu0s { unsigned long long v1:31; short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_Uc_BFu0c { unsigned long long v1:31; unsigned char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_Uc_BFu0i { unsigned long long v1:31; unsigned char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_Uc_BFu0ll { unsigned long long v1:31; unsigned char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_Uc_BFu0s { unsigned long long v1:31; unsigned char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_Ui_BFu0c { unsigned long long v1:31; unsigned int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_Ui_BFu0i { unsigned long long v1:31; unsigned int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_Ui_BFu0ll { unsigned long long v1:31; unsigned int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_Ui_BFu0s { unsigned long long v1:31; unsigned int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_Ul_BFu0c { unsigned long long v1:31; unsigned long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_Ul_BFu0i { unsigned long long v1:31; unsigned long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_Ul_BFu0ll { unsigned long long v1:31; unsigned long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_Ul_BFu0s { unsigned long long v1:31; unsigned long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_Us_BFu0c { unsigned long long v1:31; unsigned short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_Us_BFu0i { unsigned long long v1:31; unsigned short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_Us_BFu0ll { unsigned long long v1:31; unsigned short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_Us_BFu0s { unsigned long long v1:31; unsigned short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu31ll_Vp_BFu0c { unsigned long long v1:31; void * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu31ll_Vp_BFu0i { unsigned long long v1:31; void * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu31ll_Vp_BFu0ll { unsigned long long v1:31; void * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu31ll_Vp_BFu0s { unsigned long long v1:31; void * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu0c { unsigned int v1:32; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu0c { unsigned int v1:32; unsigned char :0; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu0i { unsigned int v1:32; unsigned char :0; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu0ll { unsigned int v1:32; unsigned char :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu0s { unsigned int v1:32; unsigned char :0; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu15i { unsigned int v1:32; unsigned char :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu15ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu15s { unsigned int v1:32; unsigned char :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu16i { unsigned int v1:32; unsigned char :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu16ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu16s { unsigned int v1:32; unsigned char :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu17i { unsigned int v1:32; unsigned char :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu17ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu1c { unsigned int v1:32; unsigned char :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu1i { unsigned int v1:32; unsigned char :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu1ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu1s { unsigned int v1:32; unsigned char :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu31i { unsigned int v1:32; unsigned char :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu31ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu32i { unsigned int v1:32; unsigned char :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu32ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu33 { unsigned int v1:32; unsigned char :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu7c { unsigned int v1:32; unsigned char :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu7i { unsigned int v1:32; unsigned char :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu7ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu7s { unsigned int v1:32; unsigned char :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu8c { unsigned int v1:32; unsigned char :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu8i { unsigned int v1:32; unsigned char :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu8ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu8s { unsigned int v1:32; unsigned char :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu9i { unsigned int v1:32; unsigned char :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu9ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu32i_BFu0c_BFu9s { unsigned int v1:32; unsigned char :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu32i_BFu0c_C { unsigned int v1:32; unsigned char :0; char v2; };
struct __attribute__((packed)) aBFu32i_BFu0c_D { unsigned int v1:32; unsigned char :0; double v2; };
struct __attribute__((packed)) aBFu32i_BFu0c_F { unsigned int v1:32; unsigned char :0; float v2; };
struct __attribute__((packed)) aBFu32i_BFu0c_I { unsigned int v1:32; unsigned char :0; int v2; };
struct __attribute__((packed)) aBFu32i_BFu0c_Ip { unsigned int v1:32; unsigned char :0; int * v2; };
struct __attribute__((packed)) aBFu32i_BFu0c_L { unsigned int v1:32; unsigned char :0; long long v2; };
struct __attribute__((packed)) aBFu32i_BFu0c_S { unsigned int v1:32; unsigned char :0; short v2; };
struct __attribute__((packed)) aBFu32i_BFu0c_Uc { unsigned int v1:32; unsigned char :0; unsigned char v2; };
struct __attribute__((packed)) aBFu32i_BFu0c_Ui { unsigned int v1:32; unsigned char :0; unsigned int v2; };
struct __attribute__((packed)) aBFu32i_BFu0c_Ul { unsigned int v1:32; unsigned char :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu32i_BFu0c_Us { unsigned int v1:32; unsigned char :0; unsigned short v2; };
struct __attribute__((packed)) aBFu32i_BFu0c_Vp { unsigned int v1:32; unsigned char :0; void * v2; };
struct __attribute__((packed)) aBFu32i_BFu0i { unsigned int v1:32; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu0c { unsigned int v1:32; unsigned int :0; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu0i { unsigned int v1:32; unsigned int :0; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu0ll { unsigned int v1:32; unsigned int :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu0s { unsigned int v1:32; unsigned int :0; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu15i { unsigned int v1:32; unsigned int :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu15ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu15s { unsigned int v1:32; unsigned int :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu16i { unsigned int v1:32; unsigned int :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu16ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu16s { unsigned int v1:32; unsigned int :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu17i { unsigned int v1:32; unsigned int :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu17ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu1c { unsigned int v1:32; unsigned int :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu1i { unsigned int v1:32; unsigned int :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu1ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu1s { unsigned int v1:32; unsigned int :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu31i { unsigned int v1:32; unsigned int :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu31ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu32i { unsigned int v1:32; unsigned int :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu32ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu33 { unsigned int v1:32; unsigned int :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu7c { unsigned int v1:32; unsigned int :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu7i { unsigned int v1:32; unsigned int :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu7ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu7s { unsigned int v1:32; unsigned int :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu8c { unsigned int v1:32; unsigned int :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu8i { unsigned int v1:32; unsigned int :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu8ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu8s { unsigned int v1:32; unsigned int :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu9i { unsigned int v1:32; unsigned int :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu9ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu32i_BFu0i_BFu9s { unsigned int v1:32; unsigned int :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu32i_BFu0i_C { unsigned int v1:32; unsigned int :0; char v2; };
struct __attribute__((packed)) aBFu32i_BFu0i_D { unsigned int v1:32; unsigned int :0; double v2; };
struct __attribute__((packed)) aBFu32i_BFu0i_F { unsigned int v1:32; unsigned int :0; float v2; };
struct __attribute__((packed)) aBFu32i_BFu0i_I { unsigned int v1:32; unsigned int :0; int v2; };
struct __attribute__((packed)) aBFu32i_BFu0i_Ip { unsigned int v1:32; unsigned int :0; int * v2; };
struct __attribute__((packed)) aBFu32i_BFu0i_L { unsigned int v1:32; unsigned int :0; long long v2; };
struct __attribute__((packed)) aBFu32i_BFu0i_S { unsigned int v1:32; unsigned int :0; short v2; };
struct __attribute__((packed)) aBFu32i_BFu0i_Uc { unsigned int v1:32; unsigned int :0; unsigned char v2; };
struct __attribute__((packed)) aBFu32i_BFu0i_Ui { unsigned int v1:32; unsigned int :0; unsigned int v2; };
struct __attribute__((packed)) aBFu32i_BFu0i_Ul { unsigned int v1:32; unsigned int :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu32i_BFu0i_Us { unsigned int v1:32; unsigned int :0; unsigned short v2; };
struct __attribute__((packed)) aBFu32i_BFu0i_Vp { unsigned int v1:32; unsigned int :0; void * v2; };
struct __attribute__((packed)) aBFu32i_BFu0ll { unsigned int v1:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu0c { unsigned int v1:32; unsigned long long :0; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu0i { unsigned int v1:32; unsigned long long :0; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu0ll { unsigned int v1:32; unsigned long long :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu0s { unsigned int v1:32; unsigned long long :0; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu15i { unsigned int v1:32; unsigned long long :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu15ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu15s { unsigned int v1:32; unsigned long long :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu16i { unsigned int v1:32; unsigned long long :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu16ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu16s { unsigned int v1:32; unsigned long long :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu17i { unsigned int v1:32; unsigned long long :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu17ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu1c { unsigned int v1:32; unsigned long long :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu1i { unsigned int v1:32; unsigned long long :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu1ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu1s { unsigned int v1:32; unsigned long long :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu31i { unsigned int v1:32; unsigned long long :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu31ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu32i { unsigned int v1:32; unsigned long long :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu32ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu33 { unsigned int v1:32; unsigned long long :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu7c { unsigned int v1:32; unsigned long long :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu7i { unsigned int v1:32; unsigned long long :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu7ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu7s { unsigned int v1:32; unsigned long long :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu8c { unsigned int v1:32; unsigned long long :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu8i { unsigned int v1:32; unsigned long long :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu8ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu8s { unsigned int v1:32; unsigned long long :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu9i { unsigned int v1:32; unsigned long long :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu9ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu32i_BFu0ll_BFu9s { unsigned int v1:32; unsigned long long :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu32i_BFu0ll_C { unsigned int v1:32; unsigned long long :0; char v2; };
struct __attribute__((packed)) aBFu32i_BFu0ll_D { unsigned int v1:32; unsigned long long :0; double v2; };
struct __attribute__((packed)) aBFu32i_BFu0ll_F { unsigned int v1:32; unsigned long long :0; float v2; };
struct __attribute__((packed)) aBFu32i_BFu0ll_I { unsigned int v1:32; unsigned long long :0; int v2; };
struct __attribute__((packed)) aBFu32i_BFu0ll_Ip { unsigned int v1:32; unsigned long long :0; int * v2; };
struct __attribute__((packed)) aBFu32i_BFu0ll_L { unsigned int v1:32; unsigned long long :0; long long v2; };
struct __attribute__((packed)) aBFu32i_BFu0ll_S { unsigned int v1:32; unsigned long long :0; short v2; };
struct __attribute__((packed)) aBFu32i_BFu0ll_Uc { unsigned int v1:32; unsigned long long :0; unsigned char v2; };
struct __attribute__((packed)) aBFu32i_BFu0ll_Ui { unsigned int v1:32; unsigned long long :0; unsigned int v2; };
struct __attribute__((packed)) aBFu32i_BFu0ll_Ul { unsigned int v1:32; unsigned long long :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu32i_BFu0ll_Us { unsigned int v1:32; unsigned long long :0; unsigned short v2; };
struct __attribute__((packed)) aBFu32i_BFu0ll_Vp { unsigned int v1:32; unsigned long long :0; void * v2; };
struct __attribute__((packed)) aBFu32i_BFu0s { unsigned int v1:32; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu0c { unsigned int v1:32; unsigned short :0; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu0i { unsigned int v1:32; unsigned short :0; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu0ll { unsigned int v1:32; unsigned short :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu0s { unsigned int v1:32; unsigned short :0; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu15i { unsigned int v1:32; unsigned short :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu15ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu15s { unsigned int v1:32; unsigned short :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu16i { unsigned int v1:32; unsigned short :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu16ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu16s { unsigned int v1:32; unsigned short :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu17i { unsigned int v1:32; unsigned short :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu17ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu1c { unsigned int v1:32; unsigned short :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu1i { unsigned int v1:32; unsigned short :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu1ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu1s { unsigned int v1:32; unsigned short :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu31i { unsigned int v1:32; unsigned short :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu31ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu32i { unsigned int v1:32; unsigned short :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu32ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu33 { unsigned int v1:32; unsigned short :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu7c { unsigned int v1:32; unsigned short :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu7i { unsigned int v1:32; unsigned short :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu7ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu7s { unsigned int v1:32; unsigned short :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu8c { unsigned int v1:32; unsigned short :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu8i { unsigned int v1:32; unsigned short :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu8ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu8s { unsigned int v1:32; unsigned short :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu9i { unsigned int v1:32; unsigned short :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu9ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu32i_BFu0s_BFu9s { unsigned int v1:32; unsigned short :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu32i_BFu0s_C { unsigned int v1:32; unsigned short :0; char v2; };
struct __attribute__((packed)) aBFu32i_BFu0s_D { unsigned int v1:32; unsigned short :0; double v2; };
struct __attribute__((packed)) aBFu32i_BFu0s_F { unsigned int v1:32; unsigned short :0; float v2; };
struct __attribute__((packed)) aBFu32i_BFu0s_I { unsigned int v1:32; unsigned short :0; int v2; };
struct __attribute__((packed)) aBFu32i_BFu0s_Ip { unsigned int v1:32; unsigned short :0; int * v2; };
struct __attribute__((packed)) aBFu32i_BFu0s_L { unsigned int v1:32; unsigned short :0; long long v2; };
struct __attribute__((packed)) aBFu32i_BFu0s_S { unsigned int v1:32; unsigned short :0; short v2; };
struct __attribute__((packed)) aBFu32i_BFu0s_Uc { unsigned int v1:32; unsigned short :0; unsigned char v2; };
struct __attribute__((packed)) aBFu32i_BFu0s_Ui { unsigned int v1:32; unsigned short :0; unsigned int v2; };
struct __attribute__((packed)) aBFu32i_BFu0s_Ul { unsigned int v1:32; unsigned short :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu32i_BFu0s_Us { unsigned int v1:32; unsigned short :0; unsigned short v2; };
struct __attribute__((packed)) aBFu32i_BFu0s_Vp { unsigned int v1:32; unsigned short :0; void * v2; };
struct __attribute__((packed)) aBFu32i_BFu15i_BFu0c { unsigned int v1:32; unsigned int v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu15i_BFu0i { unsigned int v1:32; unsigned int v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu15i_BFu0ll { unsigned int v1:32; unsigned int v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu15i_BFu0s { unsigned int v1:32; unsigned int v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu15ll_BFu0c { unsigned int v1:32; unsigned long long v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu15ll_BFu0i { unsigned int v1:32; unsigned long long v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu15ll_BFu0ll { unsigned int v1:32; unsigned long long v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu15ll_BFu0s { unsigned int v1:32; unsigned long long v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu15s_BFu0c { unsigned int v1:32; unsigned short v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu15s_BFu0i { unsigned int v1:32; unsigned short v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu15s_BFu0ll { unsigned int v1:32; unsigned short v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu15s_BFu0s { unsigned int v1:32; unsigned short v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu16i_BFu0c { unsigned int v1:32; unsigned int v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu16i_BFu0i { unsigned int v1:32; unsigned int v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu16i_BFu0ll { unsigned int v1:32; unsigned int v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu16i_BFu0s { unsigned int v1:32; unsigned int v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu16ll_BFu0c { unsigned int v1:32; unsigned long long v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu16ll_BFu0i { unsigned int v1:32; unsigned long long v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu16ll_BFu0ll { unsigned int v1:32; unsigned long long v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu16ll_BFu0s { unsigned int v1:32; unsigned long long v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu16s_BFu0c { unsigned int v1:32; unsigned short v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu16s_BFu0i { unsigned int v1:32; unsigned short v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu16s_BFu0ll { unsigned int v1:32; unsigned short v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu16s_BFu0s { unsigned int v1:32; unsigned short v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu17i_BFu0c { unsigned int v1:32; unsigned int v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu17i_BFu0i { unsigned int v1:32; unsigned int v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu17i_BFu0ll { unsigned int v1:32; unsigned int v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu17i_BFu0s { unsigned int v1:32; unsigned int v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu17ll_BFu0c { unsigned int v1:32; unsigned long long v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu17ll_BFu0i { unsigned int v1:32; unsigned long long v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu17ll_BFu0ll { unsigned int v1:32; unsigned long long v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu17ll_BFu0s { unsigned int v1:32; unsigned long long v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu1c_BFu0c { unsigned int v1:32; unsigned char v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu1c_BFu0i { unsigned int v1:32; unsigned char v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu1c_BFu0ll { unsigned int v1:32; unsigned char v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu1c_BFu0s { unsigned int v1:32; unsigned char v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu1i_BFu0c { unsigned int v1:32; unsigned int v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu1i_BFu0i { unsigned int v1:32; unsigned int v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu1i_BFu0ll { unsigned int v1:32; unsigned int v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu1i_BFu0s { unsigned int v1:32; unsigned int v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu1ll_BFu0c { unsigned int v1:32; unsigned long long v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu1ll_BFu0i { unsigned int v1:32; unsigned long long v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu1ll_BFu0ll { unsigned int v1:32; unsigned long long v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu1ll_BFu0s { unsigned int v1:32; unsigned long long v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu1s_BFu0c { unsigned int v1:32; unsigned short v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu1s_BFu0i { unsigned int v1:32; unsigned short v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu1s_BFu0ll { unsigned int v1:32; unsigned short v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu1s_BFu0s { unsigned int v1:32; unsigned short v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu31i_BFu0c { unsigned int v1:32; unsigned int v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu31i_BFu0i { unsigned int v1:32; unsigned int v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu31i_BFu0ll { unsigned int v1:32; unsigned int v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu31i_BFu0s { unsigned int v1:32; unsigned int v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu31ll_BFu0c { unsigned int v1:32; unsigned long long v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu31ll_BFu0i { unsigned int v1:32; unsigned long long v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu31ll_BFu0ll { unsigned int v1:32; unsigned long long v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu31ll_BFu0s { unsigned int v1:32; unsigned long long v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu32i_BFu0c { unsigned int v1:32; unsigned int v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu32i_BFu0i { unsigned int v1:32; unsigned int v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu32i_BFu0ll { unsigned int v1:32; unsigned int v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu32i_BFu0s { unsigned int v1:32; unsigned int v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu32ll_BFu0c { unsigned int v1:32; unsigned long long v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu32ll_BFu0i { unsigned int v1:32; unsigned long long v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu32ll_BFu0ll { unsigned int v1:32; unsigned long long v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu32ll_BFu0s { unsigned int v1:32; unsigned long long v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu33_BFu0c { unsigned int v1:32; unsigned long long v2:33; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu33_BFu0i { unsigned int v1:32; unsigned long long v2:33; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu33_BFu0ll { unsigned int v1:32; unsigned long long v2:33; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu33_BFu0s { unsigned int v1:32; unsigned long long v2:33; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu7c_BFu0c { unsigned int v1:32; unsigned char v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu7c_BFu0i { unsigned int v1:32; unsigned char v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu7c_BFu0ll { unsigned int v1:32; unsigned char v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu7c_BFu0s { unsigned int v1:32; unsigned char v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu7i_BFu0c { unsigned int v1:32; unsigned int v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu7i_BFu0i { unsigned int v1:32; unsigned int v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu7i_BFu0ll { unsigned int v1:32; unsigned int v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu7i_BFu0s { unsigned int v1:32; unsigned int v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu7ll_BFu0c { unsigned int v1:32; unsigned long long v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu7ll_BFu0i { unsigned int v1:32; unsigned long long v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu7ll_BFu0ll { unsigned int v1:32; unsigned long long v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu7ll_BFu0s { unsigned int v1:32; unsigned long long v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu7s_BFu0c { unsigned int v1:32; unsigned short v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu7s_BFu0i { unsigned int v1:32; unsigned short v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu7s_BFu0ll { unsigned int v1:32; unsigned short v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu7s_BFu0s { unsigned int v1:32; unsigned short v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu8c_BFu0c { unsigned int v1:32; unsigned char v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu8c_BFu0i { unsigned int v1:32; unsigned char v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu8c_BFu0ll { unsigned int v1:32; unsigned char v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu8c_BFu0s { unsigned int v1:32; unsigned char v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu8i_BFu0c { unsigned int v1:32; unsigned int v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu8i_BFu0i { unsigned int v1:32; unsigned int v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu8i_BFu0ll { unsigned int v1:32; unsigned int v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu8i_BFu0s { unsigned int v1:32; unsigned int v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu8ll_BFu0c { unsigned int v1:32; unsigned long long v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu8ll_BFu0i { unsigned int v1:32; unsigned long long v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu8ll_BFu0ll { unsigned int v1:32; unsigned long long v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu8ll_BFu0s { unsigned int v1:32; unsigned long long v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu8s_BFu0c { unsigned int v1:32; unsigned short v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu8s_BFu0i { unsigned int v1:32; unsigned short v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu8s_BFu0ll { unsigned int v1:32; unsigned short v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu8s_BFu0s { unsigned int v1:32; unsigned short v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu9i_BFu0c { unsigned int v1:32; unsigned int v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu9i_BFu0i { unsigned int v1:32; unsigned int v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu9i_BFu0ll { unsigned int v1:32; unsigned int v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu9i_BFu0s { unsigned int v1:32; unsigned int v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu9ll_BFu0c { unsigned int v1:32; unsigned long long v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu9ll_BFu0i { unsigned int v1:32; unsigned long long v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu9ll_BFu0ll { unsigned int v1:32; unsigned long long v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu9ll_BFu0s { unsigned int v1:32; unsigned long long v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_BFu9s_BFu0c { unsigned int v1:32; unsigned short v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_BFu9s_BFu0i { unsigned int v1:32; unsigned short v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_BFu9s_BFu0ll { unsigned int v1:32; unsigned short v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_BFu9s_BFu0s { unsigned int v1:32; unsigned short v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_C_BFu0c { unsigned int v1:32; char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_C_BFu0i { unsigned int v1:32; char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_C_BFu0ll { unsigned int v1:32; char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_C_BFu0s { unsigned int v1:32; char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_D_BFu0c { unsigned int v1:32; double v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_D_BFu0i { unsigned int v1:32; double v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_D_BFu0ll { unsigned int v1:32; double v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_D_BFu0s { unsigned int v1:32; double v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_F_BFu0c { unsigned int v1:32; float v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_F_BFu0i { unsigned int v1:32; float v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_F_BFu0ll { unsigned int v1:32; float v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_F_BFu0s { unsigned int v1:32; float v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_I_BFu0c { unsigned int v1:32; int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_I_BFu0i { unsigned int v1:32; int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_I_BFu0ll { unsigned int v1:32; int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_I_BFu0s { unsigned int v1:32; int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_Ip_BFu0c { unsigned int v1:32; int * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_Ip_BFu0i { unsigned int v1:32; int * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_Ip_BFu0ll { unsigned int v1:32; int * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_Ip_BFu0s { unsigned int v1:32; int * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_L_BFu0c { unsigned int v1:32; long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_L_BFu0i { unsigned int v1:32; long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_L_BFu0ll { unsigned int v1:32; long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_L_BFu0s { unsigned int v1:32; long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_S_BFu0c { unsigned int v1:32; short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_S_BFu0i { unsigned int v1:32; short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_S_BFu0ll { unsigned int v1:32; short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_S_BFu0s { unsigned int v1:32; short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_Uc_BFu0c { unsigned int v1:32; unsigned char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_Uc_BFu0i { unsigned int v1:32; unsigned char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_Uc_BFu0ll { unsigned int v1:32; unsigned char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_Uc_BFu0s { unsigned int v1:32; unsigned char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_Ui_BFu0c { unsigned int v1:32; unsigned int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_Ui_BFu0i { unsigned int v1:32; unsigned int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_Ui_BFu0ll { unsigned int v1:32; unsigned int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_Ui_BFu0s { unsigned int v1:32; unsigned int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_Ul_BFu0c { unsigned int v1:32; unsigned long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_Ul_BFu0i { unsigned int v1:32; unsigned long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_Ul_BFu0ll { unsigned int v1:32; unsigned long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_Ul_BFu0s { unsigned int v1:32; unsigned long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_Us_BFu0c { unsigned int v1:32; unsigned short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_Us_BFu0i { unsigned int v1:32; unsigned short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_Us_BFu0ll { unsigned int v1:32; unsigned short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_Us_BFu0s { unsigned int v1:32; unsigned short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32i_Vp_BFu0c { unsigned int v1:32; void * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32i_Vp_BFu0i { unsigned int v1:32; void * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32i_Vp_BFu0ll { unsigned int v1:32; void * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32i_Vp_BFu0s { unsigned int v1:32; void * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu0c { unsigned long long v1:32; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu0c { unsigned long long v1:32; unsigned char :0; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu0i { unsigned long long v1:32; unsigned char :0; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu0ll { unsigned long long v1:32; unsigned char :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu0s { unsigned long long v1:32; unsigned char :0; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu15i { unsigned long long v1:32; unsigned char :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu15ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu15s { unsigned long long v1:32; unsigned char :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu16i { unsigned long long v1:32; unsigned char :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu16ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu16s { unsigned long long v1:32; unsigned char :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu17i { unsigned long long v1:32; unsigned char :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu17ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu1c { unsigned long long v1:32; unsigned char :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu1i { unsigned long long v1:32; unsigned char :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu1ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu1s { unsigned long long v1:32; unsigned char :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu31i { unsigned long long v1:32; unsigned char :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu31ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu32i { unsigned long long v1:32; unsigned char :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu32ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu33 { unsigned long long v1:32; unsigned char :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu7c { unsigned long long v1:32; unsigned char :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu7i { unsigned long long v1:32; unsigned char :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu7ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu7s { unsigned long long v1:32; unsigned char :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu8c { unsigned long long v1:32; unsigned char :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu8i { unsigned long long v1:32; unsigned char :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu8ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu8s { unsigned long long v1:32; unsigned char :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu9i { unsigned long long v1:32; unsigned char :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu9ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu32ll_BFu0c_BFu9s { unsigned long long v1:32; unsigned char :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu32ll_BFu0c_C { unsigned long long v1:32; unsigned char :0; char v2; };
struct __attribute__((packed)) aBFu32ll_BFu0c_D { unsigned long long v1:32; unsigned char :0; double v2; };
struct __attribute__((packed)) aBFu32ll_BFu0c_F { unsigned long long v1:32; unsigned char :0; float v2; };
struct __attribute__((packed)) aBFu32ll_BFu0c_I { unsigned long long v1:32; unsigned char :0; int v2; };
struct __attribute__((packed)) aBFu32ll_BFu0c_Ip { unsigned long long v1:32; unsigned char :0; int * v2; };
struct __attribute__((packed)) aBFu32ll_BFu0c_L { unsigned long long v1:32; unsigned char :0; long long v2; };
struct __attribute__((packed)) aBFu32ll_BFu0c_S { unsigned long long v1:32; unsigned char :0; short v2; };
struct __attribute__((packed)) aBFu32ll_BFu0c_Uc { unsigned long long v1:32; unsigned char :0; unsigned char v2; };
struct __attribute__((packed)) aBFu32ll_BFu0c_Ui { unsigned long long v1:32; unsigned char :0; unsigned int v2; };
struct __attribute__((packed)) aBFu32ll_BFu0c_Ul { unsigned long long v1:32; unsigned char :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu32ll_BFu0c_Us { unsigned long long v1:32; unsigned char :0; unsigned short v2; };
struct __attribute__((packed)) aBFu32ll_BFu0c_Vp { unsigned long long v1:32; unsigned char :0; void * v2; };
struct __attribute__((packed)) aBFu32ll_BFu0i { unsigned long long v1:32; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu0c { unsigned long long v1:32; unsigned int :0; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu0i { unsigned long long v1:32; unsigned int :0; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu0ll { unsigned long long v1:32; unsigned int :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu0s { unsigned long long v1:32; unsigned int :0; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu15i { unsigned long long v1:32; unsigned int :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu15ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu15s { unsigned long long v1:32; unsigned int :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu16i { unsigned long long v1:32; unsigned int :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu16ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu16s { unsigned long long v1:32; unsigned int :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu17i { unsigned long long v1:32; unsigned int :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu17ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu1c { unsigned long long v1:32; unsigned int :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu1i { unsigned long long v1:32; unsigned int :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu1ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu1s { unsigned long long v1:32; unsigned int :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu31i { unsigned long long v1:32; unsigned int :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu31ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu32i { unsigned long long v1:32; unsigned int :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu32ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu33 { unsigned long long v1:32; unsigned int :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu7c { unsigned long long v1:32; unsigned int :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu7i { unsigned long long v1:32; unsigned int :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu7ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu7s { unsigned long long v1:32; unsigned int :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu8c { unsigned long long v1:32; unsigned int :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu8i { unsigned long long v1:32; unsigned int :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu8ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu8s { unsigned long long v1:32; unsigned int :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu9i { unsigned long long v1:32; unsigned int :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu9ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu32ll_BFu0i_BFu9s { unsigned long long v1:32; unsigned int :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu32ll_BFu0i_C { unsigned long long v1:32; unsigned int :0; char v2; };
struct __attribute__((packed)) aBFu32ll_BFu0i_D { unsigned long long v1:32; unsigned int :0; double v2; };
struct __attribute__((packed)) aBFu32ll_BFu0i_F { unsigned long long v1:32; unsigned int :0; float v2; };
struct __attribute__((packed)) aBFu32ll_BFu0i_I { unsigned long long v1:32; unsigned int :0; int v2; };
struct __attribute__((packed)) aBFu32ll_BFu0i_Ip { unsigned long long v1:32; unsigned int :0; int * v2; };
struct __attribute__((packed)) aBFu32ll_BFu0i_L { unsigned long long v1:32; unsigned int :0; long long v2; };
struct __attribute__((packed)) aBFu32ll_BFu0i_S { unsigned long long v1:32; unsigned int :0; short v2; };
struct __attribute__((packed)) aBFu32ll_BFu0i_Uc { unsigned long long v1:32; unsigned int :0; unsigned char v2; };
struct __attribute__((packed)) aBFu32ll_BFu0i_Ui { unsigned long long v1:32; unsigned int :0; unsigned int v2; };
struct __attribute__((packed)) aBFu32ll_BFu0i_Ul { unsigned long long v1:32; unsigned int :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu32ll_BFu0i_Us { unsigned long long v1:32; unsigned int :0; unsigned short v2; };
struct __attribute__((packed)) aBFu32ll_BFu0i_Vp { unsigned long long v1:32; unsigned int :0; void * v2; };
struct __attribute__((packed)) aBFu32ll_BFu0ll { unsigned long long v1:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu0c { unsigned long long v1:32; unsigned long long :0; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu0i { unsigned long long v1:32; unsigned long long :0; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu0ll { unsigned long long v1:32; unsigned long long :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu0s { unsigned long long v1:32; unsigned long long :0; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu15i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu15ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu15s { unsigned long long v1:32; unsigned long long :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu16i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu16ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu16s { unsigned long long v1:32; unsigned long long :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu17i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu17ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu1c { unsigned long long v1:32; unsigned long long :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu1i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu1ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu1s { unsigned long long v1:32; unsigned long long :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu31i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu31ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu32i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu32ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu33 { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu7c { unsigned long long v1:32; unsigned long long :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu7i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu7ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu7s { unsigned long long v1:32; unsigned long long :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu8c { unsigned long long v1:32; unsigned long long :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu8i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu8ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu8s { unsigned long long v1:32; unsigned long long :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu9i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu9ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_BFu9s { unsigned long long v1:32; unsigned long long :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_C { unsigned long long v1:32; unsigned long long :0; char v2; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_D { unsigned long long v1:32; unsigned long long :0; double v2; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_F { unsigned long long v1:32; unsigned long long :0; float v2; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_I { unsigned long long v1:32; unsigned long long :0; int v2; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_Ip { unsigned long long v1:32; unsigned long long :0; int * v2; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_L { unsigned long long v1:32; unsigned long long :0; long long v2; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_S { unsigned long long v1:32; unsigned long long :0; short v2; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_Uc { unsigned long long v1:32; unsigned long long :0; unsigned char v2; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_Ui { unsigned long long v1:32; unsigned long long :0; unsigned int v2; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_Ul { unsigned long long v1:32; unsigned long long :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_Us { unsigned long long v1:32; unsigned long long :0; unsigned short v2; };
struct __attribute__((packed)) aBFu32ll_BFu0ll_Vp { unsigned long long v1:32; unsigned long long :0; void * v2; };
struct __attribute__((packed)) aBFu32ll_BFu0s { unsigned long long v1:32; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu0c { unsigned long long v1:32; unsigned short :0; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu0i { unsigned long long v1:32; unsigned short :0; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu0ll { unsigned long long v1:32; unsigned short :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu0s { unsigned long long v1:32; unsigned short :0; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu15i { unsigned long long v1:32; unsigned short :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu15ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu15s { unsigned long long v1:32; unsigned short :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu16i { unsigned long long v1:32; unsigned short :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu16ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu16s { unsigned long long v1:32; unsigned short :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu17i { unsigned long long v1:32; unsigned short :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu17ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu1c { unsigned long long v1:32; unsigned short :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu1i { unsigned long long v1:32; unsigned short :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu1ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu1s { unsigned long long v1:32; unsigned short :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu31i { unsigned long long v1:32; unsigned short :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu31ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu32i { unsigned long long v1:32; unsigned short :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu32ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu33 { unsigned long long v1:32; unsigned short :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu7c { unsigned long long v1:32; unsigned short :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu7i { unsigned long long v1:32; unsigned short :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu7ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu7s { unsigned long long v1:32; unsigned short :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu8c { unsigned long long v1:32; unsigned short :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu8i { unsigned long long v1:32; unsigned short :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu8ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu8s { unsigned long long v1:32; unsigned short :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu9i { unsigned long long v1:32; unsigned short :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu9ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu32ll_BFu0s_BFu9s { unsigned long long v1:32; unsigned short :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu32ll_BFu0s_C { unsigned long long v1:32; unsigned short :0; char v2; };
struct __attribute__((packed)) aBFu32ll_BFu0s_D { unsigned long long v1:32; unsigned short :0; double v2; };
struct __attribute__((packed)) aBFu32ll_BFu0s_F { unsigned long long v1:32; unsigned short :0; float v2; };
struct __attribute__((packed)) aBFu32ll_BFu0s_I { unsigned long long v1:32; unsigned short :0; int v2; };
struct __attribute__((packed)) aBFu32ll_BFu0s_Ip { unsigned long long v1:32; unsigned short :0; int * v2; };
struct __attribute__((packed)) aBFu32ll_BFu0s_L { unsigned long long v1:32; unsigned short :0; long long v2; };
struct __attribute__((packed)) aBFu32ll_BFu0s_S { unsigned long long v1:32; unsigned short :0; short v2; };
struct __attribute__((packed)) aBFu32ll_BFu0s_Uc { unsigned long long v1:32; unsigned short :0; unsigned char v2; };
struct __attribute__((packed)) aBFu32ll_BFu0s_Ui { unsigned long long v1:32; unsigned short :0; unsigned int v2; };
struct __attribute__((packed)) aBFu32ll_BFu0s_Ul { unsigned long long v1:32; unsigned short :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu32ll_BFu0s_Us { unsigned long long v1:32; unsigned short :0; unsigned short v2; };
struct __attribute__((packed)) aBFu32ll_BFu0s_Vp { unsigned long long v1:32; unsigned short :0; void * v2; };
struct __attribute__((packed)) aBFu32ll_BFu15i_BFu0c { unsigned long long v1:32; unsigned int v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu15i_BFu0i { unsigned long long v1:32; unsigned int v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu15i_BFu0ll { unsigned long long v1:32; unsigned int v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu15i_BFu0s { unsigned long long v1:32; unsigned int v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu15ll_BFu0c { unsigned long long v1:32; unsigned long long v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu15ll_BFu0i { unsigned long long v1:32; unsigned long long v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu15ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu15ll_BFu0s { unsigned long long v1:32; unsigned long long v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu15s_BFu0c { unsigned long long v1:32; unsigned short v2:15; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu15s_BFu0i { unsigned long long v1:32; unsigned short v2:15; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu15s_BFu0ll { unsigned long long v1:32; unsigned short v2:15; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu15s_BFu0s { unsigned long long v1:32; unsigned short v2:15; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu16i_BFu0c { unsigned long long v1:32; unsigned int v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu16i_BFu0i { unsigned long long v1:32; unsigned int v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu16i_BFu0ll { unsigned long long v1:32; unsigned int v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu16i_BFu0s { unsigned long long v1:32; unsigned int v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu16ll_BFu0c { unsigned long long v1:32; unsigned long long v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu16ll_BFu0i { unsigned long long v1:32; unsigned long long v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu16ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu16ll_BFu0s { unsigned long long v1:32; unsigned long long v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu16s_BFu0c { unsigned long long v1:32; unsigned short v2:16; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu16s_BFu0i { unsigned long long v1:32; unsigned short v2:16; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu16s_BFu0ll { unsigned long long v1:32; unsigned short v2:16; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu16s_BFu0s { unsigned long long v1:32; unsigned short v2:16; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu17i_BFu0c { unsigned long long v1:32; unsigned int v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu17i_BFu0i { unsigned long long v1:32; unsigned int v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu17i_BFu0ll { unsigned long long v1:32; unsigned int v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu17i_BFu0s { unsigned long long v1:32; unsigned int v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu17ll_BFu0c { unsigned long long v1:32; unsigned long long v2:17; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu17ll_BFu0i { unsigned long long v1:32; unsigned long long v2:17; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu17ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:17; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu17ll_BFu0s { unsigned long long v1:32; unsigned long long v2:17; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu1c_BFu0c { unsigned long long v1:32; unsigned char v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu1c_BFu0i { unsigned long long v1:32; unsigned char v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu1c_BFu0ll { unsigned long long v1:32; unsigned char v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu1c_BFu0s { unsigned long long v1:32; unsigned char v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu1i_BFu0c { unsigned long long v1:32; unsigned int v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu1i_BFu0i { unsigned long long v1:32; unsigned int v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu1i_BFu0ll { unsigned long long v1:32; unsigned int v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu1i_BFu0s { unsigned long long v1:32; unsigned int v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu1ll_BFu0c { unsigned long long v1:32; unsigned long long v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu1ll_BFu0i { unsigned long long v1:32; unsigned long long v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu1ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu1ll_BFu0s { unsigned long long v1:32; unsigned long long v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu1s_BFu0c { unsigned long long v1:32; unsigned short v2:1; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu1s_BFu0i { unsigned long long v1:32; unsigned short v2:1; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu1s_BFu0ll { unsigned long long v1:32; unsigned short v2:1; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu1s_BFu0s { unsigned long long v1:32; unsigned short v2:1; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu31i_BFu0c { unsigned long long v1:32; unsigned int v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu31i_BFu0i { unsigned long long v1:32; unsigned int v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu31i_BFu0ll { unsigned long long v1:32; unsigned int v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu31i_BFu0s { unsigned long long v1:32; unsigned int v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu31ll_BFu0c { unsigned long long v1:32; unsigned long long v2:31; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu31ll_BFu0i { unsigned long long v1:32; unsigned long long v2:31; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu31ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:31; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu31ll_BFu0s { unsigned long long v1:32; unsigned long long v2:31; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu32i_BFu0c { unsigned long long v1:32; unsigned int v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu32i_BFu0i { unsigned long long v1:32; unsigned int v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu32i_BFu0ll { unsigned long long v1:32; unsigned int v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu32i_BFu0s { unsigned long long v1:32; unsigned int v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu32ll_BFu0c { unsigned long long v1:32; unsigned long long v2:32; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu32ll_BFu0i { unsigned long long v1:32; unsigned long long v2:32; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu32ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:32; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu32ll_BFu0s { unsigned long long v1:32; unsigned long long v2:32; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu33_BFu0c { unsigned long long v1:32; unsigned long long v2:33; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu33_BFu0i { unsigned long long v1:32; unsigned long long v2:33; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu33_BFu0ll { unsigned long long v1:32; unsigned long long v2:33; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu33_BFu0s { unsigned long long v1:32; unsigned long long v2:33; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu7c_BFu0c { unsigned long long v1:32; unsigned char v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu7c_BFu0i { unsigned long long v1:32; unsigned char v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu7c_BFu0ll { unsigned long long v1:32; unsigned char v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu7c_BFu0s { unsigned long long v1:32; unsigned char v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu7i_BFu0c { unsigned long long v1:32; unsigned int v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu7i_BFu0i { unsigned long long v1:32; unsigned int v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu7i_BFu0ll { unsigned long long v1:32; unsigned int v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu7i_BFu0s { unsigned long long v1:32; unsigned int v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu7ll_BFu0c { unsigned long long v1:32; unsigned long long v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu7ll_BFu0i { unsigned long long v1:32; unsigned long long v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu7ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu7ll_BFu0s { unsigned long long v1:32; unsigned long long v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu7s_BFu0c { unsigned long long v1:32; unsigned short v2:7; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu7s_BFu0i { unsigned long long v1:32; unsigned short v2:7; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu7s_BFu0ll { unsigned long long v1:32; unsigned short v2:7; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu7s_BFu0s { unsigned long long v1:32; unsigned short v2:7; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu8c_BFu0c { unsigned long long v1:32; unsigned char v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu8c_BFu0i { unsigned long long v1:32; unsigned char v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu8c_BFu0ll { unsigned long long v1:32; unsigned char v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu8c_BFu0s { unsigned long long v1:32; unsigned char v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu8i_BFu0c { unsigned long long v1:32; unsigned int v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu8i_BFu0i { unsigned long long v1:32; unsigned int v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu8i_BFu0ll { unsigned long long v1:32; unsigned int v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu8i_BFu0s { unsigned long long v1:32; unsigned int v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu8ll_BFu0c { unsigned long long v1:32; unsigned long long v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu8ll_BFu0i { unsigned long long v1:32; unsigned long long v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu8ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu8ll_BFu0s { unsigned long long v1:32; unsigned long long v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu8s_BFu0c { unsigned long long v1:32; unsigned short v2:8; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu8s_BFu0i { unsigned long long v1:32; unsigned short v2:8; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu8s_BFu0ll { unsigned long long v1:32; unsigned short v2:8; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu8s_BFu0s { unsigned long long v1:32; unsigned short v2:8; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu9i_BFu0c { unsigned long long v1:32; unsigned int v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu9i_BFu0i { unsigned long long v1:32; unsigned int v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu9i_BFu0ll { unsigned long long v1:32; unsigned int v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu9i_BFu0s { unsigned long long v1:32; unsigned int v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu9ll_BFu0c { unsigned long long v1:32; unsigned long long v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu9ll_BFu0i { unsigned long long v1:32; unsigned long long v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu9ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu9ll_BFu0s { unsigned long long v1:32; unsigned long long v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_BFu9s_BFu0c { unsigned long long v1:32; unsigned short v2:9; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_BFu9s_BFu0i { unsigned long long v1:32; unsigned short v2:9; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_BFu9s_BFu0ll { unsigned long long v1:32; unsigned short v2:9; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_BFu9s_BFu0s { unsigned long long v1:32; unsigned short v2:9; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_C_BFu0c { unsigned long long v1:32; char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_C_BFu0i { unsigned long long v1:32; char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_C_BFu0ll { unsigned long long v1:32; char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_C_BFu0s { unsigned long long v1:32; char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_D_BFu0c { unsigned long long v1:32; double v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_D_BFu0i { unsigned long long v1:32; double v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_D_BFu0ll { unsigned long long v1:32; double v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_D_BFu0s { unsigned long long v1:32; double v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_F_BFu0c { unsigned long long v1:32; float v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_F_BFu0i { unsigned long long v1:32; float v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_F_BFu0ll { unsigned long long v1:32; float v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_F_BFu0s { unsigned long long v1:32; float v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_I_BFu0c { unsigned long long v1:32; int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_I_BFu0i { unsigned long long v1:32; int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_I_BFu0ll { unsigned long long v1:32; int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_I_BFu0s { unsigned long long v1:32; int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_Ip_BFu0c { unsigned long long v1:32; int * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_Ip_BFu0i { unsigned long long v1:32; int * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_Ip_BFu0ll { unsigned long long v1:32; int * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_Ip_BFu0s { unsigned long long v1:32; int * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_L_BFu0c { unsigned long long v1:32; long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_L_BFu0i { unsigned long long v1:32; long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_L_BFu0ll { unsigned long long v1:32; long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_L_BFu0s { unsigned long long v1:32; long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_S_BFu0c { unsigned long long v1:32; short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_S_BFu0i { unsigned long long v1:32; short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_S_BFu0ll { unsigned long long v1:32; short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_S_BFu0s { unsigned long long v1:32; short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_Uc_BFu0c { unsigned long long v1:32; unsigned char v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_Uc_BFu0i { unsigned long long v1:32; unsigned char v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_Uc_BFu0ll { unsigned long long v1:32; unsigned char v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_Uc_BFu0s { unsigned long long v1:32; unsigned char v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_Ui_BFu0c { unsigned long long v1:32; unsigned int v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_Ui_BFu0i { unsigned long long v1:32; unsigned int v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_Ui_BFu0ll { unsigned long long v1:32; unsigned int v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_Ui_BFu0s { unsigned long long v1:32; unsigned int v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_Ul_BFu0c { unsigned long long v1:32; unsigned long long v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_Ul_BFu0i { unsigned long long v1:32; unsigned long long v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_Ul_BFu0ll { unsigned long long v1:32; unsigned long long v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_Ul_BFu0s { unsigned long long v1:32; unsigned long long v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_Us_BFu0c { unsigned long long v1:32; unsigned short v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_Us_BFu0i { unsigned long long v1:32; unsigned short v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_Us_BFu0ll { unsigned long long v1:32; unsigned short v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_Us_BFu0s { unsigned long long v1:32; unsigned short v2; unsigned short :0; };
struct __attribute__((packed)) aBFu32ll_Vp_BFu0c { unsigned long long v1:32; void * v2; unsigned char :0; };
struct __attribute__((packed)) aBFu32ll_Vp_BFu0i { unsigned long long v1:32; void * v2; unsigned int :0; };
struct __attribute__((packed)) aBFu32ll_Vp_BFu0ll { unsigned long long v1:32; void * v2; unsigned long long :0; };
struct __attribute__((packed)) aBFu32ll_Vp_BFu0s { unsigned long long v1:32; void * v2; unsigned short :0; };
struct __attribute__((packed)) aBFu33_BFu0c { unsigned long long v1:33; unsigned char :0; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu0c { unsigned long long v1:33; unsigned char :0; unsigned char :0; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu0i { unsigned long long v1:33; unsigned char :0; unsigned int :0; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu0ll { unsigned long long v1:33; unsigned char :0; unsigned long long :0; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu0s { unsigned long long v1:33; unsigned char :0; unsigned short :0; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu15i { unsigned long long v1:33; unsigned char :0; unsigned int v2:15; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu15ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:15; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu15s { unsigned long long v1:33; unsigned char :0; unsigned short v2:15; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu16i { unsigned long long v1:33; unsigned char :0; unsigned int v2:16; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu16ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:16; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu16s { unsigned long long v1:33; unsigned char :0; unsigned short v2:16; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu17i { unsigned long long v1:33; unsigned char :0; unsigned int v2:17; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu17ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:17; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu1c { unsigned long long v1:33; unsigned char :0; unsigned char v2:1; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu1i { unsigned long long v1:33; unsigned char :0; unsigned int v2:1; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu1ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:1; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu1s { unsigned long long v1:33; unsigned char :0; unsigned short v2:1; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu31i { unsigned long long v1:33; unsigned char :0; unsigned int v2:31; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu31ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:31; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu32i { unsigned long long v1:33; unsigned char :0; unsigned int v2:32; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu32ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:32; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu33 { unsigned long long v1:33; unsigned char :0; unsigned long long v2:33; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu7c { unsigned long long v1:33; unsigned char :0; unsigned char v2:7; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu7i { unsigned long long v1:33; unsigned char :0; unsigned int v2:7; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu7ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:7; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu7s { unsigned long long v1:33; unsigned char :0; unsigned short v2:7; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu8c { unsigned long long v1:33; unsigned char :0; unsigned char v2:8; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu8i { unsigned long long v1:33; unsigned char :0; unsigned int v2:8; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu8ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:8; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu8s { unsigned long long v1:33; unsigned char :0; unsigned short v2:8; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu9i { unsigned long long v1:33; unsigned char :0; unsigned int v2:9; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu9ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:9; };
struct __attribute__((packed)) aBFu33_BFu0c_BFu9s { unsigned long long v1:33; unsigned char :0; unsigned short v2:9; };
struct __attribute__((packed)) aBFu33_BFu0c_C { unsigned long long v1:33; unsigned char :0; char v2; };
struct __attribute__((packed)) aBFu33_BFu0c_D { unsigned long long v1:33; unsigned char :0; double v2; };
struct __attribute__((packed)) aBFu33_BFu0c_F { unsigned long long v1:33; unsigned char :0; float v2; };
struct __attribute__((packed)) aBFu33_BFu0c_I { unsigned long long v1:33; unsigned char :0; int v2; };
struct __attribute__((packed)) aBFu33_BFu0c_Ip { unsigned long long v1:33; unsigned char :0; int * v2; };
struct __attribute__((packed)) aBFu33_BFu0c_L { unsigned long long v1:33; unsigned char :0; long long v2; };
struct __attribute__((packed)) aBFu33_BFu0c_S { unsigned long long v1:33; unsigned char :0; short v2; };
struct __attribute__((packed)) aBFu33_BFu0c_Uc { unsigned long long v1:33; unsigned char :0; unsigned char v2; };
struct __attribute__((packed)) aBFu33_BFu0c_Ui { unsigned long long v1:33; unsigned char :0; unsigned int v2; };
struct __attribute__((packed)) aBFu33_BFu0c_Ul { unsigned long long v1:33; unsigned char :0; unsigned long long v2; };
struct __attribute__((packed)) aBFu33_BFu0c_Us { unsigned long long v1:33; unsigned char :0; unsigned short v2; };


static void Test_aBFu17ll_BFu0ll_BFu1i()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu1i");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu17ll_BFu0ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu17ll_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu1i, aBFu17ll_BFu0ll_BFu1i)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu1ll()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu1ll");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu17ll_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu17ll_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu1ll, aBFu17ll_BFu0ll_BFu1ll)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu1s()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu1s");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu17ll_BFu0ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu17ll_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu1s, aBFu17ll_BFu0ll_BFu1s)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu31i()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu31i");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu17ll_BFu0ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, 1, "aBFu17ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu17ll_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu31i, aBFu17ll_BFu0ll_BFu31i)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu31ll()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu31ll");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu17ll_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, 1, "aBFu17ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu17ll_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu31ll, aBFu17ll_BFu0ll_BFu31ll)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu32i()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu32i");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu17ll_BFu0ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, 1, "aBFu17ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu17ll_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu32i, aBFu17ll_BFu0ll_BFu32i)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu32ll()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu32ll");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu17ll_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, 1, "aBFu17ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu17ll_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu32ll, aBFu17ll_BFu0ll_BFu32ll)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu33()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu33");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aBFu17ll_BFu0ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 33, 1, "aBFu17ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu17ll_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu33, aBFu17ll_BFu0ll_BFu33)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu7c()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu7c");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu17ll_BFu0ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu17ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu17ll_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu7c, aBFu17ll_BFu0ll_BFu7c)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu7i()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu7i");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu17ll_BFu0ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu17ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu17ll_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu7i, aBFu17ll_BFu0ll_BFu7i)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu7ll()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu7ll");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu17ll_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu17ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu17ll_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu7ll, aBFu17ll_BFu0ll_BFu7ll)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu7s()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu7s");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu17ll_BFu0ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu17ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu17ll_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu7s, aBFu17ll_BFu0ll_BFu7s)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu8c()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu8c");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu17ll_BFu0ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu17ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu17ll_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu8c, aBFu17ll_BFu0ll_BFu8c)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu8i()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu8i");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu17ll_BFu0ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu17ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu17ll_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu8i, aBFu17ll_BFu0ll_BFu8i)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu8ll()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu8ll");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu17ll_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu17ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu17ll_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu8ll, aBFu17ll_BFu0ll_BFu8ll)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu8s()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu8s");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu17ll_BFu0ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu17ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu17ll_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu8s, aBFu17ll_BFu0ll_BFu8s)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu9i()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu9i");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu17ll_BFu0ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu17ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu17ll_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu9i, aBFu17ll_BFu0ll_BFu9i)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu9ll()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu9ll");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu17ll_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu17ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu17ll_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu9ll, aBFu17ll_BFu0ll_BFu9ll)
//============================================================================



static void Test_aBFu17ll_BFu0ll_BFu9s()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_BFu9s");
    static STRUCT_IF_C aBFu17ll_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu17ll_BFu0ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu17ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu17ll_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_BFu9s, aBFu17ll_BFu0ll_BFu9s)
//============================================================================



static void Test_aBFu17ll_BFu0ll_C()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_C");
    static STRUCT_IF_C aBFu17ll_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu17ll_BFu0ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_C");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu17ll_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_C, aBFu17ll_BFu0ll_C)
//============================================================================



static void Test_aBFu17ll_BFu0ll_D()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_D");
    static STRUCT_IF_C aBFu17ll_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu17ll_BFu0ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_D");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu17ll_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_D, aBFu17ll_BFu0ll_D)
//============================================================================



static void Test_aBFu17ll_BFu0ll_F()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_F");
    static STRUCT_IF_C aBFu17ll_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu17ll_BFu0ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_F");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu17ll_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_F, aBFu17ll_BFu0ll_F)
//============================================================================



static void Test_aBFu17ll_BFu0ll_I()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_I");
    static STRUCT_IF_C aBFu17ll_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu17ll_BFu0ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_I");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu17ll_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_I, aBFu17ll_BFu0ll_I)
//============================================================================



static void Test_aBFu17ll_BFu0ll_Ip()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_Ip");
    static STRUCT_IF_C aBFu17ll_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu17ll_BFu0ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_Ip");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu17ll_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_Ip, aBFu17ll_BFu0ll_Ip)
//============================================================================



static void Test_aBFu17ll_BFu0ll_L()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_L");
    static STRUCT_IF_C aBFu17ll_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu17ll_BFu0ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_L");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu17ll_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_L, aBFu17ll_BFu0ll_L)
//============================================================================



static void Test_aBFu17ll_BFu0ll_S()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_S");
    static STRUCT_IF_C aBFu17ll_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu17ll_BFu0ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_S");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu17ll_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_S, aBFu17ll_BFu0ll_S)
//============================================================================



static void Test_aBFu17ll_BFu0ll_Uc()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_Uc");
    static STRUCT_IF_C aBFu17ll_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu17ll_BFu0ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_Uc");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu17ll_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_Uc, aBFu17ll_BFu0ll_Uc)
//============================================================================



static void Test_aBFu17ll_BFu0ll_Ui()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_Ui");
    static STRUCT_IF_C aBFu17ll_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu17ll_BFu0ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_Ui");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu17ll_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_Ui, aBFu17ll_BFu0ll_Ui)
//============================================================================



static void Test_aBFu17ll_BFu0ll_Ul()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_Ul");
    static STRUCT_IF_C aBFu17ll_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu17ll_BFu0ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_Ul");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu17ll_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_Ul, aBFu17ll_BFu0ll_Ul)
//============================================================================



static void Test_aBFu17ll_BFu0ll_Us()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_Us");
    static STRUCT_IF_C aBFu17ll_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu17ll_BFu0ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_Us");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu17ll_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_Us, aBFu17ll_BFu0ll_Us)
//============================================================================



static void Test_aBFu17ll_BFu0ll_Vp()
{
  {
    init_simple_test("aBFu17ll_BFu0ll_Vp");
    static STRUCT_IF_C aBFu17ll_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu17ll_BFu0ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0ll_Vp");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu17ll_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0ll_Vp, aBFu17ll_BFu0ll_Vp)
//============================================================================



static void Test_aBFu17ll_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s, aBFu17ll_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu0c, aBFu17ll_BFu0s_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu0i, aBFu17ll_BFu0s_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu0ll, aBFu17ll_BFu0s_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu0s, aBFu17ll_BFu0s_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu15i()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu15i");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_BFu0s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu17ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu17ll_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu15i, aBFu17ll_BFu0s_BFu15i)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu15ll()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu15ll");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_BFu0s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu17ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu17ll_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu15ll, aBFu17ll_BFu0s_BFu15ll)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu15s()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu15s");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_BFu0s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu17ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu17ll_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu15s, aBFu17ll_BFu0s_BFu15s)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu16i()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu16i");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_BFu0s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu17ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu17ll_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu16i, aBFu17ll_BFu0s_BFu16i)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu16ll()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu16ll");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_BFu0s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu17ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu17ll_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu16ll, aBFu17ll_BFu0s_BFu16ll)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu16s()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu16s");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_BFu0s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu17ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu17ll_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu16s, aBFu17ll_BFu0s_BFu16s)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu17i()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu17i");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu17ll_BFu0s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu17ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu17i, aBFu17ll_BFu0s_BFu17i)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu17ll()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu17ll");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu17ll_BFu0s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu17ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu17ll, aBFu17ll_BFu0s_BFu17ll)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu1c()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu1c");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu17ll_BFu0s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu17ll_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu1c, aBFu17ll_BFu0s_BFu1c)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu1i()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu1i");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu17ll_BFu0s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu17ll_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu1i, aBFu17ll_BFu0s_BFu1i)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu1ll()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu1ll");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu17ll_BFu0s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu17ll_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu1ll, aBFu17ll_BFu0s_BFu1ll)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu1s()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu1s");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu17ll_BFu0s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu17ll_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu1s, aBFu17ll_BFu0s_BFu1s)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu31i()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu31i");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu31i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu0s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu17ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu17ll_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu31i, aBFu17ll_BFu0s_BFu31i)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu31ll()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu31ll");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu0s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu17ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu17ll_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu31ll, aBFu17ll_BFu0s_BFu31ll)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu32i()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu32i");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu32i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu0s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu17ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu17ll_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu32i, aBFu17ll_BFu0s_BFu32i)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu32ll()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu32ll");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu0s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu17ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu17ll_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu32ll, aBFu17ll_BFu0s_BFu32ll)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu33()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu33");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(aBFu17ll_BFu0s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, 1, "aBFu17ll_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu17ll_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu33, aBFu17ll_BFu0s_BFu33)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu7c()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu7c");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu17ll_BFu0s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu17ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu17ll_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu7c, aBFu17ll_BFu0s_BFu7c)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu7i()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu7i");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu17ll_BFu0s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu17ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu17ll_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu7i, aBFu17ll_BFu0s_BFu7i)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu7ll()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu7ll");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu17ll_BFu0s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu17ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu17ll_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu7ll, aBFu17ll_BFu0s_BFu7ll)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu7s()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu7s");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu17ll_BFu0s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu17ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu17ll_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu7s, aBFu17ll_BFu0s_BFu7s)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu8c()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu8c");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu17ll_BFu0s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu17ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu17ll_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu8c, aBFu17ll_BFu0s_BFu8c)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu8i()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu8i");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu17ll_BFu0s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu17ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu17ll_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu8i, aBFu17ll_BFu0s_BFu8i)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu8ll()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu8ll");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu17ll_BFu0s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu17ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu17ll_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu8ll, aBFu17ll_BFu0s_BFu8ll)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu8s()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu8s");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu17ll_BFu0s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu17ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu17ll_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu8s, aBFu17ll_BFu0s_BFu8s)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu9i()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu9i");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_BFu0s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu17ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu17ll_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu9i, aBFu17ll_BFu0s_BFu9i)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu9ll()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu9ll");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_BFu0s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu17ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu17ll_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu9ll, aBFu17ll_BFu0s_BFu9ll)
//============================================================================



static void Test_aBFu17ll_BFu0s_BFu9s()
{
  {
    init_simple_test("aBFu17ll_BFu0s_BFu9s");
    static STRUCT_IF_C aBFu17ll_BFu0s_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_BFu0s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu17ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu17ll_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_BFu9s, aBFu17ll_BFu0s_BFu9s)
//============================================================================



static void Test_aBFu17ll_BFu0s_C()
{
  {
    init_simple_test("aBFu17ll_BFu0s_C");
    static STRUCT_IF_C aBFu17ll_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu17ll_BFu0s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_C");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_C");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu17ll_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_C, aBFu17ll_BFu0s_C)
//============================================================================



static void Test_aBFu17ll_BFu0s_D()
{
  {
    init_simple_test("aBFu17ll_BFu0s_D");
    static STRUCT_IF_C aBFu17ll_BFu0s_D lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu17ll_BFu0s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_D");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_D");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu17ll_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_D, aBFu17ll_BFu0s_D)
//============================================================================



static void Test_aBFu17ll_BFu0s_F()
{
  {
    init_simple_test("aBFu17ll_BFu0s_F");
    static STRUCT_IF_C aBFu17ll_BFu0s_F lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu0s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_F");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_F");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu17ll_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_F, aBFu17ll_BFu0s_F)
//============================================================================



static void Test_aBFu17ll_BFu0s_I()
{
  {
    init_simple_test("aBFu17ll_BFu0s_I");
    static STRUCT_IF_C aBFu17ll_BFu0s_I lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu0s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_I");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_I");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu17ll_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_I, aBFu17ll_BFu0s_I)
//============================================================================



static void Test_aBFu17ll_BFu0s_Ip()
{
  {
    init_simple_test("aBFu17ll_BFu0s_Ip");
    static STRUCT_IF_C aBFu17ll_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu17ll_BFu0s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_Ip");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_Ip");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu17ll_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_Ip, aBFu17ll_BFu0s_Ip)
//============================================================================



static void Test_aBFu17ll_BFu0s_L()
{
  {
    init_simple_test("aBFu17ll_BFu0s_L");
    static STRUCT_IF_C aBFu17ll_BFu0s_L lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu17ll_BFu0s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_L");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_L");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu17ll_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_L, aBFu17ll_BFu0s_L)
//============================================================================



static void Test_aBFu17ll_BFu0s_S()
{
  {
    init_simple_test("aBFu17ll_BFu0s_S");
    static STRUCT_IF_C aBFu17ll_BFu0s_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_BFu0s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_S");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_S");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu17ll_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_S, aBFu17ll_BFu0s_S)
//============================================================================



static void Test_aBFu17ll_BFu0s_Uc()
{
  {
    init_simple_test("aBFu17ll_BFu0s_Uc");
    static STRUCT_IF_C aBFu17ll_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu17ll_BFu0s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_Uc");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_Uc");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu17ll_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_Uc, aBFu17ll_BFu0s_Uc)
//============================================================================



static void Test_aBFu17ll_BFu0s_Ui()
{
  {
    init_simple_test("aBFu17ll_BFu0s_Ui");
    static STRUCT_IF_C aBFu17ll_BFu0s_Ui lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu0s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_Ui");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_Ui");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu17ll_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_Ui, aBFu17ll_BFu0s_Ui)
//============================================================================



static void Test_aBFu17ll_BFu0s_Ul()
{
  {
    init_simple_test("aBFu17ll_BFu0s_Ul");
    static STRUCT_IF_C aBFu17ll_BFu0s_Ul lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu17ll_BFu0s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_Ul");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_Ul");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu17ll_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_Ul, aBFu17ll_BFu0s_Ul)
//============================================================================



static void Test_aBFu17ll_BFu0s_Us()
{
  {
    init_simple_test("aBFu17ll_BFu0s_Us");
    static STRUCT_IF_C aBFu17ll_BFu0s_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_BFu0s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_Us");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_Us");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu17ll_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_Us, aBFu17ll_BFu0s_Us)
//============================================================================



static void Test_aBFu17ll_BFu0s_Vp()
{
  {
    init_simple_test("aBFu17ll_BFu0s_Vp");
    static STRUCT_IF_C aBFu17ll_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu17ll_BFu0s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu0s_Vp");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu0s_Vp");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu17ll_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu0s_Vp, aBFu17ll_BFu0s_Vp)
//============================================================================



static void Test_aBFu17ll_BFu15i_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu15i_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu15i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "aBFu17ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "aBFu17ll_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu15i_BFu0c, aBFu17ll_BFu15i_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu15i_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu15i_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu15i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu15i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "aBFu17ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "aBFu17ll_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu15i_BFu0i, aBFu17ll_BFu15i_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu15i_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu15i_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu15i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "aBFu17ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "aBFu17ll_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu15i_BFu0ll, aBFu17ll_BFu15i_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu15i_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu15i_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu15i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu15i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "aBFu17ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "aBFu17ll_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu15i_BFu0s, aBFu17ll_BFu15i_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu15ll_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu15ll_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "aBFu17ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "aBFu17ll_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu15ll_BFu0c, aBFu17ll_BFu15ll_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu15ll_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu15ll_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu15ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu15ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "aBFu17ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "aBFu17ll_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu15ll_BFu0i, aBFu17ll_BFu15ll_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu15ll_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu15ll_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "aBFu17ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "aBFu17ll_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu15ll_BFu0ll, aBFu17ll_BFu15ll_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu15ll_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu15ll_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu15ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "aBFu17ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "aBFu17ll_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu15ll_BFu0s, aBFu17ll_BFu15ll_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu15s_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu15s_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu15s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "aBFu17ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "aBFu17ll_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu15s_BFu0c, aBFu17ll_BFu15s_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu15s_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu15s_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu15s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu15s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "aBFu17ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "aBFu17ll_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu15s_BFu0i, aBFu17ll_BFu15s_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu15s_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu15s_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu15s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "aBFu17ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "aBFu17ll_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu15s_BFu0ll, aBFu17ll_BFu15s_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu15s_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu15s_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu15s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu15s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "aBFu17ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "aBFu17ll_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu15s_BFu0s, aBFu17ll_BFu15s_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu16i_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu16i_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu16i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu17ll_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "aBFu17ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "aBFu17ll_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu16i_BFu0c, aBFu17ll_BFu16i_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu16i_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu16i_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu16i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "aBFu17ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "aBFu17ll_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu16i_BFu0i, aBFu17ll_BFu16i_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu16i_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu16i_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu16i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "aBFu17ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "aBFu17ll_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu16i_BFu0ll, aBFu17ll_BFu16i_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu16i_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu16i_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu16i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_BFu16i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "aBFu17ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "aBFu17ll_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu16i_BFu0s, aBFu17ll_BFu16i_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu16ll_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu16ll_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu17ll_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "aBFu17ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "aBFu17ll_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu16ll_BFu0c, aBFu17ll_BFu16ll_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu16ll_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu16ll_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu16ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "aBFu17ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "aBFu17ll_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu16ll_BFu0i, aBFu17ll_BFu16ll_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu16ll_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu16ll_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "aBFu17ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "aBFu17ll_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu16ll_BFu0ll, aBFu17ll_BFu16ll_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu16ll_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu16ll_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu16ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_BFu16ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "aBFu17ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "aBFu17ll_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu16ll_BFu0s, aBFu17ll_BFu16ll_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu16s_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu16s_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu16s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu17ll_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "aBFu17ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "aBFu17ll_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu16s_BFu0c, aBFu17ll_BFu16s_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu16s_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu16s_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu16s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "aBFu17ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "aBFu17ll_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu16s_BFu0i, aBFu17ll_BFu16s_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu16s_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu16s_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu16s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "aBFu17ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "aBFu17ll_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu16s_BFu0ll, aBFu17ll_BFu16s_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu16s_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu16s_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu16s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_BFu16s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "aBFu17ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "aBFu17ll_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu16s_BFu0s, aBFu17ll_BFu16s_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu17i_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu17i_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu17i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu17ll_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFu17ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFu17ll_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu17i_BFu0c, aBFu17ll_BFu17i_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu17i_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu17i_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu17i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFu17ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFu17ll_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu17i_BFu0i, aBFu17ll_BFu17i_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu17i_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu17i_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu17i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFu17ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFu17ll_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu17i_BFu0ll, aBFu17ll_BFu17i_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu17i_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu17i_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_BFu17i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFu17ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFu17ll_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu17i_BFu0s, aBFu17ll_BFu17i_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu17ll_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu17ll_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu17ll_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFu17ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFu17ll_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu17ll_BFu0c, aBFu17ll_BFu17ll_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu17ll_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu17ll_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu17ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFu17ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFu17ll_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu17ll_BFu0i, aBFu17ll_BFu17ll_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu17ll_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu17ll_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFu17ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFu17ll_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu17ll_BFu0ll, aBFu17ll_BFu17ll_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu17ll_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu17ll_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_BFu17ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "aBFu17ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "aBFu17ll_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu17ll_BFu0s, aBFu17ll_BFu17ll_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu1c_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu1c_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu1c_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu17ll_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu1c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "aBFu17ll_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu1c_BFu0c, aBFu17ll_BFu1c_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu1c_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu1c_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu1c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu1c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "aBFu17ll_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu1c_BFu0i, aBFu17ll_BFu1c_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu1c_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu1c_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu1c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu1c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "aBFu17ll_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu1c_BFu0ll, aBFu17ll_BFu1c_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu1c_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu1c_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu1c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu1c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "aBFu17ll_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu1c_BFu0s, aBFu17ll_BFu1c_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu1i_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu1i_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu1i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu17ll_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu1i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "aBFu17ll_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu1i_BFu0c, aBFu17ll_BFu1i_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu1i_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu1i_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu1i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu1i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "aBFu17ll_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu1i_BFu0i, aBFu17ll_BFu1i_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu1i_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu1i_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu1i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu1i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "aBFu17ll_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu1i_BFu0ll, aBFu17ll_BFu1i_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu1i_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu1i_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu1i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu1i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "aBFu17ll_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu1i_BFu0s, aBFu17ll_BFu1i_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu1ll_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu1ll_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu17ll_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu1ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "aBFu17ll_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu1ll_BFu0c, aBFu17ll_BFu1ll_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu1ll_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu1ll_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu1ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu1ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "aBFu17ll_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu1ll_BFu0i, aBFu17ll_BFu1ll_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu1ll_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu1ll_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "aBFu17ll_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu1ll_BFu0ll, aBFu17ll_BFu1ll_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu1ll_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu1ll_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu1ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu1ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "aBFu17ll_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu1ll_BFu0s, aBFu17ll_BFu1ll_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu1s_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu1s_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu1s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu17ll_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu1s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "aBFu17ll_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu1s_BFu0c, aBFu17ll_BFu1s_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu1s_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu1s_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu1s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu1s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "aBFu17ll_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu1s_BFu0i, aBFu17ll_BFu1s_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu1s_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu1s_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu1s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu1s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "aBFu17ll_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu1s_BFu0ll, aBFu17ll_BFu1s_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu1s_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu1s_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu1s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu1s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "aBFu17ll_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu1s_BFu0s, aBFu17ll_BFu1s_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu31i_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu31i_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu31i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu17ll_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 31, 1, "aBFu17ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 31, hide_ull(1LL<<30), "aBFu17ll_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu31i_BFu0c, aBFu17ll_BFu31i_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu31i_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu31i_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu31i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu31i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 31, 1, "aBFu17ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 31, hide_ull(1LL<<30), "aBFu17ll_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu31i_BFu0i, aBFu17ll_BFu31i_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu31i_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu31i_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu31i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 31, 1, "aBFu17ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 31, hide_ull(1LL<<30), "aBFu17ll_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu31i_BFu0ll, aBFu17ll_BFu31i_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu31i_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu31i_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu31i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu17ll_BFu31i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 31, 1, "aBFu17ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 31, hide_ull(1LL<<30), "aBFu17ll_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu31i_BFu0s, aBFu17ll_BFu31i_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu31ll_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu31ll_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu17ll_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 31, 1, "aBFu17ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 31, hide_ull(1LL<<30), "aBFu17ll_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu31ll_BFu0c, aBFu17ll_BFu31ll_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu31ll_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu31ll_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu31ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu31ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 31, 1, "aBFu17ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 31, hide_ull(1LL<<30), "aBFu17ll_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu31ll_BFu0i, aBFu17ll_BFu31ll_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu31ll_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu31ll_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 31, 1, "aBFu17ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 31, hide_ull(1LL<<30), "aBFu17ll_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu31ll_BFu0ll, aBFu17ll_BFu31ll_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu31ll_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu31ll_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu17ll_BFu31ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 31, 1, "aBFu17ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 31, hide_ull(1LL<<30), "aBFu17ll_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu31ll_BFu0s, aBFu17ll_BFu31ll_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu32i_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu32i_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu32i_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(aBFu17ll_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 32, 1, "aBFu17ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 32, hide_ull(1LL<<31), "aBFu17ll_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu32i_BFu0c, aBFu17ll_BFu32i_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu32i_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu32i_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu32i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu32i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 32, 1, "aBFu17ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 32, hide_ull(1LL<<31), "aBFu17ll_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu32i_BFu0i, aBFu17ll_BFu32i_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu32i_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu32i_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu32i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 32, 1, "aBFu17ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 32, hide_ull(1LL<<31), "aBFu17ll_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu32i_BFu0ll, aBFu17ll_BFu32i_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu32i_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu32i_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu32i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu32i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 32, 1, "aBFu17ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 32, hide_ull(1LL<<31), "aBFu17ll_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu32i_BFu0s, aBFu17ll_BFu32i_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu32ll_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu32ll_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(aBFu17ll_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 32, 1, "aBFu17ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 32, hide_ull(1LL<<31), "aBFu17ll_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu32ll_BFu0c, aBFu17ll_BFu32ll_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu32ll_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu32ll_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu32ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu32ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 32, 1, "aBFu17ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 32, hide_ull(1LL<<31), "aBFu17ll_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu32ll_BFu0i, aBFu17ll_BFu32ll_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu32ll_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu32ll_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 32, 1, "aBFu17ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 32, hide_ull(1LL<<31), "aBFu17ll_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu32ll_BFu0ll, aBFu17ll_BFu32ll_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu32ll_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu32ll_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu32ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu32ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 32, 1, "aBFu17ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 32, hide_ull(1LL<<31), "aBFu17ll_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu32ll_BFu0s, aBFu17ll_BFu32ll_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu33_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu33_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu33_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(aBFu17ll_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu33_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 33, 1, "aBFu17ll_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 33, hide_ull(1LL<<32), "aBFu17ll_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu33_BFu0c, aBFu17ll_BFu33_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu33_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu33_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu33_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu33_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 33, 1, "aBFu17ll_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 33, hide_ull(1LL<<32), "aBFu17ll_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu33_BFu0i, aBFu17ll_BFu33_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu33_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu33_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu33_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 33, 1, "aBFu17ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 33, hide_ull(1LL<<32), "aBFu17ll_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu33_BFu0ll, aBFu17ll_BFu33_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu33_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu33_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_BFu33_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu33_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 33, 1, "aBFu17ll_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 33, hide_ull(1LL<<32), "aBFu17ll_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu33_BFu0s, aBFu17ll_BFu33_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu7c_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu7c_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu7c_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu17ll_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "aBFu17ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "aBFu17ll_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu7c_BFu0c, aBFu17ll_BFu7c_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu7c_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu7c_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu7c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "aBFu17ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "aBFu17ll_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu7c_BFu0i, aBFu17ll_BFu7c_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu7c_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu7c_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu7c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "aBFu17ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "aBFu17ll_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu7c_BFu0ll, aBFu17ll_BFu7c_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu7c_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu7c_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu7c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "aBFu17ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "aBFu17ll_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu7c_BFu0s, aBFu17ll_BFu7c_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu7i_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu7i_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu7i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu17ll_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "aBFu17ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "aBFu17ll_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu7i_BFu0c, aBFu17ll_BFu7i_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu7i_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu7i_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu7i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "aBFu17ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "aBFu17ll_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu7i_BFu0i, aBFu17ll_BFu7i_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu7i_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu7i_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu7i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "aBFu17ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "aBFu17ll_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu7i_BFu0ll, aBFu17ll_BFu7i_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu7i_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu7i_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu7i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "aBFu17ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "aBFu17ll_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu7i_BFu0s, aBFu17ll_BFu7i_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu7ll_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu7ll_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu17ll_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "aBFu17ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "aBFu17ll_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu7ll_BFu0c, aBFu17ll_BFu7ll_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu7ll_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu7ll_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu7ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "aBFu17ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "aBFu17ll_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu7ll_BFu0i, aBFu17ll_BFu7ll_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu7ll_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu7ll_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "aBFu17ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "aBFu17ll_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu7ll_BFu0ll, aBFu17ll_BFu7ll_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu7ll_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu7ll_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu7ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "aBFu17ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "aBFu17ll_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu7ll_BFu0s, aBFu17ll_BFu7ll_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu7s_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu7s_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu7s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu17ll_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "aBFu17ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "aBFu17ll_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu7s_BFu0c, aBFu17ll_BFu7s_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu7s_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu7s_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu7s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "aBFu17ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "aBFu17ll_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu7s_BFu0i, aBFu17ll_BFu7s_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu7s_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu7s_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu7s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "aBFu17ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "aBFu17ll_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu7s_BFu0ll, aBFu17ll_BFu7s_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu7s_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu7s_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu17ll_BFu7s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "aBFu17ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "aBFu17ll_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu7s_BFu0s, aBFu17ll_BFu7s_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu8c_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu8c_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu8c_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "aBFu17ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "aBFu17ll_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu8c_BFu0c, aBFu17ll_BFu8c_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu8c_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu8c_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu8c_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu8c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "aBFu17ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "aBFu17ll_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu8c_BFu0i, aBFu17ll_BFu8c_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu8c_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu8c_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu8c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "aBFu17ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "aBFu17ll_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu8c_BFu0ll, aBFu17ll_BFu8c_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu8c_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu8c_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu8c_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu8c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "aBFu17ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "aBFu17ll_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu8c_BFu0s, aBFu17ll_BFu8c_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu8i_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu8i_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu8i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "aBFu17ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "aBFu17ll_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu8i_BFu0c, aBFu17ll_BFu8i_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu8i_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu8i_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu8i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu8i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "aBFu17ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "aBFu17ll_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu8i_BFu0i, aBFu17ll_BFu8i_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu8i_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu8i_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu8i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "aBFu17ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "aBFu17ll_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu8i_BFu0ll, aBFu17ll_BFu8i_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu8i_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu8i_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu8i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu8i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "aBFu17ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "aBFu17ll_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu8i_BFu0s, aBFu17ll_BFu8i_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu8ll_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu8ll_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "aBFu17ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "aBFu17ll_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu8ll_BFu0c, aBFu17ll_BFu8ll_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu8ll_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu8ll_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu8ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu8ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "aBFu17ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "aBFu17ll_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu8ll_BFu0i, aBFu17ll_BFu8ll_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu8ll_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu8ll_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "aBFu17ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "aBFu17ll_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu8ll_BFu0ll, aBFu17ll_BFu8ll_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu8ll_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu8ll_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu8ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu8ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "aBFu17ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "aBFu17ll_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu8ll_BFu0s, aBFu17ll_BFu8ll_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu8s_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu8s_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu8s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "aBFu17ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "aBFu17ll_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu8s_BFu0c, aBFu17ll_BFu8s_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu8s_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu8s_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu8s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu8s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "aBFu17ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "aBFu17ll_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu8s_BFu0i, aBFu17ll_BFu8s_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu8s_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu8s_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu8s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "aBFu17ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "aBFu17ll_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu8s_BFu0ll, aBFu17ll_BFu8s_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu8s_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu8s_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu8s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu8s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "aBFu17ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "aBFu17ll_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu8s_BFu0s, aBFu17ll_BFu8s_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu9i_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu9i_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu9i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "aBFu17ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "aBFu17ll_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu9i_BFu0c, aBFu17ll_BFu9i_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu9i_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu9i_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu9i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu9i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "aBFu17ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "aBFu17ll_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu9i_BFu0i, aBFu17ll_BFu9i_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu9i_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu9i_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu9i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "aBFu17ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "aBFu17ll_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu9i_BFu0ll, aBFu17ll_BFu9i_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu9i_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu9i_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu9i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu9i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "aBFu17ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "aBFu17ll_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu9i_BFu0s, aBFu17ll_BFu9i_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu9ll_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu9ll_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "aBFu17ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "aBFu17ll_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu9ll_BFu0c, aBFu17ll_BFu9ll_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu9ll_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu9ll_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu9ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu9ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "aBFu17ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "aBFu17ll_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu9ll_BFu0i, aBFu17ll_BFu9ll_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu9ll_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu9ll_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "aBFu17ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "aBFu17ll_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu9ll_BFu0ll, aBFu17ll_BFu9ll_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu9ll_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu9ll_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu9ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "aBFu17ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "aBFu17ll_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu9ll_BFu0s, aBFu17ll_BFu9ll_BFu0s)
//============================================================================



static void Test_aBFu17ll_BFu9s_BFu0c()
{
  {
    init_simple_test("aBFu17ll_BFu9s_BFu0c");
    static STRUCT_IF_C aBFu17ll_BFu9s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "aBFu17ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "aBFu17ll_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu9s_BFu0c, aBFu17ll_BFu9s_BFu0c)
//============================================================================



static void Test_aBFu17ll_BFu9s_BFu0i()
{
  {
    init_simple_test("aBFu17ll_BFu9s_BFu0i");
    static STRUCT_IF_C aBFu17ll_BFu9s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu9s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "aBFu17ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "aBFu17ll_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu9s_BFu0i, aBFu17ll_BFu9s_BFu0i)
//============================================================================



static void Test_aBFu17ll_BFu9s_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_BFu9s_BFu0ll");
    static STRUCT_IF_C aBFu17ll_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_BFu9s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "aBFu17ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "aBFu17ll_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu9s_BFu0ll, aBFu17ll_BFu9s_BFu0ll)
//============================================================================



static void Test_aBFu17ll_BFu9s_BFu0s()
{
  {
    init_simple_test("aBFu17ll_BFu9s_BFu0s");
    static STRUCT_IF_C aBFu17ll_BFu9s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_BFu9s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "aBFu17ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "aBFu17ll_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_BFu9s_BFu0s, aBFu17ll_BFu9s_BFu0s)
//============================================================================



static void Test_aBFu17ll_C_BFu0c()
{
  {
    init_simple_test("aBFu17ll_C_BFu0c");
    static STRUCT_IF_C aBFu17ll_C_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_C_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_C_BFu0c");
    check_field_offset(lv, v2, 3, "aBFu17ll_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_C_BFu0c, aBFu17ll_C_BFu0c)
//============================================================================



static void Test_aBFu17ll_C_BFu0i()
{
  {
    init_simple_test("aBFu17ll_C_BFu0i");
    static STRUCT_IF_C aBFu17ll_C_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_C_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_C_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_C_BFu0i");
    check_field_offset(lv, v2, 3, "aBFu17ll_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_C_BFu0i, aBFu17ll_C_BFu0i)
//============================================================================



static void Test_aBFu17ll_C_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_C_BFu0ll");
    static STRUCT_IF_C aBFu17ll_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_C_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_C_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_C_BFu0ll");
    check_field_offset(lv, v2, 3, "aBFu17ll_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_C_BFu0ll, aBFu17ll_C_BFu0ll)
//============================================================================



static void Test_aBFu17ll_C_BFu0s()
{
  {
    init_simple_test("aBFu17ll_C_BFu0s");
    static STRUCT_IF_C aBFu17ll_C_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_C_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_C_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_C_BFu0s");
    check_field_offset(lv, v2, 3, "aBFu17ll_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_C_BFu0s, aBFu17ll_C_BFu0s)
//============================================================================



static void Test_aBFu17ll_D_BFu0c()
{
  {
    init_simple_test("aBFu17ll_D_BFu0c");
    static STRUCT_IF_C aBFu17ll_D_BFu0c lv;
    check2(sizeof(lv), 11, "sizeof(aBFu17ll_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_D_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_D_BFu0c");
    check_field_offset(lv, v2, 3, "aBFu17ll_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_D_BFu0c, aBFu17ll_D_BFu0c)
//============================================================================



static void Test_aBFu17ll_D_BFu0i()
{
  {
    init_simple_test("aBFu17ll_D_BFu0i");
    static STRUCT_IF_C aBFu17ll_D_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu17ll_D_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_D_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_D_BFu0i");
    check_field_offset(lv, v2, 3, "aBFu17ll_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_D_BFu0i, aBFu17ll_D_BFu0i)
//============================================================================



static void Test_aBFu17ll_D_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_D_BFu0ll");
    static STRUCT_IF_C aBFu17ll_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu17ll_D_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_D_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_D_BFu0ll");
    check_field_offset(lv, v2, 3, "aBFu17ll_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_D_BFu0ll, aBFu17ll_D_BFu0ll)
//============================================================================



static void Test_aBFu17ll_D_BFu0s()
{
  {
    init_simple_test("aBFu17ll_D_BFu0s");
    static STRUCT_IF_C aBFu17ll_D_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu17ll_D_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_D_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_D_BFu0s");
    check_field_offset(lv, v2, 3, "aBFu17ll_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_D_BFu0s, aBFu17ll_D_BFu0s)
//============================================================================



static void Test_aBFu17ll_F_BFu0c()
{
  {
    init_simple_test("aBFu17ll_F_BFu0c");
    static STRUCT_IF_C aBFu17ll_F_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(aBFu17ll_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_F_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_F_BFu0c");
    check_field_offset(lv, v2, 3, "aBFu17ll_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_F_BFu0c, aBFu17ll_F_BFu0c)
//============================================================================



static void Test_aBFu17ll_F_BFu0i()
{
  {
    init_simple_test("aBFu17ll_F_BFu0i");
    static STRUCT_IF_C aBFu17ll_F_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_F_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_F_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_F_BFu0i");
    check_field_offset(lv, v2, 3, "aBFu17ll_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_F_BFu0i, aBFu17ll_F_BFu0i)
//============================================================================



static void Test_aBFu17ll_F_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_F_BFu0ll");
    static STRUCT_IF_C aBFu17ll_F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_F_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_F_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_F_BFu0ll");
    check_field_offset(lv, v2, 3, "aBFu17ll_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_F_BFu0ll, aBFu17ll_F_BFu0ll)
//============================================================================



static void Test_aBFu17ll_F_BFu0s()
{
  {
    init_simple_test("aBFu17ll_F_BFu0s");
    static STRUCT_IF_C aBFu17ll_F_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_F_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_F_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_F_BFu0s");
    check_field_offset(lv, v2, 3, "aBFu17ll_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_F_BFu0s, aBFu17ll_F_BFu0s)
//============================================================================



static void Test_aBFu17ll_I_BFu0c()
{
  {
    init_simple_test("aBFu17ll_I_BFu0c");
    static STRUCT_IF_C aBFu17ll_I_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(aBFu17ll_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_I_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_I_BFu0c");
    check_field_offset(lv, v2, 3, "aBFu17ll_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_I_BFu0c, aBFu17ll_I_BFu0c)
//============================================================================



static void Test_aBFu17ll_I_BFu0i()
{
  {
    init_simple_test("aBFu17ll_I_BFu0i");
    static STRUCT_IF_C aBFu17ll_I_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_I_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_I_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_I_BFu0i");
    check_field_offset(lv, v2, 3, "aBFu17ll_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_I_BFu0i, aBFu17ll_I_BFu0i)
//============================================================================



static void Test_aBFu17ll_I_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_I_BFu0ll");
    static STRUCT_IF_C aBFu17ll_I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_I_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_I_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_I_BFu0ll");
    check_field_offset(lv, v2, 3, "aBFu17ll_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_I_BFu0ll, aBFu17ll_I_BFu0ll)
//============================================================================



static void Test_aBFu17ll_I_BFu0s()
{
  {
    init_simple_test("aBFu17ll_I_BFu0s");
    static STRUCT_IF_C aBFu17ll_I_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_I_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_I_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_I_BFu0s");
    check_field_offset(lv, v2, 3, "aBFu17ll_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_I_BFu0s, aBFu17ll_I_BFu0s)
//============================================================================



static void Test_aBFu17ll_Ip_BFu0c()
{
  {
    init_simple_test("aBFu17ll_Ip_BFu0c");
    static STRUCT_IF_C aBFu17ll_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu17ll_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Ip_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Ip_BFu0c");
    check_field_offset(lv, v2, 3, "aBFu17ll_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Ip_BFu0c, aBFu17ll_Ip_BFu0c)
//============================================================================



static void Test_aBFu17ll_Ip_BFu0i()
{
  {
    init_simple_test("aBFu17ll_Ip_BFu0i");
    static STRUCT_IF_C aBFu17ll_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu17ll_Ip_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Ip_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Ip_BFu0i");
    check_field_offset(lv, v2, 3, "aBFu17ll_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Ip_BFu0i, aBFu17ll_Ip_BFu0i)
//============================================================================



static void Test_aBFu17ll_Ip_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_Ip_BFu0ll");
    static STRUCT_IF_C aBFu17ll_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu17ll_Ip_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Ip_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Ip_BFu0ll");
    check_field_offset(lv, v2, 3, "aBFu17ll_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Ip_BFu0ll, aBFu17ll_Ip_BFu0ll)
//============================================================================



static void Test_aBFu17ll_Ip_BFu0s()
{
  {
    init_simple_test("aBFu17ll_Ip_BFu0s");
    static STRUCT_IF_C aBFu17ll_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu17ll_Ip_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Ip_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Ip_BFu0s");
    check_field_offset(lv, v2, 3, "aBFu17ll_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Ip_BFu0s, aBFu17ll_Ip_BFu0s)
//============================================================================



static void Test_aBFu17ll_L_BFu0c()
{
  {
    init_simple_test("aBFu17ll_L_BFu0c");
    static STRUCT_IF_C aBFu17ll_L_BFu0c lv;
    check2(sizeof(lv), 11, "sizeof(aBFu17ll_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_L_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_L_BFu0c");
    check_field_offset(lv, v2, 3, "aBFu17ll_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_L_BFu0c, aBFu17ll_L_BFu0c)
//============================================================================



static void Test_aBFu17ll_L_BFu0i()
{
  {
    init_simple_test("aBFu17ll_L_BFu0i");
    static STRUCT_IF_C aBFu17ll_L_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu17ll_L_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_L_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_L_BFu0i");
    check_field_offset(lv, v2, 3, "aBFu17ll_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_L_BFu0i, aBFu17ll_L_BFu0i)
//============================================================================



static void Test_aBFu17ll_L_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_L_BFu0ll");
    static STRUCT_IF_C aBFu17ll_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu17ll_L_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_L_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_L_BFu0ll");
    check_field_offset(lv, v2, 3, "aBFu17ll_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_L_BFu0ll, aBFu17ll_L_BFu0ll)
//============================================================================



static void Test_aBFu17ll_L_BFu0s()
{
  {
    init_simple_test("aBFu17ll_L_BFu0s");
    static STRUCT_IF_C aBFu17ll_L_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu17ll_L_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_L_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_L_BFu0s");
    check_field_offset(lv, v2, 3, "aBFu17ll_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_L_BFu0s, aBFu17ll_L_BFu0s)
//============================================================================



static void Test_aBFu17ll_S_BFu0c()
{
  {
    init_simple_test("aBFu17ll_S_BFu0c");
    static STRUCT_IF_C aBFu17ll_S_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu17ll_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_S_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_S_BFu0c");
    check_field_offset(lv, v2, 3, "aBFu17ll_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_S_BFu0c, aBFu17ll_S_BFu0c)
//============================================================================



static void Test_aBFu17ll_S_BFu0i()
{
  {
    init_simple_test("aBFu17ll_S_BFu0i");
    static STRUCT_IF_C aBFu17ll_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_S_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_S_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_S_BFu0i");
    check_field_offset(lv, v2, 3, "aBFu17ll_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_S_BFu0i, aBFu17ll_S_BFu0i)
//============================================================================



static void Test_aBFu17ll_S_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_S_BFu0ll");
    static STRUCT_IF_C aBFu17ll_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_S_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_S_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_S_BFu0ll");
    check_field_offset(lv, v2, 3, "aBFu17ll_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_S_BFu0ll, aBFu17ll_S_BFu0ll)
//============================================================================



static void Test_aBFu17ll_S_BFu0s()
{
  {
    init_simple_test("aBFu17ll_S_BFu0s");
    static STRUCT_IF_C aBFu17ll_S_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_S_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_S_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_S_BFu0s");
    check_field_offset(lv, v2, 3, "aBFu17ll_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_S_BFu0s, aBFu17ll_S_BFu0s)
//============================================================================



static void Test_aBFu17ll_Uc_BFu0c()
{
  {
    init_simple_test("aBFu17ll_Uc_BFu0c");
    static STRUCT_IF_C aBFu17ll_Uc_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Uc_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Uc_BFu0c");
    check_field_offset(lv, v2, 3, "aBFu17ll_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Uc_BFu0c, aBFu17ll_Uc_BFu0c)
//============================================================================



static void Test_aBFu17ll_Uc_BFu0i()
{
  {
    init_simple_test("aBFu17ll_Uc_BFu0i");
    static STRUCT_IF_C aBFu17ll_Uc_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_Uc_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Uc_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Uc_BFu0i");
    check_field_offset(lv, v2, 3, "aBFu17ll_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Uc_BFu0i, aBFu17ll_Uc_BFu0i)
//============================================================================



static void Test_aBFu17ll_Uc_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_Uc_BFu0ll");
    static STRUCT_IF_C aBFu17ll_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu17ll_Uc_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Uc_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Uc_BFu0ll");
    check_field_offset(lv, v2, 3, "aBFu17ll_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Uc_BFu0ll, aBFu17ll_Uc_BFu0ll)
//============================================================================



static void Test_aBFu17ll_Uc_BFu0s()
{
  {
    init_simple_test("aBFu17ll_Uc_BFu0s");
    static STRUCT_IF_C aBFu17ll_Uc_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu17ll_Uc_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Uc_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Uc_BFu0s");
    check_field_offset(lv, v2, 3, "aBFu17ll_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Uc_BFu0s, aBFu17ll_Uc_BFu0s)
//============================================================================



static void Test_aBFu17ll_Ui_BFu0c()
{
  {
    init_simple_test("aBFu17ll_Ui_BFu0c");
    static STRUCT_IF_C aBFu17ll_Ui_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(aBFu17ll_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Ui_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Ui_BFu0c");
    check_field_offset(lv, v2, 3, "aBFu17ll_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Ui_BFu0c, aBFu17ll_Ui_BFu0c)
//============================================================================



static void Test_aBFu17ll_Ui_BFu0i()
{
  {
    init_simple_test("aBFu17ll_Ui_BFu0i");
    static STRUCT_IF_C aBFu17ll_Ui_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_Ui_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Ui_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Ui_BFu0i");
    check_field_offset(lv, v2, 3, "aBFu17ll_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Ui_BFu0i, aBFu17ll_Ui_BFu0i)
//============================================================================



static void Test_aBFu17ll_Ui_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_Ui_BFu0ll");
    static STRUCT_IF_C aBFu17ll_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_Ui_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Ui_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Ui_BFu0ll");
    check_field_offset(lv, v2, 3, "aBFu17ll_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Ui_BFu0ll, aBFu17ll_Ui_BFu0ll)
//============================================================================



static void Test_aBFu17ll_Ui_BFu0s()
{
  {
    init_simple_test("aBFu17ll_Ui_BFu0s");
    static STRUCT_IF_C aBFu17ll_Ui_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_Ui_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Ui_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Ui_BFu0s");
    check_field_offset(lv, v2, 3, "aBFu17ll_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Ui_BFu0s, aBFu17ll_Ui_BFu0s)
//============================================================================



static void Test_aBFu17ll_Ul_BFu0c()
{
  {
    init_simple_test("aBFu17ll_Ul_BFu0c");
    static STRUCT_IF_C aBFu17ll_Ul_BFu0c lv;
    check2(sizeof(lv), 11, "sizeof(aBFu17ll_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Ul_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Ul_BFu0c");
    check_field_offset(lv, v2, 3, "aBFu17ll_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Ul_BFu0c, aBFu17ll_Ul_BFu0c)
//============================================================================



static void Test_aBFu17ll_Ul_BFu0i()
{
  {
    init_simple_test("aBFu17ll_Ul_BFu0i");
    static STRUCT_IF_C aBFu17ll_Ul_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu17ll_Ul_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Ul_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Ul_BFu0i");
    check_field_offset(lv, v2, 3, "aBFu17ll_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Ul_BFu0i, aBFu17ll_Ul_BFu0i)
//============================================================================



static void Test_aBFu17ll_Ul_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_Ul_BFu0ll");
    static STRUCT_IF_C aBFu17ll_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu17ll_Ul_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Ul_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Ul_BFu0ll");
    check_field_offset(lv, v2, 3, "aBFu17ll_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Ul_BFu0ll, aBFu17ll_Ul_BFu0ll)
//============================================================================



static void Test_aBFu17ll_Ul_BFu0s()
{
  {
    init_simple_test("aBFu17ll_Ul_BFu0s");
    static STRUCT_IF_C aBFu17ll_Ul_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu17ll_Ul_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Ul_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Ul_BFu0s");
    check_field_offset(lv, v2, 3, "aBFu17ll_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Ul_BFu0s, aBFu17ll_Ul_BFu0s)
//============================================================================



static void Test_aBFu17ll_Us_BFu0c()
{
  {
    init_simple_test("aBFu17ll_Us_BFu0c");
    static STRUCT_IF_C aBFu17ll_Us_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu17ll_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Us_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Us_BFu0c");
    check_field_offset(lv, v2, 3, "aBFu17ll_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Us_BFu0c, aBFu17ll_Us_BFu0c)
//============================================================================



static void Test_aBFu17ll_Us_BFu0i()
{
  {
    init_simple_test("aBFu17ll_Us_BFu0i");
    static STRUCT_IF_C aBFu17ll_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_Us_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Us_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Us_BFu0i");
    check_field_offset(lv, v2, 3, "aBFu17ll_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Us_BFu0i, aBFu17ll_Us_BFu0i)
//============================================================================



static void Test_aBFu17ll_Us_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_Us_BFu0ll");
    static STRUCT_IF_C aBFu17ll_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu17ll_Us_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Us_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Us_BFu0ll");
    check_field_offset(lv, v2, 3, "aBFu17ll_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Us_BFu0ll, aBFu17ll_Us_BFu0ll)
//============================================================================



static void Test_aBFu17ll_Us_BFu0s()
{
  {
    init_simple_test("aBFu17ll_Us_BFu0s");
    static STRUCT_IF_C aBFu17ll_Us_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu17ll_Us_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Us_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Us_BFu0s");
    check_field_offset(lv, v2, 3, "aBFu17ll_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Us_BFu0s, aBFu17ll_Us_BFu0s)
//============================================================================



static void Test_aBFu17ll_Vp_BFu0c()
{
  {
    init_simple_test("aBFu17ll_Vp_BFu0c");
    static STRUCT_IF_C aBFu17ll_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu17ll_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Vp_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Vp_BFu0c");
    check_field_offset(lv, v2, 3, "aBFu17ll_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Vp_BFu0c, aBFu17ll_Vp_BFu0c)
//============================================================================



static void Test_aBFu17ll_Vp_BFu0i()
{
  {
    init_simple_test("aBFu17ll_Vp_BFu0i");
    static STRUCT_IF_C aBFu17ll_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu17ll_Vp_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Vp_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Vp_BFu0i");
    check_field_offset(lv, v2, 3, "aBFu17ll_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Vp_BFu0i, aBFu17ll_Vp_BFu0i)
//============================================================================



static void Test_aBFu17ll_Vp_BFu0ll()
{
  {
    init_simple_test("aBFu17ll_Vp_BFu0ll");
    static STRUCT_IF_C aBFu17ll_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu17ll_Vp_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Vp_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Vp_BFu0ll");
    check_field_offset(lv, v2, 3, "aBFu17ll_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Vp_BFu0ll, aBFu17ll_Vp_BFu0ll)
//============================================================================



static void Test_aBFu17ll_Vp_BFu0s()
{
  {
    init_simple_test("aBFu17ll_Vp_BFu0s");
    static STRUCT_IF_C aBFu17ll_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu17ll_Vp_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu17ll_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "aBFu17ll_Vp_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "aBFu17ll_Vp_BFu0s");
    check_field_offset(lv, v2, 3, "aBFu17ll_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu17ll_Vp_BFu0s, aBFu17ll_Vp_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c, aBFu1c_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1c_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu0c, aBFu1c_BFu0c_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu0i, aBFu1c_BFu0c_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu0c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu0ll, aBFu1c_BFu0c_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu0c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu0s, aBFu1c_BFu0c_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu15i()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu15i");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu15i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, 1, "aBFu1c_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1c_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu15i, aBFu1c_BFu0c_BFu15i)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu15ll()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu15ll");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, 1, "aBFu1c_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1c_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu15ll, aBFu1c_BFu0c_BFu15ll)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu15s()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu15s");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu15s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, 1, "aBFu1c_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1c_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu15s, aBFu1c_BFu0c_BFu15s)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu16i()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu16i");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1c_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, 1, "aBFu1c_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1c_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu16i, aBFu1c_BFu0c_BFu16i)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu16ll()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu16ll");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1c_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, 1, "aBFu1c_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1c_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu16ll, aBFu1c_BFu0c_BFu16ll)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu16s()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu16s");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1c_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, 1, "aBFu1c_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1c_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu16s, aBFu1c_BFu0c_BFu16s)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu17i()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu17i");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu17i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 17, 1, "aBFu1c_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1c_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu17i, aBFu1c_BFu0c_BFu17i)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu17ll()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu17ll");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 17, 1, "aBFu1c_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1c_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu17ll, aBFu1c_BFu0c_BFu17ll)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu1c()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu1c");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu1c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 1, 1, "aBFu1c_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu1c, aBFu1c_BFu0c_BFu1c)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu1i()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu1i");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu1i lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 1, 1, "aBFu1c_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu1i, aBFu1c_BFu0c_BFu1i)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu1ll()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu1ll");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 1, 1, "aBFu1c_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu1ll, aBFu1c_BFu0c_BFu1ll)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu1s()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu1s");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu1s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 1, 1, "aBFu1c_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu1s, aBFu1c_BFu0c_BFu1s)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu31i()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu31i");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu31i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 31, 1, "aBFu1c_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1c_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu31i, aBFu1c_BFu0c_BFu31i)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu31ll()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu31ll");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 31, 1, "aBFu1c_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1c_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu31ll, aBFu1c_BFu0c_BFu31ll)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu32i()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu32i");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1c_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 32, 1, "aBFu1c_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1c_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu32i, aBFu1c_BFu0c_BFu32i)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu32ll()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu32ll");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1c_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 32, 1, "aBFu1c_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1c_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu32ll, aBFu1c_BFu0c_BFu32ll)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu33()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu33");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu33 lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 33, 1, "aBFu1c_BFu0c_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu1c_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu33, aBFu1c_BFu0c_BFu33)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu7c()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu7c");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu7c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, 1, "aBFu1c_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1c_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu7c, aBFu1c_BFu0c_BFu7c)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu7i()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu7i");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu7i lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, 1, "aBFu1c_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1c_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu7i, aBFu1c_BFu0c_BFu7i)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu7ll()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu7ll");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, 1, "aBFu1c_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1c_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu7ll, aBFu1c_BFu0c_BFu7ll)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu7s()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu7s");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu7s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, 1, "aBFu1c_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1c_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu7s, aBFu1c_BFu0c_BFu7s)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu8c()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu8c");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, 1, "aBFu1c_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1c_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu8c, aBFu1c_BFu0c_BFu8c)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu8i()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu8i");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, 1, "aBFu1c_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1c_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu8i, aBFu1c_BFu0c_BFu8i)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu8ll()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu8ll");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, 1, "aBFu1c_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1c_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu8ll, aBFu1c_BFu0c_BFu8ll)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu8s()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu8s");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, 1, "aBFu1c_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1c_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu8s, aBFu1c_BFu0c_BFu8s)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu9i()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu9i");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu9i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, 1, "aBFu1c_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1c_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu9i, aBFu1c_BFu0c_BFu9i)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu9ll()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu9ll");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, 1, "aBFu1c_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1c_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu9ll, aBFu1c_BFu0c_BFu9ll)
//============================================================================



static void Test_aBFu1c_BFu0c_BFu9s()
{
  {
    init_simple_test("aBFu1c_BFu0c_BFu9s");
    static STRUCT_IF_C aBFu1c_BFu0c_BFu9s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, 1, "aBFu1c_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1c_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_BFu9s, aBFu1c_BFu0c_BFu9s)
//============================================================================



static void Test_aBFu1c_BFu0c_C()
{
  {
    init_simple_test("aBFu1c_BFu0c_C");
    static STRUCT_IF_C aBFu1c_BFu0c_C lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_C");
    check_field_offset(lv, v2, 1, "aBFu1c_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_C, aBFu1c_BFu0c_C)
//============================================================================



static void Test_aBFu1c_BFu0c_D()
{
  {
    init_simple_test("aBFu1c_BFu0c_D");
    static STRUCT_IF_C aBFu1c_BFu0c_D lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1c_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_D");
    check_field_offset(lv, v2, 1, "aBFu1c_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_D, aBFu1c_BFu0c_D)
//============================================================================



static void Test_aBFu1c_BFu0c_F()
{
  {
    init_simple_test("aBFu1c_BFu0c_F");
    static STRUCT_IF_C aBFu1c_BFu0c_F lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1c_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_F");
    check_field_offset(lv, v2, 1, "aBFu1c_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_F, aBFu1c_BFu0c_F)
//============================================================================



static void Test_aBFu1c_BFu0c_I()
{
  {
    init_simple_test("aBFu1c_BFu0c_I");
    static STRUCT_IF_C aBFu1c_BFu0c_I lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1c_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_I");
    check_field_offset(lv, v2, 1, "aBFu1c_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_I, aBFu1c_BFu0c_I)
//============================================================================



static void Test_aBFu1c_BFu0c_Ip()
{
  {
    init_simple_test("aBFu1c_BFu0c_Ip");
    static STRUCT_IF_C aBFu1c_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_Ip");
    check_field_offset(lv, v2, 1, "aBFu1c_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_Ip, aBFu1c_BFu0c_Ip)
//============================================================================



static void Test_aBFu1c_BFu0c_L()
{
  {
    init_simple_test("aBFu1c_BFu0c_L");
    static STRUCT_IF_C aBFu1c_BFu0c_L lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1c_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_L");
    check_field_offset(lv, v2, 1, "aBFu1c_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_L, aBFu1c_BFu0c_L)
//============================================================================



static void Test_aBFu1c_BFu0c_S()
{
  {
    init_simple_test("aBFu1c_BFu0c_S");
    static STRUCT_IF_C aBFu1c_BFu0c_S lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1c_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_S");
    check_field_offset(lv, v2, 1, "aBFu1c_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_S, aBFu1c_BFu0c_S)
//============================================================================



static void Test_aBFu1c_BFu0c_Uc()
{
  {
    init_simple_test("aBFu1c_BFu0c_Uc");
    static STRUCT_IF_C aBFu1c_BFu0c_Uc lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_Uc");
    check_field_offset(lv, v2, 1, "aBFu1c_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_Uc, aBFu1c_BFu0c_Uc)
//============================================================================



static void Test_aBFu1c_BFu0c_Ui()
{
  {
    init_simple_test("aBFu1c_BFu0c_Ui");
    static STRUCT_IF_C aBFu1c_BFu0c_Ui lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1c_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_Ui");
    check_field_offset(lv, v2, 1, "aBFu1c_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_Ui, aBFu1c_BFu0c_Ui)
//============================================================================



static void Test_aBFu1c_BFu0c_Ul()
{
  {
    init_simple_test("aBFu1c_BFu0c_Ul");
    static STRUCT_IF_C aBFu1c_BFu0c_Ul lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1c_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_Ul");
    check_field_offset(lv, v2, 1, "aBFu1c_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_Ul, aBFu1c_BFu0c_Ul)
//============================================================================



static void Test_aBFu1c_BFu0c_Us()
{
  {
    init_simple_test("aBFu1c_BFu0c_Us");
    static STRUCT_IF_C aBFu1c_BFu0c_Us lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1c_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_Us");
    check_field_offset(lv, v2, 1, "aBFu1c_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_Us, aBFu1c_BFu0c_Us)
//============================================================================



static void Test_aBFu1c_BFu0c_Vp()
{
  {
    init_simple_test("aBFu1c_BFu0c_Vp");
    static STRUCT_IF_C aBFu1c_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0c_Vp");
    check_field_offset(lv, v2, 1, "aBFu1c_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0c_Vp, aBFu1c_BFu0c_Vp)
//============================================================================



static void Test_aBFu1c_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i, aBFu1c_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu0c, aBFu1c_BFu0i_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu0i, aBFu1c_BFu0i_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu0i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu0ll, aBFu1c_BFu0i_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu0s, aBFu1c_BFu0i_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu15i()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu15i");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu1c_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1c_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu15i, aBFu1c_BFu0i_BFu15i)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu15ll()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu15ll");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu1c_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1c_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu15ll, aBFu1c_BFu0i_BFu15ll)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu15s()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu15s");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu1c_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1c_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu15s, aBFu1c_BFu0i_BFu15s)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu16i()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu16i");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu1c_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1c_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu16i, aBFu1c_BFu0i_BFu16i)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu16ll()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu16ll");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu1c_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1c_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu16ll, aBFu1c_BFu0i_BFu16ll)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu16s()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu16s");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu1c_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1c_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu16s, aBFu1c_BFu0i_BFu16s)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu17i()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu17i");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu1c_BFu0i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu1c_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1c_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu17i, aBFu1c_BFu0i_BFu17i)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu17ll()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu17ll");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu1c_BFu0i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu1c_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1c_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu17ll, aBFu1c_BFu0i_BFu17ll)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu1c()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu1c");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu1c_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu1c, aBFu1c_BFu0i_BFu1c)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu1i()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu1i");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu1c_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu1i, aBFu1c_BFu0i_BFu1i)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu1ll()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu1ll");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu1c_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu1ll, aBFu1c_BFu0i_BFu1ll)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu1s()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu1s");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu1c_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu1s, aBFu1c_BFu0i_BFu1s)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu31i()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu31i");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu31i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_BFu0i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu1c_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1c_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu31i, aBFu1c_BFu0i_BFu31i)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu31ll()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu31ll");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_BFu0i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu1c_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1c_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu31ll, aBFu1c_BFu0i_BFu31ll)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu32i()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu32i");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu32i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_BFu0i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu1c_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1c_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu32i, aBFu1c_BFu0i_BFu32i)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu32ll()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu32ll");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_BFu0i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu1c_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1c_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu32ll, aBFu1c_BFu0i_BFu32ll)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu33()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu33");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(aBFu1c_BFu0i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, 1, "aBFu1c_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu1c_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu33, aBFu1c_BFu0i_BFu33)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu7c()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu7c");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu1c_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1c_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu7c, aBFu1c_BFu0i_BFu7c)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu7i()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu7i");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu1c_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1c_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu7i, aBFu1c_BFu0i_BFu7i)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu7ll()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu7ll");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu1c_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1c_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu7ll, aBFu1c_BFu0i_BFu7ll)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu7s()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu7s");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu1c_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1c_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu7s, aBFu1c_BFu0i_BFu7s)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu8c()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu8c");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu1c_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1c_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu8c, aBFu1c_BFu0i_BFu8c)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu8i()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu8i");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu1c_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1c_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu8i, aBFu1c_BFu0i_BFu8i)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu8ll()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu8ll");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu1c_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1c_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu8ll, aBFu1c_BFu0i_BFu8ll)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu8s()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu8s");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu1c_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1c_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu8s, aBFu1c_BFu0i_BFu8s)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu9i()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu9i");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu1c_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1c_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu9i, aBFu1c_BFu0i_BFu9i)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu9ll()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu9ll");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu1c_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1c_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu9ll, aBFu1c_BFu0i_BFu9ll)
//============================================================================



static void Test_aBFu1c_BFu0i_BFu9s()
{
  {
    init_simple_test("aBFu1c_BFu0i_BFu9s");
    static STRUCT_IF_C aBFu1c_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu1c_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1c_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_BFu9s, aBFu1c_BFu0i_BFu9s)
//============================================================================



static void Test_aBFu1c_BFu0i_C()
{
  {
    init_simple_test("aBFu1c_BFu0i_C");
    static STRUCT_IF_C aBFu1c_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_C");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1c_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_C, aBFu1c_BFu0i_C)
//============================================================================



static void Test_aBFu1c_BFu0i_D()
{
  {
    init_simple_test("aBFu1c_BFu0i_D");
    static STRUCT_IF_C aBFu1c_BFu0i_D lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1c_BFu0i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_D");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1c_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_D, aBFu1c_BFu0i_D)
//============================================================================



static void Test_aBFu1c_BFu0i_F()
{
  {
    init_simple_test("aBFu1c_BFu0i_F");
    static STRUCT_IF_C aBFu1c_BFu0i_F lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_BFu0i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_F");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1c_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_F, aBFu1c_BFu0i_F)
//============================================================================



static void Test_aBFu1c_BFu0i_I()
{
  {
    init_simple_test("aBFu1c_BFu0i_I");
    static STRUCT_IF_C aBFu1c_BFu0i_I lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_BFu0i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_I");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1c_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_I, aBFu1c_BFu0i_I)
//============================================================================



static void Test_aBFu1c_BFu0i_Ip()
{
  {
    init_simple_test("aBFu1c_BFu0i_Ip");
    static STRUCT_IF_C aBFu1c_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1c_BFu0i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_Ip");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1c_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_Ip, aBFu1c_BFu0i_Ip)
//============================================================================



static void Test_aBFu1c_BFu0i_L()
{
  {
    init_simple_test("aBFu1c_BFu0i_L");
    static STRUCT_IF_C aBFu1c_BFu0i_L lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1c_BFu0i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_L");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1c_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_L, aBFu1c_BFu0i_L)
//============================================================================



static void Test_aBFu1c_BFu0i_S()
{
  {
    init_simple_test("aBFu1c_BFu0i_S");
    static STRUCT_IF_C aBFu1c_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_S");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1c_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_S, aBFu1c_BFu0i_S)
//============================================================================



static void Test_aBFu1c_BFu0i_Uc()
{
  {
    init_simple_test("aBFu1c_BFu0i_Uc");
    static STRUCT_IF_C aBFu1c_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_Uc");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1c_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_Uc, aBFu1c_BFu0i_Uc)
//============================================================================



static void Test_aBFu1c_BFu0i_Ui()
{
  {
    init_simple_test("aBFu1c_BFu0i_Ui");
    static STRUCT_IF_C aBFu1c_BFu0i_Ui lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_BFu0i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_Ui");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1c_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_Ui, aBFu1c_BFu0i_Ui)
//============================================================================



static void Test_aBFu1c_BFu0i_Ul()
{
  {
    init_simple_test("aBFu1c_BFu0i_Ul");
    static STRUCT_IF_C aBFu1c_BFu0i_Ul lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1c_BFu0i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_Ul");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1c_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_Ul, aBFu1c_BFu0i_Ul)
//============================================================================



static void Test_aBFu1c_BFu0i_Us()
{
  {
    init_simple_test("aBFu1c_BFu0i_Us");
    static STRUCT_IF_C aBFu1c_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_Us");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1c_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_Us, aBFu1c_BFu0i_Us)
//============================================================================



static void Test_aBFu1c_BFu0i_Vp()
{
  {
    init_simple_test("aBFu1c_BFu0i_Vp");
    static STRUCT_IF_C aBFu1c_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1c_BFu0i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0i_Vp");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1c_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0i_Vp, aBFu1c_BFu0i_Vp)
//============================================================================



static void Test_aBFu1c_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll, aBFu1c_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu0ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu0c, aBFu1c_BFu0ll_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu0ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu0i, aBFu1c_BFu0ll_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu0ll, aBFu1c_BFu0ll_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu0ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu0s, aBFu1c_BFu0ll_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu15i()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu15i");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1c_BFu0ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu1c_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1c_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu15i, aBFu1c_BFu0ll_BFu15i)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu15ll()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu15ll");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1c_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu1c_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1c_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu15ll, aBFu1c_BFu0ll_BFu15ll)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu15s()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu15s");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1c_BFu0ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu1c_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1c_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu15s, aBFu1c_BFu0ll_BFu15s)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu16i()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu16i");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1c_BFu0ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu1c_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1c_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu16i, aBFu1c_BFu0ll_BFu16i)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu16ll()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu16ll");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1c_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu1c_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1c_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu16ll, aBFu1c_BFu0ll_BFu16ll)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu16s()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu16s");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1c_BFu0ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu1c_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1c_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu16s, aBFu1c_BFu0ll_BFu16s)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu17i()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu17i");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu1c_BFu0ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, 1, "aBFu1c_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1c_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu17i, aBFu1c_BFu0ll_BFu17i)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu17ll()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu17ll");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu1c_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, 1, "aBFu1c_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1c_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu17ll, aBFu1c_BFu0ll_BFu17ll)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu1c()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu1c");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_BFu0ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu1c_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu1c, aBFu1c_BFu0ll_BFu1c)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu1i()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu1i");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_BFu0ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu1c_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu1i, aBFu1c_BFu0ll_BFu1i)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu1ll()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu1ll");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu1c_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu1ll, aBFu1c_BFu0ll_BFu1ll)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu1s()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu1s");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_BFu0ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu1c_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu1s, aBFu1c_BFu0ll_BFu1s)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu31i()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu31i");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1c_BFu0ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, 1, "aBFu1c_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1c_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu31i, aBFu1c_BFu0ll_BFu31i)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu31ll()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu31ll");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1c_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, 1, "aBFu1c_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1c_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu31ll, aBFu1c_BFu0ll_BFu31ll)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu32i()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu32i");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1c_BFu0ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, 1, "aBFu1c_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1c_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu32i, aBFu1c_BFu0ll_BFu32i)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu32ll()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu32ll");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1c_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, 1, "aBFu1c_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1c_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu32ll, aBFu1c_BFu0ll_BFu32ll)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu33()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu33");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aBFu1c_BFu0ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 33, 1, "aBFu1c_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu1c_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu33, aBFu1c_BFu0ll_BFu33)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu7c()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu7c");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_BFu0ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu1c_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1c_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu7c, aBFu1c_BFu0ll_BFu7c)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu7i()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu7i");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_BFu0ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu1c_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1c_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu7i, aBFu1c_BFu0ll_BFu7i)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu7ll()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu7ll");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu1c_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1c_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu7ll, aBFu1c_BFu0ll_BFu7ll)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu7s()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu7s");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_BFu0ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu1c_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1c_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu7s, aBFu1c_BFu0ll_BFu7s)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu8c()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu8c");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_BFu0ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu1c_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1c_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu8c, aBFu1c_BFu0ll_BFu8c)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu8i()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu8i");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_BFu0ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu1c_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1c_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu8i, aBFu1c_BFu0ll_BFu8i)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu8ll()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu8ll");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu1c_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1c_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu8ll, aBFu1c_BFu0ll_BFu8ll)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu8s()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu8s");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_BFu0ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu1c_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1c_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu8s, aBFu1c_BFu0ll_BFu8s)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu9i()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu9i");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1c_BFu0ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu1c_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1c_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu9i, aBFu1c_BFu0ll_BFu9i)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu9ll()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu9ll");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1c_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu1c_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1c_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu9ll, aBFu1c_BFu0ll_BFu9ll)
//============================================================================



static void Test_aBFu1c_BFu0ll_BFu9s()
{
  {
    init_simple_test("aBFu1c_BFu0ll_BFu9s");
    static STRUCT_IF_C aBFu1c_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1c_BFu0ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu1c_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1c_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_BFu9s, aBFu1c_BFu0ll_BFu9s)
//============================================================================



static void Test_aBFu1c_BFu0ll_C()
{
  {
    init_simple_test("aBFu1c_BFu0ll_C");
    static STRUCT_IF_C aBFu1c_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_BFu0ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1c_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_C, aBFu1c_BFu0ll_C)
//============================================================================



static void Test_aBFu1c_BFu0ll_D()
{
  {
    init_simple_test("aBFu1c_BFu0ll_D");
    static STRUCT_IF_C aBFu1c_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1c_BFu0ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1c_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_D, aBFu1c_BFu0ll_D)
//============================================================================



static void Test_aBFu1c_BFu0ll_F()
{
  {
    init_simple_test("aBFu1c_BFu0ll_F");
    static STRUCT_IF_C aBFu1c_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1c_BFu0ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1c_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_F, aBFu1c_BFu0ll_F)
//============================================================================



static void Test_aBFu1c_BFu0ll_I()
{
  {
    init_simple_test("aBFu1c_BFu0ll_I");
    static STRUCT_IF_C aBFu1c_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1c_BFu0ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1c_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_I, aBFu1c_BFu0ll_I)
//============================================================================



static void Test_aBFu1c_BFu0ll_Ip()
{
  {
    init_simple_test("aBFu1c_BFu0ll_Ip");
    static STRUCT_IF_C aBFu1c_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu1c_BFu0ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1c_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_Ip, aBFu1c_BFu0ll_Ip)
//============================================================================



static void Test_aBFu1c_BFu0ll_L()
{
  {
    init_simple_test("aBFu1c_BFu0ll_L");
    static STRUCT_IF_C aBFu1c_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1c_BFu0ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1c_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_L, aBFu1c_BFu0ll_L)
//============================================================================



static void Test_aBFu1c_BFu0ll_S()
{
  {
    init_simple_test("aBFu1c_BFu0ll_S");
    static STRUCT_IF_C aBFu1c_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1c_BFu0ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1c_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_S, aBFu1c_BFu0ll_S)
//============================================================================



static void Test_aBFu1c_BFu0ll_Uc()
{
  {
    init_simple_test("aBFu1c_BFu0ll_Uc");
    static STRUCT_IF_C aBFu1c_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_BFu0ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1c_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_Uc, aBFu1c_BFu0ll_Uc)
//============================================================================



static void Test_aBFu1c_BFu0ll_Ui()
{
  {
    init_simple_test("aBFu1c_BFu0ll_Ui");
    static STRUCT_IF_C aBFu1c_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1c_BFu0ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1c_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_Ui, aBFu1c_BFu0ll_Ui)
//============================================================================



static void Test_aBFu1c_BFu0ll_Ul()
{
  {
    init_simple_test("aBFu1c_BFu0ll_Ul");
    static STRUCT_IF_C aBFu1c_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1c_BFu0ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1c_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_Ul, aBFu1c_BFu0ll_Ul)
//============================================================================



static void Test_aBFu1c_BFu0ll_Us()
{
  {
    init_simple_test("aBFu1c_BFu0ll_Us");
    static STRUCT_IF_C aBFu1c_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1c_BFu0ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1c_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_Us, aBFu1c_BFu0ll_Us)
//============================================================================



static void Test_aBFu1c_BFu0ll_Vp()
{
  {
    init_simple_test("aBFu1c_BFu0ll_Vp");
    static STRUCT_IF_C aBFu1c_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu1c_BFu0ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1c_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0ll_Vp, aBFu1c_BFu0ll_Vp)
//============================================================================



static void Test_aBFu1c_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s, aBFu1c_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu0s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu0c, aBFu1c_BFu0s_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu0i, aBFu1c_BFu0s_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu0s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu0ll, aBFu1c_BFu0s_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu0s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu0s, aBFu1c_BFu0s_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu15i()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu15i");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu15i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, 1, "aBFu1c_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1c_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu15i, aBFu1c_BFu0s_BFu15i)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu15ll()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu15ll");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, 1, "aBFu1c_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1c_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu15ll, aBFu1c_BFu0s_BFu15ll)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu15s()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu15s");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu15s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, 1, "aBFu1c_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1c_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu15s, aBFu1c_BFu0s_BFu15s)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu16i()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu16i");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu16i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, 1, "aBFu1c_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1c_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu16i, aBFu1c_BFu0s_BFu16i)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu16ll()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu16ll");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, 1, "aBFu1c_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1c_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu16ll, aBFu1c_BFu0s_BFu16ll)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu16s()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu16s");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu16s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, 1, "aBFu1c_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1c_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu16s, aBFu1c_BFu0s_BFu16s)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu17i()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu17i");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 17, 1, "aBFu1c_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1c_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu17i, aBFu1c_BFu0s_BFu17i)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu17ll()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu17ll");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1c_BFu0s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 17, 1, "aBFu1c_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1c_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu17ll, aBFu1c_BFu0s_BFu17ll)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu1c()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu1c");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 1, 1, "aBFu1c_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu1c, aBFu1c_BFu0s_BFu1c)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu1i()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu1i");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 1, 1, "aBFu1c_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu1i, aBFu1c_BFu0s_BFu1i)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu1ll()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu1ll");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 1, 1, "aBFu1c_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu1ll, aBFu1c_BFu0s_BFu1ll)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu1s()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu1s");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 1, 1, "aBFu1c_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu1s, aBFu1c_BFu0s_BFu1s)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu31i()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu31i");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu31i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 31, 1, "aBFu1c_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1c_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu31i, aBFu1c_BFu0s_BFu31i)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu31ll()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu31ll");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 31, 1, "aBFu1c_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1c_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu31ll, aBFu1c_BFu0s_BFu31ll)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu32i()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu32i");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu32i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 32, 1, "aBFu1c_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1c_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu32i, aBFu1c_BFu0s_BFu32i)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu32ll()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu32ll");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 32, 1, "aBFu1c_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1c_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu32ll, aBFu1c_BFu0s_BFu32ll)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu33()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu33");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu1c_BFu0s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 33, 1, "aBFu1c_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu1c_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu33, aBFu1c_BFu0s_BFu33)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu7c()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu7c");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, 1, "aBFu1c_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1c_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu7c, aBFu1c_BFu0s_BFu7c)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu7i()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu7i");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, 1, "aBFu1c_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1c_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu7i, aBFu1c_BFu0s_BFu7i)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu7ll()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu7ll");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, 1, "aBFu1c_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1c_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu7ll, aBFu1c_BFu0s_BFu7ll)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu7s()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu7s");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, 1, "aBFu1c_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1c_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu7s, aBFu1c_BFu0s_BFu7s)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu8c()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu8c");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, 1, "aBFu1c_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1c_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu8c, aBFu1c_BFu0s_BFu8c)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu8i()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu8i");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, 1, "aBFu1c_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1c_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu8i, aBFu1c_BFu0s_BFu8i)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu8ll()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu8ll");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, 1, "aBFu1c_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1c_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu8ll, aBFu1c_BFu0s_BFu8ll)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu8s()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu8s");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, 1, "aBFu1c_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1c_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu8s, aBFu1c_BFu0s_BFu8s)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu9i()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu9i");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu9i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, 1, "aBFu1c_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1c_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu9i, aBFu1c_BFu0s_BFu9i)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu9ll()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu9ll");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, 1, "aBFu1c_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1c_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu9ll, aBFu1c_BFu0s_BFu9ll)
//============================================================================



static void Test_aBFu1c_BFu0s_BFu9s()
{
  {
    init_simple_test("aBFu1c_BFu0s_BFu9s");
    static STRUCT_IF_C aBFu1c_BFu0s_BFu9s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, 1, "aBFu1c_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1c_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_BFu9s, aBFu1c_BFu0s_BFu9s)
//============================================================================



static void Test_aBFu1c_BFu0s_C()
{
  {
    init_simple_test("aBFu1c_BFu0s_C");
    static STRUCT_IF_C aBFu1c_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_C");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1c_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_C, aBFu1c_BFu0s_C)
//============================================================================



static void Test_aBFu1c_BFu0s_D()
{
  {
    init_simple_test("aBFu1c_BFu0s_D");
    static STRUCT_IF_C aBFu1c_BFu0s_D lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1c_BFu0s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_D");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1c_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_D, aBFu1c_BFu0s_D)
//============================================================================



static void Test_aBFu1c_BFu0s_F()
{
  {
    init_simple_test("aBFu1c_BFu0s_F");
    static STRUCT_IF_C aBFu1c_BFu0s_F lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_F");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1c_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_F, aBFu1c_BFu0s_F)
//============================================================================



static void Test_aBFu1c_BFu0s_I()
{
  {
    init_simple_test("aBFu1c_BFu0s_I");
    static STRUCT_IF_C aBFu1c_BFu0s_I lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_I");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1c_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_I, aBFu1c_BFu0s_I)
//============================================================================



static void Test_aBFu1c_BFu0s_Ip()
{
  {
    init_simple_test("aBFu1c_BFu0s_Ip");
    static STRUCT_IF_C aBFu1c_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1c_BFu0s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_Ip");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1c_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_Ip, aBFu1c_BFu0s_Ip)
//============================================================================



static void Test_aBFu1c_BFu0s_L()
{
  {
    init_simple_test("aBFu1c_BFu0s_L");
    static STRUCT_IF_C aBFu1c_BFu0s_L lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1c_BFu0s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_L");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1c_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_L, aBFu1c_BFu0s_L)
//============================================================================



static void Test_aBFu1c_BFu0s_S()
{
  {
    init_simple_test("aBFu1c_BFu0s_S");
    static STRUCT_IF_C aBFu1c_BFu0s_S lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_S");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1c_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_S, aBFu1c_BFu0s_S)
//============================================================================



static void Test_aBFu1c_BFu0s_Uc()
{
  {
    init_simple_test("aBFu1c_BFu0s_Uc");
    static STRUCT_IF_C aBFu1c_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1c_BFu0s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_Uc");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1c_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_Uc, aBFu1c_BFu0s_Uc)
//============================================================================



static void Test_aBFu1c_BFu0s_Ui()
{
  {
    init_simple_test("aBFu1c_BFu0s_Ui");
    static STRUCT_IF_C aBFu1c_BFu0s_Ui lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu0s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_Ui");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1c_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_Ui, aBFu1c_BFu0s_Ui)
//============================================================================



static void Test_aBFu1c_BFu0s_Ul()
{
  {
    init_simple_test("aBFu1c_BFu0s_Ul");
    static STRUCT_IF_C aBFu1c_BFu0s_Ul lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1c_BFu0s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_Ul");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1c_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_Ul, aBFu1c_BFu0s_Ul)
//============================================================================



static void Test_aBFu1c_BFu0s_Us()
{
  {
    init_simple_test("aBFu1c_BFu0s_Us");
    static STRUCT_IF_C aBFu1c_BFu0s_Us lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu0s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_Us");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1c_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_Us, aBFu1c_BFu0s_Us)
//============================================================================



static void Test_aBFu1c_BFu0s_Vp()
{
  {
    init_simple_test("aBFu1c_BFu0s_Vp");
    static STRUCT_IF_C aBFu1c_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1c_BFu0s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu0s_Vp");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1c_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu0s_Vp, aBFu1c_BFu0s_Vp)
//============================================================================



static void Test_aBFu1c_BFu15i_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu15i_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu15i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1c_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1c_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu15i_BFu0c, aBFu1c_BFu15i_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu15i_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu15i_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu15i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1c_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1c_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu15i_BFu0i, aBFu1c_BFu15i_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu15i_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu15i_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu15i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1c_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1c_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu15i_BFu0ll, aBFu1c_BFu15i_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu15i_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu15i_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu15i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu15i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1c_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1c_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu15i_BFu0s, aBFu1c_BFu15i_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu15ll_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu15ll_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1c_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1c_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu15ll_BFu0c, aBFu1c_BFu15ll_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu15ll_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu15ll_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu15ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1c_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1c_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu15ll_BFu0i, aBFu1c_BFu15ll_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu15ll_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu15ll_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1c_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1c_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu15ll_BFu0ll, aBFu1c_BFu15ll_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu15ll_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu15ll_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu15ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1c_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1c_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu15ll_BFu0s, aBFu1c_BFu15ll_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu15s_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu15s_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu15s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1c_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1c_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu15s_BFu0c, aBFu1c_BFu15s_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu15s_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu15s_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu15s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1c_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1c_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu15s_BFu0i, aBFu1c_BFu15s_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu15s_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu15s_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu15s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1c_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1c_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu15s_BFu0ll, aBFu1c_BFu15s_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu15s_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu15s_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu15s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu15s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1c_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1c_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu15s_BFu0s, aBFu1c_BFu15s_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu16i_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu16i_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu16i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1c_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1c_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1c_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu16i_BFu0c, aBFu1c_BFu16i_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu16i_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu16i_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu16i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1c_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1c_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu16i_BFu0i, aBFu1c_BFu16i_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu16i_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu16i_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu16i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1c_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1c_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu16i_BFu0ll, aBFu1c_BFu16i_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu16i_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu16i_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu16i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu16i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1c_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1c_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu16i_BFu0s, aBFu1c_BFu16i_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu16ll_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu16ll_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1c_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1c_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1c_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu16ll_BFu0c, aBFu1c_BFu16ll_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu16ll_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu16ll_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu16ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1c_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1c_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu16ll_BFu0i, aBFu1c_BFu16ll_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu16ll_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu16ll_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1c_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1c_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu16ll_BFu0ll, aBFu1c_BFu16ll_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu16ll_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu16ll_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu16ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu16ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1c_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1c_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu16ll_BFu0s, aBFu1c_BFu16ll_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu16s_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu16s_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu16s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1c_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1c_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1c_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu16s_BFu0c, aBFu1c_BFu16s_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu16s_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu16s_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu16s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1c_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1c_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu16s_BFu0i, aBFu1c_BFu16s_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu16s_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu16s_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu16s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1c_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1c_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu16s_BFu0ll, aBFu1c_BFu16s_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu16s_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu16s_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu16s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu16s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1c_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1c_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu16s_BFu0s, aBFu1c_BFu16s_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu17i_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu17i_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu17i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1c_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1c_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1c_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu17i_BFu0c, aBFu1c_BFu17i_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu17i_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu17i_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu17i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1c_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1c_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu17i_BFu0i, aBFu1c_BFu17i_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu17i_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu17i_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu17i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1c_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1c_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu17i_BFu0ll, aBFu1c_BFu17i_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu17i_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu17i_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu17i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1c_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1c_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu17i_BFu0s, aBFu1c_BFu17i_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu17ll_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu17ll_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1c_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1c_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1c_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu17ll_BFu0c, aBFu1c_BFu17ll_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu17ll_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu17ll_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu17ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1c_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1c_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu17ll_BFu0i, aBFu1c_BFu17ll_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu17ll_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu17ll_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1c_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1c_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu17ll_BFu0ll, aBFu1c_BFu17ll_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu17ll_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu17ll_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu17ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1c_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1c_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu17ll_BFu0s, aBFu1c_BFu17ll_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu1c_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu1c_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu1c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1c_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1c_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu1c_BFu0c, aBFu1c_BFu1c_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu1c_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu1c_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu1c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1c_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu1c_BFu0i, aBFu1c_BFu1c_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu1c_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu1c_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu1c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1c_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu1c_BFu0ll, aBFu1c_BFu1c_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu1c_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu1c_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu1c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1c_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu1c_BFu0s, aBFu1c_BFu1c_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu1i_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu1i_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu1i_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1c_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1c_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu1i_BFu0c, aBFu1c_BFu1i_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu1i_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu1i_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu1i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1c_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu1i_BFu0i, aBFu1c_BFu1i_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu1i_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu1i_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu1i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1c_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu1i_BFu0ll, aBFu1c_BFu1i_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu1i_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu1i_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu1i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1c_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu1i_BFu0s, aBFu1c_BFu1i_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu1ll_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu1ll_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1c_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1c_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu1ll_BFu0c, aBFu1c_BFu1ll_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu1ll_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu1ll_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu1ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1c_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu1ll_BFu0i, aBFu1c_BFu1ll_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu1ll_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu1ll_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1c_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu1ll_BFu0ll, aBFu1c_BFu1ll_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu1ll_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu1ll_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu1ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1c_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu1ll_BFu0s, aBFu1c_BFu1ll_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu1s_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu1s_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu1s_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1c_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1c_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu1s_BFu0c, aBFu1c_BFu1s_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu1s_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu1s_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu1s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1c_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu1s_BFu0i, aBFu1c_BFu1s_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu1s_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu1s_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu1s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1c_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu1s_BFu0ll, aBFu1c_BFu1s_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu1s_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu1s_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu1s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1c_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu1s_BFu0s, aBFu1c_BFu1s_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu31i_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu31i_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu31i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1c_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1c_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1c_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu31i_BFu0c, aBFu1c_BFu31i_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu31i_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu31i_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu31i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1c_BFu31i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1c_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1c_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu31i_BFu0i, aBFu1c_BFu31i_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu31i_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu31i_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu31i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1c_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1c_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu31i_BFu0ll, aBFu1c_BFu31i_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu31i_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu31i_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu31i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1c_BFu31i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1c_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1c_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu31i_BFu0s, aBFu1c_BFu31i_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu31ll_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu31ll_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1c_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1c_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1c_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu31ll_BFu0c, aBFu1c_BFu31ll_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu31ll_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu31ll_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1c_BFu31ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1c_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1c_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu31ll_BFu0i, aBFu1c_BFu31ll_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu31ll_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu31ll_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1c_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1c_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu31ll_BFu0ll, aBFu1c_BFu31ll_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu31ll_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu31ll_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1c_BFu31ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1c_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1c_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu31ll_BFu0s, aBFu1c_BFu31ll_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu32i_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu32i_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu32i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1c_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1c_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1c_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu32i_BFu0c, aBFu1c_BFu32i_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu32i_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu32i_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu32i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_BFu32i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1c_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1c_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu32i_BFu0i, aBFu1c_BFu32i_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu32i_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu32i_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_BFu32i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1c_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1c_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu32i_BFu0ll, aBFu1c_BFu32i_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu32i_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu32i_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu32i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu32i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1c_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1c_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu32i_BFu0s, aBFu1c_BFu32i_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu32ll_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu32ll_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1c_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1c_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1c_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu32ll_BFu0c, aBFu1c_BFu32ll_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu32ll_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu32ll_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu32ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_BFu32ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1c_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1c_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu32ll_BFu0i, aBFu1c_BFu32ll_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu32ll_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu32ll_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1c_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1c_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu32ll_BFu0ll, aBFu1c_BFu32ll_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu32ll_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu32ll_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu32ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu32ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1c_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1c_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu32ll_BFu0s, aBFu1c_BFu32ll_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu33_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu33_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu33_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1c_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "aBFu1c_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "aBFu1c_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu33_BFu0c, aBFu1c_BFu33_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu33_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu33_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_BFu33_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "aBFu1c_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "aBFu1c_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu33_BFu0i, aBFu1c_BFu33_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu33_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu33_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_BFu33_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "aBFu1c_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "aBFu1c_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu33_BFu0ll, aBFu1c_BFu33_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu33_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu33_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_BFu33_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "aBFu1c_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "aBFu1c_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu33_BFu0s, aBFu1c_BFu33_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu7c_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu7c_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu7c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1c_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1c_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1c_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu7c_BFu0c, aBFu1c_BFu7c_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu7c_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu7c_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu7c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1c_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1c_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu7c_BFu0i, aBFu1c_BFu7c_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu7c_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu7c_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu7c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1c_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1c_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu7c_BFu0ll, aBFu1c_BFu7c_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu7c_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu7c_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu7c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1c_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1c_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu7c_BFu0s, aBFu1c_BFu7c_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu7i_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu7i_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu7i_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1c_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1c_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1c_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu7i_BFu0c, aBFu1c_BFu7i_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu7i_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu7i_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu7i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1c_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1c_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu7i_BFu0i, aBFu1c_BFu7i_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu7i_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu7i_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu7i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1c_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1c_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu7i_BFu0ll, aBFu1c_BFu7i_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu7i_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu7i_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu7i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1c_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1c_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu7i_BFu0s, aBFu1c_BFu7i_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu7ll_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu7ll_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1c_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1c_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1c_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu7ll_BFu0c, aBFu1c_BFu7ll_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu7ll_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu7ll_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu7ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1c_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1c_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu7ll_BFu0i, aBFu1c_BFu7ll_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu7ll_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu7ll_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1c_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1c_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu7ll_BFu0ll, aBFu1c_BFu7ll_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu7ll_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu7ll_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu7ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1c_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1c_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu7ll_BFu0s, aBFu1c_BFu7ll_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu7s_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu7s_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu7s_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1c_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1c_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1c_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu7s_BFu0c, aBFu1c_BFu7s_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu7s_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu7s_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu7s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1c_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1c_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu7s_BFu0i, aBFu1c_BFu7s_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu7s_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu7s_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu7s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1c_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1c_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu7s_BFu0ll, aBFu1c_BFu7s_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu7s_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu7s_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1c_BFu7s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1c_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1c_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu7s_BFu0s, aBFu1c_BFu7s_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu8c_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu8c_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu8c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1c_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1c_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu8c_BFu0c, aBFu1c_BFu8c_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu8c_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu8c_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu8c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1c_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1c_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu8c_BFu0i, aBFu1c_BFu8c_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu8c_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu8c_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu8c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1c_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1c_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu8c_BFu0ll, aBFu1c_BFu8c_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu8c_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu8c_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu8c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu8c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1c_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1c_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu8c_BFu0s, aBFu1c_BFu8c_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu8i_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu8i_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu8i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1c_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1c_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu8i_BFu0c, aBFu1c_BFu8i_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu8i_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu8i_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu8i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1c_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1c_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu8i_BFu0i, aBFu1c_BFu8i_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu8i_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu8i_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu8i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1c_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1c_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu8i_BFu0ll, aBFu1c_BFu8i_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu8i_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu8i_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu8i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu8i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1c_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1c_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu8i_BFu0s, aBFu1c_BFu8i_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu8ll_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu8ll_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1c_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1c_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu8ll_BFu0c, aBFu1c_BFu8ll_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu8ll_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu8ll_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu8ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1c_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1c_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu8ll_BFu0i, aBFu1c_BFu8ll_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu8ll_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu8ll_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1c_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1c_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu8ll_BFu0ll, aBFu1c_BFu8ll_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu8ll_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu8ll_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu8ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu8ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1c_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1c_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu8ll_BFu0s, aBFu1c_BFu8ll_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu8s_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu8s_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu8s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1c_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1c_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu8s_BFu0c, aBFu1c_BFu8s_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu8s_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu8s_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu8s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1c_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1c_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu8s_BFu0i, aBFu1c_BFu8s_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu8s_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu8s_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu8s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1c_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1c_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu8s_BFu0ll, aBFu1c_BFu8s_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu8s_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu8s_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu8s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu8s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1c_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1c_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu8s_BFu0s, aBFu1c_BFu8s_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu9i_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu9i_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu9i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1c_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1c_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu9i_BFu0c, aBFu1c_BFu9i_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu9i_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu9i_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu9i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1c_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1c_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu9i_BFu0i, aBFu1c_BFu9i_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu9i_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu9i_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu9i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1c_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1c_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu9i_BFu0ll, aBFu1c_BFu9i_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu9i_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu9i_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu9i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu9i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1c_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1c_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu9i_BFu0s, aBFu1c_BFu9i_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu9ll_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu9ll_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1c_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1c_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu9ll_BFu0c, aBFu1c_BFu9ll_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu9ll_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu9ll_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu9ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1c_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1c_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu9ll_BFu0i, aBFu1c_BFu9ll_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu9ll_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu9ll_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1c_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1c_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu9ll_BFu0ll, aBFu1c_BFu9ll_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu9ll_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu9ll_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu9ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1c_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1c_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu9ll_BFu0s, aBFu1c_BFu9ll_BFu0s)
//============================================================================



static void Test_aBFu1c_BFu9s_BFu0c()
{
  {
    init_simple_test("aBFu1c_BFu9s_BFu0c");
    static STRUCT_IF_C aBFu1c_BFu9s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1c_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1c_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu9s_BFu0c, aBFu1c_BFu9s_BFu0c)
//============================================================================



static void Test_aBFu1c_BFu9s_BFu0i()
{
  {
    init_simple_test("aBFu1c_BFu9s_BFu0i");
    static STRUCT_IF_C aBFu1c_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_BFu9s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1c_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1c_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu9s_BFu0i, aBFu1c_BFu9s_BFu0i)
//============================================================================



static void Test_aBFu1c_BFu9s_BFu0ll()
{
  {
    init_simple_test("aBFu1c_BFu9s_BFu0ll");
    static STRUCT_IF_C aBFu1c_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_BFu9s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1c_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1c_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu9s_BFu0ll, aBFu1c_BFu9s_BFu0ll)
//============================================================================



static void Test_aBFu1c_BFu9s_BFu0s()
{
  {
    init_simple_test("aBFu1c_BFu9s_BFu0s");
    static STRUCT_IF_C aBFu1c_BFu9s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_BFu9s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1c_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1c_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_BFu9s_BFu0s, aBFu1c_BFu9s_BFu0s)
//============================================================================



static void Test_aBFu1c_C_BFu0c()
{
  {
    init_simple_test("aBFu1c_C_BFu0c");
    static STRUCT_IF_C aBFu1c_C_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_C_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1c_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_C_BFu0c, aBFu1c_C_BFu0c)
//============================================================================



static void Test_aBFu1c_C_BFu0i()
{
  {
    init_simple_test("aBFu1c_C_BFu0i");
    static STRUCT_IF_C aBFu1c_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_C_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_C_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1c_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_C_BFu0i, aBFu1c_C_BFu0i)
//============================================================================



static void Test_aBFu1c_C_BFu0ll()
{
  {
    init_simple_test("aBFu1c_C_BFu0ll");
    static STRUCT_IF_C aBFu1c_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_C_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_C_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1c_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_C_BFu0ll, aBFu1c_C_BFu0ll)
//============================================================================



static void Test_aBFu1c_C_BFu0s()
{
  {
    init_simple_test("aBFu1c_C_BFu0s");
    static STRUCT_IF_C aBFu1c_C_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_C_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_C_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1c_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_C_BFu0s, aBFu1c_C_BFu0s)
//============================================================================



static void Test_aBFu1c_D_BFu0c()
{
  {
    init_simple_test("aBFu1c_D_BFu0c");
    static STRUCT_IF_C aBFu1c_D_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1c_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_D_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1c_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_D_BFu0c, aBFu1c_D_BFu0c)
//============================================================================



static void Test_aBFu1c_D_BFu0i()
{
  {
    init_simple_test("aBFu1c_D_BFu0i");
    static STRUCT_IF_C aBFu1c_D_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1c_D_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_D_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1c_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_D_BFu0i, aBFu1c_D_BFu0i)
//============================================================================



static void Test_aBFu1c_D_BFu0ll()
{
  {
    init_simple_test("aBFu1c_D_BFu0ll");
    static STRUCT_IF_C aBFu1c_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1c_D_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_D_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1c_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_D_BFu0ll, aBFu1c_D_BFu0ll)
//============================================================================



static void Test_aBFu1c_D_BFu0s()
{
  {
    init_simple_test("aBFu1c_D_BFu0s");
    static STRUCT_IF_C aBFu1c_D_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1c_D_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_D_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1c_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_D_BFu0s, aBFu1c_D_BFu0s)
//============================================================================



static void Test_aBFu1c_F_BFu0c()
{
  {
    init_simple_test("aBFu1c_F_BFu0c");
    static STRUCT_IF_C aBFu1c_F_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1c_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_F_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1c_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_F_BFu0c, aBFu1c_F_BFu0c)
//============================================================================



static void Test_aBFu1c_F_BFu0i()
{
  {
    init_simple_test("aBFu1c_F_BFu0i");
    static STRUCT_IF_C aBFu1c_F_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_F_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_F_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1c_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_F_BFu0i, aBFu1c_F_BFu0i)
//============================================================================



static void Test_aBFu1c_F_BFu0ll()
{
  {
    init_simple_test("aBFu1c_F_BFu0ll");
    static STRUCT_IF_C aBFu1c_F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_F_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_F_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1c_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_F_BFu0ll, aBFu1c_F_BFu0ll)
//============================================================================



static void Test_aBFu1c_F_BFu0s()
{
  {
    init_simple_test("aBFu1c_F_BFu0s");
    static STRUCT_IF_C aBFu1c_F_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_F_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_F_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1c_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_F_BFu0s, aBFu1c_F_BFu0s)
//============================================================================



static void Test_aBFu1c_I_BFu0c()
{
  {
    init_simple_test("aBFu1c_I_BFu0c");
    static STRUCT_IF_C aBFu1c_I_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1c_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_I_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1c_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_I_BFu0c, aBFu1c_I_BFu0c)
//============================================================================



static void Test_aBFu1c_I_BFu0i()
{
  {
    init_simple_test("aBFu1c_I_BFu0i");
    static STRUCT_IF_C aBFu1c_I_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_I_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_I_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1c_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_I_BFu0i, aBFu1c_I_BFu0i)
//============================================================================



static void Test_aBFu1c_I_BFu0ll()
{
  {
    init_simple_test("aBFu1c_I_BFu0ll");
    static STRUCT_IF_C aBFu1c_I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_I_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_I_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1c_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_I_BFu0ll, aBFu1c_I_BFu0ll)
//============================================================================



static void Test_aBFu1c_I_BFu0s()
{
  {
    init_simple_test("aBFu1c_I_BFu0s");
    static STRUCT_IF_C aBFu1c_I_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_I_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_I_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1c_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_I_BFu0s, aBFu1c_I_BFu0s)
//============================================================================



static void Test_aBFu1c_Ip_BFu0c()
{
  {
    init_simple_test("aBFu1c_Ip_BFu0c");
    static STRUCT_IF_C aBFu1c_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Ip_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1c_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Ip_BFu0c, aBFu1c_Ip_BFu0c)
//============================================================================



static void Test_aBFu1c_Ip_BFu0i()
{
  {
    init_simple_test("aBFu1c_Ip_BFu0i");
    static STRUCT_IF_C aBFu1c_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1c_Ip_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Ip_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1c_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Ip_BFu0i, aBFu1c_Ip_BFu0i)
//============================================================================



static void Test_aBFu1c_Ip_BFu0ll()
{
  {
    init_simple_test("aBFu1c_Ip_BFu0ll");
    static STRUCT_IF_C aBFu1c_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu1c_Ip_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Ip_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1c_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Ip_BFu0ll, aBFu1c_Ip_BFu0ll)
//============================================================================



static void Test_aBFu1c_Ip_BFu0s()
{
  {
    init_simple_test("aBFu1c_Ip_BFu0s");
    static STRUCT_IF_C aBFu1c_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1c_Ip_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Ip_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1c_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Ip_BFu0s, aBFu1c_Ip_BFu0s)
//============================================================================



static void Test_aBFu1c_L_BFu0c()
{
  {
    init_simple_test("aBFu1c_L_BFu0c");
    static STRUCT_IF_C aBFu1c_L_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1c_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_L_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1c_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_L_BFu0c, aBFu1c_L_BFu0c)
//============================================================================



static void Test_aBFu1c_L_BFu0i()
{
  {
    init_simple_test("aBFu1c_L_BFu0i");
    static STRUCT_IF_C aBFu1c_L_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1c_L_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_L_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1c_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_L_BFu0i, aBFu1c_L_BFu0i)
//============================================================================



static void Test_aBFu1c_L_BFu0ll()
{
  {
    init_simple_test("aBFu1c_L_BFu0ll");
    static STRUCT_IF_C aBFu1c_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1c_L_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_L_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1c_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_L_BFu0ll, aBFu1c_L_BFu0ll)
//============================================================================



static void Test_aBFu1c_L_BFu0s()
{
  {
    init_simple_test("aBFu1c_L_BFu0s");
    static STRUCT_IF_C aBFu1c_L_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1c_L_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_L_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1c_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_L_BFu0s, aBFu1c_L_BFu0s)
//============================================================================



static void Test_aBFu1c_S_BFu0c()
{
  {
    init_simple_test("aBFu1c_S_BFu0c");
    static STRUCT_IF_C aBFu1c_S_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1c_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_S_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1c_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_S_BFu0c, aBFu1c_S_BFu0c)
//============================================================================



static void Test_aBFu1c_S_BFu0i()
{
  {
    init_simple_test("aBFu1c_S_BFu0i");
    static STRUCT_IF_C aBFu1c_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_S_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_S_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1c_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_S_BFu0i, aBFu1c_S_BFu0i)
//============================================================================



static void Test_aBFu1c_S_BFu0ll()
{
  {
    init_simple_test("aBFu1c_S_BFu0ll");
    static STRUCT_IF_C aBFu1c_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_S_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_S_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1c_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_S_BFu0ll, aBFu1c_S_BFu0ll)
//============================================================================



static void Test_aBFu1c_S_BFu0s()
{
  {
    init_simple_test("aBFu1c_S_BFu0s");
    static STRUCT_IF_C aBFu1c_S_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_S_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_S_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1c_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_S_BFu0s, aBFu1c_S_BFu0s)
//============================================================================



static void Test_aBFu1c_Uc_BFu0c()
{
  {
    init_simple_test("aBFu1c_Uc_BFu0c");
    static STRUCT_IF_C aBFu1c_Uc_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Uc_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1c_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Uc_BFu0c, aBFu1c_Uc_BFu0c)
//============================================================================



static void Test_aBFu1c_Uc_BFu0i()
{
  {
    init_simple_test("aBFu1c_Uc_BFu0i");
    static STRUCT_IF_C aBFu1c_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_Uc_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Uc_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1c_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Uc_BFu0i, aBFu1c_Uc_BFu0i)
//============================================================================



static void Test_aBFu1c_Uc_BFu0ll()
{
  {
    init_simple_test("aBFu1c_Uc_BFu0ll");
    static STRUCT_IF_C aBFu1c_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_Uc_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Uc_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1c_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Uc_BFu0ll, aBFu1c_Uc_BFu0ll)
//============================================================================



static void Test_aBFu1c_Uc_BFu0s()
{
  {
    init_simple_test("aBFu1c_Uc_BFu0s");
    static STRUCT_IF_C aBFu1c_Uc_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1c_Uc_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Uc_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1c_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Uc_BFu0s, aBFu1c_Uc_BFu0s)
//============================================================================



static void Test_aBFu1c_Ui_BFu0c()
{
  {
    init_simple_test("aBFu1c_Ui_BFu0c");
    static STRUCT_IF_C aBFu1c_Ui_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1c_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Ui_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1c_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Ui_BFu0c, aBFu1c_Ui_BFu0c)
//============================================================================



static void Test_aBFu1c_Ui_BFu0i()
{
  {
    init_simple_test("aBFu1c_Ui_BFu0i");
    static STRUCT_IF_C aBFu1c_Ui_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_Ui_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Ui_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1c_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Ui_BFu0i, aBFu1c_Ui_BFu0i)
//============================================================================



static void Test_aBFu1c_Ui_BFu0ll()
{
  {
    init_simple_test("aBFu1c_Ui_BFu0ll");
    static STRUCT_IF_C aBFu1c_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1c_Ui_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Ui_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1c_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Ui_BFu0ll, aBFu1c_Ui_BFu0ll)
//============================================================================



static void Test_aBFu1c_Ui_BFu0s()
{
  {
    init_simple_test("aBFu1c_Ui_BFu0s");
    static STRUCT_IF_C aBFu1c_Ui_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1c_Ui_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Ui_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1c_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Ui_BFu0s, aBFu1c_Ui_BFu0s)
//============================================================================



static void Test_aBFu1c_Ul_BFu0c()
{
  {
    init_simple_test("aBFu1c_Ul_BFu0c");
    static STRUCT_IF_C aBFu1c_Ul_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1c_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Ul_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1c_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Ul_BFu0c, aBFu1c_Ul_BFu0c)
//============================================================================



static void Test_aBFu1c_Ul_BFu0i()
{
  {
    init_simple_test("aBFu1c_Ul_BFu0i");
    static STRUCT_IF_C aBFu1c_Ul_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1c_Ul_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Ul_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1c_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Ul_BFu0i, aBFu1c_Ul_BFu0i)
//============================================================================



static void Test_aBFu1c_Ul_BFu0ll()
{
  {
    init_simple_test("aBFu1c_Ul_BFu0ll");
    static STRUCT_IF_C aBFu1c_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1c_Ul_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Ul_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1c_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Ul_BFu0ll, aBFu1c_Ul_BFu0ll)
//============================================================================



static void Test_aBFu1c_Ul_BFu0s()
{
  {
    init_simple_test("aBFu1c_Ul_BFu0s");
    static STRUCT_IF_C aBFu1c_Ul_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1c_Ul_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Ul_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1c_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Ul_BFu0s, aBFu1c_Ul_BFu0s)
//============================================================================



static void Test_aBFu1c_Us_BFu0c()
{
  {
    init_simple_test("aBFu1c_Us_BFu0c");
    static STRUCT_IF_C aBFu1c_Us_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1c_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Us_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1c_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Us_BFu0c, aBFu1c_Us_BFu0c)
//============================================================================



static void Test_aBFu1c_Us_BFu0i()
{
  {
    init_simple_test("aBFu1c_Us_BFu0i");
    static STRUCT_IF_C aBFu1c_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_Us_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Us_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1c_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Us_BFu0i, aBFu1c_Us_BFu0i)
//============================================================================



static void Test_aBFu1c_Us_BFu0ll()
{
  {
    init_simple_test("aBFu1c_Us_BFu0ll");
    static STRUCT_IF_C aBFu1c_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1c_Us_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Us_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1c_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Us_BFu0ll, aBFu1c_Us_BFu0ll)
//============================================================================



static void Test_aBFu1c_Us_BFu0s()
{
  {
    init_simple_test("aBFu1c_Us_BFu0s");
    static STRUCT_IF_C aBFu1c_Us_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1c_Us_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Us_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1c_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Us_BFu0s, aBFu1c_Us_BFu0s)
//============================================================================



static void Test_aBFu1c_Vp_BFu0c()
{
  {
    init_simple_test("aBFu1c_Vp_BFu0c");
    static STRUCT_IF_C aBFu1c_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1c_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Vp_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1c_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Vp_BFu0c, aBFu1c_Vp_BFu0c)
//============================================================================



static void Test_aBFu1c_Vp_BFu0i()
{
  {
    init_simple_test("aBFu1c_Vp_BFu0i");
    static STRUCT_IF_C aBFu1c_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1c_Vp_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Vp_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1c_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Vp_BFu0i, aBFu1c_Vp_BFu0i)
//============================================================================



static void Test_aBFu1c_Vp_BFu0ll()
{
  {
    init_simple_test("aBFu1c_Vp_BFu0ll");
    static STRUCT_IF_C aBFu1c_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu1c_Vp_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Vp_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1c_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Vp_BFu0ll, aBFu1c_Vp_BFu0ll)
//============================================================================



static void Test_aBFu1c_Vp_BFu0s()
{
  {
    init_simple_test("aBFu1c_Vp_BFu0s");
    static STRUCT_IF_C aBFu1c_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1c_Vp_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1c_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1c_Vp_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1c_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1c_Vp_BFu0s, aBFu1c_Vp_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c, aBFu1i_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1i_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu0c, aBFu1i_BFu0c_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu0i, aBFu1i_BFu0c_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu0ll, aBFu1i_BFu0c_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu0c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu0s, aBFu1i_BFu0c_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu15i()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu15i");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu15i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, 1, "aBFu1i_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1i_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu15i, aBFu1i_BFu0c_BFu15i)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu15ll()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu15ll");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, 1, "aBFu1i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1i_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu15ll, aBFu1i_BFu0c_BFu15ll)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu15s()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu15s");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu15s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, 1, "aBFu1i_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1i_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu15s, aBFu1i_BFu0c_BFu15s)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu16i()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu16i");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1i_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, 1, "aBFu1i_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1i_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu16i, aBFu1i_BFu0c_BFu16i)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu16ll()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu16ll");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1i_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, 1, "aBFu1i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1i_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu16ll, aBFu1i_BFu0c_BFu16ll)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu16s()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu16s");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1i_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, 1, "aBFu1i_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1i_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu16s, aBFu1i_BFu0c_BFu16s)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu17i()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu17i");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu17i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 17, 1, "aBFu1i_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1i_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu17i, aBFu1i_BFu0c_BFu17i)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu17ll()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu17ll");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 17, 1, "aBFu1i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1i_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu17ll, aBFu1i_BFu0c_BFu17ll)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu1c()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu1c");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu1c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 1, 1, "aBFu1i_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu1c, aBFu1i_BFu0c_BFu1c)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu1i()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu1i");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu1i lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 1, 1, "aBFu1i_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu1i, aBFu1i_BFu0c_BFu1i)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu1ll()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu1ll");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 1, 1, "aBFu1i_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu1ll, aBFu1i_BFu0c_BFu1ll)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu1s()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu1s");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu1s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 1, 1, "aBFu1i_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu1s, aBFu1i_BFu0c_BFu1s)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu31i()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu31i");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu31i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 31, 1, "aBFu1i_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1i_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu31i, aBFu1i_BFu0c_BFu31i)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu31ll()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu31ll");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 31, 1, "aBFu1i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1i_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu31ll, aBFu1i_BFu0c_BFu31ll)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu32i()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu32i");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1i_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 32, 1, "aBFu1i_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1i_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu32i, aBFu1i_BFu0c_BFu32i)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu32ll()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu32ll");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1i_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 32, 1, "aBFu1i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1i_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu32ll, aBFu1i_BFu0c_BFu32ll)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu33()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu33");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu33 lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 33, 1, "aBFu1i_BFu0c_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu1i_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu33, aBFu1i_BFu0c_BFu33)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu7c()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu7c");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu7c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, 1, "aBFu1i_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1i_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu7c, aBFu1i_BFu0c_BFu7c)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu7i()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu7i");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu7i lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, 1, "aBFu1i_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1i_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu7i, aBFu1i_BFu0c_BFu7i)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu7ll()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu7ll");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, 1, "aBFu1i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1i_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu7ll, aBFu1i_BFu0c_BFu7ll)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu7s()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu7s");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu7s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, 1, "aBFu1i_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1i_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu7s, aBFu1i_BFu0c_BFu7s)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu8c()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu8c");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, 1, "aBFu1i_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1i_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu8c, aBFu1i_BFu0c_BFu8c)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu8i()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu8i");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, 1, "aBFu1i_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1i_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu8i, aBFu1i_BFu0c_BFu8i)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu8ll()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu8ll");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, 1, "aBFu1i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1i_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu8ll, aBFu1i_BFu0c_BFu8ll)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu8s()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu8s");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, 1, "aBFu1i_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1i_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu8s, aBFu1i_BFu0c_BFu8s)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu9i()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu9i");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu9i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, 1, "aBFu1i_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1i_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu9i, aBFu1i_BFu0c_BFu9i)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu9ll()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu9ll");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, 1, "aBFu1i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1i_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu9ll, aBFu1i_BFu0c_BFu9ll)
//============================================================================



static void Test_aBFu1i_BFu0c_BFu9s()
{
  {
    init_simple_test("aBFu1i_BFu0c_BFu9s");
    static STRUCT_IF_C aBFu1i_BFu0c_BFu9s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, 1, "aBFu1i_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1i_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_BFu9s, aBFu1i_BFu0c_BFu9s)
//============================================================================



static void Test_aBFu1i_BFu0c_C()
{
  {
    init_simple_test("aBFu1i_BFu0c_C");
    static STRUCT_IF_C aBFu1i_BFu0c_C lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_C");
    check_field_offset(lv, v2, 1, "aBFu1i_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_C, aBFu1i_BFu0c_C)
//============================================================================



static void Test_aBFu1i_BFu0c_D()
{
  {
    init_simple_test("aBFu1i_BFu0c_D");
    static STRUCT_IF_C aBFu1i_BFu0c_D lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1i_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_D");
    check_field_offset(lv, v2, 1, "aBFu1i_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_D, aBFu1i_BFu0c_D)
//============================================================================



static void Test_aBFu1i_BFu0c_F()
{
  {
    init_simple_test("aBFu1i_BFu0c_F");
    static STRUCT_IF_C aBFu1i_BFu0c_F lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1i_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_F");
    check_field_offset(lv, v2, 1, "aBFu1i_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_F, aBFu1i_BFu0c_F)
//============================================================================



static void Test_aBFu1i_BFu0c_I()
{
  {
    init_simple_test("aBFu1i_BFu0c_I");
    static STRUCT_IF_C aBFu1i_BFu0c_I lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1i_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_I");
    check_field_offset(lv, v2, 1, "aBFu1i_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_I, aBFu1i_BFu0c_I)
//============================================================================



static void Test_aBFu1i_BFu0c_Ip()
{
  {
    init_simple_test("aBFu1i_BFu0c_Ip");
    static STRUCT_IF_C aBFu1i_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_Ip");
    check_field_offset(lv, v2, 1, "aBFu1i_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_Ip, aBFu1i_BFu0c_Ip)
//============================================================================



static void Test_aBFu1i_BFu0c_L()
{
  {
    init_simple_test("aBFu1i_BFu0c_L");
    static STRUCT_IF_C aBFu1i_BFu0c_L lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1i_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_L");
    check_field_offset(lv, v2, 1, "aBFu1i_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_L, aBFu1i_BFu0c_L)
//============================================================================



static void Test_aBFu1i_BFu0c_S()
{
  {
    init_simple_test("aBFu1i_BFu0c_S");
    static STRUCT_IF_C aBFu1i_BFu0c_S lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1i_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_S");
    check_field_offset(lv, v2, 1, "aBFu1i_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_S, aBFu1i_BFu0c_S)
//============================================================================



static void Test_aBFu1i_BFu0c_Uc()
{
  {
    init_simple_test("aBFu1i_BFu0c_Uc");
    static STRUCT_IF_C aBFu1i_BFu0c_Uc lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_Uc");
    check_field_offset(lv, v2, 1, "aBFu1i_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_Uc, aBFu1i_BFu0c_Uc)
//============================================================================



static void Test_aBFu1i_BFu0c_Ui()
{
  {
    init_simple_test("aBFu1i_BFu0c_Ui");
    static STRUCT_IF_C aBFu1i_BFu0c_Ui lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1i_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_Ui");
    check_field_offset(lv, v2, 1, "aBFu1i_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_Ui, aBFu1i_BFu0c_Ui)
//============================================================================



static void Test_aBFu1i_BFu0c_Ul()
{
  {
    init_simple_test("aBFu1i_BFu0c_Ul");
    static STRUCT_IF_C aBFu1i_BFu0c_Ul lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1i_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_Ul");
    check_field_offset(lv, v2, 1, "aBFu1i_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_Ul, aBFu1i_BFu0c_Ul)
//============================================================================



static void Test_aBFu1i_BFu0c_Us()
{
  {
    init_simple_test("aBFu1i_BFu0c_Us");
    static STRUCT_IF_C aBFu1i_BFu0c_Us lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1i_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_Us");
    check_field_offset(lv, v2, 1, "aBFu1i_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_Us, aBFu1i_BFu0c_Us)
//============================================================================



static void Test_aBFu1i_BFu0c_Vp()
{
  {
    init_simple_test("aBFu1i_BFu0c_Vp");
    static STRUCT_IF_C aBFu1i_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0c_Vp");
    check_field_offset(lv, v2, 1, "aBFu1i_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0c_Vp, aBFu1i_BFu0c_Vp)
//============================================================================



static void Test_aBFu1i_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i, aBFu1i_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu0c, aBFu1i_BFu0i_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu0i, aBFu1i_BFu0i_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu0ll, aBFu1i_BFu0i_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu0s, aBFu1i_BFu0i_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu15i()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu15i");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu1i_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1i_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu15i, aBFu1i_BFu0i_BFu15i)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu15ll()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu15ll");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu1i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1i_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu15ll, aBFu1i_BFu0i_BFu15ll)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu15s()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu15s");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu1i_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1i_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu15s, aBFu1i_BFu0i_BFu15s)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu16i()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu16i");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu1i_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1i_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu16i, aBFu1i_BFu0i_BFu16i)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu16ll()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu16ll");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu1i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1i_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu16ll, aBFu1i_BFu0i_BFu16ll)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu16s()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu16s");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu1i_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1i_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu16s, aBFu1i_BFu0i_BFu16s)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu17i()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu17i");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu1i_BFu0i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu1i_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1i_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu17i, aBFu1i_BFu0i_BFu17i)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu17ll()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu17ll");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu1i_BFu0i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu1i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1i_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu17ll, aBFu1i_BFu0i_BFu17ll)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu1c()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu1c");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu1i_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu1c, aBFu1i_BFu0i_BFu1c)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu1i()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu1i");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu1i_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu1i, aBFu1i_BFu0i_BFu1i)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu1ll()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu1ll");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu1i_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu1ll, aBFu1i_BFu0i_BFu1ll)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu1s()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu1s");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu1i_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu1s, aBFu1i_BFu0i_BFu1s)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu31i()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu31i");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu31i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_BFu0i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu1i_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1i_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu31i, aBFu1i_BFu0i_BFu31i)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu31ll()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu31ll");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_BFu0i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu1i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1i_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu31ll, aBFu1i_BFu0i_BFu31ll)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu32i()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu32i");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu32i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_BFu0i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu1i_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1i_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu32i, aBFu1i_BFu0i_BFu32i)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu32ll()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu32ll");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_BFu0i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu1i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1i_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu32ll, aBFu1i_BFu0i_BFu32ll)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu33()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu33");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(aBFu1i_BFu0i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, 1, "aBFu1i_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu1i_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu33, aBFu1i_BFu0i_BFu33)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu7c()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu7c");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu1i_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1i_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu7c, aBFu1i_BFu0i_BFu7c)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu7i()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu7i");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu1i_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1i_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu7i, aBFu1i_BFu0i_BFu7i)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu7ll()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu7ll");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu1i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1i_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu7ll, aBFu1i_BFu0i_BFu7ll)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu7s()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu7s");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu1i_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1i_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu7s, aBFu1i_BFu0i_BFu7s)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu8c()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu8c");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu1i_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1i_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu8c, aBFu1i_BFu0i_BFu8c)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu8i()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu8i");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu1i_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1i_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu8i, aBFu1i_BFu0i_BFu8i)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu8ll()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu8ll");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu1i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1i_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu8ll, aBFu1i_BFu0i_BFu8ll)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu8s()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu8s");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu1i_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1i_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu8s, aBFu1i_BFu0i_BFu8s)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu9i()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu9i");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu1i_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1i_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu9i, aBFu1i_BFu0i_BFu9i)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu9ll()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu9ll");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu1i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1i_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu9ll, aBFu1i_BFu0i_BFu9ll)
//============================================================================



static void Test_aBFu1i_BFu0i_BFu9s()
{
  {
    init_simple_test("aBFu1i_BFu0i_BFu9s");
    static STRUCT_IF_C aBFu1i_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu1i_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1i_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_BFu9s, aBFu1i_BFu0i_BFu9s)
//============================================================================



static void Test_aBFu1i_BFu0i_C()
{
  {
    init_simple_test("aBFu1i_BFu0i_C");
    static STRUCT_IF_C aBFu1i_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_C");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1i_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_C, aBFu1i_BFu0i_C)
//============================================================================



static void Test_aBFu1i_BFu0i_D()
{
  {
    init_simple_test("aBFu1i_BFu0i_D");
    static STRUCT_IF_C aBFu1i_BFu0i_D lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1i_BFu0i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_D");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1i_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_D, aBFu1i_BFu0i_D)
//============================================================================



static void Test_aBFu1i_BFu0i_F()
{
  {
    init_simple_test("aBFu1i_BFu0i_F");
    static STRUCT_IF_C aBFu1i_BFu0i_F lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_BFu0i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_F");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1i_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_F, aBFu1i_BFu0i_F)
//============================================================================



static void Test_aBFu1i_BFu0i_I()
{
  {
    init_simple_test("aBFu1i_BFu0i_I");
    static STRUCT_IF_C aBFu1i_BFu0i_I lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_BFu0i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_I");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1i_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_I, aBFu1i_BFu0i_I)
//============================================================================



static void Test_aBFu1i_BFu0i_Ip()
{
  {
    init_simple_test("aBFu1i_BFu0i_Ip");
    static STRUCT_IF_C aBFu1i_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1i_BFu0i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_Ip");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1i_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_Ip, aBFu1i_BFu0i_Ip)
//============================================================================



static void Test_aBFu1i_BFu0i_L()
{
  {
    init_simple_test("aBFu1i_BFu0i_L");
    static STRUCT_IF_C aBFu1i_BFu0i_L lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1i_BFu0i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_L");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1i_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_L, aBFu1i_BFu0i_L)
//============================================================================



static void Test_aBFu1i_BFu0i_S()
{
  {
    init_simple_test("aBFu1i_BFu0i_S");
    static STRUCT_IF_C aBFu1i_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_S");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1i_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_S, aBFu1i_BFu0i_S)
//============================================================================



static void Test_aBFu1i_BFu0i_Uc()
{
  {
    init_simple_test("aBFu1i_BFu0i_Uc");
    static STRUCT_IF_C aBFu1i_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_Uc");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1i_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_Uc, aBFu1i_BFu0i_Uc)
//============================================================================



static void Test_aBFu1i_BFu0i_Ui()
{
  {
    init_simple_test("aBFu1i_BFu0i_Ui");
    static STRUCT_IF_C aBFu1i_BFu0i_Ui lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_BFu0i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_Ui");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1i_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_Ui, aBFu1i_BFu0i_Ui)
//============================================================================



static void Test_aBFu1i_BFu0i_Ul()
{
  {
    init_simple_test("aBFu1i_BFu0i_Ul");
    static STRUCT_IF_C aBFu1i_BFu0i_Ul lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1i_BFu0i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_Ul");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1i_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_Ul, aBFu1i_BFu0i_Ul)
//============================================================================



static void Test_aBFu1i_BFu0i_Us()
{
  {
    init_simple_test("aBFu1i_BFu0i_Us");
    static STRUCT_IF_C aBFu1i_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_Us");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1i_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_Us, aBFu1i_BFu0i_Us)
//============================================================================



static void Test_aBFu1i_BFu0i_Vp()
{
  {
    init_simple_test("aBFu1i_BFu0i_Vp");
    static STRUCT_IF_C aBFu1i_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1i_BFu0i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0i_Vp");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1i_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0i_Vp, aBFu1i_BFu0i_Vp)
//============================================================================



static void Test_aBFu1i_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll, aBFu1i_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu0c, aBFu1i_BFu0ll_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu0i, aBFu1i_BFu0ll_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu0ll, aBFu1i_BFu0ll_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu0s, aBFu1i_BFu0ll_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu15i()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu15i");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1i_BFu0ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu1i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1i_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu15i, aBFu1i_BFu0ll_BFu15i)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu15ll()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu15ll");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1i_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu1i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1i_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu15ll, aBFu1i_BFu0ll_BFu15ll)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu15s()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu15s");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1i_BFu0ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu1i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1i_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu15s, aBFu1i_BFu0ll_BFu15s)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu16i()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu16i");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1i_BFu0ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu1i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1i_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu16i, aBFu1i_BFu0ll_BFu16i)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu16ll()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu16ll");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1i_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu1i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1i_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu16ll, aBFu1i_BFu0ll_BFu16ll)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu16s()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu16s");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1i_BFu0ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu1i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1i_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu16s, aBFu1i_BFu0ll_BFu16s)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu17i()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu17i");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu1i_BFu0ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, 1, "aBFu1i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1i_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu17i, aBFu1i_BFu0ll_BFu17i)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu17ll()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu17ll");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu1i_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, 1, "aBFu1i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1i_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu17ll, aBFu1i_BFu0ll_BFu17ll)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu1c()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu1c");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_BFu0ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu1i_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu1c, aBFu1i_BFu0ll_BFu1c)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu1i()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu1i");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_BFu0ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu1i_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu1i, aBFu1i_BFu0ll_BFu1i)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu1ll()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu1ll");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu1i_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu1ll, aBFu1i_BFu0ll_BFu1ll)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu1s()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu1s");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_BFu0ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu1i_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu1s, aBFu1i_BFu0ll_BFu1s)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu31i()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu31i");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1i_BFu0ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, 1, "aBFu1i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1i_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu31i, aBFu1i_BFu0ll_BFu31i)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu31ll()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu31ll");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1i_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, 1, "aBFu1i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1i_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu31ll, aBFu1i_BFu0ll_BFu31ll)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu32i()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu32i");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1i_BFu0ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, 1, "aBFu1i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1i_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu32i, aBFu1i_BFu0ll_BFu32i)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu32ll()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu32ll");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1i_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, 1, "aBFu1i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1i_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu32ll, aBFu1i_BFu0ll_BFu32ll)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu33()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu33");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aBFu1i_BFu0ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 33, 1, "aBFu1i_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu1i_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu33, aBFu1i_BFu0ll_BFu33)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu7c()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu7c");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_BFu0ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu1i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1i_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu7c, aBFu1i_BFu0ll_BFu7c)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu7i()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu7i");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_BFu0ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu1i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1i_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu7i, aBFu1i_BFu0ll_BFu7i)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu7ll()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu7ll");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu1i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1i_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu7ll, aBFu1i_BFu0ll_BFu7ll)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu7s()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu7s");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_BFu0ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu1i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1i_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu7s, aBFu1i_BFu0ll_BFu7s)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu8c()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu8c");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_BFu0ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu1i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1i_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu8c, aBFu1i_BFu0ll_BFu8c)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu8i()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu8i");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_BFu0ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu1i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1i_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu8i, aBFu1i_BFu0ll_BFu8i)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu8ll()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu8ll");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu1i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1i_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu8ll, aBFu1i_BFu0ll_BFu8ll)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu8s()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu8s");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_BFu0ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu1i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1i_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu8s, aBFu1i_BFu0ll_BFu8s)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu9i()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu9i");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1i_BFu0ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu1i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1i_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu9i, aBFu1i_BFu0ll_BFu9i)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu9ll()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu9ll");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1i_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu1i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1i_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu9ll, aBFu1i_BFu0ll_BFu9ll)
//============================================================================



static void Test_aBFu1i_BFu0ll_BFu9s()
{
  {
    init_simple_test("aBFu1i_BFu0ll_BFu9s");
    static STRUCT_IF_C aBFu1i_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1i_BFu0ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu1i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1i_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_BFu9s, aBFu1i_BFu0ll_BFu9s)
//============================================================================



static void Test_aBFu1i_BFu0ll_C()
{
  {
    init_simple_test("aBFu1i_BFu0ll_C");
    static STRUCT_IF_C aBFu1i_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_BFu0ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1i_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_C, aBFu1i_BFu0ll_C)
//============================================================================



static void Test_aBFu1i_BFu0ll_D()
{
  {
    init_simple_test("aBFu1i_BFu0ll_D");
    static STRUCT_IF_C aBFu1i_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1i_BFu0ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1i_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_D, aBFu1i_BFu0ll_D)
//============================================================================



static void Test_aBFu1i_BFu0ll_F()
{
  {
    init_simple_test("aBFu1i_BFu0ll_F");
    static STRUCT_IF_C aBFu1i_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1i_BFu0ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1i_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_F, aBFu1i_BFu0ll_F)
//============================================================================



static void Test_aBFu1i_BFu0ll_I()
{
  {
    init_simple_test("aBFu1i_BFu0ll_I");
    static STRUCT_IF_C aBFu1i_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1i_BFu0ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1i_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_I, aBFu1i_BFu0ll_I)
//============================================================================



static void Test_aBFu1i_BFu0ll_Ip()
{
  {
    init_simple_test("aBFu1i_BFu0ll_Ip");
    static STRUCT_IF_C aBFu1i_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu1i_BFu0ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1i_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_Ip, aBFu1i_BFu0ll_Ip)
//============================================================================



static void Test_aBFu1i_BFu0ll_L()
{
  {
    init_simple_test("aBFu1i_BFu0ll_L");
    static STRUCT_IF_C aBFu1i_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1i_BFu0ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1i_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_L, aBFu1i_BFu0ll_L)
//============================================================================



static void Test_aBFu1i_BFu0ll_S()
{
  {
    init_simple_test("aBFu1i_BFu0ll_S");
    static STRUCT_IF_C aBFu1i_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1i_BFu0ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1i_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_S, aBFu1i_BFu0ll_S)
//============================================================================



static void Test_aBFu1i_BFu0ll_Uc()
{
  {
    init_simple_test("aBFu1i_BFu0ll_Uc");
    static STRUCT_IF_C aBFu1i_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_BFu0ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1i_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_Uc, aBFu1i_BFu0ll_Uc)
//============================================================================



static void Test_aBFu1i_BFu0ll_Ui()
{
  {
    init_simple_test("aBFu1i_BFu0ll_Ui");
    static STRUCT_IF_C aBFu1i_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1i_BFu0ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1i_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_Ui, aBFu1i_BFu0ll_Ui)
//============================================================================



static void Test_aBFu1i_BFu0ll_Ul()
{
  {
    init_simple_test("aBFu1i_BFu0ll_Ul");
    static STRUCT_IF_C aBFu1i_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1i_BFu0ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1i_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_Ul, aBFu1i_BFu0ll_Ul)
//============================================================================



static void Test_aBFu1i_BFu0ll_Us()
{
  {
    init_simple_test("aBFu1i_BFu0ll_Us");
    static STRUCT_IF_C aBFu1i_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1i_BFu0ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1i_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_Us, aBFu1i_BFu0ll_Us)
//============================================================================



static void Test_aBFu1i_BFu0ll_Vp()
{
  {
    init_simple_test("aBFu1i_BFu0ll_Vp");
    static STRUCT_IF_C aBFu1i_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu1i_BFu0ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1i_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0ll_Vp, aBFu1i_BFu0ll_Vp)
//============================================================================



static void Test_aBFu1i_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s, aBFu1i_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu0s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu0c, aBFu1i_BFu0s_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu0i, aBFu1i_BFu0s_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu0ll, aBFu1i_BFu0s_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu0s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu0s, aBFu1i_BFu0s_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu15i()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu15i");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu15i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, 1, "aBFu1i_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1i_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu15i, aBFu1i_BFu0s_BFu15i)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu15ll()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu15ll");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, 1, "aBFu1i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1i_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu15ll, aBFu1i_BFu0s_BFu15ll)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu15s()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu15s");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu15s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, 1, "aBFu1i_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1i_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu15s, aBFu1i_BFu0s_BFu15s)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu16i()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu16i");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu16i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, 1, "aBFu1i_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1i_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu16i, aBFu1i_BFu0s_BFu16i)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu16ll()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu16ll");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, 1, "aBFu1i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1i_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu16ll, aBFu1i_BFu0s_BFu16ll)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu16s()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu16s");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu16s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, 1, "aBFu1i_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1i_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu16s, aBFu1i_BFu0s_BFu16s)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu17i()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu17i");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 17, 1, "aBFu1i_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1i_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu17i, aBFu1i_BFu0s_BFu17i)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu17ll()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu17ll");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1i_BFu0s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 17, 1, "aBFu1i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1i_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu17ll, aBFu1i_BFu0s_BFu17ll)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu1c()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu1c");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 1, 1, "aBFu1i_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu1c, aBFu1i_BFu0s_BFu1c)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu1i()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu1i");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 1, 1, "aBFu1i_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu1i, aBFu1i_BFu0s_BFu1i)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu1ll()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu1ll");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 1, 1, "aBFu1i_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu1ll, aBFu1i_BFu0s_BFu1ll)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu1s()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu1s");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 1, 1, "aBFu1i_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu1s, aBFu1i_BFu0s_BFu1s)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu31i()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu31i");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu31i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 31, 1, "aBFu1i_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1i_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu31i, aBFu1i_BFu0s_BFu31i)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu31ll()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu31ll");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 31, 1, "aBFu1i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1i_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu31ll, aBFu1i_BFu0s_BFu31ll)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu32i()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu32i");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu32i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 32, 1, "aBFu1i_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1i_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu32i, aBFu1i_BFu0s_BFu32i)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu32ll()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu32ll");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 32, 1, "aBFu1i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1i_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu32ll, aBFu1i_BFu0s_BFu32ll)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu33()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu33");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu1i_BFu0s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 33, 1, "aBFu1i_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu1i_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu33, aBFu1i_BFu0s_BFu33)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu7c()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu7c");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, 1, "aBFu1i_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1i_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu7c, aBFu1i_BFu0s_BFu7c)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu7i()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu7i");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, 1, "aBFu1i_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1i_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu7i, aBFu1i_BFu0s_BFu7i)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu7ll()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu7ll");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, 1, "aBFu1i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1i_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu7ll, aBFu1i_BFu0s_BFu7ll)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu7s()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu7s");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, 1, "aBFu1i_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1i_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu7s, aBFu1i_BFu0s_BFu7s)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu8c()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu8c");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, 1, "aBFu1i_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1i_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu8c, aBFu1i_BFu0s_BFu8c)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu8i()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu8i");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, 1, "aBFu1i_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1i_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu8i, aBFu1i_BFu0s_BFu8i)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu8ll()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu8ll");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, 1, "aBFu1i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1i_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu8ll, aBFu1i_BFu0s_BFu8ll)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu8s()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu8s");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, 1, "aBFu1i_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1i_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu8s, aBFu1i_BFu0s_BFu8s)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu9i()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu9i");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu9i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, 1, "aBFu1i_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1i_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu9i, aBFu1i_BFu0s_BFu9i)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu9ll()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu9ll");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, 1, "aBFu1i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1i_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu9ll, aBFu1i_BFu0s_BFu9ll)
//============================================================================



static void Test_aBFu1i_BFu0s_BFu9s()
{
  {
    init_simple_test("aBFu1i_BFu0s_BFu9s");
    static STRUCT_IF_C aBFu1i_BFu0s_BFu9s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, 1, "aBFu1i_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1i_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_BFu9s, aBFu1i_BFu0s_BFu9s)
//============================================================================



static void Test_aBFu1i_BFu0s_C()
{
  {
    init_simple_test("aBFu1i_BFu0s_C");
    static STRUCT_IF_C aBFu1i_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_C");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1i_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_C, aBFu1i_BFu0s_C)
//============================================================================



static void Test_aBFu1i_BFu0s_D()
{
  {
    init_simple_test("aBFu1i_BFu0s_D");
    static STRUCT_IF_C aBFu1i_BFu0s_D lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1i_BFu0s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_D");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1i_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_D, aBFu1i_BFu0s_D)
//============================================================================



static void Test_aBFu1i_BFu0s_F()
{
  {
    init_simple_test("aBFu1i_BFu0s_F");
    static STRUCT_IF_C aBFu1i_BFu0s_F lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_F");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1i_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_F, aBFu1i_BFu0s_F)
//============================================================================



static void Test_aBFu1i_BFu0s_I()
{
  {
    init_simple_test("aBFu1i_BFu0s_I");
    static STRUCT_IF_C aBFu1i_BFu0s_I lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_I");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1i_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_I, aBFu1i_BFu0s_I)
//============================================================================



static void Test_aBFu1i_BFu0s_Ip()
{
  {
    init_simple_test("aBFu1i_BFu0s_Ip");
    static STRUCT_IF_C aBFu1i_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1i_BFu0s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_Ip");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1i_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_Ip, aBFu1i_BFu0s_Ip)
//============================================================================



static void Test_aBFu1i_BFu0s_L()
{
  {
    init_simple_test("aBFu1i_BFu0s_L");
    static STRUCT_IF_C aBFu1i_BFu0s_L lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1i_BFu0s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_L");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1i_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_L, aBFu1i_BFu0s_L)
//============================================================================



static void Test_aBFu1i_BFu0s_S()
{
  {
    init_simple_test("aBFu1i_BFu0s_S");
    static STRUCT_IF_C aBFu1i_BFu0s_S lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_S");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1i_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_S, aBFu1i_BFu0s_S)
//============================================================================



static void Test_aBFu1i_BFu0s_Uc()
{
  {
    init_simple_test("aBFu1i_BFu0s_Uc");
    static STRUCT_IF_C aBFu1i_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1i_BFu0s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_Uc");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1i_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_Uc, aBFu1i_BFu0s_Uc)
//============================================================================



static void Test_aBFu1i_BFu0s_Ui()
{
  {
    init_simple_test("aBFu1i_BFu0s_Ui");
    static STRUCT_IF_C aBFu1i_BFu0s_Ui lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu0s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_Ui");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1i_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_Ui, aBFu1i_BFu0s_Ui)
//============================================================================



static void Test_aBFu1i_BFu0s_Ul()
{
  {
    init_simple_test("aBFu1i_BFu0s_Ul");
    static STRUCT_IF_C aBFu1i_BFu0s_Ul lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1i_BFu0s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_Ul");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1i_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_Ul, aBFu1i_BFu0s_Ul)
//============================================================================



static void Test_aBFu1i_BFu0s_Us()
{
  {
    init_simple_test("aBFu1i_BFu0s_Us");
    static STRUCT_IF_C aBFu1i_BFu0s_Us lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu0s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_Us");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1i_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_Us, aBFu1i_BFu0s_Us)
//============================================================================



static void Test_aBFu1i_BFu0s_Vp()
{
  {
    init_simple_test("aBFu1i_BFu0s_Vp");
    static STRUCT_IF_C aBFu1i_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1i_BFu0s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu0s_Vp");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1i_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu0s_Vp, aBFu1i_BFu0s_Vp)
//============================================================================



static void Test_aBFu1i_BFu15i_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu15i_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu15i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1i_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1i_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu15i_BFu0c, aBFu1i_BFu15i_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu15i_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu15i_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu15i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1i_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1i_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu15i_BFu0i, aBFu1i_BFu15i_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu15i_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu15i_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu15i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1i_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu15i_BFu0ll, aBFu1i_BFu15i_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu15i_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu15i_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu15i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu15i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1i_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1i_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu15i_BFu0s, aBFu1i_BFu15i_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu15ll_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu15ll_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1i_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu15ll_BFu0c, aBFu1i_BFu15ll_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu15ll_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu15ll_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu15ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1i_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu15ll_BFu0i, aBFu1i_BFu15ll_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu15ll_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu15ll_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1i_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu15ll_BFu0ll, aBFu1i_BFu15ll_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu15ll_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu15ll_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu15ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1i_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu15ll_BFu0s, aBFu1i_BFu15ll_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu15s_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu15s_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu15s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1i_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1i_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu15s_BFu0c, aBFu1i_BFu15s_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu15s_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu15s_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu15s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1i_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1i_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu15s_BFu0i, aBFu1i_BFu15s_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu15s_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu15s_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu15s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1i_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu15s_BFu0ll, aBFu1i_BFu15s_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu15s_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu15s_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu15s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu15s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1i_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1i_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu15s_BFu0s, aBFu1i_BFu15s_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu16i_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu16i_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu16i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1i_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1i_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1i_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu16i_BFu0c, aBFu1i_BFu16i_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu16i_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu16i_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu16i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1i_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1i_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu16i_BFu0i, aBFu1i_BFu16i_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu16i_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu16i_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu16i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1i_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu16i_BFu0ll, aBFu1i_BFu16i_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu16i_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu16i_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu16i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu16i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1i_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1i_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu16i_BFu0s, aBFu1i_BFu16i_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu16ll_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu16ll_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1i_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1i_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu16ll_BFu0c, aBFu1i_BFu16ll_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu16ll_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu16ll_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu16ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1i_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu16ll_BFu0i, aBFu1i_BFu16ll_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu16ll_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu16ll_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1i_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu16ll_BFu0ll, aBFu1i_BFu16ll_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu16ll_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu16ll_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu16ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu16ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1i_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu16ll_BFu0s, aBFu1i_BFu16ll_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu16s_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu16s_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu16s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1i_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1i_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1i_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu16s_BFu0c, aBFu1i_BFu16s_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu16s_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu16s_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu16s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1i_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1i_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu16s_BFu0i, aBFu1i_BFu16s_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu16s_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu16s_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu16s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1i_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu16s_BFu0ll, aBFu1i_BFu16s_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu16s_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu16s_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu16s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu16s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1i_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1i_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu16s_BFu0s, aBFu1i_BFu16s_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu17i_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu17i_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu17i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1i_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1i_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1i_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu17i_BFu0c, aBFu1i_BFu17i_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu17i_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu17i_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu17i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1i_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1i_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu17i_BFu0i, aBFu1i_BFu17i_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu17i_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu17i_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu17i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1i_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu17i_BFu0ll, aBFu1i_BFu17i_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu17i_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu17i_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu17i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1i_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1i_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu17i_BFu0s, aBFu1i_BFu17i_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu17ll_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu17ll_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1i_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1i_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu17ll_BFu0c, aBFu1i_BFu17ll_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu17ll_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu17ll_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu17ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1i_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu17ll_BFu0i, aBFu1i_BFu17ll_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu17ll_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu17ll_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1i_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu17ll_BFu0ll, aBFu1i_BFu17ll_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu17ll_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu17ll_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu17ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1i_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu17ll_BFu0s, aBFu1i_BFu17ll_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu1c_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu1c_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu1c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1i_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1i_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu1c_BFu0c, aBFu1i_BFu1c_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu1c_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu1c_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu1c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1i_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu1c_BFu0i, aBFu1i_BFu1c_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu1c_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu1c_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu1c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1i_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu1c_BFu0ll, aBFu1i_BFu1c_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu1c_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu1c_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu1c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1i_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu1c_BFu0s, aBFu1i_BFu1c_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu1i_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu1i_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu1i_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1i_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1i_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu1i_BFu0c, aBFu1i_BFu1i_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu1i_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu1i_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu1i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1i_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu1i_BFu0i, aBFu1i_BFu1i_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu1i_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu1i_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu1i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1i_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu1i_BFu0ll, aBFu1i_BFu1i_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu1i_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu1i_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu1i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1i_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu1i_BFu0s, aBFu1i_BFu1i_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu1ll_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu1ll_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1i_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1i_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu1ll_BFu0c, aBFu1i_BFu1ll_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu1ll_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu1ll_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu1ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1i_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu1ll_BFu0i, aBFu1i_BFu1ll_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu1ll_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu1ll_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1i_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu1ll_BFu0ll, aBFu1i_BFu1ll_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu1ll_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu1ll_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu1ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1i_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu1ll_BFu0s, aBFu1i_BFu1ll_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu1s_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu1s_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu1s_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1i_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1i_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu1s_BFu0c, aBFu1i_BFu1s_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu1s_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu1s_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu1s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1i_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu1s_BFu0i, aBFu1i_BFu1s_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu1s_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu1s_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu1s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1i_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu1s_BFu0ll, aBFu1i_BFu1s_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu1s_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu1s_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu1s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1i_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu1s_BFu0s, aBFu1i_BFu1s_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu31i_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu31i_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu31i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1i_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1i_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1i_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu31i_BFu0c, aBFu1i_BFu31i_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu31i_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu31i_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu31i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1i_BFu31i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1i_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1i_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu31i_BFu0i, aBFu1i_BFu31i_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu31i_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu31i_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu31i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1i_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu31i_BFu0ll, aBFu1i_BFu31i_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu31i_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu31i_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu31i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1i_BFu31i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1i_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1i_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu31i_BFu0s, aBFu1i_BFu31i_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu31ll_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu31ll_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1i_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1i_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu31ll_BFu0c, aBFu1i_BFu31ll_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu31ll_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu31ll_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1i_BFu31ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1i_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu31ll_BFu0i, aBFu1i_BFu31ll_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu31ll_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu31ll_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1i_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu31ll_BFu0ll, aBFu1i_BFu31ll_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu31ll_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu31ll_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1i_BFu31ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1i_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu31ll_BFu0s, aBFu1i_BFu31ll_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu32i_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu32i_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu32i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1i_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1i_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1i_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu32i_BFu0c, aBFu1i_BFu32i_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu32i_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu32i_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu32i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_BFu32i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1i_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1i_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu32i_BFu0i, aBFu1i_BFu32i_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu32i_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu32i_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_BFu32i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1i_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu32i_BFu0ll, aBFu1i_BFu32i_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu32i_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu32i_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu32i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu32i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1i_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1i_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu32i_BFu0s, aBFu1i_BFu32i_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu32ll_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu32ll_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1i_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1i_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu32ll_BFu0c, aBFu1i_BFu32ll_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu32ll_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu32ll_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu32ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_BFu32ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1i_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu32ll_BFu0i, aBFu1i_BFu32ll_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu32ll_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu32ll_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1i_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu32ll_BFu0ll, aBFu1i_BFu32ll_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu32ll_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu32ll_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu32ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu32ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1i_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu32ll_BFu0s, aBFu1i_BFu32ll_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu33_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu33_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu33_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1i_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "aBFu1i_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "aBFu1i_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu33_BFu0c, aBFu1i_BFu33_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu33_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu33_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_BFu33_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "aBFu1i_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "aBFu1i_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu33_BFu0i, aBFu1i_BFu33_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu33_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu33_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_BFu33_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "aBFu1i_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "aBFu1i_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu33_BFu0ll, aBFu1i_BFu33_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu33_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu33_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_BFu33_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "aBFu1i_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "aBFu1i_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu33_BFu0s, aBFu1i_BFu33_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu7c_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu7c_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu7c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1i_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1i_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1i_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu7c_BFu0c, aBFu1i_BFu7c_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu7c_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu7c_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu7c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1i_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1i_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu7c_BFu0i, aBFu1i_BFu7c_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu7c_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu7c_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu7c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1i_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1i_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu7c_BFu0ll, aBFu1i_BFu7c_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu7c_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu7c_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu7c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1i_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1i_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu7c_BFu0s, aBFu1i_BFu7c_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu7i_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu7i_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu7i_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1i_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1i_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1i_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu7i_BFu0c, aBFu1i_BFu7i_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu7i_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu7i_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu7i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1i_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1i_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu7i_BFu0i, aBFu1i_BFu7i_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu7i_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu7i_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu7i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1i_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1i_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu7i_BFu0ll, aBFu1i_BFu7i_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu7i_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu7i_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu7i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1i_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1i_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu7i_BFu0s, aBFu1i_BFu7i_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu7ll_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu7ll_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1i_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1i_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1i_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu7ll_BFu0c, aBFu1i_BFu7ll_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu7ll_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu7ll_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu7ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1i_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1i_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu7ll_BFu0i, aBFu1i_BFu7ll_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu7ll_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu7ll_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1i_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1i_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu7ll_BFu0ll, aBFu1i_BFu7ll_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu7ll_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu7ll_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu7ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1i_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1i_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu7ll_BFu0s, aBFu1i_BFu7ll_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu7s_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu7s_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu7s_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1i_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1i_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1i_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu7s_BFu0c, aBFu1i_BFu7s_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu7s_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu7s_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu7s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1i_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1i_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu7s_BFu0i, aBFu1i_BFu7s_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu7s_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu7s_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu7s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1i_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1i_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu7s_BFu0ll, aBFu1i_BFu7s_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu7s_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu7s_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1i_BFu7s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1i_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1i_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu7s_BFu0s, aBFu1i_BFu7s_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu8c_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu8c_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu8c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1i_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1i_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu8c_BFu0c, aBFu1i_BFu8c_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu8c_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu8c_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu8c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1i_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1i_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu8c_BFu0i, aBFu1i_BFu8c_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu8c_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu8c_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu8c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1i_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1i_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu8c_BFu0ll, aBFu1i_BFu8c_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu8c_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu8c_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu8c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu8c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1i_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1i_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu8c_BFu0s, aBFu1i_BFu8c_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu8i_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu8i_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu8i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1i_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1i_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu8i_BFu0c, aBFu1i_BFu8i_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu8i_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu8i_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu8i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1i_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1i_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu8i_BFu0i, aBFu1i_BFu8i_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu8i_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu8i_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu8i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1i_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1i_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu8i_BFu0ll, aBFu1i_BFu8i_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu8i_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu8i_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu8i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu8i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1i_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1i_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu8i_BFu0s, aBFu1i_BFu8i_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu8ll_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu8ll_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1i_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1i_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu8ll_BFu0c, aBFu1i_BFu8ll_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu8ll_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu8ll_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu8ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1i_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1i_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu8ll_BFu0i, aBFu1i_BFu8ll_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu8ll_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu8ll_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1i_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1i_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu8ll_BFu0ll, aBFu1i_BFu8ll_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu8ll_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu8ll_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu8ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu8ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1i_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1i_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu8ll_BFu0s, aBFu1i_BFu8ll_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu8s_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu8s_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu8s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1i_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1i_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu8s_BFu0c, aBFu1i_BFu8s_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu8s_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu8s_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu8s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1i_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1i_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu8s_BFu0i, aBFu1i_BFu8s_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu8s_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu8s_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu8s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1i_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1i_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu8s_BFu0ll, aBFu1i_BFu8s_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu8s_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu8s_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu8s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu8s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1i_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1i_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu8s_BFu0s, aBFu1i_BFu8s_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu9i_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu9i_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu9i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1i_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1i_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu9i_BFu0c, aBFu1i_BFu9i_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu9i_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu9i_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu9i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1i_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1i_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu9i_BFu0i, aBFu1i_BFu9i_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu9i_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu9i_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu9i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1i_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1i_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu9i_BFu0ll, aBFu1i_BFu9i_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu9i_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu9i_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu9i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu9i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1i_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1i_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu9i_BFu0s, aBFu1i_BFu9i_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu9ll_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu9ll_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1i_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1i_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu9ll_BFu0c, aBFu1i_BFu9ll_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu9ll_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu9ll_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu9ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1i_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1i_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu9ll_BFu0i, aBFu1i_BFu9ll_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu9ll_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu9ll_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1i_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1i_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu9ll_BFu0ll, aBFu1i_BFu9ll_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu9ll_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu9ll_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu9ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1i_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1i_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu9ll_BFu0s, aBFu1i_BFu9ll_BFu0s)
//============================================================================



static void Test_aBFu1i_BFu9s_BFu0c()
{
  {
    init_simple_test("aBFu1i_BFu9s_BFu0c");
    static STRUCT_IF_C aBFu1i_BFu9s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1i_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1i_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu9s_BFu0c, aBFu1i_BFu9s_BFu0c)
//============================================================================



static void Test_aBFu1i_BFu9s_BFu0i()
{
  {
    init_simple_test("aBFu1i_BFu9s_BFu0i");
    static STRUCT_IF_C aBFu1i_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_BFu9s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1i_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1i_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu9s_BFu0i, aBFu1i_BFu9s_BFu0i)
//============================================================================



static void Test_aBFu1i_BFu9s_BFu0ll()
{
  {
    init_simple_test("aBFu1i_BFu9s_BFu0ll");
    static STRUCT_IF_C aBFu1i_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_BFu9s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1i_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1i_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu9s_BFu0ll, aBFu1i_BFu9s_BFu0ll)
//============================================================================



static void Test_aBFu1i_BFu9s_BFu0s()
{
  {
    init_simple_test("aBFu1i_BFu9s_BFu0s");
    static STRUCT_IF_C aBFu1i_BFu9s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_BFu9s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1i_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1i_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_BFu9s_BFu0s, aBFu1i_BFu9s_BFu0s)
//============================================================================



static void Test_aBFu1i_C_BFu0c()
{
  {
    init_simple_test("aBFu1i_C_BFu0c");
    static STRUCT_IF_C aBFu1i_C_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_C_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1i_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_C_BFu0c, aBFu1i_C_BFu0c)
//============================================================================



static void Test_aBFu1i_C_BFu0i()
{
  {
    init_simple_test("aBFu1i_C_BFu0i");
    static STRUCT_IF_C aBFu1i_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_C_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_C_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1i_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_C_BFu0i, aBFu1i_C_BFu0i)
//============================================================================



static void Test_aBFu1i_C_BFu0ll()
{
  {
    init_simple_test("aBFu1i_C_BFu0ll");
    static STRUCT_IF_C aBFu1i_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_C_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_C_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1i_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_C_BFu0ll, aBFu1i_C_BFu0ll)
//============================================================================



static void Test_aBFu1i_C_BFu0s()
{
  {
    init_simple_test("aBFu1i_C_BFu0s");
    static STRUCT_IF_C aBFu1i_C_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_C_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_C_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1i_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_C_BFu0s, aBFu1i_C_BFu0s)
//============================================================================



static void Test_aBFu1i_D_BFu0c()
{
  {
    init_simple_test("aBFu1i_D_BFu0c");
    static STRUCT_IF_C aBFu1i_D_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1i_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_D_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1i_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_D_BFu0c, aBFu1i_D_BFu0c)
//============================================================================



static void Test_aBFu1i_D_BFu0i()
{
  {
    init_simple_test("aBFu1i_D_BFu0i");
    static STRUCT_IF_C aBFu1i_D_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1i_D_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_D_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1i_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_D_BFu0i, aBFu1i_D_BFu0i)
//============================================================================



static void Test_aBFu1i_D_BFu0ll()
{
  {
    init_simple_test("aBFu1i_D_BFu0ll");
    static STRUCT_IF_C aBFu1i_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1i_D_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_D_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1i_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_D_BFu0ll, aBFu1i_D_BFu0ll)
//============================================================================



static void Test_aBFu1i_D_BFu0s()
{
  {
    init_simple_test("aBFu1i_D_BFu0s");
    static STRUCT_IF_C aBFu1i_D_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1i_D_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_D_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1i_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_D_BFu0s, aBFu1i_D_BFu0s)
//============================================================================



static void Test_aBFu1i_F_BFu0c()
{
  {
    init_simple_test("aBFu1i_F_BFu0c");
    static STRUCT_IF_C aBFu1i_F_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1i_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_F_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1i_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_F_BFu0c, aBFu1i_F_BFu0c)
//============================================================================



static void Test_aBFu1i_F_BFu0i()
{
  {
    init_simple_test("aBFu1i_F_BFu0i");
    static STRUCT_IF_C aBFu1i_F_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_F_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_F_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1i_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_F_BFu0i, aBFu1i_F_BFu0i)
//============================================================================



static void Test_aBFu1i_F_BFu0ll()
{
  {
    init_simple_test("aBFu1i_F_BFu0ll");
    static STRUCT_IF_C aBFu1i_F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_F_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_F_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1i_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_F_BFu0ll, aBFu1i_F_BFu0ll)
//============================================================================



static void Test_aBFu1i_F_BFu0s()
{
  {
    init_simple_test("aBFu1i_F_BFu0s");
    static STRUCT_IF_C aBFu1i_F_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_F_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_F_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1i_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_F_BFu0s, aBFu1i_F_BFu0s)
//============================================================================



static void Test_aBFu1i_I_BFu0c()
{
  {
    init_simple_test("aBFu1i_I_BFu0c");
    static STRUCT_IF_C aBFu1i_I_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1i_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_I_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1i_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_I_BFu0c, aBFu1i_I_BFu0c)
//============================================================================



static void Test_aBFu1i_I_BFu0i()
{
  {
    init_simple_test("aBFu1i_I_BFu0i");
    static STRUCT_IF_C aBFu1i_I_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_I_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_I_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1i_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_I_BFu0i, aBFu1i_I_BFu0i)
//============================================================================



static void Test_aBFu1i_I_BFu0ll()
{
  {
    init_simple_test("aBFu1i_I_BFu0ll");
    static STRUCT_IF_C aBFu1i_I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_I_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_I_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1i_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_I_BFu0ll, aBFu1i_I_BFu0ll)
//============================================================================



static void Test_aBFu1i_I_BFu0s()
{
  {
    init_simple_test("aBFu1i_I_BFu0s");
    static STRUCT_IF_C aBFu1i_I_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_I_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_I_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1i_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_I_BFu0s, aBFu1i_I_BFu0s)
//============================================================================



static void Test_aBFu1i_Ip_BFu0c()
{
  {
    init_simple_test("aBFu1i_Ip_BFu0c");
    static STRUCT_IF_C aBFu1i_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Ip_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1i_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Ip_BFu0c, aBFu1i_Ip_BFu0c)
//============================================================================



static void Test_aBFu1i_Ip_BFu0i()
{
  {
    init_simple_test("aBFu1i_Ip_BFu0i");
    static STRUCT_IF_C aBFu1i_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1i_Ip_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Ip_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1i_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Ip_BFu0i, aBFu1i_Ip_BFu0i)
//============================================================================



static void Test_aBFu1i_Ip_BFu0ll()
{
  {
    init_simple_test("aBFu1i_Ip_BFu0ll");
    static STRUCT_IF_C aBFu1i_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu1i_Ip_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Ip_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1i_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Ip_BFu0ll, aBFu1i_Ip_BFu0ll)
//============================================================================



static void Test_aBFu1i_Ip_BFu0s()
{
  {
    init_simple_test("aBFu1i_Ip_BFu0s");
    static STRUCT_IF_C aBFu1i_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1i_Ip_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Ip_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1i_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Ip_BFu0s, aBFu1i_Ip_BFu0s)
//============================================================================



static void Test_aBFu1i_L_BFu0c()
{
  {
    init_simple_test("aBFu1i_L_BFu0c");
    static STRUCT_IF_C aBFu1i_L_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1i_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_L_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1i_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_L_BFu0c, aBFu1i_L_BFu0c)
//============================================================================



static void Test_aBFu1i_L_BFu0i()
{
  {
    init_simple_test("aBFu1i_L_BFu0i");
    static STRUCT_IF_C aBFu1i_L_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1i_L_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_L_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1i_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_L_BFu0i, aBFu1i_L_BFu0i)
//============================================================================



static void Test_aBFu1i_L_BFu0ll()
{
  {
    init_simple_test("aBFu1i_L_BFu0ll");
    static STRUCT_IF_C aBFu1i_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1i_L_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_L_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1i_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_L_BFu0ll, aBFu1i_L_BFu0ll)
//============================================================================



static void Test_aBFu1i_L_BFu0s()
{
  {
    init_simple_test("aBFu1i_L_BFu0s");
    static STRUCT_IF_C aBFu1i_L_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1i_L_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_L_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1i_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_L_BFu0s, aBFu1i_L_BFu0s)
//============================================================================



static void Test_aBFu1i_S_BFu0c()
{
  {
    init_simple_test("aBFu1i_S_BFu0c");
    static STRUCT_IF_C aBFu1i_S_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1i_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_S_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1i_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_S_BFu0c, aBFu1i_S_BFu0c)
//============================================================================



static void Test_aBFu1i_S_BFu0i()
{
  {
    init_simple_test("aBFu1i_S_BFu0i");
    static STRUCT_IF_C aBFu1i_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_S_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_S_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1i_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_S_BFu0i, aBFu1i_S_BFu0i)
//============================================================================



static void Test_aBFu1i_S_BFu0ll()
{
  {
    init_simple_test("aBFu1i_S_BFu0ll");
    static STRUCT_IF_C aBFu1i_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_S_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_S_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1i_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_S_BFu0ll, aBFu1i_S_BFu0ll)
//============================================================================



static void Test_aBFu1i_S_BFu0s()
{
  {
    init_simple_test("aBFu1i_S_BFu0s");
    static STRUCT_IF_C aBFu1i_S_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_S_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_S_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1i_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_S_BFu0s, aBFu1i_S_BFu0s)
//============================================================================



static void Test_aBFu1i_Uc_BFu0c()
{
  {
    init_simple_test("aBFu1i_Uc_BFu0c");
    static STRUCT_IF_C aBFu1i_Uc_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Uc_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1i_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Uc_BFu0c, aBFu1i_Uc_BFu0c)
//============================================================================



static void Test_aBFu1i_Uc_BFu0i()
{
  {
    init_simple_test("aBFu1i_Uc_BFu0i");
    static STRUCT_IF_C aBFu1i_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_Uc_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Uc_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1i_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Uc_BFu0i, aBFu1i_Uc_BFu0i)
//============================================================================



static void Test_aBFu1i_Uc_BFu0ll()
{
  {
    init_simple_test("aBFu1i_Uc_BFu0ll");
    static STRUCT_IF_C aBFu1i_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_Uc_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Uc_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1i_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Uc_BFu0ll, aBFu1i_Uc_BFu0ll)
//============================================================================



static void Test_aBFu1i_Uc_BFu0s()
{
  {
    init_simple_test("aBFu1i_Uc_BFu0s");
    static STRUCT_IF_C aBFu1i_Uc_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1i_Uc_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Uc_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1i_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Uc_BFu0s, aBFu1i_Uc_BFu0s)
//============================================================================



static void Test_aBFu1i_Ui_BFu0c()
{
  {
    init_simple_test("aBFu1i_Ui_BFu0c");
    static STRUCT_IF_C aBFu1i_Ui_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1i_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Ui_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1i_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Ui_BFu0c, aBFu1i_Ui_BFu0c)
//============================================================================



static void Test_aBFu1i_Ui_BFu0i()
{
  {
    init_simple_test("aBFu1i_Ui_BFu0i");
    static STRUCT_IF_C aBFu1i_Ui_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_Ui_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Ui_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1i_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Ui_BFu0i, aBFu1i_Ui_BFu0i)
//============================================================================



static void Test_aBFu1i_Ui_BFu0ll()
{
  {
    init_simple_test("aBFu1i_Ui_BFu0ll");
    static STRUCT_IF_C aBFu1i_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1i_Ui_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Ui_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1i_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Ui_BFu0ll, aBFu1i_Ui_BFu0ll)
//============================================================================



static void Test_aBFu1i_Ui_BFu0s()
{
  {
    init_simple_test("aBFu1i_Ui_BFu0s");
    static STRUCT_IF_C aBFu1i_Ui_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1i_Ui_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Ui_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1i_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Ui_BFu0s, aBFu1i_Ui_BFu0s)
//============================================================================



static void Test_aBFu1i_Ul_BFu0c()
{
  {
    init_simple_test("aBFu1i_Ul_BFu0c");
    static STRUCT_IF_C aBFu1i_Ul_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1i_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Ul_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1i_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Ul_BFu0c, aBFu1i_Ul_BFu0c)
//============================================================================



static void Test_aBFu1i_Ul_BFu0i()
{
  {
    init_simple_test("aBFu1i_Ul_BFu0i");
    static STRUCT_IF_C aBFu1i_Ul_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1i_Ul_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Ul_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1i_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Ul_BFu0i, aBFu1i_Ul_BFu0i)
//============================================================================



static void Test_aBFu1i_Ul_BFu0ll()
{
  {
    init_simple_test("aBFu1i_Ul_BFu0ll");
    static STRUCT_IF_C aBFu1i_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1i_Ul_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Ul_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1i_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Ul_BFu0ll, aBFu1i_Ul_BFu0ll)
//============================================================================



static void Test_aBFu1i_Ul_BFu0s()
{
  {
    init_simple_test("aBFu1i_Ul_BFu0s");
    static STRUCT_IF_C aBFu1i_Ul_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1i_Ul_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Ul_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1i_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Ul_BFu0s, aBFu1i_Ul_BFu0s)
//============================================================================



static void Test_aBFu1i_Us_BFu0c()
{
  {
    init_simple_test("aBFu1i_Us_BFu0c");
    static STRUCT_IF_C aBFu1i_Us_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1i_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Us_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1i_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Us_BFu0c, aBFu1i_Us_BFu0c)
//============================================================================



static void Test_aBFu1i_Us_BFu0i()
{
  {
    init_simple_test("aBFu1i_Us_BFu0i");
    static STRUCT_IF_C aBFu1i_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_Us_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Us_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1i_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Us_BFu0i, aBFu1i_Us_BFu0i)
//============================================================================



static void Test_aBFu1i_Us_BFu0ll()
{
  {
    init_simple_test("aBFu1i_Us_BFu0ll");
    static STRUCT_IF_C aBFu1i_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1i_Us_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Us_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1i_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Us_BFu0ll, aBFu1i_Us_BFu0ll)
//============================================================================



static void Test_aBFu1i_Us_BFu0s()
{
  {
    init_simple_test("aBFu1i_Us_BFu0s");
    static STRUCT_IF_C aBFu1i_Us_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1i_Us_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Us_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1i_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Us_BFu0s, aBFu1i_Us_BFu0s)
//============================================================================



static void Test_aBFu1i_Vp_BFu0c()
{
  {
    init_simple_test("aBFu1i_Vp_BFu0c");
    static STRUCT_IF_C aBFu1i_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1i_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Vp_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1i_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Vp_BFu0c, aBFu1i_Vp_BFu0c)
//============================================================================



static void Test_aBFu1i_Vp_BFu0i()
{
  {
    init_simple_test("aBFu1i_Vp_BFu0i");
    static STRUCT_IF_C aBFu1i_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1i_Vp_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Vp_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1i_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Vp_BFu0i, aBFu1i_Vp_BFu0i)
//============================================================================



static void Test_aBFu1i_Vp_BFu0ll()
{
  {
    init_simple_test("aBFu1i_Vp_BFu0ll");
    static STRUCT_IF_C aBFu1i_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu1i_Vp_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Vp_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1i_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Vp_BFu0ll, aBFu1i_Vp_BFu0ll)
//============================================================================



static void Test_aBFu1i_Vp_BFu0s()
{
  {
    init_simple_test("aBFu1i_Vp_BFu0s");
    static STRUCT_IF_C aBFu1i_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1i_Vp_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1i_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1i_Vp_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1i_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1i_Vp_BFu0s, aBFu1i_Vp_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c, aBFu1ll_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu0c, aBFu1ll_BFu0c_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu0i, aBFu1ll_BFu0c_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu0ll, aBFu1ll_BFu0c_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu0s, aBFu1ll_BFu0c_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu15i()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu15i");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu15i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, 1, "aBFu1ll_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1ll_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu15i, aBFu1ll_BFu0c_BFu15i)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu15ll()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu15ll");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, 1, "aBFu1ll_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1ll_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu15ll, aBFu1ll_BFu0c_BFu15ll)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu15s()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu15s");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu15s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, 1, "aBFu1ll_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1ll_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu15s, aBFu1ll_BFu0c_BFu15s)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu16i()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu16i");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1ll_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, 1, "aBFu1ll_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1ll_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu16i, aBFu1ll_BFu0c_BFu16i)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu16ll()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu16ll");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1ll_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, 1, "aBFu1ll_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1ll_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu16ll, aBFu1ll_BFu0c_BFu16ll)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu16s()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu16s");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1ll_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, 1, "aBFu1ll_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1ll_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu16s, aBFu1ll_BFu0c_BFu16s)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu17i()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu17i");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu17i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 17, 1, "aBFu1ll_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1ll_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu17i, aBFu1ll_BFu0c_BFu17i)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu17ll()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu17ll");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 17, 1, "aBFu1ll_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1ll_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu17ll, aBFu1ll_BFu0c_BFu17ll)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu1c()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu1c");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu1c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 1, 1, "aBFu1ll_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu1c, aBFu1ll_BFu0c_BFu1c)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu1i()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu1i");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu1i lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 1, 1, "aBFu1ll_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu1i, aBFu1ll_BFu0c_BFu1i)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu1ll()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu1ll");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 1, 1, "aBFu1ll_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu1ll, aBFu1ll_BFu0c_BFu1ll)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu1s()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu1s");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu1s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 1, 1, "aBFu1ll_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu1s, aBFu1ll_BFu0c_BFu1s)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu31i()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu31i");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu31i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 31, 1, "aBFu1ll_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1ll_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu31i, aBFu1ll_BFu0c_BFu31i)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu31ll()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu31ll");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 31, 1, "aBFu1ll_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1ll_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu31ll, aBFu1ll_BFu0c_BFu31ll)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu32i()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu32i");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1ll_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 32, 1, "aBFu1ll_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1ll_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu32i, aBFu1ll_BFu0c_BFu32i)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu32ll()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu32ll");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1ll_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 32, 1, "aBFu1ll_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1ll_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu32ll, aBFu1ll_BFu0c_BFu32ll)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu33()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu33");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu33 lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 33, 1, "aBFu1ll_BFu0c_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu1ll_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu33, aBFu1ll_BFu0c_BFu33)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu7c()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu7c");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu7c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, 1, "aBFu1ll_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1ll_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu7c, aBFu1ll_BFu0c_BFu7c)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu7i()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu7i");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu7i lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, 1, "aBFu1ll_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1ll_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu7i, aBFu1ll_BFu0c_BFu7i)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu7ll()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu7ll");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, 1, "aBFu1ll_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1ll_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu7ll, aBFu1ll_BFu0c_BFu7ll)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu7s()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu7s");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu7s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, 1, "aBFu1ll_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1ll_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu7s, aBFu1ll_BFu0c_BFu7s)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu8c()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu8c");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, 1, "aBFu1ll_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1ll_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu8c, aBFu1ll_BFu0c_BFu8c)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu8i()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu8i");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, 1, "aBFu1ll_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1ll_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu8i, aBFu1ll_BFu0c_BFu8i)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu8ll()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu8ll");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, 1, "aBFu1ll_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1ll_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu8ll, aBFu1ll_BFu0c_BFu8ll)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu8s()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu8s");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, 1, "aBFu1ll_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1ll_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu8s, aBFu1ll_BFu0c_BFu8s)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu9i()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu9i");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu9i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, 1, "aBFu1ll_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1ll_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu9i, aBFu1ll_BFu0c_BFu9i)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu9ll()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu9ll");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, 1, "aBFu1ll_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1ll_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu9ll, aBFu1ll_BFu0c_BFu9ll)
//============================================================================



static void Test_aBFu1ll_BFu0c_BFu9s()
{
  {
    init_simple_test("aBFu1ll_BFu0c_BFu9s");
    static STRUCT_IF_C aBFu1ll_BFu0c_BFu9s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, 1, "aBFu1ll_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1ll_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_BFu9s, aBFu1ll_BFu0c_BFu9s)
//============================================================================



static void Test_aBFu1ll_BFu0c_C()
{
  {
    init_simple_test("aBFu1ll_BFu0c_C");
    static STRUCT_IF_C aBFu1ll_BFu0c_C lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_C");
    check_field_offset(lv, v2, 1, "aBFu1ll_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_C, aBFu1ll_BFu0c_C)
//============================================================================



static void Test_aBFu1ll_BFu0c_D()
{
  {
    init_simple_test("aBFu1ll_BFu0c_D");
    static STRUCT_IF_C aBFu1ll_BFu0c_D lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1ll_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_D");
    check_field_offset(lv, v2, 1, "aBFu1ll_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_D, aBFu1ll_BFu0c_D)
//============================================================================



static void Test_aBFu1ll_BFu0c_F()
{
  {
    init_simple_test("aBFu1ll_BFu0c_F");
    static STRUCT_IF_C aBFu1ll_BFu0c_F lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1ll_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_F");
    check_field_offset(lv, v2, 1, "aBFu1ll_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_F, aBFu1ll_BFu0c_F)
//============================================================================



static void Test_aBFu1ll_BFu0c_I()
{
  {
    init_simple_test("aBFu1ll_BFu0c_I");
    static STRUCT_IF_C aBFu1ll_BFu0c_I lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1ll_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_I");
    check_field_offset(lv, v2, 1, "aBFu1ll_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_I, aBFu1ll_BFu0c_I)
//============================================================================



static void Test_aBFu1ll_BFu0c_Ip()
{
  {
    init_simple_test("aBFu1ll_BFu0c_Ip");
    static STRUCT_IF_C aBFu1ll_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_Ip");
    check_field_offset(lv, v2, 1, "aBFu1ll_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_Ip, aBFu1ll_BFu0c_Ip)
//============================================================================



static void Test_aBFu1ll_BFu0c_L()
{
  {
    init_simple_test("aBFu1ll_BFu0c_L");
    static STRUCT_IF_C aBFu1ll_BFu0c_L lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1ll_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_L");
    check_field_offset(lv, v2, 1, "aBFu1ll_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_L, aBFu1ll_BFu0c_L)
//============================================================================



static void Test_aBFu1ll_BFu0c_S()
{
  {
    init_simple_test("aBFu1ll_BFu0c_S");
    static STRUCT_IF_C aBFu1ll_BFu0c_S lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1ll_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_S");
    check_field_offset(lv, v2, 1, "aBFu1ll_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_S, aBFu1ll_BFu0c_S)
//============================================================================



static void Test_aBFu1ll_BFu0c_Uc()
{
  {
    init_simple_test("aBFu1ll_BFu0c_Uc");
    static STRUCT_IF_C aBFu1ll_BFu0c_Uc lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_Uc");
    check_field_offset(lv, v2, 1, "aBFu1ll_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_Uc, aBFu1ll_BFu0c_Uc)
//============================================================================



static void Test_aBFu1ll_BFu0c_Ui()
{
  {
    init_simple_test("aBFu1ll_BFu0c_Ui");
    static STRUCT_IF_C aBFu1ll_BFu0c_Ui lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1ll_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_Ui");
    check_field_offset(lv, v2, 1, "aBFu1ll_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_Ui, aBFu1ll_BFu0c_Ui)
//============================================================================



static void Test_aBFu1ll_BFu0c_Ul()
{
  {
    init_simple_test("aBFu1ll_BFu0c_Ul");
    static STRUCT_IF_C aBFu1ll_BFu0c_Ul lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1ll_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_Ul");
    check_field_offset(lv, v2, 1, "aBFu1ll_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_Ul, aBFu1ll_BFu0c_Ul)
//============================================================================



static void Test_aBFu1ll_BFu0c_Us()
{
  {
    init_simple_test("aBFu1ll_BFu0c_Us");
    static STRUCT_IF_C aBFu1ll_BFu0c_Us lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1ll_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_Us");
    check_field_offset(lv, v2, 1, "aBFu1ll_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_Us, aBFu1ll_BFu0c_Us)
//============================================================================



static void Test_aBFu1ll_BFu0c_Vp()
{
  {
    init_simple_test("aBFu1ll_BFu0c_Vp");
    static STRUCT_IF_C aBFu1ll_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0c_Vp");
    check_field_offset(lv, v2, 1, "aBFu1ll_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0c_Vp, aBFu1ll_BFu0c_Vp)
//============================================================================



static void Test_aBFu1ll_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i, aBFu1ll_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu0c, aBFu1ll_BFu0i_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu0i, aBFu1ll_BFu0i_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu0ll, aBFu1ll_BFu0i_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu0s, aBFu1ll_BFu0i_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu15i()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu15i");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu1ll_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1ll_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu15i, aBFu1ll_BFu0i_BFu15i)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu15ll()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu15ll");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu1ll_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1ll_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu15ll, aBFu1ll_BFu0i_BFu15ll)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu15s()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu15s");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu1ll_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1ll_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu15s, aBFu1ll_BFu0i_BFu15s)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu16i()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu16i");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu1ll_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1ll_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu16i, aBFu1ll_BFu0i_BFu16i)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu16ll()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu16ll");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu1ll_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1ll_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu16ll, aBFu1ll_BFu0i_BFu16ll)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu16s()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu16s");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu1ll_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1ll_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu16s, aBFu1ll_BFu0i_BFu16s)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu17i()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu17i");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu1ll_BFu0i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu1ll_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1ll_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu17i, aBFu1ll_BFu0i_BFu17i)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu17ll()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu17ll");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu1ll_BFu0i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu1ll_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1ll_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu17ll, aBFu1ll_BFu0i_BFu17ll)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu1c()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu1c");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu1ll_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu1c, aBFu1ll_BFu0i_BFu1c)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu1i()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu1i");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu1ll_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu1i, aBFu1ll_BFu0i_BFu1i)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu1ll()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu1ll");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu1ll_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu1ll, aBFu1ll_BFu0i_BFu1ll)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu1s()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu1s");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu1ll_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu1s, aBFu1ll_BFu0i_BFu1s)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu31i()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu31i");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu31i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_BFu0i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu1ll_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1ll_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu31i, aBFu1ll_BFu0i_BFu31i)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu31ll()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu31ll");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_BFu0i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu1ll_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1ll_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu31ll, aBFu1ll_BFu0i_BFu31ll)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu32i()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu32i");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu32i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_BFu0i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu1ll_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1ll_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu32i, aBFu1ll_BFu0i_BFu32i)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu32ll()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu32ll");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_BFu0i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu1ll_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1ll_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu32ll, aBFu1ll_BFu0i_BFu32ll)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu33()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu33");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(aBFu1ll_BFu0i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, 1, "aBFu1ll_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu1ll_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu33, aBFu1ll_BFu0i_BFu33)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu7c()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu7c");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu1ll_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1ll_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu7c, aBFu1ll_BFu0i_BFu7c)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu7i()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu7i");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu1ll_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1ll_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu7i, aBFu1ll_BFu0i_BFu7i)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu7ll()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu7ll");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu1ll_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1ll_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu7ll, aBFu1ll_BFu0i_BFu7ll)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu7s()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu7s");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu1ll_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1ll_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu7s, aBFu1ll_BFu0i_BFu7s)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu8c()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu8c");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu1ll_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1ll_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu8c, aBFu1ll_BFu0i_BFu8c)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu8i()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu8i");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu1ll_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1ll_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu8i, aBFu1ll_BFu0i_BFu8i)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu8ll()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu8ll");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu1ll_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1ll_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu8ll, aBFu1ll_BFu0i_BFu8ll)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu8s()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu8s");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu1ll_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1ll_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu8s, aBFu1ll_BFu0i_BFu8s)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu9i()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu9i");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu1ll_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1ll_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu9i, aBFu1ll_BFu0i_BFu9i)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu9ll()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu9ll");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu1ll_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1ll_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu9ll, aBFu1ll_BFu0i_BFu9ll)
//============================================================================



static void Test_aBFu1ll_BFu0i_BFu9s()
{
  {
    init_simple_test("aBFu1ll_BFu0i_BFu9s");
    static STRUCT_IF_C aBFu1ll_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu1ll_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1ll_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_BFu9s, aBFu1ll_BFu0i_BFu9s)
//============================================================================



static void Test_aBFu1ll_BFu0i_C()
{
  {
    init_simple_test("aBFu1ll_BFu0i_C");
    static STRUCT_IF_C aBFu1ll_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_C");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1ll_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_C, aBFu1ll_BFu0i_C)
//============================================================================



static void Test_aBFu1ll_BFu0i_D()
{
  {
    init_simple_test("aBFu1ll_BFu0i_D");
    static STRUCT_IF_C aBFu1ll_BFu0i_D lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1ll_BFu0i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_D");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1ll_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_D, aBFu1ll_BFu0i_D)
//============================================================================



static void Test_aBFu1ll_BFu0i_F()
{
  {
    init_simple_test("aBFu1ll_BFu0i_F");
    static STRUCT_IF_C aBFu1ll_BFu0i_F lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_BFu0i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_F");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1ll_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_F, aBFu1ll_BFu0i_F)
//============================================================================



static void Test_aBFu1ll_BFu0i_I()
{
  {
    init_simple_test("aBFu1ll_BFu0i_I");
    static STRUCT_IF_C aBFu1ll_BFu0i_I lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_BFu0i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_I");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1ll_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_I, aBFu1ll_BFu0i_I)
//============================================================================



static void Test_aBFu1ll_BFu0i_Ip()
{
  {
    init_simple_test("aBFu1ll_BFu0i_Ip");
    static STRUCT_IF_C aBFu1ll_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1ll_BFu0i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_Ip");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1ll_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_Ip, aBFu1ll_BFu0i_Ip)
//============================================================================



static void Test_aBFu1ll_BFu0i_L()
{
  {
    init_simple_test("aBFu1ll_BFu0i_L");
    static STRUCT_IF_C aBFu1ll_BFu0i_L lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1ll_BFu0i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_L");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1ll_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_L, aBFu1ll_BFu0i_L)
//============================================================================



static void Test_aBFu1ll_BFu0i_S()
{
  {
    init_simple_test("aBFu1ll_BFu0i_S");
    static STRUCT_IF_C aBFu1ll_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_S");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1ll_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_S, aBFu1ll_BFu0i_S)
//============================================================================



static void Test_aBFu1ll_BFu0i_Uc()
{
  {
    init_simple_test("aBFu1ll_BFu0i_Uc");
    static STRUCT_IF_C aBFu1ll_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_Uc");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1ll_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_Uc, aBFu1ll_BFu0i_Uc)
//============================================================================



static void Test_aBFu1ll_BFu0i_Ui()
{
  {
    init_simple_test("aBFu1ll_BFu0i_Ui");
    static STRUCT_IF_C aBFu1ll_BFu0i_Ui lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_BFu0i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_Ui");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1ll_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_Ui, aBFu1ll_BFu0i_Ui)
//============================================================================



static void Test_aBFu1ll_BFu0i_Ul()
{
  {
    init_simple_test("aBFu1ll_BFu0i_Ul");
    static STRUCT_IF_C aBFu1ll_BFu0i_Ul lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1ll_BFu0i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_Ul");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1ll_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_Ul, aBFu1ll_BFu0i_Ul)
//============================================================================



static void Test_aBFu1ll_BFu0i_Us()
{
  {
    init_simple_test("aBFu1ll_BFu0i_Us");
    static STRUCT_IF_C aBFu1ll_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_Us");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1ll_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_Us, aBFu1ll_BFu0i_Us)
//============================================================================



static void Test_aBFu1ll_BFu0i_Vp()
{
  {
    init_simple_test("aBFu1ll_BFu0i_Vp");
    static STRUCT_IF_C aBFu1ll_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1ll_BFu0i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0i_Vp");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1ll_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0i_Vp, aBFu1ll_BFu0i_Vp)
//============================================================================



static void Test_aBFu1ll_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll, aBFu1ll_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu0c, aBFu1ll_BFu0ll_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu0i, aBFu1ll_BFu0ll_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu0ll, aBFu1ll_BFu0ll_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu0s, aBFu1ll_BFu0ll_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu15i()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu15i");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1ll_BFu0ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu1ll_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1ll_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu15i, aBFu1ll_BFu0ll_BFu15i)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu15ll()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu15ll");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1ll_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu1ll_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1ll_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu15ll, aBFu1ll_BFu0ll_BFu15ll)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu15s()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu15s");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1ll_BFu0ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu1ll_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1ll_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu15s, aBFu1ll_BFu0ll_BFu15s)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu16i()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu16i");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1ll_BFu0ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu1ll_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1ll_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu16i, aBFu1ll_BFu0ll_BFu16i)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu16ll()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu16ll");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1ll_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu1ll_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1ll_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu16ll, aBFu1ll_BFu0ll_BFu16ll)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu16s()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu16s");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1ll_BFu0ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu1ll_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1ll_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu16s, aBFu1ll_BFu0ll_BFu16s)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu17i()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu17i");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu1ll_BFu0ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, 1, "aBFu1ll_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1ll_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu17i, aBFu1ll_BFu0ll_BFu17i)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu17ll()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu17ll");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu1ll_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, 1, "aBFu1ll_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1ll_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu17ll, aBFu1ll_BFu0ll_BFu17ll)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu1c()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu1c");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_BFu0ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu1ll_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu1c, aBFu1ll_BFu0ll_BFu1c)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu1i()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu1i");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_BFu0ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu1ll_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu1i, aBFu1ll_BFu0ll_BFu1i)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu1ll()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu1ll");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu1ll_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu1ll, aBFu1ll_BFu0ll_BFu1ll)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu1s()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu1s");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_BFu0ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu1ll_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu1s, aBFu1ll_BFu0ll_BFu1s)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu31i()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu31i");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1ll_BFu0ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, 1, "aBFu1ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1ll_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu31i, aBFu1ll_BFu0ll_BFu31i)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu31ll()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu31ll");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1ll_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, 1, "aBFu1ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1ll_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu31ll, aBFu1ll_BFu0ll_BFu31ll)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu32i()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu32i");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1ll_BFu0ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, 1, "aBFu1ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1ll_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu32i, aBFu1ll_BFu0ll_BFu32i)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu32ll()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu32ll");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1ll_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, 1, "aBFu1ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1ll_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu32ll, aBFu1ll_BFu0ll_BFu32ll)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu33()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu33");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aBFu1ll_BFu0ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 33, 1, "aBFu1ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu1ll_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu33, aBFu1ll_BFu0ll_BFu33)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu7c()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu7c");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_BFu0ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu1ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1ll_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu7c, aBFu1ll_BFu0ll_BFu7c)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu7i()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu7i");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_BFu0ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu1ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1ll_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu7i, aBFu1ll_BFu0ll_BFu7i)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu7ll()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu7ll");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu1ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1ll_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu7ll, aBFu1ll_BFu0ll_BFu7ll)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu7s()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu7s");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_BFu0ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu1ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1ll_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu7s, aBFu1ll_BFu0ll_BFu7s)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu8c()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu8c");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_BFu0ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu1ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1ll_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu8c, aBFu1ll_BFu0ll_BFu8c)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu8i()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu8i");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_BFu0ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu1ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1ll_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu8i, aBFu1ll_BFu0ll_BFu8i)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu8ll()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu8ll");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu1ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1ll_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu8ll, aBFu1ll_BFu0ll_BFu8ll)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu8s()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu8s");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_BFu0ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu1ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1ll_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu8s, aBFu1ll_BFu0ll_BFu8s)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu9i()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu9i");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1ll_BFu0ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu1ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1ll_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu9i, aBFu1ll_BFu0ll_BFu9i)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu9ll()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu9ll");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1ll_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu1ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1ll_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu9ll, aBFu1ll_BFu0ll_BFu9ll)
//============================================================================



static void Test_aBFu1ll_BFu0ll_BFu9s()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_BFu9s");
    static STRUCT_IF_C aBFu1ll_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1ll_BFu0ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu1ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1ll_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_BFu9s, aBFu1ll_BFu0ll_BFu9s)
//============================================================================



static void Test_aBFu1ll_BFu0ll_C()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_C");
    static STRUCT_IF_C aBFu1ll_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_BFu0ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1ll_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_C, aBFu1ll_BFu0ll_C)
//============================================================================



static void Test_aBFu1ll_BFu0ll_D()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_D");
    static STRUCT_IF_C aBFu1ll_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1ll_BFu0ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1ll_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_D, aBFu1ll_BFu0ll_D)
//============================================================================



static void Test_aBFu1ll_BFu0ll_F()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_F");
    static STRUCT_IF_C aBFu1ll_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1ll_BFu0ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1ll_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_F, aBFu1ll_BFu0ll_F)
//============================================================================



static void Test_aBFu1ll_BFu0ll_I()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_I");
    static STRUCT_IF_C aBFu1ll_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1ll_BFu0ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1ll_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_I, aBFu1ll_BFu0ll_I)
//============================================================================



static void Test_aBFu1ll_BFu0ll_Ip()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_Ip");
    static STRUCT_IF_C aBFu1ll_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu1ll_BFu0ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1ll_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_Ip, aBFu1ll_BFu0ll_Ip)
//============================================================================



static void Test_aBFu1ll_BFu0ll_L()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_L");
    static STRUCT_IF_C aBFu1ll_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1ll_BFu0ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1ll_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_L, aBFu1ll_BFu0ll_L)
//============================================================================



static void Test_aBFu1ll_BFu0ll_S()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_S");
    static STRUCT_IF_C aBFu1ll_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1ll_BFu0ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1ll_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_S, aBFu1ll_BFu0ll_S)
//============================================================================



static void Test_aBFu1ll_BFu0ll_Uc()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_Uc");
    static STRUCT_IF_C aBFu1ll_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_BFu0ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1ll_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_Uc, aBFu1ll_BFu0ll_Uc)
//============================================================================



static void Test_aBFu1ll_BFu0ll_Ui()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_Ui");
    static STRUCT_IF_C aBFu1ll_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1ll_BFu0ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1ll_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_Ui, aBFu1ll_BFu0ll_Ui)
//============================================================================



static void Test_aBFu1ll_BFu0ll_Ul()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_Ul");
    static STRUCT_IF_C aBFu1ll_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1ll_BFu0ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1ll_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_Ul, aBFu1ll_BFu0ll_Ul)
//============================================================================



static void Test_aBFu1ll_BFu0ll_Us()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_Us");
    static STRUCT_IF_C aBFu1ll_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1ll_BFu0ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1ll_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_Us, aBFu1ll_BFu0ll_Us)
//============================================================================



static void Test_aBFu1ll_BFu0ll_Vp()
{
  {
    init_simple_test("aBFu1ll_BFu0ll_Vp");
    static STRUCT_IF_C aBFu1ll_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu1ll_BFu0ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1ll_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0ll_Vp, aBFu1ll_BFu0ll_Vp)
//============================================================================



static void Test_aBFu1ll_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s, aBFu1ll_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu0c, aBFu1ll_BFu0s_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu0i, aBFu1ll_BFu0s_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu0ll, aBFu1ll_BFu0s_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu0s, aBFu1ll_BFu0s_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu15i()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu15i");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu15i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, 1, "aBFu1ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1ll_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu15i, aBFu1ll_BFu0s_BFu15i)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu15ll()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu15ll");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, 1, "aBFu1ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1ll_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu15ll, aBFu1ll_BFu0s_BFu15ll)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu15s()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu15s");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu15s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, 1, "aBFu1ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1ll_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu15s, aBFu1ll_BFu0s_BFu15s)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu16i()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu16i");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu16i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, 1, "aBFu1ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1ll_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu16i, aBFu1ll_BFu0s_BFu16i)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu16ll()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu16ll");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, 1, "aBFu1ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1ll_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu16ll, aBFu1ll_BFu0s_BFu16ll)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu16s()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu16s");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu16s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, 1, "aBFu1ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1ll_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu16s, aBFu1ll_BFu0s_BFu16s)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu17i()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu17i");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 17, 1, "aBFu1ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1ll_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu17i, aBFu1ll_BFu0s_BFu17i)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu17ll()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu17ll");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1ll_BFu0s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 17, 1, "aBFu1ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1ll_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu17ll, aBFu1ll_BFu0s_BFu17ll)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu1c()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu1c");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 1, 1, "aBFu1ll_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu1c, aBFu1ll_BFu0s_BFu1c)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu1i()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu1i");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 1, 1, "aBFu1ll_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu1i, aBFu1ll_BFu0s_BFu1i)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu1ll()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu1ll");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 1, 1, "aBFu1ll_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu1ll, aBFu1ll_BFu0s_BFu1ll)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu1s()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu1s");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 1, 1, "aBFu1ll_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu1s, aBFu1ll_BFu0s_BFu1s)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu31i()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu31i");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu31i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 31, 1, "aBFu1ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1ll_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu31i, aBFu1ll_BFu0s_BFu31i)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu31ll()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu31ll");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 31, 1, "aBFu1ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1ll_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu31ll, aBFu1ll_BFu0s_BFu31ll)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu32i()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu32i");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu32i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 32, 1, "aBFu1ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1ll_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu32i, aBFu1ll_BFu0s_BFu32i)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu32ll()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu32ll");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 32, 1, "aBFu1ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1ll_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu32ll, aBFu1ll_BFu0s_BFu32ll)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu33()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu33");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu1ll_BFu0s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 33, 1, "aBFu1ll_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu1ll_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu33, aBFu1ll_BFu0s_BFu33)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu7c()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu7c");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, 1, "aBFu1ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1ll_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu7c, aBFu1ll_BFu0s_BFu7c)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu7i()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu7i");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, 1, "aBFu1ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1ll_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu7i, aBFu1ll_BFu0s_BFu7i)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu7ll()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu7ll");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, 1, "aBFu1ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1ll_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu7ll, aBFu1ll_BFu0s_BFu7ll)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu7s()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu7s");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, 1, "aBFu1ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1ll_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu7s, aBFu1ll_BFu0s_BFu7s)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu8c()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu8c");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, 1, "aBFu1ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1ll_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu8c, aBFu1ll_BFu0s_BFu8c)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu8i()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu8i");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, 1, "aBFu1ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1ll_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu8i, aBFu1ll_BFu0s_BFu8i)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu8ll()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu8ll");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, 1, "aBFu1ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1ll_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu8ll, aBFu1ll_BFu0s_BFu8ll)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu8s()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu8s");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, 1, "aBFu1ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1ll_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu8s, aBFu1ll_BFu0s_BFu8s)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu9i()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu9i");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu9i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, 1, "aBFu1ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1ll_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu9i, aBFu1ll_BFu0s_BFu9i)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu9ll()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu9ll");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, 1, "aBFu1ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1ll_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu9ll, aBFu1ll_BFu0s_BFu9ll)
//============================================================================



static void Test_aBFu1ll_BFu0s_BFu9s()
{
  {
    init_simple_test("aBFu1ll_BFu0s_BFu9s");
    static STRUCT_IF_C aBFu1ll_BFu0s_BFu9s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, 1, "aBFu1ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1ll_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_BFu9s, aBFu1ll_BFu0s_BFu9s)
//============================================================================



static void Test_aBFu1ll_BFu0s_C()
{
  {
    init_simple_test("aBFu1ll_BFu0s_C");
    static STRUCT_IF_C aBFu1ll_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_C");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1ll_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_C, aBFu1ll_BFu0s_C)
//============================================================================



static void Test_aBFu1ll_BFu0s_D()
{
  {
    init_simple_test("aBFu1ll_BFu0s_D");
    static STRUCT_IF_C aBFu1ll_BFu0s_D lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1ll_BFu0s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_D");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1ll_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_D, aBFu1ll_BFu0s_D)
//============================================================================



static void Test_aBFu1ll_BFu0s_F()
{
  {
    init_simple_test("aBFu1ll_BFu0s_F");
    static STRUCT_IF_C aBFu1ll_BFu0s_F lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_F");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1ll_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_F, aBFu1ll_BFu0s_F)
//============================================================================



static void Test_aBFu1ll_BFu0s_I()
{
  {
    init_simple_test("aBFu1ll_BFu0s_I");
    static STRUCT_IF_C aBFu1ll_BFu0s_I lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_I");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1ll_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_I, aBFu1ll_BFu0s_I)
//============================================================================



static void Test_aBFu1ll_BFu0s_Ip()
{
  {
    init_simple_test("aBFu1ll_BFu0s_Ip");
    static STRUCT_IF_C aBFu1ll_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1ll_BFu0s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_Ip");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1ll_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_Ip, aBFu1ll_BFu0s_Ip)
//============================================================================



static void Test_aBFu1ll_BFu0s_L()
{
  {
    init_simple_test("aBFu1ll_BFu0s_L");
    static STRUCT_IF_C aBFu1ll_BFu0s_L lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1ll_BFu0s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_L");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1ll_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_L, aBFu1ll_BFu0s_L)
//============================================================================



static void Test_aBFu1ll_BFu0s_S()
{
  {
    init_simple_test("aBFu1ll_BFu0s_S");
    static STRUCT_IF_C aBFu1ll_BFu0s_S lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_S");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1ll_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_S, aBFu1ll_BFu0s_S)
//============================================================================



static void Test_aBFu1ll_BFu0s_Uc()
{
  {
    init_simple_test("aBFu1ll_BFu0s_Uc");
    static STRUCT_IF_C aBFu1ll_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1ll_BFu0s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_Uc");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1ll_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_Uc, aBFu1ll_BFu0s_Uc)
//============================================================================



static void Test_aBFu1ll_BFu0s_Ui()
{
  {
    init_simple_test("aBFu1ll_BFu0s_Ui");
    static STRUCT_IF_C aBFu1ll_BFu0s_Ui lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu0s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_Ui");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1ll_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_Ui, aBFu1ll_BFu0s_Ui)
//============================================================================



static void Test_aBFu1ll_BFu0s_Ul()
{
  {
    init_simple_test("aBFu1ll_BFu0s_Ul");
    static STRUCT_IF_C aBFu1ll_BFu0s_Ul lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1ll_BFu0s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_Ul");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1ll_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_Ul, aBFu1ll_BFu0s_Ul)
//============================================================================



static void Test_aBFu1ll_BFu0s_Us()
{
  {
    init_simple_test("aBFu1ll_BFu0s_Us");
    static STRUCT_IF_C aBFu1ll_BFu0s_Us lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu0s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_Us");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1ll_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_Us, aBFu1ll_BFu0s_Us)
//============================================================================



static void Test_aBFu1ll_BFu0s_Vp()
{
  {
    init_simple_test("aBFu1ll_BFu0s_Vp");
    static STRUCT_IF_C aBFu1ll_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1ll_BFu0s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu0s_Vp");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1ll_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu0s_Vp, aBFu1ll_BFu0s_Vp)
//============================================================================



static void Test_aBFu1ll_BFu15i_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu15i_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu15i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1ll_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu15i_BFu0c, aBFu1ll_BFu15i_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu15i_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu15i_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu15i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1ll_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu15i_BFu0i, aBFu1ll_BFu15i_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu15i_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu15i_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu15i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1ll_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu15i_BFu0ll, aBFu1ll_BFu15i_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu15i_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu15i_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu15i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu15i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1ll_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu15i_BFu0s, aBFu1ll_BFu15i_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu15ll_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu15ll_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1ll_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu15ll_BFu0c, aBFu1ll_BFu15ll_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu15ll_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu15ll_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu15ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1ll_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu15ll_BFu0i, aBFu1ll_BFu15ll_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu15ll_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu15ll_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1ll_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu15ll_BFu0ll, aBFu1ll_BFu15ll_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu15ll_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu15ll_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu15ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1ll_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu15ll_BFu0s, aBFu1ll_BFu15ll_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu15s_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu15s_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu15s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1ll_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu15s_BFu0c, aBFu1ll_BFu15s_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu15s_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu15s_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu15s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1ll_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu15s_BFu0i, aBFu1ll_BFu15s_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu15s_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu15s_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu15s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1ll_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu15s_BFu0ll, aBFu1ll_BFu15s_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu15s_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu15s_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu15s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu15s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1ll_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu15s_BFu0s, aBFu1ll_BFu15s_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu16i_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu16i_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu16i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1ll_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1ll_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu16i_BFu0c, aBFu1ll_BFu16i_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu16i_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu16i_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu16i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1ll_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu16i_BFu0i, aBFu1ll_BFu16i_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu16i_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu16i_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu16i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1ll_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu16i_BFu0ll, aBFu1ll_BFu16i_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu16i_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu16i_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu16i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu16i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1ll_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu16i_BFu0s, aBFu1ll_BFu16i_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu16ll_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu16ll_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1ll_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1ll_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu16ll_BFu0c, aBFu1ll_BFu16ll_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu16ll_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu16ll_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu16ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1ll_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu16ll_BFu0i, aBFu1ll_BFu16ll_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu16ll_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu16ll_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1ll_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu16ll_BFu0ll, aBFu1ll_BFu16ll_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu16ll_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu16ll_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu16ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu16ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1ll_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu16ll_BFu0s, aBFu1ll_BFu16ll_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu16s_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu16s_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu16s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1ll_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1ll_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu16s_BFu0c, aBFu1ll_BFu16s_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu16s_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu16s_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu16s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1ll_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu16s_BFu0i, aBFu1ll_BFu16s_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu16s_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu16s_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu16s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1ll_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu16s_BFu0ll, aBFu1ll_BFu16s_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu16s_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu16s_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu16s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu16s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1ll_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu16s_BFu0s, aBFu1ll_BFu16s_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu17i_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu17i_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu17i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1ll_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1ll_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu17i_BFu0c, aBFu1ll_BFu17i_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu17i_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu17i_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu17i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1ll_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu17i_BFu0i, aBFu1ll_BFu17i_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu17i_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu17i_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu17i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1ll_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu17i_BFu0ll, aBFu1ll_BFu17i_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu17i_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu17i_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu17i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1ll_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu17i_BFu0s, aBFu1ll_BFu17i_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu17ll_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu17ll_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1ll_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1ll_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu17ll_BFu0c, aBFu1ll_BFu17ll_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu17ll_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu17ll_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu17ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1ll_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu17ll_BFu0i, aBFu1ll_BFu17ll_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu17ll_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu17ll_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1ll_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu17ll_BFu0ll, aBFu1ll_BFu17ll_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu17ll_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu17ll_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu17ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1ll_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu17ll_BFu0s, aBFu1ll_BFu17ll_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu1c_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu1c_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu1c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1ll_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1ll_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu1c_BFu0c, aBFu1ll_BFu1c_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu1c_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu1c_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu1c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1ll_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu1c_BFu0i, aBFu1ll_BFu1c_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu1c_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu1c_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu1c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1ll_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu1c_BFu0ll, aBFu1ll_BFu1c_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu1c_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu1c_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu1c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1ll_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu1c_BFu0s, aBFu1ll_BFu1c_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu1i_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu1i_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu1i_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1ll_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1ll_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu1i_BFu0c, aBFu1ll_BFu1i_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu1i_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu1i_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu1i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1ll_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu1i_BFu0i, aBFu1ll_BFu1i_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu1i_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu1i_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu1i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1ll_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu1i_BFu0ll, aBFu1ll_BFu1i_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu1i_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu1i_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu1i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1ll_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu1i_BFu0s, aBFu1ll_BFu1i_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu1ll_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu1ll_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1ll_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1ll_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu1ll_BFu0c, aBFu1ll_BFu1ll_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu1ll_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu1ll_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu1ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1ll_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu1ll_BFu0i, aBFu1ll_BFu1ll_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu1ll_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu1ll_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1ll_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu1ll_BFu0ll, aBFu1ll_BFu1ll_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu1ll_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu1ll_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu1ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1ll_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu1ll_BFu0s, aBFu1ll_BFu1ll_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu1s_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu1s_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu1s_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1ll_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1ll_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu1s_BFu0c, aBFu1ll_BFu1s_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu1s_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu1s_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu1s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1ll_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu1s_BFu0i, aBFu1ll_BFu1s_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu1s_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu1s_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu1s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1ll_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu1s_BFu0ll, aBFu1ll_BFu1s_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu1s_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu1s_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu1s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1ll_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu1s_BFu0s, aBFu1ll_BFu1s_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu31i_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu31i_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu31i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1ll_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1ll_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu31i_BFu0c, aBFu1ll_BFu31i_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu31i_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu31i_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu31i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1ll_BFu31i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1ll_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu31i_BFu0i, aBFu1ll_BFu31i_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu31i_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu31i_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu31i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1ll_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu31i_BFu0ll, aBFu1ll_BFu31i_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu31i_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu31i_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu31i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1ll_BFu31i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1ll_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu31i_BFu0s, aBFu1ll_BFu31i_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu31ll_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu31ll_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1ll_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1ll_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu31ll_BFu0c, aBFu1ll_BFu31ll_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu31ll_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu31ll_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1ll_BFu31ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1ll_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu31ll_BFu0i, aBFu1ll_BFu31ll_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu31ll_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu31ll_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1ll_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu31ll_BFu0ll, aBFu1ll_BFu31ll_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu31ll_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu31ll_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1ll_BFu31ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1ll_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu31ll_BFu0s, aBFu1ll_BFu31ll_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu32i_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu32i_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu32i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1ll_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1ll_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu32i_BFu0c, aBFu1ll_BFu32i_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu32i_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu32i_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu32i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_BFu32i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1ll_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu32i_BFu0i, aBFu1ll_BFu32i_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu32i_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu32i_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_BFu32i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1ll_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu32i_BFu0ll, aBFu1ll_BFu32i_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu32i_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu32i_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu32i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu32i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1ll_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu32i_BFu0s, aBFu1ll_BFu32i_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu32ll_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu32ll_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1ll_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1ll_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu32ll_BFu0c, aBFu1ll_BFu32ll_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu32ll_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu32ll_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu32ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_BFu32ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1ll_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu32ll_BFu0i, aBFu1ll_BFu32ll_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu32ll_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu32ll_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1ll_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu32ll_BFu0ll, aBFu1ll_BFu32ll_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu32ll_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu32ll_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu32ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu32ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1ll_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu32ll_BFu0s, aBFu1ll_BFu32ll_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu33_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu33_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu33_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1ll_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "aBFu1ll_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "aBFu1ll_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu33_BFu0c, aBFu1ll_BFu33_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu33_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu33_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_BFu33_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "aBFu1ll_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "aBFu1ll_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu33_BFu0i, aBFu1ll_BFu33_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu33_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu33_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_BFu33_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "aBFu1ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "aBFu1ll_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu33_BFu0ll, aBFu1ll_BFu33_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu33_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu33_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_BFu33_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "aBFu1ll_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "aBFu1ll_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu33_BFu0s, aBFu1ll_BFu33_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu7c_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu7c_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu7c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1ll_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1ll_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu7c_BFu0c, aBFu1ll_BFu7c_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu7c_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu7c_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu7c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1ll_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu7c_BFu0i, aBFu1ll_BFu7c_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu7c_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu7c_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu7c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1ll_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu7c_BFu0ll, aBFu1ll_BFu7c_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu7c_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu7c_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu7c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1ll_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu7c_BFu0s, aBFu1ll_BFu7c_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu7i_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu7i_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu7i_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1ll_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1ll_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu7i_BFu0c, aBFu1ll_BFu7i_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu7i_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu7i_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu7i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1ll_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu7i_BFu0i, aBFu1ll_BFu7i_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu7i_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu7i_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu7i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1ll_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu7i_BFu0ll, aBFu1ll_BFu7i_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu7i_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu7i_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu7i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1ll_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu7i_BFu0s, aBFu1ll_BFu7i_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu7ll_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu7ll_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1ll_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1ll_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu7ll_BFu0c, aBFu1ll_BFu7ll_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu7ll_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu7ll_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu7ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1ll_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu7ll_BFu0i, aBFu1ll_BFu7ll_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu7ll_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu7ll_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1ll_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu7ll_BFu0ll, aBFu1ll_BFu7ll_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu7ll_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu7ll_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu7ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1ll_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu7ll_BFu0s, aBFu1ll_BFu7ll_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu7s_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu7s_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu7s_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1ll_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1ll_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu7s_BFu0c, aBFu1ll_BFu7s_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu7s_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu7s_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu7s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1ll_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu7s_BFu0i, aBFu1ll_BFu7s_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu7s_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu7s_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu7s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1ll_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu7s_BFu0ll, aBFu1ll_BFu7s_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu7s_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu7s_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1ll_BFu7s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1ll_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu7s_BFu0s, aBFu1ll_BFu7s_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu8c_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu8c_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu8c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1ll_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu8c_BFu0c, aBFu1ll_BFu8c_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu8c_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu8c_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu8c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1ll_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu8c_BFu0i, aBFu1ll_BFu8c_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu8c_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu8c_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu8c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1ll_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu8c_BFu0ll, aBFu1ll_BFu8c_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu8c_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu8c_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu8c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu8c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1ll_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu8c_BFu0s, aBFu1ll_BFu8c_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu8i_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu8i_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu8i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1ll_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu8i_BFu0c, aBFu1ll_BFu8i_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu8i_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu8i_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu8i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1ll_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu8i_BFu0i, aBFu1ll_BFu8i_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu8i_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu8i_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu8i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1ll_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu8i_BFu0ll, aBFu1ll_BFu8i_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu8i_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu8i_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu8i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu8i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1ll_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu8i_BFu0s, aBFu1ll_BFu8i_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu8ll_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu8ll_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1ll_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu8ll_BFu0c, aBFu1ll_BFu8ll_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu8ll_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu8ll_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu8ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1ll_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu8ll_BFu0i, aBFu1ll_BFu8ll_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu8ll_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu8ll_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1ll_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu8ll_BFu0ll, aBFu1ll_BFu8ll_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu8ll_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu8ll_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu8ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu8ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1ll_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu8ll_BFu0s, aBFu1ll_BFu8ll_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu8s_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu8s_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu8s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1ll_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu8s_BFu0c, aBFu1ll_BFu8s_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu8s_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu8s_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu8s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1ll_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu8s_BFu0i, aBFu1ll_BFu8s_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu8s_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu8s_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu8s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1ll_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu8s_BFu0ll, aBFu1ll_BFu8s_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu8s_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu8s_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu8s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu8s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1ll_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu8s_BFu0s, aBFu1ll_BFu8s_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu9i_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu9i_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu9i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1ll_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu9i_BFu0c, aBFu1ll_BFu9i_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu9i_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu9i_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu9i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1ll_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu9i_BFu0i, aBFu1ll_BFu9i_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu9i_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu9i_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu9i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1ll_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu9i_BFu0ll, aBFu1ll_BFu9i_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu9i_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu9i_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu9i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu9i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1ll_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu9i_BFu0s, aBFu1ll_BFu9i_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu9ll_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu9ll_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1ll_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu9ll_BFu0c, aBFu1ll_BFu9ll_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu9ll_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu9ll_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu9ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1ll_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu9ll_BFu0i, aBFu1ll_BFu9ll_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu9ll_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu9ll_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1ll_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu9ll_BFu0ll, aBFu1ll_BFu9ll_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu9ll_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu9ll_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu9ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1ll_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu9ll_BFu0s, aBFu1ll_BFu9ll_BFu0s)
//============================================================================



static void Test_aBFu1ll_BFu9s_BFu0c()
{
  {
    init_simple_test("aBFu1ll_BFu9s_BFu0c");
    static STRUCT_IF_C aBFu1ll_BFu9s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1ll_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu9s_BFu0c, aBFu1ll_BFu9s_BFu0c)
//============================================================================



static void Test_aBFu1ll_BFu9s_BFu0i()
{
  {
    init_simple_test("aBFu1ll_BFu9s_BFu0i");
    static STRUCT_IF_C aBFu1ll_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_BFu9s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1ll_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu9s_BFu0i, aBFu1ll_BFu9s_BFu0i)
//============================================================================



static void Test_aBFu1ll_BFu9s_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_BFu9s_BFu0ll");
    static STRUCT_IF_C aBFu1ll_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_BFu9s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1ll_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu9s_BFu0ll, aBFu1ll_BFu9s_BFu0ll)
//============================================================================



static void Test_aBFu1ll_BFu9s_BFu0s()
{
  {
    init_simple_test("aBFu1ll_BFu9s_BFu0s");
    static STRUCT_IF_C aBFu1ll_BFu9s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_BFu9s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1ll_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_BFu9s_BFu0s, aBFu1ll_BFu9s_BFu0s)
//============================================================================



static void Test_aBFu1ll_C_BFu0c()
{
  {
    init_simple_test("aBFu1ll_C_BFu0c");
    static STRUCT_IF_C aBFu1ll_C_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_C_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1ll_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_C_BFu0c, aBFu1ll_C_BFu0c)
//============================================================================



static void Test_aBFu1ll_C_BFu0i()
{
  {
    init_simple_test("aBFu1ll_C_BFu0i");
    static STRUCT_IF_C aBFu1ll_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_C_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_C_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1ll_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_C_BFu0i, aBFu1ll_C_BFu0i)
//============================================================================



static void Test_aBFu1ll_C_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_C_BFu0ll");
    static STRUCT_IF_C aBFu1ll_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_C_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_C_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1ll_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_C_BFu0ll, aBFu1ll_C_BFu0ll)
//============================================================================



static void Test_aBFu1ll_C_BFu0s()
{
  {
    init_simple_test("aBFu1ll_C_BFu0s");
    static STRUCT_IF_C aBFu1ll_C_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_C_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_C_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1ll_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_C_BFu0s, aBFu1ll_C_BFu0s)
//============================================================================



static void Test_aBFu1ll_D_BFu0c()
{
  {
    init_simple_test("aBFu1ll_D_BFu0c");
    static STRUCT_IF_C aBFu1ll_D_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1ll_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_D_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1ll_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_D_BFu0c, aBFu1ll_D_BFu0c)
//============================================================================



static void Test_aBFu1ll_D_BFu0i()
{
  {
    init_simple_test("aBFu1ll_D_BFu0i");
    static STRUCT_IF_C aBFu1ll_D_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1ll_D_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_D_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1ll_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_D_BFu0i, aBFu1ll_D_BFu0i)
//============================================================================



static void Test_aBFu1ll_D_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_D_BFu0ll");
    static STRUCT_IF_C aBFu1ll_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1ll_D_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_D_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1ll_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_D_BFu0ll, aBFu1ll_D_BFu0ll)
//============================================================================



static void Test_aBFu1ll_D_BFu0s()
{
  {
    init_simple_test("aBFu1ll_D_BFu0s");
    static STRUCT_IF_C aBFu1ll_D_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1ll_D_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_D_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1ll_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_D_BFu0s, aBFu1ll_D_BFu0s)
//============================================================================



static void Test_aBFu1ll_F_BFu0c()
{
  {
    init_simple_test("aBFu1ll_F_BFu0c");
    static STRUCT_IF_C aBFu1ll_F_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1ll_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_F_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1ll_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_F_BFu0c, aBFu1ll_F_BFu0c)
//============================================================================



static void Test_aBFu1ll_F_BFu0i()
{
  {
    init_simple_test("aBFu1ll_F_BFu0i");
    static STRUCT_IF_C aBFu1ll_F_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_F_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_F_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1ll_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_F_BFu0i, aBFu1ll_F_BFu0i)
//============================================================================



static void Test_aBFu1ll_F_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_F_BFu0ll");
    static STRUCT_IF_C aBFu1ll_F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_F_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_F_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1ll_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_F_BFu0ll, aBFu1ll_F_BFu0ll)
//============================================================================



static void Test_aBFu1ll_F_BFu0s()
{
  {
    init_simple_test("aBFu1ll_F_BFu0s");
    static STRUCT_IF_C aBFu1ll_F_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_F_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_F_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1ll_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_F_BFu0s, aBFu1ll_F_BFu0s)
//============================================================================



static void Test_aBFu1ll_I_BFu0c()
{
  {
    init_simple_test("aBFu1ll_I_BFu0c");
    static STRUCT_IF_C aBFu1ll_I_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1ll_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_I_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1ll_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_I_BFu0c, aBFu1ll_I_BFu0c)
//============================================================================



static void Test_aBFu1ll_I_BFu0i()
{
  {
    init_simple_test("aBFu1ll_I_BFu0i");
    static STRUCT_IF_C aBFu1ll_I_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_I_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_I_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1ll_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_I_BFu0i, aBFu1ll_I_BFu0i)
//============================================================================



static void Test_aBFu1ll_I_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_I_BFu0ll");
    static STRUCT_IF_C aBFu1ll_I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_I_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_I_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1ll_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_I_BFu0ll, aBFu1ll_I_BFu0ll)
//============================================================================



static void Test_aBFu1ll_I_BFu0s()
{
  {
    init_simple_test("aBFu1ll_I_BFu0s");
    static STRUCT_IF_C aBFu1ll_I_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_I_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_I_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1ll_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_I_BFu0s, aBFu1ll_I_BFu0s)
//============================================================================



static void Test_aBFu1ll_Ip_BFu0c()
{
  {
    init_simple_test("aBFu1ll_Ip_BFu0c");
    static STRUCT_IF_C aBFu1ll_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Ip_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1ll_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Ip_BFu0c, aBFu1ll_Ip_BFu0c)
//============================================================================



static void Test_aBFu1ll_Ip_BFu0i()
{
  {
    init_simple_test("aBFu1ll_Ip_BFu0i");
    static STRUCT_IF_C aBFu1ll_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1ll_Ip_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Ip_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1ll_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Ip_BFu0i, aBFu1ll_Ip_BFu0i)
//============================================================================



static void Test_aBFu1ll_Ip_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_Ip_BFu0ll");
    static STRUCT_IF_C aBFu1ll_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu1ll_Ip_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Ip_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1ll_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Ip_BFu0ll, aBFu1ll_Ip_BFu0ll)
//============================================================================



static void Test_aBFu1ll_Ip_BFu0s()
{
  {
    init_simple_test("aBFu1ll_Ip_BFu0s");
    static STRUCT_IF_C aBFu1ll_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1ll_Ip_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Ip_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1ll_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Ip_BFu0s, aBFu1ll_Ip_BFu0s)
//============================================================================



static void Test_aBFu1ll_L_BFu0c()
{
  {
    init_simple_test("aBFu1ll_L_BFu0c");
    static STRUCT_IF_C aBFu1ll_L_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1ll_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_L_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1ll_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_L_BFu0c, aBFu1ll_L_BFu0c)
//============================================================================



static void Test_aBFu1ll_L_BFu0i()
{
  {
    init_simple_test("aBFu1ll_L_BFu0i");
    static STRUCT_IF_C aBFu1ll_L_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1ll_L_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_L_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1ll_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_L_BFu0i, aBFu1ll_L_BFu0i)
//============================================================================



static void Test_aBFu1ll_L_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_L_BFu0ll");
    static STRUCT_IF_C aBFu1ll_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1ll_L_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_L_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1ll_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_L_BFu0ll, aBFu1ll_L_BFu0ll)
//============================================================================



static void Test_aBFu1ll_L_BFu0s()
{
  {
    init_simple_test("aBFu1ll_L_BFu0s");
    static STRUCT_IF_C aBFu1ll_L_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1ll_L_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_L_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1ll_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_L_BFu0s, aBFu1ll_L_BFu0s)
//============================================================================



static void Test_aBFu1ll_S_BFu0c()
{
  {
    init_simple_test("aBFu1ll_S_BFu0c");
    static STRUCT_IF_C aBFu1ll_S_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1ll_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_S_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1ll_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_S_BFu0c, aBFu1ll_S_BFu0c)
//============================================================================



static void Test_aBFu1ll_S_BFu0i()
{
  {
    init_simple_test("aBFu1ll_S_BFu0i");
    static STRUCT_IF_C aBFu1ll_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_S_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_S_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1ll_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_S_BFu0i, aBFu1ll_S_BFu0i)
//============================================================================



static void Test_aBFu1ll_S_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_S_BFu0ll");
    static STRUCT_IF_C aBFu1ll_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_S_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_S_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1ll_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_S_BFu0ll, aBFu1ll_S_BFu0ll)
//============================================================================



static void Test_aBFu1ll_S_BFu0s()
{
  {
    init_simple_test("aBFu1ll_S_BFu0s");
    static STRUCT_IF_C aBFu1ll_S_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_S_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_S_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1ll_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_S_BFu0s, aBFu1ll_S_BFu0s)
//============================================================================



static void Test_aBFu1ll_Uc_BFu0c()
{
  {
    init_simple_test("aBFu1ll_Uc_BFu0c");
    static STRUCT_IF_C aBFu1ll_Uc_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Uc_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1ll_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Uc_BFu0c, aBFu1ll_Uc_BFu0c)
//============================================================================



static void Test_aBFu1ll_Uc_BFu0i()
{
  {
    init_simple_test("aBFu1ll_Uc_BFu0i");
    static STRUCT_IF_C aBFu1ll_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_Uc_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Uc_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1ll_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Uc_BFu0i, aBFu1ll_Uc_BFu0i)
//============================================================================



static void Test_aBFu1ll_Uc_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_Uc_BFu0ll");
    static STRUCT_IF_C aBFu1ll_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_Uc_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Uc_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1ll_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Uc_BFu0ll, aBFu1ll_Uc_BFu0ll)
//============================================================================



static void Test_aBFu1ll_Uc_BFu0s()
{
  {
    init_simple_test("aBFu1ll_Uc_BFu0s");
    static STRUCT_IF_C aBFu1ll_Uc_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1ll_Uc_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Uc_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1ll_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Uc_BFu0s, aBFu1ll_Uc_BFu0s)
//============================================================================



static void Test_aBFu1ll_Ui_BFu0c()
{
  {
    init_simple_test("aBFu1ll_Ui_BFu0c");
    static STRUCT_IF_C aBFu1ll_Ui_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1ll_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Ui_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1ll_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Ui_BFu0c, aBFu1ll_Ui_BFu0c)
//============================================================================



static void Test_aBFu1ll_Ui_BFu0i()
{
  {
    init_simple_test("aBFu1ll_Ui_BFu0i");
    static STRUCT_IF_C aBFu1ll_Ui_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_Ui_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Ui_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1ll_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Ui_BFu0i, aBFu1ll_Ui_BFu0i)
//============================================================================



static void Test_aBFu1ll_Ui_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_Ui_BFu0ll");
    static STRUCT_IF_C aBFu1ll_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1ll_Ui_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Ui_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1ll_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Ui_BFu0ll, aBFu1ll_Ui_BFu0ll)
//============================================================================



static void Test_aBFu1ll_Ui_BFu0s()
{
  {
    init_simple_test("aBFu1ll_Ui_BFu0s");
    static STRUCT_IF_C aBFu1ll_Ui_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1ll_Ui_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Ui_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1ll_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Ui_BFu0s, aBFu1ll_Ui_BFu0s)
//============================================================================



static void Test_aBFu1ll_Ul_BFu0c()
{
  {
    init_simple_test("aBFu1ll_Ul_BFu0c");
    static STRUCT_IF_C aBFu1ll_Ul_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1ll_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Ul_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1ll_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Ul_BFu0c, aBFu1ll_Ul_BFu0c)
//============================================================================



static void Test_aBFu1ll_Ul_BFu0i()
{
  {
    init_simple_test("aBFu1ll_Ul_BFu0i");
    static STRUCT_IF_C aBFu1ll_Ul_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1ll_Ul_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Ul_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1ll_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Ul_BFu0i, aBFu1ll_Ul_BFu0i)
//============================================================================



static void Test_aBFu1ll_Ul_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_Ul_BFu0ll");
    static STRUCT_IF_C aBFu1ll_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1ll_Ul_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Ul_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1ll_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Ul_BFu0ll, aBFu1ll_Ul_BFu0ll)
//============================================================================



static void Test_aBFu1ll_Ul_BFu0s()
{
  {
    init_simple_test("aBFu1ll_Ul_BFu0s");
    static STRUCT_IF_C aBFu1ll_Ul_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1ll_Ul_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Ul_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1ll_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Ul_BFu0s, aBFu1ll_Ul_BFu0s)
//============================================================================



static void Test_aBFu1ll_Us_BFu0c()
{
  {
    init_simple_test("aBFu1ll_Us_BFu0c");
    static STRUCT_IF_C aBFu1ll_Us_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1ll_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Us_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1ll_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Us_BFu0c, aBFu1ll_Us_BFu0c)
//============================================================================



static void Test_aBFu1ll_Us_BFu0i()
{
  {
    init_simple_test("aBFu1ll_Us_BFu0i");
    static STRUCT_IF_C aBFu1ll_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_Us_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Us_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1ll_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Us_BFu0i, aBFu1ll_Us_BFu0i)
//============================================================================



static void Test_aBFu1ll_Us_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_Us_BFu0ll");
    static STRUCT_IF_C aBFu1ll_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1ll_Us_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Us_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1ll_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Us_BFu0ll, aBFu1ll_Us_BFu0ll)
//============================================================================



static void Test_aBFu1ll_Us_BFu0s()
{
  {
    init_simple_test("aBFu1ll_Us_BFu0s");
    static STRUCT_IF_C aBFu1ll_Us_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1ll_Us_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Us_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1ll_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Us_BFu0s, aBFu1ll_Us_BFu0s)
//============================================================================



static void Test_aBFu1ll_Vp_BFu0c()
{
  {
    init_simple_test("aBFu1ll_Vp_BFu0c");
    static STRUCT_IF_C aBFu1ll_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1ll_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Vp_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1ll_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Vp_BFu0c, aBFu1ll_Vp_BFu0c)
//============================================================================



static void Test_aBFu1ll_Vp_BFu0i()
{
  {
    init_simple_test("aBFu1ll_Vp_BFu0i");
    static STRUCT_IF_C aBFu1ll_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1ll_Vp_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Vp_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1ll_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Vp_BFu0i, aBFu1ll_Vp_BFu0i)
//============================================================================



static void Test_aBFu1ll_Vp_BFu0ll()
{
  {
    init_simple_test("aBFu1ll_Vp_BFu0ll");
    static STRUCT_IF_C aBFu1ll_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu1ll_Vp_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Vp_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1ll_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Vp_BFu0ll, aBFu1ll_Vp_BFu0ll)
//============================================================================



static void Test_aBFu1ll_Vp_BFu0s()
{
  {
    init_simple_test("aBFu1ll_Vp_BFu0s");
    static STRUCT_IF_C aBFu1ll_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1ll_Vp_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1ll_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1ll_Vp_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1ll_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1ll_Vp_BFu0s, aBFu1ll_Vp_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c, aBFu1s_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1s_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu0c, aBFu1s_BFu0c_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu0i, aBFu1s_BFu0c_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu0c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu0ll, aBFu1s_BFu0c_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu0c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu0s, aBFu1s_BFu0c_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu15i()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu15i");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu15i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, 1, "aBFu1s_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1s_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu15i, aBFu1s_BFu0c_BFu15i)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu15ll()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu15ll");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, 1, "aBFu1s_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1s_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu15ll, aBFu1s_BFu0c_BFu15ll)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu15s()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu15s");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu15s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, 1, "aBFu1s_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1s_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu15s, aBFu1s_BFu0c_BFu15s)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu16i()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu16i");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1s_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, 1, "aBFu1s_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1s_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu16i, aBFu1s_BFu0c_BFu16i)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu16ll()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu16ll");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1s_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, 1, "aBFu1s_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1s_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu16ll, aBFu1s_BFu0c_BFu16ll)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu16s()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu16s");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1s_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, 1, "aBFu1s_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1s_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu16s, aBFu1s_BFu0c_BFu16s)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu17i()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu17i");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu17i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 17, 1, "aBFu1s_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1s_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu17i, aBFu1s_BFu0c_BFu17i)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu17ll()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu17ll");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 17, 1, "aBFu1s_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1s_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu17ll, aBFu1s_BFu0c_BFu17ll)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu1c()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu1c");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu1c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 1, 1, "aBFu1s_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu1c, aBFu1s_BFu0c_BFu1c)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu1i()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu1i");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu1i lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 1, 1, "aBFu1s_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu1i, aBFu1s_BFu0c_BFu1i)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu1ll()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu1ll");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 1, 1, "aBFu1s_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu1ll, aBFu1s_BFu0c_BFu1ll)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu1s()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu1s");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu1s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 1, 1, "aBFu1s_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu1s, aBFu1s_BFu0c_BFu1s)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu31i()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu31i");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu31i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 31, 1, "aBFu1s_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1s_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu31i, aBFu1s_BFu0c_BFu31i)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu31ll()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu31ll");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 31, 1, "aBFu1s_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1s_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu31ll, aBFu1s_BFu0c_BFu31ll)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu32i()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu32i");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1s_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 32, 1, "aBFu1s_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1s_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu32i, aBFu1s_BFu0c_BFu32i)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu32ll()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu32ll");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1s_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 32, 1, "aBFu1s_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1s_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu32ll, aBFu1s_BFu0c_BFu32ll)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu33()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu33");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu33 lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 33, 1, "aBFu1s_BFu0c_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu1s_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu33, aBFu1s_BFu0c_BFu33)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu7c()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu7c");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu7c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, 1, "aBFu1s_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1s_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu7c, aBFu1s_BFu0c_BFu7c)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu7i()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu7i");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu7i lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, 1, "aBFu1s_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1s_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu7i, aBFu1s_BFu0c_BFu7i)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu7ll()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu7ll");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, 1, "aBFu1s_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1s_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu7ll, aBFu1s_BFu0c_BFu7ll)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu7s()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu7s");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu7s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, 1, "aBFu1s_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1s_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu7s, aBFu1s_BFu0c_BFu7s)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu8c()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu8c");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, 1, "aBFu1s_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1s_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu8c, aBFu1s_BFu0c_BFu8c)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu8i()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu8i");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, 1, "aBFu1s_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1s_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu8i, aBFu1s_BFu0c_BFu8i)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu8ll()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu8ll");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, 1, "aBFu1s_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1s_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu8ll, aBFu1s_BFu0c_BFu8ll)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu8s()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu8s");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, 1, "aBFu1s_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1s_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu8s, aBFu1s_BFu0c_BFu8s)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu9i()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu9i");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu9i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, 1, "aBFu1s_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1s_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu9i, aBFu1s_BFu0c_BFu9i)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu9ll()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu9ll");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, 1, "aBFu1s_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1s_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu9ll, aBFu1s_BFu0c_BFu9ll)
//============================================================================



static void Test_aBFu1s_BFu0c_BFu9s()
{
  {
    init_simple_test("aBFu1s_BFu0c_BFu9s");
    static STRUCT_IF_C aBFu1s_BFu0c_BFu9s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, 1, "aBFu1s_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(1,1), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1s_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_BFu9s, aBFu1s_BFu0c_BFu9s)
//============================================================================



static void Test_aBFu1s_BFu0c_C()
{
  {
    init_simple_test("aBFu1s_BFu0c_C");
    static STRUCT_IF_C aBFu1s_BFu0c_C lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_C");
    check_field_offset(lv, v2, 1, "aBFu1s_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_C, aBFu1s_BFu0c_C)
//============================================================================



static void Test_aBFu1s_BFu0c_D()
{
  {
    init_simple_test("aBFu1s_BFu0c_D");
    static STRUCT_IF_C aBFu1s_BFu0c_D lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1s_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_D");
    check_field_offset(lv, v2, 1, "aBFu1s_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_D, aBFu1s_BFu0c_D)
//============================================================================



static void Test_aBFu1s_BFu0c_F()
{
  {
    init_simple_test("aBFu1s_BFu0c_F");
    static STRUCT_IF_C aBFu1s_BFu0c_F lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1s_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_F");
    check_field_offset(lv, v2, 1, "aBFu1s_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_F, aBFu1s_BFu0c_F)
//============================================================================



static void Test_aBFu1s_BFu0c_I()
{
  {
    init_simple_test("aBFu1s_BFu0c_I");
    static STRUCT_IF_C aBFu1s_BFu0c_I lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1s_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_I");
    check_field_offset(lv, v2, 1, "aBFu1s_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_I, aBFu1s_BFu0c_I)
//============================================================================



static void Test_aBFu1s_BFu0c_Ip()
{
  {
    init_simple_test("aBFu1s_BFu0c_Ip");
    static STRUCT_IF_C aBFu1s_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_Ip");
    check_field_offset(lv, v2, 1, "aBFu1s_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_Ip, aBFu1s_BFu0c_Ip)
//============================================================================



static void Test_aBFu1s_BFu0c_L()
{
  {
    init_simple_test("aBFu1s_BFu0c_L");
    static STRUCT_IF_C aBFu1s_BFu0c_L lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1s_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_L");
    check_field_offset(lv, v2, 1, "aBFu1s_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_L, aBFu1s_BFu0c_L)
//============================================================================



static void Test_aBFu1s_BFu0c_S()
{
  {
    init_simple_test("aBFu1s_BFu0c_S");
    static STRUCT_IF_C aBFu1s_BFu0c_S lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1s_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_S");
    check_field_offset(lv, v2, 1, "aBFu1s_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_S, aBFu1s_BFu0c_S)
//============================================================================



static void Test_aBFu1s_BFu0c_Uc()
{
  {
    init_simple_test("aBFu1s_BFu0c_Uc");
    static STRUCT_IF_C aBFu1s_BFu0c_Uc lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_Uc");
    check_field_offset(lv, v2, 1, "aBFu1s_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_Uc, aBFu1s_BFu0c_Uc)
//============================================================================



static void Test_aBFu1s_BFu0c_Ui()
{
  {
    init_simple_test("aBFu1s_BFu0c_Ui");
    static STRUCT_IF_C aBFu1s_BFu0c_Ui lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1s_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_Ui");
    check_field_offset(lv, v2, 1, "aBFu1s_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_Ui, aBFu1s_BFu0c_Ui)
//============================================================================



static void Test_aBFu1s_BFu0c_Ul()
{
  {
    init_simple_test("aBFu1s_BFu0c_Ul");
    static STRUCT_IF_C aBFu1s_BFu0c_Ul lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1s_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_Ul");
    check_field_offset(lv, v2, 1, "aBFu1s_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_Ul, aBFu1s_BFu0c_Ul)
//============================================================================



static void Test_aBFu1s_BFu0c_Us()
{
  {
    init_simple_test("aBFu1s_BFu0c_Us");
    static STRUCT_IF_C aBFu1s_BFu0c_Us lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1s_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_Us");
    check_field_offset(lv, v2, 1, "aBFu1s_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_Us, aBFu1s_BFu0c_Us)
//============================================================================



static void Test_aBFu1s_BFu0c_Vp()
{
  {
    init_simple_test("aBFu1s_BFu0c_Vp");
    static STRUCT_IF_C aBFu1s_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0c_Vp");
    check_field_offset(lv, v2, 1, "aBFu1s_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0c_Vp, aBFu1s_BFu0c_Vp)
//============================================================================



static void Test_aBFu1s_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i, aBFu1s_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu0c, aBFu1s_BFu0i_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu0i, aBFu1s_BFu0i_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu0i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu0ll, aBFu1s_BFu0i_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu0s, aBFu1s_BFu0i_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu15i()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu15i");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu1s_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1s_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu15i, aBFu1s_BFu0i_BFu15i)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu15ll()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu15ll");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu1s_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1s_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu15ll, aBFu1s_BFu0i_BFu15ll)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu15s()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu15s");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu1s_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1s_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu15s, aBFu1s_BFu0i_BFu15s)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu16i()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu16i");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu1s_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1s_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu16i, aBFu1s_BFu0i_BFu16i)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu16ll()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu16ll");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu1s_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1s_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu16ll, aBFu1s_BFu0i_BFu16ll)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu16s()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu16s");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu1s_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1s_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu16s, aBFu1s_BFu0i_BFu16s)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu17i()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu17i");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu1s_BFu0i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu1s_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1s_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu17i, aBFu1s_BFu0i_BFu17i)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu17ll()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu17ll");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu1s_BFu0i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu1s_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1s_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu17ll, aBFu1s_BFu0i_BFu17ll)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu1c()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu1c");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu1s_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu1c, aBFu1s_BFu0i_BFu1c)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu1i()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu1i");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu1s_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu1i, aBFu1s_BFu0i_BFu1i)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu1ll()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu1ll");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu1s_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu1ll, aBFu1s_BFu0i_BFu1ll)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu1s()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu1s");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu1s_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu1s, aBFu1s_BFu0i_BFu1s)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu31i()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu31i");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu31i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_BFu0i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu1s_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1s_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu31i, aBFu1s_BFu0i_BFu31i)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu31ll()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu31ll");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_BFu0i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu1s_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1s_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu31ll, aBFu1s_BFu0i_BFu31ll)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu32i()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu32i");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu32i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_BFu0i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu1s_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1s_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu32i, aBFu1s_BFu0i_BFu32i)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu32ll()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu32ll");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_BFu0i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu1s_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1s_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu32ll, aBFu1s_BFu0i_BFu32ll)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu33()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu33");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(aBFu1s_BFu0i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, 1, "aBFu1s_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu1s_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu33, aBFu1s_BFu0i_BFu33)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu7c()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu7c");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu1s_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1s_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu7c, aBFu1s_BFu0i_BFu7c)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu7i()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu7i");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu1s_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1s_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu7i, aBFu1s_BFu0i_BFu7i)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu7ll()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu7ll");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu1s_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1s_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu7ll, aBFu1s_BFu0i_BFu7ll)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu7s()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu7s");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu1s_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1s_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu7s, aBFu1s_BFu0i_BFu7s)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu8c()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu8c");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu1s_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1s_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu8c, aBFu1s_BFu0i_BFu8c)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu8i()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu8i");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu1s_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1s_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu8i, aBFu1s_BFu0i_BFu8i)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu8ll()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu8ll");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu1s_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1s_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu8ll, aBFu1s_BFu0i_BFu8ll)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu8s()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu8s");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu1s_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1s_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu8s, aBFu1s_BFu0i_BFu8s)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu9i()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu9i");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu1s_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1s_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu9i, aBFu1s_BFu0i_BFu9i)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu9ll()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu9ll");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu1s_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1s_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu9ll, aBFu1s_BFu0i_BFu9ll)
//============================================================================



static void Test_aBFu1s_BFu0i_BFu9s()
{
  {
    init_simple_test("aBFu1s_BFu0i_BFu9s");
    static STRUCT_IF_C aBFu1s_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu1s_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1s_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_BFu9s, aBFu1s_BFu0i_BFu9s)
//============================================================================



static void Test_aBFu1s_BFu0i_C()
{
  {
    init_simple_test("aBFu1s_BFu0i_C");
    static STRUCT_IF_C aBFu1s_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_C");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1s_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_C, aBFu1s_BFu0i_C)
//============================================================================



static void Test_aBFu1s_BFu0i_D()
{
  {
    init_simple_test("aBFu1s_BFu0i_D");
    static STRUCT_IF_C aBFu1s_BFu0i_D lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1s_BFu0i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_D");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1s_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_D, aBFu1s_BFu0i_D)
//============================================================================



static void Test_aBFu1s_BFu0i_F()
{
  {
    init_simple_test("aBFu1s_BFu0i_F");
    static STRUCT_IF_C aBFu1s_BFu0i_F lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_BFu0i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_F");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1s_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_F, aBFu1s_BFu0i_F)
//============================================================================



static void Test_aBFu1s_BFu0i_I()
{
  {
    init_simple_test("aBFu1s_BFu0i_I");
    static STRUCT_IF_C aBFu1s_BFu0i_I lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_BFu0i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_I");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1s_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_I, aBFu1s_BFu0i_I)
//============================================================================



static void Test_aBFu1s_BFu0i_Ip()
{
  {
    init_simple_test("aBFu1s_BFu0i_Ip");
    static STRUCT_IF_C aBFu1s_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1s_BFu0i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_Ip");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1s_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_Ip, aBFu1s_BFu0i_Ip)
//============================================================================



static void Test_aBFu1s_BFu0i_L()
{
  {
    init_simple_test("aBFu1s_BFu0i_L");
    static STRUCT_IF_C aBFu1s_BFu0i_L lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1s_BFu0i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_L");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1s_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_L, aBFu1s_BFu0i_L)
//============================================================================



static void Test_aBFu1s_BFu0i_S()
{
  {
    init_simple_test("aBFu1s_BFu0i_S");
    static STRUCT_IF_C aBFu1s_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_S");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1s_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_S, aBFu1s_BFu0i_S)
//============================================================================



static void Test_aBFu1s_BFu0i_Uc()
{
  {
    init_simple_test("aBFu1s_BFu0i_Uc");
    static STRUCT_IF_C aBFu1s_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_Uc");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1s_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_Uc, aBFu1s_BFu0i_Uc)
//============================================================================



static void Test_aBFu1s_BFu0i_Ui()
{
  {
    init_simple_test("aBFu1s_BFu0i_Ui");
    static STRUCT_IF_C aBFu1s_BFu0i_Ui lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_BFu0i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_Ui");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1s_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_Ui, aBFu1s_BFu0i_Ui)
//============================================================================



static void Test_aBFu1s_BFu0i_Ul()
{
  {
    init_simple_test("aBFu1s_BFu0i_Ul");
    static STRUCT_IF_C aBFu1s_BFu0i_Ul lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1s_BFu0i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_Ul");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1s_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_Ul, aBFu1s_BFu0i_Ul)
//============================================================================



static void Test_aBFu1s_BFu0i_Us()
{
  {
    init_simple_test("aBFu1s_BFu0i_Us");
    static STRUCT_IF_C aBFu1s_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_Us");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1s_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_Us, aBFu1s_BFu0i_Us)
//============================================================================



static void Test_aBFu1s_BFu0i_Vp()
{
  {
    init_simple_test("aBFu1s_BFu0i_Vp");
    static STRUCT_IF_C aBFu1s_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1s_BFu0i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0i_Vp");
    check_field_offset(lv, v2, ABISELECT(4,4), "aBFu1s_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0i_Vp, aBFu1s_BFu0i_Vp)
//============================================================================



static void Test_aBFu1s_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll, aBFu1s_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu0ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu0c, aBFu1s_BFu0ll_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu0ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu0i, aBFu1s_BFu0ll_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu0ll, aBFu1s_BFu0ll_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu0ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu0s, aBFu1s_BFu0ll_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu15i()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu15i");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1s_BFu0ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu1s_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1s_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu15i, aBFu1s_BFu0ll_BFu15i)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu15ll()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu15ll");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1s_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu1s_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1s_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu15ll, aBFu1s_BFu0ll_BFu15ll)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu15s()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu15s");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1s_BFu0ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu1s_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1s_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu15s, aBFu1s_BFu0ll_BFu15s)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu16i()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu16i");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1s_BFu0ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu1s_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1s_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu16i, aBFu1s_BFu0ll_BFu16i)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu16ll()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu16ll");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1s_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu1s_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1s_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu16ll, aBFu1s_BFu0ll_BFu16ll)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu16s()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu16s");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1s_BFu0ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu1s_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1s_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu16s, aBFu1s_BFu0ll_BFu16s)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu17i()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu17i");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu1s_BFu0ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, 1, "aBFu1s_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1s_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu17i, aBFu1s_BFu0ll_BFu17i)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu17ll()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu17ll");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu1s_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, 1, "aBFu1s_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1s_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu17ll, aBFu1s_BFu0ll_BFu17ll)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu1c()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu1c");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_BFu0ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu1s_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu1c, aBFu1s_BFu0ll_BFu1c)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu1i()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu1i");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_BFu0ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu1s_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu1i, aBFu1s_BFu0ll_BFu1i)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu1ll()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu1ll");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu1s_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu1ll, aBFu1s_BFu0ll_BFu1ll)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu1s()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu1s");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_BFu0ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu1s_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu1s, aBFu1s_BFu0ll_BFu1s)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu31i()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu31i");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1s_BFu0ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, 1, "aBFu1s_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1s_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu31i, aBFu1s_BFu0ll_BFu31i)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu31ll()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu31ll");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1s_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, 1, "aBFu1s_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1s_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu31ll, aBFu1s_BFu0ll_BFu31ll)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu32i()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu32i");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1s_BFu0ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, 1, "aBFu1s_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1s_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu32i, aBFu1s_BFu0ll_BFu32i)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu32ll()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu32ll");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1s_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, 1, "aBFu1s_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1s_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu32ll, aBFu1s_BFu0ll_BFu32ll)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu33()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu33");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aBFu1s_BFu0ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 33, 1, "aBFu1s_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu1s_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu33, aBFu1s_BFu0ll_BFu33)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu7c()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu7c");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_BFu0ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu1s_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1s_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu7c, aBFu1s_BFu0ll_BFu7c)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu7i()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu7i");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_BFu0ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu1s_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1s_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu7i, aBFu1s_BFu0ll_BFu7i)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu7ll()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu7ll");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu1s_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1s_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu7ll, aBFu1s_BFu0ll_BFu7ll)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu7s()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu7s");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_BFu0ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu1s_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1s_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu7s, aBFu1s_BFu0ll_BFu7s)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu8c()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu8c");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_BFu0ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu1s_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1s_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu8c, aBFu1s_BFu0ll_BFu8c)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu8i()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu8i");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_BFu0ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu1s_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1s_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu8i, aBFu1s_BFu0ll_BFu8i)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu8ll()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu8ll");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu1s_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1s_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu8ll, aBFu1s_BFu0ll_BFu8ll)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu8s()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu8s");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_BFu0ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu1s_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1s_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu8s, aBFu1s_BFu0ll_BFu8s)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu9i()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu9i");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1s_BFu0ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu1s_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1s_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu9i, aBFu1s_BFu0ll_BFu9i)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu9ll()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu9ll");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1s_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu1s_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1s_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu9ll, aBFu1s_BFu0ll_BFu9ll)
//============================================================================



static void Test_aBFu1s_BFu0ll_BFu9s()
{
  {
    init_simple_test("aBFu1s_BFu0ll_BFu9s");
    static STRUCT_IF_C aBFu1s_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1s_BFu0ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu1s_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1s_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_BFu9s, aBFu1s_BFu0ll_BFu9s)
//============================================================================



static void Test_aBFu1s_BFu0ll_C()
{
  {
    init_simple_test("aBFu1s_BFu0ll_C");
    static STRUCT_IF_C aBFu1s_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_BFu0ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1s_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_C, aBFu1s_BFu0ll_C)
//============================================================================



static void Test_aBFu1s_BFu0ll_D()
{
  {
    init_simple_test("aBFu1s_BFu0ll_D");
    static STRUCT_IF_C aBFu1s_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1s_BFu0ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1s_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_D, aBFu1s_BFu0ll_D)
//============================================================================



static void Test_aBFu1s_BFu0ll_F()
{
  {
    init_simple_test("aBFu1s_BFu0ll_F");
    static STRUCT_IF_C aBFu1s_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1s_BFu0ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1s_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_F, aBFu1s_BFu0ll_F)
//============================================================================



static void Test_aBFu1s_BFu0ll_I()
{
  {
    init_simple_test("aBFu1s_BFu0ll_I");
    static STRUCT_IF_C aBFu1s_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1s_BFu0ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1s_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_I, aBFu1s_BFu0ll_I)
//============================================================================



static void Test_aBFu1s_BFu0ll_Ip()
{
  {
    init_simple_test("aBFu1s_BFu0ll_Ip");
    static STRUCT_IF_C aBFu1s_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu1s_BFu0ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1s_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_Ip, aBFu1s_BFu0ll_Ip)
//============================================================================



static void Test_aBFu1s_BFu0ll_L()
{
  {
    init_simple_test("aBFu1s_BFu0ll_L");
    static STRUCT_IF_C aBFu1s_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1s_BFu0ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1s_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_L, aBFu1s_BFu0ll_L)
//============================================================================



static void Test_aBFu1s_BFu0ll_S()
{
  {
    init_simple_test("aBFu1s_BFu0ll_S");
    static STRUCT_IF_C aBFu1s_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1s_BFu0ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1s_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_S, aBFu1s_BFu0ll_S)
//============================================================================



static void Test_aBFu1s_BFu0ll_Uc()
{
  {
    init_simple_test("aBFu1s_BFu0ll_Uc");
    static STRUCT_IF_C aBFu1s_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_BFu0ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1s_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_Uc, aBFu1s_BFu0ll_Uc)
//============================================================================



static void Test_aBFu1s_BFu0ll_Ui()
{
  {
    init_simple_test("aBFu1s_BFu0ll_Ui");
    static STRUCT_IF_C aBFu1s_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1s_BFu0ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1s_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_Ui, aBFu1s_BFu0ll_Ui)
//============================================================================



static void Test_aBFu1s_BFu0ll_Ul()
{
  {
    init_simple_test("aBFu1s_BFu0ll_Ul");
    static STRUCT_IF_C aBFu1s_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1s_BFu0ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1s_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_Ul, aBFu1s_BFu0ll_Ul)
//============================================================================



static void Test_aBFu1s_BFu0ll_Us()
{
  {
    init_simple_test("aBFu1s_BFu0ll_Us");
    static STRUCT_IF_C aBFu1s_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1s_BFu0ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1s_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_Us, aBFu1s_BFu0ll_Us)
//============================================================================



static void Test_aBFu1s_BFu0ll_Vp()
{
  {
    init_simple_test("aBFu1s_BFu0ll_Vp");
    static STRUCT_IF_C aBFu1s_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu1s_BFu0ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu1s_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0ll_Vp, aBFu1s_BFu0ll_Vp)
//============================================================================



static void Test_aBFu1s_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s, aBFu1s_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu0s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu0c, aBFu1s_BFu0s_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu0i, aBFu1s_BFu0s_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu0s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu0ll, aBFu1s_BFu0s_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu0s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu0s, aBFu1s_BFu0s_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu15i()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu15i");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu15i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, 1, "aBFu1s_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1s_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu15i, aBFu1s_BFu0s_BFu15i)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu15ll()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu15ll");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, 1, "aBFu1s_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1s_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu15ll, aBFu1s_BFu0s_BFu15ll)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu15s()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu15s");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu15s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, 1, "aBFu1s_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu1s_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu15s, aBFu1s_BFu0s_BFu15s)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu16i()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu16i");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu16i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, 1, "aBFu1s_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1s_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu16i, aBFu1s_BFu0s_BFu16i)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu16ll()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu16ll");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, 1, "aBFu1s_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1s_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu16ll, aBFu1s_BFu0s_BFu16ll)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu16s()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu16s");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu16s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, 1, "aBFu1s_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu1s_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu16s, aBFu1s_BFu0s_BFu16s)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu17i()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu17i");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 17, 1, "aBFu1s_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1s_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu17i, aBFu1s_BFu0s_BFu17i)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu17ll()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu17ll");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu1s_BFu0s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 17, 1, "aBFu1s_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu1s_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu17ll, aBFu1s_BFu0s_BFu17ll)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu1c()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu1c");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 1, 1, "aBFu1s_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu1c, aBFu1s_BFu0s_BFu1c)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu1i()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu1i");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 1, 1, "aBFu1s_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu1i, aBFu1s_BFu0s_BFu1i)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu1ll()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu1ll");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 1, 1, "aBFu1s_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu1ll, aBFu1s_BFu0s_BFu1ll)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu1s()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu1s");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 1, 1, "aBFu1s_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu1s, aBFu1s_BFu0s_BFu1s)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu31i()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu31i");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu31i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 31, 1, "aBFu1s_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1s_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu31i, aBFu1s_BFu0s_BFu31i)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu31ll()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu31ll");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 31, 1, "aBFu1s_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu1s_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu31ll, aBFu1s_BFu0s_BFu31ll)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu32i()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu32i");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu32i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 32, 1, "aBFu1s_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1s_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu32i, aBFu1s_BFu0s_BFu32i)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu32ll()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu32ll");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 32, 1, "aBFu1s_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu1s_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu32ll, aBFu1s_BFu0s_BFu32ll)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu33()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu33");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu1s_BFu0s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 33, 1, "aBFu1s_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu1s_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu33, aBFu1s_BFu0s_BFu33)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu7c()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu7c");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, 1, "aBFu1s_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1s_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu7c, aBFu1s_BFu0s_BFu7c)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu7i()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu7i");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, 1, "aBFu1s_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1s_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu7i, aBFu1s_BFu0s_BFu7i)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu7ll()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu7ll");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, 1, "aBFu1s_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1s_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu7ll, aBFu1s_BFu0s_BFu7ll)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu7s()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu7s");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, 1, "aBFu1s_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu1s_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu7s, aBFu1s_BFu0s_BFu7s)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu8c()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu8c");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, 1, "aBFu1s_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1s_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu8c, aBFu1s_BFu0s_BFu8c)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu8i()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu8i");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, 1, "aBFu1s_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1s_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu8i, aBFu1s_BFu0s_BFu8i)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu8ll()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu8ll");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, 1, "aBFu1s_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1s_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu8ll, aBFu1s_BFu0s_BFu8ll)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu8s()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu8s");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, 1, "aBFu1s_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu1s_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu8s, aBFu1s_BFu0s_BFu8s)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu9i()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu9i");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu9i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, 1, "aBFu1s_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1s_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu9i, aBFu1s_BFu0s_BFu9i)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu9ll()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu9ll");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, 1, "aBFu1s_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1s_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu9ll, aBFu1s_BFu0s_BFu9ll)
//============================================================================



static void Test_aBFu1s_BFu0s_BFu9s()
{
  {
    init_simple_test("aBFu1s_BFu0s_BFu9s");
    static STRUCT_IF_C aBFu1s_BFu0s_BFu9s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, 1, "aBFu1s_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu1s_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_BFu9s, aBFu1s_BFu0s_BFu9s)
//============================================================================



static void Test_aBFu1s_BFu0s_C()
{
  {
    init_simple_test("aBFu1s_BFu0s_C");
    static STRUCT_IF_C aBFu1s_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_C");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1s_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_C, aBFu1s_BFu0s_C)
//============================================================================



static void Test_aBFu1s_BFu0s_D()
{
  {
    init_simple_test("aBFu1s_BFu0s_D");
    static STRUCT_IF_C aBFu1s_BFu0s_D lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1s_BFu0s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_D");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1s_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_D, aBFu1s_BFu0s_D)
//============================================================================



static void Test_aBFu1s_BFu0s_F()
{
  {
    init_simple_test("aBFu1s_BFu0s_F");
    static STRUCT_IF_C aBFu1s_BFu0s_F lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_F");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1s_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_F, aBFu1s_BFu0s_F)
//============================================================================



static void Test_aBFu1s_BFu0s_I()
{
  {
    init_simple_test("aBFu1s_BFu0s_I");
    static STRUCT_IF_C aBFu1s_BFu0s_I lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_I");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1s_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_I, aBFu1s_BFu0s_I)
//============================================================================



static void Test_aBFu1s_BFu0s_Ip()
{
  {
    init_simple_test("aBFu1s_BFu0s_Ip");
    static STRUCT_IF_C aBFu1s_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1s_BFu0s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_Ip");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1s_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_Ip, aBFu1s_BFu0s_Ip)
//============================================================================



static void Test_aBFu1s_BFu0s_L()
{
  {
    init_simple_test("aBFu1s_BFu0s_L");
    static STRUCT_IF_C aBFu1s_BFu0s_L lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1s_BFu0s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_L");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1s_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_L, aBFu1s_BFu0s_L)
//============================================================================



static void Test_aBFu1s_BFu0s_S()
{
  {
    init_simple_test("aBFu1s_BFu0s_S");
    static STRUCT_IF_C aBFu1s_BFu0s_S lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_S");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1s_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_S, aBFu1s_BFu0s_S)
//============================================================================



static void Test_aBFu1s_BFu0s_Uc()
{
  {
    init_simple_test("aBFu1s_BFu0s_Uc");
    static STRUCT_IF_C aBFu1s_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(aBFu1s_BFu0s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_Uc");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1s_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_Uc, aBFu1s_BFu0s_Uc)
//============================================================================



static void Test_aBFu1s_BFu0s_Ui()
{
  {
    init_simple_test("aBFu1s_BFu0s_Ui");
    static STRUCT_IF_C aBFu1s_BFu0s_Ui lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu0s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_Ui");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1s_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_Ui, aBFu1s_BFu0s_Ui)
//============================================================================



static void Test_aBFu1s_BFu0s_Ul()
{
  {
    init_simple_test("aBFu1s_BFu0s_Ul");
    static STRUCT_IF_C aBFu1s_BFu0s_Ul lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1s_BFu0s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_Ul");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1s_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_Ul, aBFu1s_BFu0s_Ul)
//============================================================================



static void Test_aBFu1s_BFu0s_Us()
{
  {
    init_simple_test("aBFu1s_BFu0s_Us");
    static STRUCT_IF_C aBFu1s_BFu0s_Us lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu0s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_Us");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1s_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_Us, aBFu1s_BFu0s_Us)
//============================================================================



static void Test_aBFu1s_BFu0s_Vp()
{
  {
    init_simple_test("aBFu1s_BFu0s_Vp");
    static STRUCT_IF_C aBFu1s_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1s_BFu0s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu0s_Vp");
    check_field_offset(lv, v2, ABISELECT(2,2), "aBFu1s_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu0s_Vp, aBFu1s_BFu0s_Vp)
//============================================================================



static void Test_aBFu1s_BFu15i_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu15i_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu15i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1s_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1s_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu15i_BFu0c, aBFu1s_BFu15i_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu15i_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu15i_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu15i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1s_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1s_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu15i_BFu0i, aBFu1s_BFu15i_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu15i_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu15i_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu15i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1s_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1s_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu15i_BFu0ll, aBFu1s_BFu15i_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu15i_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu15i_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu15i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu15i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1s_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1s_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu15i_BFu0s, aBFu1s_BFu15i_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu15ll_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu15ll_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1s_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1s_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu15ll_BFu0c, aBFu1s_BFu15ll_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu15ll_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu15ll_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu15ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1s_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1s_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu15ll_BFu0i, aBFu1s_BFu15ll_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu15ll_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu15ll_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1s_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1s_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu15ll_BFu0ll, aBFu1s_BFu15ll_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu15ll_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu15ll_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu15ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1s_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1s_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu15ll_BFu0s, aBFu1s_BFu15ll_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu15s_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu15s_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu15s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1s_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1s_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu15s_BFu0c, aBFu1s_BFu15s_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu15s_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu15s_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu15s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1s_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1s_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu15s_BFu0i, aBFu1s_BFu15s_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu15s_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu15s_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu15s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1s_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1s_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu15s_BFu0ll, aBFu1s_BFu15s_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu15s_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu15s_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu15s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu15s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "aBFu1s_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "aBFu1s_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu15s_BFu0s, aBFu1s_BFu15s_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu16i_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu16i_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu16i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1s_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1s_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1s_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu16i_BFu0c, aBFu1s_BFu16i_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu16i_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu16i_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu16i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1s_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1s_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu16i_BFu0i, aBFu1s_BFu16i_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu16i_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu16i_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu16i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1s_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1s_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu16i_BFu0ll, aBFu1s_BFu16i_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu16i_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu16i_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu16i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu16i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1s_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1s_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu16i_BFu0s, aBFu1s_BFu16i_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu16ll_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu16ll_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1s_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1s_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1s_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu16ll_BFu0c, aBFu1s_BFu16ll_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu16ll_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu16ll_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu16ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1s_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1s_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu16ll_BFu0i, aBFu1s_BFu16ll_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu16ll_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu16ll_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1s_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1s_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu16ll_BFu0ll, aBFu1s_BFu16ll_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu16ll_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu16ll_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu16ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu16ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1s_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1s_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu16ll_BFu0s, aBFu1s_BFu16ll_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu16s_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu16s_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu16s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1s_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1s_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1s_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu16s_BFu0c, aBFu1s_BFu16s_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu16s_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu16s_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu16s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1s_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1s_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu16s_BFu0i, aBFu1s_BFu16s_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu16s_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu16s_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu16s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1s_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1s_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu16s_BFu0ll, aBFu1s_BFu16s_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu16s_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu16s_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu16s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu16s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "aBFu1s_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "aBFu1s_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu16s_BFu0s, aBFu1s_BFu16s_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu17i_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu17i_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu17i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1s_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1s_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1s_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu17i_BFu0c, aBFu1s_BFu17i_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu17i_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu17i_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu17i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1s_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1s_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu17i_BFu0i, aBFu1s_BFu17i_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu17i_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu17i_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu17i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1s_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1s_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu17i_BFu0ll, aBFu1s_BFu17i_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu17i_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu17i_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu17i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1s_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1s_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu17i_BFu0s, aBFu1s_BFu17i_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu17ll_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu17ll_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1s_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1s_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1s_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu17ll_BFu0c, aBFu1s_BFu17ll_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu17ll_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu17ll_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu17ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1s_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1s_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu17ll_BFu0i, aBFu1s_BFu17ll_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu17ll_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu17ll_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1s_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1s_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu17ll_BFu0ll, aBFu1s_BFu17ll_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu17ll_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu17ll_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu17ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "aBFu1s_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "aBFu1s_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu17ll_BFu0s, aBFu1s_BFu17ll_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu1c_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu1c_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu1c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1s_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1s_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu1c_BFu0c, aBFu1s_BFu1c_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu1c_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu1c_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu1c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1s_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu1c_BFu0i, aBFu1s_BFu1c_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu1c_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu1c_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu1c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1s_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu1c_BFu0ll, aBFu1s_BFu1c_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu1c_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu1c_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu1c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1s_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu1c_BFu0s, aBFu1s_BFu1c_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu1i_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu1i_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu1i_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1s_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1s_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu1i_BFu0c, aBFu1s_BFu1i_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu1i_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu1i_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu1i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1s_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu1i_BFu0i, aBFu1s_BFu1i_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu1i_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu1i_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu1i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1s_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu1i_BFu0ll, aBFu1s_BFu1i_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu1i_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu1i_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu1i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1s_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu1i_BFu0s, aBFu1s_BFu1i_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu1ll_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu1ll_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1s_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1s_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu1ll_BFu0c, aBFu1s_BFu1ll_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu1ll_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu1ll_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu1ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1s_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu1ll_BFu0i, aBFu1s_BFu1ll_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu1ll_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu1ll_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1s_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu1ll_BFu0ll, aBFu1s_BFu1ll_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu1ll_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu1ll_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu1ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1s_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu1ll_BFu0s, aBFu1s_BFu1ll_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu1s_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu1s_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu1s_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1s_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1s_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu1s_BFu0c, aBFu1s_BFu1s_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu1s_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu1s_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu1s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1s_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu1s_BFu0i, aBFu1s_BFu1s_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu1s_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu1s_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu1s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1s_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu1s_BFu0ll, aBFu1s_BFu1s_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu1s_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu1s_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu1s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "aBFu1s_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu1s_BFu0s, aBFu1s_BFu1s_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu31i_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu31i_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu31i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1s_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1s_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1s_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu31i_BFu0c, aBFu1s_BFu31i_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu31i_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu31i_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu31i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1s_BFu31i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1s_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1s_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu31i_BFu0i, aBFu1s_BFu31i_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu31i_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu31i_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu31i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1s_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1s_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu31i_BFu0ll, aBFu1s_BFu31i_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu31i_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu31i_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu31i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1s_BFu31i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1s_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1s_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu31i_BFu0s, aBFu1s_BFu31i_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu31ll_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu31ll_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1s_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1s_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1s_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu31ll_BFu0c, aBFu1s_BFu31ll_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu31ll_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu31ll_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1s_BFu31ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1s_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1s_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu31ll_BFu0i, aBFu1s_BFu31ll_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu31ll_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu31ll_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1s_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1s_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu31ll_BFu0ll, aBFu1s_BFu31ll_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu31ll_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu31ll_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu1s_BFu31ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "aBFu1s_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "aBFu1s_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu31ll_BFu0s, aBFu1s_BFu31ll_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu32i_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu32i_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu32i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1s_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1s_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1s_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu32i_BFu0c, aBFu1s_BFu32i_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu32i_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu32i_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu32i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_BFu32i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1s_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1s_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu32i_BFu0i, aBFu1s_BFu32i_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu32i_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu32i_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_BFu32i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1s_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1s_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu32i_BFu0ll, aBFu1s_BFu32i_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu32i_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu32i_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu32i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu32i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1s_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1s_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu32i_BFu0s, aBFu1s_BFu32i_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu32ll_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu32ll_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1s_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1s_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1s_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu32ll_BFu0c, aBFu1s_BFu32ll_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu32ll_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu32ll_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu32ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_BFu32ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1s_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1s_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu32ll_BFu0i, aBFu1s_BFu32ll_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu32ll_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu32ll_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1s_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1s_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu32ll_BFu0ll, aBFu1s_BFu32ll_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu32ll_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu32ll_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu32ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu32ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "aBFu1s_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "aBFu1s_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu32ll_BFu0s, aBFu1s_BFu32ll_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu33_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu33_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu33_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1s_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "aBFu1s_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "aBFu1s_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu33_BFu0c, aBFu1s_BFu33_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu33_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu33_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_BFu33_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "aBFu1s_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "aBFu1s_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu33_BFu0i, aBFu1s_BFu33_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu33_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu33_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_BFu33_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "aBFu1s_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "aBFu1s_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu33_BFu0ll, aBFu1s_BFu33_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu33_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu33_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_BFu33_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "aBFu1s_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "aBFu1s_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu33_BFu0s, aBFu1s_BFu33_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu7c_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu7c_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu7c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1s_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1s_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1s_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu7c_BFu0c, aBFu1s_BFu7c_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu7c_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu7c_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu7c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1s_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1s_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu7c_BFu0i, aBFu1s_BFu7c_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu7c_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu7c_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu7c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1s_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1s_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu7c_BFu0ll, aBFu1s_BFu7c_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu7c_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu7c_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu7c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1s_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1s_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu7c_BFu0s, aBFu1s_BFu7c_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu7i_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu7i_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu7i_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1s_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1s_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1s_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu7i_BFu0c, aBFu1s_BFu7i_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu7i_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu7i_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu7i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1s_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1s_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu7i_BFu0i, aBFu1s_BFu7i_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu7i_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu7i_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu7i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1s_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1s_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu7i_BFu0ll, aBFu1s_BFu7i_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu7i_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu7i_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu7i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1s_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1s_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu7i_BFu0s, aBFu1s_BFu7i_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu7ll_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu7ll_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1s_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1s_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1s_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu7ll_BFu0c, aBFu1s_BFu7ll_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu7ll_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu7ll_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu7ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1s_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1s_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu7ll_BFu0i, aBFu1s_BFu7ll_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu7ll_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu7ll_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1s_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1s_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu7ll_BFu0ll, aBFu1s_BFu7ll_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu7ll_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu7ll_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu7ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1s_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1s_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu7ll_BFu0s, aBFu1s_BFu7ll_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu7s_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu7s_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu7s_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(aBFu1s_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1s_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1s_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu7s_BFu0c, aBFu1s_BFu7s_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu7s_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu7s_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu7s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1s_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1s_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu7s_BFu0i, aBFu1s_BFu7s_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu7s_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu7s_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu7s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1s_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1s_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu7s_BFu0ll, aBFu1s_BFu7s_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu7s_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu7s_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(aBFu1s_BFu7s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "aBFu1s_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "aBFu1s_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu7s_BFu0s, aBFu1s_BFu7s_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu8c_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu8c_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu8c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1s_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1s_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu8c_BFu0c, aBFu1s_BFu8c_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu8c_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu8c_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu8c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1s_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1s_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu8c_BFu0i, aBFu1s_BFu8c_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu8c_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu8c_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu8c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1s_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1s_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu8c_BFu0ll, aBFu1s_BFu8c_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu8c_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu8c_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu8c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu8c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1s_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1s_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu8c_BFu0s, aBFu1s_BFu8c_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu8i_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu8i_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu8i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1s_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1s_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu8i_BFu0c, aBFu1s_BFu8i_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu8i_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu8i_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu8i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1s_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1s_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu8i_BFu0i, aBFu1s_BFu8i_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu8i_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu8i_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu8i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1s_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1s_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu8i_BFu0ll, aBFu1s_BFu8i_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu8i_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu8i_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu8i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu8i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1s_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1s_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu8i_BFu0s, aBFu1s_BFu8i_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu8ll_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu8ll_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1s_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1s_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu8ll_BFu0c, aBFu1s_BFu8ll_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu8ll_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu8ll_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu8ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1s_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1s_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu8ll_BFu0i, aBFu1s_BFu8ll_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu8ll_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu8ll_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1s_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1s_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu8ll_BFu0ll, aBFu1s_BFu8ll_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu8ll_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu8ll_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu8ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu8ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1s_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1s_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu8ll_BFu0s, aBFu1s_BFu8ll_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu8s_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu8s_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu8s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1s_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1s_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu8s_BFu0c, aBFu1s_BFu8s_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu8s_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu8s_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu8s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1s_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1s_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu8s_BFu0i, aBFu1s_BFu8s_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu8s_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu8s_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu8s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1s_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1s_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu8s_BFu0ll, aBFu1s_BFu8s_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu8s_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu8s_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu8s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu8s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "aBFu1s_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "aBFu1s_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu8s_BFu0s, aBFu1s_BFu8s_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu9i_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu9i_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu9i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1s_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1s_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu9i_BFu0c, aBFu1s_BFu9i_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu9i_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu9i_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu9i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1s_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1s_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu9i_BFu0i, aBFu1s_BFu9i_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu9i_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu9i_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu9i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1s_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1s_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu9i_BFu0ll, aBFu1s_BFu9i_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu9i_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu9i_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu9i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu9i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1s_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1s_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu9i_BFu0s, aBFu1s_BFu9i_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu9ll_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu9ll_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1s_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1s_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu9ll_BFu0c, aBFu1s_BFu9ll_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu9ll_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu9ll_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu9ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1s_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1s_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu9ll_BFu0i, aBFu1s_BFu9ll_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu9ll_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu9ll_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1s_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1s_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu9ll_BFu0ll, aBFu1s_BFu9ll_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu9ll_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu9ll_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu9ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1s_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1s_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu9ll_BFu0s, aBFu1s_BFu9ll_BFu0s)
//============================================================================



static void Test_aBFu1s_BFu9s_BFu0c()
{
  {
    init_simple_test("aBFu1s_BFu9s_BFu0c");
    static STRUCT_IF_C aBFu1s_BFu9s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1s_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1s_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu9s_BFu0c, aBFu1s_BFu9s_BFu0c)
//============================================================================



static void Test_aBFu1s_BFu9s_BFu0i()
{
  {
    init_simple_test("aBFu1s_BFu9s_BFu0i");
    static STRUCT_IF_C aBFu1s_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_BFu9s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1s_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1s_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu9s_BFu0i, aBFu1s_BFu9s_BFu0i)
//============================================================================



static void Test_aBFu1s_BFu9s_BFu0ll()
{
  {
    init_simple_test("aBFu1s_BFu9s_BFu0ll");
    static STRUCT_IF_C aBFu1s_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_BFu9s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1s_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1s_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu9s_BFu0ll, aBFu1s_BFu9s_BFu0ll)
//============================================================================



static void Test_aBFu1s_BFu9s_BFu0s()
{
  {
    init_simple_test("aBFu1s_BFu9s_BFu0s");
    static STRUCT_IF_C aBFu1s_BFu9s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_BFu9s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "aBFu1s_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "aBFu1s_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_BFu9s_BFu0s, aBFu1s_BFu9s_BFu0s)
//============================================================================



static void Test_aBFu1s_C_BFu0c()
{
  {
    init_simple_test("aBFu1s_C_BFu0c");
    static STRUCT_IF_C aBFu1s_C_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_C_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1s_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_C_BFu0c, aBFu1s_C_BFu0c)
//============================================================================



static void Test_aBFu1s_C_BFu0i()
{
  {
    init_simple_test("aBFu1s_C_BFu0i");
    static STRUCT_IF_C aBFu1s_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_C_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_C_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1s_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_C_BFu0i, aBFu1s_C_BFu0i)
//============================================================================



static void Test_aBFu1s_C_BFu0ll()
{
  {
    init_simple_test("aBFu1s_C_BFu0ll");
    static STRUCT_IF_C aBFu1s_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_C_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_C_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1s_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_C_BFu0ll, aBFu1s_C_BFu0ll)
//============================================================================



static void Test_aBFu1s_C_BFu0s()
{
  {
    init_simple_test("aBFu1s_C_BFu0s");
    static STRUCT_IF_C aBFu1s_C_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_C_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_C_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1s_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_C_BFu0s, aBFu1s_C_BFu0s)
//============================================================================



static void Test_aBFu1s_D_BFu0c()
{
  {
    init_simple_test("aBFu1s_D_BFu0c");
    static STRUCT_IF_C aBFu1s_D_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1s_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_D_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1s_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_D_BFu0c, aBFu1s_D_BFu0c)
//============================================================================



static void Test_aBFu1s_D_BFu0i()
{
  {
    init_simple_test("aBFu1s_D_BFu0i");
    static STRUCT_IF_C aBFu1s_D_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1s_D_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_D_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1s_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_D_BFu0i, aBFu1s_D_BFu0i)
//============================================================================



static void Test_aBFu1s_D_BFu0ll()
{
  {
    init_simple_test("aBFu1s_D_BFu0ll");
    static STRUCT_IF_C aBFu1s_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1s_D_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_D_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1s_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_D_BFu0ll, aBFu1s_D_BFu0ll)
//============================================================================



static void Test_aBFu1s_D_BFu0s()
{
  {
    init_simple_test("aBFu1s_D_BFu0s");
    static STRUCT_IF_C aBFu1s_D_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1s_D_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_D_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1s_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_D_BFu0s, aBFu1s_D_BFu0s)
//============================================================================



static void Test_aBFu1s_F_BFu0c()
{
  {
    init_simple_test("aBFu1s_F_BFu0c");
    static STRUCT_IF_C aBFu1s_F_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1s_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_F_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1s_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_F_BFu0c, aBFu1s_F_BFu0c)
//============================================================================



static void Test_aBFu1s_F_BFu0i()
{
  {
    init_simple_test("aBFu1s_F_BFu0i");
    static STRUCT_IF_C aBFu1s_F_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_F_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_F_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1s_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_F_BFu0i, aBFu1s_F_BFu0i)
//============================================================================



static void Test_aBFu1s_F_BFu0ll()
{
  {
    init_simple_test("aBFu1s_F_BFu0ll");
    static STRUCT_IF_C aBFu1s_F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_F_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_F_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1s_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_F_BFu0ll, aBFu1s_F_BFu0ll)
//============================================================================



static void Test_aBFu1s_F_BFu0s()
{
  {
    init_simple_test("aBFu1s_F_BFu0s");
    static STRUCT_IF_C aBFu1s_F_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_F_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_F_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1s_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_F_BFu0s, aBFu1s_F_BFu0s)
//============================================================================



static void Test_aBFu1s_I_BFu0c()
{
  {
    init_simple_test("aBFu1s_I_BFu0c");
    static STRUCT_IF_C aBFu1s_I_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1s_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_I_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1s_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_I_BFu0c, aBFu1s_I_BFu0c)
//============================================================================



static void Test_aBFu1s_I_BFu0i()
{
  {
    init_simple_test("aBFu1s_I_BFu0i");
    static STRUCT_IF_C aBFu1s_I_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_I_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_I_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1s_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_I_BFu0i, aBFu1s_I_BFu0i)
//============================================================================



static void Test_aBFu1s_I_BFu0ll()
{
  {
    init_simple_test("aBFu1s_I_BFu0ll");
    static STRUCT_IF_C aBFu1s_I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_I_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_I_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1s_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_I_BFu0ll, aBFu1s_I_BFu0ll)
//============================================================================



static void Test_aBFu1s_I_BFu0s()
{
  {
    init_simple_test("aBFu1s_I_BFu0s");
    static STRUCT_IF_C aBFu1s_I_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_I_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_I_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1s_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_I_BFu0s, aBFu1s_I_BFu0s)
//============================================================================



static void Test_aBFu1s_Ip_BFu0c()
{
  {
    init_simple_test("aBFu1s_Ip_BFu0c");
    static STRUCT_IF_C aBFu1s_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Ip_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1s_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Ip_BFu0c, aBFu1s_Ip_BFu0c)
//============================================================================



static void Test_aBFu1s_Ip_BFu0i()
{
  {
    init_simple_test("aBFu1s_Ip_BFu0i");
    static STRUCT_IF_C aBFu1s_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1s_Ip_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Ip_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1s_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Ip_BFu0i, aBFu1s_Ip_BFu0i)
//============================================================================



static void Test_aBFu1s_Ip_BFu0ll()
{
  {
    init_simple_test("aBFu1s_Ip_BFu0ll");
    static STRUCT_IF_C aBFu1s_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu1s_Ip_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Ip_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1s_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Ip_BFu0ll, aBFu1s_Ip_BFu0ll)
//============================================================================



static void Test_aBFu1s_Ip_BFu0s()
{
  {
    init_simple_test("aBFu1s_Ip_BFu0s");
    static STRUCT_IF_C aBFu1s_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1s_Ip_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Ip_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1s_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Ip_BFu0s, aBFu1s_Ip_BFu0s)
//============================================================================



static void Test_aBFu1s_L_BFu0c()
{
  {
    init_simple_test("aBFu1s_L_BFu0c");
    static STRUCT_IF_C aBFu1s_L_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1s_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_L_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1s_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_L_BFu0c, aBFu1s_L_BFu0c)
//============================================================================



static void Test_aBFu1s_L_BFu0i()
{
  {
    init_simple_test("aBFu1s_L_BFu0i");
    static STRUCT_IF_C aBFu1s_L_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1s_L_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_L_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1s_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_L_BFu0i, aBFu1s_L_BFu0i)
//============================================================================



static void Test_aBFu1s_L_BFu0ll()
{
  {
    init_simple_test("aBFu1s_L_BFu0ll");
    static STRUCT_IF_C aBFu1s_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1s_L_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_L_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1s_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_L_BFu0ll, aBFu1s_L_BFu0ll)
//============================================================================



static void Test_aBFu1s_L_BFu0s()
{
  {
    init_simple_test("aBFu1s_L_BFu0s");
    static STRUCT_IF_C aBFu1s_L_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1s_L_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_L_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1s_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_L_BFu0s, aBFu1s_L_BFu0s)
//============================================================================



static void Test_aBFu1s_S_BFu0c()
{
  {
    init_simple_test("aBFu1s_S_BFu0c");
    static STRUCT_IF_C aBFu1s_S_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1s_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_S_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1s_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_S_BFu0c, aBFu1s_S_BFu0c)
//============================================================================



static void Test_aBFu1s_S_BFu0i()
{
  {
    init_simple_test("aBFu1s_S_BFu0i");
    static STRUCT_IF_C aBFu1s_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_S_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_S_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1s_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_S_BFu0i, aBFu1s_S_BFu0i)
//============================================================================



static void Test_aBFu1s_S_BFu0ll()
{
  {
    init_simple_test("aBFu1s_S_BFu0ll");
    static STRUCT_IF_C aBFu1s_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_S_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_S_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1s_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_S_BFu0ll, aBFu1s_S_BFu0ll)
//============================================================================



static void Test_aBFu1s_S_BFu0s()
{
  {
    init_simple_test("aBFu1s_S_BFu0s");
    static STRUCT_IF_C aBFu1s_S_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_S_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_S_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1s_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_S_BFu0s, aBFu1s_S_BFu0s)
//============================================================================



static void Test_aBFu1s_Uc_BFu0c()
{
  {
    init_simple_test("aBFu1s_Uc_BFu0c");
    static STRUCT_IF_C aBFu1s_Uc_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Uc_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1s_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Uc_BFu0c, aBFu1s_Uc_BFu0c)
//============================================================================



static void Test_aBFu1s_Uc_BFu0i()
{
  {
    init_simple_test("aBFu1s_Uc_BFu0i");
    static STRUCT_IF_C aBFu1s_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_Uc_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Uc_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1s_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Uc_BFu0i, aBFu1s_Uc_BFu0i)
//============================================================================



static void Test_aBFu1s_Uc_BFu0ll()
{
  {
    init_simple_test("aBFu1s_Uc_BFu0ll");
    static STRUCT_IF_C aBFu1s_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_Uc_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Uc_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1s_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Uc_BFu0ll, aBFu1s_Uc_BFu0ll)
//============================================================================



static void Test_aBFu1s_Uc_BFu0s()
{
  {
    init_simple_test("aBFu1s_Uc_BFu0s");
    static STRUCT_IF_C aBFu1s_Uc_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(aBFu1s_Uc_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Uc_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1s_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Uc_BFu0s, aBFu1s_Uc_BFu0s)
//============================================================================



static void Test_aBFu1s_Ui_BFu0c()
{
  {
    init_simple_test("aBFu1s_Ui_BFu0c");
    static STRUCT_IF_C aBFu1s_Ui_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu1s_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Ui_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1s_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Ui_BFu0c, aBFu1s_Ui_BFu0c)
//============================================================================



static void Test_aBFu1s_Ui_BFu0i()
{
  {
    init_simple_test("aBFu1s_Ui_BFu0i");
    static STRUCT_IF_C aBFu1s_Ui_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_Ui_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Ui_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1s_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Ui_BFu0i, aBFu1s_Ui_BFu0i)
//============================================================================



static void Test_aBFu1s_Ui_BFu0ll()
{
  {
    init_simple_test("aBFu1s_Ui_BFu0ll");
    static STRUCT_IF_C aBFu1s_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu1s_Ui_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Ui_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1s_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Ui_BFu0ll, aBFu1s_Ui_BFu0ll)
//============================================================================



static void Test_aBFu1s_Ui_BFu0s()
{
  {
    init_simple_test("aBFu1s_Ui_BFu0s");
    static STRUCT_IF_C aBFu1s_Ui_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu1s_Ui_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Ui_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1s_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Ui_BFu0s, aBFu1s_Ui_BFu0s)
//============================================================================



static void Test_aBFu1s_Ul_BFu0c()
{
  {
    init_simple_test("aBFu1s_Ul_BFu0c");
    static STRUCT_IF_C aBFu1s_Ul_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(aBFu1s_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Ul_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1s_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Ul_BFu0c, aBFu1s_Ul_BFu0c)
//============================================================================



static void Test_aBFu1s_Ul_BFu0i()
{
  {
    init_simple_test("aBFu1s_Ul_BFu0i");
    static STRUCT_IF_C aBFu1s_Ul_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu1s_Ul_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Ul_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1s_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Ul_BFu0i, aBFu1s_Ul_BFu0i)
//============================================================================



static void Test_aBFu1s_Ul_BFu0ll()
{
  {
    init_simple_test("aBFu1s_Ul_BFu0ll");
    static STRUCT_IF_C aBFu1s_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu1s_Ul_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Ul_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1s_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Ul_BFu0ll, aBFu1s_Ul_BFu0ll)
//============================================================================



static void Test_aBFu1s_Ul_BFu0s()
{
  {
    init_simple_test("aBFu1s_Ul_BFu0s");
    static STRUCT_IF_C aBFu1s_Ul_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu1s_Ul_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Ul_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1s_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Ul_BFu0s, aBFu1s_Ul_BFu0s)
//============================================================================



static void Test_aBFu1s_Us_BFu0c()
{
  {
    init_simple_test("aBFu1s_Us_BFu0c");
    static STRUCT_IF_C aBFu1s_Us_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu1s_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Us_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1s_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Us_BFu0c, aBFu1s_Us_BFu0c)
//============================================================================



static void Test_aBFu1s_Us_BFu0i()
{
  {
    init_simple_test("aBFu1s_Us_BFu0i");
    static STRUCT_IF_C aBFu1s_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_Us_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Us_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1s_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Us_BFu0i, aBFu1s_Us_BFu0i)
//============================================================================



static void Test_aBFu1s_Us_BFu0ll()
{
  {
    init_simple_test("aBFu1s_Us_BFu0ll");
    static STRUCT_IF_C aBFu1s_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu1s_Us_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Us_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1s_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Us_BFu0ll, aBFu1s_Us_BFu0ll)
//============================================================================



static void Test_aBFu1s_Us_BFu0s()
{
  {
    init_simple_test("aBFu1s_Us_BFu0s");
    static STRUCT_IF_C aBFu1s_Us_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(aBFu1s_Us_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Us_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1s_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Us_BFu0s, aBFu1s_Us_BFu0s)
//============================================================================



static void Test_aBFu1s_Vp_BFu0c()
{
  {
    init_simple_test("aBFu1s_Vp_BFu0c");
    static STRUCT_IF_C aBFu1s_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu1s_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Vp_BFu0c");
    check_field_offset(lv, v2, 1, "aBFu1s_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Vp_BFu0c, aBFu1s_Vp_BFu0c)
//============================================================================



static void Test_aBFu1s_Vp_BFu0i()
{
  {
    init_simple_test("aBFu1s_Vp_BFu0i");
    static STRUCT_IF_C aBFu1s_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu1s_Vp_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Vp_BFu0i");
    check_field_offset(lv, v2, 1, "aBFu1s_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Vp_BFu0i, aBFu1s_Vp_BFu0i)
//============================================================================



static void Test_aBFu1s_Vp_BFu0ll()
{
  {
    init_simple_test("aBFu1s_Vp_BFu0ll");
    static STRUCT_IF_C aBFu1s_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu1s_Vp_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Vp_BFu0ll");
    check_field_offset(lv, v2, 1, "aBFu1s_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Vp_BFu0ll, aBFu1s_Vp_BFu0ll)
//============================================================================



static void Test_aBFu1s_Vp_BFu0s()
{
  {
    init_simple_test("aBFu1s_Vp_BFu0s");
    static STRUCT_IF_C aBFu1s_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu1s_Vp_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu1s_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "aBFu1s_Vp_BFu0s");
    check_field_offset(lv, v2, 1, "aBFu1s_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu1s_Vp_BFu0s, aBFu1s_Vp_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c, aBFu31i_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu0c, aBFu31i_BFu0c_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu0c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu0i, aBFu31i_BFu0c_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu0ll, aBFu31i_BFu0c_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu0c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu0s, aBFu31i_BFu0c_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu15i()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu15i");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31i_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31i_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu15i, aBFu31i_BFu0c_BFu15i)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu15ll()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu15ll");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31i_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu15ll, aBFu31i_BFu0c_BFu15ll)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu15s()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu15s");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31i_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31i_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu15s, aBFu31i_BFu0c_BFu15s)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu16i()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu16i");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31i_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31i_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu16i, aBFu31i_BFu0c_BFu16i)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu16ll()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu16ll");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31i_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu16ll, aBFu31i_BFu0c_BFu16ll)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu16s()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu16s");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31i_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31i_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu16s, aBFu31i_BFu0c_BFu16s)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu17i()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu17i");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu31i_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu31i_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu31i_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu17i, aBFu31i_BFu0c_BFu17i)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu17ll()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu17ll");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu31i_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu31i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu31i_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu17ll, aBFu31i_BFu0c_BFu17ll)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu1c()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu1c");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31i_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31i_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu1c, aBFu31i_BFu0c_BFu1c)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu1i()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu1i");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31i_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31i_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu1i, aBFu31i_BFu0c_BFu1i)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu1ll()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu1ll");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31i_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31i_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu1ll, aBFu31i_BFu0c_BFu1ll)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu1s()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu1s");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31i_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31i_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu1s, aBFu31i_BFu0c_BFu1s)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu31i()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu31i");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu31i_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu31i, aBFu31i_BFu0c_BFu31i)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu31ll()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu31ll");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu31i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu31ll, aBFu31i_BFu0c_BFu31ll)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu32i()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu32i");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu31i_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu31i_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu32i, aBFu31i_BFu0c_BFu32i)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu32ll()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu32ll");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu31i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu31i_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu32ll, aBFu31i_BFu0c_BFu32ll)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu33()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu33");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(aBFu31i_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, 1, "aBFu31i_BFu0c_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu31i_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu33, aBFu31i_BFu0c_BFu33)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu7c()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu7c");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31i_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31i_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu7c, aBFu31i_BFu0c_BFu7c)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu7i()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu7i");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31i_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31i_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu7i, aBFu31i_BFu0c_BFu7i)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu7ll()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu7ll");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31i_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu7ll, aBFu31i_BFu0c_BFu7ll)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu7s()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu7s");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31i_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31i_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu7s, aBFu31i_BFu0c_BFu7s)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu8c()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu8c");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31i_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31i_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu8c, aBFu31i_BFu0c_BFu8c)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu8i()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu8i");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31i_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31i_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu8i, aBFu31i_BFu0c_BFu8i)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu8ll()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu8ll");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31i_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu8ll, aBFu31i_BFu0c_BFu8ll)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu8s()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu8s");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31i_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31i_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu8s, aBFu31i_BFu0c_BFu8s)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu9i()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu9i");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31i_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31i_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu9i, aBFu31i_BFu0c_BFu9i)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu9ll()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu9ll");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31i_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu9ll, aBFu31i_BFu0c_BFu9ll)
//============================================================================



static void Test_aBFu31i_BFu0c_BFu9s()
{
  {
    init_simple_test("aBFu31i_BFu0c_BFu9s");
    static STRUCT_IF_C aBFu31i_BFu0c_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31i_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31i_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_BFu9s, aBFu31i_BFu0c_BFu9s)
//============================================================================



static void Test_aBFu31i_BFu0c_C()
{
  {
    init_simple_test("aBFu31i_BFu0c_C");
    static STRUCT_IF_C aBFu31i_BFu0c_C lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_C");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_C, aBFu31i_BFu0c_C)
//============================================================================



static void Test_aBFu31i_BFu0c_D()
{
  {
    init_simple_test("aBFu31i_BFu0c_D");
    static STRUCT_IF_C aBFu31i_BFu0c_D lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_D");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_D, aBFu31i_BFu0c_D)
//============================================================================



static void Test_aBFu31i_BFu0c_F()
{
  {
    init_simple_test("aBFu31i_BFu0c_F");
    static STRUCT_IF_C aBFu31i_BFu0c_F lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_F");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_F, aBFu31i_BFu0c_F)
//============================================================================



static void Test_aBFu31i_BFu0c_I()
{
  {
    init_simple_test("aBFu31i_BFu0c_I");
    static STRUCT_IF_C aBFu31i_BFu0c_I lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_I");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_I, aBFu31i_BFu0c_I)
//============================================================================



static void Test_aBFu31i_BFu0c_Ip()
{
  {
    init_simple_test("aBFu31i_BFu0c_Ip");
    static STRUCT_IF_C aBFu31i_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_Ip");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_Ip, aBFu31i_BFu0c_Ip)
//============================================================================



static void Test_aBFu31i_BFu0c_L()
{
  {
    init_simple_test("aBFu31i_BFu0c_L");
    static STRUCT_IF_C aBFu31i_BFu0c_L lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_L");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_L, aBFu31i_BFu0c_L)
//============================================================================



static void Test_aBFu31i_BFu0c_S()
{
  {
    init_simple_test("aBFu31i_BFu0c_S");
    static STRUCT_IF_C aBFu31i_BFu0c_S lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_S");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_S, aBFu31i_BFu0c_S)
//============================================================================



static void Test_aBFu31i_BFu0c_Uc()
{
  {
    init_simple_test("aBFu31i_BFu0c_Uc");
    static STRUCT_IF_C aBFu31i_BFu0c_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_Uc");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_Uc, aBFu31i_BFu0c_Uc)
//============================================================================



static void Test_aBFu31i_BFu0c_Ui()
{
  {
    init_simple_test("aBFu31i_BFu0c_Ui");
    static STRUCT_IF_C aBFu31i_BFu0c_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_Ui");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_Ui, aBFu31i_BFu0c_Ui)
//============================================================================



static void Test_aBFu31i_BFu0c_Ul()
{
  {
    init_simple_test("aBFu31i_BFu0c_Ul");
    static STRUCT_IF_C aBFu31i_BFu0c_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_Ul");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_Ul, aBFu31i_BFu0c_Ul)
//============================================================================



static void Test_aBFu31i_BFu0c_Us()
{
  {
    init_simple_test("aBFu31i_BFu0c_Us");
    static STRUCT_IF_C aBFu31i_BFu0c_Us lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_Us");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_Us, aBFu31i_BFu0c_Us)
//============================================================================



static void Test_aBFu31i_BFu0c_Vp()
{
  {
    init_simple_test("aBFu31i_BFu0c_Vp");
    static STRUCT_IF_C aBFu31i_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0c_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0c_Vp");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0c_Vp, aBFu31i_BFu0c_Vp)
//============================================================================



static void Test_aBFu31i_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i, aBFu31i_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu0i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu0c, aBFu31i_BFu0i_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu0i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu0i, aBFu31i_BFu0i_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu0ll, aBFu31i_BFu0i_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu0i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu0s, aBFu31i_BFu0i_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu15i()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu15i");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31i_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31i_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu15i, aBFu31i_BFu0i_BFu15i)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu15ll()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu15ll");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31i_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu15ll, aBFu31i_BFu0i_BFu15ll)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu15s()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu15s");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31i_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31i_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu15s, aBFu31i_BFu0i_BFu15s)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu16i()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu16i");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31i_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31i_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu16i, aBFu31i_BFu0i_BFu16i)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu16ll()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu16ll");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31i_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu16ll, aBFu31i_BFu0i_BFu16ll)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu16s()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu16s");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31i_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31i_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu16s, aBFu31i_BFu0i_BFu16s)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu17i()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu17i");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu31i_BFu0i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu31i_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu31i_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu17i, aBFu31i_BFu0i_BFu17i)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu17ll()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu17ll");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu31i_BFu0i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu31i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu31i_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu17ll, aBFu31i_BFu0i_BFu17ll)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu1c()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu1c");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31i_BFu0i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31i_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu1c, aBFu31i_BFu0i_BFu1c)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu1i()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu1i");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31i_BFu0i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31i_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu1i, aBFu31i_BFu0i_BFu1i)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu1ll()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu1ll");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31i_BFu0i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31i_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu1ll, aBFu31i_BFu0i_BFu1ll)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu1s()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu1s");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31i_BFu0i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31i_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu1s, aBFu31i_BFu0i_BFu1s)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu31i()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu31i");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu31i_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu31i, aBFu31i_BFu0i_BFu31i)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu31ll()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu31ll");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu31i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu31ll, aBFu31i_BFu0i_BFu31ll)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu32i()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu32i");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu31i_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu31i_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu32i, aBFu31i_BFu0i_BFu32i)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu32ll()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu32ll");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu31i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu31i_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu32ll, aBFu31i_BFu0i_BFu32ll)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu33()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu33");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(aBFu31i_BFu0i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, 1, "aBFu31i_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu31i_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu33, aBFu31i_BFu0i_BFu33)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu7c()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu7c");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31i_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31i_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu7c, aBFu31i_BFu0i_BFu7c)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu7i()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu7i");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31i_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31i_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu7i, aBFu31i_BFu0i_BFu7i)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu7ll()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu7ll");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31i_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu7ll, aBFu31i_BFu0i_BFu7ll)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu7s()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu7s");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31i_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31i_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu7s, aBFu31i_BFu0i_BFu7s)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu8c()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu8c");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31i_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31i_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu8c, aBFu31i_BFu0i_BFu8c)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu8i()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu8i");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31i_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31i_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu8i, aBFu31i_BFu0i_BFu8i)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu8ll()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu8ll");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31i_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu8ll, aBFu31i_BFu0i_BFu8ll)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu8s()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu8s");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31i_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31i_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu8s, aBFu31i_BFu0i_BFu8s)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu9i()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu9i");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu0i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31i_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31i_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu9i, aBFu31i_BFu0i_BFu9i)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu9ll()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu9ll");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu0i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31i_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu9ll, aBFu31i_BFu0i_BFu9ll)
//============================================================================



static void Test_aBFu31i_BFu0i_BFu9s()
{
  {
    init_simple_test("aBFu31i_BFu0i_BFu9s");
    static STRUCT_IF_C aBFu31i_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu0i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31i_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31i_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_BFu9s, aBFu31i_BFu0i_BFu9s)
//============================================================================



static void Test_aBFu31i_BFu0i_C()
{
  {
    init_simple_test("aBFu31i_BFu0i_C");
    static STRUCT_IF_C aBFu31i_BFu0i_C lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_C");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_C, aBFu31i_BFu0i_C)
//============================================================================



static void Test_aBFu31i_BFu0i_D()
{
  {
    init_simple_test("aBFu31i_BFu0i_D");
    static STRUCT_IF_C aBFu31i_BFu0i_D lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_BFu0i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_D");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_D, aBFu31i_BFu0i_D)
//============================================================================



static void Test_aBFu31i_BFu0i_F()
{
  {
    init_simple_test("aBFu31i_BFu0i_F");
    static STRUCT_IF_C aBFu31i_BFu0i_F lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_F");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_F, aBFu31i_BFu0i_F)
//============================================================================



static void Test_aBFu31i_BFu0i_I()
{
  {
    init_simple_test("aBFu31i_BFu0i_I");
    static STRUCT_IF_C aBFu31i_BFu0i_I lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_I");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_I, aBFu31i_BFu0i_I)
//============================================================================



static void Test_aBFu31i_BFu0i_Ip()
{
  {
    init_simple_test("aBFu31i_BFu0i_Ip");
    static STRUCT_IF_C aBFu31i_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_BFu0i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_Ip");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_Ip, aBFu31i_BFu0i_Ip)
//============================================================================



static void Test_aBFu31i_BFu0i_L()
{
  {
    init_simple_test("aBFu31i_BFu0i_L");
    static STRUCT_IF_C aBFu31i_BFu0i_L lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_BFu0i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_L");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_L, aBFu31i_BFu0i_L)
//============================================================================



static void Test_aBFu31i_BFu0i_S()
{
  {
    init_simple_test("aBFu31i_BFu0i_S");
    static STRUCT_IF_C aBFu31i_BFu0i_S lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_S");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_S, aBFu31i_BFu0i_S)
//============================================================================



static void Test_aBFu31i_BFu0i_Uc()
{
  {
    init_simple_test("aBFu31i_BFu0i_Uc");
    static STRUCT_IF_C aBFu31i_BFu0i_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_Uc");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_Uc, aBFu31i_BFu0i_Uc)
//============================================================================



static void Test_aBFu31i_BFu0i_Ui()
{
  {
    init_simple_test("aBFu31i_BFu0i_Ui");
    static STRUCT_IF_C aBFu31i_BFu0i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_Ui");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_Ui, aBFu31i_BFu0i_Ui)
//============================================================================



static void Test_aBFu31i_BFu0i_Ul()
{
  {
    init_simple_test("aBFu31i_BFu0i_Ul");
    static STRUCT_IF_C aBFu31i_BFu0i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_BFu0i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_Ul");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_Ul, aBFu31i_BFu0i_Ul)
//============================================================================



static void Test_aBFu31i_BFu0i_Us()
{
  {
    init_simple_test("aBFu31i_BFu0i_Us");
    static STRUCT_IF_C aBFu31i_BFu0i_Us lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_Us");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_Us, aBFu31i_BFu0i_Us)
//============================================================================



static void Test_aBFu31i_BFu0i_Vp()
{
  {
    init_simple_test("aBFu31i_BFu0i_Vp");
    static STRUCT_IF_C aBFu31i_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_BFu0i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0i_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0i_Vp");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0i_Vp, aBFu31i_BFu0i_Vp)
//============================================================================



static void Test_aBFu31i_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll, aBFu31i_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu0c, aBFu31i_BFu0ll_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu0i, aBFu31i_BFu0ll_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu0ll, aBFu31i_BFu0ll_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu0s, aBFu31i_BFu0ll_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu15i()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu15i");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31i_BFu0ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu31i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31i_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu15i, aBFu31i_BFu0ll_BFu15i)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu15ll()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu15ll");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31i_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu31i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31i_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu15ll, aBFu31i_BFu0ll_BFu15ll)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu15s()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu15s");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31i_BFu0ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu31i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31i_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu15s, aBFu31i_BFu0ll_BFu15s)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu16i()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu16i");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31i_BFu0ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu31i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31i_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu16i, aBFu31i_BFu0ll_BFu16i)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu16ll()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu16ll");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31i_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu31i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31i_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu16ll, aBFu31i_BFu0ll_BFu16ll)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu16s()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu16s");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31i_BFu0ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu31i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31i_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu16s, aBFu31i_BFu0ll_BFu16s)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu17i()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu17i");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu31i_BFu0ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, 1, "aBFu31i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu31i_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu17i, aBFu31i_BFu0ll_BFu17i)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu17ll()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu17ll");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu31i_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, 1, "aBFu31i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu31i_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu17ll, aBFu31i_BFu0ll_BFu17ll)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu1c()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu1c");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31i_BFu0ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu31i_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu1c, aBFu31i_BFu0ll_BFu1c)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu1i()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu1i");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31i_BFu0ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu31i_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu1i, aBFu31i_BFu0ll_BFu1i)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu1ll()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu1ll");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31i_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu31i_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu1ll, aBFu31i_BFu0ll_BFu1ll)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu1s()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu1s");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31i_BFu0ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu31i_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu1s, aBFu31i_BFu0ll_BFu1s)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu31i()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu31i");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_BFu0ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, 1, "aBFu31i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu31i, aBFu31i_BFu0ll_BFu31i)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu31ll()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu31ll");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, 1, "aBFu31i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu31ll, aBFu31i_BFu0ll_BFu31ll)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu32i()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu32i");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_BFu0ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, 1, "aBFu31i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu31i_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu32i, aBFu31i_BFu0ll_BFu32i)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu32ll()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu32ll");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, 1, "aBFu31i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu31i_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu32ll, aBFu31i_BFu0ll_BFu32ll)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu33()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu33");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aBFu31i_BFu0ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 33, 1, "aBFu31i_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu31i_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu33, aBFu31i_BFu0ll_BFu33)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu7c()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu7c");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31i_BFu0ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu31i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31i_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu7c, aBFu31i_BFu0ll_BFu7c)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu7i()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu7i");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31i_BFu0ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu31i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31i_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu7i, aBFu31i_BFu0ll_BFu7i)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu7ll()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu7ll");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31i_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu31i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31i_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu7ll, aBFu31i_BFu0ll_BFu7ll)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu7s()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu7s");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31i_BFu0ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu31i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31i_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu7s, aBFu31i_BFu0ll_BFu7s)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu8c()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu8c");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31i_BFu0ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu31i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31i_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu8c, aBFu31i_BFu0ll_BFu8c)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu8i()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu8i");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31i_BFu0ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu31i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31i_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu8i, aBFu31i_BFu0ll_BFu8i)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu8ll()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu8ll");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31i_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu31i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31i_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu8ll, aBFu31i_BFu0ll_BFu8ll)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu8s()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu8s");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31i_BFu0ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu31i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31i_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu8s, aBFu31i_BFu0ll_BFu8s)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu9i()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu9i");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31i_BFu0ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu31i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31i_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu9i, aBFu31i_BFu0ll_BFu9i)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu9ll()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu9ll");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31i_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu31i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31i_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu9ll, aBFu31i_BFu0ll_BFu9ll)
//============================================================================



static void Test_aBFu31i_BFu0ll_BFu9s()
{
  {
    init_simple_test("aBFu31i_BFu0ll_BFu9s");
    static STRUCT_IF_C aBFu31i_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31i_BFu0ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu31i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31i_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_BFu9s, aBFu31i_BFu0ll_BFu9s)
//============================================================================



static void Test_aBFu31i_BFu0ll_C()
{
  {
    init_simple_test("aBFu31i_BFu0ll_C");
    static STRUCT_IF_C aBFu31i_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31i_BFu0ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31i_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_C, aBFu31i_BFu0ll_C)
//============================================================================



static void Test_aBFu31i_BFu0ll_D()
{
  {
    init_simple_test("aBFu31i_BFu0ll_D");
    static STRUCT_IF_C aBFu31i_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu31i_BFu0ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31i_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_D, aBFu31i_BFu0ll_D)
//============================================================================



static void Test_aBFu31i_BFu0ll_F()
{
  {
    init_simple_test("aBFu31i_BFu0ll_F");
    static STRUCT_IF_C aBFu31i_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_BFu0ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31i_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_F, aBFu31i_BFu0ll_F)
//============================================================================



static void Test_aBFu31i_BFu0ll_I()
{
  {
    init_simple_test("aBFu31i_BFu0ll_I");
    static STRUCT_IF_C aBFu31i_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_BFu0ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31i_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_I, aBFu31i_BFu0ll_I)
//============================================================================



static void Test_aBFu31i_BFu0ll_Ip()
{
  {
    init_simple_test("aBFu31i_BFu0ll_Ip");
    static STRUCT_IF_C aBFu31i_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu31i_BFu0ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31i_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_Ip, aBFu31i_BFu0ll_Ip)
//============================================================================



static void Test_aBFu31i_BFu0ll_L()
{
  {
    init_simple_test("aBFu31i_BFu0ll_L");
    static STRUCT_IF_C aBFu31i_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu31i_BFu0ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31i_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_L, aBFu31i_BFu0ll_L)
//============================================================================



static void Test_aBFu31i_BFu0ll_S()
{
  {
    init_simple_test("aBFu31i_BFu0ll_S");
    static STRUCT_IF_C aBFu31i_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31i_BFu0ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31i_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_S, aBFu31i_BFu0ll_S)
//============================================================================



static void Test_aBFu31i_BFu0ll_Uc()
{
  {
    init_simple_test("aBFu31i_BFu0ll_Uc");
    static STRUCT_IF_C aBFu31i_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31i_BFu0ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31i_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_Uc, aBFu31i_BFu0ll_Uc)
//============================================================================



static void Test_aBFu31i_BFu0ll_Ui()
{
  {
    init_simple_test("aBFu31i_BFu0ll_Ui");
    static STRUCT_IF_C aBFu31i_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_BFu0ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31i_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_Ui, aBFu31i_BFu0ll_Ui)
//============================================================================



static void Test_aBFu31i_BFu0ll_Ul()
{
  {
    init_simple_test("aBFu31i_BFu0ll_Ul");
    static STRUCT_IF_C aBFu31i_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu31i_BFu0ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31i_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_Ul, aBFu31i_BFu0ll_Ul)
//============================================================================



static void Test_aBFu31i_BFu0ll_Us()
{
  {
    init_simple_test("aBFu31i_BFu0ll_Us");
    static STRUCT_IF_C aBFu31i_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31i_BFu0ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31i_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_Us, aBFu31i_BFu0ll_Us)
//============================================================================



static void Test_aBFu31i_BFu0ll_Vp()
{
  {
    init_simple_test("aBFu31i_BFu0ll_Vp");
    static STRUCT_IF_C aBFu31i_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu31i_BFu0ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0ll_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31i_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0ll_Vp, aBFu31i_BFu0ll_Vp)
//============================================================================



static void Test_aBFu31i_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s, aBFu31i_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu0s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu0c, aBFu31i_BFu0s_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu0s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu0i, aBFu31i_BFu0s_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu0ll, aBFu31i_BFu0s_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu0s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu0s, aBFu31i_BFu0s_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu15i()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu15i");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31i_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31i_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu15i, aBFu31i_BFu0s_BFu15i)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu15ll()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu15ll");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31i_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu15ll, aBFu31i_BFu0s_BFu15ll)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu15s()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu15s");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31i_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31i_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu15s, aBFu31i_BFu0s_BFu15s)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu16i()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu16i");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31i_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31i_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu16i, aBFu31i_BFu0s_BFu16i)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu16ll()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu16ll");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31i_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu16ll, aBFu31i_BFu0s_BFu16ll)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu16s()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu16s");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31i_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31i_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu16s, aBFu31i_BFu0s_BFu16s)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu17i()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu17i");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu31i_BFu0s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu31i_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu31i_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu17i, aBFu31i_BFu0s_BFu17i)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu17ll()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu17ll");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu31i_BFu0s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu31i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu31i_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu17ll, aBFu31i_BFu0s_BFu17ll)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu1c()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu1c");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31i_BFu0s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31i_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu1c, aBFu31i_BFu0s_BFu1c)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu1i()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu1i");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31i_BFu0s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31i_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu1i, aBFu31i_BFu0s_BFu1i)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu1ll()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu1ll");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31i_BFu0s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31i_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu1ll, aBFu31i_BFu0s_BFu1ll)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu1s()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu1s");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31i_BFu0s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31i_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu1s, aBFu31i_BFu0s_BFu1s)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu31i()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu31i");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu31i_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu31i, aBFu31i_BFu0s_BFu31i)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu31ll()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu31ll");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu31i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu31ll, aBFu31i_BFu0s_BFu31ll)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu32i()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu32i");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu31i_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu31i_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu32i, aBFu31i_BFu0s_BFu32i)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu32ll()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu32ll");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu31i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu31i_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu32ll, aBFu31i_BFu0s_BFu32ll)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu33()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu33");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(aBFu31i_BFu0s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, 1, "aBFu31i_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu31i_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu33, aBFu31i_BFu0s_BFu33)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu7c()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu7c");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31i_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31i_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu7c, aBFu31i_BFu0s_BFu7c)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu7i()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu7i");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31i_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31i_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu7i, aBFu31i_BFu0s_BFu7i)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu7ll()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu7ll");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31i_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu7ll, aBFu31i_BFu0s_BFu7ll)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu7s()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu7s");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31i_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31i_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu7s, aBFu31i_BFu0s_BFu7s)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu8c()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu8c");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31i_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31i_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu8c, aBFu31i_BFu0s_BFu8c)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu8i()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu8i");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31i_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31i_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu8i, aBFu31i_BFu0s_BFu8i)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu8ll()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu8ll");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31i_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu8ll, aBFu31i_BFu0s_BFu8ll)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu8s()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu8s");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31i_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31i_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu8s, aBFu31i_BFu0s_BFu8s)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu9i()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu9i");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu0s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31i_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31i_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu9i, aBFu31i_BFu0s_BFu9i)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu9ll()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu9ll");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu0s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31i_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu9ll, aBFu31i_BFu0s_BFu9ll)
//============================================================================



static void Test_aBFu31i_BFu0s_BFu9s()
{
  {
    init_simple_test("aBFu31i_BFu0s_BFu9s");
    static STRUCT_IF_C aBFu31i_BFu0s_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu0s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31i_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31i_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_BFu9s, aBFu31i_BFu0s_BFu9s)
//============================================================================



static void Test_aBFu31i_BFu0s_C()
{
  {
    init_simple_test("aBFu31i_BFu0s_C");
    static STRUCT_IF_C aBFu31i_BFu0s_C lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_C");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_C, aBFu31i_BFu0s_C)
//============================================================================



static void Test_aBFu31i_BFu0s_D()
{
  {
    init_simple_test("aBFu31i_BFu0s_D");
    static STRUCT_IF_C aBFu31i_BFu0s_D lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_BFu0s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_D");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_D, aBFu31i_BFu0s_D)
//============================================================================



static void Test_aBFu31i_BFu0s_F()
{
  {
    init_simple_test("aBFu31i_BFu0s_F");
    static STRUCT_IF_C aBFu31i_BFu0s_F lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_F");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_F, aBFu31i_BFu0s_F)
//============================================================================



static void Test_aBFu31i_BFu0s_I()
{
  {
    init_simple_test("aBFu31i_BFu0s_I");
    static STRUCT_IF_C aBFu31i_BFu0s_I lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_I");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_I, aBFu31i_BFu0s_I)
//============================================================================



static void Test_aBFu31i_BFu0s_Ip()
{
  {
    init_simple_test("aBFu31i_BFu0s_Ip");
    static STRUCT_IF_C aBFu31i_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_BFu0s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_Ip");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_Ip, aBFu31i_BFu0s_Ip)
//============================================================================



static void Test_aBFu31i_BFu0s_L()
{
  {
    init_simple_test("aBFu31i_BFu0s_L");
    static STRUCT_IF_C aBFu31i_BFu0s_L lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_BFu0s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_L");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_L, aBFu31i_BFu0s_L)
//============================================================================



static void Test_aBFu31i_BFu0s_S()
{
  {
    init_simple_test("aBFu31i_BFu0s_S");
    static STRUCT_IF_C aBFu31i_BFu0s_S lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_S");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_S, aBFu31i_BFu0s_S)
//============================================================================



static void Test_aBFu31i_BFu0s_Uc()
{
  {
    init_simple_test("aBFu31i_BFu0s_Uc");
    static STRUCT_IF_C aBFu31i_BFu0s_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu0s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_Uc");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_Uc, aBFu31i_BFu0s_Uc)
//============================================================================



static void Test_aBFu31i_BFu0s_Ui()
{
  {
    init_simple_test("aBFu31i_BFu0s_Ui");
    static STRUCT_IF_C aBFu31i_BFu0s_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu0s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_Ui");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_Ui, aBFu31i_BFu0s_Ui)
//============================================================================



static void Test_aBFu31i_BFu0s_Ul()
{
  {
    init_simple_test("aBFu31i_BFu0s_Ul");
    static STRUCT_IF_C aBFu31i_BFu0s_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_BFu0s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_Ul");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_Ul, aBFu31i_BFu0s_Ul)
//============================================================================



static void Test_aBFu31i_BFu0s_Us()
{
  {
    init_simple_test("aBFu31i_BFu0s_Us");
    static STRUCT_IF_C aBFu31i_BFu0s_Us lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu0s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_Us");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_Us, aBFu31i_BFu0s_Us)
//============================================================================



static void Test_aBFu31i_BFu0s_Vp()
{
  {
    init_simple_test("aBFu31i_BFu0s_Vp");
    static STRUCT_IF_C aBFu31i_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_BFu0s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu0s_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu0s_Vp");
    check_field_offset(lv, v2, 4, "aBFu31i_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu0s_Vp, aBFu31i_BFu0s_Vp)
//============================================================================



static void Test_aBFu31i_BFu15i_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu15i_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu15i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu15i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31i_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31i_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu15i_BFu0c, aBFu31i_BFu15i_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu15i_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu15i_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu15i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu15i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31i_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31i_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu15i_BFu0i, aBFu31i_BFu15i_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu15i_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu15i_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu15i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31i_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu15i_BFu0ll, aBFu31i_BFu15i_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu15i_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu15i_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu15i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu15i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu15i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31i_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31i_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu15i_BFu0s, aBFu31i_BFu15i_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu15ll_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu15ll_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31i_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu15ll_BFu0c, aBFu31i_BFu15ll_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu15ll_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu15ll_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu15ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31i_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu15ll_BFu0i, aBFu31i_BFu15ll_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu15ll_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu15ll_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31i_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu15ll_BFu0ll, aBFu31i_BFu15ll_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu15ll_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu15ll_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu15ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31i_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu15ll_BFu0s, aBFu31i_BFu15ll_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu15s_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu15s_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu15s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu15s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31i_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31i_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu15s_BFu0c, aBFu31i_BFu15s_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu15s_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu15s_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu15s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu15s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31i_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31i_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu15s_BFu0i, aBFu31i_BFu15s_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu15s_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu15s_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu15s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31i_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu15s_BFu0ll, aBFu31i_BFu15s_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu15s_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu15s_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu15s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu15s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu15s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31i_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31i_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu15s_BFu0s, aBFu31i_BFu15s_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu16i_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu16i_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu16i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu16i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31i_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31i_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu16i_BFu0c, aBFu31i_BFu16i_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu16i_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu16i_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu16i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu16i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31i_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31i_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu16i_BFu0i, aBFu31i_BFu16i_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu16i_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu16i_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu16i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31i_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu16i_BFu0ll, aBFu31i_BFu16i_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu16i_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu16i_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu16i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu16i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu16i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31i_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31i_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu16i_BFu0s, aBFu31i_BFu16i_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu16ll_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu16ll_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31i_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu16ll_BFu0c, aBFu31i_BFu16ll_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu16ll_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu16ll_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu16ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31i_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu16ll_BFu0i, aBFu31i_BFu16ll_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu16ll_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu16ll_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31i_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu16ll_BFu0ll, aBFu31i_BFu16ll_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu16ll_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu16ll_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu16ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu16ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31i_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu16ll_BFu0s, aBFu31i_BFu16ll_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu16s_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu16s_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu16s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu16s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31i_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31i_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu16s_BFu0c, aBFu31i_BFu16s_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu16s_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu16s_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu16s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu16s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31i_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31i_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu16s_BFu0i, aBFu31i_BFu16s_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu16s_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu16s_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu16s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31i_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu16s_BFu0ll, aBFu31i_BFu16s_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu16s_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu16s_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu16s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu16s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu16s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31i_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31i_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu16s_BFu0s, aBFu31i_BFu16s_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu17i_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu17i_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu17i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu17i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "aBFu31i_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "aBFu31i_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu17i_BFu0c, aBFu31i_BFu17i_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu17i_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu17i_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu17i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu17i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "aBFu31i_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "aBFu31i_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu17i_BFu0i, aBFu31i_BFu17i_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu17i_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu17i_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu17i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "aBFu31i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "aBFu31i_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu17i_BFu0ll, aBFu31i_BFu17i_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu17i_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu17i_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu17i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu17i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu17i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "aBFu31i_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "aBFu31i_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu17i_BFu0s, aBFu31i_BFu17i_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu17ll_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu17ll_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "aBFu31i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "aBFu31i_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu17ll_BFu0c, aBFu31i_BFu17ll_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu17ll_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu17ll_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu17ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "aBFu31i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "aBFu31i_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu17ll_BFu0i, aBFu31i_BFu17ll_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu17ll_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu17ll_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "aBFu31i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "aBFu31i_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu17ll_BFu0ll, aBFu31i_BFu17ll_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu17ll_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu17ll_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu17ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_BFu17ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "aBFu31i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "aBFu31i_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu17ll_BFu0s, aBFu31i_BFu17ll_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu1c_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu1c_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu1c_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu1c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31i_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu1c_BFu0c, aBFu31i_BFu1c_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu1c_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu1c_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu1c_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu1c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu1c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31i_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu1c_BFu0i, aBFu31i_BFu1c_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu1c_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu1c_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31i_BFu1c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu1c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31i_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu1c_BFu0ll, aBFu31i_BFu1c_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu1c_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu1c_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu1c_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu1c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu1c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31i_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu1c_BFu0s, aBFu31i_BFu1c_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu1i_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu1i_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu1i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu1i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31i_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu1i_BFu0c, aBFu31i_BFu1i_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu1i_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu1i_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu1i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu1i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu1i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31i_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu1i_BFu0i, aBFu31i_BFu1i_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu1i_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu1i_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31i_BFu1i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu1i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31i_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu1i_BFu0ll, aBFu31i_BFu1i_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu1i_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu1i_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu1i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu1i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu1i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31i_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu1i_BFu0s, aBFu31i_BFu1i_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu1ll_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu1ll_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu1ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31i_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu1ll_BFu0c, aBFu31i_BFu1ll_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu1ll_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu1ll_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu1ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu1ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu1ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31i_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu1ll_BFu0i, aBFu31i_BFu1ll_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu1ll_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu1ll_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31i_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31i_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu1ll_BFu0ll, aBFu31i_BFu1ll_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu1ll_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu1ll_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu1ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu1ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu1ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31i_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu1ll_BFu0s, aBFu31i_BFu1ll_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu1s_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu1s_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu1s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu1s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31i_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu1s_BFu0c, aBFu31i_BFu1s_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu1s_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu1s_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu1s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu1s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu1s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31i_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu1s_BFu0i, aBFu31i_BFu1s_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu1s_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu1s_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31i_BFu1s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu1s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31i_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu1s_BFu0ll, aBFu31i_BFu1s_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu1s_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu1s_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu1s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31i_BFu1s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu1s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31i_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu1s_BFu0s, aBFu31i_BFu1s_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu31i_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu31i_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu31i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu31i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "aBFu31i_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "aBFu31i_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu31i_BFu0c, aBFu31i_BFu31i_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu31i_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu31i_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu31i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu31i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu31i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "aBFu31i_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "aBFu31i_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu31i_BFu0i, aBFu31i_BFu31i_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu31i_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu31i_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu31i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu31i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "aBFu31i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "aBFu31i_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu31i_BFu0ll, aBFu31i_BFu31i_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu31i_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu31i_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu31i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu31i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu31i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "aBFu31i_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "aBFu31i_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu31i_BFu0s, aBFu31i_BFu31i_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu31ll_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu31ll_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "aBFu31i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "aBFu31i_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu31ll_BFu0c, aBFu31i_BFu31ll_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu31ll_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu31ll_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu31ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "aBFu31i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "aBFu31i_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu31ll_BFu0i, aBFu31i_BFu31ll_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu31ll_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu31ll_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "aBFu31i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "aBFu31i_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu31ll_BFu0ll, aBFu31i_BFu31ll_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu31ll_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu31ll_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu31ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "aBFu31i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "aBFu31i_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu31ll_BFu0s, aBFu31i_BFu31ll_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu32i_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu32i_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu32i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu32i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "aBFu31i_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "aBFu31i_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu32i_BFu0c, aBFu31i_BFu32i_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu32i_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu32i_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu32i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu32i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu32i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "aBFu31i_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "aBFu31i_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu32i_BFu0i, aBFu31i_BFu32i_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu32i_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu32i_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu32i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu32i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "aBFu31i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "aBFu31i_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu32i_BFu0ll, aBFu31i_BFu32i_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu32i_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu32i_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu32i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu32i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu32i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "aBFu31i_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "aBFu31i_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu32i_BFu0s, aBFu31i_BFu32i_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu32ll_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu32ll_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "aBFu31i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "aBFu31i_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu32ll_BFu0c, aBFu31i_BFu32ll_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu32ll_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu32ll_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu32ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu32ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "aBFu31i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "aBFu31i_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu32ll_BFu0i, aBFu31i_BFu32ll_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu32ll_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu32ll_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "aBFu31i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "aBFu31i_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu32ll_BFu0ll, aBFu31i_BFu32ll_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu32ll_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu32ll_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu32ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu32ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "aBFu31i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "aBFu31i_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu32ll_BFu0s, aBFu31i_BFu32ll_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu33_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu33_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu33_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu33_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "aBFu31i_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "aBFu31i_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu33_BFu0c, aBFu31i_BFu33_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu33_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu33_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu33_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu33_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu33_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "aBFu31i_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "aBFu31i_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu33_BFu0i, aBFu31i_BFu33_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu33_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu33_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu33_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu33_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu33_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "aBFu31i_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "aBFu31i_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu33_BFu0ll, aBFu31i_BFu33_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu33_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu33_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu33_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_BFu33_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu33_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "aBFu31i_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "aBFu31i_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu33_BFu0s, aBFu31i_BFu33_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu7c_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu7c_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu7c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu7c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31i_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31i_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu7c_BFu0c, aBFu31i_BFu7c_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu7c_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu7c_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu7c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu7c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31i_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31i_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu7c_BFu0i, aBFu31i_BFu7c_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu7c_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu7c_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu7c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu7c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31i_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31i_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu7c_BFu0ll, aBFu31i_BFu7c_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu7c_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu7c_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu7c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu7c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31i_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31i_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu7c_BFu0s, aBFu31i_BFu7c_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu7i_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu7i_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu7i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu7i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31i_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31i_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu7i_BFu0c, aBFu31i_BFu7i_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu7i_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu7i_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu7i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu7i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31i_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31i_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu7i_BFu0i, aBFu31i_BFu7i_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu7i_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu7i_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu7i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu7i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31i_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31i_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu7i_BFu0ll, aBFu31i_BFu7i_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu7i_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu7i_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu7i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu7i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31i_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31i_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu7i_BFu0s, aBFu31i_BFu7i_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu7ll_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu7ll_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu7ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31i_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31i_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu7ll_BFu0c, aBFu31i_BFu7ll_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu7ll_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu7ll_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu7ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu7ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31i_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31i_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu7ll_BFu0i, aBFu31i_BFu7ll_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu7ll_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu7ll_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31i_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31i_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu7ll_BFu0ll, aBFu31i_BFu7ll_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu7ll_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu7ll_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu7ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu7ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31i_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31i_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu7ll_BFu0s, aBFu31i_BFu7ll_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu7s_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu7s_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu7s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu7s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31i_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31i_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu7s_BFu0c, aBFu31i_BFu7s_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu7s_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu7s_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu7s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu7s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31i_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31i_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu7s_BFu0i, aBFu31i_BFu7s_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu7s_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu7s_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu7s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu7s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31i_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31i_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu7s_BFu0ll, aBFu31i_BFu7s_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu7s_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu7s_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu7s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu7s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31i_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31i_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu7s_BFu0s, aBFu31i_BFu7s_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu8c_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu8c_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu8c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu8c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31i_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31i_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu8c_BFu0c, aBFu31i_BFu8c_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu8c_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu8c_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu8c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu8c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31i_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31i_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu8c_BFu0i, aBFu31i_BFu8c_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu8c_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu8c_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu8c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu8c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31i_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31i_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu8c_BFu0ll, aBFu31i_BFu8c_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu8c_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu8c_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu8c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu8c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu8c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31i_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31i_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu8c_BFu0s, aBFu31i_BFu8c_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu8i_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu8i_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu8i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu8i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31i_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31i_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu8i_BFu0c, aBFu31i_BFu8i_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu8i_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu8i_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu8i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu8i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31i_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31i_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu8i_BFu0i, aBFu31i_BFu8i_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu8i_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu8i_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu8i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu8i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31i_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31i_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu8i_BFu0ll, aBFu31i_BFu8i_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu8i_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu8i_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu8i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu8i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu8i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31i_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31i_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu8i_BFu0s, aBFu31i_BFu8i_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu8ll_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu8ll_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu8ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31i_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31i_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu8ll_BFu0c, aBFu31i_BFu8ll_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu8ll_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu8ll_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu8ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu8ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31i_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31i_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu8ll_BFu0i, aBFu31i_BFu8ll_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu8ll_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu8ll_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31i_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31i_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu8ll_BFu0ll, aBFu31i_BFu8ll_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu8ll_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu8ll_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu8ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu8ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu8ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31i_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31i_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu8ll_BFu0s, aBFu31i_BFu8ll_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu8s_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu8s_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu8s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu8s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31i_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31i_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu8s_BFu0c, aBFu31i_BFu8s_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu8s_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu8s_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu8s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu8s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31i_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31i_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu8s_BFu0i, aBFu31i_BFu8s_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu8s_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu8s_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu8s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu8s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31i_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31i_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu8s_BFu0ll, aBFu31i_BFu8s_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu8s_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu8s_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu8s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu8s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu8s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31i_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31i_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu8s_BFu0s, aBFu31i_BFu8s_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu9i_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu9i_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu9i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu9i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31i_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31i_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu9i_BFu0c, aBFu31i_BFu9i_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu9i_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu9i_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu9i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu9i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31i_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31i_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu9i_BFu0i, aBFu31i_BFu9i_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu9i_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu9i_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu9i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu9i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31i_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31i_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu9i_BFu0ll, aBFu31i_BFu9i_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu9i_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu9i_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu9i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu9i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu9i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31i_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31i_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu9i_BFu0s, aBFu31i_BFu9i_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu9ll_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu9ll_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu9ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31i_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31i_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu9ll_BFu0c, aBFu31i_BFu9ll_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu9ll_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu9ll_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu9ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu9ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31i_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31i_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu9ll_BFu0i, aBFu31i_BFu9ll_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu9ll_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu9ll_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31i_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31i_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu9ll_BFu0ll, aBFu31i_BFu9ll_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu9ll_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu9ll_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu9ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu9ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu9ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31i_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31i_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu9ll_BFu0s, aBFu31i_BFu9ll_BFu0s)
//============================================================================



static void Test_aBFu31i_BFu9s_BFu0c()
{
  {
    init_simple_test("aBFu31i_BFu9s_BFu0c");
    static STRUCT_IF_C aBFu31i_BFu9s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu9s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31i_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31i_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu9s_BFu0c, aBFu31i_BFu9s_BFu0c)
//============================================================================



static void Test_aBFu31i_BFu9s_BFu0i()
{
  {
    init_simple_test("aBFu31i_BFu9s_BFu0i");
    static STRUCT_IF_C aBFu31i_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu9s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu9s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31i_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31i_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu9s_BFu0i, aBFu31i_BFu9s_BFu0i)
//============================================================================



static void Test_aBFu31i_BFu9s_BFu0ll()
{
  {
    init_simple_test("aBFu31i_BFu9s_BFu0ll");
    static STRUCT_IF_C aBFu31i_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_BFu9s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu9s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31i_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31i_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu9s_BFu0ll, aBFu31i_BFu9s_BFu0ll)
//============================================================================



static void Test_aBFu31i_BFu9s_BFu0s()
{
  {
    init_simple_test("aBFu31i_BFu9s_BFu0s");
    static STRUCT_IF_C aBFu31i_BFu9s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_BFu9s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_BFu9s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31i_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31i_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_BFu9s_BFu0s, aBFu31i_BFu9s_BFu0s)
//============================================================================



static void Test_aBFu31i_C_BFu0c()
{
  {
    init_simple_test("aBFu31i_C_BFu0c");
    static STRUCT_IF_C aBFu31i_C_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_C_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_C_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31i_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_C_BFu0c, aBFu31i_C_BFu0c)
//============================================================================



static void Test_aBFu31i_C_BFu0i()
{
  {
    init_simple_test("aBFu31i_C_BFu0i");
    static STRUCT_IF_C aBFu31i_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_C_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_C_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_C_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31i_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_C_BFu0i, aBFu31i_C_BFu0i)
//============================================================================



static void Test_aBFu31i_C_BFu0ll()
{
  {
    init_simple_test("aBFu31i_C_BFu0ll");
    static STRUCT_IF_C aBFu31i_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_C_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_C_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_C_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31i_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_C_BFu0ll, aBFu31i_C_BFu0ll)
//============================================================================



static void Test_aBFu31i_C_BFu0s()
{
  {
    init_simple_test("aBFu31i_C_BFu0s");
    static STRUCT_IF_C aBFu31i_C_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_C_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_C_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_C_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31i_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_C_BFu0s, aBFu31i_C_BFu0s)
//============================================================================



static void Test_aBFu31i_D_BFu0c()
{
  {
    init_simple_test("aBFu31i_D_BFu0c");
    static STRUCT_IF_C aBFu31i_D_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_D_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_D_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31i_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_D_BFu0c, aBFu31i_D_BFu0c)
//============================================================================



static void Test_aBFu31i_D_BFu0i()
{
  {
    init_simple_test("aBFu31i_D_BFu0i");
    static STRUCT_IF_C aBFu31i_D_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_D_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_D_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_D_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31i_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_D_BFu0i, aBFu31i_D_BFu0i)
//============================================================================



static void Test_aBFu31i_D_BFu0ll()
{
  {
    init_simple_test("aBFu31i_D_BFu0ll");
    static STRUCT_IF_C aBFu31i_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu31i_D_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_D_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_D_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31i_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_D_BFu0ll, aBFu31i_D_BFu0ll)
//============================================================================



static void Test_aBFu31i_D_BFu0s()
{
  {
    init_simple_test("aBFu31i_D_BFu0s");
    static STRUCT_IF_C aBFu31i_D_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_D_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_D_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_D_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31i_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_D_BFu0s, aBFu31i_D_BFu0s)
//============================================================================



static void Test_aBFu31i_F_BFu0c()
{
  {
    init_simple_test("aBFu31i_F_BFu0c");
    static STRUCT_IF_C aBFu31i_F_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_F_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_F_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31i_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_F_BFu0c, aBFu31i_F_BFu0c)
//============================================================================



static void Test_aBFu31i_F_BFu0i()
{
  {
    init_simple_test("aBFu31i_F_BFu0i");
    static STRUCT_IF_C aBFu31i_F_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_F_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_F_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_F_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31i_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_F_BFu0i, aBFu31i_F_BFu0i)
//============================================================================



static void Test_aBFu31i_F_BFu0ll()
{
  {
    init_simple_test("aBFu31i_F_BFu0ll");
    static STRUCT_IF_C aBFu31i_F_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_F_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_F_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_F_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31i_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_F_BFu0ll, aBFu31i_F_BFu0ll)
//============================================================================



static void Test_aBFu31i_F_BFu0s()
{
  {
    init_simple_test("aBFu31i_F_BFu0s");
    static STRUCT_IF_C aBFu31i_F_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_F_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_F_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_F_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31i_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_F_BFu0s, aBFu31i_F_BFu0s)
//============================================================================



static void Test_aBFu31i_I_BFu0c()
{
  {
    init_simple_test("aBFu31i_I_BFu0c");
    static STRUCT_IF_C aBFu31i_I_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_I_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_I_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31i_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_I_BFu0c, aBFu31i_I_BFu0c)
//============================================================================



static void Test_aBFu31i_I_BFu0i()
{
  {
    init_simple_test("aBFu31i_I_BFu0i");
    static STRUCT_IF_C aBFu31i_I_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_I_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_I_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_I_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31i_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_I_BFu0i, aBFu31i_I_BFu0i)
//============================================================================



static void Test_aBFu31i_I_BFu0ll()
{
  {
    init_simple_test("aBFu31i_I_BFu0ll");
    static STRUCT_IF_C aBFu31i_I_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_I_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_I_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_I_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31i_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_I_BFu0ll, aBFu31i_I_BFu0ll)
//============================================================================



static void Test_aBFu31i_I_BFu0s()
{
  {
    init_simple_test("aBFu31i_I_BFu0s");
    static STRUCT_IF_C aBFu31i_I_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_I_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_I_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_I_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31i_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_I_BFu0s, aBFu31i_I_BFu0s)
//============================================================================



static void Test_aBFu31i_Ip_BFu0c()
{
  {
    init_simple_test("aBFu31i_Ip_BFu0c");
    static STRUCT_IF_C aBFu31i_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Ip_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Ip_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31i_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Ip_BFu0c, aBFu31i_Ip_BFu0c)
//============================================================================



static void Test_aBFu31i_Ip_BFu0i()
{
  {
    init_simple_test("aBFu31i_Ip_BFu0i");
    static STRUCT_IF_C aBFu31i_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_Ip_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Ip_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Ip_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31i_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Ip_BFu0i, aBFu31i_Ip_BFu0i)
//============================================================================



static void Test_aBFu31i_Ip_BFu0ll()
{
  {
    init_simple_test("aBFu31i_Ip_BFu0ll");
    static STRUCT_IF_C aBFu31i_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu31i_Ip_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Ip_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Ip_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31i_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Ip_BFu0ll, aBFu31i_Ip_BFu0ll)
//============================================================================



static void Test_aBFu31i_Ip_BFu0s()
{
  {
    init_simple_test("aBFu31i_Ip_BFu0s");
    static STRUCT_IF_C aBFu31i_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_Ip_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Ip_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Ip_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31i_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Ip_BFu0s, aBFu31i_Ip_BFu0s)
//============================================================================



static void Test_aBFu31i_L_BFu0c()
{
  {
    init_simple_test("aBFu31i_L_BFu0c");
    static STRUCT_IF_C aBFu31i_L_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_L_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_L_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31i_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_L_BFu0c, aBFu31i_L_BFu0c)
//============================================================================



static void Test_aBFu31i_L_BFu0i()
{
  {
    init_simple_test("aBFu31i_L_BFu0i");
    static STRUCT_IF_C aBFu31i_L_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_L_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_L_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_L_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31i_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_L_BFu0i, aBFu31i_L_BFu0i)
//============================================================================



static void Test_aBFu31i_L_BFu0ll()
{
  {
    init_simple_test("aBFu31i_L_BFu0ll");
    static STRUCT_IF_C aBFu31i_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu31i_L_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_L_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_L_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31i_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_L_BFu0ll, aBFu31i_L_BFu0ll)
//============================================================================



static void Test_aBFu31i_L_BFu0s()
{
  {
    init_simple_test("aBFu31i_L_BFu0s");
    static STRUCT_IF_C aBFu31i_L_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_L_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_L_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_L_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31i_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_L_BFu0s, aBFu31i_L_BFu0s)
//============================================================================



static void Test_aBFu31i_S_BFu0c()
{
  {
    init_simple_test("aBFu31i_S_BFu0c");
    static STRUCT_IF_C aBFu31i_S_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_S_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_S_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31i_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_S_BFu0c, aBFu31i_S_BFu0c)
//============================================================================



static void Test_aBFu31i_S_BFu0i()
{
  {
    init_simple_test("aBFu31i_S_BFu0i");
    static STRUCT_IF_C aBFu31i_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_S_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_S_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_S_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31i_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_S_BFu0i, aBFu31i_S_BFu0i)
//============================================================================



static void Test_aBFu31i_S_BFu0ll()
{
  {
    init_simple_test("aBFu31i_S_BFu0ll");
    static STRUCT_IF_C aBFu31i_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_S_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_S_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_S_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31i_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_S_BFu0ll, aBFu31i_S_BFu0ll)
//============================================================================



static void Test_aBFu31i_S_BFu0s()
{
  {
    init_simple_test("aBFu31i_S_BFu0s");
    static STRUCT_IF_C aBFu31i_S_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_S_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_S_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_S_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31i_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_S_BFu0s, aBFu31i_S_BFu0s)
//============================================================================



static void Test_aBFu31i_Uc_BFu0c()
{
  {
    init_simple_test("aBFu31i_Uc_BFu0c");
    static STRUCT_IF_C aBFu31i_Uc_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31i_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Uc_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Uc_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31i_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Uc_BFu0c, aBFu31i_Uc_BFu0c)
//============================================================================



static void Test_aBFu31i_Uc_BFu0i()
{
  {
    init_simple_test("aBFu31i_Uc_BFu0i");
    static STRUCT_IF_C aBFu31i_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_Uc_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Uc_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Uc_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31i_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Uc_BFu0i, aBFu31i_Uc_BFu0i)
//============================================================================



static void Test_aBFu31i_Uc_BFu0ll()
{
  {
    init_simple_test("aBFu31i_Uc_BFu0ll");
    static STRUCT_IF_C aBFu31i_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_Uc_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Uc_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Uc_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31i_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Uc_BFu0ll, aBFu31i_Uc_BFu0ll)
//============================================================================



static void Test_aBFu31i_Uc_BFu0s()
{
  {
    init_simple_test("aBFu31i_Uc_BFu0s");
    static STRUCT_IF_C aBFu31i_Uc_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31i_Uc_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Uc_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Uc_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31i_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Uc_BFu0s, aBFu31i_Uc_BFu0s)
//============================================================================



static void Test_aBFu31i_Ui_BFu0c()
{
  {
    init_simple_test("aBFu31i_Ui_BFu0c");
    static STRUCT_IF_C aBFu31i_Ui_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Ui_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Ui_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31i_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Ui_BFu0c, aBFu31i_Ui_BFu0c)
//============================================================================



static void Test_aBFu31i_Ui_BFu0i()
{
  {
    init_simple_test("aBFu31i_Ui_BFu0i");
    static STRUCT_IF_C aBFu31i_Ui_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_Ui_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Ui_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Ui_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31i_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Ui_BFu0i, aBFu31i_Ui_BFu0i)
//============================================================================



static void Test_aBFu31i_Ui_BFu0ll()
{
  {
    init_simple_test("aBFu31i_Ui_BFu0ll");
    static STRUCT_IF_C aBFu31i_Ui_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_Ui_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Ui_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Ui_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31i_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Ui_BFu0ll, aBFu31i_Ui_BFu0ll)
//============================================================================



static void Test_aBFu31i_Ui_BFu0s()
{
  {
    init_simple_test("aBFu31i_Ui_BFu0s");
    static STRUCT_IF_C aBFu31i_Ui_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31i_Ui_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Ui_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Ui_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31i_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Ui_BFu0s, aBFu31i_Ui_BFu0s)
//============================================================================



static void Test_aBFu31i_Ul_BFu0c()
{
  {
    init_simple_test("aBFu31i_Ul_BFu0c");
    static STRUCT_IF_C aBFu31i_Ul_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Ul_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Ul_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31i_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Ul_BFu0c, aBFu31i_Ul_BFu0c)
//============================================================================



static void Test_aBFu31i_Ul_BFu0i()
{
  {
    init_simple_test("aBFu31i_Ul_BFu0i");
    static STRUCT_IF_C aBFu31i_Ul_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_Ul_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Ul_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Ul_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31i_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Ul_BFu0i, aBFu31i_Ul_BFu0i)
//============================================================================



static void Test_aBFu31i_Ul_BFu0ll()
{
  {
    init_simple_test("aBFu31i_Ul_BFu0ll");
    static STRUCT_IF_C aBFu31i_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu31i_Ul_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Ul_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Ul_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31i_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Ul_BFu0ll, aBFu31i_Ul_BFu0ll)
//============================================================================



static void Test_aBFu31i_Ul_BFu0s()
{
  {
    init_simple_test("aBFu31i_Ul_BFu0s");
    static STRUCT_IF_C aBFu31i_Ul_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31i_Ul_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Ul_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Ul_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31i_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Ul_BFu0s, aBFu31i_Ul_BFu0s)
//============================================================================



static void Test_aBFu31i_Us_BFu0c()
{
  {
    init_simple_test("aBFu31i_Us_BFu0c");
    static STRUCT_IF_C aBFu31i_Us_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Us_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Us_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31i_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Us_BFu0c, aBFu31i_Us_BFu0c)
//============================================================================



static void Test_aBFu31i_Us_BFu0i()
{
  {
    init_simple_test("aBFu31i_Us_BFu0i");
    static STRUCT_IF_C aBFu31i_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_Us_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Us_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Us_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31i_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Us_BFu0i, aBFu31i_Us_BFu0i)
//============================================================================



static void Test_aBFu31i_Us_BFu0ll()
{
  {
    init_simple_test("aBFu31i_Us_BFu0ll");
    static STRUCT_IF_C aBFu31i_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31i_Us_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Us_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Us_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31i_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Us_BFu0ll, aBFu31i_Us_BFu0ll)
//============================================================================



static void Test_aBFu31i_Us_BFu0s()
{
  {
    init_simple_test("aBFu31i_Us_BFu0s");
    static STRUCT_IF_C aBFu31i_Us_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31i_Us_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Us_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Us_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31i_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Us_BFu0s, aBFu31i_Us_BFu0s)
//============================================================================



static void Test_aBFu31i_Vp_BFu0c()
{
  {
    init_simple_test("aBFu31i_Vp_BFu0c");
    static STRUCT_IF_C aBFu31i_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Vp_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Vp_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31i_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Vp_BFu0c, aBFu31i_Vp_BFu0c)
//============================================================================



static void Test_aBFu31i_Vp_BFu0i()
{
  {
    init_simple_test("aBFu31i_Vp_BFu0i");
    static STRUCT_IF_C aBFu31i_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_Vp_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Vp_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Vp_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31i_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Vp_BFu0i, aBFu31i_Vp_BFu0i)
//============================================================================



static void Test_aBFu31i_Vp_BFu0ll()
{
  {
    init_simple_test("aBFu31i_Vp_BFu0ll");
    static STRUCT_IF_C aBFu31i_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu31i_Vp_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Vp_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Vp_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31i_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Vp_BFu0ll, aBFu31i_Vp_BFu0ll)
//============================================================================



static void Test_aBFu31i_Vp_BFu0s()
{
  {
    init_simple_test("aBFu31i_Vp_BFu0s");
    static STRUCT_IF_C aBFu31i_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31i_Vp_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31i_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31i_Vp_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31i_Vp_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31i_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31i_Vp_BFu0s, aBFu31i_Vp_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c, aBFu31ll_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu0c, aBFu31ll_BFu0c_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu0i, aBFu31ll_BFu0c_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu0ll, aBFu31ll_BFu0c_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu0s, aBFu31ll_BFu0c_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu15i()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu15i");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31ll_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31ll_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu15i, aBFu31ll_BFu0c_BFu15i)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu15ll()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu15ll");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31ll_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31ll_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu15ll, aBFu31ll_BFu0c_BFu15ll)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu15s()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu15s");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31ll_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31ll_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu15s, aBFu31ll_BFu0c_BFu15s)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu16i()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu16i");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31ll_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31ll_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu16i, aBFu31ll_BFu0c_BFu16i)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu16ll()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu16ll");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31ll_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31ll_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu16ll, aBFu31ll_BFu0c_BFu16ll)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu16s()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu16s");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31ll_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31ll_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu16s, aBFu31ll_BFu0c_BFu16s)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu17i()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu17i");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu31ll_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu31ll_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu31ll_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu17i, aBFu31ll_BFu0c_BFu17i)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu17ll()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu17ll");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu31ll_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu31ll_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu31ll_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu17ll, aBFu31ll_BFu0c_BFu17ll)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu1c()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu1c");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31ll_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31ll_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu1c, aBFu31ll_BFu0c_BFu1c)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu1i()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu1i");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31ll_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31ll_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu1i, aBFu31ll_BFu0c_BFu1i)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu1ll()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu1ll");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31ll_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31ll_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu1ll, aBFu31ll_BFu0c_BFu1ll)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu1s()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu1s");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31ll_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31ll_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu1s, aBFu31ll_BFu0c_BFu1s)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu31i()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu31i");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu31ll_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu31i, aBFu31ll_BFu0c_BFu31i)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu31ll()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu31ll");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu31ll_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu31ll, aBFu31ll_BFu0c_BFu31ll)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu32i()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu32i");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu31ll_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu31ll_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu32i, aBFu31ll_BFu0c_BFu32i)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu32ll()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu32ll");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu31ll_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu31ll_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu32ll, aBFu31ll_BFu0c_BFu32ll)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu33()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu33");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(aBFu31ll_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, 1, "aBFu31ll_BFu0c_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu31ll_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu33, aBFu31ll_BFu0c_BFu33)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu7c()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu7c");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31ll_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31ll_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu7c, aBFu31ll_BFu0c_BFu7c)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu7i()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu7i");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31ll_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31ll_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu7i, aBFu31ll_BFu0c_BFu7i)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu7ll()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu7ll");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31ll_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31ll_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu7ll, aBFu31ll_BFu0c_BFu7ll)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu7s()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu7s");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31ll_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31ll_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu7s, aBFu31ll_BFu0c_BFu7s)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu8c()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu8c");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31ll_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31ll_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu8c, aBFu31ll_BFu0c_BFu8c)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu8i()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu8i");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31ll_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31ll_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu8i, aBFu31ll_BFu0c_BFu8i)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu8ll()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu8ll");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31ll_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31ll_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu8ll, aBFu31ll_BFu0c_BFu8ll)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu8s()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu8s");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31ll_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31ll_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu8s, aBFu31ll_BFu0c_BFu8s)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu9i()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu9i");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31ll_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31ll_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu9i, aBFu31ll_BFu0c_BFu9i)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu9ll()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu9ll");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31ll_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31ll_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu9ll, aBFu31ll_BFu0c_BFu9ll)
//============================================================================



static void Test_aBFu31ll_BFu0c_BFu9s()
{
  {
    init_simple_test("aBFu31ll_BFu0c_BFu9s");
    static STRUCT_IF_C aBFu31ll_BFu0c_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31ll_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31ll_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_BFu9s, aBFu31ll_BFu0c_BFu9s)
//============================================================================



static void Test_aBFu31ll_BFu0c_C()
{
  {
    init_simple_test("aBFu31ll_BFu0c_C");
    static STRUCT_IF_C aBFu31ll_BFu0c_C lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_C");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_C, aBFu31ll_BFu0c_C)
//============================================================================



static void Test_aBFu31ll_BFu0c_D()
{
  {
    init_simple_test("aBFu31ll_BFu0c_D");
    static STRUCT_IF_C aBFu31ll_BFu0c_D lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_D");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_D, aBFu31ll_BFu0c_D)
//============================================================================



static void Test_aBFu31ll_BFu0c_F()
{
  {
    init_simple_test("aBFu31ll_BFu0c_F");
    static STRUCT_IF_C aBFu31ll_BFu0c_F lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_F");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_F, aBFu31ll_BFu0c_F)
//============================================================================



static void Test_aBFu31ll_BFu0c_I()
{
  {
    init_simple_test("aBFu31ll_BFu0c_I");
    static STRUCT_IF_C aBFu31ll_BFu0c_I lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_I");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_I, aBFu31ll_BFu0c_I)
//============================================================================



static void Test_aBFu31ll_BFu0c_Ip()
{
  {
    init_simple_test("aBFu31ll_BFu0c_Ip");
    static STRUCT_IF_C aBFu31ll_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_Ip");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_Ip, aBFu31ll_BFu0c_Ip)
//============================================================================



static void Test_aBFu31ll_BFu0c_L()
{
  {
    init_simple_test("aBFu31ll_BFu0c_L");
    static STRUCT_IF_C aBFu31ll_BFu0c_L lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_L");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_L, aBFu31ll_BFu0c_L)
//============================================================================



static void Test_aBFu31ll_BFu0c_S()
{
  {
    init_simple_test("aBFu31ll_BFu0c_S");
    static STRUCT_IF_C aBFu31ll_BFu0c_S lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_S");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_S, aBFu31ll_BFu0c_S)
//============================================================================



static void Test_aBFu31ll_BFu0c_Uc()
{
  {
    init_simple_test("aBFu31ll_BFu0c_Uc");
    static STRUCT_IF_C aBFu31ll_BFu0c_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_Uc");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_Uc, aBFu31ll_BFu0c_Uc)
//============================================================================



static void Test_aBFu31ll_BFu0c_Ui()
{
  {
    init_simple_test("aBFu31ll_BFu0c_Ui");
    static STRUCT_IF_C aBFu31ll_BFu0c_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_Ui");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_Ui, aBFu31ll_BFu0c_Ui)
//============================================================================



static void Test_aBFu31ll_BFu0c_Ul()
{
  {
    init_simple_test("aBFu31ll_BFu0c_Ul");
    static STRUCT_IF_C aBFu31ll_BFu0c_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_Ul");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_Ul, aBFu31ll_BFu0c_Ul)
//============================================================================



static void Test_aBFu31ll_BFu0c_Us()
{
  {
    init_simple_test("aBFu31ll_BFu0c_Us");
    static STRUCT_IF_C aBFu31ll_BFu0c_Us lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_Us");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_Us, aBFu31ll_BFu0c_Us)
//============================================================================



static void Test_aBFu31ll_BFu0c_Vp()
{
  {
    init_simple_test("aBFu31ll_BFu0c_Vp");
    static STRUCT_IF_C aBFu31ll_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0c_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0c_Vp");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0c_Vp, aBFu31ll_BFu0c_Vp)
//============================================================================



static void Test_aBFu31ll_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i, aBFu31ll_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu0c, aBFu31ll_BFu0i_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu0i, aBFu31ll_BFu0i_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu0ll, aBFu31ll_BFu0i_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu0s, aBFu31ll_BFu0i_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu15i()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu15i");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31ll_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31ll_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu15i, aBFu31ll_BFu0i_BFu15i)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu15ll()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu15ll");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31ll_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31ll_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu15ll, aBFu31ll_BFu0i_BFu15ll)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu15s()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu15s");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31ll_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31ll_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu15s, aBFu31ll_BFu0i_BFu15s)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu16i()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu16i");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31ll_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31ll_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu16i, aBFu31ll_BFu0i_BFu16i)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu16ll()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu16ll");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31ll_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31ll_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu16ll, aBFu31ll_BFu0i_BFu16ll)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu16s()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu16s");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31ll_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31ll_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu16s, aBFu31ll_BFu0i_BFu16s)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu17i()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu17i");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu31ll_BFu0i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu31ll_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu31ll_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu17i, aBFu31ll_BFu0i_BFu17i)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu17ll()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu17ll");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu31ll_BFu0i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu31ll_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu31ll_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu17ll, aBFu31ll_BFu0i_BFu17ll)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu1c()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu1c");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31ll_BFu0i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31ll_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu1c, aBFu31ll_BFu0i_BFu1c)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu1i()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu1i");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31ll_BFu0i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31ll_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu1i, aBFu31ll_BFu0i_BFu1i)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu1ll()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu1ll");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31ll_BFu0i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31ll_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu1ll, aBFu31ll_BFu0i_BFu1ll)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu1s()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu1s");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31ll_BFu0i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31ll_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu1s, aBFu31ll_BFu0i_BFu1s)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu31i()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu31i");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu31ll_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu31i, aBFu31ll_BFu0i_BFu31i)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu31ll()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu31ll");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu31ll_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu31ll, aBFu31ll_BFu0i_BFu31ll)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu32i()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu32i");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu31ll_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu31ll_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu32i, aBFu31ll_BFu0i_BFu32i)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu32ll()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu32ll");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu31ll_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu31ll_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu32ll, aBFu31ll_BFu0i_BFu32ll)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu33()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu33");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(aBFu31ll_BFu0i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, 1, "aBFu31ll_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu31ll_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu33, aBFu31ll_BFu0i_BFu33)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu7c()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu7c");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31ll_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31ll_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu7c, aBFu31ll_BFu0i_BFu7c)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu7i()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu7i");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31ll_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31ll_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu7i, aBFu31ll_BFu0i_BFu7i)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu7ll()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu7ll");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31ll_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31ll_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu7ll, aBFu31ll_BFu0i_BFu7ll)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu7s()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu7s");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31ll_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31ll_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu7s, aBFu31ll_BFu0i_BFu7s)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu8c()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu8c");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31ll_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31ll_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu8c, aBFu31ll_BFu0i_BFu8c)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu8i()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu8i");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31ll_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31ll_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu8i, aBFu31ll_BFu0i_BFu8i)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu8ll()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu8ll");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31ll_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31ll_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu8ll, aBFu31ll_BFu0i_BFu8ll)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu8s()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu8s");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31ll_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31ll_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu8s, aBFu31ll_BFu0i_BFu8s)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu9i()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu9i");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu0i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31ll_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31ll_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu9i, aBFu31ll_BFu0i_BFu9i)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu9ll()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu9ll");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu0i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31ll_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31ll_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu9ll, aBFu31ll_BFu0i_BFu9ll)
//============================================================================



static void Test_aBFu31ll_BFu0i_BFu9s()
{
  {
    init_simple_test("aBFu31ll_BFu0i_BFu9s");
    static STRUCT_IF_C aBFu31ll_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu0i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31ll_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31ll_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_BFu9s, aBFu31ll_BFu0i_BFu9s)
//============================================================================



static void Test_aBFu31ll_BFu0i_C()
{
  {
    init_simple_test("aBFu31ll_BFu0i_C");
    static STRUCT_IF_C aBFu31ll_BFu0i_C lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_C");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_C, aBFu31ll_BFu0i_C)
//============================================================================



static void Test_aBFu31ll_BFu0i_D()
{
  {
    init_simple_test("aBFu31ll_BFu0i_D");
    static STRUCT_IF_C aBFu31ll_BFu0i_D lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_BFu0i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_D");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_D, aBFu31ll_BFu0i_D)
//============================================================================



static void Test_aBFu31ll_BFu0i_F()
{
  {
    init_simple_test("aBFu31ll_BFu0i_F");
    static STRUCT_IF_C aBFu31ll_BFu0i_F lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_F");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_F, aBFu31ll_BFu0i_F)
//============================================================================



static void Test_aBFu31ll_BFu0i_I()
{
  {
    init_simple_test("aBFu31ll_BFu0i_I");
    static STRUCT_IF_C aBFu31ll_BFu0i_I lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_I");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_I, aBFu31ll_BFu0i_I)
//============================================================================



static void Test_aBFu31ll_BFu0i_Ip()
{
  {
    init_simple_test("aBFu31ll_BFu0i_Ip");
    static STRUCT_IF_C aBFu31ll_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_BFu0i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_Ip");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_Ip, aBFu31ll_BFu0i_Ip)
//============================================================================



static void Test_aBFu31ll_BFu0i_L()
{
  {
    init_simple_test("aBFu31ll_BFu0i_L");
    static STRUCT_IF_C aBFu31ll_BFu0i_L lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_BFu0i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_L");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_L, aBFu31ll_BFu0i_L)
//============================================================================



static void Test_aBFu31ll_BFu0i_S()
{
  {
    init_simple_test("aBFu31ll_BFu0i_S");
    static STRUCT_IF_C aBFu31ll_BFu0i_S lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_S");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_S, aBFu31ll_BFu0i_S)
//============================================================================



static void Test_aBFu31ll_BFu0i_Uc()
{
  {
    init_simple_test("aBFu31ll_BFu0i_Uc");
    static STRUCT_IF_C aBFu31ll_BFu0i_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_Uc");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_Uc, aBFu31ll_BFu0i_Uc)
//============================================================================



static void Test_aBFu31ll_BFu0i_Ui()
{
  {
    init_simple_test("aBFu31ll_BFu0i_Ui");
    static STRUCT_IF_C aBFu31ll_BFu0i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_Ui");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_Ui, aBFu31ll_BFu0i_Ui)
//============================================================================



static void Test_aBFu31ll_BFu0i_Ul()
{
  {
    init_simple_test("aBFu31ll_BFu0i_Ul");
    static STRUCT_IF_C aBFu31ll_BFu0i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_BFu0i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_Ul");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_Ul, aBFu31ll_BFu0i_Ul)
//============================================================================



static void Test_aBFu31ll_BFu0i_Us()
{
  {
    init_simple_test("aBFu31ll_BFu0i_Us");
    static STRUCT_IF_C aBFu31ll_BFu0i_Us lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_Us");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_Us, aBFu31ll_BFu0i_Us)
//============================================================================



static void Test_aBFu31ll_BFu0i_Vp()
{
  {
    init_simple_test("aBFu31ll_BFu0i_Vp");
    static STRUCT_IF_C aBFu31ll_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_BFu0i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0i_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0i_Vp");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0i_Vp, aBFu31ll_BFu0i_Vp)
//============================================================================



static void Test_aBFu31ll_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll, aBFu31ll_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu0c, aBFu31ll_BFu0ll_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu0i, aBFu31ll_BFu0ll_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu0ll, aBFu31ll_BFu0ll_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu0s, aBFu31ll_BFu0ll_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu15i()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu15i");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31ll_BFu0ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu31ll_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31ll_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu15i, aBFu31ll_BFu0ll_BFu15i)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu15ll()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu15ll");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31ll_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu31ll_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31ll_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu15ll, aBFu31ll_BFu0ll_BFu15ll)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu15s()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu15s");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31ll_BFu0ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, 1, "aBFu31ll_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31ll_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu15s, aBFu31ll_BFu0ll_BFu15s)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu16i()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu16i");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31ll_BFu0ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu31ll_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31ll_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu16i, aBFu31ll_BFu0ll_BFu16i)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu16ll()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu16ll");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31ll_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu31ll_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31ll_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu16ll, aBFu31ll_BFu0ll_BFu16ll)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu16s()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu16s");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31ll_BFu0ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, 1, "aBFu31ll_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31ll_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu16s, aBFu31ll_BFu0ll_BFu16s)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu17i()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu17i");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu31ll_BFu0ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, 1, "aBFu31ll_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu31ll_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu17i, aBFu31ll_BFu0ll_BFu17i)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu17ll()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu17ll");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu31ll_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, 1, "aBFu31ll_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu31ll_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu17ll, aBFu31ll_BFu0ll_BFu17ll)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu1c()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu1c");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31ll_BFu0ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu31ll_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu1c, aBFu31ll_BFu0ll_BFu1c)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu1i()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu1i");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31ll_BFu0ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu31ll_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu1i, aBFu31ll_BFu0ll_BFu1i)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu1ll()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu1ll");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31ll_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu31ll_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu1ll, aBFu31ll_BFu0ll_BFu1ll)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu1s()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu1s");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31ll_BFu0ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 1, 1, "aBFu31ll_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu1s, aBFu31ll_BFu0ll_BFu1s)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu31i()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu31i");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_BFu0ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, 1, "aBFu31ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu31i, aBFu31ll_BFu0ll_BFu31i)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu31ll()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu31ll");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, 1, "aBFu31ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu31ll, aBFu31ll_BFu0ll_BFu31ll)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu32i()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu32i");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_BFu0ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, 1, "aBFu31ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu31ll_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu32i, aBFu31ll_BFu0ll_BFu32i)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu32ll()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu32ll");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, 1, "aBFu31ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu31ll_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu32ll, aBFu31ll_BFu0ll_BFu32ll)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu33()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu33");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aBFu31ll_BFu0ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 33, 1, "aBFu31ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu31ll_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu33, aBFu31ll_BFu0ll_BFu33)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu7c()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu7c");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31ll_BFu0ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu31ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31ll_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu7c, aBFu31ll_BFu0ll_BFu7c)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu7i()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu7i");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31ll_BFu0ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu31ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31ll_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu7i, aBFu31ll_BFu0ll_BFu7i)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu7ll()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu7ll");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31ll_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu31ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31ll_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu7ll, aBFu31ll_BFu0ll_BFu7ll)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu7s()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu7s");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31ll_BFu0ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, 1, "aBFu31ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31ll_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu7s, aBFu31ll_BFu0ll_BFu7s)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu8c()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu8c");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31ll_BFu0ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu31ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31ll_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu8c, aBFu31ll_BFu0ll_BFu8c)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu8i()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu8i");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31ll_BFu0ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu31ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31ll_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu8i, aBFu31ll_BFu0ll_BFu8i)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu8ll()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu8ll");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31ll_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu31ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31ll_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu8ll, aBFu31ll_BFu0ll_BFu8ll)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu8s()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu8s");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31ll_BFu0ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, 1, "aBFu31ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31ll_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu8s, aBFu31ll_BFu0ll_BFu8s)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu9i()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu9i");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31ll_BFu0ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu31ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31ll_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu9i, aBFu31ll_BFu0ll_BFu9i)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu9ll()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu9ll");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31ll_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu31ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31ll_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu9ll, aBFu31ll_BFu0ll_BFu9ll)
//============================================================================



static void Test_aBFu31ll_BFu0ll_BFu9s()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_BFu9s");
    static STRUCT_IF_C aBFu31ll_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31ll_BFu0ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, 1, "aBFu31ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31ll_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_BFu9s, aBFu31ll_BFu0ll_BFu9s)
//============================================================================



static void Test_aBFu31ll_BFu0ll_C()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_C");
    static STRUCT_IF_C aBFu31ll_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31ll_BFu0ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31ll_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_C, aBFu31ll_BFu0ll_C)
//============================================================================



static void Test_aBFu31ll_BFu0ll_D()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_D");
    static STRUCT_IF_C aBFu31ll_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu31ll_BFu0ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31ll_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_D, aBFu31ll_BFu0ll_D)
//============================================================================



static void Test_aBFu31ll_BFu0ll_F()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_F");
    static STRUCT_IF_C aBFu31ll_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_BFu0ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31ll_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_F, aBFu31ll_BFu0ll_F)
//============================================================================



static void Test_aBFu31ll_BFu0ll_I()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_I");
    static STRUCT_IF_C aBFu31ll_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_BFu0ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31ll_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_I, aBFu31ll_BFu0ll_I)
//============================================================================



static void Test_aBFu31ll_BFu0ll_Ip()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_Ip");
    static STRUCT_IF_C aBFu31ll_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu31ll_BFu0ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31ll_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_Ip, aBFu31ll_BFu0ll_Ip)
//============================================================================



static void Test_aBFu31ll_BFu0ll_L()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_L");
    static STRUCT_IF_C aBFu31ll_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu31ll_BFu0ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31ll_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_L, aBFu31ll_BFu0ll_L)
//============================================================================



static void Test_aBFu31ll_BFu0ll_S()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_S");
    static STRUCT_IF_C aBFu31ll_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31ll_BFu0ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31ll_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_S, aBFu31ll_BFu0ll_S)
//============================================================================



static void Test_aBFu31ll_BFu0ll_Uc()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_Uc");
    static STRUCT_IF_C aBFu31ll_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu31ll_BFu0ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31ll_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_Uc, aBFu31ll_BFu0ll_Uc)
//============================================================================



static void Test_aBFu31ll_BFu0ll_Ui()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_Ui");
    static STRUCT_IF_C aBFu31ll_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_BFu0ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31ll_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_Ui, aBFu31ll_BFu0ll_Ui)
//============================================================================



static void Test_aBFu31ll_BFu0ll_Ul()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_Ul");
    static STRUCT_IF_C aBFu31ll_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu31ll_BFu0ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31ll_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_Ul, aBFu31ll_BFu0ll_Ul)
//============================================================================



static void Test_aBFu31ll_BFu0ll_Us()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_Us");
    static STRUCT_IF_C aBFu31ll_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu31ll_BFu0ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31ll_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_Us, aBFu31ll_BFu0ll_Us)
//============================================================================



static void Test_aBFu31ll_BFu0ll_Vp()
{
  {
    init_simple_test("aBFu31ll_BFu0ll_Vp");
    static STRUCT_IF_C aBFu31ll_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu31ll_BFu0ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0ll_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu31ll_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0ll_Vp, aBFu31ll_BFu0ll_Vp)
//============================================================================



static void Test_aBFu31ll_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s, aBFu31ll_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu0c, aBFu31ll_BFu0s_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu0i, aBFu31ll_BFu0s_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu0ll, aBFu31ll_BFu0s_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu0s, aBFu31ll_BFu0s_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu15i()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu15i");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31ll_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu15i, aBFu31ll_BFu0s_BFu15i)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu15ll()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu15ll");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31ll_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu15ll, aBFu31ll_BFu0s_BFu15ll)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu15s()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu15s");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, 1, "aBFu31ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu31ll_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu15s, aBFu31ll_BFu0s_BFu15s)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu16i()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu16i");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31ll_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu16i, aBFu31ll_BFu0s_BFu16i)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu16ll()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu16ll");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31ll_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu16ll, aBFu31ll_BFu0s_BFu16ll)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu16s()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu16s");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, 1, "aBFu31ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu31ll_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu16s, aBFu31ll_BFu0s_BFu16s)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu17i()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu17i");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu31ll_BFu0s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu31ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu31ll_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu17i, aBFu31ll_BFu0s_BFu17i)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu17ll()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu17ll");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu31ll_BFu0s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, 1, "aBFu31ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu31ll_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu17ll, aBFu31ll_BFu0s_BFu17ll)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu1c()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu1c");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31ll_BFu0s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31ll_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu1c, aBFu31ll_BFu0s_BFu1c)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu1i()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu1i");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31ll_BFu0s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31ll_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu1i, aBFu31ll_BFu0s_BFu1i)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu1ll()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu1ll");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31ll_BFu0s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31ll_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu1ll, aBFu31ll_BFu0s_BFu1ll)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu1s()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu1s");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(aBFu31ll_BFu0s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 1, 1, "aBFu31ll_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu1s, aBFu31ll_BFu0s_BFu1s)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu31i()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu31i");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu31ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu31i, aBFu31ll_BFu0s_BFu31i)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu31ll()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu31ll");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, 1, "aBFu31ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu31ll, aBFu31ll_BFu0s_BFu31ll)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu32i()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu32i");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu31ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu31ll_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu32i, aBFu31ll_BFu0s_BFu32i)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu32ll()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu32ll");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, 1, "aBFu31ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu31ll_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu32ll, aBFu31ll_BFu0s_BFu32ll)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu33()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu33");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(aBFu31ll_BFu0s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, 1, "aBFu31ll_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu31ll_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu33, aBFu31ll_BFu0s_BFu33)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu7c()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu7c");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31ll_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu7c, aBFu31ll_BFu0s_BFu7c)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu7i()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu7i");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31ll_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu7i, aBFu31ll_BFu0s_BFu7i)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu7ll()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu7ll");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31ll_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu7ll, aBFu31ll_BFu0s_BFu7ll)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu7s()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu7s");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, 1, "aBFu31ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu31ll_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu7s, aBFu31ll_BFu0s_BFu7s)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu8c()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu8c");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31ll_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu8c, aBFu31ll_BFu0s_BFu8c)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu8i()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu8i");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31ll_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu8i, aBFu31ll_BFu0s_BFu8i)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu8ll()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu8ll");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31ll_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu8ll, aBFu31ll_BFu0s_BFu8ll)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu8s()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu8s");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, 1, "aBFu31ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu31ll_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu8s, aBFu31ll_BFu0s_BFu8s)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu9i()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu9i");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu0s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31ll_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu9i, aBFu31ll_BFu0s_BFu9i)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu9ll()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu9ll");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu0s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31ll_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu9ll, aBFu31ll_BFu0s_BFu9ll)
//============================================================================



static void Test_aBFu31ll_BFu0s_BFu9s()
{
  {
    init_simple_test("aBFu31ll_BFu0s_BFu9s");
    static STRUCT_IF_C aBFu31ll_BFu0s_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu0s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, 1, "aBFu31ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu31ll_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_BFu9s, aBFu31ll_BFu0s_BFu9s)
//============================================================================



static void Test_aBFu31ll_BFu0s_C()
{
  {
    init_simple_test("aBFu31ll_BFu0s_C");
    static STRUCT_IF_C aBFu31ll_BFu0s_C lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_C");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_C, aBFu31ll_BFu0s_C)
//============================================================================



static void Test_aBFu31ll_BFu0s_D()
{
  {
    init_simple_test("aBFu31ll_BFu0s_D");
    static STRUCT_IF_C aBFu31ll_BFu0s_D lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_BFu0s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_D");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_D, aBFu31ll_BFu0s_D)
//============================================================================



static void Test_aBFu31ll_BFu0s_F()
{
  {
    init_simple_test("aBFu31ll_BFu0s_F");
    static STRUCT_IF_C aBFu31ll_BFu0s_F lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_F");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_F, aBFu31ll_BFu0s_F)
//============================================================================



static void Test_aBFu31ll_BFu0s_I()
{
  {
    init_simple_test("aBFu31ll_BFu0s_I");
    static STRUCT_IF_C aBFu31ll_BFu0s_I lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_I");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_I, aBFu31ll_BFu0s_I)
//============================================================================



static void Test_aBFu31ll_BFu0s_Ip()
{
  {
    init_simple_test("aBFu31ll_BFu0s_Ip");
    static STRUCT_IF_C aBFu31ll_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_BFu0s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_Ip");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_Ip, aBFu31ll_BFu0s_Ip)
//============================================================================



static void Test_aBFu31ll_BFu0s_L()
{
  {
    init_simple_test("aBFu31ll_BFu0s_L");
    static STRUCT_IF_C aBFu31ll_BFu0s_L lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_BFu0s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_L");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_L, aBFu31ll_BFu0s_L)
//============================================================================



static void Test_aBFu31ll_BFu0s_S()
{
  {
    init_simple_test("aBFu31ll_BFu0s_S");
    static STRUCT_IF_C aBFu31ll_BFu0s_S lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_S");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_S, aBFu31ll_BFu0s_S)
//============================================================================



static void Test_aBFu31ll_BFu0s_Uc()
{
  {
    init_simple_test("aBFu31ll_BFu0s_Uc");
    static STRUCT_IF_C aBFu31ll_BFu0s_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu0s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_Uc");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_Uc, aBFu31ll_BFu0s_Uc)
//============================================================================



static void Test_aBFu31ll_BFu0s_Ui()
{
  {
    init_simple_test("aBFu31ll_BFu0s_Ui");
    static STRUCT_IF_C aBFu31ll_BFu0s_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu0s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_Ui");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_Ui, aBFu31ll_BFu0s_Ui)
//============================================================================



static void Test_aBFu31ll_BFu0s_Ul()
{
  {
    init_simple_test("aBFu31ll_BFu0s_Ul");
    static STRUCT_IF_C aBFu31ll_BFu0s_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_BFu0s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_Ul");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_Ul, aBFu31ll_BFu0s_Ul)
//============================================================================



static void Test_aBFu31ll_BFu0s_Us()
{
  {
    init_simple_test("aBFu31ll_BFu0s_Us");
    static STRUCT_IF_C aBFu31ll_BFu0s_Us lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu0s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_Us");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_Us, aBFu31ll_BFu0s_Us)
//============================================================================



static void Test_aBFu31ll_BFu0s_Vp()
{
  {
    init_simple_test("aBFu31ll_BFu0s_Vp");
    static STRUCT_IF_C aBFu31ll_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_BFu0s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu0s_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu0s_Vp");
    check_field_offset(lv, v2, 4, "aBFu31ll_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu0s_Vp, aBFu31ll_BFu0s_Vp)
//============================================================================



static void Test_aBFu31ll_BFu15i_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu15i_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu15i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31ll_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu15i_BFu0c, aBFu31ll_BFu15i_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu15i_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu15i_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu15i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31ll_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu15i_BFu0i, aBFu31ll_BFu15i_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu15i_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu15i_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu15i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31ll_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu15i_BFu0ll, aBFu31ll_BFu15i_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu15i_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu15i_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu15i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu15i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31ll_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu15i_BFu0s, aBFu31ll_BFu15i_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu15ll_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu15ll_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31ll_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu15ll_BFu0c, aBFu31ll_BFu15ll_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu15ll_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu15ll_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu15ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31ll_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu15ll_BFu0i, aBFu31ll_BFu15ll_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu15ll_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu15ll_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31ll_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu15ll_BFu0ll, aBFu31ll_BFu15ll_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu15ll_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu15ll_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu15ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31ll_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu15ll_BFu0s, aBFu31ll_BFu15ll_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu15s_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu15s_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu15s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31ll_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu15s_BFu0c, aBFu31ll_BFu15s_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu15s_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu15s_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu15s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31ll_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu15s_BFu0i, aBFu31ll_BFu15s_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu15s_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu15s_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu15s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31ll_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu15s_BFu0ll, aBFu31ll_BFu15s_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu15s_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu15s_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu15s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu15s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "aBFu31ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "aBFu31ll_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu15s_BFu0s, aBFu31ll_BFu15s_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu16i_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu16i_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu16i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31ll_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu16i_BFu0c, aBFu31ll_BFu16i_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu16i_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu16i_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu16i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31ll_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu16i_BFu0i, aBFu31ll_BFu16i_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu16i_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu16i_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu16i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31ll_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu16i_BFu0ll, aBFu31ll_BFu16i_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu16i_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu16i_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu16i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu16i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31ll_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu16i_BFu0s, aBFu31ll_BFu16i_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu16ll_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu16ll_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31ll_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu16ll_BFu0c, aBFu31ll_BFu16ll_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu16ll_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu16ll_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu16ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31ll_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu16ll_BFu0i, aBFu31ll_BFu16ll_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu16ll_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu16ll_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31ll_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu16ll_BFu0ll, aBFu31ll_BFu16ll_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu16ll_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu16ll_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu16ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu16ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31ll_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu16ll_BFu0s, aBFu31ll_BFu16ll_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu16s_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu16s_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu16s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31ll_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu16s_BFu0c, aBFu31ll_BFu16s_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu16s_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu16s_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu16s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31ll_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu16s_BFu0i, aBFu31ll_BFu16s_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu16s_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu16s_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu16s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31ll_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu16s_BFu0ll, aBFu31ll_BFu16s_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu16s_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu16s_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu16s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu16s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "aBFu31ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "aBFu31ll_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu16s_BFu0s, aBFu31ll_BFu16s_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu17i_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu17i_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu17i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "aBFu31ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "aBFu31ll_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu17i_BFu0c, aBFu31ll_BFu17i_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu17i_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu17i_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu17i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "aBFu31ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "aBFu31ll_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu17i_BFu0i, aBFu31ll_BFu17i_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu17i_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu17i_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu17i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "aBFu31ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "aBFu31ll_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu17i_BFu0ll, aBFu31ll_BFu17i_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu17i_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu17i_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu17i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu17i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "aBFu31ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "aBFu31ll_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu17i_BFu0s, aBFu31ll_BFu17i_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu17ll_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu17ll_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "aBFu31ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "aBFu31ll_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu17ll_BFu0c, aBFu31ll_BFu17ll_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu17ll_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu17ll_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu17ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "aBFu31ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "aBFu31ll_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu17ll_BFu0i, aBFu31ll_BFu17ll_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu17ll_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu17ll_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "aBFu31ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "aBFu31ll_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu17ll_BFu0ll, aBFu31ll_BFu17ll_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu17ll_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu17ll_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu17ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_BFu17ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "aBFu31ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "aBFu31ll_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu17ll_BFu0s, aBFu31ll_BFu17ll_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu1c_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu1c_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu1c_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu1c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31ll_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu1c_BFu0c, aBFu31ll_BFu1c_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu1c_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu1c_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu1c_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu1c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu1c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31ll_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu1c_BFu0i, aBFu31ll_BFu1c_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu1c_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu1c_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31ll_BFu1c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu1c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31ll_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu1c_BFu0ll, aBFu31ll_BFu1c_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu1c_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu1c_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu1c_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu1c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu1c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31ll_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu1c_BFu0s, aBFu31ll_BFu1c_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu1i_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu1i_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu1i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu1i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31ll_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu1i_BFu0c, aBFu31ll_BFu1i_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu1i_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu1i_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu1i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu1i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu1i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31ll_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu1i_BFu0i, aBFu31ll_BFu1i_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu1i_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu1i_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31ll_BFu1i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu1i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31ll_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu1i_BFu0ll, aBFu31ll_BFu1i_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu1i_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu1i_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu1i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu1i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu1i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31ll_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu1i_BFu0s, aBFu31ll_BFu1i_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu1ll_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu1ll_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu1ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31ll_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu1ll_BFu0c, aBFu31ll_BFu1ll_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu1ll_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu1ll_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu1ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu1ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu1ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31ll_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu1ll_BFu0i, aBFu31ll_BFu1ll_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu1ll_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu1ll_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31ll_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31ll_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu1ll_BFu0ll, aBFu31ll_BFu1ll_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu1ll_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu1ll_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu1ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu1ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu1ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31ll_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu1ll_BFu0s, aBFu31ll_BFu1ll_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu1s_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu1s_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu1s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu1s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31ll_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu1s_BFu0c, aBFu31ll_BFu1s_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu1s_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu1s_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu1s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu1s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu1s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31ll_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu1s_BFu0i, aBFu31ll_BFu1s_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu1s_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu1s_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu31ll_BFu1s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu1s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31ll_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu1s_BFu0ll, aBFu31ll_BFu1s_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu1s_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu1s_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu1s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu31ll_BFu1s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu1s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "aBFu31ll_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu1s_BFu0s, aBFu31ll_BFu1s_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu31i_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu31i_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu31i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "aBFu31ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "aBFu31ll_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu31i_BFu0c, aBFu31ll_BFu31i_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu31i_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu31i_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu31i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu31i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "aBFu31ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "aBFu31ll_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu31i_BFu0i, aBFu31ll_BFu31i_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu31i_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu31i_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu31i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu31i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "aBFu31ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "aBFu31ll_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu31i_BFu0ll, aBFu31ll_BFu31i_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu31i_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu31i_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu31i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu31i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "aBFu31ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "aBFu31ll_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu31i_BFu0s, aBFu31ll_BFu31i_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu31ll_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu31ll_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "aBFu31ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "aBFu31ll_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu31ll_BFu0c, aBFu31ll_BFu31ll_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu31ll_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu31ll_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu31ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "aBFu31ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "aBFu31ll_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu31ll_BFu0i, aBFu31ll_BFu31ll_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu31ll_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu31ll_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "aBFu31ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "aBFu31ll_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu31ll_BFu0ll, aBFu31ll_BFu31ll_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu31ll_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu31ll_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu31ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "aBFu31ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "aBFu31ll_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu31ll_BFu0s, aBFu31ll_BFu31ll_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu32i_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu32i_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu32i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "aBFu31ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "aBFu31ll_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu32i_BFu0c, aBFu31ll_BFu32i_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu32i_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu32i_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu32i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu32i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "aBFu31ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "aBFu31ll_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu32i_BFu0i, aBFu31ll_BFu32i_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu32i_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu32i_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu32i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu32i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "aBFu31ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "aBFu31ll_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu32i_BFu0ll, aBFu31ll_BFu32i_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu32i_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu32i_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu32i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu32i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "aBFu31ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "aBFu31ll_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu32i_BFu0s, aBFu31ll_BFu32i_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu32ll_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu32ll_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "aBFu31ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "aBFu31ll_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu32ll_BFu0c, aBFu31ll_BFu32ll_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu32ll_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu32ll_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu32ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu32ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "aBFu31ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "aBFu31ll_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu32ll_BFu0i, aBFu31ll_BFu32ll_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu32ll_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu32ll_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "aBFu31ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "aBFu31ll_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu32ll_BFu0ll, aBFu31ll_BFu32ll_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu32ll_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu32ll_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu32ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu32ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "aBFu31ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "aBFu31ll_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu32ll_BFu0s, aBFu31ll_BFu32ll_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu33_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu33_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu33_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu33_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "aBFu31ll_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "aBFu31ll_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu33_BFu0c, aBFu31ll_BFu33_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu33_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu33_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu33_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu33_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu33_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "aBFu31ll_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "aBFu31ll_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu33_BFu0i, aBFu31ll_BFu33_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu33_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu33_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu33_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu33_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "aBFu31ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "aBFu31ll_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu33_BFu0ll, aBFu31ll_BFu33_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu33_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu33_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu33_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_BFu33_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu33_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "aBFu31ll_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "aBFu31ll_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu33_BFu0s, aBFu31ll_BFu33_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu7c_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu7c_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu7c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31ll_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu7c_BFu0c, aBFu31ll_BFu7c_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu7c_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu7c_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu7c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31ll_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu7c_BFu0i, aBFu31ll_BFu7c_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu7c_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu7c_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu7c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31ll_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu7c_BFu0ll, aBFu31ll_BFu7c_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu7c_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu7c_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu7c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31ll_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu7c_BFu0s, aBFu31ll_BFu7c_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu7i_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu7i_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu7i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31ll_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu7i_BFu0c, aBFu31ll_BFu7i_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu7i_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu7i_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu7i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31ll_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu7i_BFu0i, aBFu31ll_BFu7i_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu7i_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu7i_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu7i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31ll_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu7i_BFu0ll, aBFu31ll_BFu7i_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu7i_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu7i_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu7i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31ll_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu7i_BFu0s, aBFu31ll_BFu7i_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu7ll_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu7ll_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31ll_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu7ll_BFu0c, aBFu31ll_BFu7ll_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu7ll_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu7ll_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu7ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31ll_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu7ll_BFu0i, aBFu31ll_BFu7ll_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu7ll_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu7ll_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31ll_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu7ll_BFu0ll, aBFu31ll_BFu7ll_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu7ll_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu7ll_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu7ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31ll_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu7ll_BFu0s, aBFu31ll_BFu7ll_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu7s_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu7s_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu7s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31ll_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu7s_BFu0c, aBFu31ll_BFu7s_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu7s_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu7s_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu7s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31ll_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu7s_BFu0i, aBFu31ll_BFu7s_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu7s_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu7s_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu7s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31ll_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu7s_BFu0ll, aBFu31ll_BFu7s_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu7s_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu7s_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu7s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "aBFu31ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "aBFu31ll_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu7s_BFu0s, aBFu31ll_BFu7s_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu8c_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu8c_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu8c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31ll_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu8c_BFu0c, aBFu31ll_BFu8c_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu8c_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu8c_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu8c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31ll_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu8c_BFu0i, aBFu31ll_BFu8c_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu8c_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu8c_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu8c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31ll_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu8c_BFu0ll, aBFu31ll_BFu8c_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu8c_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu8c_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu8c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu8c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31ll_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu8c_BFu0s, aBFu31ll_BFu8c_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu8i_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu8i_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu8i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31ll_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu8i_BFu0c, aBFu31ll_BFu8i_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu8i_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu8i_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu8i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31ll_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu8i_BFu0i, aBFu31ll_BFu8i_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu8i_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu8i_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu8i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31ll_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu8i_BFu0ll, aBFu31ll_BFu8i_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu8i_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu8i_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu8i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu8i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31ll_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu8i_BFu0s, aBFu31ll_BFu8i_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu8ll_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu8ll_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31ll_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu8ll_BFu0c, aBFu31ll_BFu8ll_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu8ll_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu8ll_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu8ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31ll_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu8ll_BFu0i, aBFu31ll_BFu8ll_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu8ll_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu8ll_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31ll_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu8ll_BFu0ll, aBFu31ll_BFu8ll_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu8ll_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu8ll_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu8ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu8ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31ll_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu8ll_BFu0s, aBFu31ll_BFu8ll_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu8s_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu8s_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu8s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31ll_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu8s_BFu0c, aBFu31ll_BFu8s_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu8s_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu8s_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu8s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31ll_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu8s_BFu0i, aBFu31ll_BFu8s_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu8s_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu8s_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu8s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31ll_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu8s_BFu0ll, aBFu31ll_BFu8s_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu8s_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu8s_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu8s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu8s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "aBFu31ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "aBFu31ll_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu8s_BFu0s, aBFu31ll_BFu8s_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu9i_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu9i_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu9i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31ll_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu9i_BFu0c, aBFu31ll_BFu9i_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu9i_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu9i_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu9i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31ll_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu9i_BFu0i, aBFu31ll_BFu9i_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu9i_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu9i_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu9i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31ll_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu9i_BFu0ll, aBFu31ll_BFu9i_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu9i_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu9i_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu9i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu9i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31ll_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu9i_BFu0s, aBFu31ll_BFu9i_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu9ll_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu9ll_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31ll_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu9ll_BFu0c, aBFu31ll_BFu9ll_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu9ll_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu9ll_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu9ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31ll_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu9ll_BFu0i, aBFu31ll_BFu9ll_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu9ll_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu9ll_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31ll_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu9ll_BFu0ll, aBFu31ll_BFu9ll_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu9ll_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu9ll_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu9ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu9ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31ll_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu9ll_BFu0s, aBFu31ll_BFu9ll_BFu0s)
//============================================================================



static void Test_aBFu31ll_BFu9s_BFu0c()
{
  {
    init_simple_test("aBFu31ll_BFu9s_BFu0c");
    static STRUCT_IF_C aBFu31ll_BFu9s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31ll_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu9s_BFu0c, aBFu31ll_BFu9s_BFu0c)
//============================================================================



static void Test_aBFu31ll_BFu9s_BFu0i()
{
  {
    init_simple_test("aBFu31ll_BFu9s_BFu0i");
    static STRUCT_IF_C aBFu31ll_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu9s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31ll_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu9s_BFu0i, aBFu31ll_BFu9s_BFu0i)
//============================================================================



static void Test_aBFu31ll_BFu9s_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_BFu9s_BFu0ll");
    static STRUCT_IF_C aBFu31ll_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_BFu9s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31ll_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu9s_BFu0ll, aBFu31ll_BFu9s_BFu0ll)
//============================================================================



static void Test_aBFu31ll_BFu9s_BFu0s()
{
  {
    init_simple_test("aBFu31ll_BFu9s_BFu0s");
    static STRUCT_IF_C aBFu31ll_BFu9s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_BFu9s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "aBFu31ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "aBFu31ll_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_BFu9s_BFu0s, aBFu31ll_BFu9s_BFu0s)
//============================================================================



static void Test_aBFu31ll_C_BFu0c()
{
  {
    init_simple_test("aBFu31ll_C_BFu0c");
    static STRUCT_IF_C aBFu31ll_C_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_C_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_C_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31ll_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_C_BFu0c, aBFu31ll_C_BFu0c)
//============================================================================



static void Test_aBFu31ll_C_BFu0i()
{
  {
    init_simple_test("aBFu31ll_C_BFu0i");
    static STRUCT_IF_C aBFu31ll_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_C_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_C_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_C_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31ll_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_C_BFu0i, aBFu31ll_C_BFu0i)
//============================================================================



static void Test_aBFu31ll_C_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_C_BFu0ll");
    static STRUCT_IF_C aBFu31ll_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_C_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_C_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_C_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31ll_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_C_BFu0ll, aBFu31ll_C_BFu0ll)
//============================================================================



static void Test_aBFu31ll_C_BFu0s()
{
  {
    init_simple_test("aBFu31ll_C_BFu0s");
    static STRUCT_IF_C aBFu31ll_C_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_C_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_C_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_C_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31ll_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_C_BFu0s, aBFu31ll_C_BFu0s)
//============================================================================



static void Test_aBFu31ll_D_BFu0c()
{
  {
    init_simple_test("aBFu31ll_D_BFu0c");
    static STRUCT_IF_C aBFu31ll_D_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_D_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_D_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31ll_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_D_BFu0c, aBFu31ll_D_BFu0c)
//============================================================================



static void Test_aBFu31ll_D_BFu0i()
{
  {
    init_simple_test("aBFu31ll_D_BFu0i");
    static STRUCT_IF_C aBFu31ll_D_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_D_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_D_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_D_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31ll_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_D_BFu0i, aBFu31ll_D_BFu0i)
//============================================================================



static void Test_aBFu31ll_D_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_D_BFu0ll");
    static STRUCT_IF_C aBFu31ll_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu31ll_D_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_D_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_D_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31ll_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_D_BFu0ll, aBFu31ll_D_BFu0ll)
//============================================================================



static void Test_aBFu31ll_D_BFu0s()
{
  {
    init_simple_test("aBFu31ll_D_BFu0s");
    static STRUCT_IF_C aBFu31ll_D_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_D_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_D_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_D_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31ll_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_D_BFu0s, aBFu31ll_D_BFu0s)
//============================================================================



static void Test_aBFu31ll_F_BFu0c()
{
  {
    init_simple_test("aBFu31ll_F_BFu0c");
    static STRUCT_IF_C aBFu31ll_F_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_F_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_F_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31ll_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_F_BFu0c, aBFu31ll_F_BFu0c)
//============================================================================



static void Test_aBFu31ll_F_BFu0i()
{
  {
    init_simple_test("aBFu31ll_F_BFu0i");
    static STRUCT_IF_C aBFu31ll_F_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_F_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_F_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_F_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31ll_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_F_BFu0i, aBFu31ll_F_BFu0i)
//============================================================================



static void Test_aBFu31ll_F_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_F_BFu0ll");
    static STRUCT_IF_C aBFu31ll_F_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_F_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_F_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_F_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31ll_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_F_BFu0ll, aBFu31ll_F_BFu0ll)
//============================================================================



static void Test_aBFu31ll_F_BFu0s()
{
  {
    init_simple_test("aBFu31ll_F_BFu0s");
    static STRUCT_IF_C aBFu31ll_F_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_F_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_F_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_F_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31ll_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_F_BFu0s, aBFu31ll_F_BFu0s)
//============================================================================



static void Test_aBFu31ll_I_BFu0c()
{
  {
    init_simple_test("aBFu31ll_I_BFu0c");
    static STRUCT_IF_C aBFu31ll_I_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_I_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_I_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31ll_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_I_BFu0c, aBFu31ll_I_BFu0c)
//============================================================================



static void Test_aBFu31ll_I_BFu0i()
{
  {
    init_simple_test("aBFu31ll_I_BFu0i");
    static STRUCT_IF_C aBFu31ll_I_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_I_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_I_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_I_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31ll_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_I_BFu0i, aBFu31ll_I_BFu0i)
//============================================================================



static void Test_aBFu31ll_I_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_I_BFu0ll");
    static STRUCT_IF_C aBFu31ll_I_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_I_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_I_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_I_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31ll_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_I_BFu0ll, aBFu31ll_I_BFu0ll)
//============================================================================



static void Test_aBFu31ll_I_BFu0s()
{
  {
    init_simple_test("aBFu31ll_I_BFu0s");
    static STRUCT_IF_C aBFu31ll_I_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_I_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_I_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_I_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31ll_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_I_BFu0s, aBFu31ll_I_BFu0s)
//============================================================================



static void Test_aBFu31ll_Ip_BFu0c()
{
  {
    init_simple_test("aBFu31ll_Ip_BFu0c");
    static STRUCT_IF_C aBFu31ll_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Ip_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Ip_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31ll_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Ip_BFu0c, aBFu31ll_Ip_BFu0c)
//============================================================================



static void Test_aBFu31ll_Ip_BFu0i()
{
  {
    init_simple_test("aBFu31ll_Ip_BFu0i");
    static STRUCT_IF_C aBFu31ll_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_Ip_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Ip_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Ip_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31ll_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Ip_BFu0i, aBFu31ll_Ip_BFu0i)
//============================================================================



static void Test_aBFu31ll_Ip_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_Ip_BFu0ll");
    static STRUCT_IF_C aBFu31ll_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu31ll_Ip_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Ip_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Ip_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31ll_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Ip_BFu0ll, aBFu31ll_Ip_BFu0ll)
//============================================================================



static void Test_aBFu31ll_Ip_BFu0s()
{
  {
    init_simple_test("aBFu31ll_Ip_BFu0s");
    static STRUCT_IF_C aBFu31ll_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_Ip_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Ip_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Ip_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31ll_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Ip_BFu0s, aBFu31ll_Ip_BFu0s)
//============================================================================



static void Test_aBFu31ll_L_BFu0c()
{
  {
    init_simple_test("aBFu31ll_L_BFu0c");
    static STRUCT_IF_C aBFu31ll_L_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_L_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_L_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31ll_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_L_BFu0c, aBFu31ll_L_BFu0c)
//============================================================================



static void Test_aBFu31ll_L_BFu0i()
{
  {
    init_simple_test("aBFu31ll_L_BFu0i");
    static STRUCT_IF_C aBFu31ll_L_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_L_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_L_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_L_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31ll_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_L_BFu0i, aBFu31ll_L_BFu0i)
//============================================================================



static void Test_aBFu31ll_L_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_L_BFu0ll");
    static STRUCT_IF_C aBFu31ll_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu31ll_L_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_L_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_L_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31ll_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_L_BFu0ll, aBFu31ll_L_BFu0ll)
//============================================================================



static void Test_aBFu31ll_L_BFu0s()
{
  {
    init_simple_test("aBFu31ll_L_BFu0s");
    static STRUCT_IF_C aBFu31ll_L_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_L_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_L_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_L_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31ll_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_L_BFu0s, aBFu31ll_L_BFu0s)
//============================================================================



static void Test_aBFu31ll_S_BFu0c()
{
  {
    init_simple_test("aBFu31ll_S_BFu0c");
    static STRUCT_IF_C aBFu31ll_S_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_S_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_S_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31ll_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_S_BFu0c, aBFu31ll_S_BFu0c)
//============================================================================



static void Test_aBFu31ll_S_BFu0i()
{
  {
    init_simple_test("aBFu31ll_S_BFu0i");
    static STRUCT_IF_C aBFu31ll_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_S_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_S_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_S_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31ll_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_S_BFu0i, aBFu31ll_S_BFu0i)
//============================================================================



static void Test_aBFu31ll_S_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_S_BFu0ll");
    static STRUCT_IF_C aBFu31ll_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_S_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_S_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_S_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31ll_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_S_BFu0ll, aBFu31ll_S_BFu0ll)
//============================================================================



static void Test_aBFu31ll_S_BFu0s()
{
  {
    init_simple_test("aBFu31ll_S_BFu0s");
    static STRUCT_IF_C aBFu31ll_S_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_S_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_S_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_S_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31ll_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_S_BFu0s, aBFu31ll_S_BFu0s)
//============================================================================



static void Test_aBFu31ll_Uc_BFu0c()
{
  {
    init_simple_test("aBFu31ll_Uc_BFu0c");
    static STRUCT_IF_C aBFu31ll_Uc_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu31ll_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Uc_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Uc_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31ll_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Uc_BFu0c, aBFu31ll_Uc_BFu0c)
//============================================================================



static void Test_aBFu31ll_Uc_BFu0i()
{
  {
    init_simple_test("aBFu31ll_Uc_BFu0i");
    static STRUCT_IF_C aBFu31ll_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_Uc_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Uc_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Uc_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31ll_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Uc_BFu0i, aBFu31ll_Uc_BFu0i)
//============================================================================



static void Test_aBFu31ll_Uc_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_Uc_BFu0ll");
    static STRUCT_IF_C aBFu31ll_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_Uc_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Uc_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Uc_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31ll_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Uc_BFu0ll, aBFu31ll_Uc_BFu0ll)
//============================================================================



static void Test_aBFu31ll_Uc_BFu0s()
{
  {
    init_simple_test("aBFu31ll_Uc_BFu0s");
    static STRUCT_IF_C aBFu31ll_Uc_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu31ll_Uc_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Uc_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Uc_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31ll_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Uc_BFu0s, aBFu31ll_Uc_BFu0s)
//============================================================================



static void Test_aBFu31ll_Ui_BFu0c()
{
  {
    init_simple_test("aBFu31ll_Ui_BFu0c");
    static STRUCT_IF_C aBFu31ll_Ui_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Ui_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Ui_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31ll_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Ui_BFu0c, aBFu31ll_Ui_BFu0c)
//============================================================================



static void Test_aBFu31ll_Ui_BFu0i()
{
  {
    init_simple_test("aBFu31ll_Ui_BFu0i");
    static STRUCT_IF_C aBFu31ll_Ui_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_Ui_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Ui_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Ui_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31ll_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Ui_BFu0i, aBFu31ll_Ui_BFu0i)
//============================================================================



static void Test_aBFu31ll_Ui_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_Ui_BFu0ll");
    static STRUCT_IF_C aBFu31ll_Ui_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_Ui_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Ui_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Ui_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31ll_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Ui_BFu0ll, aBFu31ll_Ui_BFu0ll)
//============================================================================



static void Test_aBFu31ll_Ui_BFu0s()
{
  {
    init_simple_test("aBFu31ll_Ui_BFu0s");
    static STRUCT_IF_C aBFu31ll_Ui_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu31ll_Ui_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Ui_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Ui_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31ll_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Ui_BFu0s, aBFu31ll_Ui_BFu0s)
//============================================================================



static void Test_aBFu31ll_Ul_BFu0c()
{
  {
    init_simple_test("aBFu31ll_Ul_BFu0c");
    static STRUCT_IF_C aBFu31ll_Ul_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Ul_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Ul_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31ll_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Ul_BFu0c, aBFu31ll_Ul_BFu0c)
//============================================================================



static void Test_aBFu31ll_Ul_BFu0i()
{
  {
    init_simple_test("aBFu31ll_Ul_BFu0i");
    static STRUCT_IF_C aBFu31ll_Ul_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_Ul_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Ul_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Ul_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31ll_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Ul_BFu0i, aBFu31ll_Ul_BFu0i)
//============================================================================



static void Test_aBFu31ll_Ul_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_Ul_BFu0ll");
    static STRUCT_IF_C aBFu31ll_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu31ll_Ul_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Ul_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Ul_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31ll_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Ul_BFu0ll, aBFu31ll_Ul_BFu0ll)
//============================================================================



static void Test_aBFu31ll_Ul_BFu0s()
{
  {
    init_simple_test("aBFu31ll_Ul_BFu0s");
    static STRUCT_IF_C aBFu31ll_Ul_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(aBFu31ll_Ul_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Ul_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Ul_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31ll_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Ul_BFu0s, aBFu31ll_Ul_BFu0s)
//============================================================================



static void Test_aBFu31ll_Us_BFu0c()
{
  {
    init_simple_test("aBFu31ll_Us_BFu0c");
    static STRUCT_IF_C aBFu31ll_Us_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Us_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Us_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31ll_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Us_BFu0c, aBFu31ll_Us_BFu0c)
//============================================================================



static void Test_aBFu31ll_Us_BFu0i()
{
  {
    init_simple_test("aBFu31ll_Us_BFu0i");
    static STRUCT_IF_C aBFu31ll_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_Us_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Us_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Us_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31ll_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Us_BFu0i, aBFu31ll_Us_BFu0i)
//============================================================================



static void Test_aBFu31ll_Us_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_Us_BFu0ll");
    static STRUCT_IF_C aBFu31ll_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu31ll_Us_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Us_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Us_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31ll_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Us_BFu0ll, aBFu31ll_Us_BFu0ll)
//============================================================================



static void Test_aBFu31ll_Us_BFu0s()
{
  {
    init_simple_test("aBFu31ll_Us_BFu0s");
    static STRUCT_IF_C aBFu31ll_Us_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu31ll_Us_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Us_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Us_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31ll_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Us_BFu0s, aBFu31ll_Us_BFu0s)
//============================================================================



static void Test_aBFu31ll_Vp_BFu0c()
{
  {
    init_simple_test("aBFu31ll_Vp_BFu0c");
    static STRUCT_IF_C aBFu31ll_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Vp_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Vp_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu31ll_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Vp_BFu0c, aBFu31ll_Vp_BFu0c)
//============================================================================



static void Test_aBFu31ll_Vp_BFu0i()
{
  {
    init_simple_test("aBFu31ll_Vp_BFu0i");
    static STRUCT_IF_C aBFu31ll_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_Vp_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Vp_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Vp_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu31ll_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Vp_BFu0i, aBFu31ll_Vp_BFu0i)
//============================================================================



static void Test_aBFu31ll_Vp_BFu0ll()
{
  {
    init_simple_test("aBFu31ll_Vp_BFu0ll");
    static STRUCT_IF_C aBFu31ll_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu31ll_Vp_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Vp_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Vp_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu31ll_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Vp_BFu0ll, aBFu31ll_Vp_BFu0ll)
//============================================================================



static void Test_aBFu31ll_Vp_BFu0s()
{
  {
    init_simple_test("aBFu31ll_Vp_BFu0s");
    static STRUCT_IF_C aBFu31ll_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu31ll_Vp_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu31ll_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "aBFu31ll_Vp_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "aBFu31ll_Vp_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu31ll_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu31ll_Vp_BFu0s, aBFu31ll_Vp_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c, aBFu32i_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32i_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu0c, aBFu32i_BFu0c_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32i_BFu0c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu0i, aBFu32i_BFu0c_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu32i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu0ll, aBFu32i_BFu0c_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32i_BFu0c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu0s, aBFu32i_BFu0c_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu15i()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu15i");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu15i, aBFu32i_BFu0c_BFu15i)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu15ll()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu15ll");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu15ll, aBFu32i_BFu0c_BFu15ll)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu15s()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu15s");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu15s, aBFu32i_BFu0c_BFu15s)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu16i()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu16i");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu16i, aBFu32i_BFu0c_BFu16i)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu16ll()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu16ll");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu16ll, aBFu32i_BFu0c_BFu16ll)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu16s()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu16s");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu16s, aBFu32i_BFu0c_BFu16s)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu17i()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu17i");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32i_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32i_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32i_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu17i, aBFu32i_BFu0c_BFu17i)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu17ll()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu17ll");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32i_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32i_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu17ll, aBFu32i_BFu0c_BFu17ll)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu1c()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu1c");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu1c, aBFu32i_BFu0c_BFu1c)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu1i()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu1i");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu1i, aBFu32i_BFu0c_BFu1i)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu1ll()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu1ll");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu1ll, aBFu32i_BFu0c_BFu1ll)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu1s()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu1s");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu1s, aBFu32i_BFu0c_BFu1s)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu31i()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu31i");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32i_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32i_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu31i, aBFu32i_BFu0c_BFu31i)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu31ll()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu31ll");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32i_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu31ll, aBFu32i_BFu0c_BFu31ll)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu32i()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu32i");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32i_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu32i, aBFu32i_BFu0c_BFu32i)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu32ll()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu32ll");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu32ll, aBFu32i_BFu0c_BFu32ll)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu33()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu33");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aBFu32i_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aBFu32i_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aBFu32i_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu33, aBFu32i_BFu0c_BFu33)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu7c()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu7c");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu7c, aBFu32i_BFu0c_BFu7c)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu7i()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu7i");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu7i, aBFu32i_BFu0c_BFu7i)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu7ll()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu7ll");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu7ll, aBFu32i_BFu0c_BFu7ll)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu7s()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu7s");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu7s, aBFu32i_BFu0c_BFu7s)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu8c()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu8c");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu8c, aBFu32i_BFu0c_BFu8c)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu8i()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu8i");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu8i, aBFu32i_BFu0c_BFu8i)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu8ll()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu8ll");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu8ll, aBFu32i_BFu0c_BFu8ll)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu8s()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu8s");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu8s, aBFu32i_BFu0c_BFu8s)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu9i()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu9i");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu9i, aBFu32i_BFu0c_BFu9i)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu9ll()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu9ll");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu9ll, aBFu32i_BFu0c_BFu9ll)
//============================================================================



static void Test_aBFu32i_BFu0c_BFu9s()
{
  {
    init_simple_test("aBFu32i_BFu0c_BFu9s");
    static STRUCT_IF_C aBFu32i_BFu0c_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_BFu9s, aBFu32i_BFu0c_BFu9s)
//============================================================================



static void Test_aBFu32i_BFu0c_C()
{
  {
    init_simple_test("aBFu32i_BFu0c_C");
    static STRUCT_IF_C aBFu32i_BFu0c_C lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_C");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_C, aBFu32i_BFu0c_C)
//============================================================================



static void Test_aBFu32i_BFu0c_D()
{
  {
    init_simple_test("aBFu32i_BFu0c_D");
    static STRUCT_IF_C aBFu32i_BFu0c_D lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_D");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_D, aBFu32i_BFu0c_D)
//============================================================================



static void Test_aBFu32i_BFu0c_F()
{
  {
    init_simple_test("aBFu32i_BFu0c_F");
    static STRUCT_IF_C aBFu32i_BFu0c_F lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_F");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_F, aBFu32i_BFu0c_F)
//============================================================================



static void Test_aBFu32i_BFu0c_I()
{
  {
    init_simple_test("aBFu32i_BFu0c_I");
    static STRUCT_IF_C aBFu32i_BFu0c_I lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_I");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_I, aBFu32i_BFu0c_I)
//============================================================================



static void Test_aBFu32i_BFu0c_Ip()
{
  {
    init_simple_test("aBFu32i_BFu0c_Ip");
    static STRUCT_IF_C aBFu32i_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_Ip");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_Ip, aBFu32i_BFu0c_Ip)
//============================================================================



static void Test_aBFu32i_BFu0c_L()
{
  {
    init_simple_test("aBFu32i_BFu0c_L");
    static STRUCT_IF_C aBFu32i_BFu0c_L lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_L");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_L, aBFu32i_BFu0c_L)
//============================================================================



static void Test_aBFu32i_BFu0c_S()
{
  {
    init_simple_test("aBFu32i_BFu0c_S");
    static STRUCT_IF_C aBFu32i_BFu0c_S lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_S");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_S, aBFu32i_BFu0c_S)
//============================================================================



static void Test_aBFu32i_BFu0c_Uc()
{
  {
    init_simple_test("aBFu32i_BFu0c_Uc");
    static STRUCT_IF_C aBFu32i_BFu0c_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_Uc");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_Uc, aBFu32i_BFu0c_Uc)
//============================================================================



static void Test_aBFu32i_BFu0c_Ui()
{
  {
    init_simple_test("aBFu32i_BFu0c_Ui");
    static STRUCT_IF_C aBFu32i_BFu0c_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_Ui");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_Ui, aBFu32i_BFu0c_Ui)
//============================================================================



static void Test_aBFu32i_BFu0c_Ul()
{
  {
    init_simple_test("aBFu32i_BFu0c_Ul");
    static STRUCT_IF_C aBFu32i_BFu0c_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_Ul");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_Ul, aBFu32i_BFu0c_Ul)
//============================================================================



static void Test_aBFu32i_BFu0c_Us()
{
  {
    init_simple_test("aBFu32i_BFu0c_Us");
    static STRUCT_IF_C aBFu32i_BFu0c_Us lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_Us");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_Us, aBFu32i_BFu0c_Us)
//============================================================================



static void Test_aBFu32i_BFu0c_Vp()
{
  {
    init_simple_test("aBFu32i_BFu0c_Vp");
    static STRUCT_IF_C aBFu32i_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0c_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0c_Vp");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0c_Vp, aBFu32i_BFu0c_Vp)
//============================================================================



static void Test_aBFu32i_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i, aBFu32i_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32i_BFu0i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu0c, aBFu32i_BFu0i_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32i_BFu0i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu0i, aBFu32i_BFu0i_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu32i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu0ll, aBFu32i_BFu0i_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32i_BFu0i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu0s, aBFu32i_BFu0i_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu15i()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu15i");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu15i, aBFu32i_BFu0i_BFu15i)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu15ll()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu15ll");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu15ll, aBFu32i_BFu0i_BFu15ll)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu15s()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu15s");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu15s, aBFu32i_BFu0i_BFu15s)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu16i()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu16i");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu16i, aBFu32i_BFu0i_BFu16i)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu16ll()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu16ll");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu16ll, aBFu32i_BFu0i_BFu16ll)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu16s()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu16s");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu16s, aBFu32i_BFu0i_BFu16s)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu17i()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu17i");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32i_BFu0i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32i_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32i_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu17i, aBFu32i_BFu0i_BFu17i)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu17ll()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu17ll");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32i_BFu0i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32i_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu17ll, aBFu32i_BFu0i_BFu17ll)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu1c()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu1c");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu1c, aBFu32i_BFu0i_BFu1c)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu1i()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu1i");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu1i, aBFu32i_BFu0i_BFu1i)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu1ll()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu1ll");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu1ll, aBFu32i_BFu0i_BFu1ll)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu1s()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu1s");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu1s, aBFu32i_BFu0i_BFu1s)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu31i()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu31i");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32i_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32i_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu31i, aBFu32i_BFu0i_BFu31i)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu31ll()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu31ll");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32i_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu31ll, aBFu32i_BFu0i_BFu31ll)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu32i()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu32i");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32i_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu32i, aBFu32i_BFu0i_BFu32i)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu32ll()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu32ll");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu32ll, aBFu32i_BFu0i_BFu32ll)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu33()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu33");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aBFu32i_BFu0i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aBFu32i_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aBFu32i_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu33, aBFu32i_BFu0i_BFu33)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu7c()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu7c");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu7c, aBFu32i_BFu0i_BFu7c)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu7i()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu7i");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu7i, aBFu32i_BFu0i_BFu7i)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu7ll()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu7ll");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu7ll, aBFu32i_BFu0i_BFu7ll)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu7s()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu7s");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu7s, aBFu32i_BFu0i_BFu7s)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu8c()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu8c");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu8c, aBFu32i_BFu0i_BFu8c)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu8i()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu8i");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu8i, aBFu32i_BFu0i_BFu8i)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu8ll()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu8ll");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu8ll, aBFu32i_BFu0i_BFu8ll)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu8s()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu8s");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu8s, aBFu32i_BFu0i_BFu8s)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu9i()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu9i");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu9i, aBFu32i_BFu0i_BFu9i)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu9ll()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu9ll");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu9ll, aBFu32i_BFu0i_BFu9ll)
//============================================================================



static void Test_aBFu32i_BFu0i_BFu9s()
{
  {
    init_simple_test("aBFu32i_BFu0i_BFu9s");
    static STRUCT_IF_C aBFu32i_BFu0i_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_BFu9s, aBFu32i_BFu0i_BFu9s)
//============================================================================



static void Test_aBFu32i_BFu0i_C()
{
  {
    init_simple_test("aBFu32i_BFu0i_C");
    static STRUCT_IF_C aBFu32i_BFu0i_C lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_C");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_C, aBFu32i_BFu0i_C)
//============================================================================



static void Test_aBFu32i_BFu0i_D()
{
  {
    init_simple_test("aBFu32i_BFu0i_D");
    static STRUCT_IF_C aBFu32i_BFu0i_D lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_BFu0i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_D");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_D, aBFu32i_BFu0i_D)
//============================================================================



static void Test_aBFu32i_BFu0i_F()
{
  {
    init_simple_test("aBFu32i_BFu0i_F");
    static STRUCT_IF_C aBFu32i_BFu0i_F lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_F");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_F, aBFu32i_BFu0i_F)
//============================================================================



static void Test_aBFu32i_BFu0i_I()
{
  {
    init_simple_test("aBFu32i_BFu0i_I");
    static STRUCT_IF_C aBFu32i_BFu0i_I lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_I");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_I, aBFu32i_BFu0i_I)
//============================================================================



static void Test_aBFu32i_BFu0i_Ip()
{
  {
    init_simple_test("aBFu32i_BFu0i_Ip");
    static STRUCT_IF_C aBFu32i_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_BFu0i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_Ip");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_Ip, aBFu32i_BFu0i_Ip)
//============================================================================



static void Test_aBFu32i_BFu0i_L()
{
  {
    init_simple_test("aBFu32i_BFu0i_L");
    static STRUCT_IF_C aBFu32i_BFu0i_L lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_BFu0i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_L");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_L, aBFu32i_BFu0i_L)
//============================================================================



static void Test_aBFu32i_BFu0i_S()
{
  {
    init_simple_test("aBFu32i_BFu0i_S");
    static STRUCT_IF_C aBFu32i_BFu0i_S lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_S");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_S, aBFu32i_BFu0i_S)
//============================================================================



static void Test_aBFu32i_BFu0i_Uc()
{
  {
    init_simple_test("aBFu32i_BFu0i_Uc");
    static STRUCT_IF_C aBFu32i_BFu0i_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_Uc");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_Uc, aBFu32i_BFu0i_Uc)
//============================================================================



static void Test_aBFu32i_BFu0i_Ui()
{
  {
    init_simple_test("aBFu32i_BFu0i_Ui");
    static STRUCT_IF_C aBFu32i_BFu0i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_Ui");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_Ui, aBFu32i_BFu0i_Ui)
//============================================================================



static void Test_aBFu32i_BFu0i_Ul()
{
  {
    init_simple_test("aBFu32i_BFu0i_Ul");
    static STRUCT_IF_C aBFu32i_BFu0i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_BFu0i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_Ul");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_Ul, aBFu32i_BFu0i_Ul)
//============================================================================



static void Test_aBFu32i_BFu0i_Us()
{
  {
    init_simple_test("aBFu32i_BFu0i_Us");
    static STRUCT_IF_C aBFu32i_BFu0i_Us lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_Us");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_Us, aBFu32i_BFu0i_Us)
//============================================================================



static void Test_aBFu32i_BFu0i_Vp()
{
  {
    init_simple_test("aBFu32i_BFu0i_Vp");
    static STRUCT_IF_C aBFu32i_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_BFu0i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0i_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0i_Vp");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0i_Vp, aBFu32i_BFu0i_Vp)
//============================================================================



static void Test_aBFu32i_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu32i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll, aBFu32i_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu32i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu0c, aBFu32i_BFu0ll_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu32i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu0i, aBFu32i_BFu0ll_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu32i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu0ll, aBFu32i_BFu0ll_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu32i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu0s, aBFu32i_BFu0ll_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu15i()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu15i");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32i_BFu0ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "aBFu32i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu15i, aBFu32i_BFu0ll_BFu15i)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu15ll()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu15ll");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32i_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "aBFu32i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu15ll, aBFu32i_BFu0ll_BFu15ll)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu15s()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu15s");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32i_BFu0ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "aBFu32i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu15s, aBFu32i_BFu0ll_BFu15s)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu16i()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu16i");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32i_BFu0ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "aBFu32i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu16i, aBFu32i_BFu0ll_BFu16i)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu16ll()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu16ll");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32i_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "aBFu32i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu16ll, aBFu32i_BFu0ll_BFu16ll)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu16s()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu16s");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32i_BFu0ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "aBFu32i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu16s, aBFu32i_BFu0ll_BFu16s)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu17i()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu17i");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu32i_BFu0ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "aBFu32i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "aBFu32i_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu17i, aBFu32i_BFu0ll_BFu17i)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu17ll()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu17ll");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu32i_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "aBFu32i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "aBFu32i_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu17ll, aBFu32i_BFu0ll_BFu17ll)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu1c()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu1c");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32i_BFu0ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aBFu32i_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu1c, aBFu32i_BFu0ll_BFu1c)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu1i()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu1i");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32i_BFu0ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aBFu32i_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu1i, aBFu32i_BFu0ll_BFu1i)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu1ll()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu1ll");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32i_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aBFu32i_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu1ll, aBFu32i_BFu0ll_BFu1ll)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu1s()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu1s");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32i_BFu0ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aBFu32i_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu1s, aBFu32i_BFu0ll_BFu1s)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu31i()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu31i");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_BFu0ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "aBFu32i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "aBFu32i_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu31i, aBFu32i_BFu0ll_BFu31i)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu31ll()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu31ll");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "aBFu32i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "aBFu32i_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu31ll, aBFu32i_BFu0ll_BFu31ll)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu32i()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu32i");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_BFu0ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "aBFu32i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu32i, aBFu32i_BFu0ll_BFu32i)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu32ll()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu32ll");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "aBFu32i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu32ll, aBFu32i_BFu0ll_BFu32ll)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu33()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu33");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aBFu32i_BFu0ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "aBFu32i_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "aBFu32i_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu33, aBFu32i_BFu0ll_BFu33)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu7c()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu7c");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32i_BFu0ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aBFu32i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu7c, aBFu32i_BFu0ll_BFu7c)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu7i()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu7i");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32i_BFu0ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aBFu32i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu7i, aBFu32i_BFu0ll_BFu7i)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu7ll()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu7ll");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32i_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aBFu32i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu7ll, aBFu32i_BFu0ll_BFu7ll)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu7s()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu7s");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32i_BFu0ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aBFu32i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu7s, aBFu32i_BFu0ll_BFu7s)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu8c()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu8c");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32i_BFu0ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aBFu32i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu8c, aBFu32i_BFu0ll_BFu8c)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu8i()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu8i");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32i_BFu0ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aBFu32i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu8i, aBFu32i_BFu0ll_BFu8i)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu8ll()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu8ll");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32i_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aBFu32i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu8ll, aBFu32i_BFu0ll_BFu8ll)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu8s()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu8s");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32i_BFu0ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aBFu32i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu8s, aBFu32i_BFu0ll_BFu8s)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu9i()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu9i");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32i_BFu0ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "aBFu32i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu9i, aBFu32i_BFu0ll_BFu9i)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu9ll()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu9ll");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32i_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "aBFu32i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu9ll, aBFu32i_BFu0ll_BFu9ll)
//============================================================================



static void Test_aBFu32i_BFu0ll_BFu9s()
{
  {
    init_simple_test("aBFu32i_BFu0ll_BFu9s");
    static STRUCT_IF_C aBFu32i_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32i_BFu0ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "aBFu32i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_BFu9s, aBFu32i_BFu0ll_BFu9s)
//============================================================================



static void Test_aBFu32i_BFu0ll_C()
{
  {
    init_simple_test("aBFu32i_BFu0ll_C");
    static STRUCT_IF_C aBFu32i_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32i_BFu0ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32i_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_C, aBFu32i_BFu0ll_C)
//============================================================================



static void Test_aBFu32i_BFu0ll_D()
{
  {
    init_simple_test("aBFu32i_BFu0ll_D");
    static STRUCT_IF_C aBFu32i_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu32i_BFu0ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32i_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_D, aBFu32i_BFu0ll_D)
//============================================================================



static void Test_aBFu32i_BFu0ll_F()
{
  {
    init_simple_test("aBFu32i_BFu0ll_F");
    static STRUCT_IF_C aBFu32i_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_BFu0ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32i_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_F, aBFu32i_BFu0ll_F)
//============================================================================



static void Test_aBFu32i_BFu0ll_I()
{
  {
    init_simple_test("aBFu32i_BFu0ll_I");
    static STRUCT_IF_C aBFu32i_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_BFu0ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32i_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_I, aBFu32i_BFu0ll_I)
//============================================================================



static void Test_aBFu32i_BFu0ll_Ip()
{
  {
    init_simple_test("aBFu32i_BFu0ll_Ip");
    static STRUCT_IF_C aBFu32i_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu32i_BFu0ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32i_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_Ip, aBFu32i_BFu0ll_Ip)
//============================================================================



static void Test_aBFu32i_BFu0ll_L()
{
  {
    init_simple_test("aBFu32i_BFu0ll_L");
    static STRUCT_IF_C aBFu32i_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu32i_BFu0ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32i_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_L, aBFu32i_BFu0ll_L)
//============================================================================



static void Test_aBFu32i_BFu0ll_S()
{
  {
    init_simple_test("aBFu32i_BFu0ll_S");
    static STRUCT_IF_C aBFu32i_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32i_BFu0ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32i_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_S, aBFu32i_BFu0ll_S)
//============================================================================



static void Test_aBFu32i_BFu0ll_Uc()
{
  {
    init_simple_test("aBFu32i_BFu0ll_Uc");
    static STRUCT_IF_C aBFu32i_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32i_BFu0ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32i_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_Uc, aBFu32i_BFu0ll_Uc)
//============================================================================



static void Test_aBFu32i_BFu0ll_Ui()
{
  {
    init_simple_test("aBFu32i_BFu0ll_Ui");
    static STRUCT_IF_C aBFu32i_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_BFu0ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32i_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_Ui, aBFu32i_BFu0ll_Ui)
//============================================================================



static void Test_aBFu32i_BFu0ll_Ul()
{
  {
    init_simple_test("aBFu32i_BFu0ll_Ul");
    static STRUCT_IF_C aBFu32i_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu32i_BFu0ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32i_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_Ul, aBFu32i_BFu0ll_Ul)
//============================================================================



static void Test_aBFu32i_BFu0ll_Us()
{
  {
    init_simple_test("aBFu32i_BFu0ll_Us");
    static STRUCT_IF_C aBFu32i_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32i_BFu0ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32i_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_Us, aBFu32i_BFu0ll_Us)
//============================================================================



static void Test_aBFu32i_BFu0ll_Vp()
{
  {
    init_simple_test("aBFu32i_BFu0ll_Vp");
    static STRUCT_IF_C aBFu32i_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu32i_BFu0ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0ll_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32i_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0ll_Vp, aBFu32i_BFu0ll_Vp)
//============================================================================



static void Test_aBFu32i_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s, aBFu32i_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32i_BFu0s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu0c, aBFu32i_BFu0s_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32i_BFu0s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu0i, aBFu32i_BFu0s_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu32i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu0ll, aBFu32i_BFu0s_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32i_BFu0s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu0s, aBFu32i_BFu0s_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu15i()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu15i");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu15i, aBFu32i_BFu0s_BFu15i)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu15ll()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu15ll");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu15ll, aBFu32i_BFu0s_BFu15ll)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu15s()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu15s");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu15s, aBFu32i_BFu0s_BFu15s)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu16i()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu16i");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu16i, aBFu32i_BFu0s_BFu16i)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu16ll()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu16ll");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu16ll, aBFu32i_BFu0s_BFu16ll)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu16s()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu16s");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu16s, aBFu32i_BFu0s_BFu16s)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu17i()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu17i");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32i_BFu0s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32i_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32i_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu17i, aBFu32i_BFu0s_BFu17i)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu17ll()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu17ll");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32i_BFu0s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32i_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu17ll, aBFu32i_BFu0s_BFu17ll)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu1c()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu1c");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu1c, aBFu32i_BFu0s_BFu1c)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu1i()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu1i");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu1i, aBFu32i_BFu0s_BFu1i)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu1ll()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu1ll");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu1ll, aBFu32i_BFu0s_BFu1ll)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu1s()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu1s");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu1s, aBFu32i_BFu0s_BFu1s)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu31i()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu31i");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32i_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32i_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu31i, aBFu32i_BFu0s_BFu31i)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu31ll()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu31ll");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32i_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu31ll, aBFu32i_BFu0s_BFu31ll)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu32i()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu32i");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32i_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu32i, aBFu32i_BFu0s_BFu32i)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu32ll()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu32ll");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu32ll, aBFu32i_BFu0s_BFu32ll)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu33()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu33");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aBFu32i_BFu0s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aBFu32i_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aBFu32i_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu33, aBFu32i_BFu0s_BFu33)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu7c()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu7c");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu7c, aBFu32i_BFu0s_BFu7c)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu7i()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu7i");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu7i, aBFu32i_BFu0s_BFu7i)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu7ll()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu7ll");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu7ll, aBFu32i_BFu0s_BFu7ll)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu7s()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu7s");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu7s, aBFu32i_BFu0s_BFu7s)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu8c()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu8c");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu8c, aBFu32i_BFu0s_BFu8c)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu8i()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu8i");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu8i, aBFu32i_BFu0s_BFu8i)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu8ll()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu8ll");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu8ll, aBFu32i_BFu0s_BFu8ll)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu8s()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu8s");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu8s, aBFu32i_BFu0s_BFu8s)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu9i()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu9i");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu9i, aBFu32i_BFu0s_BFu9i)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu9ll()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu9ll");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu9ll, aBFu32i_BFu0s_BFu9ll)
//============================================================================



static void Test_aBFu32i_BFu0s_BFu9s()
{
  {
    init_simple_test("aBFu32i_BFu0s_BFu9s");
    static STRUCT_IF_C aBFu32i_BFu0s_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_BFu9s, aBFu32i_BFu0s_BFu9s)
//============================================================================



static void Test_aBFu32i_BFu0s_C()
{
  {
    init_simple_test("aBFu32i_BFu0s_C");
    static STRUCT_IF_C aBFu32i_BFu0s_C lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_C");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_C, aBFu32i_BFu0s_C)
//============================================================================



static void Test_aBFu32i_BFu0s_D()
{
  {
    init_simple_test("aBFu32i_BFu0s_D");
    static STRUCT_IF_C aBFu32i_BFu0s_D lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_BFu0s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_D");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_D, aBFu32i_BFu0s_D)
//============================================================================



static void Test_aBFu32i_BFu0s_F()
{
  {
    init_simple_test("aBFu32i_BFu0s_F");
    static STRUCT_IF_C aBFu32i_BFu0s_F lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_F");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_F, aBFu32i_BFu0s_F)
//============================================================================



static void Test_aBFu32i_BFu0s_I()
{
  {
    init_simple_test("aBFu32i_BFu0s_I");
    static STRUCT_IF_C aBFu32i_BFu0s_I lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_I");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_I, aBFu32i_BFu0s_I)
//============================================================================



static void Test_aBFu32i_BFu0s_Ip()
{
  {
    init_simple_test("aBFu32i_BFu0s_Ip");
    static STRUCT_IF_C aBFu32i_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_BFu0s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_Ip");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_Ip, aBFu32i_BFu0s_Ip)
//============================================================================



static void Test_aBFu32i_BFu0s_L()
{
  {
    init_simple_test("aBFu32i_BFu0s_L");
    static STRUCT_IF_C aBFu32i_BFu0s_L lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_BFu0s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_L");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_L, aBFu32i_BFu0s_L)
//============================================================================



static void Test_aBFu32i_BFu0s_S()
{
  {
    init_simple_test("aBFu32i_BFu0s_S");
    static STRUCT_IF_C aBFu32i_BFu0s_S lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_S");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_S, aBFu32i_BFu0s_S)
//============================================================================



static void Test_aBFu32i_BFu0s_Uc()
{
  {
    init_simple_test("aBFu32i_BFu0s_Uc");
    static STRUCT_IF_C aBFu32i_BFu0s_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu0s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_Uc");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_Uc, aBFu32i_BFu0s_Uc)
//============================================================================



static void Test_aBFu32i_BFu0s_Ui()
{
  {
    init_simple_test("aBFu32i_BFu0s_Ui");
    static STRUCT_IF_C aBFu32i_BFu0s_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu0s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_Ui");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_Ui, aBFu32i_BFu0s_Ui)
//============================================================================



static void Test_aBFu32i_BFu0s_Ul()
{
  {
    init_simple_test("aBFu32i_BFu0s_Ul");
    static STRUCT_IF_C aBFu32i_BFu0s_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_BFu0s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_Ul");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_Ul, aBFu32i_BFu0s_Ul)
//============================================================================



static void Test_aBFu32i_BFu0s_Us()
{
  {
    init_simple_test("aBFu32i_BFu0s_Us");
    static STRUCT_IF_C aBFu32i_BFu0s_Us lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu0s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_Us");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_Us, aBFu32i_BFu0s_Us)
//============================================================================



static void Test_aBFu32i_BFu0s_Vp()
{
  {
    init_simple_test("aBFu32i_BFu0s_Vp");
    static STRUCT_IF_C aBFu32i_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_BFu0s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu0s_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu0s_Vp");
    check_field_offset(lv, v2, 4, "aBFu32i_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu0s_Vp, aBFu32i_BFu0s_Vp)
//============================================================================



static void Test_aBFu32i_BFu15i_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu15i_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu15i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu15i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu15i_BFu0c, aBFu32i_BFu15i_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu15i_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu15i_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu15i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu15i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu15i_BFu0i, aBFu32i_BFu15i_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu15i_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu15i_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu15i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu15i_BFu0ll, aBFu32i_BFu15i_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu15i_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu15i_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu15i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu15i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu15i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu15i_BFu0s, aBFu32i_BFu15i_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu15ll_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu15ll_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu15ll_BFu0c, aBFu32i_BFu15ll_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu15ll_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu15ll_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu15ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu15ll_BFu0i, aBFu32i_BFu15ll_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu15ll_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu15ll_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu15ll_BFu0ll, aBFu32i_BFu15ll_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu15ll_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu15ll_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu15ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu15ll_BFu0s, aBFu32i_BFu15ll_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu15s_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu15s_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu15s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu15s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu15s_BFu0c, aBFu32i_BFu15s_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu15s_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu15s_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu15s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu15s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu15s_BFu0i, aBFu32i_BFu15s_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu15s_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu15s_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu15s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu15s_BFu0ll, aBFu32i_BFu15s_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu15s_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu15s_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu15s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu15s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu15s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32i_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32i_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu15s_BFu0s, aBFu32i_BFu15s_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu16i_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu16i_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu16i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu16i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu16i_BFu0c, aBFu32i_BFu16i_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu16i_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu16i_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu16i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu16i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu16i_BFu0i, aBFu32i_BFu16i_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu16i_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu16i_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu16i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu16i_BFu0ll, aBFu32i_BFu16i_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu16i_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu16i_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu16i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu16i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu16i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu16i_BFu0s, aBFu32i_BFu16i_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu16ll_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu16ll_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu16ll_BFu0c, aBFu32i_BFu16ll_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu16ll_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu16ll_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu16ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu16ll_BFu0i, aBFu32i_BFu16ll_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu16ll_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu16ll_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu16ll_BFu0ll, aBFu32i_BFu16ll_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu16ll_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu16ll_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu16ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu16ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu16ll_BFu0s, aBFu32i_BFu16ll_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu16s_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu16s_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu16s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu16s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu16s_BFu0c, aBFu32i_BFu16s_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu16s_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu16s_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu16s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu16s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu16s_BFu0i, aBFu32i_BFu16s_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu16s_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu16s_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu16s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu16s_BFu0ll, aBFu32i_BFu16s_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu16s_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu16s_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu16s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu16s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu16s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32i_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32i_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu16s_BFu0s, aBFu32i_BFu16s_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu17i_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu17i_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu17i_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32i_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu17i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32i_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32i_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu17i_BFu0c, aBFu32i_BFu17i_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu17i_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu17i_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu17i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu17i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32i_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32i_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu17i_BFu0i, aBFu32i_BFu17i_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu17i_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu17i_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu17i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32i_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu17i_BFu0ll, aBFu32i_BFu17i_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu17i_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu17i_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu17i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu17i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32i_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32i_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu17i_BFu0s, aBFu32i_BFu17i_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu17ll_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu17ll_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32i_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32i_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu17ll_BFu0c, aBFu32i_BFu17ll_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu17ll_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu17ll_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu17ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32i_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu17ll_BFu0i, aBFu32i_BFu17ll_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu17ll_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu17ll_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32i_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu17ll_BFu0ll, aBFu32i_BFu17ll_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu17ll_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu17ll_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu17ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32i_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu17ll_BFu0s, aBFu32i_BFu17ll_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu1c_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu1c_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu1c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu1c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu1c_BFu0c, aBFu32i_BFu1c_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu1c_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu1c_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu1c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu1c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu1c_BFu0i, aBFu32i_BFu1c_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu1c_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu1c_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu1c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu1c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu1c_BFu0ll, aBFu32i_BFu1c_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu1c_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu1c_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32i_BFu1c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu1c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu1c_BFu0s, aBFu32i_BFu1c_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu1i_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu1i_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu1i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu1i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu1i_BFu0c, aBFu32i_BFu1i_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu1i_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu1i_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu1i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu1i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu1i_BFu0i, aBFu32i_BFu1i_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu1i_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu1i_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu1i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu1i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu1i_BFu0ll, aBFu32i_BFu1i_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu1i_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu1i_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32i_BFu1i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu1i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu1i_BFu0s, aBFu32i_BFu1i_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu1ll_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu1ll_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu1ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu1ll_BFu0c, aBFu32i_BFu1ll_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu1ll_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu1ll_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu1ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu1ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu1ll_BFu0i, aBFu32i_BFu1ll_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu1ll_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu1ll_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu1ll_BFu0ll, aBFu32i_BFu1ll_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu1ll_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu1ll_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32i_BFu1ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu1ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu1ll_BFu0s, aBFu32i_BFu1ll_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu1s_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu1s_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu1s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu1s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu1s_BFu0c, aBFu32i_BFu1s_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu1s_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu1s_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu1s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu1s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu1s_BFu0i, aBFu32i_BFu1s_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu1s_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu1s_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu1s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu1s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu1s_BFu0ll, aBFu32i_BFu1s_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu1s_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu1s_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32i_BFu1s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu1s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32i_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu1s_BFu0s, aBFu32i_BFu1s_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu31i_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu31i_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu31i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu31i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32i_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32i_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu31i_BFu0c, aBFu32i_BFu31i_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu31i_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu31i_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu31i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu31i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu31i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32i_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32i_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu31i_BFu0i, aBFu32i_BFu31i_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu31i_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu31i_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu31i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu31i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32i_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu31i_BFu0ll, aBFu32i_BFu31i_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu31i_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu31i_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu31i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu31i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu31i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32i_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32i_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu31i_BFu0s, aBFu32i_BFu31i_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu31ll_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu31ll_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32i_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu31ll_BFu0c, aBFu32i_BFu31ll_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu31ll_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu31ll_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu31ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32i_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu31ll_BFu0i, aBFu32i_BFu31ll_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu31ll_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu31ll_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32i_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu31ll_BFu0ll, aBFu32i_BFu31ll_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu31ll_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu31ll_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu31ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32i_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu31ll_BFu0s, aBFu32i_BFu31ll_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu32i_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu32i_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu32i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu32i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32i_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu32i_BFu0c, aBFu32i_BFu32i_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu32i_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu32i_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu32i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu32i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu32i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32i_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu32i_BFu0i, aBFu32i_BFu32i_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu32i_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu32i_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu32i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu32i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu32i_BFu0ll, aBFu32i_BFu32i_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu32i_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu32i_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu32i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu32i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu32i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32i_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu32i_BFu0s, aBFu32i_BFu32i_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu32ll_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu32ll_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu32ll_BFu0c, aBFu32i_BFu32ll_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu32ll_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu32ll_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu32ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu32ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu32ll_BFu0i, aBFu32i_BFu32ll_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu32ll_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu32ll_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu32ll_BFu0ll, aBFu32i_BFu32ll_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu32ll_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu32ll_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu32ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_BFu32ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu32ll_BFu0s, aBFu32i_BFu32ll_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu33_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu33_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu33_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(aBFu32i_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu33_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aBFu32i_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aBFu32i_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu33_BFu0c, aBFu32i_BFu33_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu33_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu33_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu32i_BFu33_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu33_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aBFu32i_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aBFu32i_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu33_BFu0i, aBFu32i_BFu33_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu33_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu33_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu32i_BFu33_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu33_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aBFu32i_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aBFu32i_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu33_BFu0ll, aBFu32i_BFu33_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu33_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu33_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu32i_BFu33_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu33_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aBFu32i_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aBFu32i_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu33_BFu0s, aBFu32i_BFu33_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu7c_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu7c_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu7c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu7c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu7c_BFu0c, aBFu32i_BFu7c_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu7c_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu7c_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu7c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu7c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu7c_BFu0i, aBFu32i_BFu7c_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu7c_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu7c_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu7c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu7c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu7c_BFu0ll, aBFu32i_BFu7c_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu7c_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu7c_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32i_BFu7c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu7c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu7c_BFu0s, aBFu32i_BFu7c_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu7i_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu7i_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu7i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu7i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu7i_BFu0c, aBFu32i_BFu7i_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu7i_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu7i_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu7i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu7i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu7i_BFu0i, aBFu32i_BFu7i_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu7i_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu7i_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu7i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu7i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu7i_BFu0ll, aBFu32i_BFu7i_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu7i_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu7i_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32i_BFu7i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu7i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu7i_BFu0s, aBFu32i_BFu7i_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu7ll_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu7ll_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu7ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu7ll_BFu0c, aBFu32i_BFu7ll_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu7ll_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu7ll_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu7ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu7ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu7ll_BFu0i, aBFu32i_BFu7ll_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu7ll_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu7ll_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu7ll_BFu0ll, aBFu32i_BFu7ll_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu7ll_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu7ll_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32i_BFu7ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu7ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu7ll_BFu0s, aBFu32i_BFu7ll_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu7s_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu7s_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu7s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu7s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu7s_BFu0c, aBFu32i_BFu7s_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu7s_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu7s_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu7s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu7s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu7s_BFu0i, aBFu32i_BFu7s_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu7s_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu7s_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu7s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu7s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu7s_BFu0ll, aBFu32i_BFu7s_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu7s_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu7s_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32i_BFu7s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu7s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32i_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32i_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu7s_BFu0s, aBFu32i_BFu7s_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu8c_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu8c_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu8c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu8c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu8c_BFu0c, aBFu32i_BFu8c_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu8c_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu8c_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu8c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu8c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu8c_BFu0i, aBFu32i_BFu8c_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu8c_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu8c_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu8c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu8c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu8c_BFu0ll, aBFu32i_BFu8c_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu8c_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu8c_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu8c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32i_BFu8c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu8c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu8c_BFu0s, aBFu32i_BFu8c_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu8i_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu8i_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu8i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu8i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu8i_BFu0c, aBFu32i_BFu8i_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu8i_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu8i_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu8i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu8i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu8i_BFu0i, aBFu32i_BFu8i_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu8i_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu8i_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu8i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu8i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu8i_BFu0ll, aBFu32i_BFu8i_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu8i_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu8i_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu8i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32i_BFu8i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu8i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu8i_BFu0s, aBFu32i_BFu8i_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu8ll_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu8ll_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu8ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu8ll_BFu0c, aBFu32i_BFu8ll_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu8ll_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu8ll_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu8ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu8ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu8ll_BFu0i, aBFu32i_BFu8ll_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu8ll_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu8ll_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu8ll_BFu0ll, aBFu32i_BFu8ll_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu8ll_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu8ll_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu8ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32i_BFu8ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu8ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu8ll_BFu0s, aBFu32i_BFu8ll_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu8s_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu8s_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu8s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu8s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu8s_BFu0c, aBFu32i_BFu8s_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu8s_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu8s_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu8s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu8s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu8s_BFu0i, aBFu32i_BFu8s_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu8s_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu8s_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu8s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu8s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu8s_BFu0ll, aBFu32i_BFu8s_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu8s_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu8s_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu8s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32i_BFu8s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu8s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32i_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32i_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu8s_BFu0s, aBFu32i_BFu8s_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu9i_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu9i_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu9i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu9i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu9i_BFu0c, aBFu32i_BFu9i_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu9i_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu9i_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu9i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu9i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu9i_BFu0i, aBFu32i_BFu9i_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu9i_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu9i_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu9i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu9i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu9i_BFu0ll, aBFu32i_BFu9i_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu9i_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu9i_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu9i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu9i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu9i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu9i_BFu0s, aBFu32i_BFu9i_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu9ll_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu9ll_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu9ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu9ll_BFu0c, aBFu32i_BFu9ll_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu9ll_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu9ll_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu9ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu9ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu9ll_BFu0i, aBFu32i_BFu9ll_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu9ll_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu9ll_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu9ll_BFu0ll, aBFu32i_BFu9ll_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu9ll_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu9ll_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu9ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu9ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu9ll_BFu0s, aBFu32i_BFu9ll_BFu0s)
//============================================================================



static void Test_aBFu32i_BFu9s_BFu0c()
{
  {
    init_simple_test("aBFu32i_BFu9s_BFu0c");
    static STRUCT_IF_C aBFu32i_BFu9s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu9s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu9s_BFu0c, aBFu32i_BFu9s_BFu0c)
//============================================================================



static void Test_aBFu32i_BFu9s_BFu0i()
{
  {
    init_simple_test("aBFu32i_BFu9s_BFu0i");
    static STRUCT_IF_C aBFu32i_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu9s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu9s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu9s_BFu0i, aBFu32i_BFu9s_BFu0i)
//============================================================================



static void Test_aBFu32i_BFu9s_BFu0ll()
{
  {
    init_simple_test("aBFu32i_BFu9s_BFu0ll");
    static STRUCT_IF_C aBFu32i_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_BFu9s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu9s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu9s_BFu0ll, aBFu32i_BFu9s_BFu0ll)
//============================================================================



static void Test_aBFu32i_BFu9s_BFu0s()
{
  {
    init_simple_test("aBFu32i_BFu9s_BFu0s");
    static STRUCT_IF_C aBFu32i_BFu9s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_BFu9s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_BFu9s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32i_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32i_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_BFu9s_BFu0s, aBFu32i_BFu9s_BFu0s)
//============================================================================



static void Test_aBFu32i_C_BFu0c()
{
  {
    init_simple_test("aBFu32i_C_BFu0c");
    static STRUCT_IF_C aBFu32i_C_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_C_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_C_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32i_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_C_BFu0c, aBFu32i_C_BFu0c)
//============================================================================



static void Test_aBFu32i_C_BFu0i()
{
  {
    init_simple_test("aBFu32i_C_BFu0i");
    static STRUCT_IF_C aBFu32i_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_C_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_C_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_C_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32i_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_C_BFu0i, aBFu32i_C_BFu0i)
//============================================================================



static void Test_aBFu32i_C_BFu0ll()
{
  {
    init_simple_test("aBFu32i_C_BFu0ll");
    static STRUCT_IF_C aBFu32i_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_C_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_C_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_C_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32i_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_C_BFu0ll, aBFu32i_C_BFu0ll)
//============================================================================



static void Test_aBFu32i_C_BFu0s()
{
  {
    init_simple_test("aBFu32i_C_BFu0s");
    static STRUCT_IF_C aBFu32i_C_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32i_C_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_C_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_C_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32i_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_C_BFu0s, aBFu32i_C_BFu0s)
//============================================================================



static void Test_aBFu32i_D_BFu0c()
{
  {
    init_simple_test("aBFu32i_D_BFu0c");
    static STRUCT_IF_C aBFu32i_D_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_D_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_D_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32i_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_D_BFu0c, aBFu32i_D_BFu0c)
//============================================================================



static void Test_aBFu32i_D_BFu0i()
{
  {
    init_simple_test("aBFu32i_D_BFu0i");
    static STRUCT_IF_C aBFu32i_D_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_D_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_D_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_D_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32i_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_D_BFu0i, aBFu32i_D_BFu0i)
//============================================================================



static void Test_aBFu32i_D_BFu0ll()
{
  {
    init_simple_test("aBFu32i_D_BFu0ll");
    static STRUCT_IF_C aBFu32i_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu32i_D_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_D_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_D_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32i_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_D_BFu0ll, aBFu32i_D_BFu0ll)
//============================================================================



static void Test_aBFu32i_D_BFu0s()
{
  {
    init_simple_test("aBFu32i_D_BFu0s");
    static STRUCT_IF_C aBFu32i_D_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_D_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_D_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_D_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32i_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_D_BFu0s, aBFu32i_D_BFu0s)
//============================================================================



static void Test_aBFu32i_F_BFu0c()
{
  {
    init_simple_test("aBFu32i_F_BFu0c");
    static STRUCT_IF_C aBFu32i_F_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_F_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_F_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32i_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_F_BFu0c, aBFu32i_F_BFu0c)
//============================================================================



static void Test_aBFu32i_F_BFu0i()
{
  {
    init_simple_test("aBFu32i_F_BFu0i");
    static STRUCT_IF_C aBFu32i_F_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_F_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_F_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_F_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32i_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_F_BFu0i, aBFu32i_F_BFu0i)
//============================================================================



static void Test_aBFu32i_F_BFu0ll()
{
  {
    init_simple_test("aBFu32i_F_BFu0ll");
    static STRUCT_IF_C aBFu32i_F_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_F_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_F_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_F_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32i_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_F_BFu0ll, aBFu32i_F_BFu0ll)
//============================================================================



static void Test_aBFu32i_F_BFu0s()
{
  {
    init_simple_test("aBFu32i_F_BFu0s");
    static STRUCT_IF_C aBFu32i_F_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_F_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_F_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_F_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32i_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_F_BFu0s, aBFu32i_F_BFu0s)
//============================================================================



static void Test_aBFu32i_I_BFu0c()
{
  {
    init_simple_test("aBFu32i_I_BFu0c");
    static STRUCT_IF_C aBFu32i_I_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_I_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_I_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32i_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_I_BFu0c, aBFu32i_I_BFu0c)
//============================================================================



static void Test_aBFu32i_I_BFu0i()
{
  {
    init_simple_test("aBFu32i_I_BFu0i");
    static STRUCT_IF_C aBFu32i_I_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_I_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_I_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_I_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32i_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_I_BFu0i, aBFu32i_I_BFu0i)
//============================================================================



static void Test_aBFu32i_I_BFu0ll()
{
  {
    init_simple_test("aBFu32i_I_BFu0ll");
    static STRUCT_IF_C aBFu32i_I_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_I_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_I_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_I_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32i_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_I_BFu0ll, aBFu32i_I_BFu0ll)
//============================================================================



static void Test_aBFu32i_I_BFu0s()
{
  {
    init_simple_test("aBFu32i_I_BFu0s");
    static STRUCT_IF_C aBFu32i_I_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_I_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_I_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_I_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32i_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_I_BFu0s, aBFu32i_I_BFu0s)
//============================================================================



static void Test_aBFu32i_Ip_BFu0c()
{
  {
    init_simple_test("aBFu32i_Ip_BFu0c");
    static STRUCT_IF_C aBFu32i_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Ip_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Ip_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32i_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Ip_BFu0c, aBFu32i_Ip_BFu0c)
//============================================================================



static void Test_aBFu32i_Ip_BFu0i()
{
  {
    init_simple_test("aBFu32i_Ip_BFu0i");
    static STRUCT_IF_C aBFu32i_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_Ip_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Ip_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Ip_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32i_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Ip_BFu0i, aBFu32i_Ip_BFu0i)
//============================================================================



static void Test_aBFu32i_Ip_BFu0ll()
{
  {
    init_simple_test("aBFu32i_Ip_BFu0ll");
    static STRUCT_IF_C aBFu32i_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu32i_Ip_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Ip_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Ip_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32i_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Ip_BFu0ll, aBFu32i_Ip_BFu0ll)
//============================================================================



static void Test_aBFu32i_Ip_BFu0s()
{
  {
    init_simple_test("aBFu32i_Ip_BFu0s");
    static STRUCT_IF_C aBFu32i_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_Ip_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Ip_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Ip_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32i_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Ip_BFu0s, aBFu32i_Ip_BFu0s)
//============================================================================



static void Test_aBFu32i_L_BFu0c()
{
  {
    init_simple_test("aBFu32i_L_BFu0c");
    static STRUCT_IF_C aBFu32i_L_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_L_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_L_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32i_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_L_BFu0c, aBFu32i_L_BFu0c)
//============================================================================



static void Test_aBFu32i_L_BFu0i()
{
  {
    init_simple_test("aBFu32i_L_BFu0i");
    static STRUCT_IF_C aBFu32i_L_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_L_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_L_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_L_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32i_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_L_BFu0i, aBFu32i_L_BFu0i)
//============================================================================



static void Test_aBFu32i_L_BFu0ll()
{
  {
    init_simple_test("aBFu32i_L_BFu0ll");
    static STRUCT_IF_C aBFu32i_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu32i_L_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_L_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_L_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32i_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_L_BFu0ll, aBFu32i_L_BFu0ll)
//============================================================================



static void Test_aBFu32i_L_BFu0s()
{
  {
    init_simple_test("aBFu32i_L_BFu0s");
    static STRUCT_IF_C aBFu32i_L_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_L_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_L_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_L_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32i_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_L_BFu0s, aBFu32i_L_BFu0s)
//============================================================================



static void Test_aBFu32i_S_BFu0c()
{
  {
    init_simple_test("aBFu32i_S_BFu0c");
    static STRUCT_IF_C aBFu32i_S_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_S_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_S_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32i_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_S_BFu0c, aBFu32i_S_BFu0c)
//============================================================================



static void Test_aBFu32i_S_BFu0i()
{
  {
    init_simple_test("aBFu32i_S_BFu0i");
    static STRUCT_IF_C aBFu32i_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_S_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_S_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_S_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32i_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_S_BFu0i, aBFu32i_S_BFu0i)
//============================================================================



static void Test_aBFu32i_S_BFu0ll()
{
  {
    init_simple_test("aBFu32i_S_BFu0ll");
    static STRUCT_IF_C aBFu32i_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_S_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_S_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_S_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32i_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_S_BFu0ll, aBFu32i_S_BFu0ll)
//============================================================================



static void Test_aBFu32i_S_BFu0s()
{
  {
    init_simple_test("aBFu32i_S_BFu0s");
    static STRUCT_IF_C aBFu32i_S_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_S_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_S_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_S_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32i_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_S_BFu0s, aBFu32i_S_BFu0s)
//============================================================================



static void Test_aBFu32i_Uc_BFu0c()
{
  {
    init_simple_test("aBFu32i_Uc_BFu0c");
    static STRUCT_IF_C aBFu32i_Uc_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32i_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Uc_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Uc_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32i_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Uc_BFu0c, aBFu32i_Uc_BFu0c)
//============================================================================



static void Test_aBFu32i_Uc_BFu0i()
{
  {
    init_simple_test("aBFu32i_Uc_BFu0i");
    static STRUCT_IF_C aBFu32i_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_Uc_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Uc_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Uc_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32i_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Uc_BFu0i, aBFu32i_Uc_BFu0i)
//============================================================================



static void Test_aBFu32i_Uc_BFu0ll()
{
  {
    init_simple_test("aBFu32i_Uc_BFu0ll");
    static STRUCT_IF_C aBFu32i_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_Uc_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Uc_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Uc_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32i_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Uc_BFu0ll, aBFu32i_Uc_BFu0ll)
//============================================================================



static void Test_aBFu32i_Uc_BFu0s()
{
  {
    init_simple_test("aBFu32i_Uc_BFu0s");
    static STRUCT_IF_C aBFu32i_Uc_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32i_Uc_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Uc_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Uc_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32i_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Uc_BFu0s, aBFu32i_Uc_BFu0s)
//============================================================================



static void Test_aBFu32i_Ui_BFu0c()
{
  {
    init_simple_test("aBFu32i_Ui_BFu0c");
    static STRUCT_IF_C aBFu32i_Ui_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Ui_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Ui_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32i_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Ui_BFu0c, aBFu32i_Ui_BFu0c)
//============================================================================



static void Test_aBFu32i_Ui_BFu0i()
{
  {
    init_simple_test("aBFu32i_Ui_BFu0i");
    static STRUCT_IF_C aBFu32i_Ui_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_Ui_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Ui_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Ui_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32i_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Ui_BFu0i, aBFu32i_Ui_BFu0i)
//============================================================================



static void Test_aBFu32i_Ui_BFu0ll()
{
  {
    init_simple_test("aBFu32i_Ui_BFu0ll");
    static STRUCT_IF_C aBFu32i_Ui_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_Ui_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Ui_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Ui_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32i_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Ui_BFu0ll, aBFu32i_Ui_BFu0ll)
//============================================================================



static void Test_aBFu32i_Ui_BFu0s()
{
  {
    init_simple_test("aBFu32i_Ui_BFu0s");
    static STRUCT_IF_C aBFu32i_Ui_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32i_Ui_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Ui_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Ui_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32i_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Ui_BFu0s, aBFu32i_Ui_BFu0s)
//============================================================================



static void Test_aBFu32i_Ul_BFu0c()
{
  {
    init_simple_test("aBFu32i_Ul_BFu0c");
    static STRUCT_IF_C aBFu32i_Ul_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Ul_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Ul_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32i_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Ul_BFu0c, aBFu32i_Ul_BFu0c)
//============================================================================



static void Test_aBFu32i_Ul_BFu0i()
{
  {
    init_simple_test("aBFu32i_Ul_BFu0i");
    static STRUCT_IF_C aBFu32i_Ul_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_Ul_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Ul_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Ul_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32i_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Ul_BFu0i, aBFu32i_Ul_BFu0i)
//============================================================================



static void Test_aBFu32i_Ul_BFu0ll()
{
  {
    init_simple_test("aBFu32i_Ul_BFu0ll");
    static STRUCT_IF_C aBFu32i_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu32i_Ul_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Ul_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Ul_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32i_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Ul_BFu0ll, aBFu32i_Ul_BFu0ll)
//============================================================================



static void Test_aBFu32i_Ul_BFu0s()
{
  {
    init_simple_test("aBFu32i_Ul_BFu0s");
    static STRUCT_IF_C aBFu32i_Ul_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32i_Ul_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Ul_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Ul_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32i_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Ul_BFu0s, aBFu32i_Ul_BFu0s)
//============================================================================



static void Test_aBFu32i_Us_BFu0c()
{
  {
    init_simple_test("aBFu32i_Us_BFu0c");
    static STRUCT_IF_C aBFu32i_Us_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Us_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Us_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32i_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Us_BFu0c, aBFu32i_Us_BFu0c)
//============================================================================



static void Test_aBFu32i_Us_BFu0i()
{
  {
    init_simple_test("aBFu32i_Us_BFu0i");
    static STRUCT_IF_C aBFu32i_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_Us_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Us_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Us_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32i_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Us_BFu0i, aBFu32i_Us_BFu0i)
//============================================================================



static void Test_aBFu32i_Us_BFu0ll()
{
  {
    init_simple_test("aBFu32i_Us_BFu0ll");
    static STRUCT_IF_C aBFu32i_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32i_Us_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Us_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Us_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32i_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Us_BFu0ll, aBFu32i_Us_BFu0ll)
//============================================================================



static void Test_aBFu32i_Us_BFu0s()
{
  {
    init_simple_test("aBFu32i_Us_BFu0s");
    static STRUCT_IF_C aBFu32i_Us_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32i_Us_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Us_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Us_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32i_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Us_BFu0s, aBFu32i_Us_BFu0s)
//============================================================================



static void Test_aBFu32i_Vp_BFu0c()
{
  {
    init_simple_test("aBFu32i_Vp_BFu0c");
    static STRUCT_IF_C aBFu32i_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Vp_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Vp_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32i_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Vp_BFu0c, aBFu32i_Vp_BFu0c)
//============================================================================



static void Test_aBFu32i_Vp_BFu0i()
{
  {
    init_simple_test("aBFu32i_Vp_BFu0i");
    static STRUCT_IF_C aBFu32i_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_Vp_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Vp_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Vp_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32i_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Vp_BFu0i, aBFu32i_Vp_BFu0i)
//============================================================================



static void Test_aBFu32i_Vp_BFu0ll()
{
  {
    init_simple_test("aBFu32i_Vp_BFu0ll");
    static STRUCT_IF_C aBFu32i_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu32i_Vp_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Vp_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Vp_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32i_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Vp_BFu0ll, aBFu32i_Vp_BFu0ll)
//============================================================================



static void Test_aBFu32i_Vp_BFu0s()
{
  {
    init_simple_test("aBFu32i_Vp_BFu0s");
    static STRUCT_IF_C aBFu32i_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32i_Vp_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32i_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32i_Vp_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32i_Vp_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32i_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32i_Vp_BFu0s, aBFu32i_Vp_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c, aBFu32ll_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu0c, aBFu32ll_BFu0c_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu0i, aBFu32ll_BFu0c_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu32ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu0ll, aBFu32ll_BFu0c_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu0s, aBFu32ll_BFu0c_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu15i()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu15i");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu15i, aBFu32ll_BFu0c_BFu15i)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu15ll()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu15ll");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu15ll, aBFu32ll_BFu0c_BFu15ll)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu15s()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu15s");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu15s, aBFu32ll_BFu0c_BFu15s)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu16i()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu16i");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu16i, aBFu32ll_BFu0c_BFu16i)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu16ll()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu16ll");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu16ll, aBFu32ll_BFu0c_BFu16ll)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu16s()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu16s");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu16s, aBFu32ll_BFu0c_BFu16s)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu17i()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu17i");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32ll_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32ll_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu17i, aBFu32ll_BFu0c_BFu17i)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu17ll()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu17ll");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32ll_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32ll_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu17ll, aBFu32ll_BFu0c_BFu17ll)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu1c()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu1c");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu1c, aBFu32ll_BFu0c_BFu1c)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu1i()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu1i");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu1i, aBFu32ll_BFu0c_BFu1i)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu1ll()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu1ll");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu1ll, aBFu32ll_BFu0c_BFu1ll)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu1s()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu1s");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu1s, aBFu32ll_BFu0c_BFu1s)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu31i()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu31i");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32ll_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu31i, aBFu32ll_BFu0c_BFu31i)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu31ll()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu31ll");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32ll_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu31ll, aBFu32ll_BFu0c_BFu31ll)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu32i()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu32i");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32ll_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu32i, aBFu32ll_BFu0c_BFu32i)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu32ll()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu32ll");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32ll_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu32ll, aBFu32ll_BFu0c_BFu32ll)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu33()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu33");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aBFu32ll_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aBFu32ll_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aBFu32ll_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu33, aBFu32ll_BFu0c_BFu33)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu7c()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu7c");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu7c, aBFu32ll_BFu0c_BFu7c)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu7i()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu7i");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu7i, aBFu32ll_BFu0c_BFu7i)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu7ll()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu7ll");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu7ll, aBFu32ll_BFu0c_BFu7ll)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu7s()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu7s");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu7s, aBFu32ll_BFu0c_BFu7s)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu8c()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu8c");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu8c, aBFu32ll_BFu0c_BFu8c)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu8i()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu8i");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu8i, aBFu32ll_BFu0c_BFu8i)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu8ll()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu8ll");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu8ll, aBFu32ll_BFu0c_BFu8ll)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu8s()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu8s");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu8s, aBFu32ll_BFu0c_BFu8s)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu9i()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu9i");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu9i, aBFu32ll_BFu0c_BFu9i)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu9ll()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu9ll");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu9ll, aBFu32ll_BFu0c_BFu9ll)
//============================================================================



static void Test_aBFu32ll_BFu0c_BFu9s()
{
  {
    init_simple_test("aBFu32ll_BFu0c_BFu9s");
    static STRUCT_IF_C aBFu32ll_BFu0c_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_BFu9s, aBFu32ll_BFu0c_BFu9s)
//============================================================================



static void Test_aBFu32ll_BFu0c_C()
{
  {
    init_simple_test("aBFu32ll_BFu0c_C");
    static STRUCT_IF_C aBFu32ll_BFu0c_C lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_C");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_C, aBFu32ll_BFu0c_C)
//============================================================================



static void Test_aBFu32ll_BFu0c_D()
{
  {
    init_simple_test("aBFu32ll_BFu0c_D");
    static STRUCT_IF_C aBFu32ll_BFu0c_D lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_D");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_D, aBFu32ll_BFu0c_D)
//============================================================================



static void Test_aBFu32ll_BFu0c_F()
{
  {
    init_simple_test("aBFu32ll_BFu0c_F");
    static STRUCT_IF_C aBFu32ll_BFu0c_F lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_F");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_F, aBFu32ll_BFu0c_F)
//============================================================================



static void Test_aBFu32ll_BFu0c_I()
{
  {
    init_simple_test("aBFu32ll_BFu0c_I");
    static STRUCT_IF_C aBFu32ll_BFu0c_I lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_I");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_I, aBFu32ll_BFu0c_I)
//============================================================================



static void Test_aBFu32ll_BFu0c_Ip()
{
  {
    init_simple_test("aBFu32ll_BFu0c_Ip");
    static STRUCT_IF_C aBFu32ll_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_Ip");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_Ip, aBFu32ll_BFu0c_Ip)
//============================================================================



static void Test_aBFu32ll_BFu0c_L()
{
  {
    init_simple_test("aBFu32ll_BFu0c_L");
    static STRUCT_IF_C aBFu32ll_BFu0c_L lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_L");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_L, aBFu32ll_BFu0c_L)
//============================================================================



static void Test_aBFu32ll_BFu0c_S()
{
  {
    init_simple_test("aBFu32ll_BFu0c_S");
    static STRUCT_IF_C aBFu32ll_BFu0c_S lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_S");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_S, aBFu32ll_BFu0c_S)
//============================================================================



static void Test_aBFu32ll_BFu0c_Uc()
{
  {
    init_simple_test("aBFu32ll_BFu0c_Uc");
    static STRUCT_IF_C aBFu32ll_BFu0c_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_Uc");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_Uc, aBFu32ll_BFu0c_Uc)
//============================================================================



static void Test_aBFu32ll_BFu0c_Ui()
{
  {
    init_simple_test("aBFu32ll_BFu0c_Ui");
    static STRUCT_IF_C aBFu32ll_BFu0c_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_Ui");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_Ui, aBFu32ll_BFu0c_Ui)
//============================================================================



static void Test_aBFu32ll_BFu0c_Ul()
{
  {
    init_simple_test("aBFu32ll_BFu0c_Ul");
    static STRUCT_IF_C aBFu32ll_BFu0c_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_Ul");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_Ul, aBFu32ll_BFu0c_Ul)
//============================================================================



static void Test_aBFu32ll_BFu0c_Us()
{
  {
    init_simple_test("aBFu32ll_BFu0c_Us");
    static STRUCT_IF_C aBFu32ll_BFu0c_Us lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_Us");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_Us, aBFu32ll_BFu0c_Us)
//============================================================================



static void Test_aBFu32ll_BFu0c_Vp()
{
  {
    init_simple_test("aBFu32ll_BFu0c_Vp");
    static STRUCT_IF_C aBFu32ll_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0c_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0c_Vp");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0c_Vp, aBFu32ll_BFu0c_Vp)
//============================================================================



static void Test_aBFu32ll_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i, aBFu32ll_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu0c, aBFu32ll_BFu0i_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu0i, aBFu32ll_BFu0i_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu32ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu0ll, aBFu32ll_BFu0i_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu0s, aBFu32ll_BFu0i_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu15i()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu15i");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu15i, aBFu32ll_BFu0i_BFu15i)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu15ll()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu15ll");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu15ll, aBFu32ll_BFu0i_BFu15ll)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu15s()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu15s");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu15s, aBFu32ll_BFu0i_BFu15s)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu16i()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu16i");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu16i, aBFu32ll_BFu0i_BFu16i)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu16ll()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu16ll");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu16ll, aBFu32ll_BFu0i_BFu16ll)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu16s()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu16s");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu16s, aBFu32ll_BFu0i_BFu16s)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu17i()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu17i");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32ll_BFu0i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32ll_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu17i, aBFu32ll_BFu0i_BFu17i)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu17ll()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu17ll");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32ll_BFu0i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32ll_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu17ll, aBFu32ll_BFu0i_BFu17ll)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu1c()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu1c");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu1c, aBFu32ll_BFu0i_BFu1c)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu1i()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu1i");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu1i, aBFu32ll_BFu0i_BFu1i)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu1ll()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu1ll");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu1ll, aBFu32ll_BFu0i_BFu1ll)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu1s()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu1s");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu1s, aBFu32ll_BFu0i_BFu1s)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu31i()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu31i");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32ll_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu31i, aBFu32ll_BFu0i_BFu31i)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu31ll()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu31ll");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32ll_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu31ll, aBFu32ll_BFu0i_BFu31ll)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu32i()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu32i");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32ll_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu32i, aBFu32ll_BFu0i_BFu32i)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu32ll()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu32ll");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32ll_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu32ll, aBFu32ll_BFu0i_BFu32ll)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu33()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu33");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aBFu32ll_BFu0i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aBFu32ll_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aBFu32ll_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu33, aBFu32ll_BFu0i_BFu33)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu7c()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu7c");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu7c, aBFu32ll_BFu0i_BFu7c)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu7i()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu7i");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu7i, aBFu32ll_BFu0i_BFu7i)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu7ll()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu7ll");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu7ll, aBFu32ll_BFu0i_BFu7ll)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu7s()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu7s");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu7s, aBFu32ll_BFu0i_BFu7s)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu8c()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu8c");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu8c, aBFu32ll_BFu0i_BFu8c)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu8i()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu8i");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu8i, aBFu32ll_BFu0i_BFu8i)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu8ll()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu8ll");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu8ll, aBFu32ll_BFu0i_BFu8ll)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu8s()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu8s");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu8s, aBFu32ll_BFu0i_BFu8s)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu9i()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu9i");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu9i, aBFu32ll_BFu0i_BFu9i)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu9ll()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu9ll");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu9ll, aBFu32ll_BFu0i_BFu9ll)
//============================================================================



static void Test_aBFu32ll_BFu0i_BFu9s()
{
  {
    init_simple_test("aBFu32ll_BFu0i_BFu9s");
    static STRUCT_IF_C aBFu32ll_BFu0i_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_BFu9s, aBFu32ll_BFu0i_BFu9s)
//============================================================================



static void Test_aBFu32ll_BFu0i_C()
{
  {
    init_simple_test("aBFu32ll_BFu0i_C");
    static STRUCT_IF_C aBFu32ll_BFu0i_C lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_C");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_C, aBFu32ll_BFu0i_C)
//============================================================================



static void Test_aBFu32ll_BFu0i_D()
{
  {
    init_simple_test("aBFu32ll_BFu0i_D");
    static STRUCT_IF_C aBFu32ll_BFu0i_D lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_BFu0i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_D");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_D, aBFu32ll_BFu0i_D)
//============================================================================



static void Test_aBFu32ll_BFu0i_F()
{
  {
    init_simple_test("aBFu32ll_BFu0i_F");
    static STRUCT_IF_C aBFu32ll_BFu0i_F lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_F");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_F, aBFu32ll_BFu0i_F)
//============================================================================



static void Test_aBFu32ll_BFu0i_I()
{
  {
    init_simple_test("aBFu32ll_BFu0i_I");
    static STRUCT_IF_C aBFu32ll_BFu0i_I lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_I");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_I, aBFu32ll_BFu0i_I)
//============================================================================



static void Test_aBFu32ll_BFu0i_Ip()
{
  {
    init_simple_test("aBFu32ll_BFu0i_Ip");
    static STRUCT_IF_C aBFu32ll_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_BFu0i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_Ip");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_Ip, aBFu32ll_BFu0i_Ip)
//============================================================================



static void Test_aBFu32ll_BFu0i_L()
{
  {
    init_simple_test("aBFu32ll_BFu0i_L");
    static STRUCT_IF_C aBFu32ll_BFu0i_L lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_BFu0i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_L");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_L, aBFu32ll_BFu0i_L)
//============================================================================



static void Test_aBFu32ll_BFu0i_S()
{
  {
    init_simple_test("aBFu32ll_BFu0i_S");
    static STRUCT_IF_C aBFu32ll_BFu0i_S lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_S");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_S, aBFu32ll_BFu0i_S)
//============================================================================



static void Test_aBFu32ll_BFu0i_Uc()
{
  {
    init_simple_test("aBFu32ll_BFu0i_Uc");
    static STRUCT_IF_C aBFu32ll_BFu0i_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_Uc");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_Uc, aBFu32ll_BFu0i_Uc)
//============================================================================



static void Test_aBFu32ll_BFu0i_Ui()
{
  {
    init_simple_test("aBFu32ll_BFu0i_Ui");
    static STRUCT_IF_C aBFu32ll_BFu0i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_Ui");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_Ui, aBFu32ll_BFu0i_Ui)
//============================================================================



static void Test_aBFu32ll_BFu0i_Ul()
{
  {
    init_simple_test("aBFu32ll_BFu0i_Ul");
    static STRUCT_IF_C aBFu32ll_BFu0i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_BFu0i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_Ul");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_Ul, aBFu32ll_BFu0i_Ul)
//============================================================================



static void Test_aBFu32ll_BFu0i_Us()
{
  {
    init_simple_test("aBFu32ll_BFu0i_Us");
    static STRUCT_IF_C aBFu32ll_BFu0i_Us lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_Us");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_Us, aBFu32ll_BFu0i_Us)
//============================================================================



static void Test_aBFu32ll_BFu0i_Vp()
{
  {
    init_simple_test("aBFu32ll_BFu0i_Vp");
    static STRUCT_IF_C aBFu32ll_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_BFu0i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0i_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0i_Vp");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0i_Vp, aBFu32ll_BFu0i_Vp)
//============================================================================



static void Test_aBFu32ll_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu32ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll, aBFu32ll_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu32ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu0c, aBFu32ll_BFu0ll_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu32ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu0i, aBFu32ll_BFu0ll_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu32ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu0ll, aBFu32ll_BFu0ll_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu32ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu0s, aBFu32ll_BFu0ll_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu15i()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu15i");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32ll_BFu0ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "aBFu32ll_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu15i, aBFu32ll_BFu0ll_BFu15i)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu15ll()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu15ll");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32ll_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "aBFu32ll_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu15ll, aBFu32ll_BFu0ll_BFu15ll)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu15s()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu15s");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32ll_BFu0ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "aBFu32ll_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu15s, aBFu32ll_BFu0ll_BFu15s)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu16i()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu16i");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32ll_BFu0ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "aBFu32ll_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu16i, aBFu32ll_BFu0ll_BFu16i)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu16ll()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu16ll");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32ll_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "aBFu32ll_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu16ll, aBFu32ll_BFu0ll_BFu16ll)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu16s()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu16s");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32ll_BFu0ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "aBFu32ll_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu16s, aBFu32ll_BFu0ll_BFu16s)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu17i()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu17i");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu32ll_BFu0ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "aBFu32ll_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu17i, aBFu32ll_BFu0ll_BFu17i)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu17ll()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu17ll");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu32ll_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "aBFu32ll_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu17ll, aBFu32ll_BFu0ll_BFu17ll)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu1c()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu1c");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32ll_BFu0ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aBFu32ll_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu1c, aBFu32ll_BFu0ll_BFu1c)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu1i()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu1i");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32ll_BFu0ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aBFu32ll_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu1i, aBFu32ll_BFu0ll_BFu1i)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu1ll()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu1ll");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32ll_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aBFu32ll_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu1ll, aBFu32ll_BFu0ll_BFu1ll)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu1s()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu1s");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32ll_BFu0ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aBFu32ll_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu1s, aBFu32ll_BFu0ll_BFu1s)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu31i()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu31i");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_BFu0ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "aBFu32ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu31i, aBFu32ll_BFu0ll_BFu31i)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu31ll()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu31ll");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "aBFu32ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu31ll, aBFu32ll_BFu0ll_BFu31ll)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu32i()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu32i");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_BFu0ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "aBFu32ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu32i, aBFu32ll_BFu0ll_BFu32i)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu32ll()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu32ll");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "aBFu32ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu32ll, aBFu32ll_BFu0ll_BFu32ll)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu33()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu33");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aBFu32ll_BFu0ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "aBFu32ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "aBFu32ll_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu33, aBFu32ll_BFu0ll_BFu33)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu7c()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu7c");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32ll_BFu0ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aBFu32ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu7c, aBFu32ll_BFu0ll_BFu7c)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu7i()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu7i");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32ll_BFu0ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aBFu32ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu7i, aBFu32ll_BFu0ll_BFu7i)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu7ll()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu7ll");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32ll_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aBFu32ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu7ll, aBFu32ll_BFu0ll_BFu7ll)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu7s()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu7s");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32ll_BFu0ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aBFu32ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu7s, aBFu32ll_BFu0ll_BFu7s)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu8c()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu8c");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32ll_BFu0ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aBFu32ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu8c, aBFu32ll_BFu0ll_BFu8c)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu8i()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu8i");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32ll_BFu0ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aBFu32ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu8i, aBFu32ll_BFu0ll_BFu8i)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu8ll()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu8ll");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32ll_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aBFu32ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu8ll, aBFu32ll_BFu0ll_BFu8ll)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu8s()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu8s");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32ll_BFu0ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aBFu32ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu8s, aBFu32ll_BFu0ll_BFu8s)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu9i()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu9i");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32ll_BFu0ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "aBFu32ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu9i, aBFu32ll_BFu0ll_BFu9i)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu9ll()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu9ll");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32ll_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "aBFu32ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu9ll, aBFu32ll_BFu0ll_BFu9ll)
//============================================================================



static void Test_aBFu32ll_BFu0ll_BFu9s()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_BFu9s");
    static STRUCT_IF_C aBFu32ll_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32ll_BFu0ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "aBFu32ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_BFu9s, aBFu32ll_BFu0ll_BFu9s)
//============================================================================



static void Test_aBFu32ll_BFu0ll_C()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_C");
    static STRUCT_IF_C aBFu32ll_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32ll_BFu0ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32ll_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_C, aBFu32ll_BFu0ll_C)
//============================================================================



static void Test_aBFu32ll_BFu0ll_D()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_D");
    static STRUCT_IF_C aBFu32ll_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu32ll_BFu0ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32ll_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_D, aBFu32ll_BFu0ll_D)
//============================================================================



static void Test_aBFu32ll_BFu0ll_F()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_F");
    static STRUCT_IF_C aBFu32ll_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_BFu0ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32ll_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_F, aBFu32ll_BFu0ll_F)
//============================================================================



static void Test_aBFu32ll_BFu0ll_I()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_I");
    static STRUCT_IF_C aBFu32ll_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_BFu0ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32ll_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_I, aBFu32ll_BFu0ll_I)
//============================================================================



static void Test_aBFu32ll_BFu0ll_Ip()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_Ip");
    static STRUCT_IF_C aBFu32ll_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu32ll_BFu0ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32ll_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_Ip, aBFu32ll_BFu0ll_Ip)
//============================================================================



static void Test_aBFu32ll_BFu0ll_L()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_L");
    static STRUCT_IF_C aBFu32ll_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu32ll_BFu0ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32ll_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_L, aBFu32ll_BFu0ll_L)
//============================================================================



static void Test_aBFu32ll_BFu0ll_S()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_S");
    static STRUCT_IF_C aBFu32ll_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32ll_BFu0ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32ll_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_S, aBFu32ll_BFu0ll_S)
//============================================================================



static void Test_aBFu32ll_BFu0ll_Uc()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_Uc");
    static STRUCT_IF_C aBFu32ll_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aBFu32ll_BFu0ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32ll_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_Uc, aBFu32ll_BFu0ll_Uc)
//============================================================================



static void Test_aBFu32ll_BFu0ll_Ui()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_Ui");
    static STRUCT_IF_C aBFu32ll_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_BFu0ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32ll_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_Ui, aBFu32ll_BFu0ll_Ui)
//============================================================================



static void Test_aBFu32ll_BFu0ll_Ul()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_Ul");
    static STRUCT_IF_C aBFu32ll_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu32ll_BFu0ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32ll_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_Ul, aBFu32ll_BFu0ll_Ul)
//============================================================================



static void Test_aBFu32ll_BFu0ll_Us()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_Us");
    static STRUCT_IF_C aBFu32ll_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu32ll_BFu0ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32ll_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_Us, aBFu32ll_BFu0ll_Us)
//============================================================================



static void Test_aBFu32ll_BFu0ll_Vp()
{
  {
    init_simple_test("aBFu32ll_BFu0ll_Vp");
    static STRUCT_IF_C aBFu32ll_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu32ll_BFu0ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0ll_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "aBFu32ll_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0ll_Vp, aBFu32ll_BFu0ll_Vp)
//============================================================================



static void Test_aBFu32ll_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s, aBFu32ll_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu0c, aBFu32ll_BFu0s_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu0i, aBFu32ll_BFu0s_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(aBFu32ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu0ll, aBFu32ll_BFu0s_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu32ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu0s, aBFu32ll_BFu0s_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu15i()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu15i");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu15i, aBFu32ll_BFu0s_BFu15i)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu15ll()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu15ll");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu15ll, aBFu32ll_BFu0s_BFu15ll)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu15s()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu15s");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu15s, aBFu32ll_BFu0s_BFu15s)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu16i()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu16i");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu16i, aBFu32ll_BFu0s_BFu16i)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu16ll()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu16ll");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu16ll, aBFu32ll_BFu0s_BFu16ll)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu16s()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu16s");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu16s, aBFu32ll_BFu0s_BFu16s)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu17i()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu17i");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32ll_BFu0s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu17i, aBFu32ll_BFu0s_BFu17i)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu17ll()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu17ll");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32ll_BFu0s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu17ll, aBFu32ll_BFu0s_BFu17ll)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu1c()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu1c");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu1c, aBFu32ll_BFu0s_BFu1c)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu1i()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu1i");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu1i, aBFu32ll_BFu0s_BFu1i)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu1ll()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu1ll");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu1ll, aBFu32ll_BFu0s_BFu1ll)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu1s()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu1s");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu1s, aBFu32ll_BFu0s_BFu1s)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu31i()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu31i");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu31i, aBFu32ll_BFu0s_BFu31i)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu31ll()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu31ll");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu31ll, aBFu32ll_BFu0s_BFu31ll)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu32i()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu32i");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu32i, aBFu32ll_BFu0s_BFu32i)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu32ll()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu32ll");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu32ll, aBFu32ll_BFu0s_BFu32ll)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu33()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu33");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aBFu32ll_BFu0s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aBFu32ll_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aBFu32ll_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu33, aBFu32ll_BFu0s_BFu33)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu7c()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu7c");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu7c, aBFu32ll_BFu0s_BFu7c)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu7i()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu7i");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu7i, aBFu32ll_BFu0s_BFu7i)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu7ll()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu7ll");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu7ll, aBFu32ll_BFu0s_BFu7ll)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu7s()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu7s");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu7s, aBFu32ll_BFu0s_BFu7s)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu8c()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu8c");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu8c, aBFu32ll_BFu0s_BFu8c)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu8i()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu8i");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu8i, aBFu32ll_BFu0s_BFu8i)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu8ll()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu8ll");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu8ll, aBFu32ll_BFu0s_BFu8ll)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu8s()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu8s");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu8s, aBFu32ll_BFu0s_BFu8s)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu9i()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu9i");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu9i, aBFu32ll_BFu0s_BFu9i)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu9ll()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu9ll");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu9ll, aBFu32ll_BFu0s_BFu9ll)
//============================================================================



static void Test_aBFu32ll_BFu0s_BFu9s()
{
  {
    init_simple_test("aBFu32ll_BFu0s_BFu9s");
    static STRUCT_IF_C aBFu32ll_BFu0s_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_BFu9s, aBFu32ll_BFu0s_BFu9s)
//============================================================================



static void Test_aBFu32ll_BFu0s_C()
{
  {
    init_simple_test("aBFu32ll_BFu0s_C");
    static STRUCT_IF_C aBFu32ll_BFu0s_C lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_C");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_C, aBFu32ll_BFu0s_C)
//============================================================================



static void Test_aBFu32ll_BFu0s_D()
{
  {
    init_simple_test("aBFu32ll_BFu0s_D");
    static STRUCT_IF_C aBFu32ll_BFu0s_D lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_BFu0s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_D");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_D, aBFu32ll_BFu0s_D)
//============================================================================



static void Test_aBFu32ll_BFu0s_F()
{
  {
    init_simple_test("aBFu32ll_BFu0s_F");
    static STRUCT_IF_C aBFu32ll_BFu0s_F lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_F");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_F, aBFu32ll_BFu0s_F)
//============================================================================



static void Test_aBFu32ll_BFu0s_I()
{
  {
    init_simple_test("aBFu32ll_BFu0s_I");
    static STRUCT_IF_C aBFu32ll_BFu0s_I lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_I");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_I, aBFu32ll_BFu0s_I)
//============================================================================



static void Test_aBFu32ll_BFu0s_Ip()
{
  {
    init_simple_test("aBFu32ll_BFu0s_Ip");
    static STRUCT_IF_C aBFu32ll_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_BFu0s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_Ip");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_Ip, aBFu32ll_BFu0s_Ip)
//============================================================================



static void Test_aBFu32ll_BFu0s_L()
{
  {
    init_simple_test("aBFu32ll_BFu0s_L");
    static STRUCT_IF_C aBFu32ll_BFu0s_L lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_BFu0s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_L");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_L, aBFu32ll_BFu0s_L)
//============================================================================



static void Test_aBFu32ll_BFu0s_S()
{
  {
    init_simple_test("aBFu32ll_BFu0s_S");
    static STRUCT_IF_C aBFu32ll_BFu0s_S lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_S");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_S, aBFu32ll_BFu0s_S)
//============================================================================



static void Test_aBFu32ll_BFu0s_Uc()
{
  {
    init_simple_test("aBFu32ll_BFu0s_Uc");
    static STRUCT_IF_C aBFu32ll_BFu0s_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu0s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_Uc");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_Uc, aBFu32ll_BFu0s_Uc)
//============================================================================



static void Test_aBFu32ll_BFu0s_Ui()
{
  {
    init_simple_test("aBFu32ll_BFu0s_Ui");
    static STRUCT_IF_C aBFu32ll_BFu0s_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu0s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_Ui");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_Ui, aBFu32ll_BFu0s_Ui)
//============================================================================



static void Test_aBFu32ll_BFu0s_Ul()
{
  {
    init_simple_test("aBFu32ll_BFu0s_Ul");
    static STRUCT_IF_C aBFu32ll_BFu0s_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_BFu0s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_Ul");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_Ul, aBFu32ll_BFu0s_Ul)
//============================================================================



static void Test_aBFu32ll_BFu0s_Us()
{
  {
    init_simple_test("aBFu32ll_BFu0s_Us");
    static STRUCT_IF_C aBFu32ll_BFu0s_Us lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu0s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_Us");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_Us, aBFu32ll_BFu0s_Us)
//============================================================================



static void Test_aBFu32ll_BFu0s_Vp()
{
  {
    init_simple_test("aBFu32ll_BFu0s_Vp");
    static STRUCT_IF_C aBFu32ll_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_BFu0s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu0s_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu0s_Vp");
    check_field_offset(lv, v2, 4, "aBFu32ll_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu0s_Vp, aBFu32ll_BFu0s_Vp)
//============================================================================



static void Test_aBFu32ll_BFu15i_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu15i_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu15i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu15i_BFu0c, aBFu32ll_BFu15i_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu15i_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu15i_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu15i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu15i_BFu0i, aBFu32ll_BFu15i_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu15i_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu15i_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu15i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu15i_BFu0ll, aBFu32ll_BFu15i_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu15i_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu15i_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu15i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu15i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu15i_BFu0s, aBFu32ll_BFu15i_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu15ll_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu15ll_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu15ll_BFu0c, aBFu32ll_BFu15ll_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu15ll_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu15ll_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu15ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu15ll_BFu0i, aBFu32ll_BFu15ll_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu15ll_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu15ll_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu15ll_BFu0ll, aBFu32ll_BFu15ll_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu15ll_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu15ll_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu15ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu15ll_BFu0s, aBFu32ll_BFu15ll_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu15s_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu15s_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu15s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu15s_BFu0c, aBFu32ll_BFu15s_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu15s_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu15s_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu15s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu15s_BFu0i, aBFu32ll_BFu15s_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu15s_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu15s_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu15s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu15s_BFu0ll, aBFu32ll_BFu15s_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu15s_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu15s_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu15s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu15s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aBFu32ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aBFu32ll_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu15s_BFu0s, aBFu32ll_BFu15s_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu16i_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu16i_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu16i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu16i_BFu0c, aBFu32ll_BFu16i_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu16i_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu16i_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu16i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu16i_BFu0i, aBFu32ll_BFu16i_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu16i_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu16i_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu16i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu16i_BFu0ll, aBFu32ll_BFu16i_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu16i_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu16i_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu16i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu16i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu16i_BFu0s, aBFu32ll_BFu16i_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu16ll_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu16ll_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu16ll_BFu0c, aBFu32ll_BFu16ll_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu16ll_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu16ll_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu16ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu16ll_BFu0i, aBFu32ll_BFu16ll_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu16ll_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu16ll_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu16ll_BFu0ll, aBFu32ll_BFu16ll_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu16ll_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu16ll_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu16ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu16ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu16ll_BFu0s, aBFu32ll_BFu16ll_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu16s_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu16s_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu16s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu16s_BFu0c, aBFu32ll_BFu16s_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu16s_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu16s_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu16s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu16s_BFu0i, aBFu32ll_BFu16s_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu16s_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu16s_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu16s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu16s_BFu0ll, aBFu32ll_BFu16s_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu16s_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu16s_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu16s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu16s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu16s_BFu0s, aBFu32ll_BFu16s_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu17i_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu17i_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu17i_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32ll_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu17i_BFu0c, aBFu32ll_BFu17i_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu17i_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu17i_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu17i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu17i_BFu0i, aBFu32ll_BFu17i_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu17i_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu17i_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu17i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu17i_BFu0ll, aBFu32ll_BFu17i_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu17i_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu17i_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu17i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu17i_BFu0s, aBFu32ll_BFu17i_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu17ll_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu17ll_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32ll_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu17ll_BFu0c, aBFu32ll_BFu17ll_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu17ll_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu17ll_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu17ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu17ll_BFu0i, aBFu32ll_BFu17ll_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu17ll_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu17ll_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu17ll_BFu0ll, aBFu32ll_BFu17ll_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu17ll_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu17ll_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu17ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu17ll_BFu0s, aBFu32ll_BFu17ll_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu1c_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu1c_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu1c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu1c_BFu0c, aBFu32ll_BFu1c_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu1c_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu1c_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu1c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu1c_BFu0i, aBFu32ll_BFu1c_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu1c_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu1c_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu1c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu1c_BFu0ll, aBFu32ll_BFu1c_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu1c_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu1c_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32ll_BFu1c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu1c_BFu0s, aBFu32ll_BFu1c_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu1i_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu1i_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu1i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu1i_BFu0c, aBFu32ll_BFu1i_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu1i_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu1i_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu1i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu1i_BFu0i, aBFu32ll_BFu1i_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu1i_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu1i_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu1i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu1i_BFu0ll, aBFu32ll_BFu1i_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu1i_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu1i_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32ll_BFu1i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu1i_BFu0s, aBFu32ll_BFu1i_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu1ll_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu1ll_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu1ll_BFu0c, aBFu32ll_BFu1ll_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu1ll_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu1ll_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu1ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu1ll_BFu0i, aBFu32ll_BFu1ll_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu1ll_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu1ll_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu1ll_BFu0ll, aBFu32ll_BFu1ll_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu1ll_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu1ll_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32ll_BFu1ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu1ll_BFu0s, aBFu32ll_BFu1ll_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu1s_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu1s_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu1s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu1s_BFu0c, aBFu32ll_BFu1s_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu1s_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu1s_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu1s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu1s_BFu0i, aBFu32ll_BFu1s_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu1s_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu1s_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu1s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu1s_BFu0ll, aBFu32ll_BFu1s_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu1s_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu1s_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32ll_BFu1s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu1s_BFu0s, aBFu32ll_BFu1s_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu31i_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu31i_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu31i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu31i_BFu0c, aBFu32ll_BFu31i_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu31i_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu31i_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu31i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu31i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu31i_BFu0i, aBFu32ll_BFu31i_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu31i_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu31i_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu31i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu31i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu31i_BFu0ll, aBFu32ll_BFu31i_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu31i_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu31i_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu31i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu31i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu31i_BFu0s, aBFu32ll_BFu31i_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu31ll_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu31ll_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu31ll_BFu0c, aBFu32ll_BFu31ll_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu31ll_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu31ll_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu31ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu31ll_BFu0i, aBFu32ll_BFu31ll_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu31ll_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu31ll_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu31ll_BFu0ll, aBFu32ll_BFu31ll_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu31ll_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu31ll_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu31ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu31ll_BFu0s, aBFu32ll_BFu31ll_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu32i_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu32i_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu32i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu32i_BFu0c, aBFu32ll_BFu32i_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu32i_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu32i_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu32i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu32i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu32i_BFu0i, aBFu32ll_BFu32i_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu32i_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu32i_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu32i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu32i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu32i_BFu0ll, aBFu32ll_BFu32i_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu32i_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu32i_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu32i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu32i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu32i_BFu0s, aBFu32ll_BFu32i_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu32ll_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu32ll_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu32ll_BFu0c, aBFu32ll_BFu32ll_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu32ll_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu32ll_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu32ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu32ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu32ll_BFu0i, aBFu32ll_BFu32ll_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu32ll_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu32ll_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu32ll_BFu0ll, aBFu32ll_BFu32ll_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu32ll_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu32ll_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu32ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu32ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu32ll_BFu0s, aBFu32ll_BFu32ll_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu33_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu33_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu33_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(aBFu32ll_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu33_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aBFu32ll_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aBFu32ll_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu33_BFu0c, aBFu32ll_BFu33_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu33_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu33_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(aBFu32ll_BFu33_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu33_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aBFu32ll_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aBFu32ll_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu33_BFu0i, aBFu32ll_BFu33_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu33_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu33_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu32ll_BFu33_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aBFu32ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aBFu32ll_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu33_BFu0ll, aBFu32ll_BFu33_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu33_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu33_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu32ll_BFu33_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu33_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aBFu32ll_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aBFu32ll_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu33_BFu0s, aBFu32ll_BFu33_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu7c_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu7c_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu7c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu7c_BFu0c, aBFu32ll_BFu7c_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu7c_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu7c_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu7c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu7c_BFu0i, aBFu32ll_BFu7c_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu7c_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu7c_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu7c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu7c_BFu0ll, aBFu32ll_BFu7c_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu7c_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu7c_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32ll_BFu7c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu7c_BFu0s, aBFu32ll_BFu7c_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu7i_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu7i_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu7i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu7i_BFu0c, aBFu32ll_BFu7i_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu7i_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu7i_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu7i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu7i_BFu0i, aBFu32ll_BFu7i_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu7i_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu7i_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu7i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu7i_BFu0ll, aBFu32ll_BFu7i_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu7i_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu7i_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32ll_BFu7i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu7i_BFu0s, aBFu32ll_BFu7i_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu7ll_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu7ll_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu7ll_BFu0c, aBFu32ll_BFu7ll_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu7ll_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu7ll_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu7ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu7ll_BFu0i, aBFu32ll_BFu7ll_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu7ll_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu7ll_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu7ll_BFu0ll, aBFu32ll_BFu7ll_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu7ll_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu7ll_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32ll_BFu7ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu7ll_BFu0s, aBFu32ll_BFu7ll_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu7s_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu7s_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu7s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu7s_BFu0c, aBFu32ll_BFu7s_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu7s_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu7s_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu7s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu7s_BFu0i, aBFu32ll_BFu7s_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu7s_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu7s_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu7s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu7s_BFu0ll, aBFu32ll_BFu7s_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu7s_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu7s_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32ll_BFu7s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu7s_BFu0s, aBFu32ll_BFu7s_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu8c_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu8c_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu8c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu8c_BFu0c, aBFu32ll_BFu8c_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu8c_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu8c_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu8c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu8c_BFu0i, aBFu32ll_BFu8c_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu8c_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu8c_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu8c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu8c_BFu0ll, aBFu32ll_BFu8c_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu8c_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu8c_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu8c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32ll_BFu8c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu8c_BFu0s, aBFu32ll_BFu8c_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu8i_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu8i_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu8i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu8i_BFu0c, aBFu32ll_BFu8i_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu8i_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu8i_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu8i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu8i_BFu0i, aBFu32ll_BFu8i_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu8i_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu8i_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu8i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu8i_BFu0ll, aBFu32ll_BFu8i_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu8i_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu8i_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu8i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32ll_BFu8i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu8i_BFu0s, aBFu32ll_BFu8i_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu8ll_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu8ll_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu8ll_BFu0c, aBFu32ll_BFu8ll_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu8ll_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu8ll_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu8ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu8ll_BFu0i, aBFu32ll_BFu8ll_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu8ll_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu8ll_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu8ll_BFu0ll, aBFu32ll_BFu8ll_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu8ll_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu8ll_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu8ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32ll_BFu8ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu8ll_BFu0s, aBFu32ll_BFu8ll_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu8s_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu8s_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu8s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu8s_BFu0c, aBFu32ll_BFu8s_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu8s_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu8s_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu8s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu8s_BFu0i, aBFu32ll_BFu8s_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu8s_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu8s_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu8s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu8s_BFu0ll, aBFu32ll_BFu8s_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu8s_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu8s_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu8s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32ll_BFu8s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu8s_BFu0s, aBFu32ll_BFu8s_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu9i_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu9i_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu9i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu9i_BFu0c, aBFu32ll_BFu9i_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu9i_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu9i_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu9i_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu9i_BFu0i, aBFu32ll_BFu9i_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu9i_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu9i_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu9i_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu9i_BFu0ll, aBFu32ll_BFu9i_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu9i_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu9i_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu9i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu9i_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu9i_BFu0s, aBFu32ll_BFu9i_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu9ll_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu9ll_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu9ll_BFu0c, aBFu32ll_BFu9ll_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu9ll_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu9ll_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu9ll_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu9ll_BFu0i, aBFu32ll_BFu9ll_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu9ll_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu9ll_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu9ll_BFu0ll, aBFu32ll_BFu9ll_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu9ll_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu9ll_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu9ll_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu9ll_BFu0s, aBFu32ll_BFu9ll_BFu0s)
//============================================================================



static void Test_aBFu32ll_BFu9s_BFu0c()
{
  {
    init_simple_test("aBFu32ll_BFu9s_BFu0c");
    static STRUCT_IF_C aBFu32ll_BFu9s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu9s_BFu0c, aBFu32ll_BFu9s_BFu0c)
//============================================================================



static void Test_aBFu32ll_BFu9s_BFu0i()
{
  {
    init_simple_test("aBFu32ll_BFu9s_BFu0i");
    static STRUCT_IF_C aBFu32ll_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu9s_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu9s_BFu0i, aBFu32ll_BFu9s_BFu0i)
//============================================================================



static void Test_aBFu32ll_BFu9s_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_BFu9s_BFu0ll");
    static STRUCT_IF_C aBFu32ll_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_BFu9s_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu9s_BFu0ll, aBFu32ll_BFu9s_BFu0ll)
//============================================================================



static void Test_aBFu32ll_BFu9s_BFu0s()
{
  {
    init_simple_test("aBFu32ll_BFu9s_BFu0s");
    static STRUCT_IF_C aBFu32ll_BFu9s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu9s_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_BFu9s_BFu0s, aBFu32ll_BFu9s_BFu0s)
//============================================================================



static void Test_aBFu32ll_C_BFu0c()
{
  {
    init_simple_test("aBFu32ll_C_BFu0c");
    static STRUCT_IF_C aBFu32ll_C_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_C_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_C_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32ll_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_C_BFu0c, aBFu32ll_C_BFu0c)
//============================================================================



static void Test_aBFu32ll_C_BFu0i()
{
  {
    init_simple_test("aBFu32ll_C_BFu0i");
    static STRUCT_IF_C aBFu32ll_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_C_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_C_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_C_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32ll_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_C_BFu0i, aBFu32ll_C_BFu0i)
//============================================================================



static void Test_aBFu32ll_C_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_C_BFu0ll");
    static STRUCT_IF_C aBFu32ll_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_C_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_C_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_C_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32ll_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_C_BFu0ll, aBFu32ll_C_BFu0ll)
//============================================================================



static void Test_aBFu32ll_C_BFu0s()
{
  {
    init_simple_test("aBFu32ll_C_BFu0s");
    static STRUCT_IF_C aBFu32ll_C_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32ll_C_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_C_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_C_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32ll_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_C_BFu0s, aBFu32ll_C_BFu0s)
//============================================================================



static void Test_aBFu32ll_D_BFu0c()
{
  {
    init_simple_test("aBFu32ll_D_BFu0c");
    static STRUCT_IF_C aBFu32ll_D_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_D_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_D_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32ll_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_D_BFu0c, aBFu32ll_D_BFu0c)
//============================================================================



static void Test_aBFu32ll_D_BFu0i()
{
  {
    init_simple_test("aBFu32ll_D_BFu0i");
    static STRUCT_IF_C aBFu32ll_D_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_D_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_D_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_D_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32ll_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_D_BFu0i, aBFu32ll_D_BFu0i)
//============================================================================



static void Test_aBFu32ll_D_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_D_BFu0ll");
    static STRUCT_IF_C aBFu32ll_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu32ll_D_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_D_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_D_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32ll_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_D_BFu0ll, aBFu32ll_D_BFu0ll)
//============================================================================



static void Test_aBFu32ll_D_BFu0s()
{
  {
    init_simple_test("aBFu32ll_D_BFu0s");
    static STRUCT_IF_C aBFu32ll_D_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_D_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_D_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_D_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32ll_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_D_BFu0s, aBFu32ll_D_BFu0s)
//============================================================================



static void Test_aBFu32ll_F_BFu0c()
{
  {
    init_simple_test("aBFu32ll_F_BFu0c");
    static STRUCT_IF_C aBFu32ll_F_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_F_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_F_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32ll_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_F_BFu0c, aBFu32ll_F_BFu0c)
//============================================================================



static void Test_aBFu32ll_F_BFu0i()
{
  {
    init_simple_test("aBFu32ll_F_BFu0i");
    static STRUCT_IF_C aBFu32ll_F_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_F_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_F_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_F_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32ll_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_F_BFu0i, aBFu32ll_F_BFu0i)
//============================================================================



static void Test_aBFu32ll_F_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_F_BFu0ll");
    static STRUCT_IF_C aBFu32ll_F_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_F_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_F_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_F_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32ll_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_F_BFu0ll, aBFu32ll_F_BFu0ll)
//============================================================================



static void Test_aBFu32ll_F_BFu0s()
{
  {
    init_simple_test("aBFu32ll_F_BFu0s");
    static STRUCT_IF_C aBFu32ll_F_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_F_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_F_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_F_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32ll_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_F_BFu0s, aBFu32ll_F_BFu0s)
//============================================================================



static void Test_aBFu32ll_I_BFu0c()
{
  {
    init_simple_test("aBFu32ll_I_BFu0c");
    static STRUCT_IF_C aBFu32ll_I_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_I_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_I_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32ll_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_I_BFu0c, aBFu32ll_I_BFu0c)
//============================================================================



static void Test_aBFu32ll_I_BFu0i()
{
  {
    init_simple_test("aBFu32ll_I_BFu0i");
    static STRUCT_IF_C aBFu32ll_I_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_I_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_I_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_I_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32ll_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_I_BFu0i, aBFu32ll_I_BFu0i)
//============================================================================



static void Test_aBFu32ll_I_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_I_BFu0ll");
    static STRUCT_IF_C aBFu32ll_I_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_I_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_I_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_I_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32ll_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_I_BFu0ll, aBFu32ll_I_BFu0ll)
//============================================================================



static void Test_aBFu32ll_I_BFu0s()
{
  {
    init_simple_test("aBFu32ll_I_BFu0s");
    static STRUCT_IF_C aBFu32ll_I_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_I_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_I_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_I_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32ll_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_I_BFu0s, aBFu32ll_I_BFu0s)
//============================================================================



static void Test_aBFu32ll_Ip_BFu0c()
{
  {
    init_simple_test("aBFu32ll_Ip_BFu0c");
    static STRUCT_IF_C aBFu32ll_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Ip_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Ip_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32ll_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Ip_BFu0c, aBFu32ll_Ip_BFu0c)
//============================================================================



static void Test_aBFu32ll_Ip_BFu0i()
{
  {
    init_simple_test("aBFu32ll_Ip_BFu0i");
    static STRUCT_IF_C aBFu32ll_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_Ip_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Ip_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Ip_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32ll_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Ip_BFu0i, aBFu32ll_Ip_BFu0i)
//============================================================================



static void Test_aBFu32ll_Ip_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_Ip_BFu0ll");
    static STRUCT_IF_C aBFu32ll_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu32ll_Ip_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Ip_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Ip_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32ll_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Ip_BFu0ll, aBFu32ll_Ip_BFu0ll)
//============================================================================



static void Test_aBFu32ll_Ip_BFu0s()
{
  {
    init_simple_test("aBFu32ll_Ip_BFu0s");
    static STRUCT_IF_C aBFu32ll_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_Ip_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Ip_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Ip_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32ll_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Ip_BFu0s, aBFu32ll_Ip_BFu0s)
//============================================================================



static void Test_aBFu32ll_L_BFu0c()
{
  {
    init_simple_test("aBFu32ll_L_BFu0c");
    static STRUCT_IF_C aBFu32ll_L_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_L_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_L_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32ll_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_L_BFu0c, aBFu32ll_L_BFu0c)
//============================================================================



static void Test_aBFu32ll_L_BFu0i()
{
  {
    init_simple_test("aBFu32ll_L_BFu0i");
    static STRUCT_IF_C aBFu32ll_L_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_L_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_L_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_L_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32ll_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_L_BFu0i, aBFu32ll_L_BFu0i)
//============================================================================



static void Test_aBFu32ll_L_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_L_BFu0ll");
    static STRUCT_IF_C aBFu32ll_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu32ll_L_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_L_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_L_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32ll_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_L_BFu0ll, aBFu32ll_L_BFu0ll)
//============================================================================



static void Test_aBFu32ll_L_BFu0s()
{
  {
    init_simple_test("aBFu32ll_L_BFu0s");
    static STRUCT_IF_C aBFu32ll_L_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_L_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_L_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_L_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32ll_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_L_BFu0s, aBFu32ll_L_BFu0s)
//============================================================================



static void Test_aBFu32ll_S_BFu0c()
{
  {
    init_simple_test("aBFu32ll_S_BFu0c");
    static STRUCT_IF_C aBFu32ll_S_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_S_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_S_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32ll_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_S_BFu0c, aBFu32ll_S_BFu0c)
//============================================================================



static void Test_aBFu32ll_S_BFu0i()
{
  {
    init_simple_test("aBFu32ll_S_BFu0i");
    static STRUCT_IF_C aBFu32ll_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_S_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_S_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_S_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32ll_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_S_BFu0i, aBFu32ll_S_BFu0i)
//============================================================================



static void Test_aBFu32ll_S_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_S_BFu0ll");
    static STRUCT_IF_C aBFu32ll_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_S_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_S_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_S_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32ll_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_S_BFu0ll, aBFu32ll_S_BFu0ll)
//============================================================================



static void Test_aBFu32ll_S_BFu0s()
{
  {
    init_simple_test("aBFu32ll_S_BFu0s");
    static STRUCT_IF_C aBFu32ll_S_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_S_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_S_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_S_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32ll_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_S_BFu0s, aBFu32ll_S_BFu0s)
//============================================================================



static void Test_aBFu32ll_Uc_BFu0c()
{
  {
    init_simple_test("aBFu32ll_Uc_BFu0c");
    static STRUCT_IF_C aBFu32ll_Uc_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu32ll_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Uc_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Uc_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32ll_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Uc_BFu0c, aBFu32ll_Uc_BFu0c)
//============================================================================



static void Test_aBFu32ll_Uc_BFu0i()
{
  {
    init_simple_test("aBFu32ll_Uc_BFu0i");
    static STRUCT_IF_C aBFu32ll_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_Uc_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Uc_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Uc_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32ll_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Uc_BFu0i, aBFu32ll_Uc_BFu0i)
//============================================================================



static void Test_aBFu32ll_Uc_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_Uc_BFu0ll");
    static STRUCT_IF_C aBFu32ll_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_Uc_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Uc_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Uc_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32ll_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Uc_BFu0ll, aBFu32ll_Uc_BFu0ll)
//============================================================================



static void Test_aBFu32ll_Uc_BFu0s()
{
  {
    init_simple_test("aBFu32ll_Uc_BFu0s");
    static STRUCT_IF_C aBFu32ll_Uc_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu32ll_Uc_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Uc_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Uc_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32ll_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Uc_BFu0s, aBFu32ll_Uc_BFu0s)
//============================================================================



static void Test_aBFu32ll_Ui_BFu0c()
{
  {
    init_simple_test("aBFu32ll_Ui_BFu0c");
    static STRUCT_IF_C aBFu32ll_Ui_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Ui_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Ui_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32ll_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Ui_BFu0c, aBFu32ll_Ui_BFu0c)
//============================================================================



static void Test_aBFu32ll_Ui_BFu0i()
{
  {
    init_simple_test("aBFu32ll_Ui_BFu0i");
    static STRUCT_IF_C aBFu32ll_Ui_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_Ui_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Ui_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Ui_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32ll_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Ui_BFu0i, aBFu32ll_Ui_BFu0i)
//============================================================================



static void Test_aBFu32ll_Ui_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_Ui_BFu0ll");
    static STRUCT_IF_C aBFu32ll_Ui_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_Ui_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Ui_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Ui_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32ll_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Ui_BFu0ll, aBFu32ll_Ui_BFu0ll)
//============================================================================



static void Test_aBFu32ll_Ui_BFu0s()
{
  {
    init_simple_test("aBFu32ll_Ui_BFu0s");
    static STRUCT_IF_C aBFu32ll_Ui_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_Ui_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Ui_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Ui_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32ll_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Ui_BFu0s, aBFu32ll_Ui_BFu0s)
//============================================================================



static void Test_aBFu32ll_Ul_BFu0c()
{
  {
    init_simple_test("aBFu32ll_Ul_BFu0c");
    static STRUCT_IF_C aBFu32ll_Ul_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Ul_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Ul_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32ll_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Ul_BFu0c, aBFu32ll_Ul_BFu0c)
//============================================================================



static void Test_aBFu32ll_Ul_BFu0i()
{
  {
    init_simple_test("aBFu32ll_Ul_BFu0i");
    static STRUCT_IF_C aBFu32ll_Ul_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_Ul_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Ul_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Ul_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32ll_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Ul_BFu0i, aBFu32ll_Ul_BFu0i)
//============================================================================



static void Test_aBFu32ll_Ul_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_Ul_BFu0ll");
    static STRUCT_IF_C aBFu32ll_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aBFu32ll_Ul_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Ul_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Ul_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32ll_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Ul_BFu0ll, aBFu32ll_Ul_BFu0ll)
//============================================================================



static void Test_aBFu32ll_Ul_BFu0s()
{
  {
    init_simple_test("aBFu32ll_Ul_BFu0s");
    static STRUCT_IF_C aBFu32ll_Ul_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(aBFu32ll_Ul_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Ul_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Ul_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32ll_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Ul_BFu0s, aBFu32ll_Ul_BFu0s)
//============================================================================



static void Test_aBFu32ll_Us_BFu0c()
{
  {
    init_simple_test("aBFu32ll_Us_BFu0c");
    static STRUCT_IF_C aBFu32ll_Us_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Us_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Us_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32ll_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Us_BFu0c, aBFu32ll_Us_BFu0c)
//============================================================================



static void Test_aBFu32ll_Us_BFu0i()
{
  {
    init_simple_test("aBFu32ll_Us_BFu0i");
    static STRUCT_IF_C aBFu32ll_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_Us_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Us_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Us_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32ll_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Us_BFu0i, aBFu32ll_Us_BFu0i)
//============================================================================



static void Test_aBFu32ll_Us_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_Us_BFu0ll");
    static STRUCT_IF_C aBFu32ll_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu32ll_Us_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Us_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Us_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32ll_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Us_BFu0ll, aBFu32ll_Us_BFu0ll)
//============================================================================



static void Test_aBFu32ll_Us_BFu0s()
{
  {
    init_simple_test("aBFu32ll_Us_BFu0s");
    static STRUCT_IF_C aBFu32ll_Us_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_Us_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Us_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Us_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32ll_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Us_BFu0s, aBFu32ll_Us_BFu0s)
//============================================================================



static void Test_aBFu32ll_Vp_BFu0c()
{
  {
    init_simple_test("aBFu32ll_Vp_BFu0c");
    static STRUCT_IF_C aBFu32ll_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Vp_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Vp_BFu0c");
    check_field_offset(lv, v2, 4, "aBFu32ll_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Vp_BFu0c, aBFu32ll_Vp_BFu0c)
//============================================================================



static void Test_aBFu32ll_Vp_BFu0i()
{
  {
    init_simple_test("aBFu32ll_Vp_BFu0i");
    static STRUCT_IF_C aBFu32ll_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_Vp_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Vp_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Vp_BFu0i");
    check_field_offset(lv, v2, 4, "aBFu32ll_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Vp_BFu0i, aBFu32ll_Vp_BFu0i)
//============================================================================



static void Test_aBFu32ll_Vp_BFu0ll()
{
  {
    init_simple_test("aBFu32ll_Vp_BFu0ll");
    static STRUCT_IF_C aBFu32ll_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(aBFu32ll_Vp_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Vp_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Vp_BFu0ll");
    check_field_offset(lv, v2, 4, "aBFu32ll_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Vp_BFu0ll, aBFu32ll_Vp_BFu0ll)
//============================================================================



static void Test_aBFu32ll_Vp_BFu0s()
{
  {
    init_simple_test("aBFu32ll_Vp_BFu0s");
    static STRUCT_IF_C aBFu32ll_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aBFu32ll_Vp_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Vp_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Vp_BFu0s");
    check_field_offset(lv, v2, 4, "aBFu32ll_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu32ll_Vp_BFu0s, aBFu32ll_Vp_BFu0s)
//============================================================================



static void Test_aBFu33_BFu0c()
{
  {
    init_simple_test("aBFu33_BFu0c");
    static STRUCT_IF_C aBFu33_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c, aBFu33_BFu0c)
//============================================================================



static void Test_aBFu33_BFu0c_BFu0c()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu0c");
    static STRUCT_IF_C aBFu33_BFu0c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(aBFu33_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu0c, aBFu33_BFu0c_BFu0c)
//============================================================================



static void Test_aBFu33_BFu0c_BFu0i()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu0i");
    static STRUCT_IF_C aBFu33_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu33_BFu0c_BFu0i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu0i, aBFu33_BFu0c_BFu0i)
//============================================================================



static void Test_aBFu33_BFu0c_BFu0ll()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu0ll");
    static STRUCT_IF_C aBFu33_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu33_BFu0c_BFu0ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu0ll, aBFu33_BFu0c_BFu0ll)
//============================================================================



static void Test_aBFu33_BFu0c_BFu0s()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu0s");
    static STRUCT_IF_C aBFu33_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu33_BFu0c_BFu0s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu0s, aBFu33_BFu0c_BFu0s)
//============================================================================



static void Test_aBFu33_BFu0c_BFu15i()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu15i");
    static STRUCT_IF_C aBFu33_BFu0c_BFu15i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu33_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 15, 1, "aBFu33_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu33_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu15i, aBFu33_BFu0c_BFu15i)
//============================================================================



static void Test_aBFu33_BFu0c_BFu15ll()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu15ll");
    static STRUCT_IF_C aBFu33_BFu0c_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu33_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 15, 1, "aBFu33_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu33_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu15ll, aBFu33_BFu0c_BFu15ll)
//============================================================================



static void Test_aBFu33_BFu0c_BFu15s()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu15s");
    static STRUCT_IF_C aBFu33_BFu0c_BFu15s lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu33_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 15, 1, "aBFu33_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 15, hide_ull(1LL<<14), "aBFu33_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu15s, aBFu33_BFu0c_BFu15s)
//============================================================================



static void Test_aBFu33_BFu0c_BFu16i()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu16i");
    static STRUCT_IF_C aBFu33_BFu0c_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 16, 1, "aBFu33_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu33_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu16i, aBFu33_BFu0c_BFu16i)
//============================================================================



static void Test_aBFu33_BFu0c_BFu16ll()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu16ll");
    static STRUCT_IF_C aBFu33_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 16, 1, "aBFu33_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu33_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu16ll, aBFu33_BFu0c_BFu16ll)
//============================================================================



static void Test_aBFu33_BFu0c_BFu16s()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu16s");
    static STRUCT_IF_C aBFu33_BFu0c_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 16, 1, "aBFu33_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 16, hide_ull(1LL<<15), "aBFu33_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu16s, aBFu33_BFu0c_BFu16s)
//============================================================================



static void Test_aBFu33_BFu0c_BFu17i()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu17i");
    static STRUCT_IF_C aBFu33_BFu0c_BFu17i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu33_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 17, 1, "aBFu33_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu33_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu17i, aBFu33_BFu0c_BFu17i)
//============================================================================



static void Test_aBFu33_BFu0c_BFu17ll()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu17ll");
    static STRUCT_IF_C aBFu33_BFu0c_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(aBFu33_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 17, 1, "aBFu33_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 17, hide_ull(1LL<<16), "aBFu33_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu17ll, aBFu33_BFu0c_BFu17ll)
//============================================================================



static void Test_aBFu33_BFu0c_BFu1c()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu1c");
    static STRUCT_IF_C aBFu33_BFu0c_BFu1c lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu33_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 1, 1, "aBFu33_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu1c, aBFu33_BFu0c_BFu1c)
//============================================================================



static void Test_aBFu33_BFu0c_BFu1i()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu1i");
    static STRUCT_IF_C aBFu33_BFu0c_BFu1i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu33_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 1, 1, "aBFu33_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu1i, aBFu33_BFu0c_BFu1i)
//============================================================================



static void Test_aBFu33_BFu0c_BFu1ll()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu1ll");
    static STRUCT_IF_C aBFu33_BFu0c_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu33_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 1, 1, "aBFu33_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu1ll, aBFu33_BFu0c_BFu1ll)
//============================================================================



static void Test_aBFu33_BFu0c_BFu1s()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu1s");
    static STRUCT_IF_C aBFu33_BFu0c_BFu1s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu33_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 1, 1, "aBFu33_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu1s, aBFu33_BFu0c_BFu1s)
//============================================================================



static void Test_aBFu33_BFu0c_BFu31i()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu31i");
    static STRUCT_IF_C aBFu33_BFu0c_BFu31i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(aBFu33_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 31, 1, "aBFu33_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu33_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu31i, aBFu33_BFu0c_BFu31i)
//============================================================================



static void Test_aBFu33_BFu0c_BFu31ll()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu31ll");
    static STRUCT_IF_C aBFu33_BFu0c_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(aBFu33_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 31, 1, "aBFu33_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 31, hide_ull(1LL<<30), "aBFu33_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu31ll, aBFu33_BFu0c_BFu31ll)
//============================================================================



static void Test_aBFu33_BFu0c_BFu32i()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu32i");
    static STRUCT_IF_C aBFu33_BFu0c_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aBFu33_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 32, 1, "aBFu33_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu33_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu32i, aBFu33_BFu0c_BFu32i)
//============================================================================



static void Test_aBFu33_BFu0c_BFu32ll()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu32ll");
    static STRUCT_IF_C aBFu33_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFu33_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 32, 1, "aBFu33_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 32, hide_ull(1LL<<31), "aBFu33_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu32ll, aBFu33_BFu0c_BFu32ll)
//============================================================================



static void Test_aBFu33_BFu0c_BFu33()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu33");
    static STRUCT_IF_C aBFu33_BFu0c_BFu33 lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(aBFu33_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 33, 1, "aBFu33_BFu0c_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu33, aBFu33_BFu0c_BFu33)
//============================================================================



static void Test_aBFu33_BFu0c_BFu7c()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu7c");
    static STRUCT_IF_C aBFu33_BFu0c_BFu7c lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu33_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 7, 1, "aBFu33_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu33_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu7c, aBFu33_BFu0c_BFu7c)
//============================================================================



static void Test_aBFu33_BFu0c_BFu7i()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu7i");
    static STRUCT_IF_C aBFu33_BFu0c_BFu7i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu33_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 7, 1, "aBFu33_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu33_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu7i, aBFu33_BFu0c_BFu7i)
//============================================================================



static void Test_aBFu33_BFu0c_BFu7ll()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu7ll");
    static STRUCT_IF_C aBFu33_BFu0c_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu33_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 7, 1, "aBFu33_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu33_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu7ll, aBFu33_BFu0c_BFu7ll)
//============================================================================



static void Test_aBFu33_BFu0c_BFu7s()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu7s");
    static STRUCT_IF_C aBFu33_BFu0c_BFu7s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(aBFu33_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 7, 1, "aBFu33_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 7, hide_ull(1LL<<6), "aBFu33_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu7s, aBFu33_BFu0c_BFu7s)
//============================================================================



static void Test_aBFu33_BFu0c_BFu8c()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu8c");
    static STRUCT_IF_C aBFu33_BFu0c_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aBFu33_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 8, 1, "aBFu33_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu33_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu8c, aBFu33_BFu0c_BFu8c)
//============================================================================



static void Test_aBFu33_BFu0c_BFu8i()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu8i");
    static STRUCT_IF_C aBFu33_BFu0c_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu33_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 8, 1, "aBFu33_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu33_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu8i, aBFu33_BFu0c_BFu8i)
//============================================================================



static void Test_aBFu33_BFu0c_BFu8ll()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu8ll");
    static STRUCT_IF_C aBFu33_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu33_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 8, 1, "aBFu33_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu33_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu8ll, aBFu33_BFu0c_BFu8ll)
//============================================================================



static void Test_aBFu33_BFu0c_BFu8s()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu8s");
    static STRUCT_IF_C aBFu33_BFu0c_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aBFu33_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 8, 1, "aBFu33_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 8, hide_ull(1LL<<7), "aBFu33_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu8s, aBFu33_BFu0c_BFu8s)
//============================================================================



static void Test_aBFu33_BFu0c_BFu9i()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu9i");
    static STRUCT_IF_C aBFu33_BFu0c_BFu9i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu33_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 9, 1, "aBFu33_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu33_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu9i, aBFu33_BFu0c_BFu9i)
//============================================================================



static void Test_aBFu33_BFu0c_BFu9ll()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu9ll");
    static STRUCT_IF_C aBFu33_BFu0c_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu33_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 9, 1, "aBFu33_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu33_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu9ll, aBFu33_BFu0c_BFu9ll)
//============================================================================



static void Test_aBFu33_BFu0c_BFu9s()
{
  {
    init_simple_test("aBFu33_BFu0c_BFu9s");
    static STRUCT_IF_C aBFu33_BFu0c_BFu9s lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(aBFu33_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 9, 1, "aBFu33_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(5,5), ABISELECT(0,0), 9, hide_ull(1LL<<8), "aBFu33_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_BFu9s, aBFu33_BFu0c_BFu9s)
//============================================================================



static void Test_aBFu33_BFu0c_C()
{
  {
    init_simple_test("aBFu33_BFu0c_C");
    static STRUCT_IF_C aBFu33_BFu0c_C lv;
    check2(sizeof(lv), 6, "sizeof(aBFu33_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_C");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_C");
    check_field_offset(lv, v2, 5, "aBFu33_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_C, aBFu33_BFu0c_C)
//============================================================================



static void Test_aBFu33_BFu0c_D()
{
  {
    init_simple_test("aBFu33_BFu0c_D");
    static STRUCT_IF_C aBFu33_BFu0c_D lv;
    check2(sizeof(lv), 13, "sizeof(aBFu33_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_D");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_D");
    check_field_offset(lv, v2, 5, "aBFu33_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_D, aBFu33_BFu0c_D)
//============================================================================



static void Test_aBFu33_BFu0c_F()
{
  {
    init_simple_test("aBFu33_BFu0c_F");
    static STRUCT_IF_C aBFu33_BFu0c_F lv;
    check2(sizeof(lv), 9, "sizeof(aBFu33_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_F");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_F");
    check_field_offset(lv, v2, 5, "aBFu33_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_F, aBFu33_BFu0c_F)
//============================================================================



static void Test_aBFu33_BFu0c_I()
{
  {
    init_simple_test("aBFu33_BFu0c_I");
    static STRUCT_IF_C aBFu33_BFu0c_I lv;
    check2(sizeof(lv), 9, "sizeof(aBFu33_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_I");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_I");
    check_field_offset(lv, v2, 5, "aBFu33_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_I, aBFu33_BFu0c_I)
//============================================================================



static void Test_aBFu33_BFu0c_Ip()
{
  {
    init_simple_test("aBFu33_BFu0c_Ip");
    static STRUCT_IF_C aBFu33_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aBFu33_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_Ip");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_Ip");
    check_field_offset(lv, v2, 5, "aBFu33_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_Ip, aBFu33_BFu0c_Ip)
//============================================================================



static void Test_aBFu33_BFu0c_L()
{
  {
    init_simple_test("aBFu33_BFu0c_L");
    static STRUCT_IF_C aBFu33_BFu0c_L lv;
    check2(sizeof(lv), 13, "sizeof(aBFu33_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_L");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_L");
    check_field_offset(lv, v2, 5, "aBFu33_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_L, aBFu33_BFu0c_L)
//============================================================================



static void Test_aBFu33_BFu0c_S()
{
  {
    init_simple_test("aBFu33_BFu0c_S");
    static STRUCT_IF_C aBFu33_BFu0c_S lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_S");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_S");
    check_field_offset(lv, v2, 5, "aBFu33_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_S, aBFu33_BFu0c_S)
//============================================================================



static void Test_aBFu33_BFu0c_Uc()
{
  {
    init_simple_test("aBFu33_BFu0c_Uc");
    static STRUCT_IF_C aBFu33_BFu0c_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aBFu33_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_Uc");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_Uc");
    check_field_offset(lv, v2, 5, "aBFu33_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_Uc, aBFu33_BFu0c_Uc)
//============================================================================



static void Test_aBFu33_BFu0c_Ui()
{
  {
    init_simple_test("aBFu33_BFu0c_Ui");
    static STRUCT_IF_C aBFu33_BFu0c_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aBFu33_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_Ui");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_Ui");
    check_field_offset(lv, v2, 5, "aBFu33_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_Ui, aBFu33_BFu0c_Ui)
//============================================================================



static void Test_aBFu33_BFu0c_Ul()
{
  {
    init_simple_test("aBFu33_BFu0c_Ul");
    static STRUCT_IF_C aBFu33_BFu0c_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aBFu33_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_Ul");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_Ul");
    check_field_offset(lv, v2, 5, "aBFu33_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_Ul, aBFu33_BFu0c_Ul)
//============================================================================



static void Test_aBFu33_BFu0c_Us()
{
  {
    init_simple_test("aBFu33_BFu0c_Us");
    static STRUCT_IF_C aBFu33_BFu0c_Us lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu0c_Us");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu0c_Us");
    check_field_offset(lv, v2, 5, "aBFu33_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aBFu33_BFu0c_Us, aBFu33_BFu0c_Us)
//============================================================================

