// This file is distributed under the University of Illinois Open Source License.
// See LICENSE.TXT for details.
// RUN: c_compiler -c -o %t1.o -I "common" "common/testsuite.c"
// RUN: cxx_compiler cxx_rtti -c %s -I "common" -o %t2.o
// RUN: linker -o %t2%exeext  %t1.o %t2.o
// RUN: runtool %t2%exeext | checker "TEST PASSED"
#include "testsuite.h"
#ifdef __cplusplus

struct  BFs0c_BFs0c  {
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0c) C1{ Fc:0 Fc:0}



static void Test_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0c");
    static BFs0c_BFs0c lv;
    check2(sizeof(lv), 1, "sizeof(BFs0c_BFs0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c(Test_BFs0c_BFs0c, "BFs0c_BFs0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0c  {
  signed char  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0c) C1{ Fc:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0c");
    static BFs0c_BFs0c_BFs0c lv;
    check2(sizeof(lv), 1, "sizeof(BFs0c_BFs0c_BFs0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFs0c_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0c(Test_BFs0c_BFs0c_BFs0c, "BFs0c_BFs0c_BFs0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0c_BFs0c  {
  signed char  :0;
  signed char  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0c_BFs0c) C1{ Fc:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0c_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0c_BFs0c");
    static BFs0c_BFs0c_BFs0c_BFs0c lv;
    check2(sizeof(lv), 1, "sizeof(BFs0c_BFs0c_BFs0c_BFs0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFs0c_BFs0c_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0c_BFs0c(Test_BFs0c_BFs0c_BFs0c_BFs0c, "BFs0c_BFs0c_BFs0c_BFs0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0c_BFs0i  {
  signed char  :0;
  signed char  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0c_BFs0i) C1{ Fc:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0c_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0c_BFs0i");
    static BFs0c_BFs0c_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0c_BFs0i(Test_BFs0c_BFs0c_BFs0c_BFs0i, "BFs0c_BFs0c_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0c_BFs0ll  {
  signed char  :0;
  signed char  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0c_BFs0ll) C1{ Fc:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0c_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0c_BFs0ll");
    static BFs0c_BFs0c_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0c_BFs0ll(Test_BFs0c_BFs0c_BFs0c_BFs0ll, "BFs0c_BFs0c_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0c_BFs0s  {
  signed char  :0;
  signed char  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0c_BFs0s) C1{ Fc:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0c_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0c_BFs0s");
    static BFs0c_BFs0c_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0c_BFs0s(Test_BFs0c_BFs0c_BFs0c_BFs0s, "BFs0c_BFs0c_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0c_BFu0c  {
  signed char  :0;
  signed char  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0c_BFu0c) C1{ Fc:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0c_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0c_BFu0c");
    static BFs0c_BFs0c_BFs0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFs0c_BFs0c_BFs0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFs0c_BFs0c_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0c_BFu0c(Test_BFs0c_BFs0c_BFs0c_BFu0c, "BFs0c_BFs0c_BFs0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0c_BFu0i  {
  signed char  :0;
  signed char  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0c_BFu0i) C1{ Fc:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0c_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0c_BFu0i");
    static BFs0c_BFs0c_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0c_BFu0i(Test_BFs0c_BFs0c_BFs0c_BFu0i, "BFs0c_BFs0c_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0c_BFu0ll  {
  signed char  :0;
  signed char  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0c_BFu0ll) C1{ Fc:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0c_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0c_BFu0ll");
    static BFs0c_BFs0c_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0c_BFu0ll(Test_BFs0c_BFs0c_BFs0c_BFu0ll, "BFs0c_BFs0c_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0c_BFu0s  {
  signed char  :0;
  signed char  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0c_BFu0s) C1{ Fc:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0c_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0c_BFu0s");
    static BFs0c_BFs0c_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0c_BFu0s(Test_BFs0c_BFs0c_BFs0c_BFu0s, "BFs0c_BFs0c_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0i  {
  signed char  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0i) C1{ Fc:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0i");
    static BFs0c_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0i(Test_BFs0c_BFs0c_BFs0i, "BFs0c_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0i_BFs0c  {
  signed char  :0;
  signed char  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0i_BFs0c) C1{ Fc:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0c_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0i_BFs0c");
    static BFs0c_BFs0c_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0i_BFs0c(Test_BFs0c_BFs0c_BFs0i_BFs0c, "BFs0c_BFs0c_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0i_BFs0i  {
  signed char  :0;
  signed char  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0i_BFs0i) C1{ Fc:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0c_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0i_BFs0i");
    static BFs0c_BFs0c_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0i_BFs0i(Test_BFs0c_BFs0c_BFs0i_BFs0i, "BFs0c_BFs0c_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0i_BFs0ll  {
  signed char  :0;
  signed char  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0i_BFs0ll) C1{ Fc:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0c_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0i_BFs0ll");
    static BFs0c_BFs0c_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0i_BFs0ll(Test_BFs0c_BFs0c_BFs0i_BFs0ll, "BFs0c_BFs0c_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0i_BFs0s  {
  signed char  :0;
  signed char  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0i_BFs0s) C1{ Fc:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0c_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0i_BFs0s");
    static BFs0c_BFs0c_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0i_BFs0s(Test_BFs0c_BFs0c_BFs0i_BFs0s, "BFs0c_BFs0c_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0i_BFu0c  {
  signed char  :0;
  signed char  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0i_BFu0c) C1{ Fc:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0c_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0i_BFu0c");
    static BFs0c_BFs0c_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0i_BFu0c(Test_BFs0c_BFs0c_BFs0i_BFu0c, "BFs0c_BFs0c_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0i_BFu0i  {
  signed char  :0;
  signed char  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0i_BFu0i) C1{ Fc:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0c_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0i_BFu0i");
    static BFs0c_BFs0c_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0i_BFu0i(Test_BFs0c_BFs0c_BFs0i_BFu0i, "BFs0c_BFs0c_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0i_BFu0ll  {
  signed char  :0;
  signed char  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0i_BFu0ll) C1{ Fc:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0c_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0i_BFu0ll");
    static BFs0c_BFs0c_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0i_BFu0ll(Test_BFs0c_BFs0c_BFs0i_BFu0ll, "BFs0c_BFs0c_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0i_BFu0s  {
  signed char  :0;
  signed char  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0i_BFu0s) C1{ Fc:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0c_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0i_BFu0s");
    static BFs0c_BFs0c_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0i_BFu0s(Test_BFs0c_BFs0c_BFs0i_BFu0s, "BFs0c_BFs0c_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0ll  {
  signed char  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0ll) C1{ Fc:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0ll");
    static BFs0c_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0ll(Test_BFs0c_BFs0c_BFs0ll, "BFs0c_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0ll_BFs0c  {
  signed char  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0ll_BFs0c) C1{ Fc:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0c_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0ll_BFs0c");
    static BFs0c_BFs0c_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0ll_BFs0c(Test_BFs0c_BFs0c_BFs0ll_BFs0c, "BFs0c_BFs0c_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0ll_BFs0i  {
  signed char  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0ll_BFs0i) C1{ Fc:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0c_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0ll_BFs0i");
    static BFs0c_BFs0c_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0ll_BFs0i(Test_BFs0c_BFs0c_BFs0ll_BFs0i, "BFs0c_BFs0c_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0ll_BFs0ll  {
  signed char  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0ll_BFs0ll) C1{ Fc:0 Fc:0 FL:0 FL:0}



static void Test_BFs0c_BFs0c_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0ll_BFs0ll");
    static BFs0c_BFs0c_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0ll_BFs0ll(Test_BFs0c_BFs0c_BFs0ll_BFs0ll, "BFs0c_BFs0c_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0ll_BFs0s  {
  signed char  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0ll_BFs0s) C1{ Fc:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0c_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0ll_BFs0s");
    static BFs0c_BFs0c_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0ll_BFs0s(Test_BFs0c_BFs0c_BFs0ll_BFs0s, "BFs0c_BFs0c_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0ll_BFu0c  {
  signed char  :0;
  signed char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0ll_BFu0c) C1{ Fc:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0c_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0ll_BFu0c");
    static BFs0c_BFs0c_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0ll_BFu0c(Test_BFs0c_BFs0c_BFs0ll_BFu0c, "BFs0c_BFs0c_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0ll_BFu0i  {
  signed char  :0;
  signed char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0ll_BFu0i) C1{ Fc:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0c_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0ll_BFu0i");
    static BFs0c_BFs0c_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0ll_BFu0i(Test_BFs0c_BFs0c_BFs0ll_BFu0i, "BFs0c_BFs0c_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0ll_BFu0ll  {
  signed char  :0;
  signed char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0ll_BFu0ll) C1{ Fc:0 Fc:0 FL:0 FL:0}



static void Test_BFs0c_BFs0c_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0ll_BFu0ll");
    static BFs0c_BFs0c_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0ll_BFu0ll(Test_BFs0c_BFs0c_BFs0ll_BFu0ll, "BFs0c_BFs0c_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0ll_BFu0s  {
  signed char  :0;
  signed char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0ll_BFu0s) C1{ Fc:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0c_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0ll_BFu0s");
    static BFs0c_BFs0c_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0ll_BFu0s(Test_BFs0c_BFs0c_BFs0ll_BFu0s, "BFs0c_BFs0c_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0s  {
  signed char  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0s) C1{ Fc:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0s");
    static BFs0c_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0s(Test_BFs0c_BFs0c_BFs0s, "BFs0c_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0s_BFs0c  {
  signed char  :0;
  signed char  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0s_BFs0c) C1{ Fc:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0c_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0s_BFs0c");
    static BFs0c_BFs0c_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0s_BFs0c(Test_BFs0c_BFs0c_BFs0s_BFs0c, "BFs0c_BFs0c_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0s_BFs0i  {
  signed char  :0;
  signed char  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0s_BFs0i) C1{ Fc:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0c_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0s_BFs0i");
    static BFs0c_BFs0c_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0s_BFs0i(Test_BFs0c_BFs0c_BFs0s_BFs0i, "BFs0c_BFs0c_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0s_BFs0ll  {
  signed char  :0;
  signed char  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0s_BFs0ll) C1{ Fc:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0c_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0s_BFs0ll");
    static BFs0c_BFs0c_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0s_BFs0ll(Test_BFs0c_BFs0c_BFs0s_BFs0ll, "BFs0c_BFs0c_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0s_BFs0s  {
  signed char  :0;
  signed char  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0s_BFs0s) C1{ Fc:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0c_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0s_BFs0s");
    static BFs0c_BFs0c_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0s_BFs0s(Test_BFs0c_BFs0c_BFs0s_BFs0s, "BFs0c_BFs0c_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0s_BFu0c  {
  signed char  :0;
  signed char  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0s_BFu0c) C1{ Fc:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0c_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0s_BFu0c");
    static BFs0c_BFs0c_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0s_BFu0c(Test_BFs0c_BFs0c_BFs0s_BFu0c, "BFs0c_BFs0c_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0s_BFu0i  {
  signed char  :0;
  signed char  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0s_BFu0i) C1{ Fc:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0c_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0s_BFu0i");
    static BFs0c_BFs0c_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0s_BFu0i(Test_BFs0c_BFs0c_BFs0s_BFu0i, "BFs0c_BFs0c_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0s_BFu0ll  {
  signed char  :0;
  signed char  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0s_BFu0ll) C1{ Fc:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0c_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0s_BFu0ll");
    static BFs0c_BFs0c_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0s_BFu0ll(Test_BFs0c_BFs0c_BFs0s_BFu0ll, "BFs0c_BFs0c_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFs0s_BFu0s  {
  signed char  :0;
  signed char  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0c_BFs0s_BFu0s) C1{ Fc:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0c_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFs0s_BFu0s");
    static BFs0c_BFs0c_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFs0s_BFu0s(Test_BFs0c_BFs0c_BFs0s_BFu0s, "BFs0c_BFs0c_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0c  {
  signed char  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0c) C1{ Fc:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0c");
    static BFs0c_BFs0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFs0c_BFs0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFs0c_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0c(Test_BFs0c_BFs0c_BFu0c, "BFs0c_BFs0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0c_BFs0c  {
  signed char  :0;
  signed char  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0c_BFs0c) C1{ Fc:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0c_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0c_BFs0c");
    static BFs0c_BFs0c_BFu0c_BFs0c lv;
    check2(sizeof(lv), 1, "sizeof(BFs0c_BFs0c_BFu0c_BFs0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFs0c_BFs0c_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0c_BFs0c(Test_BFs0c_BFs0c_BFu0c_BFs0c, "BFs0c_BFs0c_BFu0c_BFs0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0c_BFs0i  {
  signed char  :0;
  signed char  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0c_BFs0i) C1{ Fc:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0c_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0c_BFs0i");
    static BFs0c_BFs0c_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0c_BFs0i(Test_BFs0c_BFs0c_BFu0c_BFs0i, "BFs0c_BFs0c_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0c_BFs0ll  {
  signed char  :0;
  signed char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0c_BFs0ll) C1{ Fc:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0c_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0c_BFs0ll");
    static BFs0c_BFs0c_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0c_BFs0ll(Test_BFs0c_BFs0c_BFu0c_BFs0ll, "BFs0c_BFs0c_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0c_BFs0s  {
  signed char  :0;
  signed char  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0c_BFs0s) C1{ Fc:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0c_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0c_BFs0s");
    static BFs0c_BFs0c_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0c_BFs0s(Test_BFs0c_BFs0c_BFu0c_BFs0s, "BFs0c_BFs0c_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0c_BFu0c  {
  signed char  :0;
  signed char  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0c_BFu0c) C1{ Fc:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0c_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0c_BFu0c");
    static BFs0c_BFs0c_BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFs0c_BFs0c_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFs0c_BFs0c_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0c_BFu0c(Test_BFs0c_BFs0c_BFu0c_BFu0c, "BFs0c_BFs0c_BFu0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0c_BFu0i  {
  signed char  :0;
  signed char  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0c_BFu0i) C1{ Fc:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0c_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0c_BFu0i");
    static BFs0c_BFs0c_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0c_BFu0i(Test_BFs0c_BFs0c_BFu0c_BFu0i, "BFs0c_BFs0c_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0c_BFu0ll  {
  signed char  :0;
  signed char  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0c_BFu0ll) C1{ Fc:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0c_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0c_BFu0ll");
    static BFs0c_BFs0c_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0c_BFu0ll(Test_BFs0c_BFs0c_BFu0c_BFu0ll, "BFs0c_BFs0c_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0c_BFu0s  {
  signed char  :0;
  signed char  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0c_BFu0s) C1{ Fc:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0c_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0c_BFu0s");
    static BFs0c_BFs0c_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0c_BFu0s(Test_BFs0c_BFs0c_BFu0c_BFu0s, "BFs0c_BFs0c_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0i  {
  signed char  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0i) C1{ Fc:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0i");
    static BFs0c_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0i(Test_BFs0c_BFs0c_BFu0i, "BFs0c_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0i_BFs0c  {
  signed char  :0;
  signed char  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0i_BFs0c) C1{ Fc:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0c_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0i_BFs0c");
    static BFs0c_BFs0c_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0i_BFs0c(Test_BFs0c_BFs0c_BFu0i_BFs0c, "BFs0c_BFs0c_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0i_BFs0i  {
  signed char  :0;
  signed char  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0i_BFs0i) C1{ Fc:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0c_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0i_BFs0i");
    static BFs0c_BFs0c_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0i_BFs0i(Test_BFs0c_BFs0c_BFu0i_BFs0i, "BFs0c_BFs0c_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0i_BFs0ll  {
  signed char  :0;
  signed char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0i_BFs0ll) C1{ Fc:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0c_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0i_BFs0ll");
    static BFs0c_BFs0c_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0i_BFs0ll(Test_BFs0c_BFs0c_BFu0i_BFs0ll, "BFs0c_BFs0c_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0i_BFs0s  {
  signed char  :0;
  signed char  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0i_BFs0s) C1{ Fc:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0c_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0i_BFs0s");
    static BFs0c_BFs0c_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0i_BFs0s(Test_BFs0c_BFs0c_BFu0i_BFs0s, "BFs0c_BFs0c_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0i_BFu0c  {
  signed char  :0;
  signed char  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0i_BFu0c) C1{ Fc:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0c_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0i_BFu0c");
    static BFs0c_BFs0c_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0i_BFu0c(Test_BFs0c_BFs0c_BFu0i_BFu0c, "BFs0c_BFs0c_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0i_BFu0i  {
  signed char  :0;
  signed char  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0i_BFu0i) C1{ Fc:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0c_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0i_BFu0i");
    static BFs0c_BFs0c_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0i_BFu0i(Test_BFs0c_BFs0c_BFu0i_BFu0i, "BFs0c_BFs0c_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0i_BFu0ll  {
  signed char  :0;
  signed char  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0i_BFu0ll) C1{ Fc:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0c_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0i_BFu0ll");
    static BFs0c_BFs0c_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0i_BFu0ll(Test_BFs0c_BFs0c_BFu0i_BFu0ll, "BFs0c_BFs0c_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0i_BFu0s  {
  signed char  :0;
  signed char  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0i_BFu0s) C1{ Fc:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0c_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0i_BFu0s");
    static BFs0c_BFs0c_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0i_BFu0s(Test_BFs0c_BFs0c_BFu0i_BFu0s, "BFs0c_BFs0c_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0ll  {
  signed char  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0ll) C1{ Fc:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0ll");
    static BFs0c_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0ll(Test_BFs0c_BFs0c_BFu0ll, "BFs0c_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0ll_BFs0c  {
  signed char  :0;
  signed char  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0ll_BFs0c) C1{ Fc:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0c_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0ll_BFs0c");
    static BFs0c_BFs0c_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0ll_BFs0c(Test_BFs0c_BFs0c_BFu0ll_BFs0c, "BFs0c_BFs0c_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0ll_BFs0i  {
  signed char  :0;
  signed char  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0ll_BFs0i) C1{ Fc:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0c_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0ll_BFs0i");
    static BFs0c_BFs0c_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0ll_BFs0i(Test_BFs0c_BFs0c_BFu0ll_BFs0i, "BFs0c_BFs0c_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0ll_BFs0ll  {
  signed char  :0;
  signed char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0ll_BFs0ll) C1{ Fc:0 Fc:0 FL:0 FL:0}



static void Test_BFs0c_BFs0c_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0ll_BFs0ll");
    static BFs0c_BFs0c_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0ll_BFs0ll(Test_BFs0c_BFs0c_BFu0ll_BFs0ll, "BFs0c_BFs0c_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0ll_BFs0s  {
  signed char  :0;
  signed char  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0ll_BFs0s) C1{ Fc:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0c_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0ll_BFs0s");
    static BFs0c_BFs0c_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0ll_BFs0s(Test_BFs0c_BFs0c_BFu0ll_BFs0s, "BFs0c_BFs0c_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0ll_BFu0c  {
  signed char  :0;
  signed char  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0ll_BFu0c) C1{ Fc:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0c_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0ll_BFu0c");
    static BFs0c_BFs0c_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0ll_BFu0c(Test_BFs0c_BFs0c_BFu0ll_BFu0c, "BFs0c_BFs0c_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0ll_BFu0i  {
  signed char  :0;
  signed char  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0ll_BFu0i) C1{ Fc:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0c_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0ll_BFu0i");
    static BFs0c_BFs0c_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0ll_BFu0i(Test_BFs0c_BFs0c_BFu0ll_BFu0i, "BFs0c_BFs0c_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0ll_BFu0ll  {
  signed char  :0;
  signed char  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0ll_BFu0ll) C1{ Fc:0 Fc:0 FL:0 FL:0}



static void Test_BFs0c_BFs0c_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0ll_BFu0ll");
    static BFs0c_BFs0c_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0ll_BFu0ll(Test_BFs0c_BFs0c_BFu0ll_BFu0ll, "BFs0c_BFs0c_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0ll_BFu0s  {
  signed char  :0;
  signed char  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0ll_BFu0s) C1{ Fc:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0c_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0ll_BFu0s");
    static BFs0c_BFs0c_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0ll_BFu0s(Test_BFs0c_BFs0c_BFu0ll_BFu0s, "BFs0c_BFs0c_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0s  {
  signed char  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0s) C1{ Fc:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0s");
    static BFs0c_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0s(Test_BFs0c_BFs0c_BFu0s, "BFs0c_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0s_BFs0c  {
  signed char  :0;
  signed char  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0s_BFs0c) C1{ Fc:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0c_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0s_BFs0c");
    static BFs0c_BFs0c_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0s_BFs0c(Test_BFs0c_BFs0c_BFu0s_BFs0c, "BFs0c_BFs0c_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0s_BFs0i  {
  signed char  :0;
  signed char  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0s_BFs0i) C1{ Fc:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0c_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0s_BFs0i");
    static BFs0c_BFs0c_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0s_BFs0i(Test_BFs0c_BFs0c_BFu0s_BFs0i, "BFs0c_BFs0c_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0s_BFs0ll  {
  signed char  :0;
  signed char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0s_BFs0ll) C1{ Fc:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0c_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0s_BFs0ll");
    static BFs0c_BFs0c_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0s_BFs0ll(Test_BFs0c_BFs0c_BFu0s_BFs0ll, "BFs0c_BFs0c_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0s_BFs0s  {
  signed char  :0;
  signed char  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0s_BFs0s) C1{ Fc:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0c_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0s_BFs0s");
    static BFs0c_BFs0c_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0s_BFs0s(Test_BFs0c_BFs0c_BFu0s_BFs0s, "BFs0c_BFs0c_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0s_BFu0c  {
  signed char  :0;
  signed char  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0s_BFu0c) C1{ Fc:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0c_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0s_BFu0c");
    static BFs0c_BFs0c_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0s_BFu0c(Test_BFs0c_BFs0c_BFu0s_BFu0c, "BFs0c_BFs0c_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0s_BFu0i  {
  signed char  :0;
  signed char  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0s_BFu0i) C1{ Fc:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0c_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0s_BFu0i");
    static BFs0c_BFs0c_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0s_BFu0i(Test_BFs0c_BFs0c_BFu0s_BFu0i, "BFs0c_BFs0c_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0s_BFu0ll  {
  signed char  :0;
  signed char  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0s_BFu0ll) C1{ Fc:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0c_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0s_BFu0ll");
    static BFs0c_BFs0c_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0s_BFu0ll(Test_BFs0c_BFs0c_BFu0s_BFu0ll, "BFs0c_BFs0c_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0c_BFu0s_BFu0s  {
  signed char  :0;
  signed char  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0c_BFu0s_BFu0s) C1{ Fc:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0c_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0c_BFu0s_BFu0s");
    static BFs0c_BFs0c_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0c_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0c_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0c_BFu0s_BFu0s(Test_BFs0c_BFs0c_BFu0s_BFu0s, "BFs0c_BFs0c_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i  {
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0i) C1{ Fc:0 Fi:0}



static void Test_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0i");
    static BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i(Test_BFs0c_BFs0i, "BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0c  {
  signed char  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0c) C1{ Fc:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0c");
    static BFs0c_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0c(Test_BFs0c_BFs0i_BFs0c, "BFs0c_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0c_BFs0c  {
  signed char  :0;
  signed int  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0c_BFs0c) C1{ Fc:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0i_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0c_BFs0c");
    static BFs0c_BFs0i_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0c_BFs0c(Test_BFs0c_BFs0i_BFs0c_BFs0c, "BFs0c_BFs0i_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0c_BFs0i  {
  signed char  :0;
  signed int  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0c_BFs0i) C1{ Fc:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0i_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0c_BFs0i");
    static BFs0c_BFs0i_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0c_BFs0i(Test_BFs0c_BFs0i_BFs0c_BFs0i, "BFs0c_BFs0i_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0c_BFs0ll  {
  signed char  :0;
  signed int  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0c_BFs0ll) C1{ Fc:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0i_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0c_BFs0ll");
    static BFs0c_BFs0i_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0c_BFs0ll(Test_BFs0c_BFs0i_BFs0c_BFs0ll, "BFs0c_BFs0i_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0c_BFs0s  {
  signed char  :0;
  signed int  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0c_BFs0s) C1{ Fc:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0i_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0c_BFs0s");
    static BFs0c_BFs0i_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0c_BFs0s(Test_BFs0c_BFs0i_BFs0c_BFs0s, "BFs0c_BFs0i_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0c_BFu0c  {
  signed char  :0;
  signed int  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0c_BFu0c) C1{ Fc:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0i_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0c_BFu0c");
    static BFs0c_BFs0i_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0c_BFu0c(Test_BFs0c_BFs0i_BFs0c_BFu0c, "BFs0c_BFs0i_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0c_BFu0i  {
  signed char  :0;
  signed int  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0c_BFu0i) C1{ Fc:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0i_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0c_BFu0i");
    static BFs0c_BFs0i_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0c_BFu0i(Test_BFs0c_BFs0i_BFs0c_BFu0i, "BFs0c_BFs0i_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0c_BFu0ll  {
  signed char  :0;
  signed int  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0c_BFu0ll) C1{ Fc:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0i_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0c_BFu0ll");
    static BFs0c_BFs0i_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0c_BFu0ll(Test_BFs0c_BFs0i_BFs0c_BFu0ll, "BFs0c_BFs0i_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0c_BFu0s  {
  signed char  :0;
  signed int  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0c_BFu0s) C1{ Fc:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0i_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0c_BFu0s");
    static BFs0c_BFs0i_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0c_BFu0s(Test_BFs0c_BFs0i_BFs0c_BFu0s, "BFs0c_BFs0i_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0i  {
  signed char  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0i) C1{ Fc:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0i");
    static BFs0c_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0i(Test_BFs0c_BFs0i_BFs0i, "BFs0c_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0i_BFs0c  {
  signed char  :0;
  signed int  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0i_BFs0c) C1{ Fc:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0i_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0i_BFs0c");
    static BFs0c_BFs0i_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0i_BFs0c(Test_BFs0c_BFs0i_BFs0i_BFs0c, "BFs0c_BFs0i_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0i_BFs0i  {
  signed char  :0;
  signed int  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0i_BFs0i) C1{ Fc:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0i_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0i_BFs0i");
    static BFs0c_BFs0i_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0i_BFs0i(Test_BFs0c_BFs0i_BFs0i_BFs0i, "BFs0c_BFs0i_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0i_BFs0ll  {
  signed char  :0;
  signed int  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0i_BFs0ll) C1{ Fc:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0i_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0i_BFs0ll");
    static BFs0c_BFs0i_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0i_BFs0ll(Test_BFs0c_BFs0i_BFs0i_BFs0ll, "BFs0c_BFs0i_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0i_BFs0s  {
  signed char  :0;
  signed int  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0i_BFs0s) C1{ Fc:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0i_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0i_BFs0s");
    static BFs0c_BFs0i_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0i_BFs0s(Test_BFs0c_BFs0i_BFs0i_BFs0s, "BFs0c_BFs0i_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0i_BFu0c  {
  signed char  :0;
  signed int  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0i_BFu0c) C1{ Fc:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0i_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0i_BFu0c");
    static BFs0c_BFs0i_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0i_BFu0c(Test_BFs0c_BFs0i_BFs0i_BFu0c, "BFs0c_BFs0i_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0i_BFu0i  {
  signed char  :0;
  signed int  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0i_BFu0i) C1{ Fc:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0i_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0i_BFu0i");
    static BFs0c_BFs0i_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0i_BFu0i(Test_BFs0c_BFs0i_BFs0i_BFu0i, "BFs0c_BFs0i_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0i_BFu0ll  {
  signed char  :0;
  signed int  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0i_BFu0ll) C1{ Fc:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0i_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0i_BFu0ll");
    static BFs0c_BFs0i_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0i_BFu0ll(Test_BFs0c_BFs0i_BFs0i_BFu0ll, "BFs0c_BFs0i_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0i_BFu0s  {
  signed char  :0;
  signed int  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0i_BFu0s) C1{ Fc:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0i_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0i_BFu0s");
    static BFs0c_BFs0i_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0i_BFu0s(Test_BFs0c_BFs0i_BFs0i_BFu0s, "BFs0c_BFs0i_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0ll  {
  signed char  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0ll) C1{ Fc:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0ll");
    static BFs0c_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0ll(Test_BFs0c_BFs0i_BFs0ll, "BFs0c_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0ll_BFs0c  {
  signed char  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0ll_BFs0c) C1{ Fc:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0i_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0ll_BFs0c");
    static BFs0c_BFs0i_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0ll_BFs0c(Test_BFs0c_BFs0i_BFs0ll_BFs0c, "BFs0c_BFs0i_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0ll_BFs0i  {
  signed char  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0ll_BFs0i) C1{ Fc:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0i_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0ll_BFs0i");
    static BFs0c_BFs0i_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0ll_BFs0i(Test_BFs0c_BFs0i_BFs0ll_BFs0i, "BFs0c_BFs0i_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0ll_BFs0ll  {
  signed char  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0ll_BFs0ll) C1{ Fc:0 Fi:0 FL:0 FL:0}



static void Test_BFs0c_BFs0i_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0ll_BFs0ll");
    static BFs0c_BFs0i_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0ll_BFs0ll(Test_BFs0c_BFs0i_BFs0ll_BFs0ll, "BFs0c_BFs0i_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0ll_BFs0s  {
  signed char  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0ll_BFs0s) C1{ Fc:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0i_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0ll_BFs0s");
    static BFs0c_BFs0i_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0ll_BFs0s(Test_BFs0c_BFs0i_BFs0ll_BFs0s, "BFs0c_BFs0i_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0ll_BFu0c  {
  signed char  :0;
  signed int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0ll_BFu0c) C1{ Fc:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0i_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0ll_BFu0c");
    static BFs0c_BFs0i_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0ll_BFu0c(Test_BFs0c_BFs0i_BFs0ll_BFu0c, "BFs0c_BFs0i_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0ll_BFu0i  {
  signed char  :0;
  signed int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0ll_BFu0i) C1{ Fc:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0i_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0ll_BFu0i");
    static BFs0c_BFs0i_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0ll_BFu0i(Test_BFs0c_BFs0i_BFs0ll_BFu0i, "BFs0c_BFs0i_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0ll_BFu0ll  {
  signed char  :0;
  signed int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0ll_BFu0ll) C1{ Fc:0 Fi:0 FL:0 FL:0}



static void Test_BFs0c_BFs0i_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0ll_BFu0ll");
    static BFs0c_BFs0i_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0ll_BFu0ll(Test_BFs0c_BFs0i_BFs0ll_BFu0ll, "BFs0c_BFs0i_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0ll_BFu0s  {
  signed char  :0;
  signed int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0ll_BFu0s) C1{ Fc:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0i_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0ll_BFu0s");
    static BFs0c_BFs0i_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0ll_BFu0s(Test_BFs0c_BFs0i_BFs0ll_BFu0s, "BFs0c_BFs0i_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0s  {
  signed char  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0s) C1{ Fc:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0s");
    static BFs0c_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0s(Test_BFs0c_BFs0i_BFs0s, "BFs0c_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0s_BFs0c  {
  signed char  :0;
  signed int  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0s_BFs0c) C1{ Fc:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0i_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0s_BFs0c");
    static BFs0c_BFs0i_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0s_BFs0c(Test_BFs0c_BFs0i_BFs0s_BFs0c, "BFs0c_BFs0i_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0s_BFs0i  {
  signed char  :0;
  signed int  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0s_BFs0i) C1{ Fc:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0i_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0s_BFs0i");
    static BFs0c_BFs0i_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0s_BFs0i(Test_BFs0c_BFs0i_BFs0s_BFs0i, "BFs0c_BFs0i_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0s_BFs0ll  {
  signed char  :0;
  signed int  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0s_BFs0ll) C1{ Fc:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0i_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0s_BFs0ll");
    static BFs0c_BFs0i_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0s_BFs0ll(Test_BFs0c_BFs0i_BFs0s_BFs0ll, "BFs0c_BFs0i_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0s_BFs0s  {
  signed char  :0;
  signed int  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0s_BFs0s) C1{ Fc:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0i_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0s_BFs0s");
    static BFs0c_BFs0i_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0s_BFs0s(Test_BFs0c_BFs0i_BFs0s_BFs0s, "BFs0c_BFs0i_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0s_BFu0c  {
  signed char  :0;
  signed int  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0s_BFu0c) C1{ Fc:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0i_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0s_BFu0c");
    static BFs0c_BFs0i_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0s_BFu0c(Test_BFs0c_BFs0i_BFs0s_BFu0c, "BFs0c_BFs0i_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0s_BFu0i  {
  signed char  :0;
  signed int  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0s_BFu0i) C1{ Fc:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0i_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0s_BFu0i");
    static BFs0c_BFs0i_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0s_BFu0i(Test_BFs0c_BFs0i_BFs0s_BFu0i, "BFs0c_BFs0i_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0s_BFu0ll  {
  signed char  :0;
  signed int  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0s_BFu0ll) C1{ Fc:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0i_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0s_BFu0ll");
    static BFs0c_BFs0i_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0s_BFu0ll(Test_BFs0c_BFs0i_BFs0s_BFu0ll, "BFs0c_BFs0i_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFs0s_BFu0s  {
  signed char  :0;
  signed int  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0i_BFs0s_BFu0s) C1{ Fc:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0i_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFs0s_BFu0s");
    static BFs0c_BFs0i_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFs0s_BFu0s(Test_BFs0c_BFs0i_BFs0s_BFu0s, "BFs0c_BFs0i_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0c  {
  signed char  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0c) C1{ Fc:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0c");
    static BFs0c_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0c(Test_BFs0c_BFs0i_BFu0c, "BFs0c_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0c_BFs0c  {
  signed char  :0;
  signed int  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0c_BFs0c) C1{ Fc:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0i_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0c_BFs0c");
    static BFs0c_BFs0i_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0c_BFs0c(Test_BFs0c_BFs0i_BFu0c_BFs0c, "BFs0c_BFs0i_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0c_BFs0i  {
  signed char  :0;
  signed int  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0c_BFs0i) C1{ Fc:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0i_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0c_BFs0i");
    static BFs0c_BFs0i_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0c_BFs0i(Test_BFs0c_BFs0i_BFu0c_BFs0i, "BFs0c_BFs0i_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0c_BFs0ll  {
  signed char  :0;
  signed int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0c_BFs0ll) C1{ Fc:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0i_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0c_BFs0ll");
    static BFs0c_BFs0i_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0c_BFs0ll(Test_BFs0c_BFs0i_BFu0c_BFs0ll, "BFs0c_BFs0i_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0c_BFs0s  {
  signed char  :0;
  signed int  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0c_BFs0s) C1{ Fc:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0i_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0c_BFs0s");
    static BFs0c_BFs0i_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0c_BFs0s(Test_BFs0c_BFs0i_BFu0c_BFs0s, "BFs0c_BFs0i_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0c_BFu0c  {
  signed char  :0;
  signed int  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0c_BFu0c) C1{ Fc:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0i_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0c_BFu0c");
    static BFs0c_BFs0i_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0c_BFu0c(Test_BFs0c_BFs0i_BFu0c_BFu0c, "BFs0c_BFs0i_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0c_BFu0i  {
  signed char  :0;
  signed int  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0c_BFu0i) C1{ Fc:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0i_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0c_BFu0i");
    static BFs0c_BFs0i_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0c_BFu0i(Test_BFs0c_BFs0i_BFu0c_BFu0i, "BFs0c_BFs0i_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0c_BFu0ll  {
  signed char  :0;
  signed int  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0c_BFu0ll) C1{ Fc:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0i_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0c_BFu0ll");
    static BFs0c_BFs0i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0c_BFu0ll(Test_BFs0c_BFs0i_BFu0c_BFu0ll, "BFs0c_BFs0i_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0c_BFu0s  {
  signed char  :0;
  signed int  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0c_BFu0s) C1{ Fc:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0i_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0c_BFu0s");
    static BFs0c_BFs0i_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0c_BFu0s(Test_BFs0c_BFs0i_BFu0c_BFu0s, "BFs0c_BFs0i_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0i  {
  signed char  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0i) C1{ Fc:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0i");
    static BFs0c_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0i(Test_BFs0c_BFs0i_BFu0i, "BFs0c_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0i_BFs0c  {
  signed char  :0;
  signed int  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0i_BFs0c) C1{ Fc:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0i_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0i_BFs0c");
    static BFs0c_BFs0i_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0i_BFs0c(Test_BFs0c_BFs0i_BFu0i_BFs0c, "BFs0c_BFs0i_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0i_BFs0i  {
  signed char  :0;
  signed int  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0i_BFs0i) C1{ Fc:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0i_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0i_BFs0i");
    static BFs0c_BFs0i_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0i_BFs0i(Test_BFs0c_BFs0i_BFu0i_BFs0i, "BFs0c_BFs0i_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0i_BFs0ll  {
  signed char  :0;
  signed int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0i_BFs0ll) C1{ Fc:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0i_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0i_BFs0ll");
    static BFs0c_BFs0i_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0i_BFs0ll(Test_BFs0c_BFs0i_BFu0i_BFs0ll, "BFs0c_BFs0i_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0i_BFs0s  {
  signed char  :0;
  signed int  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0i_BFs0s) C1{ Fc:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0i_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0i_BFs0s");
    static BFs0c_BFs0i_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0i_BFs0s(Test_BFs0c_BFs0i_BFu0i_BFs0s, "BFs0c_BFs0i_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0i_BFu0c  {
  signed char  :0;
  signed int  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0i_BFu0c) C1{ Fc:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0i_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0i_BFu0c");
    static BFs0c_BFs0i_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0i_BFu0c(Test_BFs0c_BFs0i_BFu0i_BFu0c, "BFs0c_BFs0i_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0i_BFu0i  {
  signed char  :0;
  signed int  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0i_BFu0i) C1{ Fc:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0i_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0i_BFu0i");
    static BFs0c_BFs0i_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0i_BFu0i(Test_BFs0c_BFs0i_BFu0i_BFu0i, "BFs0c_BFs0i_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0i_BFu0ll  {
  signed char  :0;
  signed int  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0i_BFu0ll) C1{ Fc:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0i_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0i_BFu0ll");
    static BFs0c_BFs0i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0i_BFu0ll(Test_BFs0c_BFs0i_BFu0i_BFu0ll, "BFs0c_BFs0i_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0i_BFu0s  {
  signed char  :0;
  signed int  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0i_BFu0s) C1{ Fc:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0i_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0i_BFu0s");
    static BFs0c_BFs0i_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0i_BFu0s(Test_BFs0c_BFs0i_BFu0i_BFu0s, "BFs0c_BFs0i_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0ll  {
  signed char  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0ll) C1{ Fc:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0ll");
    static BFs0c_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0ll(Test_BFs0c_BFs0i_BFu0ll, "BFs0c_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0ll_BFs0c  {
  signed char  :0;
  signed int  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0ll_BFs0c) C1{ Fc:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0i_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0ll_BFs0c");
    static BFs0c_BFs0i_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0ll_BFs0c(Test_BFs0c_BFs0i_BFu0ll_BFs0c, "BFs0c_BFs0i_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0ll_BFs0i  {
  signed char  :0;
  signed int  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0ll_BFs0i) C1{ Fc:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0i_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0ll_BFs0i");
    static BFs0c_BFs0i_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0ll_BFs0i(Test_BFs0c_BFs0i_BFu0ll_BFs0i, "BFs0c_BFs0i_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0ll_BFs0ll  {
  signed char  :0;
  signed int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0ll_BFs0ll) C1{ Fc:0 Fi:0 FL:0 FL:0}



static void Test_BFs0c_BFs0i_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0ll_BFs0ll");
    static BFs0c_BFs0i_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0ll_BFs0ll(Test_BFs0c_BFs0i_BFu0ll_BFs0ll, "BFs0c_BFs0i_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0ll_BFs0s  {
  signed char  :0;
  signed int  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0ll_BFs0s) C1{ Fc:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0i_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0ll_BFs0s");
    static BFs0c_BFs0i_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0ll_BFs0s(Test_BFs0c_BFs0i_BFu0ll_BFs0s, "BFs0c_BFs0i_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0ll_BFu0c  {
  signed char  :0;
  signed int  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0ll_BFu0c) C1{ Fc:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0i_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0ll_BFu0c");
    static BFs0c_BFs0i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0ll_BFu0c(Test_BFs0c_BFs0i_BFu0ll_BFu0c, "BFs0c_BFs0i_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0ll_BFu0i  {
  signed char  :0;
  signed int  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0ll_BFu0i) C1{ Fc:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0i_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0ll_BFu0i");
    static BFs0c_BFs0i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0ll_BFu0i(Test_BFs0c_BFs0i_BFu0ll_BFu0i, "BFs0c_BFs0i_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0ll_BFu0ll  {
  signed char  :0;
  signed int  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0ll_BFu0ll) C1{ Fc:0 Fi:0 FL:0 FL:0}



static void Test_BFs0c_BFs0i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0ll_BFu0ll");
    static BFs0c_BFs0i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0ll_BFu0ll(Test_BFs0c_BFs0i_BFu0ll_BFu0ll, "BFs0c_BFs0i_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0ll_BFu0s  {
  signed char  :0;
  signed int  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0ll_BFu0s) C1{ Fc:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0i_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0ll_BFu0s");
    static BFs0c_BFs0i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0ll_BFu0s(Test_BFs0c_BFs0i_BFu0ll_BFu0s, "BFs0c_BFs0i_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0s  {
  signed char  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0s) C1{ Fc:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0s");
    static BFs0c_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0s(Test_BFs0c_BFs0i_BFu0s, "BFs0c_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0s_BFs0c  {
  signed char  :0;
  signed int  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0s_BFs0c) C1{ Fc:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0i_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0s_BFs0c");
    static BFs0c_BFs0i_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0s_BFs0c(Test_BFs0c_BFs0i_BFu0s_BFs0c, "BFs0c_BFs0i_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0s_BFs0i  {
  signed char  :0;
  signed int  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0s_BFs0i) C1{ Fc:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0i_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0s_BFs0i");
    static BFs0c_BFs0i_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0s_BFs0i(Test_BFs0c_BFs0i_BFu0s_BFs0i, "BFs0c_BFs0i_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0s_BFs0ll  {
  signed char  :0;
  signed int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0s_BFs0ll) C1{ Fc:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0i_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0s_BFs0ll");
    static BFs0c_BFs0i_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0s_BFs0ll(Test_BFs0c_BFs0i_BFu0s_BFs0ll, "BFs0c_BFs0i_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0s_BFs0s  {
  signed char  :0;
  signed int  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0s_BFs0s) C1{ Fc:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0i_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0s_BFs0s");
    static BFs0c_BFs0i_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0s_BFs0s(Test_BFs0c_BFs0i_BFu0s_BFs0s, "BFs0c_BFs0i_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0s_BFu0c  {
  signed char  :0;
  signed int  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0s_BFu0c) C1{ Fc:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0i_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0s_BFu0c");
    static BFs0c_BFs0i_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0s_BFu0c(Test_BFs0c_BFs0i_BFu0s_BFu0c, "BFs0c_BFs0i_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0s_BFu0i  {
  signed char  :0;
  signed int  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0s_BFu0i) C1{ Fc:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0i_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0s_BFu0i");
    static BFs0c_BFs0i_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0s_BFu0i(Test_BFs0c_BFs0i_BFu0s_BFu0i, "BFs0c_BFs0i_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0s_BFu0ll  {
  signed char  :0;
  signed int  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0s_BFu0ll) C1{ Fc:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0i_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0s_BFu0ll");
    static BFs0c_BFs0i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0s_BFu0ll(Test_BFs0c_BFs0i_BFu0s_BFu0ll, "BFs0c_BFs0i_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0i_BFu0s_BFu0s  {
  signed char  :0;
  signed int  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0i_BFu0s_BFu0s) C1{ Fc:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0i_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0i_BFu0s_BFu0s");
    static BFs0c_BFs0i_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0i_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0i_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0i_BFu0s_BFu0s(Test_BFs0c_BFs0i_BFu0s_BFu0s, "BFs0c_BFs0i_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll  {
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0ll) C1{ Fc:0 FL:0}



static void Test_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll");
    static BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll(Test_BFs0c_BFs0ll, "BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0c  {
  signed char  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0c) C1{ Fc:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0c");
    static BFs0c_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0c(Test_BFs0c_BFs0ll_BFs0c, "BFs0c_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0c_BFs0c  {
  signed char  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0c_BFs0c) C1{ Fc:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0c_BFs0c");
    static BFs0c_BFs0ll_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0c_BFs0c(Test_BFs0c_BFs0ll_BFs0c_BFs0c, "BFs0c_BFs0ll_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0c_BFs0i  {
  signed char  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0c_BFs0i) C1{ Fc:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0c_BFs0i");
    static BFs0c_BFs0ll_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0c_BFs0i(Test_BFs0c_BFs0ll_BFs0c_BFs0i, "BFs0c_BFs0ll_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0c_BFs0ll  {
  signed char  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0c_BFs0ll) C1{ Fc:0 FL:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0ll_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0c_BFs0ll");
    static BFs0c_BFs0ll_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0c_BFs0ll(Test_BFs0c_BFs0ll_BFs0c_BFs0ll, "BFs0c_BFs0ll_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0c_BFs0s  {
  signed char  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0c_BFs0s) C1{ Fc:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0c_BFs0s");
    static BFs0c_BFs0ll_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0c_BFs0s(Test_BFs0c_BFs0ll_BFs0c_BFs0s, "BFs0c_BFs0ll_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0c_BFu0c  {
  signed char  :0;
  signed __tsi64  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0c_BFu0c) C1{ Fc:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0c_BFu0c");
    static BFs0c_BFs0ll_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0c_BFu0c(Test_BFs0c_BFs0ll_BFs0c_BFu0c, "BFs0c_BFs0ll_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0c_BFu0i  {
  signed char  :0;
  signed __tsi64  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0c_BFu0i) C1{ Fc:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0c_BFu0i");
    static BFs0c_BFs0ll_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0c_BFu0i(Test_BFs0c_BFs0ll_BFs0c_BFu0i, "BFs0c_BFs0ll_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0c_BFu0ll  {
  signed char  :0;
  signed __tsi64  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0c_BFu0ll) C1{ Fc:0 FL:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0ll_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0c_BFu0ll");
    static BFs0c_BFs0ll_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0c_BFu0ll(Test_BFs0c_BFs0ll_BFs0c_BFu0ll, "BFs0c_BFs0ll_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0c_BFu0s  {
  signed char  :0;
  signed __tsi64  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0c_BFu0s) C1{ Fc:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0c_BFu0s");
    static BFs0c_BFs0ll_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0c_BFu0s(Test_BFs0c_BFs0ll_BFs0c_BFu0s, "BFs0c_BFs0ll_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0i  {
  signed char  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0i) C1{ Fc:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0i");
    static BFs0c_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0i(Test_BFs0c_BFs0ll_BFs0i, "BFs0c_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0i_BFs0c  {
  signed char  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0i_BFs0c) C1{ Fc:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0i_BFs0c");
    static BFs0c_BFs0ll_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0i_BFs0c(Test_BFs0c_BFs0ll_BFs0i_BFs0c, "BFs0c_BFs0ll_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0i_BFs0i  {
  signed char  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0i_BFs0i) C1{ Fc:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0i_BFs0i");
    static BFs0c_BFs0ll_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0i_BFs0i(Test_BFs0c_BFs0ll_BFs0i_BFs0i, "BFs0c_BFs0ll_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0i_BFs0ll  {
  signed char  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0i_BFs0ll) C1{ Fc:0 FL:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0ll_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0i_BFs0ll");
    static BFs0c_BFs0ll_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0i_BFs0ll(Test_BFs0c_BFs0ll_BFs0i_BFs0ll, "BFs0c_BFs0ll_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0i_BFs0s  {
  signed char  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0i_BFs0s) C1{ Fc:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0i_BFs0s");
    static BFs0c_BFs0ll_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0i_BFs0s(Test_BFs0c_BFs0ll_BFs0i_BFs0s, "BFs0c_BFs0ll_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0i_BFu0c  {
  signed char  :0;
  signed __tsi64  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0i_BFu0c) C1{ Fc:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0i_BFu0c");
    static BFs0c_BFs0ll_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0i_BFu0c(Test_BFs0c_BFs0ll_BFs0i_BFu0c, "BFs0c_BFs0ll_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0i_BFu0i  {
  signed char  :0;
  signed __tsi64  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0i_BFu0i) C1{ Fc:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0i_BFu0i");
    static BFs0c_BFs0ll_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0i_BFu0i(Test_BFs0c_BFs0ll_BFs0i_BFu0i, "BFs0c_BFs0ll_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0i_BFu0ll  {
  signed char  :0;
  signed __tsi64  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0i_BFu0ll) C1{ Fc:0 FL:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0ll_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0i_BFu0ll");
    static BFs0c_BFs0ll_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0i_BFu0ll(Test_BFs0c_BFs0ll_BFs0i_BFu0ll, "BFs0c_BFs0ll_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0i_BFu0s  {
  signed char  :0;
  signed __tsi64  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0i_BFu0s) C1{ Fc:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0i_BFu0s");
    static BFs0c_BFs0ll_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0i_BFu0s(Test_BFs0c_BFs0ll_BFs0i_BFu0s, "BFs0c_BFs0ll_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0ll  {
  signed char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0ll) C1{ Fc:0 FL:0 FL:0}



static void Test_BFs0c_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0ll");
    static BFs0c_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0ll(Test_BFs0c_BFs0ll_BFs0ll, "BFs0c_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0ll_BFs0c  {
  signed char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0ll_BFs0c) C1{ Fc:0 FL:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0ll_BFs0c");
    static BFs0c_BFs0ll_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0ll_BFs0c(Test_BFs0c_BFs0ll_BFs0ll_BFs0c, "BFs0c_BFs0ll_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0ll_BFs0i  {
  signed char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0ll_BFs0i) C1{ Fc:0 FL:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0ll_BFs0i");
    static BFs0c_BFs0ll_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0ll_BFs0i(Test_BFs0c_BFs0ll_BFs0ll_BFs0i, "BFs0c_BFs0ll_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0ll_BFs0ll  {
  signed char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0ll_BFs0ll) C1{ Fc:0 FL:0 FL:0 FL:0}



static void Test_BFs0c_BFs0ll_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0ll_BFs0ll");
    static BFs0c_BFs0ll_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0ll_BFs0ll(Test_BFs0c_BFs0ll_BFs0ll_BFs0ll, "BFs0c_BFs0ll_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0ll_BFs0s  {
  signed char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0ll_BFs0s) C1{ Fc:0 FL:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0ll_BFs0s");
    static BFs0c_BFs0ll_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0ll_BFs0s(Test_BFs0c_BFs0ll_BFs0ll_BFs0s, "BFs0c_BFs0ll_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0ll_BFu0c  {
  signed char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0ll_BFu0c) C1{ Fc:0 FL:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0ll_BFu0c");
    static BFs0c_BFs0ll_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0ll_BFu0c(Test_BFs0c_BFs0ll_BFs0ll_BFu0c, "BFs0c_BFs0ll_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0ll_BFu0i  {
  signed char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0ll_BFu0i) C1{ Fc:0 FL:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0ll_BFu0i");
    static BFs0c_BFs0ll_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0ll_BFu0i(Test_BFs0c_BFs0ll_BFs0ll_BFu0i, "BFs0c_BFs0ll_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0ll_BFu0ll  {
  signed char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0ll_BFu0ll) C1{ Fc:0 FL:0 FL:0 FL:0}



static void Test_BFs0c_BFs0ll_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0ll_BFu0ll");
    static BFs0c_BFs0ll_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0ll_BFu0ll(Test_BFs0c_BFs0ll_BFs0ll_BFu0ll, "BFs0c_BFs0ll_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0ll_BFu0s  {
  signed char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0ll_BFu0s) C1{ Fc:0 FL:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0ll_BFu0s");
    static BFs0c_BFs0ll_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0ll_BFu0s(Test_BFs0c_BFs0ll_BFs0ll_BFu0s, "BFs0c_BFs0ll_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0s  {
  signed char  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0s) C1{ Fc:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0s");
    static BFs0c_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0s(Test_BFs0c_BFs0ll_BFs0s, "BFs0c_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0s_BFs0c  {
  signed char  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0s_BFs0c) C1{ Fc:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0s_BFs0c");
    static BFs0c_BFs0ll_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0s_BFs0c(Test_BFs0c_BFs0ll_BFs0s_BFs0c, "BFs0c_BFs0ll_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0s_BFs0i  {
  signed char  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0s_BFs0i) C1{ Fc:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0s_BFs0i");
    static BFs0c_BFs0ll_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0s_BFs0i(Test_BFs0c_BFs0ll_BFs0s_BFs0i, "BFs0c_BFs0ll_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0s_BFs0ll  {
  signed char  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0s_BFs0ll) C1{ Fc:0 FL:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0ll_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0s_BFs0ll");
    static BFs0c_BFs0ll_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0s_BFs0ll(Test_BFs0c_BFs0ll_BFs0s_BFs0ll, "BFs0c_BFs0ll_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0s_BFs0s  {
  signed char  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0s_BFs0s) C1{ Fc:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0s_BFs0s");
    static BFs0c_BFs0ll_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0s_BFs0s(Test_BFs0c_BFs0ll_BFs0s_BFs0s, "BFs0c_BFs0ll_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0s_BFu0c  {
  signed char  :0;
  signed __tsi64  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0s_BFu0c) C1{ Fc:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0s_BFu0c");
    static BFs0c_BFs0ll_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0s_BFu0c(Test_BFs0c_BFs0ll_BFs0s_BFu0c, "BFs0c_BFs0ll_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0s_BFu0i  {
  signed char  :0;
  signed __tsi64  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0s_BFu0i) C1{ Fc:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0s_BFu0i");
    static BFs0c_BFs0ll_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0s_BFu0i(Test_BFs0c_BFs0ll_BFs0s_BFu0i, "BFs0c_BFs0ll_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0s_BFu0ll  {
  signed char  :0;
  signed __tsi64  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0s_BFu0ll) C1{ Fc:0 FL:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0ll_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0s_BFu0ll");
    static BFs0c_BFs0ll_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0s_BFu0ll(Test_BFs0c_BFs0ll_BFs0s_BFu0ll, "BFs0c_BFs0ll_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFs0s_BFu0s  {
  signed char  :0;
  signed __tsi64  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFs0s_BFu0s) C1{ Fc:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFs0s_BFu0s");
    static BFs0c_BFs0ll_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFs0s_BFu0s(Test_BFs0c_BFs0ll_BFs0s_BFu0s, "BFs0c_BFs0ll_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0c  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0c) C1{ Fc:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0c");
    static BFs0c_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0c(Test_BFs0c_BFs0ll_BFu0c, "BFs0c_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0c_BFs0c  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0c_BFs0c) C1{ Fc:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0c_BFs0c");
    static BFs0c_BFs0ll_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0c_BFs0c(Test_BFs0c_BFs0ll_BFu0c_BFs0c, "BFs0c_BFs0ll_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0c_BFs0i  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0c_BFs0i) C1{ Fc:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0c_BFs0i");
    static BFs0c_BFs0ll_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0c_BFs0i(Test_BFs0c_BFs0ll_BFu0c_BFs0i, "BFs0c_BFs0ll_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0c_BFs0ll  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0c_BFs0ll) C1{ Fc:0 FL:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0ll_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0c_BFs0ll");
    static BFs0c_BFs0ll_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0c_BFs0ll(Test_BFs0c_BFs0ll_BFu0c_BFs0ll, "BFs0c_BFs0ll_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0c_BFs0s  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0c_BFs0s) C1{ Fc:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0c_BFs0s");
    static BFs0c_BFs0ll_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0c_BFs0s(Test_BFs0c_BFs0ll_BFu0c_BFs0s, "BFs0c_BFs0ll_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0c_BFu0c  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0c_BFu0c) C1{ Fc:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0c_BFu0c");
    static BFs0c_BFs0ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0c_BFu0c(Test_BFs0c_BFs0ll_BFu0c_BFu0c, "BFs0c_BFs0ll_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0c_BFu0i  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0c_BFu0i) C1{ Fc:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0c_BFu0i");
    static BFs0c_BFs0ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0c_BFu0i(Test_BFs0c_BFs0ll_BFu0c_BFu0i, "BFs0c_BFs0ll_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0c_BFu0ll  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0c_BFu0ll) C1{ Fc:0 FL:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0c_BFu0ll");
    static BFs0c_BFs0ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0c_BFu0ll(Test_BFs0c_BFs0ll_BFu0c_BFu0ll, "BFs0c_BFs0ll_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0c_BFu0s  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0c_BFu0s) C1{ Fc:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0c_BFu0s");
    static BFs0c_BFs0ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0c_BFu0s(Test_BFs0c_BFs0ll_BFu0c_BFu0s, "BFs0c_BFs0ll_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0i  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0i) C1{ Fc:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0i");
    static BFs0c_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0i(Test_BFs0c_BFs0ll_BFu0i, "BFs0c_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0i_BFs0c  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0i_BFs0c) C1{ Fc:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0i_BFs0c");
    static BFs0c_BFs0ll_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0i_BFs0c(Test_BFs0c_BFs0ll_BFu0i_BFs0c, "BFs0c_BFs0ll_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0i_BFs0i  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0i_BFs0i) C1{ Fc:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0i_BFs0i");
    static BFs0c_BFs0ll_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0i_BFs0i(Test_BFs0c_BFs0ll_BFu0i_BFs0i, "BFs0c_BFs0ll_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0i_BFs0ll  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0i_BFs0ll) C1{ Fc:0 FL:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0ll_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0i_BFs0ll");
    static BFs0c_BFs0ll_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0i_BFs0ll(Test_BFs0c_BFs0ll_BFu0i_BFs0ll, "BFs0c_BFs0ll_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0i_BFs0s  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0i_BFs0s) C1{ Fc:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0i_BFs0s");
    static BFs0c_BFs0ll_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0i_BFs0s(Test_BFs0c_BFs0ll_BFu0i_BFs0s, "BFs0c_BFs0ll_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0i_BFu0c  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0i_BFu0c) C1{ Fc:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0i_BFu0c");
    static BFs0c_BFs0ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0i_BFu0c(Test_BFs0c_BFs0ll_BFu0i_BFu0c, "BFs0c_BFs0ll_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0i_BFu0i  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0i_BFu0i) C1{ Fc:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0i_BFu0i");
    static BFs0c_BFs0ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0i_BFu0i(Test_BFs0c_BFs0ll_BFu0i_BFu0i, "BFs0c_BFs0ll_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0i_BFu0ll  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0i_BFu0ll) C1{ Fc:0 FL:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0i_BFu0ll");
    static BFs0c_BFs0ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0i_BFu0ll(Test_BFs0c_BFs0ll_BFu0i_BFu0ll, "BFs0c_BFs0ll_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0i_BFu0s  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0i_BFu0s) C1{ Fc:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0i_BFu0s");
    static BFs0c_BFs0ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0i_BFu0s(Test_BFs0c_BFs0ll_BFu0i_BFu0s, "BFs0c_BFs0ll_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0ll  {
  signed char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0ll) C1{ Fc:0 FL:0 FL:0}



static void Test_BFs0c_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0ll");
    static BFs0c_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0ll(Test_BFs0c_BFs0ll_BFu0ll, "BFs0c_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0ll_BFs0c  {
  signed char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0ll_BFs0c) C1{ Fc:0 FL:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0ll_BFs0c");
    static BFs0c_BFs0ll_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0ll_BFs0c(Test_BFs0c_BFs0ll_BFu0ll_BFs0c, "BFs0c_BFs0ll_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0ll_BFs0i  {
  signed char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0ll_BFs0i) C1{ Fc:0 FL:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0ll_BFs0i");
    static BFs0c_BFs0ll_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0ll_BFs0i(Test_BFs0c_BFs0ll_BFu0ll_BFs0i, "BFs0c_BFs0ll_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0ll_BFs0ll  {
  signed char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0ll_BFs0ll) C1{ Fc:0 FL:0 FL:0 FL:0}



static void Test_BFs0c_BFs0ll_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0ll_BFs0ll");
    static BFs0c_BFs0ll_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0ll_BFs0ll(Test_BFs0c_BFs0ll_BFu0ll_BFs0ll, "BFs0c_BFs0ll_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0ll_BFs0s  {
  signed char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0ll_BFs0s) C1{ Fc:0 FL:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0ll_BFs0s");
    static BFs0c_BFs0ll_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0ll_BFs0s(Test_BFs0c_BFs0ll_BFu0ll_BFs0s, "BFs0c_BFs0ll_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0ll_BFu0c  {
  signed char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0ll_BFu0c) C1{ Fc:0 FL:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0ll_BFu0c");
    static BFs0c_BFs0ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0ll_BFu0c(Test_BFs0c_BFs0ll_BFu0ll_BFu0c, "BFs0c_BFs0ll_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0ll_BFu0i  {
  signed char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0ll_BFu0i) C1{ Fc:0 FL:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0ll_BFu0i");
    static BFs0c_BFs0ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0ll_BFu0i(Test_BFs0c_BFs0ll_BFu0ll_BFu0i, "BFs0c_BFs0ll_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0ll_BFu0ll  {
  signed char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0ll_BFu0ll) C1{ Fc:0 FL:0 FL:0 FL:0}



static void Test_BFs0c_BFs0ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0ll_BFu0ll");
    static BFs0c_BFs0ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0ll_BFu0ll(Test_BFs0c_BFs0ll_BFu0ll_BFu0ll, "BFs0c_BFs0ll_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0ll_BFu0s  {
  signed char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0ll_BFu0s) C1{ Fc:0 FL:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0ll_BFu0s");
    static BFs0c_BFs0ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0ll_BFu0s(Test_BFs0c_BFs0ll_BFu0ll_BFu0s, "BFs0c_BFs0ll_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0s  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0s) C1{ Fc:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0s");
    static BFs0c_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0s(Test_BFs0c_BFs0ll_BFu0s, "BFs0c_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0s_BFs0c  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0s_BFs0c) C1{ Fc:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0s_BFs0c");
    static BFs0c_BFs0ll_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0s_BFs0c(Test_BFs0c_BFs0ll_BFu0s_BFs0c, "BFs0c_BFs0ll_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0s_BFs0i  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0s_BFs0i) C1{ Fc:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0s_BFs0i");
    static BFs0c_BFs0ll_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0s_BFs0i(Test_BFs0c_BFs0ll_BFu0s_BFs0i, "BFs0c_BFs0ll_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0s_BFs0ll  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0s_BFs0ll) C1{ Fc:0 FL:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0ll_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0s_BFs0ll");
    static BFs0c_BFs0ll_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0s_BFs0ll(Test_BFs0c_BFs0ll_BFu0s_BFs0ll, "BFs0c_BFs0ll_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0s_BFs0s  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0s_BFs0s) C1{ Fc:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0s_BFs0s");
    static BFs0c_BFs0ll_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0s_BFs0s(Test_BFs0c_BFs0ll_BFu0s_BFs0s, "BFs0c_BFs0ll_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0s_BFu0c  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0s_BFu0c) C1{ Fc:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0ll_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0s_BFu0c");
    static BFs0c_BFs0ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0s_BFu0c(Test_BFs0c_BFs0ll_BFu0s_BFu0c, "BFs0c_BFs0ll_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0s_BFu0i  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0s_BFu0i) C1{ Fc:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0ll_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0s_BFu0i");
    static BFs0c_BFs0ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0s_BFu0i(Test_BFs0c_BFs0ll_BFu0s_BFu0i, "BFs0c_BFs0ll_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0s_BFu0ll  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0s_BFu0ll) C1{ Fc:0 FL:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0s_BFu0ll");
    static BFs0c_BFs0ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0s_BFu0ll(Test_BFs0c_BFs0ll_BFu0s_BFu0ll, "BFs0c_BFs0ll_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0ll_BFu0s_BFu0s  {
  signed char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0ll_BFu0s_BFu0s) C1{ Fc:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0ll_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0ll_BFu0s_BFu0s");
    static BFs0c_BFs0ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0ll_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0ll_BFu0s_BFu0s(Test_BFs0c_BFs0ll_BFu0s_BFu0s, "BFs0c_BFs0ll_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s  {
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0s) C1{ Fc:0 Fs:0}



static void Test_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0s");
    static BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s(Test_BFs0c_BFs0s, "BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0c  {
  signed char  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0c) C1{ Fc:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0c");
    static BFs0c_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0c(Test_BFs0c_BFs0s_BFs0c, "BFs0c_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0c_BFs0c  {
  signed char  :0;
  signed short  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0c_BFs0c) C1{ Fc:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0s_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0c_BFs0c");
    static BFs0c_BFs0s_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0c_BFs0c(Test_BFs0c_BFs0s_BFs0c_BFs0c, "BFs0c_BFs0s_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0c_BFs0i  {
  signed char  :0;
  signed short  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0c_BFs0i) C1{ Fc:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0s_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0c_BFs0i");
    static BFs0c_BFs0s_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0c_BFs0i(Test_BFs0c_BFs0s_BFs0c_BFs0i, "BFs0c_BFs0s_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0c_BFs0ll  {
  signed char  :0;
  signed short  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0c_BFs0ll) C1{ Fc:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0s_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0c_BFs0ll");
    static BFs0c_BFs0s_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0c_BFs0ll(Test_BFs0c_BFs0s_BFs0c_BFs0ll, "BFs0c_BFs0s_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0c_BFs0s  {
  signed char  :0;
  signed short  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0c_BFs0s) C1{ Fc:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0s_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0c_BFs0s");
    static BFs0c_BFs0s_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0c_BFs0s(Test_BFs0c_BFs0s_BFs0c_BFs0s, "BFs0c_BFs0s_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0c_BFu0c  {
  signed char  :0;
  signed short  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0c_BFu0c) C1{ Fc:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0s_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0c_BFu0c");
    static BFs0c_BFs0s_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0c_BFu0c(Test_BFs0c_BFs0s_BFs0c_BFu0c, "BFs0c_BFs0s_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0c_BFu0i  {
  signed char  :0;
  signed short  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0c_BFu0i) C1{ Fc:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0s_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0c_BFu0i");
    static BFs0c_BFs0s_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0c_BFu0i(Test_BFs0c_BFs0s_BFs0c_BFu0i, "BFs0c_BFs0s_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0c_BFu0ll  {
  signed char  :0;
  signed short  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0c_BFu0ll) C1{ Fc:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0s_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0c_BFu0ll");
    static BFs0c_BFs0s_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0c_BFu0ll(Test_BFs0c_BFs0s_BFs0c_BFu0ll, "BFs0c_BFs0s_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0c_BFu0s  {
  signed char  :0;
  signed short  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0c_BFu0s) C1{ Fc:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0s_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0c_BFu0s");
    static BFs0c_BFs0s_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0c_BFu0s(Test_BFs0c_BFs0s_BFs0c_BFu0s, "BFs0c_BFs0s_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0i  {
  signed char  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0i) C1{ Fc:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0i");
    static BFs0c_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0i(Test_BFs0c_BFs0s_BFs0i, "BFs0c_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0i_BFs0c  {
  signed char  :0;
  signed short  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0i_BFs0c) C1{ Fc:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0s_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0i_BFs0c");
    static BFs0c_BFs0s_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0i_BFs0c(Test_BFs0c_BFs0s_BFs0i_BFs0c, "BFs0c_BFs0s_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0i_BFs0i  {
  signed char  :0;
  signed short  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0i_BFs0i) C1{ Fc:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0s_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0i_BFs0i");
    static BFs0c_BFs0s_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0i_BFs0i(Test_BFs0c_BFs0s_BFs0i_BFs0i, "BFs0c_BFs0s_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0i_BFs0ll  {
  signed char  :0;
  signed short  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0i_BFs0ll) C1{ Fc:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0s_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0i_BFs0ll");
    static BFs0c_BFs0s_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0i_BFs0ll(Test_BFs0c_BFs0s_BFs0i_BFs0ll, "BFs0c_BFs0s_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0i_BFs0s  {
  signed char  :0;
  signed short  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0i_BFs0s) C1{ Fc:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0s_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0i_BFs0s");
    static BFs0c_BFs0s_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0i_BFs0s(Test_BFs0c_BFs0s_BFs0i_BFs0s, "BFs0c_BFs0s_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0i_BFu0c  {
  signed char  :0;
  signed short  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0i_BFu0c) C1{ Fc:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0s_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0i_BFu0c");
    static BFs0c_BFs0s_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0i_BFu0c(Test_BFs0c_BFs0s_BFs0i_BFu0c, "BFs0c_BFs0s_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0i_BFu0i  {
  signed char  :0;
  signed short  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0i_BFu0i) C1{ Fc:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0s_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0i_BFu0i");
    static BFs0c_BFs0s_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0i_BFu0i(Test_BFs0c_BFs0s_BFs0i_BFu0i, "BFs0c_BFs0s_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0i_BFu0ll  {
  signed char  :0;
  signed short  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0i_BFu0ll) C1{ Fc:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0s_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0i_BFu0ll");
    static BFs0c_BFs0s_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0i_BFu0ll(Test_BFs0c_BFs0s_BFs0i_BFu0ll, "BFs0c_BFs0s_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0i_BFu0s  {
  signed char  :0;
  signed short  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0i_BFu0s) C1{ Fc:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0s_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0i_BFu0s");
    static BFs0c_BFs0s_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0i_BFu0s(Test_BFs0c_BFs0s_BFs0i_BFu0s, "BFs0c_BFs0s_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0ll  {
  signed char  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0ll) C1{ Fc:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0ll");
    static BFs0c_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0ll(Test_BFs0c_BFs0s_BFs0ll, "BFs0c_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0ll_BFs0c  {
  signed char  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0ll_BFs0c) C1{ Fc:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0s_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0ll_BFs0c");
    static BFs0c_BFs0s_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0ll_BFs0c(Test_BFs0c_BFs0s_BFs0ll_BFs0c, "BFs0c_BFs0s_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0ll_BFs0i  {
  signed char  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0ll_BFs0i) C1{ Fc:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0s_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0ll_BFs0i");
    static BFs0c_BFs0s_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0ll_BFs0i(Test_BFs0c_BFs0s_BFs0ll_BFs0i, "BFs0c_BFs0s_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0ll_BFs0ll  {
  signed char  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0ll_BFs0ll) C1{ Fc:0 Fs:0 FL:0 FL:0}



static void Test_BFs0c_BFs0s_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0ll_BFs0ll");
    static BFs0c_BFs0s_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0ll_BFs0ll(Test_BFs0c_BFs0s_BFs0ll_BFs0ll, "BFs0c_BFs0s_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0ll_BFs0s  {
  signed char  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0ll_BFs0s) C1{ Fc:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0s_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0ll_BFs0s");
    static BFs0c_BFs0s_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0ll_BFs0s(Test_BFs0c_BFs0s_BFs0ll_BFs0s, "BFs0c_BFs0s_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0ll_BFu0c  {
  signed char  :0;
  signed short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0ll_BFu0c) C1{ Fc:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0s_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0ll_BFu0c");
    static BFs0c_BFs0s_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0ll_BFu0c(Test_BFs0c_BFs0s_BFs0ll_BFu0c, "BFs0c_BFs0s_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0ll_BFu0i  {
  signed char  :0;
  signed short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0ll_BFu0i) C1{ Fc:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0s_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0ll_BFu0i");
    static BFs0c_BFs0s_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0ll_BFu0i(Test_BFs0c_BFs0s_BFs0ll_BFu0i, "BFs0c_BFs0s_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0ll_BFu0ll  {
  signed char  :0;
  signed short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0ll_BFu0ll) C1{ Fc:0 Fs:0 FL:0 FL:0}



static void Test_BFs0c_BFs0s_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0ll_BFu0ll");
    static BFs0c_BFs0s_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0ll_BFu0ll(Test_BFs0c_BFs0s_BFs0ll_BFu0ll, "BFs0c_BFs0s_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0ll_BFu0s  {
  signed char  :0;
  signed short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0ll_BFu0s) C1{ Fc:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0s_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0ll_BFu0s");
    static BFs0c_BFs0s_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0ll_BFu0s(Test_BFs0c_BFs0s_BFs0ll_BFu0s, "BFs0c_BFs0s_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0s  {
  signed char  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0s) C1{ Fc:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0s");
    static BFs0c_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0s(Test_BFs0c_BFs0s_BFs0s, "BFs0c_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0s_BFs0c  {
  signed char  :0;
  signed short  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0s_BFs0c) C1{ Fc:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0s_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0s_BFs0c");
    static BFs0c_BFs0s_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0s_BFs0c(Test_BFs0c_BFs0s_BFs0s_BFs0c, "BFs0c_BFs0s_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0s_BFs0i  {
  signed char  :0;
  signed short  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0s_BFs0i) C1{ Fc:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0s_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0s_BFs0i");
    static BFs0c_BFs0s_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0s_BFs0i(Test_BFs0c_BFs0s_BFs0s_BFs0i, "BFs0c_BFs0s_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0s_BFs0ll  {
  signed char  :0;
  signed short  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0s_BFs0ll) C1{ Fc:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0s_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0s_BFs0ll");
    static BFs0c_BFs0s_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0s_BFs0ll(Test_BFs0c_BFs0s_BFs0s_BFs0ll, "BFs0c_BFs0s_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0s_BFs0s  {
  signed char  :0;
  signed short  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0s_BFs0s) C1{ Fc:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0s_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0s_BFs0s");
    static BFs0c_BFs0s_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0s_BFs0s(Test_BFs0c_BFs0s_BFs0s_BFs0s, "BFs0c_BFs0s_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0s_BFu0c  {
  signed char  :0;
  signed short  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0s_BFu0c) C1{ Fc:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0s_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0s_BFu0c");
    static BFs0c_BFs0s_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0s_BFu0c(Test_BFs0c_BFs0s_BFs0s_BFu0c, "BFs0c_BFs0s_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0s_BFu0i  {
  signed char  :0;
  signed short  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0s_BFu0i) C1{ Fc:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0s_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0s_BFu0i");
    static BFs0c_BFs0s_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0s_BFu0i(Test_BFs0c_BFs0s_BFs0s_BFu0i, "BFs0c_BFs0s_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0s_BFu0ll  {
  signed char  :0;
  signed short  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0s_BFu0ll) C1{ Fc:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0s_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0s_BFu0ll");
    static BFs0c_BFs0s_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0s_BFu0ll(Test_BFs0c_BFs0s_BFs0s_BFu0ll, "BFs0c_BFs0s_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFs0s_BFu0s  {
  signed char  :0;
  signed short  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0s_BFs0s_BFu0s) C1{ Fc:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0s_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFs0s_BFu0s");
    static BFs0c_BFs0s_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFs0s_BFu0s(Test_BFs0c_BFs0s_BFs0s_BFu0s, "BFs0c_BFs0s_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0c  {
  signed char  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0c) C1{ Fc:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0c");
    static BFs0c_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0c(Test_BFs0c_BFs0s_BFu0c, "BFs0c_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0c_BFs0c  {
  signed char  :0;
  signed short  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0c_BFs0c) C1{ Fc:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0s_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0c_BFs0c");
    static BFs0c_BFs0s_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0c_BFs0c(Test_BFs0c_BFs0s_BFu0c_BFs0c, "BFs0c_BFs0s_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0c_BFs0i  {
  signed char  :0;
  signed short  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0c_BFs0i) C1{ Fc:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0s_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0c_BFs0i");
    static BFs0c_BFs0s_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0c_BFs0i(Test_BFs0c_BFs0s_BFu0c_BFs0i, "BFs0c_BFs0s_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0c_BFs0ll  {
  signed char  :0;
  signed short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0c_BFs0ll) C1{ Fc:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0s_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0c_BFs0ll");
    static BFs0c_BFs0s_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0c_BFs0ll(Test_BFs0c_BFs0s_BFu0c_BFs0ll, "BFs0c_BFs0s_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0c_BFs0s  {
  signed char  :0;
  signed short  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0c_BFs0s) C1{ Fc:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0s_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0c_BFs0s");
    static BFs0c_BFs0s_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0c_BFs0s(Test_BFs0c_BFs0s_BFu0c_BFs0s, "BFs0c_BFs0s_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0c_BFu0c  {
  signed char  :0;
  signed short  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0c_BFu0c) C1{ Fc:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0c_BFs0s_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0c_BFu0c");
    static BFs0c_BFs0s_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0c_BFu0c(Test_BFs0c_BFs0s_BFu0c_BFu0c, "BFs0c_BFs0s_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0c_BFu0i  {
  signed char  :0;
  signed short  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0c_BFu0i) C1{ Fc:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0c_BFs0s_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0c_BFu0i");
    static BFs0c_BFs0s_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0c_BFu0i(Test_BFs0c_BFs0s_BFu0c_BFu0i, "BFs0c_BFs0s_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0c_BFu0ll  {
  signed char  :0;
  signed short  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0c_BFu0ll) C1{ Fc:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0c_BFs0s_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0c_BFu0ll");
    static BFs0c_BFs0s_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0c_BFu0ll(Test_BFs0c_BFs0s_BFu0c_BFu0ll, "BFs0c_BFs0s_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0c_BFu0s  {
  signed char  :0;
  signed short  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0c_BFu0s) C1{ Fc:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0c_BFs0s_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0c_BFu0s");
    static BFs0c_BFs0s_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0c_BFu0s(Test_BFs0c_BFs0s_BFu0c_BFu0s, "BFs0c_BFs0s_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0i  {
  signed char  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0i) C1{ Fc:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0i");
    static BFs0c_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0i(Test_BFs0c_BFs0s_BFu0i, "BFs0c_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0i_BFs0c  {
  signed char  :0;
  signed short  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0i_BFs0c) C1{ Fc:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0s_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0i_BFs0c");
    static BFs0c_BFs0s_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0i_BFs0c(Test_BFs0c_BFs0s_BFu0i_BFs0c, "BFs0c_BFs0s_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0i_BFs0i  {
  signed char  :0;
  signed short  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0i_BFs0i) C1{ Fc:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0s_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0i_BFs0i");
    static BFs0c_BFs0s_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0i_BFs0i(Test_BFs0c_BFs0s_BFu0i_BFs0i, "BFs0c_BFs0s_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0i_BFs0ll  {
  signed char  :0;
  signed short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0i_BFs0ll) C1{ Fc:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0s_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0i_BFs0ll");
    static BFs0c_BFs0s_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0i_BFs0ll(Test_BFs0c_BFs0s_BFu0i_BFs0ll, "BFs0c_BFs0s_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0i_BFs0s  {
  signed char  :0;
  signed short  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0i_BFs0s) C1{ Fc:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0s_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0i_BFs0s");
    static BFs0c_BFs0s_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0i_BFs0s(Test_BFs0c_BFs0s_BFu0i_BFs0s, "BFs0c_BFs0s_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0i_BFu0c  {
  signed char  :0;
  signed short  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0i_BFu0c) C1{ Fc:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0c_BFs0s_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0i_BFu0c");
    static BFs0c_BFs0s_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0i_BFu0c(Test_BFs0c_BFs0s_BFu0i_BFu0c, "BFs0c_BFs0s_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0i_BFu0i  {
  signed char  :0;
  signed short  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0i_BFu0i) C1{ Fc:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0c_BFs0s_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0i_BFu0i");
    static BFs0c_BFs0s_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0i_BFu0i(Test_BFs0c_BFs0s_BFu0i_BFu0i, "BFs0c_BFs0s_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0i_BFu0ll  {
  signed char  :0;
  signed short  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0i_BFu0ll) C1{ Fc:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0c_BFs0s_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0i_BFu0ll");
    static BFs0c_BFs0s_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0i_BFu0ll(Test_BFs0c_BFs0s_BFu0i_BFu0ll, "BFs0c_BFs0s_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0i_BFu0s  {
  signed char  :0;
  signed short  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0i_BFu0s) C1{ Fc:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0c_BFs0s_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0i_BFu0s");
    static BFs0c_BFs0s_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0i_BFu0s(Test_BFs0c_BFs0s_BFu0i_BFu0s, "BFs0c_BFs0s_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0ll  {
  signed char  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0ll) C1{ Fc:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0ll");
    static BFs0c_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0ll(Test_BFs0c_BFs0s_BFu0ll, "BFs0c_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0ll_BFs0c  {
  signed char  :0;
  signed short  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0ll_BFs0c) C1{ Fc:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0s_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0ll_BFs0c");
    static BFs0c_BFs0s_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0ll_BFs0c(Test_BFs0c_BFs0s_BFu0ll_BFs0c, "BFs0c_BFs0s_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0ll_BFs0i  {
  signed char  :0;
  signed short  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0ll_BFs0i) C1{ Fc:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0s_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0ll_BFs0i");
    static BFs0c_BFs0s_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0ll_BFs0i(Test_BFs0c_BFs0s_BFu0ll_BFs0i, "BFs0c_BFs0s_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0ll_BFs0ll  {
  signed char  :0;
  signed short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0ll_BFs0ll) C1{ Fc:0 Fs:0 FL:0 FL:0}



static void Test_BFs0c_BFs0s_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0ll_BFs0ll");
    static BFs0c_BFs0s_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0ll_BFs0ll(Test_BFs0c_BFs0s_BFu0ll_BFs0ll, "BFs0c_BFs0s_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0ll_BFs0s  {
  signed char  :0;
  signed short  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0ll_BFs0s) C1{ Fc:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0s_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0ll_BFs0s");
    static BFs0c_BFs0s_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0ll_BFs0s(Test_BFs0c_BFs0s_BFu0ll_BFs0s, "BFs0c_BFs0s_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0ll_BFu0c  {
  signed char  :0;
  signed short  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0ll_BFu0c) C1{ Fc:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0c_BFs0s_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0ll_BFu0c");
    static BFs0c_BFs0s_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0ll_BFu0c(Test_BFs0c_BFs0s_BFu0ll_BFu0c, "BFs0c_BFs0s_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0ll_BFu0i  {
  signed char  :0;
  signed short  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0ll_BFu0i) C1{ Fc:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0c_BFs0s_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0ll_BFu0i");
    static BFs0c_BFs0s_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0ll_BFu0i(Test_BFs0c_BFs0s_BFu0ll_BFu0i, "BFs0c_BFs0s_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0ll_BFu0ll  {
  signed char  :0;
  signed short  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0ll_BFu0ll) C1{ Fc:0 Fs:0 FL:0 FL:0}



static void Test_BFs0c_BFs0s_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0ll_BFu0ll");
    static BFs0c_BFs0s_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0ll_BFu0ll(Test_BFs0c_BFs0s_BFu0ll_BFu0ll, "BFs0c_BFs0s_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0ll_BFu0s  {
  signed char  :0;
  signed short  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0ll_BFu0s) C1{ Fc:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0c_BFs0s_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0ll_BFu0s");
    static BFs0c_BFs0s_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0ll_BFu0s(Test_BFs0c_BFs0s_BFu0ll_BFu0s, "BFs0c_BFs0s_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0s  {
  signed char  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0s) C1{ Fc:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0s");
    static BFs0c_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0s(Test_BFs0c_BFs0s_BFu0s, "BFs0c_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0s_BFs0c  {
  signed char  :0;
  signed short  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0s_BFs0c) C1{ Fc:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0s_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0s_BFs0c");
    static BFs0c_BFs0s_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0s_BFs0c(Test_BFs0c_BFs0s_BFu0s_BFs0c, "BFs0c_BFs0s_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0s_BFs0i  {
  signed char  :0;
  signed short  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0s_BFs0i) C1{ Fc:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0s_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0s_BFs0i");
    static BFs0c_BFs0s_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0s_BFs0i(Test_BFs0c_BFs0s_BFu0s_BFs0i, "BFs0c_BFs0s_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0s_BFs0ll  {
  signed char  :0;
  signed short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0s_BFs0ll) C1{ Fc:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0s_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0s_BFs0ll");
    static BFs0c_BFs0s_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0s_BFs0ll(Test_BFs0c_BFs0s_BFu0s_BFs0ll, "BFs0c_BFs0s_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0s_BFs0s  {
  signed char  :0;
  signed short  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0s_BFs0s) C1{ Fc:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0s_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0s_BFs0s");
    static BFs0c_BFs0s_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0s_BFs0s(Test_BFs0c_BFs0s_BFu0s_BFs0s, "BFs0c_BFs0s_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0s_BFu0c  {
  signed char  :0;
  signed short  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0s_BFu0c) C1{ Fc:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0c_BFs0s_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0s_BFu0c");
    static BFs0c_BFs0s_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0s_BFu0c(Test_BFs0c_BFs0s_BFu0s_BFu0c, "BFs0c_BFs0s_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0s_BFu0i  {
  signed char  :0;
  signed short  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0s_BFu0i) C1{ Fc:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0c_BFs0s_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0s_BFu0i");
    static BFs0c_BFs0s_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0s_BFu0i(Test_BFs0c_BFs0s_BFu0s_BFu0i, "BFs0c_BFs0s_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0s_BFu0ll  {
  signed char  :0;
  signed short  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0s_BFu0ll) C1{ Fc:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0c_BFs0s_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0s_BFu0ll");
    static BFs0c_BFs0s_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0s_BFu0ll(Test_BFs0c_BFs0s_BFu0s_BFu0ll, "BFs0c_BFs0s_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFs0s_BFu0s_BFu0s  {
  signed char  :0;
  signed short  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFs0s_BFu0s_BFu0s) C1{ Fc:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0c_BFs0s_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFs0s_BFu0s_BFu0s");
    static BFs0c_BFs0s_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFs0s_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFs0s_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFs0s_BFu0s_BFu0s(Test_BFs0c_BFs0s_BFu0s_BFu0s, "BFs0c_BFs0s_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c  {
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0c) C1{ Fc:0 Fc:0}



static void Test_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0c");
    static BFs0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFs0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c(Test_BFs0c_BFu0c, "BFs0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0c  {
  signed char  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0c) C1{ Fc:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0c");
    static BFs0c_BFu0c_BFs0c lv;
    check2(sizeof(lv), 1, "sizeof(BFs0c_BFu0c_BFs0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFs0c_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0c(Test_BFs0c_BFu0c_BFs0c, "BFs0c_BFu0c_BFs0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0c_BFs0c  {
  signed char  :0;
  unsigned char  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0c_BFs0c) C1{ Fc:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0c_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0c_BFs0c");
    static BFs0c_BFu0c_BFs0c_BFs0c lv;
    check2(sizeof(lv), 1, "sizeof(BFs0c_BFu0c_BFs0c_BFs0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFs0c_BFu0c_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0c_BFs0c(Test_BFs0c_BFu0c_BFs0c_BFs0c, "BFs0c_BFu0c_BFs0c_BFs0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0c_BFs0i  {
  signed char  :0;
  unsigned char  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0c_BFs0i) C1{ Fc:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0c_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0c_BFs0i");
    static BFs0c_BFu0c_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0c_BFs0i(Test_BFs0c_BFu0c_BFs0c_BFs0i, "BFs0c_BFu0c_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0c_BFs0ll  {
  signed char  :0;
  unsigned char  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0c_BFs0ll) C1{ Fc:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0c_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0c_BFs0ll");
    static BFs0c_BFu0c_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0c_BFs0ll(Test_BFs0c_BFu0c_BFs0c_BFs0ll, "BFs0c_BFu0c_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0c_BFs0s  {
  signed char  :0;
  unsigned char  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0c_BFs0s) C1{ Fc:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0c_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0c_BFs0s");
    static BFs0c_BFu0c_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0c_BFs0s(Test_BFs0c_BFu0c_BFs0c_BFs0s, "BFs0c_BFu0c_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0c_BFu0c  {
  signed char  :0;
  unsigned char  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0c_BFu0c) C1{ Fc:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0c_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0c_BFu0c");
    static BFs0c_BFu0c_BFs0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFs0c_BFu0c_BFs0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFs0c_BFu0c_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0c_BFu0c(Test_BFs0c_BFu0c_BFs0c_BFu0c, "BFs0c_BFu0c_BFs0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0c_BFu0i  {
  signed char  :0;
  unsigned char  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0c_BFu0i) C1{ Fc:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0c_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0c_BFu0i");
    static BFs0c_BFu0c_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0c_BFu0i(Test_BFs0c_BFu0c_BFs0c_BFu0i, "BFs0c_BFu0c_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0c_BFu0ll  {
  signed char  :0;
  unsigned char  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0c_BFu0ll) C1{ Fc:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0c_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0c_BFu0ll");
    static BFs0c_BFu0c_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0c_BFu0ll(Test_BFs0c_BFu0c_BFs0c_BFu0ll, "BFs0c_BFu0c_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0c_BFu0s  {
  signed char  :0;
  unsigned char  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0c_BFu0s) C1{ Fc:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0c_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0c_BFu0s");
    static BFs0c_BFu0c_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0c_BFu0s(Test_BFs0c_BFu0c_BFs0c_BFu0s, "BFs0c_BFu0c_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0i  {
  signed char  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0i) C1{ Fc:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0i");
    static BFs0c_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0i(Test_BFs0c_BFu0c_BFs0i, "BFs0c_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0i_BFs0c  {
  signed char  :0;
  unsigned char  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0i_BFs0c) C1{ Fc:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0c_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0i_BFs0c");
    static BFs0c_BFu0c_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0i_BFs0c(Test_BFs0c_BFu0c_BFs0i_BFs0c, "BFs0c_BFu0c_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0i_BFs0i  {
  signed char  :0;
  unsigned char  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0i_BFs0i) C1{ Fc:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0c_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0i_BFs0i");
    static BFs0c_BFu0c_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0i_BFs0i(Test_BFs0c_BFu0c_BFs0i_BFs0i, "BFs0c_BFu0c_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0i_BFs0ll  {
  signed char  :0;
  unsigned char  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0i_BFs0ll) C1{ Fc:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0c_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0i_BFs0ll");
    static BFs0c_BFu0c_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0i_BFs0ll(Test_BFs0c_BFu0c_BFs0i_BFs0ll, "BFs0c_BFu0c_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0i_BFs0s  {
  signed char  :0;
  unsigned char  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0i_BFs0s) C1{ Fc:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0c_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0i_BFs0s");
    static BFs0c_BFu0c_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0i_BFs0s(Test_BFs0c_BFu0c_BFs0i_BFs0s, "BFs0c_BFu0c_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0i_BFu0c  {
  signed char  :0;
  unsigned char  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0i_BFu0c) C1{ Fc:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0c_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0i_BFu0c");
    static BFs0c_BFu0c_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0i_BFu0c(Test_BFs0c_BFu0c_BFs0i_BFu0c, "BFs0c_BFu0c_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0i_BFu0i  {
  signed char  :0;
  unsigned char  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0i_BFu0i) C1{ Fc:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0c_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0i_BFu0i");
    static BFs0c_BFu0c_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0i_BFu0i(Test_BFs0c_BFu0c_BFs0i_BFu0i, "BFs0c_BFu0c_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0i_BFu0ll  {
  signed char  :0;
  unsigned char  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0i_BFu0ll) C1{ Fc:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0c_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0i_BFu0ll");
    static BFs0c_BFu0c_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0i_BFu0ll(Test_BFs0c_BFu0c_BFs0i_BFu0ll, "BFs0c_BFu0c_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0i_BFu0s  {
  signed char  :0;
  unsigned char  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0i_BFu0s) C1{ Fc:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0c_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0i_BFu0s");
    static BFs0c_BFu0c_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0i_BFu0s(Test_BFs0c_BFu0c_BFs0i_BFu0s, "BFs0c_BFu0c_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0ll  {
  signed char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0ll) C1{ Fc:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0ll");
    static BFs0c_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0ll(Test_BFs0c_BFu0c_BFs0ll, "BFs0c_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0ll_BFs0c  {
  signed char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0ll_BFs0c) C1{ Fc:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0c_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0ll_BFs0c");
    static BFs0c_BFu0c_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0ll_BFs0c(Test_BFs0c_BFu0c_BFs0ll_BFs0c, "BFs0c_BFu0c_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0ll_BFs0i  {
  signed char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0ll_BFs0i) C1{ Fc:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0c_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0ll_BFs0i");
    static BFs0c_BFu0c_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0ll_BFs0i(Test_BFs0c_BFu0c_BFs0ll_BFs0i, "BFs0c_BFu0c_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0ll_BFs0ll  {
  signed char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0ll_BFs0ll) C1{ Fc:0 Fc:0 FL:0 FL:0}



static void Test_BFs0c_BFu0c_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0ll_BFs0ll");
    static BFs0c_BFu0c_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0ll_BFs0ll(Test_BFs0c_BFu0c_BFs0ll_BFs0ll, "BFs0c_BFu0c_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0ll_BFs0s  {
  signed char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0ll_BFs0s) C1{ Fc:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0c_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0ll_BFs0s");
    static BFs0c_BFu0c_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0ll_BFs0s(Test_BFs0c_BFu0c_BFs0ll_BFs0s, "BFs0c_BFu0c_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0ll_BFu0c  {
  signed char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0ll_BFu0c) C1{ Fc:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0c_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0ll_BFu0c");
    static BFs0c_BFu0c_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0ll_BFu0c(Test_BFs0c_BFu0c_BFs0ll_BFu0c, "BFs0c_BFu0c_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0ll_BFu0i  {
  signed char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0ll_BFu0i) C1{ Fc:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0c_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0ll_BFu0i");
    static BFs0c_BFu0c_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0ll_BFu0i(Test_BFs0c_BFu0c_BFs0ll_BFu0i, "BFs0c_BFu0c_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0ll_BFu0ll  {
  signed char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0ll_BFu0ll) C1{ Fc:0 Fc:0 FL:0 FL:0}



static void Test_BFs0c_BFu0c_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0ll_BFu0ll");
    static BFs0c_BFu0c_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0ll_BFu0ll(Test_BFs0c_BFu0c_BFs0ll_BFu0ll, "BFs0c_BFu0c_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0ll_BFu0s  {
  signed char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0ll_BFu0s) C1{ Fc:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0c_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0ll_BFu0s");
    static BFs0c_BFu0c_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0ll_BFu0s(Test_BFs0c_BFu0c_BFs0ll_BFu0s, "BFs0c_BFu0c_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0s  {
  signed char  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0s) C1{ Fc:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0s");
    static BFs0c_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0s(Test_BFs0c_BFu0c_BFs0s, "BFs0c_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0s_BFs0c  {
  signed char  :0;
  unsigned char  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0s_BFs0c) C1{ Fc:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0c_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0s_BFs0c");
    static BFs0c_BFu0c_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0s_BFs0c(Test_BFs0c_BFu0c_BFs0s_BFs0c, "BFs0c_BFu0c_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0s_BFs0i  {
  signed char  :0;
  unsigned char  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0s_BFs0i) C1{ Fc:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0c_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0s_BFs0i");
    static BFs0c_BFu0c_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0s_BFs0i(Test_BFs0c_BFu0c_BFs0s_BFs0i, "BFs0c_BFu0c_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0s_BFs0ll  {
  signed char  :0;
  unsigned char  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0s_BFs0ll) C1{ Fc:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0c_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0s_BFs0ll");
    static BFs0c_BFu0c_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0s_BFs0ll(Test_BFs0c_BFu0c_BFs0s_BFs0ll, "BFs0c_BFu0c_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0s_BFs0s  {
  signed char  :0;
  unsigned char  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0s_BFs0s) C1{ Fc:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0c_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0s_BFs0s");
    static BFs0c_BFu0c_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0s_BFs0s(Test_BFs0c_BFu0c_BFs0s_BFs0s, "BFs0c_BFu0c_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0s_BFu0c  {
  signed char  :0;
  unsigned char  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0s_BFu0c) C1{ Fc:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0c_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0s_BFu0c");
    static BFs0c_BFu0c_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0s_BFu0c(Test_BFs0c_BFu0c_BFs0s_BFu0c, "BFs0c_BFu0c_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0s_BFu0i  {
  signed char  :0;
  unsigned char  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0s_BFu0i) C1{ Fc:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0c_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0s_BFu0i");
    static BFs0c_BFu0c_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0s_BFu0i(Test_BFs0c_BFu0c_BFs0s_BFu0i, "BFs0c_BFu0c_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0s_BFu0ll  {
  signed char  :0;
  unsigned char  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0s_BFu0ll) C1{ Fc:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0c_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0s_BFu0ll");
    static BFs0c_BFu0c_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0s_BFu0ll(Test_BFs0c_BFu0c_BFs0s_BFu0ll, "BFs0c_BFu0c_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFs0s_BFu0s  {
  signed char  :0;
  unsigned char  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0c_BFs0s_BFu0s) C1{ Fc:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0c_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFs0s_BFu0s");
    static BFs0c_BFu0c_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFs0s_BFu0s(Test_BFs0c_BFu0c_BFs0s_BFu0s, "BFs0c_BFu0c_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0c  {
  signed char  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0c) C1{ Fc:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0c");
    static BFs0c_BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFs0c_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFs0c_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0c(Test_BFs0c_BFu0c_BFu0c, "BFs0c_BFu0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0c_BFs0c  {
  signed char  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0c_BFs0c) C1{ Fc:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0c_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0c_BFs0c");
    static BFs0c_BFu0c_BFu0c_BFs0c lv;
    check2(sizeof(lv), 1, "sizeof(BFs0c_BFu0c_BFu0c_BFs0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFs0c_BFu0c_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0c_BFs0c(Test_BFs0c_BFu0c_BFu0c_BFs0c, "BFs0c_BFu0c_BFu0c_BFs0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0c_BFs0i  {
  signed char  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0c_BFs0i) C1{ Fc:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0c_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0c_BFs0i");
    static BFs0c_BFu0c_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0c_BFs0i(Test_BFs0c_BFu0c_BFu0c_BFs0i, "BFs0c_BFu0c_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0c_BFs0ll  {
  signed char  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0c_BFs0ll) C1{ Fc:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0c_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0c_BFs0ll");
    static BFs0c_BFu0c_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0c_BFs0ll(Test_BFs0c_BFu0c_BFu0c_BFs0ll, "BFs0c_BFu0c_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0c_BFs0s  {
  signed char  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0c_BFs0s) C1{ Fc:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0c_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0c_BFs0s");
    static BFs0c_BFu0c_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0c_BFs0s(Test_BFs0c_BFu0c_BFu0c_BFs0s, "BFs0c_BFu0c_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0c_BFu0c  {
  signed char  :0;
  unsigned char  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0c_BFu0c) C1{ Fc:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0c_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0c_BFu0c");
    static BFs0c_BFu0c_BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFs0c_BFu0c_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFs0c_BFu0c_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0c_BFu0c(Test_BFs0c_BFu0c_BFu0c_BFu0c, "BFs0c_BFu0c_BFu0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0c_BFu0i  {
  signed char  :0;
  unsigned char  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0c_BFu0i) C1{ Fc:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0c_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0c_BFu0i");
    static BFs0c_BFu0c_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0c_BFu0i(Test_BFs0c_BFu0c_BFu0c_BFu0i, "BFs0c_BFu0c_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0c_BFu0ll  {
  signed char  :0;
  unsigned char  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0c_BFu0ll) C1{ Fc:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0c_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0c_BFu0ll");
    static BFs0c_BFu0c_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0c_BFu0ll(Test_BFs0c_BFu0c_BFu0c_BFu0ll, "BFs0c_BFu0c_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0c_BFu0s  {
  signed char  :0;
  unsigned char  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0c_BFu0s) C1{ Fc:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0c_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0c_BFu0s");
    static BFs0c_BFu0c_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0c_BFu0s(Test_BFs0c_BFu0c_BFu0c_BFu0s, "BFs0c_BFu0c_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0i  {
  signed char  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0i) C1{ Fc:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0i");
    static BFs0c_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0i(Test_BFs0c_BFu0c_BFu0i, "BFs0c_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0i_BFs0c  {
  signed char  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0i_BFs0c) C1{ Fc:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0c_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0i_BFs0c");
    static BFs0c_BFu0c_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0i_BFs0c(Test_BFs0c_BFu0c_BFu0i_BFs0c, "BFs0c_BFu0c_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0i_BFs0i  {
  signed char  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0i_BFs0i) C1{ Fc:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0c_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0i_BFs0i");
    static BFs0c_BFu0c_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0i_BFs0i(Test_BFs0c_BFu0c_BFu0i_BFs0i, "BFs0c_BFu0c_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0i_BFs0ll  {
  signed char  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0i_BFs0ll) C1{ Fc:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0c_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0i_BFs0ll");
    static BFs0c_BFu0c_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0i_BFs0ll(Test_BFs0c_BFu0c_BFu0i_BFs0ll, "BFs0c_BFu0c_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0i_BFs0s  {
  signed char  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0i_BFs0s) C1{ Fc:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0c_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0i_BFs0s");
    static BFs0c_BFu0c_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0i_BFs0s(Test_BFs0c_BFu0c_BFu0i_BFs0s, "BFs0c_BFu0c_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0i_BFu0c  {
  signed char  :0;
  unsigned char  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0i_BFu0c) C1{ Fc:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0c_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0i_BFu0c");
    static BFs0c_BFu0c_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0i_BFu0c(Test_BFs0c_BFu0c_BFu0i_BFu0c, "BFs0c_BFu0c_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0i_BFu0i  {
  signed char  :0;
  unsigned char  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0i_BFu0i) C1{ Fc:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0c_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0i_BFu0i");
    static BFs0c_BFu0c_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0i_BFu0i(Test_BFs0c_BFu0c_BFu0i_BFu0i, "BFs0c_BFu0c_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0i_BFu0ll  {
  signed char  :0;
  unsigned char  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0i_BFu0ll) C1{ Fc:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0c_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0i_BFu0ll");
    static BFs0c_BFu0c_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0i_BFu0ll(Test_BFs0c_BFu0c_BFu0i_BFu0ll, "BFs0c_BFu0c_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0i_BFu0s  {
  signed char  :0;
  unsigned char  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0i_BFu0s) C1{ Fc:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0c_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0i_BFu0s");
    static BFs0c_BFu0c_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0i_BFu0s(Test_BFs0c_BFu0c_BFu0i_BFu0s, "BFs0c_BFu0c_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0ll  {
  signed char  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0ll) C1{ Fc:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0ll");
    static BFs0c_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0ll(Test_BFs0c_BFu0c_BFu0ll, "BFs0c_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0ll_BFs0c  {
  signed char  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0ll_BFs0c) C1{ Fc:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0c_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0ll_BFs0c");
    static BFs0c_BFu0c_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0ll_BFs0c(Test_BFs0c_BFu0c_BFu0ll_BFs0c, "BFs0c_BFu0c_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0ll_BFs0i  {
  signed char  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0ll_BFs0i) C1{ Fc:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0c_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0ll_BFs0i");
    static BFs0c_BFu0c_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0ll_BFs0i(Test_BFs0c_BFu0c_BFu0ll_BFs0i, "BFs0c_BFu0c_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0ll_BFs0ll  {
  signed char  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0ll_BFs0ll) C1{ Fc:0 Fc:0 FL:0 FL:0}



static void Test_BFs0c_BFu0c_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0ll_BFs0ll");
    static BFs0c_BFu0c_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0ll_BFs0ll(Test_BFs0c_BFu0c_BFu0ll_BFs0ll, "BFs0c_BFu0c_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0ll_BFs0s  {
  signed char  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0ll_BFs0s) C1{ Fc:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0c_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0ll_BFs0s");
    static BFs0c_BFu0c_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0ll_BFs0s(Test_BFs0c_BFu0c_BFu0ll_BFs0s, "BFs0c_BFu0c_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0ll_BFu0c  {
  signed char  :0;
  unsigned char  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0ll_BFu0c) C1{ Fc:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0c_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0ll_BFu0c");
    static BFs0c_BFu0c_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0ll_BFu0c(Test_BFs0c_BFu0c_BFu0ll_BFu0c, "BFs0c_BFu0c_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0ll_BFu0i  {
  signed char  :0;
  unsigned char  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0ll_BFu0i) C1{ Fc:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0c_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0ll_BFu0i");
    static BFs0c_BFu0c_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0ll_BFu0i(Test_BFs0c_BFu0c_BFu0ll_BFu0i, "BFs0c_BFu0c_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0ll_BFu0ll  {
  signed char  :0;
  unsigned char  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0ll_BFu0ll) C1{ Fc:0 Fc:0 FL:0 FL:0}



static void Test_BFs0c_BFu0c_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0ll_BFu0ll");
    static BFs0c_BFu0c_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0ll_BFu0ll(Test_BFs0c_BFu0c_BFu0ll_BFu0ll, "BFs0c_BFu0c_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0ll_BFu0s  {
  signed char  :0;
  unsigned char  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0ll_BFu0s) C1{ Fc:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0c_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0ll_BFu0s");
    static BFs0c_BFu0c_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0ll_BFu0s(Test_BFs0c_BFu0c_BFu0ll_BFu0s, "BFs0c_BFu0c_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0s  {
  signed char  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0s) C1{ Fc:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0s");
    static BFs0c_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0s(Test_BFs0c_BFu0c_BFu0s, "BFs0c_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0s_BFs0c  {
  signed char  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0s_BFs0c) C1{ Fc:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0c_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0s_BFs0c");
    static BFs0c_BFu0c_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0s_BFs0c(Test_BFs0c_BFu0c_BFu0s_BFs0c, "BFs0c_BFu0c_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0s_BFs0i  {
  signed char  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0s_BFs0i) C1{ Fc:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0c_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0s_BFs0i");
    static BFs0c_BFu0c_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0s_BFs0i(Test_BFs0c_BFu0c_BFu0s_BFs0i, "BFs0c_BFu0c_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0s_BFs0ll  {
  signed char  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0s_BFs0ll) C1{ Fc:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0c_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0s_BFs0ll");
    static BFs0c_BFu0c_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0s_BFs0ll(Test_BFs0c_BFu0c_BFu0s_BFs0ll, "BFs0c_BFu0c_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0s_BFs0s  {
  signed char  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0s_BFs0s) C1{ Fc:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0c_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0s_BFs0s");
    static BFs0c_BFu0c_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0s_BFs0s(Test_BFs0c_BFu0c_BFu0s_BFs0s, "BFs0c_BFu0c_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0s_BFu0c  {
  signed char  :0;
  unsigned char  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0s_BFu0c) C1{ Fc:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0c_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0s_BFu0c");
    static BFs0c_BFu0c_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0s_BFu0c(Test_BFs0c_BFu0c_BFu0s_BFu0c, "BFs0c_BFu0c_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0s_BFu0i  {
  signed char  :0;
  unsigned char  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0s_BFu0i) C1{ Fc:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0c_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0s_BFu0i");
    static BFs0c_BFu0c_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0s_BFu0i(Test_BFs0c_BFu0c_BFu0s_BFu0i, "BFs0c_BFu0c_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0s_BFu0ll  {
  signed char  :0;
  unsigned char  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0s_BFu0ll) C1{ Fc:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0c_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0s_BFu0ll");
    static BFs0c_BFu0c_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0s_BFu0ll(Test_BFs0c_BFu0c_BFu0s_BFu0ll, "BFs0c_BFu0c_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0c_BFu0s_BFu0s  {
  signed char  :0;
  unsigned char  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0c_BFu0s_BFu0s) C1{ Fc:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0c_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0c_BFu0s_BFu0s");
    static BFs0c_BFu0c_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0c_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0c_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0c_BFu0s_BFu0s(Test_BFs0c_BFu0c_BFu0s_BFu0s, "BFs0c_BFu0c_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i  {
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0i) C1{ Fc:0 Fi:0}



static void Test_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0i");
    static BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i(Test_BFs0c_BFu0i, "BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0c  {
  signed char  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0c) C1{ Fc:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0c");
    static BFs0c_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0c(Test_BFs0c_BFu0i_BFs0c, "BFs0c_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0c_BFs0c  {
  signed char  :0;
  unsigned int  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0c_BFs0c) C1{ Fc:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0i_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0c_BFs0c");
    static BFs0c_BFu0i_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0c_BFs0c(Test_BFs0c_BFu0i_BFs0c_BFs0c, "BFs0c_BFu0i_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0c_BFs0i  {
  signed char  :0;
  unsigned int  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0c_BFs0i) C1{ Fc:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0i_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0c_BFs0i");
    static BFs0c_BFu0i_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0c_BFs0i(Test_BFs0c_BFu0i_BFs0c_BFs0i, "BFs0c_BFu0i_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0c_BFs0ll  {
  signed char  :0;
  unsigned int  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0c_BFs0ll) C1{ Fc:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0i_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0c_BFs0ll");
    static BFs0c_BFu0i_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0c_BFs0ll(Test_BFs0c_BFu0i_BFs0c_BFs0ll, "BFs0c_BFu0i_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0c_BFs0s  {
  signed char  :0;
  unsigned int  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0c_BFs0s) C1{ Fc:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0i_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0c_BFs0s");
    static BFs0c_BFu0i_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0c_BFs0s(Test_BFs0c_BFu0i_BFs0c_BFs0s, "BFs0c_BFu0i_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0c_BFu0c  {
  signed char  :0;
  unsigned int  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0c_BFu0c) C1{ Fc:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0i_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0c_BFu0c");
    static BFs0c_BFu0i_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0c_BFu0c(Test_BFs0c_BFu0i_BFs0c_BFu0c, "BFs0c_BFu0i_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0c_BFu0i  {
  signed char  :0;
  unsigned int  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0c_BFu0i) C1{ Fc:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0i_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0c_BFu0i");
    static BFs0c_BFu0i_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0c_BFu0i(Test_BFs0c_BFu0i_BFs0c_BFu0i, "BFs0c_BFu0i_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0c_BFu0ll  {
  signed char  :0;
  unsigned int  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0c_BFu0ll) C1{ Fc:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0i_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0c_BFu0ll");
    static BFs0c_BFu0i_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0c_BFu0ll(Test_BFs0c_BFu0i_BFs0c_BFu0ll, "BFs0c_BFu0i_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0c_BFu0s  {
  signed char  :0;
  unsigned int  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0c_BFu0s) C1{ Fc:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0i_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0c_BFu0s");
    static BFs0c_BFu0i_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0c_BFu0s(Test_BFs0c_BFu0i_BFs0c_BFu0s, "BFs0c_BFu0i_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0i  {
  signed char  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0i) C1{ Fc:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0i");
    static BFs0c_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0i(Test_BFs0c_BFu0i_BFs0i, "BFs0c_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0i_BFs0c  {
  signed char  :0;
  unsigned int  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0i_BFs0c) C1{ Fc:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0i_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0i_BFs0c");
    static BFs0c_BFu0i_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0i_BFs0c(Test_BFs0c_BFu0i_BFs0i_BFs0c, "BFs0c_BFu0i_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0i_BFs0i  {
  signed char  :0;
  unsigned int  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0i_BFs0i) C1{ Fc:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0i_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0i_BFs0i");
    static BFs0c_BFu0i_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0i_BFs0i(Test_BFs0c_BFu0i_BFs0i_BFs0i, "BFs0c_BFu0i_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0i_BFs0ll  {
  signed char  :0;
  unsigned int  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0i_BFs0ll) C1{ Fc:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0i_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0i_BFs0ll");
    static BFs0c_BFu0i_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0i_BFs0ll(Test_BFs0c_BFu0i_BFs0i_BFs0ll, "BFs0c_BFu0i_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0i_BFs0s  {
  signed char  :0;
  unsigned int  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0i_BFs0s) C1{ Fc:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0i_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0i_BFs0s");
    static BFs0c_BFu0i_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0i_BFs0s(Test_BFs0c_BFu0i_BFs0i_BFs0s, "BFs0c_BFu0i_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0i_BFu0c  {
  signed char  :0;
  unsigned int  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0i_BFu0c) C1{ Fc:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0i_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0i_BFu0c");
    static BFs0c_BFu0i_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0i_BFu0c(Test_BFs0c_BFu0i_BFs0i_BFu0c, "BFs0c_BFu0i_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0i_BFu0i  {
  signed char  :0;
  unsigned int  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0i_BFu0i) C1{ Fc:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0i_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0i_BFu0i");
    static BFs0c_BFu0i_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0i_BFu0i(Test_BFs0c_BFu0i_BFs0i_BFu0i, "BFs0c_BFu0i_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0i_BFu0ll  {
  signed char  :0;
  unsigned int  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0i_BFu0ll) C1{ Fc:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0i_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0i_BFu0ll");
    static BFs0c_BFu0i_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0i_BFu0ll(Test_BFs0c_BFu0i_BFs0i_BFu0ll, "BFs0c_BFu0i_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0i_BFu0s  {
  signed char  :0;
  unsigned int  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0i_BFu0s) C1{ Fc:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0i_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0i_BFu0s");
    static BFs0c_BFu0i_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0i_BFu0s(Test_BFs0c_BFu0i_BFs0i_BFu0s, "BFs0c_BFu0i_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0ll  {
  signed char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0ll) C1{ Fc:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0ll");
    static BFs0c_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0ll(Test_BFs0c_BFu0i_BFs0ll, "BFs0c_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0ll_BFs0c  {
  signed char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0ll_BFs0c) C1{ Fc:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0i_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0ll_BFs0c");
    static BFs0c_BFu0i_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0ll_BFs0c(Test_BFs0c_BFu0i_BFs0ll_BFs0c, "BFs0c_BFu0i_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0ll_BFs0i  {
  signed char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0ll_BFs0i) C1{ Fc:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0i_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0ll_BFs0i");
    static BFs0c_BFu0i_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0ll_BFs0i(Test_BFs0c_BFu0i_BFs0ll_BFs0i, "BFs0c_BFu0i_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0ll_BFs0ll  {
  signed char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0ll_BFs0ll) C1{ Fc:0 Fi:0 FL:0 FL:0}



static void Test_BFs0c_BFu0i_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0ll_BFs0ll");
    static BFs0c_BFu0i_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0ll_BFs0ll(Test_BFs0c_BFu0i_BFs0ll_BFs0ll, "BFs0c_BFu0i_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0ll_BFs0s  {
  signed char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0ll_BFs0s) C1{ Fc:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0i_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0ll_BFs0s");
    static BFs0c_BFu0i_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0ll_BFs0s(Test_BFs0c_BFu0i_BFs0ll_BFs0s, "BFs0c_BFu0i_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0ll_BFu0c  {
  signed char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0ll_BFu0c) C1{ Fc:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0i_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0ll_BFu0c");
    static BFs0c_BFu0i_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0ll_BFu0c(Test_BFs0c_BFu0i_BFs0ll_BFu0c, "BFs0c_BFu0i_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0ll_BFu0i  {
  signed char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0ll_BFu0i) C1{ Fc:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0i_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0ll_BFu0i");
    static BFs0c_BFu0i_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0ll_BFu0i(Test_BFs0c_BFu0i_BFs0ll_BFu0i, "BFs0c_BFu0i_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0ll_BFu0ll  {
  signed char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0ll_BFu0ll) C1{ Fc:0 Fi:0 FL:0 FL:0}



static void Test_BFs0c_BFu0i_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0ll_BFu0ll");
    static BFs0c_BFu0i_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0ll_BFu0ll(Test_BFs0c_BFu0i_BFs0ll_BFu0ll, "BFs0c_BFu0i_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0ll_BFu0s  {
  signed char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0ll_BFu0s) C1{ Fc:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0i_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0ll_BFu0s");
    static BFs0c_BFu0i_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0ll_BFu0s(Test_BFs0c_BFu0i_BFs0ll_BFu0s, "BFs0c_BFu0i_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0s  {
  signed char  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0s) C1{ Fc:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0s");
    static BFs0c_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0s(Test_BFs0c_BFu0i_BFs0s, "BFs0c_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0s_BFs0c  {
  signed char  :0;
  unsigned int  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0s_BFs0c) C1{ Fc:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0i_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0s_BFs0c");
    static BFs0c_BFu0i_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0s_BFs0c(Test_BFs0c_BFu0i_BFs0s_BFs0c, "BFs0c_BFu0i_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0s_BFs0i  {
  signed char  :0;
  unsigned int  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0s_BFs0i) C1{ Fc:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0i_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0s_BFs0i");
    static BFs0c_BFu0i_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0s_BFs0i(Test_BFs0c_BFu0i_BFs0s_BFs0i, "BFs0c_BFu0i_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0s_BFs0ll  {
  signed char  :0;
  unsigned int  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0s_BFs0ll) C1{ Fc:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0i_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0s_BFs0ll");
    static BFs0c_BFu0i_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0s_BFs0ll(Test_BFs0c_BFu0i_BFs0s_BFs0ll, "BFs0c_BFu0i_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0s_BFs0s  {
  signed char  :0;
  unsigned int  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0s_BFs0s) C1{ Fc:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0i_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0s_BFs0s");
    static BFs0c_BFu0i_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0s_BFs0s(Test_BFs0c_BFu0i_BFs0s_BFs0s, "BFs0c_BFu0i_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0s_BFu0c  {
  signed char  :0;
  unsigned int  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0s_BFu0c) C1{ Fc:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0i_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0s_BFu0c");
    static BFs0c_BFu0i_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0s_BFu0c(Test_BFs0c_BFu0i_BFs0s_BFu0c, "BFs0c_BFu0i_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0s_BFu0i  {
  signed char  :0;
  unsigned int  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0s_BFu0i) C1{ Fc:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0i_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0s_BFu0i");
    static BFs0c_BFu0i_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0s_BFu0i(Test_BFs0c_BFu0i_BFs0s_BFu0i, "BFs0c_BFu0i_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0s_BFu0ll  {
  signed char  :0;
  unsigned int  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0s_BFu0ll) C1{ Fc:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0i_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0s_BFu0ll");
    static BFs0c_BFu0i_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0s_BFu0ll(Test_BFs0c_BFu0i_BFs0s_BFu0ll, "BFs0c_BFu0i_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFs0s_BFu0s  {
  signed char  :0;
  unsigned int  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0i_BFs0s_BFu0s) C1{ Fc:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0i_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFs0s_BFu0s");
    static BFs0c_BFu0i_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFs0s_BFu0s(Test_BFs0c_BFu0i_BFs0s_BFu0s, "BFs0c_BFu0i_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0c  {
  signed char  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0c) C1{ Fc:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0c");
    static BFs0c_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0c(Test_BFs0c_BFu0i_BFu0c, "BFs0c_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0c_BFs0c  {
  signed char  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0c_BFs0c) C1{ Fc:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0i_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0c_BFs0c");
    static BFs0c_BFu0i_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0c_BFs0c(Test_BFs0c_BFu0i_BFu0c_BFs0c, "BFs0c_BFu0i_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0c_BFs0i  {
  signed char  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0c_BFs0i) C1{ Fc:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0i_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0c_BFs0i");
    static BFs0c_BFu0i_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0c_BFs0i(Test_BFs0c_BFu0i_BFu0c_BFs0i, "BFs0c_BFu0i_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0c_BFs0ll  {
  signed char  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0c_BFs0ll) C1{ Fc:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0i_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0c_BFs0ll");
    static BFs0c_BFu0i_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0c_BFs0ll(Test_BFs0c_BFu0i_BFu0c_BFs0ll, "BFs0c_BFu0i_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0c_BFs0s  {
  signed char  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0c_BFs0s) C1{ Fc:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0i_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0c_BFs0s");
    static BFs0c_BFu0i_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0c_BFs0s(Test_BFs0c_BFu0i_BFu0c_BFs0s, "BFs0c_BFu0i_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0c_BFu0c  {
  signed char  :0;
  unsigned int  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0c_BFu0c) C1{ Fc:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0i_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0c_BFu0c");
    static BFs0c_BFu0i_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0c_BFu0c(Test_BFs0c_BFu0i_BFu0c_BFu0c, "BFs0c_BFu0i_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0c_BFu0i  {
  signed char  :0;
  unsigned int  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0c_BFu0i) C1{ Fc:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0i_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0c_BFu0i");
    static BFs0c_BFu0i_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0c_BFu0i(Test_BFs0c_BFu0i_BFu0c_BFu0i, "BFs0c_BFu0i_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0c_BFu0ll  {
  signed char  :0;
  unsigned int  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0c_BFu0ll) C1{ Fc:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0i_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0c_BFu0ll");
    static BFs0c_BFu0i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0c_BFu0ll(Test_BFs0c_BFu0i_BFu0c_BFu0ll, "BFs0c_BFu0i_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0c_BFu0s  {
  signed char  :0;
  unsigned int  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0c_BFu0s) C1{ Fc:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0i_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0c_BFu0s");
    static BFs0c_BFu0i_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0c_BFu0s(Test_BFs0c_BFu0i_BFu0c_BFu0s, "BFs0c_BFu0i_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0i  {
  signed char  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0i) C1{ Fc:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0i");
    static BFs0c_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0i(Test_BFs0c_BFu0i_BFu0i, "BFs0c_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0i_BFs0c  {
  signed char  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0i_BFs0c) C1{ Fc:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0i_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0i_BFs0c");
    static BFs0c_BFu0i_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0i_BFs0c(Test_BFs0c_BFu0i_BFu0i_BFs0c, "BFs0c_BFu0i_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0i_BFs0i  {
  signed char  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0i_BFs0i) C1{ Fc:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0i_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0i_BFs0i");
    static BFs0c_BFu0i_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0i_BFs0i(Test_BFs0c_BFu0i_BFu0i_BFs0i, "BFs0c_BFu0i_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0i_BFs0ll  {
  signed char  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0i_BFs0ll) C1{ Fc:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0i_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0i_BFs0ll");
    static BFs0c_BFu0i_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0i_BFs0ll(Test_BFs0c_BFu0i_BFu0i_BFs0ll, "BFs0c_BFu0i_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0i_BFs0s  {
  signed char  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0i_BFs0s) C1{ Fc:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0i_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0i_BFs0s");
    static BFs0c_BFu0i_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0i_BFs0s(Test_BFs0c_BFu0i_BFu0i_BFs0s, "BFs0c_BFu0i_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0i_BFu0c  {
  signed char  :0;
  unsigned int  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0i_BFu0c) C1{ Fc:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0i_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0i_BFu0c");
    static BFs0c_BFu0i_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0i_BFu0c(Test_BFs0c_BFu0i_BFu0i_BFu0c, "BFs0c_BFu0i_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0i_BFu0i  {
  signed char  :0;
  unsigned int  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0i_BFu0i) C1{ Fc:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0i_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0i_BFu0i");
    static BFs0c_BFu0i_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0i_BFu0i(Test_BFs0c_BFu0i_BFu0i_BFu0i, "BFs0c_BFu0i_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0i_BFu0ll  {
  signed char  :0;
  unsigned int  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0i_BFu0ll) C1{ Fc:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0i_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0i_BFu0ll");
    static BFs0c_BFu0i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0i_BFu0ll(Test_BFs0c_BFu0i_BFu0i_BFu0ll, "BFs0c_BFu0i_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0i_BFu0s  {
  signed char  :0;
  unsigned int  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0i_BFu0s) C1{ Fc:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0i_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0i_BFu0s");
    static BFs0c_BFu0i_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0i_BFu0s(Test_BFs0c_BFu0i_BFu0i_BFu0s, "BFs0c_BFu0i_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0ll  {
  signed char  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0ll) C1{ Fc:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0ll");
    static BFs0c_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0ll(Test_BFs0c_BFu0i_BFu0ll, "BFs0c_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0ll_BFs0c  {
  signed char  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0ll_BFs0c) C1{ Fc:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0i_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0ll_BFs0c");
    static BFs0c_BFu0i_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0ll_BFs0c(Test_BFs0c_BFu0i_BFu0ll_BFs0c, "BFs0c_BFu0i_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0ll_BFs0i  {
  signed char  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0ll_BFs0i) C1{ Fc:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0i_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0ll_BFs0i");
    static BFs0c_BFu0i_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0ll_BFs0i(Test_BFs0c_BFu0i_BFu0ll_BFs0i, "BFs0c_BFu0i_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0ll_BFs0ll  {
  signed char  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0ll_BFs0ll) C1{ Fc:0 Fi:0 FL:0 FL:0}



static void Test_BFs0c_BFu0i_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0ll_BFs0ll");
    static BFs0c_BFu0i_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0ll_BFs0ll(Test_BFs0c_BFu0i_BFu0ll_BFs0ll, "BFs0c_BFu0i_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0ll_BFs0s  {
  signed char  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0ll_BFs0s) C1{ Fc:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0i_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0ll_BFs0s");
    static BFs0c_BFu0i_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0ll_BFs0s(Test_BFs0c_BFu0i_BFu0ll_BFs0s, "BFs0c_BFu0i_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0ll_BFu0c  {
  signed char  :0;
  unsigned int  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0ll_BFu0c) C1{ Fc:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0i_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0ll_BFu0c");
    static BFs0c_BFu0i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0ll_BFu0c(Test_BFs0c_BFu0i_BFu0ll_BFu0c, "BFs0c_BFu0i_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0ll_BFu0i  {
  signed char  :0;
  unsigned int  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0ll_BFu0i) C1{ Fc:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0i_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0ll_BFu0i");
    static BFs0c_BFu0i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0ll_BFu0i(Test_BFs0c_BFu0i_BFu0ll_BFu0i, "BFs0c_BFu0i_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0ll_BFu0ll  {
  signed char  :0;
  unsigned int  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0ll_BFu0ll) C1{ Fc:0 Fi:0 FL:0 FL:0}



static void Test_BFs0c_BFu0i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0ll_BFu0ll");
    static BFs0c_BFu0i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0ll_BFu0ll(Test_BFs0c_BFu0i_BFu0ll_BFu0ll, "BFs0c_BFu0i_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0ll_BFu0s  {
  signed char  :0;
  unsigned int  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0ll_BFu0s) C1{ Fc:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0i_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0ll_BFu0s");
    static BFs0c_BFu0i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0ll_BFu0s(Test_BFs0c_BFu0i_BFu0ll_BFu0s, "BFs0c_BFu0i_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0s  {
  signed char  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0s) C1{ Fc:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0s");
    static BFs0c_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0s(Test_BFs0c_BFu0i_BFu0s, "BFs0c_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0s_BFs0c  {
  signed char  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0s_BFs0c) C1{ Fc:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0i_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0s_BFs0c");
    static BFs0c_BFu0i_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0s_BFs0c(Test_BFs0c_BFu0i_BFu0s_BFs0c, "BFs0c_BFu0i_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0s_BFs0i  {
  signed char  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0s_BFs0i) C1{ Fc:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0i_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0s_BFs0i");
    static BFs0c_BFu0i_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0s_BFs0i(Test_BFs0c_BFu0i_BFu0s_BFs0i, "BFs0c_BFu0i_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0s_BFs0ll  {
  signed char  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0s_BFs0ll) C1{ Fc:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0i_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0s_BFs0ll");
    static BFs0c_BFu0i_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0s_BFs0ll(Test_BFs0c_BFu0i_BFu0s_BFs0ll, "BFs0c_BFu0i_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0s_BFs0s  {
  signed char  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0s_BFs0s) C1{ Fc:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0i_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0s_BFs0s");
    static BFs0c_BFu0i_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0s_BFs0s(Test_BFs0c_BFu0i_BFu0s_BFs0s, "BFs0c_BFu0i_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0s_BFu0c  {
  signed char  :0;
  unsigned int  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0s_BFu0c) C1{ Fc:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0i_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0s_BFu0c");
    static BFs0c_BFu0i_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0s_BFu0c(Test_BFs0c_BFu0i_BFu0s_BFu0c, "BFs0c_BFu0i_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0s_BFu0i  {
  signed char  :0;
  unsigned int  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0s_BFu0i) C1{ Fc:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0i_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0s_BFu0i");
    static BFs0c_BFu0i_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0s_BFu0i(Test_BFs0c_BFu0i_BFu0s_BFu0i, "BFs0c_BFu0i_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0s_BFu0ll  {
  signed char  :0;
  unsigned int  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0s_BFu0ll) C1{ Fc:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0i_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0s_BFu0ll");
    static BFs0c_BFu0i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0s_BFu0ll(Test_BFs0c_BFu0i_BFu0s_BFu0ll, "BFs0c_BFu0i_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0i_BFu0s_BFu0s  {
  signed char  :0;
  unsigned int  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0i_BFu0s_BFu0s) C1{ Fc:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0i_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0i_BFu0s_BFu0s");
    static BFs0c_BFu0i_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0i_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0i_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0i_BFu0s_BFu0s(Test_BFs0c_BFu0i_BFu0s_BFu0s, "BFs0c_BFu0i_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll  {
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0ll) C1{ Fc:0 FL:0}



static void Test_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll");
    static BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll(Test_BFs0c_BFu0ll, "BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0c  {
  signed char  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0c) C1{ Fc:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0c");
    static BFs0c_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0c(Test_BFs0c_BFu0ll_BFs0c, "BFs0c_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0c_BFs0c  {
  signed char  :0;
  __tsu64  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0c_BFs0c) C1{ Fc:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0c_BFs0c");
    static BFs0c_BFu0ll_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0c_BFs0c(Test_BFs0c_BFu0ll_BFs0c_BFs0c, "BFs0c_BFu0ll_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0c_BFs0i  {
  signed char  :0;
  __tsu64  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0c_BFs0i) C1{ Fc:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0c_BFs0i");
    static BFs0c_BFu0ll_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0c_BFs0i(Test_BFs0c_BFu0ll_BFs0c_BFs0i, "BFs0c_BFu0ll_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0c_BFs0ll  {
  signed char  :0;
  __tsu64  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0c_BFs0ll) C1{ Fc:0 FL:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0ll_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0c_BFs0ll");
    static BFs0c_BFu0ll_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0c_BFs0ll(Test_BFs0c_BFu0ll_BFs0c_BFs0ll, "BFs0c_BFu0ll_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0c_BFs0s  {
  signed char  :0;
  __tsu64  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0c_BFs0s) C1{ Fc:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0c_BFs0s");
    static BFs0c_BFu0ll_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0c_BFs0s(Test_BFs0c_BFu0ll_BFs0c_BFs0s, "BFs0c_BFu0ll_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0c_BFu0c  {
  signed char  :0;
  __tsu64  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0c_BFu0c) C1{ Fc:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0c_BFu0c");
    static BFs0c_BFu0ll_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0c_BFu0c(Test_BFs0c_BFu0ll_BFs0c_BFu0c, "BFs0c_BFu0ll_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0c_BFu0i  {
  signed char  :0;
  __tsu64  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0c_BFu0i) C1{ Fc:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0c_BFu0i");
    static BFs0c_BFu0ll_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0c_BFu0i(Test_BFs0c_BFu0ll_BFs0c_BFu0i, "BFs0c_BFu0ll_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0c_BFu0ll  {
  signed char  :0;
  __tsu64  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0c_BFu0ll) C1{ Fc:0 FL:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0ll_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0c_BFu0ll");
    static BFs0c_BFu0ll_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0c_BFu0ll(Test_BFs0c_BFu0ll_BFs0c_BFu0ll, "BFs0c_BFu0ll_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0c_BFu0s  {
  signed char  :0;
  __tsu64  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0c_BFu0s) C1{ Fc:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0c_BFu0s");
    static BFs0c_BFu0ll_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0c_BFu0s(Test_BFs0c_BFu0ll_BFs0c_BFu0s, "BFs0c_BFu0ll_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0i  {
  signed char  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0i) C1{ Fc:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0i");
    static BFs0c_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0i(Test_BFs0c_BFu0ll_BFs0i, "BFs0c_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0i_BFs0c  {
  signed char  :0;
  __tsu64  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0i_BFs0c) C1{ Fc:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0i_BFs0c");
    static BFs0c_BFu0ll_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0i_BFs0c(Test_BFs0c_BFu0ll_BFs0i_BFs0c, "BFs0c_BFu0ll_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0i_BFs0i  {
  signed char  :0;
  __tsu64  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0i_BFs0i) C1{ Fc:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0i_BFs0i");
    static BFs0c_BFu0ll_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0i_BFs0i(Test_BFs0c_BFu0ll_BFs0i_BFs0i, "BFs0c_BFu0ll_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0i_BFs0ll  {
  signed char  :0;
  __tsu64  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0i_BFs0ll) C1{ Fc:0 FL:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0ll_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0i_BFs0ll");
    static BFs0c_BFu0ll_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0i_BFs0ll(Test_BFs0c_BFu0ll_BFs0i_BFs0ll, "BFs0c_BFu0ll_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0i_BFs0s  {
  signed char  :0;
  __tsu64  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0i_BFs0s) C1{ Fc:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0i_BFs0s");
    static BFs0c_BFu0ll_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0i_BFs0s(Test_BFs0c_BFu0ll_BFs0i_BFs0s, "BFs0c_BFu0ll_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0i_BFu0c  {
  signed char  :0;
  __tsu64  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0i_BFu0c) C1{ Fc:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0i_BFu0c");
    static BFs0c_BFu0ll_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0i_BFu0c(Test_BFs0c_BFu0ll_BFs0i_BFu0c, "BFs0c_BFu0ll_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0i_BFu0i  {
  signed char  :0;
  __tsu64  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0i_BFu0i) C1{ Fc:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0i_BFu0i");
    static BFs0c_BFu0ll_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0i_BFu0i(Test_BFs0c_BFu0ll_BFs0i_BFu0i, "BFs0c_BFu0ll_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0i_BFu0ll  {
  signed char  :0;
  __tsu64  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0i_BFu0ll) C1{ Fc:0 FL:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0ll_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0i_BFu0ll");
    static BFs0c_BFu0ll_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0i_BFu0ll(Test_BFs0c_BFu0ll_BFs0i_BFu0ll, "BFs0c_BFu0ll_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0i_BFu0s  {
  signed char  :0;
  __tsu64  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0i_BFu0s) C1{ Fc:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0i_BFu0s");
    static BFs0c_BFu0ll_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0i_BFu0s(Test_BFs0c_BFu0ll_BFs0i_BFu0s, "BFs0c_BFu0ll_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0ll  {
  signed char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0ll) C1{ Fc:0 FL:0 FL:0}



static void Test_BFs0c_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0ll");
    static BFs0c_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0ll(Test_BFs0c_BFu0ll_BFs0ll, "BFs0c_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0ll_BFs0c  {
  signed char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0ll_BFs0c) C1{ Fc:0 FL:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0ll_BFs0c");
    static BFs0c_BFu0ll_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0ll_BFs0c(Test_BFs0c_BFu0ll_BFs0ll_BFs0c, "BFs0c_BFu0ll_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0ll_BFs0i  {
  signed char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0ll_BFs0i) C1{ Fc:0 FL:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0ll_BFs0i");
    static BFs0c_BFu0ll_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0ll_BFs0i(Test_BFs0c_BFu0ll_BFs0ll_BFs0i, "BFs0c_BFu0ll_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0ll_BFs0ll  {
  signed char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0ll_BFs0ll) C1{ Fc:0 FL:0 FL:0 FL:0}



static void Test_BFs0c_BFu0ll_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0ll_BFs0ll");
    static BFs0c_BFu0ll_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0ll_BFs0ll(Test_BFs0c_BFu0ll_BFs0ll_BFs0ll, "BFs0c_BFu0ll_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0ll_BFs0s  {
  signed char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0ll_BFs0s) C1{ Fc:0 FL:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0ll_BFs0s");
    static BFs0c_BFu0ll_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0ll_BFs0s(Test_BFs0c_BFu0ll_BFs0ll_BFs0s, "BFs0c_BFu0ll_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0ll_BFu0c  {
  signed char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0ll_BFu0c) C1{ Fc:0 FL:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0ll_BFu0c");
    static BFs0c_BFu0ll_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0ll_BFu0c(Test_BFs0c_BFu0ll_BFs0ll_BFu0c, "BFs0c_BFu0ll_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0ll_BFu0i  {
  signed char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0ll_BFu0i) C1{ Fc:0 FL:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0ll_BFu0i");
    static BFs0c_BFu0ll_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0ll_BFu0i(Test_BFs0c_BFu0ll_BFs0ll_BFu0i, "BFs0c_BFu0ll_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0ll_BFu0ll  {
  signed char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0ll_BFu0ll) C1{ Fc:0 FL:0 FL:0 FL:0}



static void Test_BFs0c_BFu0ll_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0ll_BFu0ll");
    static BFs0c_BFu0ll_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0ll_BFu0ll(Test_BFs0c_BFu0ll_BFs0ll_BFu0ll, "BFs0c_BFu0ll_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0ll_BFu0s  {
  signed char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0ll_BFu0s) C1{ Fc:0 FL:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0ll_BFu0s");
    static BFs0c_BFu0ll_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0ll_BFu0s(Test_BFs0c_BFu0ll_BFs0ll_BFu0s, "BFs0c_BFu0ll_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0s  {
  signed char  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0s) C1{ Fc:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0s");
    static BFs0c_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0s(Test_BFs0c_BFu0ll_BFs0s, "BFs0c_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0s_BFs0c  {
  signed char  :0;
  __tsu64  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0s_BFs0c) C1{ Fc:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0s_BFs0c");
    static BFs0c_BFu0ll_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0s_BFs0c(Test_BFs0c_BFu0ll_BFs0s_BFs0c, "BFs0c_BFu0ll_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0s_BFs0i  {
  signed char  :0;
  __tsu64  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0s_BFs0i) C1{ Fc:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0s_BFs0i");
    static BFs0c_BFu0ll_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0s_BFs0i(Test_BFs0c_BFu0ll_BFs0s_BFs0i, "BFs0c_BFu0ll_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0s_BFs0ll  {
  signed char  :0;
  __tsu64  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0s_BFs0ll) C1{ Fc:0 FL:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0ll_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0s_BFs0ll");
    static BFs0c_BFu0ll_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0s_BFs0ll(Test_BFs0c_BFu0ll_BFs0s_BFs0ll, "BFs0c_BFu0ll_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0s_BFs0s  {
  signed char  :0;
  __tsu64  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0s_BFs0s) C1{ Fc:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0s_BFs0s");
    static BFs0c_BFu0ll_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0s_BFs0s(Test_BFs0c_BFu0ll_BFs0s_BFs0s, "BFs0c_BFu0ll_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0s_BFu0c  {
  signed char  :0;
  __tsu64  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0s_BFu0c) C1{ Fc:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0s_BFu0c");
    static BFs0c_BFu0ll_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0s_BFu0c(Test_BFs0c_BFu0ll_BFs0s_BFu0c, "BFs0c_BFu0ll_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0s_BFu0i  {
  signed char  :0;
  __tsu64  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0s_BFu0i) C1{ Fc:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0s_BFu0i");
    static BFs0c_BFu0ll_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0s_BFu0i(Test_BFs0c_BFu0ll_BFs0s_BFu0i, "BFs0c_BFu0ll_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0s_BFu0ll  {
  signed char  :0;
  __tsu64  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0s_BFu0ll) C1{ Fc:0 FL:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0ll_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0s_BFu0ll");
    static BFs0c_BFu0ll_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0s_BFu0ll(Test_BFs0c_BFu0ll_BFs0s_BFu0ll, "BFs0c_BFu0ll_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFs0s_BFu0s  {
  signed char  :0;
  __tsu64  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFs0s_BFu0s) C1{ Fc:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFs0s_BFu0s");
    static BFs0c_BFu0ll_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFs0s_BFu0s(Test_BFs0c_BFu0ll_BFs0s_BFu0s, "BFs0c_BFu0ll_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0c  {
  signed char  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0c) C1{ Fc:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0c");
    static BFs0c_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0c(Test_BFs0c_BFu0ll_BFu0c, "BFs0c_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0c_BFs0c  {
  signed char  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0c_BFs0c) C1{ Fc:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0c_BFs0c");
    static BFs0c_BFu0ll_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0c_BFs0c(Test_BFs0c_BFu0ll_BFu0c_BFs0c, "BFs0c_BFu0ll_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0c_BFs0i  {
  signed char  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0c_BFs0i) C1{ Fc:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0c_BFs0i");
    static BFs0c_BFu0ll_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0c_BFs0i(Test_BFs0c_BFu0ll_BFu0c_BFs0i, "BFs0c_BFu0ll_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0c_BFs0ll  {
  signed char  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0c_BFs0ll) C1{ Fc:0 FL:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0ll_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0c_BFs0ll");
    static BFs0c_BFu0ll_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0c_BFs0ll(Test_BFs0c_BFu0ll_BFu0c_BFs0ll, "BFs0c_BFu0ll_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0c_BFs0s  {
  signed char  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0c_BFs0s) C1{ Fc:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0c_BFs0s");
    static BFs0c_BFu0ll_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0c_BFs0s(Test_BFs0c_BFu0ll_BFu0c_BFs0s, "BFs0c_BFu0ll_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0c_BFu0c  {
  signed char  :0;
  __tsu64  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0c_BFu0c) C1{ Fc:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0c_BFu0c");
    static BFs0c_BFu0ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0c_BFu0c(Test_BFs0c_BFu0ll_BFu0c_BFu0c, "BFs0c_BFu0ll_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0c_BFu0i  {
  signed char  :0;
  __tsu64  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0c_BFu0i) C1{ Fc:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0c_BFu0i");
    static BFs0c_BFu0ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0c_BFu0i(Test_BFs0c_BFu0ll_BFu0c_BFu0i, "BFs0c_BFu0ll_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0c_BFu0ll  {
  signed char  :0;
  __tsu64  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0c_BFu0ll) C1{ Fc:0 FL:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0c_BFu0ll");
    static BFs0c_BFu0ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0c_BFu0ll(Test_BFs0c_BFu0ll_BFu0c_BFu0ll, "BFs0c_BFu0ll_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0c_BFu0s  {
  signed char  :0;
  __tsu64  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0c_BFu0s) C1{ Fc:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0c_BFu0s");
    static BFs0c_BFu0ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0c_BFu0s(Test_BFs0c_BFu0ll_BFu0c_BFu0s, "BFs0c_BFu0ll_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0i  {
  signed char  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0i) C1{ Fc:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0i");
    static BFs0c_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0i(Test_BFs0c_BFu0ll_BFu0i, "BFs0c_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0i_BFs0c  {
  signed char  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0i_BFs0c) C1{ Fc:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0i_BFs0c");
    static BFs0c_BFu0ll_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0i_BFs0c(Test_BFs0c_BFu0ll_BFu0i_BFs0c, "BFs0c_BFu0ll_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0i_BFs0i  {
  signed char  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0i_BFs0i) C1{ Fc:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0i_BFs0i");
    static BFs0c_BFu0ll_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0i_BFs0i(Test_BFs0c_BFu0ll_BFu0i_BFs0i, "BFs0c_BFu0ll_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0i_BFs0ll  {
  signed char  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0i_BFs0ll) C1{ Fc:0 FL:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0ll_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0i_BFs0ll");
    static BFs0c_BFu0ll_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0i_BFs0ll(Test_BFs0c_BFu0ll_BFu0i_BFs0ll, "BFs0c_BFu0ll_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0i_BFs0s  {
  signed char  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0i_BFs0s) C1{ Fc:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0i_BFs0s");
    static BFs0c_BFu0ll_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0i_BFs0s(Test_BFs0c_BFu0ll_BFu0i_BFs0s, "BFs0c_BFu0ll_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0i_BFu0c  {
  signed char  :0;
  __tsu64  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0i_BFu0c) C1{ Fc:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0i_BFu0c");
    static BFs0c_BFu0ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0i_BFu0c(Test_BFs0c_BFu0ll_BFu0i_BFu0c, "BFs0c_BFu0ll_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0i_BFu0i  {
  signed char  :0;
  __tsu64  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0i_BFu0i) C1{ Fc:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0i_BFu0i");
    static BFs0c_BFu0ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0i_BFu0i(Test_BFs0c_BFu0ll_BFu0i_BFu0i, "BFs0c_BFu0ll_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0i_BFu0ll  {
  signed char  :0;
  __tsu64  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0i_BFu0ll) C1{ Fc:0 FL:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0i_BFu0ll");
    static BFs0c_BFu0ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0i_BFu0ll(Test_BFs0c_BFu0ll_BFu0i_BFu0ll, "BFs0c_BFu0ll_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0i_BFu0s  {
  signed char  :0;
  __tsu64  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0i_BFu0s) C1{ Fc:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0i_BFu0s");
    static BFs0c_BFu0ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0i_BFu0s(Test_BFs0c_BFu0ll_BFu0i_BFu0s, "BFs0c_BFu0ll_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0ll  {
  signed char  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0ll) C1{ Fc:0 FL:0 FL:0}



static void Test_BFs0c_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0ll");
    static BFs0c_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0ll(Test_BFs0c_BFu0ll_BFu0ll, "BFs0c_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0ll_BFs0c  {
  signed char  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0ll_BFs0c) C1{ Fc:0 FL:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0ll_BFs0c");
    static BFs0c_BFu0ll_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0ll_BFs0c(Test_BFs0c_BFu0ll_BFu0ll_BFs0c, "BFs0c_BFu0ll_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0ll_BFs0i  {
  signed char  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0ll_BFs0i) C1{ Fc:0 FL:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0ll_BFs0i");
    static BFs0c_BFu0ll_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0ll_BFs0i(Test_BFs0c_BFu0ll_BFu0ll_BFs0i, "BFs0c_BFu0ll_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0ll_BFs0ll  {
  signed char  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0ll_BFs0ll) C1{ Fc:0 FL:0 FL:0 FL:0}



static void Test_BFs0c_BFu0ll_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0ll_BFs0ll");
    static BFs0c_BFu0ll_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0ll_BFs0ll(Test_BFs0c_BFu0ll_BFu0ll_BFs0ll, "BFs0c_BFu0ll_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0ll_BFs0s  {
  signed char  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0ll_BFs0s) C1{ Fc:0 FL:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0ll_BFs0s");
    static BFs0c_BFu0ll_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0ll_BFs0s(Test_BFs0c_BFu0ll_BFu0ll_BFs0s, "BFs0c_BFu0ll_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0ll_BFu0c  {
  signed char  :0;
  __tsu64  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0ll_BFu0c) C1{ Fc:0 FL:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0ll_BFu0c");
    static BFs0c_BFu0ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0ll_BFu0c(Test_BFs0c_BFu0ll_BFu0ll_BFu0c, "BFs0c_BFu0ll_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0ll_BFu0i  {
  signed char  :0;
  __tsu64  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0ll_BFu0i) C1{ Fc:0 FL:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0ll_BFu0i");
    static BFs0c_BFu0ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0ll_BFu0i(Test_BFs0c_BFu0ll_BFu0ll_BFu0i, "BFs0c_BFu0ll_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0ll_BFu0ll  {
  signed char  :0;
  __tsu64  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0ll_BFu0ll) C1{ Fc:0 FL:0 FL:0 FL:0}



static void Test_BFs0c_BFu0ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0ll_BFu0ll");
    static BFs0c_BFu0ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0ll_BFu0ll(Test_BFs0c_BFu0ll_BFu0ll_BFu0ll, "BFs0c_BFu0ll_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0ll_BFu0s  {
  signed char  :0;
  __tsu64  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0ll_BFu0s) C1{ Fc:0 FL:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0ll_BFu0s");
    static BFs0c_BFu0ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0ll_BFu0s(Test_BFs0c_BFu0ll_BFu0ll_BFu0s, "BFs0c_BFu0ll_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0s  {
  signed char  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0s) C1{ Fc:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0s");
    static BFs0c_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0s(Test_BFs0c_BFu0ll_BFu0s, "BFs0c_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0s_BFs0c  {
  signed char  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0s_BFs0c) C1{ Fc:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0s_BFs0c");
    static BFs0c_BFu0ll_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0s_BFs0c(Test_BFs0c_BFu0ll_BFu0s_BFs0c, "BFs0c_BFu0ll_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0s_BFs0i  {
  signed char  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0s_BFs0i) C1{ Fc:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0s_BFs0i");
    static BFs0c_BFu0ll_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0s_BFs0i(Test_BFs0c_BFu0ll_BFu0s_BFs0i, "BFs0c_BFu0ll_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0s_BFs0ll  {
  signed char  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0s_BFs0ll) C1{ Fc:0 FL:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0ll_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0s_BFs0ll");
    static BFs0c_BFu0ll_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0s_BFs0ll(Test_BFs0c_BFu0ll_BFu0s_BFs0ll, "BFs0c_BFu0ll_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0s_BFs0s  {
  signed char  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0s_BFs0s) C1{ Fc:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0s_BFs0s");
    static BFs0c_BFu0ll_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0s_BFs0s(Test_BFs0c_BFu0ll_BFu0s_BFs0s, "BFs0c_BFu0ll_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0s_BFu0c  {
  signed char  :0;
  __tsu64  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0s_BFu0c) C1{ Fc:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0ll_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0s_BFu0c");
    static BFs0c_BFu0ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0s_BFu0c(Test_BFs0c_BFu0ll_BFu0s_BFu0c, "BFs0c_BFu0ll_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0s_BFu0i  {
  signed char  :0;
  __tsu64  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0s_BFu0i) C1{ Fc:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0ll_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0s_BFu0i");
    static BFs0c_BFu0ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0s_BFu0i(Test_BFs0c_BFu0ll_BFu0s_BFu0i, "BFs0c_BFu0ll_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0s_BFu0ll  {
  signed char  :0;
  __tsu64  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0s_BFu0ll) C1{ Fc:0 FL:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0s_BFu0ll");
    static BFs0c_BFu0ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0s_BFu0ll(Test_BFs0c_BFu0ll_BFu0s_BFu0ll, "BFs0c_BFu0ll_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0ll_BFu0s_BFu0s  {
  signed char  :0;
  __tsu64  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0ll_BFu0s_BFu0s) C1{ Fc:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0ll_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0ll_BFu0s_BFu0s");
    static BFs0c_BFu0ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0ll_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0ll_BFu0s_BFu0s(Test_BFs0c_BFu0ll_BFu0s_BFu0s, "BFs0c_BFu0ll_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s  {
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0s) C1{ Fc:0 Fs:0}



static void Test_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0s");
    static BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s(Test_BFs0c_BFu0s, "BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0c  {
  signed char  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0c) C1{ Fc:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0c");
    static BFs0c_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0c(Test_BFs0c_BFu0s_BFs0c, "BFs0c_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0c_BFs0c  {
  signed char  :0;
  unsigned short  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0c_BFs0c) C1{ Fc:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0s_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0c_BFs0c");
    static BFs0c_BFu0s_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0c_BFs0c(Test_BFs0c_BFu0s_BFs0c_BFs0c, "BFs0c_BFu0s_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0c_BFs0i  {
  signed char  :0;
  unsigned short  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0c_BFs0i) C1{ Fc:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0s_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0c_BFs0i");
    static BFs0c_BFu0s_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0c_BFs0i(Test_BFs0c_BFu0s_BFs0c_BFs0i, "BFs0c_BFu0s_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0c_BFs0ll  {
  signed char  :0;
  unsigned short  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0c_BFs0ll) C1{ Fc:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0s_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0c_BFs0ll");
    static BFs0c_BFu0s_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0c_BFs0ll(Test_BFs0c_BFu0s_BFs0c_BFs0ll, "BFs0c_BFu0s_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0c_BFs0s  {
  signed char  :0;
  unsigned short  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0c_BFs0s) C1{ Fc:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0s_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0c_BFs0s");
    static BFs0c_BFu0s_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0c_BFs0s(Test_BFs0c_BFu0s_BFs0c_BFs0s, "BFs0c_BFu0s_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0c_BFu0c  {
  signed char  :0;
  unsigned short  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0c_BFu0c) C1{ Fc:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0s_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0c_BFu0c");
    static BFs0c_BFu0s_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0c_BFu0c(Test_BFs0c_BFu0s_BFs0c_BFu0c, "BFs0c_BFu0s_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0c_BFu0i  {
  signed char  :0;
  unsigned short  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0c_BFu0i) C1{ Fc:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0s_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0c_BFu0i");
    static BFs0c_BFu0s_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0c_BFu0i(Test_BFs0c_BFu0s_BFs0c_BFu0i, "BFs0c_BFu0s_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0c_BFu0ll  {
  signed char  :0;
  unsigned short  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0c_BFu0ll) C1{ Fc:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0s_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0c_BFu0ll");
    static BFs0c_BFu0s_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0c_BFu0ll(Test_BFs0c_BFu0s_BFs0c_BFu0ll, "BFs0c_BFu0s_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0c_BFu0s  {
  signed char  :0;
  unsigned short  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0c_BFu0s) C1{ Fc:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0s_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0c_BFu0s");
    static BFs0c_BFu0s_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0c_BFu0s(Test_BFs0c_BFu0s_BFs0c_BFu0s, "BFs0c_BFu0s_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0i  {
  signed char  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0i) C1{ Fc:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0i");
    static BFs0c_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0i(Test_BFs0c_BFu0s_BFs0i, "BFs0c_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0i_BFs0c  {
  signed char  :0;
  unsigned short  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0i_BFs0c) C1{ Fc:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0s_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0i_BFs0c");
    static BFs0c_BFu0s_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0i_BFs0c(Test_BFs0c_BFu0s_BFs0i_BFs0c, "BFs0c_BFu0s_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0i_BFs0i  {
  signed char  :0;
  unsigned short  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0i_BFs0i) C1{ Fc:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0s_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0i_BFs0i");
    static BFs0c_BFu0s_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0i_BFs0i(Test_BFs0c_BFu0s_BFs0i_BFs0i, "BFs0c_BFu0s_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0i_BFs0ll  {
  signed char  :0;
  unsigned short  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0i_BFs0ll) C1{ Fc:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0s_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0i_BFs0ll");
    static BFs0c_BFu0s_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0i_BFs0ll(Test_BFs0c_BFu0s_BFs0i_BFs0ll, "BFs0c_BFu0s_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0i_BFs0s  {
  signed char  :0;
  unsigned short  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0i_BFs0s) C1{ Fc:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0s_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0i_BFs0s");
    static BFs0c_BFu0s_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0i_BFs0s(Test_BFs0c_BFu0s_BFs0i_BFs0s, "BFs0c_BFu0s_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0i_BFu0c  {
  signed char  :0;
  unsigned short  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0i_BFu0c) C1{ Fc:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0s_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0i_BFu0c");
    static BFs0c_BFu0s_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0i_BFu0c(Test_BFs0c_BFu0s_BFs0i_BFu0c, "BFs0c_BFu0s_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0i_BFu0i  {
  signed char  :0;
  unsigned short  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0i_BFu0i) C1{ Fc:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0s_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0i_BFu0i");
    static BFs0c_BFu0s_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0i_BFu0i(Test_BFs0c_BFu0s_BFs0i_BFu0i, "BFs0c_BFu0s_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0i_BFu0ll  {
  signed char  :0;
  unsigned short  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0i_BFu0ll) C1{ Fc:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0s_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0i_BFu0ll");
    static BFs0c_BFu0s_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0i_BFu0ll(Test_BFs0c_BFu0s_BFs0i_BFu0ll, "BFs0c_BFu0s_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0i_BFu0s  {
  signed char  :0;
  unsigned short  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0i_BFu0s) C1{ Fc:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0s_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0i_BFu0s");
    static BFs0c_BFu0s_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0i_BFu0s(Test_BFs0c_BFu0s_BFs0i_BFu0s, "BFs0c_BFu0s_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0ll  {
  signed char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0ll) C1{ Fc:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0ll");
    static BFs0c_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0ll(Test_BFs0c_BFu0s_BFs0ll, "BFs0c_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0ll_BFs0c  {
  signed char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0ll_BFs0c) C1{ Fc:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0s_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0ll_BFs0c");
    static BFs0c_BFu0s_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0ll_BFs0c(Test_BFs0c_BFu0s_BFs0ll_BFs0c, "BFs0c_BFu0s_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0ll_BFs0i  {
  signed char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0ll_BFs0i) C1{ Fc:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0s_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0ll_BFs0i");
    static BFs0c_BFu0s_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0ll_BFs0i(Test_BFs0c_BFu0s_BFs0ll_BFs0i, "BFs0c_BFu0s_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0ll_BFs0ll  {
  signed char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0ll_BFs0ll) C1{ Fc:0 Fs:0 FL:0 FL:0}



static void Test_BFs0c_BFu0s_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0ll_BFs0ll");
    static BFs0c_BFu0s_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0ll_BFs0ll(Test_BFs0c_BFu0s_BFs0ll_BFs0ll, "BFs0c_BFu0s_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0ll_BFs0s  {
  signed char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0ll_BFs0s) C1{ Fc:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0s_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0ll_BFs0s");
    static BFs0c_BFu0s_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0ll_BFs0s(Test_BFs0c_BFu0s_BFs0ll_BFs0s, "BFs0c_BFu0s_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0ll_BFu0c  {
  signed char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0ll_BFu0c) C1{ Fc:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0s_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0ll_BFu0c");
    static BFs0c_BFu0s_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0ll_BFu0c(Test_BFs0c_BFu0s_BFs0ll_BFu0c, "BFs0c_BFu0s_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0ll_BFu0i  {
  signed char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0ll_BFu0i) C1{ Fc:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0s_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0ll_BFu0i");
    static BFs0c_BFu0s_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0ll_BFu0i(Test_BFs0c_BFu0s_BFs0ll_BFu0i, "BFs0c_BFu0s_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0ll_BFu0ll  {
  signed char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0ll_BFu0ll) C1{ Fc:0 Fs:0 FL:0 FL:0}



static void Test_BFs0c_BFu0s_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0ll_BFu0ll");
    static BFs0c_BFu0s_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0ll_BFu0ll(Test_BFs0c_BFu0s_BFs0ll_BFu0ll, "BFs0c_BFu0s_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0ll_BFu0s  {
  signed char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0ll_BFu0s) C1{ Fc:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0s_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0ll_BFu0s");
    static BFs0c_BFu0s_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0ll_BFu0s(Test_BFs0c_BFu0s_BFs0ll_BFu0s, "BFs0c_BFu0s_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0s  {
  signed char  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0s) C1{ Fc:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0s");
    static BFs0c_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0s(Test_BFs0c_BFu0s_BFs0s, "BFs0c_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0s_BFs0c  {
  signed char  :0;
  unsigned short  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0s_BFs0c) C1{ Fc:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0s_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0s_BFs0c");
    static BFs0c_BFu0s_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0s_BFs0c(Test_BFs0c_BFu0s_BFs0s_BFs0c, "BFs0c_BFu0s_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0s_BFs0i  {
  signed char  :0;
  unsigned short  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0s_BFs0i) C1{ Fc:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0s_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0s_BFs0i");
    static BFs0c_BFu0s_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0s_BFs0i(Test_BFs0c_BFu0s_BFs0s_BFs0i, "BFs0c_BFu0s_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0s_BFs0ll  {
  signed char  :0;
  unsigned short  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0s_BFs0ll) C1{ Fc:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0s_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0s_BFs0ll");
    static BFs0c_BFu0s_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0s_BFs0ll(Test_BFs0c_BFu0s_BFs0s_BFs0ll, "BFs0c_BFu0s_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0s_BFs0s  {
  signed char  :0;
  unsigned short  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0s_BFs0s) C1{ Fc:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0s_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0s_BFs0s");
    static BFs0c_BFu0s_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0s_BFs0s(Test_BFs0c_BFu0s_BFs0s_BFs0s, "BFs0c_BFu0s_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0s_BFu0c  {
  signed char  :0;
  unsigned short  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0s_BFu0c) C1{ Fc:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0s_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0s_BFu0c");
    static BFs0c_BFu0s_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0s_BFu0c(Test_BFs0c_BFu0s_BFs0s_BFu0c, "BFs0c_BFu0s_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0s_BFu0i  {
  signed char  :0;
  unsigned short  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0s_BFu0i) C1{ Fc:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0s_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0s_BFu0i");
    static BFs0c_BFu0s_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0s_BFu0i(Test_BFs0c_BFu0s_BFs0s_BFu0i, "BFs0c_BFu0s_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0s_BFu0ll  {
  signed char  :0;
  unsigned short  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0s_BFu0ll) C1{ Fc:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0s_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0s_BFu0ll");
    static BFs0c_BFu0s_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0s_BFu0ll(Test_BFs0c_BFu0s_BFs0s_BFu0ll, "BFs0c_BFu0s_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFs0s_BFu0s  {
  signed char  :0;
  unsigned short  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0s_BFs0s_BFu0s) C1{ Fc:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0s_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFs0s_BFu0s");
    static BFs0c_BFu0s_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFs0s_BFu0s(Test_BFs0c_BFu0s_BFs0s_BFu0s, "BFs0c_BFu0s_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0c  {
  signed char  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0c) C1{ Fc:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0c");
    static BFs0c_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0c(Test_BFs0c_BFu0s_BFu0c, "BFs0c_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0c_BFs0c  {
  signed char  :0;
  unsigned short  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0c_BFs0c) C1{ Fc:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0s_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0c_BFs0c");
    static BFs0c_BFu0s_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0c_BFs0c(Test_BFs0c_BFu0s_BFu0c_BFs0c, "BFs0c_BFu0s_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0c_BFs0i  {
  signed char  :0;
  unsigned short  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0c_BFs0i) C1{ Fc:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0s_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0c_BFs0i");
    static BFs0c_BFu0s_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0c_BFs0i(Test_BFs0c_BFu0s_BFu0c_BFs0i, "BFs0c_BFu0s_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0c_BFs0ll  {
  signed char  :0;
  unsigned short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0c_BFs0ll) C1{ Fc:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0s_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0c_BFs0ll");
    static BFs0c_BFu0s_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0c_BFs0ll(Test_BFs0c_BFu0s_BFu0c_BFs0ll, "BFs0c_BFu0s_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0c_BFs0s  {
  signed char  :0;
  unsigned short  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0c_BFs0s) C1{ Fc:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0s_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0c_BFs0s");
    static BFs0c_BFu0s_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0c_BFs0s(Test_BFs0c_BFu0s_BFu0c_BFs0s, "BFs0c_BFu0s_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0c_BFu0c  {
  signed char  :0;
  unsigned short  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0c_BFu0c) C1{ Fc:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0c_BFu0s_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0c_BFu0c");
    static BFs0c_BFu0s_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0c_BFu0c(Test_BFs0c_BFu0s_BFu0c_BFu0c, "BFs0c_BFu0s_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0c_BFu0i  {
  signed char  :0;
  unsigned short  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0c_BFu0i) C1{ Fc:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0c_BFu0s_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0c_BFu0i");
    static BFs0c_BFu0s_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0c_BFu0i(Test_BFs0c_BFu0s_BFu0c_BFu0i, "BFs0c_BFu0s_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0c_BFu0ll  {
  signed char  :0;
  unsigned short  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0c_BFu0ll) C1{ Fc:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0c_BFu0s_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0c_BFu0ll");
    static BFs0c_BFu0s_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0c_BFu0ll(Test_BFs0c_BFu0s_BFu0c_BFu0ll, "BFs0c_BFu0s_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0c_BFu0s  {
  signed char  :0;
  unsigned short  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0c_BFu0s) C1{ Fc:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0c_BFu0s_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0c_BFu0s");
    static BFs0c_BFu0s_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0c_BFu0s(Test_BFs0c_BFu0s_BFu0c_BFu0s, "BFs0c_BFu0s_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0i  {
  signed char  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0i) C1{ Fc:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0i");
    static BFs0c_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0i(Test_BFs0c_BFu0s_BFu0i, "BFs0c_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0i_BFs0c  {
  signed char  :0;
  unsigned short  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0i_BFs0c) C1{ Fc:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0s_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0i_BFs0c");
    static BFs0c_BFu0s_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0i_BFs0c(Test_BFs0c_BFu0s_BFu0i_BFs0c, "BFs0c_BFu0s_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0i_BFs0i  {
  signed char  :0;
  unsigned short  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0i_BFs0i) C1{ Fc:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0s_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0i_BFs0i");
    static BFs0c_BFu0s_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0i_BFs0i(Test_BFs0c_BFu0s_BFu0i_BFs0i, "BFs0c_BFu0s_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0i_BFs0ll  {
  signed char  :0;
  unsigned short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0i_BFs0ll) C1{ Fc:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0s_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0i_BFs0ll");
    static BFs0c_BFu0s_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0i_BFs0ll(Test_BFs0c_BFu0s_BFu0i_BFs0ll, "BFs0c_BFu0s_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0i_BFs0s  {
  signed char  :0;
  unsigned short  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0i_BFs0s) C1{ Fc:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0s_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0i_BFs0s");
    static BFs0c_BFu0s_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0i_BFs0s(Test_BFs0c_BFu0s_BFu0i_BFs0s, "BFs0c_BFu0s_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0i_BFu0c  {
  signed char  :0;
  unsigned short  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0i_BFu0c) C1{ Fc:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0c_BFu0s_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0i_BFu0c");
    static BFs0c_BFu0s_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0i_BFu0c(Test_BFs0c_BFu0s_BFu0i_BFu0c, "BFs0c_BFu0s_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0i_BFu0i  {
  signed char  :0;
  unsigned short  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0i_BFu0i) C1{ Fc:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0c_BFu0s_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0i_BFu0i");
    static BFs0c_BFu0s_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0i_BFu0i(Test_BFs0c_BFu0s_BFu0i_BFu0i, "BFs0c_BFu0s_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0i_BFu0ll  {
  signed char  :0;
  unsigned short  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0i_BFu0ll) C1{ Fc:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0c_BFu0s_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0i_BFu0ll");
    static BFs0c_BFu0s_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0i_BFu0ll(Test_BFs0c_BFu0s_BFu0i_BFu0ll, "BFs0c_BFu0s_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0i_BFu0s  {
  signed char  :0;
  unsigned short  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0i_BFu0s) C1{ Fc:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0c_BFu0s_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0i_BFu0s");
    static BFs0c_BFu0s_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0i_BFu0s(Test_BFs0c_BFu0s_BFu0i_BFu0s, "BFs0c_BFu0s_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0ll  {
  signed char  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0ll) C1{ Fc:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0ll");
    static BFs0c_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0ll(Test_BFs0c_BFu0s_BFu0ll, "BFs0c_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0ll_BFs0c  {
  signed char  :0;
  unsigned short  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0ll_BFs0c) C1{ Fc:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0s_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0ll_BFs0c");
    static BFs0c_BFu0s_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0ll_BFs0c(Test_BFs0c_BFu0s_BFu0ll_BFs0c, "BFs0c_BFu0s_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0ll_BFs0i  {
  signed char  :0;
  unsigned short  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0ll_BFs0i) C1{ Fc:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0s_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0ll_BFs0i");
    static BFs0c_BFu0s_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0ll_BFs0i(Test_BFs0c_BFu0s_BFu0ll_BFs0i, "BFs0c_BFu0s_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0ll_BFs0ll  {
  signed char  :0;
  unsigned short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0ll_BFs0ll) C1{ Fc:0 Fs:0 FL:0 FL:0}



static void Test_BFs0c_BFu0s_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0ll_BFs0ll");
    static BFs0c_BFu0s_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0ll_BFs0ll(Test_BFs0c_BFu0s_BFu0ll_BFs0ll, "BFs0c_BFu0s_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0ll_BFs0s  {
  signed char  :0;
  unsigned short  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0ll_BFs0s) C1{ Fc:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0s_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0ll_BFs0s");
    static BFs0c_BFu0s_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0ll_BFs0s(Test_BFs0c_BFu0s_BFu0ll_BFs0s, "BFs0c_BFu0s_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0ll_BFu0c  {
  signed char  :0;
  unsigned short  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0ll_BFu0c) C1{ Fc:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0c_BFu0s_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0ll_BFu0c");
    static BFs0c_BFu0s_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0ll_BFu0c(Test_BFs0c_BFu0s_BFu0ll_BFu0c, "BFs0c_BFu0s_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0ll_BFu0i  {
  signed char  :0;
  unsigned short  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0ll_BFu0i) C1{ Fc:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0c_BFu0s_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0ll_BFu0i");
    static BFs0c_BFu0s_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0ll_BFu0i(Test_BFs0c_BFu0s_BFu0ll_BFu0i, "BFs0c_BFu0s_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0ll_BFu0ll  {
  signed char  :0;
  unsigned short  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0ll_BFu0ll) C1{ Fc:0 Fs:0 FL:0 FL:0}



static void Test_BFs0c_BFu0s_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0ll_BFu0ll");
    static BFs0c_BFu0s_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0ll_BFu0ll(Test_BFs0c_BFu0s_BFu0ll_BFu0ll, "BFs0c_BFu0s_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0ll_BFu0s  {
  signed char  :0;
  unsigned short  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0ll_BFu0s) C1{ Fc:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0c_BFu0s_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0ll_BFu0s");
    static BFs0c_BFu0s_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0ll_BFu0s(Test_BFs0c_BFu0s_BFu0ll_BFu0s, "BFs0c_BFu0s_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0s  {
  signed char  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0s) C1{ Fc:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0s");
    static BFs0c_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0s(Test_BFs0c_BFu0s_BFu0s, "BFs0c_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0s_BFs0c  {
  signed char  :0;
  unsigned short  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0s_BFs0c) C1{ Fc:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0s_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0s_BFs0c");
    static BFs0c_BFu0s_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0s_BFs0c(Test_BFs0c_BFu0s_BFu0s_BFs0c, "BFs0c_BFu0s_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0s_BFs0i  {
  signed char  :0;
  unsigned short  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0s_BFs0i) C1{ Fc:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0s_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0s_BFs0i");
    static BFs0c_BFu0s_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0s_BFs0i(Test_BFs0c_BFu0s_BFu0s_BFs0i, "BFs0c_BFu0s_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0s_BFs0ll  {
  signed char  :0;
  unsigned short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0s_BFs0ll) C1{ Fc:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0s_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0s_BFs0ll");
    static BFs0c_BFu0s_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0s_BFs0ll(Test_BFs0c_BFu0s_BFu0s_BFs0ll, "BFs0c_BFu0s_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0s_BFs0s  {
  signed char  :0;
  unsigned short  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0s_BFs0s) C1{ Fc:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0s_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0s_BFs0s");
    static BFs0c_BFu0s_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0s_BFs0s(Test_BFs0c_BFu0s_BFu0s_BFs0s, "BFs0c_BFu0s_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0s_BFu0c  {
  signed char  :0;
  unsigned short  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0s_BFu0c) C1{ Fc:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0c_BFu0s_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0s_BFu0c");
    static BFs0c_BFu0s_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0s_BFu0c(Test_BFs0c_BFu0s_BFu0s_BFu0c, "BFs0c_BFu0s_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0s_BFu0i  {
  signed char  :0;
  unsigned short  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0s_BFu0i) C1{ Fc:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0c_BFu0s_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0s_BFu0i");
    static BFs0c_BFu0s_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0s_BFu0i(Test_BFs0c_BFu0s_BFu0s_BFu0i, "BFs0c_BFu0s_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0s_BFu0ll  {
  signed char  :0;
  unsigned short  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0s_BFu0ll) C1{ Fc:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0c_BFu0s_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0s_BFu0ll");
    static BFs0c_BFu0s_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0s_BFu0ll(Test_BFs0c_BFu0s_BFu0s_BFu0ll, "BFs0c_BFu0s_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0c_BFu0s_BFu0s_BFu0s  {
  signed char  :0;
  unsigned short  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0c_BFu0s_BFu0s_BFu0s) C1{ Fc:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0c_BFu0s_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0c_BFu0s_BFu0s_BFu0s");
    static BFs0c_BFu0s_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0c_BFu0s_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0c_BFu0s_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0c_BFu0s_BFu0s_BFu0s(Test_BFs0c_BFu0s_BFu0s_BFu0s, "BFs0c_BFu0s_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c  {
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0c) C1{ Fi:0 Fc:0}



static void Test_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0c");
    static BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c(Test_BFs0i_BFs0c, "BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0c  {
  signed int  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0c) C1{ Fi:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0c");
    static BFs0i_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0c(Test_BFs0i_BFs0c_BFs0c, "BFs0i_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0c_BFs0c  {
  signed int  :0;
  signed char  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0c_BFs0c) C1{ Fi:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0c_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0c_BFs0c");
    static BFs0i_BFs0c_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0c_BFs0c(Test_BFs0i_BFs0c_BFs0c_BFs0c, "BFs0i_BFs0c_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0c_BFs0i  {
  signed int  :0;
  signed char  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0c_BFs0i) C1{ Fi:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0c_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0c_BFs0i");
    static BFs0i_BFs0c_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0c_BFs0i(Test_BFs0i_BFs0c_BFs0c_BFs0i, "BFs0i_BFs0c_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0c_BFs0ll  {
  signed int  :0;
  signed char  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0c_BFs0ll) C1{ Fi:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0c_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0c_BFs0ll");
    static BFs0i_BFs0c_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0c_BFs0ll(Test_BFs0i_BFs0c_BFs0c_BFs0ll, "BFs0i_BFs0c_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0c_BFs0s  {
  signed int  :0;
  signed char  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0c_BFs0s) C1{ Fi:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0c_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0c_BFs0s");
    static BFs0i_BFs0c_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0c_BFs0s(Test_BFs0i_BFs0c_BFs0c_BFs0s, "BFs0i_BFs0c_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0c_BFu0c  {
  signed int  :0;
  signed char  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0c_BFu0c) C1{ Fi:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0c_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0c_BFu0c");
    static BFs0i_BFs0c_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0c_BFu0c(Test_BFs0i_BFs0c_BFs0c_BFu0c, "BFs0i_BFs0c_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0c_BFu0i  {
  signed int  :0;
  signed char  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0c_BFu0i) C1{ Fi:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0c_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0c_BFu0i");
    static BFs0i_BFs0c_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0c_BFu0i(Test_BFs0i_BFs0c_BFs0c_BFu0i, "BFs0i_BFs0c_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0c_BFu0ll  {
  signed int  :0;
  signed char  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0c_BFu0ll) C1{ Fi:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0c_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0c_BFu0ll");
    static BFs0i_BFs0c_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0c_BFu0ll(Test_BFs0i_BFs0c_BFs0c_BFu0ll, "BFs0i_BFs0c_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0c_BFu0s  {
  signed int  :0;
  signed char  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0c_BFu0s) C1{ Fi:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0c_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0c_BFu0s");
    static BFs0i_BFs0c_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0c_BFu0s(Test_BFs0i_BFs0c_BFs0c_BFu0s, "BFs0i_BFs0c_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0i  {
  signed int  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0i) C1{ Fi:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0i");
    static BFs0i_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0i(Test_BFs0i_BFs0c_BFs0i, "BFs0i_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0i_BFs0c  {
  signed int  :0;
  signed char  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0i_BFs0c) C1{ Fi:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0c_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0i_BFs0c");
    static BFs0i_BFs0c_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0i_BFs0c(Test_BFs0i_BFs0c_BFs0i_BFs0c, "BFs0i_BFs0c_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0i_BFs0i  {
  signed int  :0;
  signed char  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0i_BFs0i) C1{ Fi:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0c_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0i_BFs0i");
    static BFs0i_BFs0c_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0i_BFs0i(Test_BFs0i_BFs0c_BFs0i_BFs0i, "BFs0i_BFs0c_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0i_BFs0ll  {
  signed int  :0;
  signed char  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0i_BFs0ll) C1{ Fi:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0c_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0i_BFs0ll");
    static BFs0i_BFs0c_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0i_BFs0ll(Test_BFs0i_BFs0c_BFs0i_BFs0ll, "BFs0i_BFs0c_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0i_BFs0s  {
  signed int  :0;
  signed char  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0i_BFs0s) C1{ Fi:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0c_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0i_BFs0s");
    static BFs0i_BFs0c_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0i_BFs0s(Test_BFs0i_BFs0c_BFs0i_BFs0s, "BFs0i_BFs0c_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0i_BFu0c  {
  signed int  :0;
  signed char  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0i_BFu0c) C1{ Fi:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0c_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0i_BFu0c");
    static BFs0i_BFs0c_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0i_BFu0c(Test_BFs0i_BFs0c_BFs0i_BFu0c, "BFs0i_BFs0c_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0i_BFu0i  {
  signed int  :0;
  signed char  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0i_BFu0i) C1{ Fi:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0c_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0i_BFu0i");
    static BFs0i_BFs0c_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0i_BFu0i(Test_BFs0i_BFs0c_BFs0i_BFu0i, "BFs0i_BFs0c_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0i_BFu0ll  {
  signed int  :0;
  signed char  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0i_BFu0ll) C1{ Fi:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0c_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0i_BFu0ll");
    static BFs0i_BFs0c_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0i_BFu0ll(Test_BFs0i_BFs0c_BFs0i_BFu0ll, "BFs0i_BFs0c_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0i_BFu0s  {
  signed int  :0;
  signed char  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0i_BFu0s) C1{ Fi:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0c_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0i_BFu0s");
    static BFs0i_BFs0c_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0i_BFu0s(Test_BFs0i_BFs0c_BFs0i_BFu0s, "BFs0i_BFs0c_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0ll  {
  signed int  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0ll) C1{ Fi:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0ll");
    static BFs0i_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0ll(Test_BFs0i_BFs0c_BFs0ll, "BFs0i_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0ll_BFs0c  {
  signed int  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0ll_BFs0c) C1{ Fi:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0c_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0ll_BFs0c");
    static BFs0i_BFs0c_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0ll_BFs0c(Test_BFs0i_BFs0c_BFs0ll_BFs0c, "BFs0i_BFs0c_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0ll_BFs0i  {
  signed int  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0ll_BFs0i) C1{ Fi:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0c_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0ll_BFs0i");
    static BFs0i_BFs0c_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0ll_BFs0i(Test_BFs0i_BFs0c_BFs0ll_BFs0i, "BFs0i_BFs0c_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0ll_BFs0ll  {
  signed int  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0ll_BFs0ll) C1{ Fi:0 Fc:0 FL:0 FL:0}



static void Test_BFs0i_BFs0c_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0ll_BFs0ll");
    static BFs0i_BFs0c_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0ll_BFs0ll(Test_BFs0i_BFs0c_BFs0ll_BFs0ll, "BFs0i_BFs0c_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0ll_BFs0s  {
  signed int  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0ll_BFs0s) C1{ Fi:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0c_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0ll_BFs0s");
    static BFs0i_BFs0c_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0ll_BFs0s(Test_BFs0i_BFs0c_BFs0ll_BFs0s, "BFs0i_BFs0c_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0ll_BFu0c  {
  signed int  :0;
  signed char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0ll_BFu0c) C1{ Fi:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0c_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0ll_BFu0c");
    static BFs0i_BFs0c_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0ll_BFu0c(Test_BFs0i_BFs0c_BFs0ll_BFu0c, "BFs0i_BFs0c_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0ll_BFu0i  {
  signed int  :0;
  signed char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0ll_BFu0i) C1{ Fi:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0c_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0ll_BFu0i");
    static BFs0i_BFs0c_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0ll_BFu0i(Test_BFs0i_BFs0c_BFs0ll_BFu0i, "BFs0i_BFs0c_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0ll_BFu0ll  {
  signed int  :0;
  signed char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0ll_BFu0ll) C1{ Fi:0 Fc:0 FL:0 FL:0}



static void Test_BFs0i_BFs0c_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0ll_BFu0ll");
    static BFs0i_BFs0c_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0ll_BFu0ll(Test_BFs0i_BFs0c_BFs0ll_BFu0ll, "BFs0i_BFs0c_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0ll_BFu0s  {
  signed int  :0;
  signed char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0ll_BFu0s) C1{ Fi:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0c_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0ll_BFu0s");
    static BFs0i_BFs0c_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0ll_BFu0s(Test_BFs0i_BFs0c_BFs0ll_BFu0s, "BFs0i_BFs0c_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0s  {
  signed int  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0s) C1{ Fi:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0s");
    static BFs0i_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0s(Test_BFs0i_BFs0c_BFs0s, "BFs0i_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0s_BFs0c  {
  signed int  :0;
  signed char  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0s_BFs0c) C1{ Fi:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0c_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0s_BFs0c");
    static BFs0i_BFs0c_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0s_BFs0c(Test_BFs0i_BFs0c_BFs0s_BFs0c, "BFs0i_BFs0c_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0s_BFs0i  {
  signed int  :0;
  signed char  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0s_BFs0i) C1{ Fi:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0c_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0s_BFs0i");
    static BFs0i_BFs0c_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0s_BFs0i(Test_BFs0i_BFs0c_BFs0s_BFs0i, "BFs0i_BFs0c_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0s_BFs0ll  {
  signed int  :0;
  signed char  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0s_BFs0ll) C1{ Fi:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0c_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0s_BFs0ll");
    static BFs0i_BFs0c_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0s_BFs0ll(Test_BFs0i_BFs0c_BFs0s_BFs0ll, "BFs0i_BFs0c_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0s_BFs0s  {
  signed int  :0;
  signed char  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0s_BFs0s) C1{ Fi:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0c_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0s_BFs0s");
    static BFs0i_BFs0c_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0s_BFs0s(Test_BFs0i_BFs0c_BFs0s_BFs0s, "BFs0i_BFs0c_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0s_BFu0c  {
  signed int  :0;
  signed char  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0s_BFu0c) C1{ Fi:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0c_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0s_BFu0c");
    static BFs0i_BFs0c_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0s_BFu0c(Test_BFs0i_BFs0c_BFs0s_BFu0c, "BFs0i_BFs0c_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0s_BFu0i  {
  signed int  :0;
  signed char  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0s_BFu0i) C1{ Fi:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0c_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0s_BFu0i");
    static BFs0i_BFs0c_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0s_BFu0i(Test_BFs0i_BFs0c_BFs0s_BFu0i, "BFs0i_BFs0c_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0s_BFu0ll  {
  signed int  :0;
  signed char  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0s_BFu0ll) C1{ Fi:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0c_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0s_BFu0ll");
    static BFs0i_BFs0c_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0s_BFu0ll(Test_BFs0i_BFs0c_BFs0s_BFu0ll, "BFs0i_BFs0c_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFs0s_BFu0s  {
  signed int  :0;
  signed char  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0c_BFs0s_BFu0s) C1{ Fi:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0c_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFs0s_BFu0s");
    static BFs0i_BFs0c_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFs0s_BFu0s(Test_BFs0i_BFs0c_BFs0s_BFu0s, "BFs0i_BFs0c_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0c  {
  signed int  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0c) C1{ Fi:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0c");
    static BFs0i_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0c(Test_BFs0i_BFs0c_BFu0c, "BFs0i_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0c_BFs0c  {
  signed int  :0;
  signed char  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0c_BFs0c) C1{ Fi:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0c_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0c_BFs0c");
    static BFs0i_BFs0c_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0c_BFs0c(Test_BFs0i_BFs0c_BFu0c_BFs0c, "BFs0i_BFs0c_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0c_BFs0i  {
  signed int  :0;
  signed char  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0c_BFs0i) C1{ Fi:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0c_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0c_BFs0i");
    static BFs0i_BFs0c_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0c_BFs0i(Test_BFs0i_BFs0c_BFu0c_BFs0i, "BFs0i_BFs0c_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0c_BFs0ll  {
  signed int  :0;
  signed char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0c_BFs0ll) C1{ Fi:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0c_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0c_BFs0ll");
    static BFs0i_BFs0c_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0c_BFs0ll(Test_BFs0i_BFs0c_BFu0c_BFs0ll, "BFs0i_BFs0c_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0c_BFs0s  {
  signed int  :0;
  signed char  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0c_BFs0s) C1{ Fi:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0c_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0c_BFs0s");
    static BFs0i_BFs0c_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0c_BFs0s(Test_BFs0i_BFs0c_BFu0c_BFs0s, "BFs0i_BFs0c_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0c_BFu0c  {
  signed int  :0;
  signed char  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0c_BFu0c) C1{ Fi:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0c_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0c_BFu0c");
    static BFs0i_BFs0c_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0c_BFu0c(Test_BFs0i_BFs0c_BFu0c_BFu0c, "BFs0i_BFs0c_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0c_BFu0i  {
  signed int  :0;
  signed char  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0c_BFu0i) C1{ Fi:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0c_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0c_BFu0i");
    static BFs0i_BFs0c_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0c_BFu0i(Test_BFs0i_BFs0c_BFu0c_BFu0i, "BFs0i_BFs0c_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0c_BFu0ll  {
  signed int  :0;
  signed char  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0c_BFu0ll) C1{ Fi:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0c_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0c_BFu0ll");
    static BFs0i_BFs0c_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0c_BFu0ll(Test_BFs0i_BFs0c_BFu0c_BFu0ll, "BFs0i_BFs0c_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0c_BFu0s  {
  signed int  :0;
  signed char  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0c_BFu0s) C1{ Fi:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0c_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0c_BFu0s");
    static BFs0i_BFs0c_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0c_BFu0s(Test_BFs0i_BFs0c_BFu0c_BFu0s, "BFs0i_BFs0c_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0i  {
  signed int  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0i) C1{ Fi:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0i");
    static BFs0i_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0i(Test_BFs0i_BFs0c_BFu0i, "BFs0i_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0i_BFs0c  {
  signed int  :0;
  signed char  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0i_BFs0c) C1{ Fi:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0c_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0i_BFs0c");
    static BFs0i_BFs0c_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0i_BFs0c(Test_BFs0i_BFs0c_BFu0i_BFs0c, "BFs0i_BFs0c_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0i_BFs0i  {
  signed int  :0;
  signed char  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0i_BFs0i) C1{ Fi:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0c_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0i_BFs0i");
    static BFs0i_BFs0c_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0i_BFs0i(Test_BFs0i_BFs0c_BFu0i_BFs0i, "BFs0i_BFs0c_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0i_BFs0ll  {
  signed int  :0;
  signed char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0i_BFs0ll) C1{ Fi:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0c_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0i_BFs0ll");
    static BFs0i_BFs0c_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0i_BFs0ll(Test_BFs0i_BFs0c_BFu0i_BFs0ll, "BFs0i_BFs0c_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0i_BFs0s  {
  signed int  :0;
  signed char  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0i_BFs0s) C1{ Fi:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0c_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0i_BFs0s");
    static BFs0i_BFs0c_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0i_BFs0s(Test_BFs0i_BFs0c_BFu0i_BFs0s, "BFs0i_BFs0c_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0i_BFu0c  {
  signed int  :0;
  signed char  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0i_BFu0c) C1{ Fi:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0c_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0i_BFu0c");
    static BFs0i_BFs0c_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0i_BFu0c(Test_BFs0i_BFs0c_BFu0i_BFu0c, "BFs0i_BFs0c_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0i_BFu0i  {
  signed int  :0;
  signed char  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0i_BFu0i) C1{ Fi:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0c_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0i_BFu0i");
    static BFs0i_BFs0c_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0i_BFu0i(Test_BFs0i_BFs0c_BFu0i_BFu0i, "BFs0i_BFs0c_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0i_BFu0ll  {
  signed int  :0;
  signed char  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0i_BFu0ll) C1{ Fi:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0c_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0i_BFu0ll");
    static BFs0i_BFs0c_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0i_BFu0ll(Test_BFs0i_BFs0c_BFu0i_BFu0ll, "BFs0i_BFs0c_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0i_BFu0s  {
  signed int  :0;
  signed char  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0i_BFu0s) C1{ Fi:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0c_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0i_BFu0s");
    static BFs0i_BFs0c_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0i_BFu0s(Test_BFs0i_BFs0c_BFu0i_BFu0s, "BFs0i_BFs0c_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0ll  {
  signed int  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0ll) C1{ Fi:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0ll");
    static BFs0i_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0ll(Test_BFs0i_BFs0c_BFu0ll, "BFs0i_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0ll_BFs0c  {
  signed int  :0;
  signed char  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0ll_BFs0c) C1{ Fi:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0c_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0ll_BFs0c");
    static BFs0i_BFs0c_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0ll_BFs0c(Test_BFs0i_BFs0c_BFu0ll_BFs0c, "BFs0i_BFs0c_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0ll_BFs0i  {
  signed int  :0;
  signed char  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0ll_BFs0i) C1{ Fi:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0c_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0ll_BFs0i");
    static BFs0i_BFs0c_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0ll_BFs0i(Test_BFs0i_BFs0c_BFu0ll_BFs0i, "BFs0i_BFs0c_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0ll_BFs0ll  {
  signed int  :0;
  signed char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0ll_BFs0ll) C1{ Fi:0 Fc:0 FL:0 FL:0}



static void Test_BFs0i_BFs0c_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0ll_BFs0ll");
    static BFs0i_BFs0c_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0ll_BFs0ll(Test_BFs0i_BFs0c_BFu0ll_BFs0ll, "BFs0i_BFs0c_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0ll_BFs0s  {
  signed int  :0;
  signed char  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0ll_BFs0s) C1{ Fi:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0c_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0ll_BFs0s");
    static BFs0i_BFs0c_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0ll_BFs0s(Test_BFs0i_BFs0c_BFu0ll_BFs0s, "BFs0i_BFs0c_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0ll_BFu0c  {
  signed int  :0;
  signed char  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0ll_BFu0c) C1{ Fi:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0c_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0ll_BFu0c");
    static BFs0i_BFs0c_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0ll_BFu0c(Test_BFs0i_BFs0c_BFu0ll_BFu0c, "BFs0i_BFs0c_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0ll_BFu0i  {
  signed int  :0;
  signed char  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0ll_BFu0i) C1{ Fi:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0c_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0ll_BFu0i");
    static BFs0i_BFs0c_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0ll_BFu0i(Test_BFs0i_BFs0c_BFu0ll_BFu0i, "BFs0i_BFs0c_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0ll_BFu0ll  {
  signed int  :0;
  signed char  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0ll_BFu0ll) C1{ Fi:0 Fc:0 FL:0 FL:0}



static void Test_BFs0i_BFs0c_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0ll_BFu0ll");
    static BFs0i_BFs0c_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0ll_BFu0ll(Test_BFs0i_BFs0c_BFu0ll_BFu0ll, "BFs0i_BFs0c_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0ll_BFu0s  {
  signed int  :0;
  signed char  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0ll_BFu0s) C1{ Fi:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0c_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0ll_BFu0s");
    static BFs0i_BFs0c_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0ll_BFu0s(Test_BFs0i_BFs0c_BFu0ll_BFu0s, "BFs0i_BFs0c_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0s  {
  signed int  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0s) C1{ Fi:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0s");
    static BFs0i_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0s(Test_BFs0i_BFs0c_BFu0s, "BFs0i_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0s_BFs0c  {
  signed int  :0;
  signed char  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0s_BFs0c) C1{ Fi:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0c_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0s_BFs0c");
    static BFs0i_BFs0c_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0s_BFs0c(Test_BFs0i_BFs0c_BFu0s_BFs0c, "BFs0i_BFs0c_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0s_BFs0i  {
  signed int  :0;
  signed char  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0s_BFs0i) C1{ Fi:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0c_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0s_BFs0i");
    static BFs0i_BFs0c_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0s_BFs0i(Test_BFs0i_BFs0c_BFu0s_BFs0i, "BFs0i_BFs0c_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0s_BFs0ll  {
  signed int  :0;
  signed char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0s_BFs0ll) C1{ Fi:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0c_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0s_BFs0ll");
    static BFs0i_BFs0c_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0s_BFs0ll(Test_BFs0i_BFs0c_BFu0s_BFs0ll, "BFs0i_BFs0c_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0s_BFs0s  {
  signed int  :0;
  signed char  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0s_BFs0s) C1{ Fi:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0c_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0s_BFs0s");
    static BFs0i_BFs0c_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0s_BFs0s(Test_BFs0i_BFs0c_BFu0s_BFs0s, "BFs0i_BFs0c_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0s_BFu0c  {
  signed int  :0;
  signed char  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0s_BFu0c) C1{ Fi:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0c_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0s_BFu0c");
    static BFs0i_BFs0c_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0s_BFu0c(Test_BFs0i_BFs0c_BFu0s_BFu0c, "BFs0i_BFs0c_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0s_BFu0i  {
  signed int  :0;
  signed char  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0s_BFu0i) C1{ Fi:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0c_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0s_BFu0i");
    static BFs0i_BFs0c_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0s_BFu0i(Test_BFs0i_BFs0c_BFu0s_BFu0i, "BFs0i_BFs0c_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0s_BFu0ll  {
  signed int  :0;
  signed char  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0s_BFu0ll) C1{ Fi:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0c_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0s_BFu0ll");
    static BFs0i_BFs0c_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0s_BFu0ll(Test_BFs0i_BFs0c_BFu0s_BFu0ll, "BFs0i_BFs0c_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0c_BFu0s_BFu0s  {
  signed int  :0;
  signed char  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0c_BFu0s_BFu0s) C1{ Fi:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0c_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0c_BFu0s_BFu0s");
    static BFs0i_BFs0c_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0c_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0c_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0c_BFu0s_BFu0s(Test_BFs0i_BFs0c_BFu0s_BFu0s, "BFs0i_BFs0c_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i  {
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0i) C1{ Fi:0 Fi:0}



static void Test_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0i");
    static BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i(Test_BFs0i_BFs0i, "BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0c  {
  signed int  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0c) C1{ Fi:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0c");
    static BFs0i_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0c(Test_BFs0i_BFs0i_BFs0c, "BFs0i_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0c_BFs0c  {
  signed int  :0;
  signed int  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0c_BFs0c) C1{ Fi:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0i_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0c_BFs0c");
    static BFs0i_BFs0i_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0c_BFs0c(Test_BFs0i_BFs0i_BFs0c_BFs0c, "BFs0i_BFs0i_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0c_BFs0i  {
  signed int  :0;
  signed int  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0c_BFs0i) C1{ Fi:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0i_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0c_BFs0i");
    static BFs0i_BFs0i_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0c_BFs0i(Test_BFs0i_BFs0i_BFs0c_BFs0i, "BFs0i_BFs0i_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0c_BFs0ll  {
  signed int  :0;
  signed int  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0c_BFs0ll) C1{ Fi:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0i_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0c_BFs0ll");
    static BFs0i_BFs0i_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0c_BFs0ll(Test_BFs0i_BFs0i_BFs0c_BFs0ll, "BFs0i_BFs0i_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0c_BFs0s  {
  signed int  :0;
  signed int  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0c_BFs0s) C1{ Fi:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0i_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0c_BFs0s");
    static BFs0i_BFs0i_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0c_BFs0s(Test_BFs0i_BFs0i_BFs0c_BFs0s, "BFs0i_BFs0i_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0c_BFu0c  {
  signed int  :0;
  signed int  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0c_BFu0c) C1{ Fi:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0i_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0c_BFu0c");
    static BFs0i_BFs0i_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0c_BFu0c(Test_BFs0i_BFs0i_BFs0c_BFu0c, "BFs0i_BFs0i_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0c_BFu0i  {
  signed int  :0;
  signed int  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0c_BFu0i) C1{ Fi:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0i_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0c_BFu0i");
    static BFs0i_BFs0i_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0c_BFu0i(Test_BFs0i_BFs0i_BFs0c_BFu0i, "BFs0i_BFs0i_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0c_BFu0ll  {
  signed int  :0;
  signed int  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0c_BFu0ll) C1{ Fi:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0i_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0c_BFu0ll");
    static BFs0i_BFs0i_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0c_BFu0ll(Test_BFs0i_BFs0i_BFs0c_BFu0ll, "BFs0i_BFs0i_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0c_BFu0s  {
  signed int  :0;
  signed int  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0c_BFu0s) C1{ Fi:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0i_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0c_BFu0s");
    static BFs0i_BFs0i_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0c_BFu0s(Test_BFs0i_BFs0i_BFs0c_BFu0s, "BFs0i_BFs0i_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0i  {
  signed int  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0i) C1{ Fi:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0i");
    static BFs0i_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0i(Test_BFs0i_BFs0i_BFs0i, "BFs0i_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0i_BFs0c  {
  signed int  :0;
  signed int  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0i_BFs0c) C1{ Fi:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0i_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0i_BFs0c");
    static BFs0i_BFs0i_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0i_BFs0c(Test_BFs0i_BFs0i_BFs0i_BFs0c, "BFs0i_BFs0i_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0i_BFs0i  {
  signed int  :0;
  signed int  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0i_BFs0i) C1{ Fi:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0i_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0i_BFs0i");
    static BFs0i_BFs0i_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0i_BFs0i(Test_BFs0i_BFs0i_BFs0i_BFs0i, "BFs0i_BFs0i_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0i_BFs0ll  {
  signed int  :0;
  signed int  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0i_BFs0ll) C1{ Fi:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0i_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0i_BFs0ll");
    static BFs0i_BFs0i_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0i_BFs0ll(Test_BFs0i_BFs0i_BFs0i_BFs0ll, "BFs0i_BFs0i_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0i_BFs0s  {
  signed int  :0;
  signed int  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0i_BFs0s) C1{ Fi:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0i_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0i_BFs0s");
    static BFs0i_BFs0i_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0i_BFs0s(Test_BFs0i_BFs0i_BFs0i_BFs0s, "BFs0i_BFs0i_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0i_BFu0c  {
  signed int  :0;
  signed int  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0i_BFu0c) C1{ Fi:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0i_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0i_BFu0c");
    static BFs0i_BFs0i_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0i_BFu0c(Test_BFs0i_BFs0i_BFs0i_BFu0c, "BFs0i_BFs0i_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0i_BFu0i  {
  signed int  :0;
  signed int  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0i_BFu0i) C1{ Fi:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0i_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0i_BFu0i");
    static BFs0i_BFs0i_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0i_BFu0i(Test_BFs0i_BFs0i_BFs0i_BFu0i, "BFs0i_BFs0i_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0i_BFu0ll  {
  signed int  :0;
  signed int  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0i_BFu0ll) C1{ Fi:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0i_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0i_BFu0ll");
    static BFs0i_BFs0i_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0i_BFu0ll(Test_BFs0i_BFs0i_BFs0i_BFu0ll, "BFs0i_BFs0i_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0i_BFu0s  {
  signed int  :0;
  signed int  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0i_BFu0s) C1{ Fi:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0i_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0i_BFu0s");
    static BFs0i_BFs0i_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0i_BFu0s(Test_BFs0i_BFs0i_BFs0i_BFu0s, "BFs0i_BFs0i_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0ll  {
  signed int  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0ll) C1{ Fi:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0ll");
    static BFs0i_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0ll(Test_BFs0i_BFs0i_BFs0ll, "BFs0i_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0ll_BFs0c  {
  signed int  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0ll_BFs0c) C1{ Fi:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0i_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0ll_BFs0c");
    static BFs0i_BFs0i_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0ll_BFs0c(Test_BFs0i_BFs0i_BFs0ll_BFs0c, "BFs0i_BFs0i_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0ll_BFs0i  {
  signed int  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0ll_BFs0i) C1{ Fi:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0i_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0ll_BFs0i");
    static BFs0i_BFs0i_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0ll_BFs0i(Test_BFs0i_BFs0i_BFs0ll_BFs0i, "BFs0i_BFs0i_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0ll_BFs0ll  {
  signed int  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0ll_BFs0ll) C1{ Fi:0 Fi:0 FL:0 FL:0}



static void Test_BFs0i_BFs0i_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0ll_BFs0ll");
    static BFs0i_BFs0i_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0ll_BFs0ll(Test_BFs0i_BFs0i_BFs0ll_BFs0ll, "BFs0i_BFs0i_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0ll_BFs0s  {
  signed int  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0ll_BFs0s) C1{ Fi:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0i_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0ll_BFs0s");
    static BFs0i_BFs0i_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0ll_BFs0s(Test_BFs0i_BFs0i_BFs0ll_BFs0s, "BFs0i_BFs0i_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0ll_BFu0c  {
  signed int  :0;
  signed int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0ll_BFu0c) C1{ Fi:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0i_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0ll_BFu0c");
    static BFs0i_BFs0i_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0ll_BFu0c(Test_BFs0i_BFs0i_BFs0ll_BFu0c, "BFs0i_BFs0i_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0ll_BFu0i  {
  signed int  :0;
  signed int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0ll_BFu0i) C1{ Fi:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0i_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0ll_BFu0i");
    static BFs0i_BFs0i_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0ll_BFu0i(Test_BFs0i_BFs0i_BFs0ll_BFu0i, "BFs0i_BFs0i_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0ll_BFu0ll  {
  signed int  :0;
  signed int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0ll_BFu0ll) C1{ Fi:0 Fi:0 FL:0 FL:0}



static void Test_BFs0i_BFs0i_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0ll_BFu0ll");
    static BFs0i_BFs0i_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0ll_BFu0ll(Test_BFs0i_BFs0i_BFs0ll_BFu0ll, "BFs0i_BFs0i_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0ll_BFu0s  {
  signed int  :0;
  signed int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0ll_BFu0s) C1{ Fi:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0i_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0ll_BFu0s");
    static BFs0i_BFs0i_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0ll_BFu0s(Test_BFs0i_BFs0i_BFs0ll_BFu0s, "BFs0i_BFs0i_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0s  {
  signed int  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0s) C1{ Fi:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0s");
    static BFs0i_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0s(Test_BFs0i_BFs0i_BFs0s, "BFs0i_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0s_BFs0c  {
  signed int  :0;
  signed int  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0s_BFs0c) C1{ Fi:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0i_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0s_BFs0c");
    static BFs0i_BFs0i_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0s_BFs0c(Test_BFs0i_BFs0i_BFs0s_BFs0c, "BFs0i_BFs0i_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0s_BFs0i  {
  signed int  :0;
  signed int  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0s_BFs0i) C1{ Fi:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0i_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0s_BFs0i");
    static BFs0i_BFs0i_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0s_BFs0i(Test_BFs0i_BFs0i_BFs0s_BFs0i, "BFs0i_BFs0i_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0s_BFs0ll  {
  signed int  :0;
  signed int  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0s_BFs0ll) C1{ Fi:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0i_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0s_BFs0ll");
    static BFs0i_BFs0i_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0s_BFs0ll(Test_BFs0i_BFs0i_BFs0s_BFs0ll, "BFs0i_BFs0i_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0s_BFs0s  {
  signed int  :0;
  signed int  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0s_BFs0s) C1{ Fi:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0i_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0s_BFs0s");
    static BFs0i_BFs0i_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0s_BFs0s(Test_BFs0i_BFs0i_BFs0s_BFs0s, "BFs0i_BFs0i_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0s_BFu0c  {
  signed int  :0;
  signed int  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0s_BFu0c) C1{ Fi:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0i_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0s_BFu0c");
    static BFs0i_BFs0i_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0s_BFu0c(Test_BFs0i_BFs0i_BFs0s_BFu0c, "BFs0i_BFs0i_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0s_BFu0i  {
  signed int  :0;
  signed int  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0s_BFu0i) C1{ Fi:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0i_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0s_BFu0i");
    static BFs0i_BFs0i_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0s_BFu0i(Test_BFs0i_BFs0i_BFs0s_BFu0i, "BFs0i_BFs0i_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0s_BFu0ll  {
  signed int  :0;
  signed int  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0s_BFu0ll) C1{ Fi:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0i_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0s_BFu0ll");
    static BFs0i_BFs0i_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0s_BFu0ll(Test_BFs0i_BFs0i_BFs0s_BFu0ll, "BFs0i_BFs0i_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFs0s_BFu0s  {
  signed int  :0;
  signed int  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0i_BFs0s_BFu0s) C1{ Fi:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0i_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFs0s_BFu0s");
    static BFs0i_BFs0i_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFs0s_BFu0s(Test_BFs0i_BFs0i_BFs0s_BFu0s, "BFs0i_BFs0i_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0c  {
  signed int  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0c) C1{ Fi:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0c");
    static BFs0i_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0c(Test_BFs0i_BFs0i_BFu0c, "BFs0i_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0c_BFs0c  {
  signed int  :0;
  signed int  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0c_BFs0c) C1{ Fi:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0i_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0c_BFs0c");
    static BFs0i_BFs0i_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0c_BFs0c(Test_BFs0i_BFs0i_BFu0c_BFs0c, "BFs0i_BFs0i_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0c_BFs0i  {
  signed int  :0;
  signed int  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0c_BFs0i) C1{ Fi:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0i_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0c_BFs0i");
    static BFs0i_BFs0i_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0c_BFs0i(Test_BFs0i_BFs0i_BFu0c_BFs0i, "BFs0i_BFs0i_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0c_BFs0ll  {
  signed int  :0;
  signed int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0c_BFs0ll) C1{ Fi:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0i_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0c_BFs0ll");
    static BFs0i_BFs0i_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0c_BFs0ll(Test_BFs0i_BFs0i_BFu0c_BFs0ll, "BFs0i_BFs0i_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0c_BFs0s  {
  signed int  :0;
  signed int  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0c_BFs0s) C1{ Fi:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0i_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0c_BFs0s");
    static BFs0i_BFs0i_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0c_BFs0s(Test_BFs0i_BFs0i_BFu0c_BFs0s, "BFs0i_BFs0i_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0c_BFu0c  {
  signed int  :0;
  signed int  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0c_BFu0c) C1{ Fi:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0i_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0c_BFu0c");
    static BFs0i_BFs0i_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0c_BFu0c(Test_BFs0i_BFs0i_BFu0c_BFu0c, "BFs0i_BFs0i_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0c_BFu0i  {
  signed int  :0;
  signed int  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0c_BFu0i) C1{ Fi:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0i_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0c_BFu0i");
    static BFs0i_BFs0i_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0c_BFu0i(Test_BFs0i_BFs0i_BFu0c_BFu0i, "BFs0i_BFs0i_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0c_BFu0ll  {
  signed int  :0;
  signed int  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0c_BFu0ll) C1{ Fi:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0i_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0c_BFu0ll");
    static BFs0i_BFs0i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0c_BFu0ll(Test_BFs0i_BFs0i_BFu0c_BFu0ll, "BFs0i_BFs0i_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0c_BFu0s  {
  signed int  :0;
  signed int  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0c_BFu0s) C1{ Fi:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0i_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0c_BFu0s");
    static BFs0i_BFs0i_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0c_BFu0s(Test_BFs0i_BFs0i_BFu0c_BFu0s, "BFs0i_BFs0i_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0i  {
  signed int  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0i) C1{ Fi:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0i");
    static BFs0i_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0i(Test_BFs0i_BFs0i_BFu0i, "BFs0i_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0i_BFs0c  {
  signed int  :0;
  signed int  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0i_BFs0c) C1{ Fi:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0i_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0i_BFs0c");
    static BFs0i_BFs0i_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0i_BFs0c(Test_BFs0i_BFs0i_BFu0i_BFs0c, "BFs0i_BFs0i_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0i_BFs0i  {
  signed int  :0;
  signed int  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0i_BFs0i) C1{ Fi:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0i_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0i_BFs0i");
    static BFs0i_BFs0i_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0i_BFs0i(Test_BFs0i_BFs0i_BFu0i_BFs0i, "BFs0i_BFs0i_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0i_BFs0ll  {
  signed int  :0;
  signed int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0i_BFs0ll) C1{ Fi:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0i_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0i_BFs0ll");
    static BFs0i_BFs0i_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0i_BFs0ll(Test_BFs0i_BFs0i_BFu0i_BFs0ll, "BFs0i_BFs0i_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0i_BFs0s  {
  signed int  :0;
  signed int  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0i_BFs0s) C1{ Fi:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0i_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0i_BFs0s");
    static BFs0i_BFs0i_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0i_BFs0s(Test_BFs0i_BFs0i_BFu0i_BFs0s, "BFs0i_BFs0i_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0i_BFu0c  {
  signed int  :0;
  signed int  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0i_BFu0c) C1{ Fi:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0i_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0i_BFu0c");
    static BFs0i_BFs0i_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0i_BFu0c(Test_BFs0i_BFs0i_BFu0i_BFu0c, "BFs0i_BFs0i_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0i_BFu0i  {
  signed int  :0;
  signed int  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0i_BFu0i) C1{ Fi:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0i_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0i_BFu0i");
    static BFs0i_BFs0i_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0i_BFu0i(Test_BFs0i_BFs0i_BFu0i_BFu0i, "BFs0i_BFs0i_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0i_BFu0ll  {
  signed int  :0;
  signed int  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0i_BFu0ll) C1{ Fi:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0i_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0i_BFu0ll");
    static BFs0i_BFs0i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0i_BFu0ll(Test_BFs0i_BFs0i_BFu0i_BFu0ll, "BFs0i_BFs0i_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0i_BFu0s  {
  signed int  :0;
  signed int  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0i_BFu0s) C1{ Fi:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0i_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0i_BFu0s");
    static BFs0i_BFs0i_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0i_BFu0s(Test_BFs0i_BFs0i_BFu0i_BFu0s, "BFs0i_BFs0i_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0ll  {
  signed int  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0ll) C1{ Fi:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0ll");
    static BFs0i_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0ll(Test_BFs0i_BFs0i_BFu0ll, "BFs0i_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0ll_BFs0c  {
  signed int  :0;
  signed int  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0ll_BFs0c) C1{ Fi:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0i_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0ll_BFs0c");
    static BFs0i_BFs0i_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0ll_BFs0c(Test_BFs0i_BFs0i_BFu0ll_BFs0c, "BFs0i_BFs0i_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0ll_BFs0i  {
  signed int  :0;
  signed int  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0ll_BFs0i) C1{ Fi:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0i_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0ll_BFs0i");
    static BFs0i_BFs0i_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0ll_BFs0i(Test_BFs0i_BFs0i_BFu0ll_BFs0i, "BFs0i_BFs0i_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0ll_BFs0ll  {
  signed int  :0;
  signed int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0ll_BFs0ll) C1{ Fi:0 Fi:0 FL:0 FL:0}



static void Test_BFs0i_BFs0i_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0ll_BFs0ll");
    static BFs0i_BFs0i_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0ll_BFs0ll(Test_BFs0i_BFs0i_BFu0ll_BFs0ll, "BFs0i_BFs0i_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0ll_BFs0s  {
  signed int  :0;
  signed int  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0ll_BFs0s) C1{ Fi:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0i_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0ll_BFs0s");
    static BFs0i_BFs0i_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0ll_BFs0s(Test_BFs0i_BFs0i_BFu0ll_BFs0s, "BFs0i_BFs0i_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0ll_BFu0c  {
  signed int  :0;
  signed int  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0ll_BFu0c) C1{ Fi:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0i_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0ll_BFu0c");
    static BFs0i_BFs0i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0ll_BFu0c(Test_BFs0i_BFs0i_BFu0ll_BFu0c, "BFs0i_BFs0i_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0ll_BFu0i  {
  signed int  :0;
  signed int  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0ll_BFu0i) C1{ Fi:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0i_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0ll_BFu0i");
    static BFs0i_BFs0i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0ll_BFu0i(Test_BFs0i_BFs0i_BFu0ll_BFu0i, "BFs0i_BFs0i_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0ll_BFu0ll  {
  signed int  :0;
  signed int  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0ll_BFu0ll) C1{ Fi:0 Fi:0 FL:0 FL:0}



static void Test_BFs0i_BFs0i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0ll_BFu0ll");
    static BFs0i_BFs0i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0ll_BFu0ll(Test_BFs0i_BFs0i_BFu0ll_BFu0ll, "BFs0i_BFs0i_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0ll_BFu0s  {
  signed int  :0;
  signed int  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0ll_BFu0s) C1{ Fi:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0i_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0ll_BFu0s");
    static BFs0i_BFs0i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0ll_BFu0s(Test_BFs0i_BFs0i_BFu0ll_BFu0s, "BFs0i_BFs0i_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0s  {
  signed int  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0s) C1{ Fi:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0s");
    static BFs0i_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0s(Test_BFs0i_BFs0i_BFu0s, "BFs0i_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0s_BFs0c  {
  signed int  :0;
  signed int  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0s_BFs0c) C1{ Fi:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0i_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0s_BFs0c");
    static BFs0i_BFs0i_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0s_BFs0c(Test_BFs0i_BFs0i_BFu0s_BFs0c, "BFs0i_BFs0i_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0s_BFs0i  {
  signed int  :0;
  signed int  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0s_BFs0i) C1{ Fi:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0i_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0s_BFs0i");
    static BFs0i_BFs0i_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0s_BFs0i(Test_BFs0i_BFs0i_BFu0s_BFs0i, "BFs0i_BFs0i_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0s_BFs0ll  {
  signed int  :0;
  signed int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0s_BFs0ll) C1{ Fi:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0i_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0s_BFs0ll");
    static BFs0i_BFs0i_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0s_BFs0ll(Test_BFs0i_BFs0i_BFu0s_BFs0ll, "BFs0i_BFs0i_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0s_BFs0s  {
  signed int  :0;
  signed int  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0s_BFs0s) C1{ Fi:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0i_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0s_BFs0s");
    static BFs0i_BFs0i_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0s_BFs0s(Test_BFs0i_BFs0i_BFu0s_BFs0s, "BFs0i_BFs0i_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0s_BFu0c  {
  signed int  :0;
  signed int  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0s_BFu0c) C1{ Fi:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0i_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0s_BFu0c");
    static BFs0i_BFs0i_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0s_BFu0c(Test_BFs0i_BFs0i_BFu0s_BFu0c, "BFs0i_BFs0i_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0s_BFu0i  {
  signed int  :0;
  signed int  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0s_BFu0i) C1{ Fi:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0i_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0s_BFu0i");
    static BFs0i_BFs0i_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0s_BFu0i(Test_BFs0i_BFs0i_BFu0s_BFu0i, "BFs0i_BFs0i_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0s_BFu0ll  {
  signed int  :0;
  signed int  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0s_BFu0ll) C1{ Fi:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0i_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0s_BFu0ll");
    static BFs0i_BFs0i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0s_BFu0ll(Test_BFs0i_BFs0i_BFu0s_BFu0ll, "BFs0i_BFs0i_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0i_BFu0s_BFu0s  {
  signed int  :0;
  signed int  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0i_BFu0s_BFu0s) C1{ Fi:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0i_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0i_BFu0s_BFu0s");
    static BFs0i_BFs0i_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0i_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0i_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0i_BFu0s_BFu0s(Test_BFs0i_BFs0i_BFu0s_BFu0s, "BFs0i_BFs0i_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll  {
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0ll) C1{ Fi:0 FL:0}



static void Test_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll");
    static BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll(Test_BFs0i_BFs0ll, "BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0c  {
  signed int  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0c) C1{ Fi:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0c");
    static BFs0i_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0c(Test_BFs0i_BFs0ll_BFs0c, "BFs0i_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0c_BFs0c  {
  signed int  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0c_BFs0c) C1{ Fi:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0c_BFs0c");
    static BFs0i_BFs0ll_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0c_BFs0c(Test_BFs0i_BFs0ll_BFs0c_BFs0c, "BFs0i_BFs0ll_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0c_BFs0i  {
  signed int  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0c_BFs0i) C1{ Fi:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0c_BFs0i");
    static BFs0i_BFs0ll_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0c_BFs0i(Test_BFs0i_BFs0ll_BFs0c_BFs0i, "BFs0i_BFs0ll_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0c_BFs0ll  {
  signed int  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0c_BFs0ll) C1{ Fi:0 FL:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0ll_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0c_BFs0ll");
    static BFs0i_BFs0ll_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0c_BFs0ll(Test_BFs0i_BFs0ll_BFs0c_BFs0ll, "BFs0i_BFs0ll_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0c_BFs0s  {
  signed int  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0c_BFs0s) C1{ Fi:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0c_BFs0s");
    static BFs0i_BFs0ll_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0c_BFs0s(Test_BFs0i_BFs0ll_BFs0c_BFs0s, "BFs0i_BFs0ll_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0c_BFu0c  {
  signed int  :0;
  signed __tsi64  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0c_BFu0c) C1{ Fi:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0c_BFu0c");
    static BFs0i_BFs0ll_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0c_BFu0c(Test_BFs0i_BFs0ll_BFs0c_BFu0c, "BFs0i_BFs0ll_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0c_BFu0i  {
  signed int  :0;
  signed __tsi64  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0c_BFu0i) C1{ Fi:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0c_BFu0i");
    static BFs0i_BFs0ll_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0c_BFu0i(Test_BFs0i_BFs0ll_BFs0c_BFu0i, "BFs0i_BFs0ll_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0c_BFu0ll  {
  signed int  :0;
  signed __tsi64  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0c_BFu0ll) C1{ Fi:0 FL:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0ll_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0c_BFu0ll");
    static BFs0i_BFs0ll_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0c_BFu0ll(Test_BFs0i_BFs0ll_BFs0c_BFu0ll, "BFs0i_BFs0ll_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0c_BFu0s  {
  signed int  :0;
  signed __tsi64  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0c_BFu0s) C1{ Fi:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0c_BFu0s");
    static BFs0i_BFs0ll_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0c_BFu0s(Test_BFs0i_BFs0ll_BFs0c_BFu0s, "BFs0i_BFs0ll_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0i  {
  signed int  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0i) C1{ Fi:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0i");
    static BFs0i_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0i(Test_BFs0i_BFs0ll_BFs0i, "BFs0i_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0i_BFs0c  {
  signed int  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0i_BFs0c) C1{ Fi:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0i_BFs0c");
    static BFs0i_BFs0ll_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0i_BFs0c(Test_BFs0i_BFs0ll_BFs0i_BFs0c, "BFs0i_BFs0ll_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0i_BFs0i  {
  signed int  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0i_BFs0i) C1{ Fi:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0i_BFs0i");
    static BFs0i_BFs0ll_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0i_BFs0i(Test_BFs0i_BFs0ll_BFs0i_BFs0i, "BFs0i_BFs0ll_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0i_BFs0ll  {
  signed int  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0i_BFs0ll) C1{ Fi:0 FL:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0ll_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0i_BFs0ll");
    static BFs0i_BFs0ll_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0i_BFs0ll(Test_BFs0i_BFs0ll_BFs0i_BFs0ll, "BFs0i_BFs0ll_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0i_BFs0s  {
  signed int  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0i_BFs0s) C1{ Fi:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0i_BFs0s");
    static BFs0i_BFs0ll_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0i_BFs0s(Test_BFs0i_BFs0ll_BFs0i_BFs0s, "BFs0i_BFs0ll_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0i_BFu0c  {
  signed int  :0;
  signed __tsi64  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0i_BFu0c) C1{ Fi:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0i_BFu0c");
    static BFs0i_BFs0ll_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0i_BFu0c(Test_BFs0i_BFs0ll_BFs0i_BFu0c, "BFs0i_BFs0ll_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0i_BFu0i  {
  signed int  :0;
  signed __tsi64  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0i_BFu0i) C1{ Fi:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0i_BFu0i");
    static BFs0i_BFs0ll_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0i_BFu0i(Test_BFs0i_BFs0ll_BFs0i_BFu0i, "BFs0i_BFs0ll_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0i_BFu0ll  {
  signed int  :0;
  signed __tsi64  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0i_BFu0ll) C1{ Fi:0 FL:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0ll_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0i_BFu0ll");
    static BFs0i_BFs0ll_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0i_BFu0ll(Test_BFs0i_BFs0ll_BFs0i_BFu0ll, "BFs0i_BFs0ll_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0i_BFu0s  {
  signed int  :0;
  signed __tsi64  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0i_BFu0s) C1{ Fi:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0i_BFu0s");
    static BFs0i_BFs0ll_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0i_BFu0s(Test_BFs0i_BFs0ll_BFs0i_BFu0s, "BFs0i_BFs0ll_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0ll  {
  signed int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0ll) C1{ Fi:0 FL:0 FL:0}



static void Test_BFs0i_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0ll");
    static BFs0i_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0ll(Test_BFs0i_BFs0ll_BFs0ll, "BFs0i_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0ll_BFs0c  {
  signed int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0ll_BFs0c) C1{ Fi:0 FL:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0ll_BFs0c");
    static BFs0i_BFs0ll_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0ll_BFs0c(Test_BFs0i_BFs0ll_BFs0ll_BFs0c, "BFs0i_BFs0ll_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0ll_BFs0i  {
  signed int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0ll_BFs0i) C1{ Fi:0 FL:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0ll_BFs0i");
    static BFs0i_BFs0ll_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0ll_BFs0i(Test_BFs0i_BFs0ll_BFs0ll_BFs0i, "BFs0i_BFs0ll_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0ll_BFs0ll  {
  signed int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0ll_BFs0ll) C1{ Fi:0 FL:0 FL:0 FL:0}



static void Test_BFs0i_BFs0ll_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0ll_BFs0ll");
    static BFs0i_BFs0ll_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0ll_BFs0ll(Test_BFs0i_BFs0ll_BFs0ll_BFs0ll, "BFs0i_BFs0ll_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0ll_BFs0s  {
  signed int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0ll_BFs0s) C1{ Fi:0 FL:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0ll_BFs0s");
    static BFs0i_BFs0ll_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0ll_BFs0s(Test_BFs0i_BFs0ll_BFs0ll_BFs0s, "BFs0i_BFs0ll_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0ll_BFu0c  {
  signed int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0ll_BFu0c) C1{ Fi:0 FL:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0ll_BFu0c");
    static BFs0i_BFs0ll_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0ll_BFu0c(Test_BFs0i_BFs0ll_BFs0ll_BFu0c, "BFs0i_BFs0ll_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0ll_BFu0i  {
  signed int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0ll_BFu0i) C1{ Fi:0 FL:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0ll_BFu0i");
    static BFs0i_BFs0ll_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0ll_BFu0i(Test_BFs0i_BFs0ll_BFs0ll_BFu0i, "BFs0i_BFs0ll_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0ll_BFu0ll  {
  signed int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0ll_BFu0ll) C1{ Fi:0 FL:0 FL:0 FL:0}



static void Test_BFs0i_BFs0ll_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0ll_BFu0ll");
    static BFs0i_BFs0ll_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0ll_BFu0ll(Test_BFs0i_BFs0ll_BFs0ll_BFu0ll, "BFs0i_BFs0ll_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0ll_BFu0s  {
  signed int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0ll_BFu0s) C1{ Fi:0 FL:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0ll_BFu0s");
    static BFs0i_BFs0ll_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0ll_BFu0s(Test_BFs0i_BFs0ll_BFs0ll_BFu0s, "BFs0i_BFs0ll_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0s  {
  signed int  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0s) C1{ Fi:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0s");
    static BFs0i_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0s(Test_BFs0i_BFs0ll_BFs0s, "BFs0i_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0s_BFs0c  {
  signed int  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0s_BFs0c) C1{ Fi:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0s_BFs0c");
    static BFs0i_BFs0ll_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0s_BFs0c(Test_BFs0i_BFs0ll_BFs0s_BFs0c, "BFs0i_BFs0ll_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0s_BFs0i  {
  signed int  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0s_BFs0i) C1{ Fi:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0s_BFs0i");
    static BFs0i_BFs0ll_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0s_BFs0i(Test_BFs0i_BFs0ll_BFs0s_BFs0i, "BFs0i_BFs0ll_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0s_BFs0ll  {
  signed int  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0s_BFs0ll) C1{ Fi:0 FL:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0ll_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0s_BFs0ll");
    static BFs0i_BFs0ll_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0s_BFs0ll(Test_BFs0i_BFs0ll_BFs0s_BFs0ll, "BFs0i_BFs0ll_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0s_BFs0s  {
  signed int  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0s_BFs0s) C1{ Fi:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0s_BFs0s");
    static BFs0i_BFs0ll_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0s_BFs0s(Test_BFs0i_BFs0ll_BFs0s_BFs0s, "BFs0i_BFs0ll_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0s_BFu0c  {
  signed int  :0;
  signed __tsi64  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0s_BFu0c) C1{ Fi:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0s_BFu0c");
    static BFs0i_BFs0ll_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0s_BFu0c(Test_BFs0i_BFs0ll_BFs0s_BFu0c, "BFs0i_BFs0ll_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0s_BFu0i  {
  signed int  :0;
  signed __tsi64  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0s_BFu0i) C1{ Fi:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0s_BFu0i");
    static BFs0i_BFs0ll_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0s_BFu0i(Test_BFs0i_BFs0ll_BFs0s_BFu0i, "BFs0i_BFs0ll_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0s_BFu0ll  {
  signed int  :0;
  signed __tsi64  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0s_BFu0ll) C1{ Fi:0 FL:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0ll_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0s_BFu0ll");
    static BFs0i_BFs0ll_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0s_BFu0ll(Test_BFs0i_BFs0ll_BFs0s_BFu0ll, "BFs0i_BFs0ll_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFs0s_BFu0s  {
  signed int  :0;
  signed __tsi64  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFs0s_BFu0s) C1{ Fi:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFs0s_BFu0s");
    static BFs0i_BFs0ll_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFs0s_BFu0s(Test_BFs0i_BFs0ll_BFs0s_BFu0s, "BFs0i_BFs0ll_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0c  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0c) C1{ Fi:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0c");
    static BFs0i_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0c(Test_BFs0i_BFs0ll_BFu0c, "BFs0i_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0c_BFs0c  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0c_BFs0c) C1{ Fi:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0c_BFs0c");
    static BFs0i_BFs0ll_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0c_BFs0c(Test_BFs0i_BFs0ll_BFu0c_BFs0c, "BFs0i_BFs0ll_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0c_BFs0i  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0c_BFs0i) C1{ Fi:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0c_BFs0i");
    static BFs0i_BFs0ll_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0c_BFs0i(Test_BFs0i_BFs0ll_BFu0c_BFs0i, "BFs0i_BFs0ll_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0c_BFs0ll  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0c_BFs0ll) C1{ Fi:0 FL:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0ll_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0c_BFs0ll");
    static BFs0i_BFs0ll_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0c_BFs0ll(Test_BFs0i_BFs0ll_BFu0c_BFs0ll, "BFs0i_BFs0ll_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0c_BFs0s  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0c_BFs0s) C1{ Fi:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0c_BFs0s");
    static BFs0i_BFs0ll_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0c_BFs0s(Test_BFs0i_BFs0ll_BFu0c_BFs0s, "BFs0i_BFs0ll_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0c_BFu0c  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0c_BFu0c) C1{ Fi:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0c_BFu0c");
    static BFs0i_BFs0ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0c_BFu0c(Test_BFs0i_BFs0ll_BFu0c_BFu0c, "BFs0i_BFs0ll_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0c_BFu0i  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0c_BFu0i) C1{ Fi:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0c_BFu0i");
    static BFs0i_BFs0ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0c_BFu0i(Test_BFs0i_BFs0ll_BFu0c_BFu0i, "BFs0i_BFs0ll_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0c_BFu0ll  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0c_BFu0ll) C1{ Fi:0 FL:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0c_BFu0ll");
    static BFs0i_BFs0ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0c_BFu0ll(Test_BFs0i_BFs0ll_BFu0c_BFu0ll, "BFs0i_BFs0ll_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0c_BFu0s  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0c_BFu0s) C1{ Fi:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0c_BFu0s");
    static BFs0i_BFs0ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0c_BFu0s(Test_BFs0i_BFs0ll_BFu0c_BFu0s, "BFs0i_BFs0ll_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0i  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0i) C1{ Fi:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0i");
    static BFs0i_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0i(Test_BFs0i_BFs0ll_BFu0i, "BFs0i_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0i_BFs0c  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0i_BFs0c) C1{ Fi:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0i_BFs0c");
    static BFs0i_BFs0ll_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0i_BFs0c(Test_BFs0i_BFs0ll_BFu0i_BFs0c, "BFs0i_BFs0ll_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0i_BFs0i  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0i_BFs0i) C1{ Fi:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0i_BFs0i");
    static BFs0i_BFs0ll_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0i_BFs0i(Test_BFs0i_BFs0ll_BFu0i_BFs0i, "BFs0i_BFs0ll_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0i_BFs0ll  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0i_BFs0ll) C1{ Fi:0 FL:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0ll_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0i_BFs0ll");
    static BFs0i_BFs0ll_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0i_BFs0ll(Test_BFs0i_BFs0ll_BFu0i_BFs0ll, "BFs0i_BFs0ll_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0i_BFs0s  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0i_BFs0s) C1{ Fi:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0i_BFs0s");
    static BFs0i_BFs0ll_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0i_BFs0s(Test_BFs0i_BFs0ll_BFu0i_BFs0s, "BFs0i_BFs0ll_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0i_BFu0c  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0i_BFu0c) C1{ Fi:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0i_BFu0c");
    static BFs0i_BFs0ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0i_BFu0c(Test_BFs0i_BFs0ll_BFu0i_BFu0c, "BFs0i_BFs0ll_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0i_BFu0i  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0i_BFu0i) C1{ Fi:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0i_BFu0i");
    static BFs0i_BFs0ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0i_BFu0i(Test_BFs0i_BFs0ll_BFu0i_BFu0i, "BFs0i_BFs0ll_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0i_BFu0ll  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0i_BFu0ll) C1{ Fi:0 FL:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0i_BFu0ll");
    static BFs0i_BFs0ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0i_BFu0ll(Test_BFs0i_BFs0ll_BFu0i_BFu0ll, "BFs0i_BFs0ll_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0i_BFu0s  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0i_BFu0s) C1{ Fi:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0i_BFu0s");
    static BFs0i_BFs0ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0i_BFu0s(Test_BFs0i_BFs0ll_BFu0i_BFu0s, "BFs0i_BFs0ll_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0ll  {
  signed int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0ll) C1{ Fi:0 FL:0 FL:0}



static void Test_BFs0i_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0ll");
    static BFs0i_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0ll(Test_BFs0i_BFs0ll_BFu0ll, "BFs0i_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0ll_BFs0c  {
  signed int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0ll_BFs0c) C1{ Fi:0 FL:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0ll_BFs0c");
    static BFs0i_BFs0ll_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0ll_BFs0c(Test_BFs0i_BFs0ll_BFu0ll_BFs0c, "BFs0i_BFs0ll_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0ll_BFs0i  {
  signed int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0ll_BFs0i) C1{ Fi:0 FL:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0ll_BFs0i");
    static BFs0i_BFs0ll_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0ll_BFs0i(Test_BFs0i_BFs0ll_BFu0ll_BFs0i, "BFs0i_BFs0ll_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0ll_BFs0ll  {
  signed int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0ll_BFs0ll) C1{ Fi:0 FL:0 FL:0 FL:0}



static void Test_BFs0i_BFs0ll_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0ll_BFs0ll");
    static BFs0i_BFs0ll_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0ll_BFs0ll(Test_BFs0i_BFs0ll_BFu0ll_BFs0ll, "BFs0i_BFs0ll_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0ll_BFs0s  {
  signed int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0ll_BFs0s) C1{ Fi:0 FL:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0ll_BFs0s");
    static BFs0i_BFs0ll_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0ll_BFs0s(Test_BFs0i_BFs0ll_BFu0ll_BFs0s, "BFs0i_BFs0ll_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0ll_BFu0c  {
  signed int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0ll_BFu0c) C1{ Fi:0 FL:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0ll_BFu0c");
    static BFs0i_BFs0ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0ll_BFu0c(Test_BFs0i_BFs0ll_BFu0ll_BFu0c, "BFs0i_BFs0ll_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0ll_BFu0i  {
  signed int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0ll_BFu0i) C1{ Fi:0 FL:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0ll_BFu0i");
    static BFs0i_BFs0ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0ll_BFu0i(Test_BFs0i_BFs0ll_BFu0ll_BFu0i, "BFs0i_BFs0ll_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0ll_BFu0ll  {
  signed int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0ll_BFu0ll) C1{ Fi:0 FL:0 FL:0 FL:0}



static void Test_BFs0i_BFs0ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0ll_BFu0ll");
    static BFs0i_BFs0ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0ll_BFu0ll(Test_BFs0i_BFs0ll_BFu0ll_BFu0ll, "BFs0i_BFs0ll_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0ll_BFu0s  {
  signed int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0ll_BFu0s) C1{ Fi:0 FL:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0ll_BFu0s");
    static BFs0i_BFs0ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0ll_BFu0s(Test_BFs0i_BFs0ll_BFu0ll_BFu0s, "BFs0i_BFs0ll_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0s  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0s) C1{ Fi:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0s");
    static BFs0i_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0s(Test_BFs0i_BFs0ll_BFu0s, "BFs0i_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0s_BFs0c  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0s_BFs0c) C1{ Fi:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0s_BFs0c");
    static BFs0i_BFs0ll_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0s_BFs0c(Test_BFs0i_BFs0ll_BFu0s_BFs0c, "BFs0i_BFs0ll_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0s_BFs0i  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0s_BFs0i) C1{ Fi:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0s_BFs0i");
    static BFs0i_BFs0ll_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0s_BFs0i(Test_BFs0i_BFs0ll_BFu0s_BFs0i, "BFs0i_BFs0ll_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0s_BFs0ll  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0s_BFs0ll) C1{ Fi:0 FL:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0ll_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0s_BFs0ll");
    static BFs0i_BFs0ll_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0s_BFs0ll(Test_BFs0i_BFs0ll_BFu0s_BFs0ll, "BFs0i_BFs0ll_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0s_BFs0s  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0s_BFs0s) C1{ Fi:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0s_BFs0s");
    static BFs0i_BFs0ll_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0s_BFs0s(Test_BFs0i_BFs0ll_BFu0s_BFs0s, "BFs0i_BFs0ll_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0s_BFu0c  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0s_BFu0c) C1{ Fi:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0ll_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0s_BFu0c");
    static BFs0i_BFs0ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0s_BFu0c(Test_BFs0i_BFs0ll_BFu0s_BFu0c, "BFs0i_BFs0ll_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0s_BFu0i  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0s_BFu0i) C1{ Fi:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0ll_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0s_BFu0i");
    static BFs0i_BFs0ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0s_BFu0i(Test_BFs0i_BFs0ll_BFu0s_BFu0i, "BFs0i_BFs0ll_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0s_BFu0ll  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0s_BFu0ll) C1{ Fi:0 FL:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0s_BFu0ll");
    static BFs0i_BFs0ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0s_BFu0ll(Test_BFs0i_BFs0ll_BFu0s_BFu0ll, "BFs0i_BFs0ll_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0ll_BFu0s_BFu0s  {
  signed int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0ll_BFu0s_BFu0s) C1{ Fi:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0ll_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0ll_BFu0s_BFu0s");
    static BFs0i_BFs0ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0ll_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0ll_BFu0s_BFu0s(Test_BFs0i_BFs0ll_BFu0s_BFu0s, "BFs0i_BFs0ll_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s  {
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0s) C1{ Fi:0 Fs:0}



static void Test_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0s");
    static BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s(Test_BFs0i_BFs0s, "BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0c  {
  signed int  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0c) C1{ Fi:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0c");
    static BFs0i_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0c(Test_BFs0i_BFs0s_BFs0c, "BFs0i_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0c_BFs0c  {
  signed int  :0;
  signed short  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0c_BFs0c) C1{ Fi:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0s_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0c_BFs0c");
    static BFs0i_BFs0s_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0c_BFs0c(Test_BFs0i_BFs0s_BFs0c_BFs0c, "BFs0i_BFs0s_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0c_BFs0i  {
  signed int  :0;
  signed short  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0c_BFs0i) C1{ Fi:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0s_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0c_BFs0i");
    static BFs0i_BFs0s_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0c_BFs0i(Test_BFs0i_BFs0s_BFs0c_BFs0i, "BFs0i_BFs0s_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0c_BFs0ll  {
  signed int  :0;
  signed short  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0c_BFs0ll) C1{ Fi:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0s_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0c_BFs0ll");
    static BFs0i_BFs0s_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0c_BFs0ll(Test_BFs0i_BFs0s_BFs0c_BFs0ll, "BFs0i_BFs0s_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0c_BFs0s  {
  signed int  :0;
  signed short  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0c_BFs0s) C1{ Fi:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0s_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0c_BFs0s");
    static BFs0i_BFs0s_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0c_BFs0s(Test_BFs0i_BFs0s_BFs0c_BFs0s, "BFs0i_BFs0s_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0c_BFu0c  {
  signed int  :0;
  signed short  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0c_BFu0c) C1{ Fi:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0s_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0c_BFu0c");
    static BFs0i_BFs0s_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0c_BFu0c(Test_BFs0i_BFs0s_BFs0c_BFu0c, "BFs0i_BFs0s_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0c_BFu0i  {
  signed int  :0;
  signed short  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0c_BFu0i) C1{ Fi:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0s_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0c_BFu0i");
    static BFs0i_BFs0s_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0c_BFu0i(Test_BFs0i_BFs0s_BFs0c_BFu0i, "BFs0i_BFs0s_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0c_BFu0ll  {
  signed int  :0;
  signed short  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0c_BFu0ll) C1{ Fi:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0s_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0c_BFu0ll");
    static BFs0i_BFs0s_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0c_BFu0ll(Test_BFs0i_BFs0s_BFs0c_BFu0ll, "BFs0i_BFs0s_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0c_BFu0s  {
  signed int  :0;
  signed short  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0c_BFu0s) C1{ Fi:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0s_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0c_BFu0s");
    static BFs0i_BFs0s_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0c_BFu0s(Test_BFs0i_BFs0s_BFs0c_BFu0s, "BFs0i_BFs0s_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0i  {
  signed int  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0i) C1{ Fi:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0i");
    static BFs0i_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0i(Test_BFs0i_BFs0s_BFs0i, "BFs0i_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0i_BFs0c  {
  signed int  :0;
  signed short  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0i_BFs0c) C1{ Fi:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0s_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0i_BFs0c");
    static BFs0i_BFs0s_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0i_BFs0c(Test_BFs0i_BFs0s_BFs0i_BFs0c, "BFs0i_BFs0s_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0i_BFs0i  {
  signed int  :0;
  signed short  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0i_BFs0i) C1{ Fi:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0s_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0i_BFs0i");
    static BFs0i_BFs0s_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0i_BFs0i(Test_BFs0i_BFs0s_BFs0i_BFs0i, "BFs0i_BFs0s_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0i_BFs0ll  {
  signed int  :0;
  signed short  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0i_BFs0ll) C1{ Fi:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0s_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0i_BFs0ll");
    static BFs0i_BFs0s_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0i_BFs0ll(Test_BFs0i_BFs0s_BFs0i_BFs0ll, "BFs0i_BFs0s_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0i_BFs0s  {
  signed int  :0;
  signed short  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0i_BFs0s) C1{ Fi:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0s_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0i_BFs0s");
    static BFs0i_BFs0s_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0i_BFs0s(Test_BFs0i_BFs0s_BFs0i_BFs0s, "BFs0i_BFs0s_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0i_BFu0c  {
  signed int  :0;
  signed short  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0i_BFu0c) C1{ Fi:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0s_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0i_BFu0c");
    static BFs0i_BFs0s_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0i_BFu0c(Test_BFs0i_BFs0s_BFs0i_BFu0c, "BFs0i_BFs0s_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0i_BFu0i  {
  signed int  :0;
  signed short  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0i_BFu0i) C1{ Fi:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0s_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0i_BFu0i");
    static BFs0i_BFs0s_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0i_BFu0i(Test_BFs0i_BFs0s_BFs0i_BFu0i, "BFs0i_BFs0s_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0i_BFu0ll  {
  signed int  :0;
  signed short  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0i_BFu0ll) C1{ Fi:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0s_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0i_BFu0ll");
    static BFs0i_BFs0s_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0i_BFu0ll(Test_BFs0i_BFs0s_BFs0i_BFu0ll, "BFs0i_BFs0s_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0i_BFu0s  {
  signed int  :0;
  signed short  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0i_BFu0s) C1{ Fi:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0s_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0i_BFu0s");
    static BFs0i_BFs0s_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0i_BFu0s(Test_BFs0i_BFs0s_BFs0i_BFu0s, "BFs0i_BFs0s_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0ll  {
  signed int  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0ll) C1{ Fi:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0ll");
    static BFs0i_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0ll(Test_BFs0i_BFs0s_BFs0ll, "BFs0i_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0ll_BFs0c  {
  signed int  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0ll_BFs0c) C1{ Fi:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0s_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0ll_BFs0c");
    static BFs0i_BFs0s_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0ll_BFs0c(Test_BFs0i_BFs0s_BFs0ll_BFs0c, "BFs0i_BFs0s_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0ll_BFs0i  {
  signed int  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0ll_BFs0i) C1{ Fi:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0s_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0ll_BFs0i");
    static BFs0i_BFs0s_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0ll_BFs0i(Test_BFs0i_BFs0s_BFs0ll_BFs0i, "BFs0i_BFs0s_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0ll_BFs0ll  {
  signed int  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0ll_BFs0ll) C1{ Fi:0 Fs:0 FL:0 FL:0}



static void Test_BFs0i_BFs0s_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0ll_BFs0ll");
    static BFs0i_BFs0s_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0ll_BFs0ll(Test_BFs0i_BFs0s_BFs0ll_BFs0ll, "BFs0i_BFs0s_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0ll_BFs0s  {
  signed int  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0ll_BFs0s) C1{ Fi:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0s_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0ll_BFs0s");
    static BFs0i_BFs0s_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0ll_BFs0s(Test_BFs0i_BFs0s_BFs0ll_BFs0s, "BFs0i_BFs0s_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0ll_BFu0c  {
  signed int  :0;
  signed short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0ll_BFu0c) C1{ Fi:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0s_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0ll_BFu0c");
    static BFs0i_BFs0s_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0ll_BFu0c(Test_BFs0i_BFs0s_BFs0ll_BFu0c, "BFs0i_BFs0s_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0ll_BFu0i  {
  signed int  :0;
  signed short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0ll_BFu0i) C1{ Fi:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0s_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0ll_BFu0i");
    static BFs0i_BFs0s_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0ll_BFu0i(Test_BFs0i_BFs0s_BFs0ll_BFu0i, "BFs0i_BFs0s_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0ll_BFu0ll  {
  signed int  :0;
  signed short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0ll_BFu0ll) C1{ Fi:0 Fs:0 FL:0 FL:0}



static void Test_BFs0i_BFs0s_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0ll_BFu0ll");
    static BFs0i_BFs0s_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0ll_BFu0ll(Test_BFs0i_BFs0s_BFs0ll_BFu0ll, "BFs0i_BFs0s_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0ll_BFu0s  {
  signed int  :0;
  signed short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0ll_BFu0s) C1{ Fi:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0s_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0ll_BFu0s");
    static BFs0i_BFs0s_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0ll_BFu0s(Test_BFs0i_BFs0s_BFs0ll_BFu0s, "BFs0i_BFs0s_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0s  {
  signed int  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0s) C1{ Fi:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0s");
    static BFs0i_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0s(Test_BFs0i_BFs0s_BFs0s, "BFs0i_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0s_BFs0c  {
  signed int  :0;
  signed short  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0s_BFs0c) C1{ Fi:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0s_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0s_BFs0c");
    static BFs0i_BFs0s_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0s_BFs0c(Test_BFs0i_BFs0s_BFs0s_BFs0c, "BFs0i_BFs0s_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0s_BFs0i  {
  signed int  :0;
  signed short  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0s_BFs0i) C1{ Fi:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0s_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0s_BFs0i");
    static BFs0i_BFs0s_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0s_BFs0i(Test_BFs0i_BFs0s_BFs0s_BFs0i, "BFs0i_BFs0s_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0s_BFs0ll  {
  signed int  :0;
  signed short  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0s_BFs0ll) C1{ Fi:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0s_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0s_BFs0ll");
    static BFs0i_BFs0s_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0s_BFs0ll(Test_BFs0i_BFs0s_BFs0s_BFs0ll, "BFs0i_BFs0s_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0s_BFs0s  {
  signed int  :0;
  signed short  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0s_BFs0s) C1{ Fi:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0s_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0s_BFs0s");
    static BFs0i_BFs0s_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0s_BFs0s(Test_BFs0i_BFs0s_BFs0s_BFs0s, "BFs0i_BFs0s_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0s_BFu0c  {
  signed int  :0;
  signed short  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0s_BFu0c) C1{ Fi:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0s_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0s_BFu0c");
    static BFs0i_BFs0s_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0s_BFu0c(Test_BFs0i_BFs0s_BFs0s_BFu0c, "BFs0i_BFs0s_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0s_BFu0i  {
  signed int  :0;
  signed short  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0s_BFu0i) C1{ Fi:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0s_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0s_BFu0i");
    static BFs0i_BFs0s_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0s_BFu0i(Test_BFs0i_BFs0s_BFs0s_BFu0i, "BFs0i_BFs0s_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0s_BFu0ll  {
  signed int  :0;
  signed short  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0s_BFu0ll) C1{ Fi:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0s_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0s_BFu0ll");
    static BFs0i_BFs0s_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0s_BFu0ll(Test_BFs0i_BFs0s_BFs0s_BFu0ll, "BFs0i_BFs0s_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFs0s_BFu0s  {
  signed int  :0;
  signed short  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0s_BFs0s_BFu0s) C1{ Fi:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0s_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFs0s_BFu0s");
    static BFs0i_BFs0s_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFs0s_BFu0s(Test_BFs0i_BFs0s_BFs0s_BFu0s, "BFs0i_BFs0s_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0c  {
  signed int  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0c) C1{ Fi:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0c");
    static BFs0i_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0c(Test_BFs0i_BFs0s_BFu0c, "BFs0i_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0c_BFs0c  {
  signed int  :0;
  signed short  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0c_BFs0c) C1{ Fi:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0s_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0c_BFs0c");
    static BFs0i_BFs0s_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0c_BFs0c(Test_BFs0i_BFs0s_BFu0c_BFs0c, "BFs0i_BFs0s_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0c_BFs0i  {
  signed int  :0;
  signed short  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0c_BFs0i) C1{ Fi:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0s_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0c_BFs0i");
    static BFs0i_BFs0s_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0c_BFs0i(Test_BFs0i_BFs0s_BFu0c_BFs0i, "BFs0i_BFs0s_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0c_BFs0ll  {
  signed int  :0;
  signed short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0c_BFs0ll) C1{ Fi:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0s_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0c_BFs0ll");
    static BFs0i_BFs0s_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0c_BFs0ll(Test_BFs0i_BFs0s_BFu0c_BFs0ll, "BFs0i_BFs0s_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0c_BFs0s  {
  signed int  :0;
  signed short  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0c_BFs0s) C1{ Fi:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0s_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0c_BFs0s");
    static BFs0i_BFs0s_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0c_BFs0s(Test_BFs0i_BFs0s_BFu0c_BFs0s, "BFs0i_BFs0s_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0c_BFu0c  {
  signed int  :0;
  signed short  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0c_BFu0c) C1{ Fi:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0i_BFs0s_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0c_BFu0c");
    static BFs0i_BFs0s_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0c_BFu0c(Test_BFs0i_BFs0s_BFu0c_BFu0c, "BFs0i_BFs0s_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0c_BFu0i  {
  signed int  :0;
  signed short  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0c_BFu0i) C1{ Fi:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0i_BFs0s_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0c_BFu0i");
    static BFs0i_BFs0s_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0c_BFu0i(Test_BFs0i_BFs0s_BFu0c_BFu0i, "BFs0i_BFs0s_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0c_BFu0ll  {
  signed int  :0;
  signed short  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0c_BFu0ll) C1{ Fi:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0i_BFs0s_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0c_BFu0ll");
    static BFs0i_BFs0s_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0c_BFu0ll(Test_BFs0i_BFs0s_BFu0c_BFu0ll, "BFs0i_BFs0s_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0c_BFu0s  {
  signed int  :0;
  signed short  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0c_BFu0s) C1{ Fi:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0i_BFs0s_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0c_BFu0s");
    static BFs0i_BFs0s_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0c_BFu0s(Test_BFs0i_BFs0s_BFu0c_BFu0s, "BFs0i_BFs0s_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0i  {
  signed int  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0i) C1{ Fi:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0i");
    static BFs0i_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0i(Test_BFs0i_BFs0s_BFu0i, "BFs0i_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0i_BFs0c  {
  signed int  :0;
  signed short  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0i_BFs0c) C1{ Fi:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0s_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0i_BFs0c");
    static BFs0i_BFs0s_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0i_BFs0c(Test_BFs0i_BFs0s_BFu0i_BFs0c, "BFs0i_BFs0s_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0i_BFs0i  {
  signed int  :0;
  signed short  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0i_BFs0i) C1{ Fi:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0s_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0i_BFs0i");
    static BFs0i_BFs0s_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0i_BFs0i(Test_BFs0i_BFs0s_BFu0i_BFs0i, "BFs0i_BFs0s_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0i_BFs0ll  {
  signed int  :0;
  signed short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0i_BFs0ll) C1{ Fi:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0s_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0i_BFs0ll");
    static BFs0i_BFs0s_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0i_BFs0ll(Test_BFs0i_BFs0s_BFu0i_BFs0ll, "BFs0i_BFs0s_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0i_BFs0s  {
  signed int  :0;
  signed short  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0i_BFs0s) C1{ Fi:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0s_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0i_BFs0s");
    static BFs0i_BFs0s_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0i_BFs0s(Test_BFs0i_BFs0s_BFu0i_BFs0s, "BFs0i_BFs0s_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0i_BFu0c  {
  signed int  :0;
  signed short  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0i_BFu0c) C1{ Fi:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0i_BFs0s_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0i_BFu0c");
    static BFs0i_BFs0s_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0i_BFu0c(Test_BFs0i_BFs0s_BFu0i_BFu0c, "BFs0i_BFs0s_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0i_BFu0i  {
  signed int  :0;
  signed short  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0i_BFu0i) C1{ Fi:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0i_BFs0s_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0i_BFu0i");
    static BFs0i_BFs0s_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0i_BFu0i(Test_BFs0i_BFs0s_BFu0i_BFu0i, "BFs0i_BFs0s_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0i_BFu0ll  {
  signed int  :0;
  signed short  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0i_BFu0ll) C1{ Fi:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0i_BFs0s_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0i_BFu0ll");
    static BFs0i_BFs0s_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0i_BFu0ll(Test_BFs0i_BFs0s_BFu0i_BFu0ll, "BFs0i_BFs0s_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0i_BFu0s  {
  signed int  :0;
  signed short  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0i_BFu0s) C1{ Fi:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0i_BFs0s_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0i_BFu0s");
    static BFs0i_BFs0s_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0i_BFu0s(Test_BFs0i_BFs0s_BFu0i_BFu0s, "BFs0i_BFs0s_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0ll  {
  signed int  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0ll) C1{ Fi:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0ll");
    static BFs0i_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0ll(Test_BFs0i_BFs0s_BFu0ll, "BFs0i_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0ll_BFs0c  {
  signed int  :0;
  signed short  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0ll_BFs0c) C1{ Fi:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0s_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0ll_BFs0c");
    static BFs0i_BFs0s_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0ll_BFs0c(Test_BFs0i_BFs0s_BFu0ll_BFs0c, "BFs0i_BFs0s_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0ll_BFs0i  {
  signed int  :0;
  signed short  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0ll_BFs0i) C1{ Fi:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0s_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0ll_BFs0i");
    static BFs0i_BFs0s_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0ll_BFs0i(Test_BFs0i_BFs0s_BFu0ll_BFs0i, "BFs0i_BFs0s_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0ll_BFs0ll  {
  signed int  :0;
  signed short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0ll_BFs0ll) C1{ Fi:0 Fs:0 FL:0 FL:0}



static void Test_BFs0i_BFs0s_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0ll_BFs0ll");
    static BFs0i_BFs0s_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0ll_BFs0ll(Test_BFs0i_BFs0s_BFu0ll_BFs0ll, "BFs0i_BFs0s_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0ll_BFs0s  {
  signed int  :0;
  signed short  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0ll_BFs0s) C1{ Fi:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0s_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0ll_BFs0s");
    static BFs0i_BFs0s_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0ll_BFs0s(Test_BFs0i_BFs0s_BFu0ll_BFs0s, "BFs0i_BFs0s_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0ll_BFu0c  {
  signed int  :0;
  signed short  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0ll_BFu0c) C1{ Fi:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0i_BFs0s_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0ll_BFu0c");
    static BFs0i_BFs0s_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0ll_BFu0c(Test_BFs0i_BFs0s_BFu0ll_BFu0c, "BFs0i_BFs0s_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0ll_BFu0i  {
  signed int  :0;
  signed short  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0ll_BFu0i) C1{ Fi:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0i_BFs0s_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0ll_BFu0i");
    static BFs0i_BFs0s_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0ll_BFu0i(Test_BFs0i_BFs0s_BFu0ll_BFu0i, "BFs0i_BFs0s_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0ll_BFu0ll  {
  signed int  :0;
  signed short  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0ll_BFu0ll) C1{ Fi:0 Fs:0 FL:0 FL:0}



static void Test_BFs0i_BFs0s_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0ll_BFu0ll");
    static BFs0i_BFs0s_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0ll_BFu0ll(Test_BFs0i_BFs0s_BFu0ll_BFu0ll, "BFs0i_BFs0s_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0ll_BFu0s  {
  signed int  :0;
  signed short  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0ll_BFu0s) C1{ Fi:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0i_BFs0s_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0ll_BFu0s");
    static BFs0i_BFs0s_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0ll_BFu0s(Test_BFs0i_BFs0s_BFu0ll_BFu0s, "BFs0i_BFs0s_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0s  {
  signed int  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0s) C1{ Fi:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0s");
    static BFs0i_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0s(Test_BFs0i_BFs0s_BFu0s, "BFs0i_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0s_BFs0c  {
  signed int  :0;
  signed short  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0s_BFs0c) C1{ Fi:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0s_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0s_BFs0c");
    static BFs0i_BFs0s_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0s_BFs0c(Test_BFs0i_BFs0s_BFu0s_BFs0c, "BFs0i_BFs0s_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0s_BFs0i  {
  signed int  :0;
  signed short  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0s_BFs0i) C1{ Fi:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0s_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0s_BFs0i");
    static BFs0i_BFs0s_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0s_BFs0i(Test_BFs0i_BFs0s_BFu0s_BFs0i, "BFs0i_BFs0s_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0s_BFs0ll  {
  signed int  :0;
  signed short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0s_BFs0ll) C1{ Fi:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0s_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0s_BFs0ll");
    static BFs0i_BFs0s_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0s_BFs0ll(Test_BFs0i_BFs0s_BFu0s_BFs0ll, "BFs0i_BFs0s_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0s_BFs0s  {
  signed int  :0;
  signed short  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0s_BFs0s) C1{ Fi:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0s_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0s_BFs0s");
    static BFs0i_BFs0s_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0s_BFs0s(Test_BFs0i_BFs0s_BFu0s_BFs0s, "BFs0i_BFs0s_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0s_BFu0c  {
  signed int  :0;
  signed short  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0s_BFu0c) C1{ Fi:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0i_BFs0s_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0s_BFu0c");
    static BFs0i_BFs0s_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0s_BFu0c(Test_BFs0i_BFs0s_BFu0s_BFu0c, "BFs0i_BFs0s_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0s_BFu0i  {
  signed int  :0;
  signed short  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0s_BFu0i) C1{ Fi:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0i_BFs0s_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0s_BFu0i");
    static BFs0i_BFs0s_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0s_BFu0i(Test_BFs0i_BFs0s_BFu0s_BFu0i, "BFs0i_BFs0s_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0s_BFu0ll  {
  signed int  :0;
  signed short  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0s_BFu0ll) C1{ Fi:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0i_BFs0s_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0s_BFu0ll");
    static BFs0i_BFs0s_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0s_BFu0ll(Test_BFs0i_BFs0s_BFu0s_BFu0ll, "BFs0i_BFs0s_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFs0s_BFu0s_BFu0s  {
  signed int  :0;
  signed short  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFs0s_BFu0s_BFu0s) C1{ Fi:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0i_BFs0s_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFs0s_BFu0s_BFu0s");
    static BFs0i_BFs0s_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFs0s_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFs0s_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFs0s_BFu0s_BFu0s(Test_BFs0i_BFs0s_BFu0s_BFu0s, "BFs0i_BFs0s_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c  {
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0c) C1{ Fi:0 Fc:0}



static void Test_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0c");
    static BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c(Test_BFs0i_BFu0c, "BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0c  {
  signed int  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0c) C1{ Fi:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0c");
    static BFs0i_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0c(Test_BFs0i_BFu0c_BFs0c, "BFs0i_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0c_BFs0c  {
  signed int  :0;
  unsigned char  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0c_BFs0c) C1{ Fi:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0c_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0c_BFs0c");
    static BFs0i_BFu0c_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0c_BFs0c(Test_BFs0i_BFu0c_BFs0c_BFs0c, "BFs0i_BFu0c_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0c_BFs0i  {
  signed int  :0;
  unsigned char  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0c_BFs0i) C1{ Fi:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0c_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0c_BFs0i");
    static BFs0i_BFu0c_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0c_BFs0i(Test_BFs0i_BFu0c_BFs0c_BFs0i, "BFs0i_BFu0c_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0c_BFs0ll  {
  signed int  :0;
  unsigned char  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0c_BFs0ll) C1{ Fi:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0c_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0c_BFs0ll");
    static BFs0i_BFu0c_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0c_BFs0ll(Test_BFs0i_BFu0c_BFs0c_BFs0ll, "BFs0i_BFu0c_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0c_BFs0s  {
  signed int  :0;
  unsigned char  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0c_BFs0s) C1{ Fi:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0c_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0c_BFs0s");
    static BFs0i_BFu0c_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0c_BFs0s(Test_BFs0i_BFu0c_BFs0c_BFs0s, "BFs0i_BFu0c_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0c_BFu0c  {
  signed int  :0;
  unsigned char  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0c_BFu0c) C1{ Fi:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0c_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0c_BFu0c");
    static BFs0i_BFu0c_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0c_BFu0c(Test_BFs0i_BFu0c_BFs0c_BFu0c, "BFs0i_BFu0c_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0c_BFu0i  {
  signed int  :0;
  unsigned char  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0c_BFu0i) C1{ Fi:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0c_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0c_BFu0i");
    static BFs0i_BFu0c_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0c_BFu0i(Test_BFs0i_BFu0c_BFs0c_BFu0i, "BFs0i_BFu0c_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0c_BFu0ll  {
  signed int  :0;
  unsigned char  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0c_BFu0ll) C1{ Fi:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0c_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0c_BFu0ll");
    static BFs0i_BFu0c_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0c_BFu0ll(Test_BFs0i_BFu0c_BFs0c_BFu0ll, "BFs0i_BFu0c_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0c_BFu0s  {
  signed int  :0;
  unsigned char  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0c_BFu0s) C1{ Fi:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0c_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0c_BFu0s");
    static BFs0i_BFu0c_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0c_BFu0s(Test_BFs0i_BFu0c_BFs0c_BFu0s, "BFs0i_BFu0c_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0i  {
  signed int  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0i) C1{ Fi:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0i");
    static BFs0i_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0i(Test_BFs0i_BFu0c_BFs0i, "BFs0i_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0i_BFs0c  {
  signed int  :0;
  unsigned char  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0i_BFs0c) C1{ Fi:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0c_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0i_BFs0c");
    static BFs0i_BFu0c_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0i_BFs0c(Test_BFs0i_BFu0c_BFs0i_BFs0c, "BFs0i_BFu0c_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0i_BFs0i  {
  signed int  :0;
  unsigned char  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0i_BFs0i) C1{ Fi:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0c_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0i_BFs0i");
    static BFs0i_BFu0c_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0i_BFs0i(Test_BFs0i_BFu0c_BFs0i_BFs0i, "BFs0i_BFu0c_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0i_BFs0ll  {
  signed int  :0;
  unsigned char  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0i_BFs0ll) C1{ Fi:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0c_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0i_BFs0ll");
    static BFs0i_BFu0c_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0i_BFs0ll(Test_BFs0i_BFu0c_BFs0i_BFs0ll, "BFs0i_BFu0c_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0i_BFs0s  {
  signed int  :0;
  unsigned char  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0i_BFs0s) C1{ Fi:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0c_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0i_BFs0s");
    static BFs0i_BFu0c_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0i_BFs0s(Test_BFs0i_BFu0c_BFs0i_BFs0s, "BFs0i_BFu0c_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0i_BFu0c  {
  signed int  :0;
  unsigned char  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0i_BFu0c) C1{ Fi:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0c_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0i_BFu0c");
    static BFs0i_BFu0c_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0i_BFu0c(Test_BFs0i_BFu0c_BFs0i_BFu0c, "BFs0i_BFu0c_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0i_BFu0i  {
  signed int  :0;
  unsigned char  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0i_BFu0i) C1{ Fi:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0c_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0i_BFu0i");
    static BFs0i_BFu0c_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0i_BFu0i(Test_BFs0i_BFu0c_BFs0i_BFu0i, "BFs0i_BFu0c_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0i_BFu0ll  {
  signed int  :0;
  unsigned char  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0i_BFu0ll) C1{ Fi:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0c_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0i_BFu0ll");
    static BFs0i_BFu0c_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0i_BFu0ll(Test_BFs0i_BFu0c_BFs0i_BFu0ll, "BFs0i_BFu0c_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0i_BFu0s  {
  signed int  :0;
  unsigned char  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0i_BFu0s) C1{ Fi:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0c_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0i_BFu0s");
    static BFs0i_BFu0c_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0i_BFu0s(Test_BFs0i_BFu0c_BFs0i_BFu0s, "BFs0i_BFu0c_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0ll  {
  signed int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0ll) C1{ Fi:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0ll");
    static BFs0i_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0ll(Test_BFs0i_BFu0c_BFs0ll, "BFs0i_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0ll_BFs0c  {
  signed int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0ll_BFs0c) C1{ Fi:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0c_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0ll_BFs0c");
    static BFs0i_BFu0c_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0ll_BFs0c(Test_BFs0i_BFu0c_BFs0ll_BFs0c, "BFs0i_BFu0c_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0ll_BFs0i  {
  signed int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0ll_BFs0i) C1{ Fi:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0c_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0ll_BFs0i");
    static BFs0i_BFu0c_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0ll_BFs0i(Test_BFs0i_BFu0c_BFs0ll_BFs0i, "BFs0i_BFu0c_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0ll_BFs0ll  {
  signed int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0ll_BFs0ll) C1{ Fi:0 Fc:0 FL:0 FL:0}



static void Test_BFs0i_BFu0c_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0ll_BFs0ll");
    static BFs0i_BFu0c_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0ll_BFs0ll(Test_BFs0i_BFu0c_BFs0ll_BFs0ll, "BFs0i_BFu0c_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0ll_BFs0s  {
  signed int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0ll_BFs0s) C1{ Fi:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0c_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0ll_BFs0s");
    static BFs0i_BFu0c_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0ll_BFs0s(Test_BFs0i_BFu0c_BFs0ll_BFs0s, "BFs0i_BFu0c_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0ll_BFu0c  {
  signed int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0ll_BFu0c) C1{ Fi:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0c_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0ll_BFu0c");
    static BFs0i_BFu0c_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0ll_BFu0c(Test_BFs0i_BFu0c_BFs0ll_BFu0c, "BFs0i_BFu0c_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0ll_BFu0i  {
  signed int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0ll_BFu0i) C1{ Fi:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0c_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0ll_BFu0i");
    static BFs0i_BFu0c_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0ll_BFu0i(Test_BFs0i_BFu0c_BFs0ll_BFu0i, "BFs0i_BFu0c_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0ll_BFu0ll  {
  signed int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0ll_BFu0ll) C1{ Fi:0 Fc:0 FL:0 FL:0}



static void Test_BFs0i_BFu0c_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0ll_BFu0ll");
    static BFs0i_BFu0c_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0ll_BFu0ll(Test_BFs0i_BFu0c_BFs0ll_BFu0ll, "BFs0i_BFu0c_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0ll_BFu0s  {
  signed int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0ll_BFu0s) C1{ Fi:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0c_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0ll_BFu0s");
    static BFs0i_BFu0c_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0ll_BFu0s(Test_BFs0i_BFu0c_BFs0ll_BFu0s, "BFs0i_BFu0c_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0s  {
  signed int  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0s) C1{ Fi:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0s");
    static BFs0i_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0s(Test_BFs0i_BFu0c_BFs0s, "BFs0i_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0s_BFs0c  {
  signed int  :0;
  unsigned char  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0s_BFs0c) C1{ Fi:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0c_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0s_BFs0c");
    static BFs0i_BFu0c_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0s_BFs0c(Test_BFs0i_BFu0c_BFs0s_BFs0c, "BFs0i_BFu0c_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0s_BFs0i  {
  signed int  :0;
  unsigned char  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0s_BFs0i) C1{ Fi:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0c_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0s_BFs0i");
    static BFs0i_BFu0c_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0s_BFs0i(Test_BFs0i_BFu0c_BFs0s_BFs0i, "BFs0i_BFu0c_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0s_BFs0ll  {
  signed int  :0;
  unsigned char  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0s_BFs0ll) C1{ Fi:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0c_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0s_BFs0ll");
    static BFs0i_BFu0c_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0s_BFs0ll(Test_BFs0i_BFu0c_BFs0s_BFs0ll, "BFs0i_BFu0c_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0s_BFs0s  {
  signed int  :0;
  unsigned char  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0s_BFs0s) C1{ Fi:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0c_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0s_BFs0s");
    static BFs0i_BFu0c_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0s_BFs0s(Test_BFs0i_BFu0c_BFs0s_BFs0s, "BFs0i_BFu0c_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0s_BFu0c  {
  signed int  :0;
  unsigned char  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0s_BFu0c) C1{ Fi:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0c_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0s_BFu0c");
    static BFs0i_BFu0c_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0s_BFu0c(Test_BFs0i_BFu0c_BFs0s_BFu0c, "BFs0i_BFu0c_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0s_BFu0i  {
  signed int  :0;
  unsigned char  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0s_BFu0i) C1{ Fi:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0c_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0s_BFu0i");
    static BFs0i_BFu0c_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0s_BFu0i(Test_BFs0i_BFu0c_BFs0s_BFu0i, "BFs0i_BFu0c_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0s_BFu0ll  {
  signed int  :0;
  unsigned char  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0s_BFu0ll) C1{ Fi:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0c_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0s_BFu0ll");
    static BFs0i_BFu0c_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0s_BFu0ll(Test_BFs0i_BFu0c_BFs0s_BFu0ll, "BFs0i_BFu0c_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFs0s_BFu0s  {
  signed int  :0;
  unsigned char  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0c_BFs0s_BFu0s) C1{ Fi:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0c_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFs0s_BFu0s");
    static BFs0i_BFu0c_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFs0s_BFu0s(Test_BFs0i_BFu0c_BFs0s_BFu0s, "BFs0i_BFu0c_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0c  {
  signed int  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0c) C1{ Fi:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0c");
    static BFs0i_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0c(Test_BFs0i_BFu0c_BFu0c, "BFs0i_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0c_BFs0c  {
  signed int  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0c_BFs0c) C1{ Fi:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0c_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0c_BFs0c");
    static BFs0i_BFu0c_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0c_BFs0c(Test_BFs0i_BFu0c_BFu0c_BFs0c, "BFs0i_BFu0c_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0c_BFs0i  {
  signed int  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0c_BFs0i) C1{ Fi:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0c_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0c_BFs0i");
    static BFs0i_BFu0c_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0c_BFs0i(Test_BFs0i_BFu0c_BFu0c_BFs0i, "BFs0i_BFu0c_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0c_BFs0ll  {
  signed int  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0c_BFs0ll) C1{ Fi:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0c_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0c_BFs0ll");
    static BFs0i_BFu0c_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0c_BFs0ll(Test_BFs0i_BFu0c_BFu0c_BFs0ll, "BFs0i_BFu0c_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0c_BFs0s  {
  signed int  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0c_BFs0s) C1{ Fi:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0c_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0c_BFs0s");
    static BFs0i_BFu0c_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0c_BFs0s(Test_BFs0i_BFu0c_BFu0c_BFs0s, "BFs0i_BFu0c_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0c_BFu0c  {
  signed int  :0;
  unsigned char  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0c_BFu0c) C1{ Fi:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0c_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0c_BFu0c");
    static BFs0i_BFu0c_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0c_BFu0c(Test_BFs0i_BFu0c_BFu0c_BFu0c, "BFs0i_BFu0c_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0c_BFu0i  {
  signed int  :0;
  unsigned char  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0c_BFu0i) C1{ Fi:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0c_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0c_BFu0i");
    static BFs0i_BFu0c_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0c_BFu0i(Test_BFs0i_BFu0c_BFu0c_BFu0i, "BFs0i_BFu0c_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0c_BFu0ll  {
  signed int  :0;
  unsigned char  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0c_BFu0ll) C1{ Fi:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0c_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0c_BFu0ll");
    static BFs0i_BFu0c_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0c_BFu0ll(Test_BFs0i_BFu0c_BFu0c_BFu0ll, "BFs0i_BFu0c_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0c_BFu0s  {
  signed int  :0;
  unsigned char  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0c_BFu0s) C1{ Fi:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0c_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0c_BFu0s");
    static BFs0i_BFu0c_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0c_BFu0s(Test_BFs0i_BFu0c_BFu0c_BFu0s, "BFs0i_BFu0c_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0i  {
  signed int  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0i) C1{ Fi:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0i");
    static BFs0i_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0i(Test_BFs0i_BFu0c_BFu0i, "BFs0i_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0i_BFs0c  {
  signed int  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0i_BFs0c) C1{ Fi:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0c_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0i_BFs0c");
    static BFs0i_BFu0c_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0i_BFs0c(Test_BFs0i_BFu0c_BFu0i_BFs0c, "BFs0i_BFu0c_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0i_BFs0i  {
  signed int  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0i_BFs0i) C1{ Fi:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0c_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0i_BFs0i");
    static BFs0i_BFu0c_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0i_BFs0i(Test_BFs0i_BFu0c_BFu0i_BFs0i, "BFs0i_BFu0c_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0i_BFs0ll  {
  signed int  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0i_BFs0ll) C1{ Fi:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0c_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0i_BFs0ll");
    static BFs0i_BFu0c_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0i_BFs0ll(Test_BFs0i_BFu0c_BFu0i_BFs0ll, "BFs0i_BFu0c_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0i_BFs0s  {
  signed int  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0i_BFs0s) C1{ Fi:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0c_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0i_BFs0s");
    static BFs0i_BFu0c_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0i_BFs0s(Test_BFs0i_BFu0c_BFu0i_BFs0s, "BFs0i_BFu0c_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0i_BFu0c  {
  signed int  :0;
  unsigned char  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0i_BFu0c) C1{ Fi:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0c_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0i_BFu0c");
    static BFs0i_BFu0c_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0i_BFu0c(Test_BFs0i_BFu0c_BFu0i_BFu0c, "BFs0i_BFu0c_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0i_BFu0i  {
  signed int  :0;
  unsigned char  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0i_BFu0i) C1{ Fi:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0c_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0i_BFu0i");
    static BFs0i_BFu0c_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0i_BFu0i(Test_BFs0i_BFu0c_BFu0i_BFu0i, "BFs0i_BFu0c_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0i_BFu0ll  {
  signed int  :0;
  unsigned char  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0i_BFu0ll) C1{ Fi:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0c_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0i_BFu0ll");
    static BFs0i_BFu0c_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0i_BFu0ll(Test_BFs0i_BFu0c_BFu0i_BFu0ll, "BFs0i_BFu0c_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0i_BFu0s  {
  signed int  :0;
  unsigned char  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0i_BFu0s) C1{ Fi:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0c_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0i_BFu0s");
    static BFs0i_BFu0c_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0i_BFu0s(Test_BFs0i_BFu0c_BFu0i_BFu0s, "BFs0i_BFu0c_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0ll  {
  signed int  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0ll) C1{ Fi:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0ll");
    static BFs0i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0ll(Test_BFs0i_BFu0c_BFu0ll, "BFs0i_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0ll_BFs0c  {
  signed int  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0ll_BFs0c) C1{ Fi:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0c_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0ll_BFs0c");
    static BFs0i_BFu0c_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0ll_BFs0c(Test_BFs0i_BFu0c_BFu0ll_BFs0c, "BFs0i_BFu0c_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0ll_BFs0i  {
  signed int  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0ll_BFs0i) C1{ Fi:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0c_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0ll_BFs0i");
    static BFs0i_BFu0c_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0ll_BFs0i(Test_BFs0i_BFu0c_BFu0ll_BFs0i, "BFs0i_BFu0c_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0ll_BFs0ll  {
  signed int  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0ll_BFs0ll) C1{ Fi:0 Fc:0 FL:0 FL:0}



static void Test_BFs0i_BFu0c_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0ll_BFs0ll");
    static BFs0i_BFu0c_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0ll_BFs0ll(Test_BFs0i_BFu0c_BFu0ll_BFs0ll, "BFs0i_BFu0c_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0ll_BFs0s  {
  signed int  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0ll_BFs0s) C1{ Fi:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0c_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0ll_BFs0s");
    static BFs0i_BFu0c_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0ll_BFs0s(Test_BFs0i_BFu0c_BFu0ll_BFs0s, "BFs0i_BFu0c_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0ll_BFu0c  {
  signed int  :0;
  unsigned char  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0ll_BFu0c) C1{ Fi:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0c_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0ll_BFu0c");
    static BFs0i_BFu0c_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0ll_BFu0c(Test_BFs0i_BFu0c_BFu0ll_BFu0c, "BFs0i_BFu0c_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0ll_BFu0i  {
  signed int  :0;
  unsigned char  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0ll_BFu0i) C1{ Fi:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0c_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0ll_BFu0i");
    static BFs0i_BFu0c_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0ll_BFu0i(Test_BFs0i_BFu0c_BFu0ll_BFu0i, "BFs0i_BFu0c_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0ll_BFu0ll  {
  signed int  :0;
  unsigned char  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0ll_BFu0ll) C1{ Fi:0 Fc:0 FL:0 FL:0}



static void Test_BFs0i_BFu0c_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0ll_BFu0ll");
    static BFs0i_BFu0c_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0ll_BFu0ll(Test_BFs0i_BFu0c_BFu0ll_BFu0ll, "BFs0i_BFu0c_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0ll_BFu0s  {
  signed int  :0;
  unsigned char  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0ll_BFu0s) C1{ Fi:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0c_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0ll_BFu0s");
    static BFs0i_BFu0c_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0ll_BFu0s(Test_BFs0i_BFu0c_BFu0ll_BFu0s, "BFs0i_BFu0c_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0s  {
  signed int  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0s) C1{ Fi:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0s");
    static BFs0i_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0s(Test_BFs0i_BFu0c_BFu0s, "BFs0i_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0s_BFs0c  {
  signed int  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0s_BFs0c) C1{ Fi:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0c_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0s_BFs0c");
    static BFs0i_BFu0c_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0s_BFs0c(Test_BFs0i_BFu0c_BFu0s_BFs0c, "BFs0i_BFu0c_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0s_BFs0i  {
  signed int  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0s_BFs0i) C1{ Fi:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0c_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0s_BFs0i");
    static BFs0i_BFu0c_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0s_BFs0i(Test_BFs0i_BFu0c_BFu0s_BFs0i, "BFs0i_BFu0c_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0s_BFs0ll  {
  signed int  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0s_BFs0ll) C1{ Fi:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0c_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0s_BFs0ll");
    static BFs0i_BFu0c_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0s_BFs0ll(Test_BFs0i_BFu0c_BFu0s_BFs0ll, "BFs0i_BFu0c_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0s_BFs0s  {
  signed int  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0s_BFs0s) C1{ Fi:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0c_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0s_BFs0s");
    static BFs0i_BFu0c_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0s_BFs0s(Test_BFs0i_BFu0c_BFu0s_BFs0s, "BFs0i_BFu0c_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0s_BFu0c  {
  signed int  :0;
  unsigned char  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0s_BFu0c) C1{ Fi:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0c_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0s_BFu0c");
    static BFs0i_BFu0c_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0s_BFu0c(Test_BFs0i_BFu0c_BFu0s_BFu0c, "BFs0i_BFu0c_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0s_BFu0i  {
  signed int  :0;
  unsigned char  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0s_BFu0i) C1{ Fi:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0c_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0s_BFu0i");
    static BFs0i_BFu0c_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0s_BFu0i(Test_BFs0i_BFu0c_BFu0s_BFu0i, "BFs0i_BFu0c_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0s_BFu0ll  {
  signed int  :0;
  unsigned char  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0s_BFu0ll) C1{ Fi:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0c_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0s_BFu0ll");
    static BFs0i_BFu0c_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0s_BFu0ll(Test_BFs0i_BFu0c_BFu0s_BFu0ll, "BFs0i_BFu0c_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0c_BFu0s_BFu0s  {
  signed int  :0;
  unsigned char  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0c_BFu0s_BFu0s) C1{ Fi:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0c_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0c_BFu0s_BFu0s");
    static BFs0i_BFu0c_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0c_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0c_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0c_BFu0s_BFu0s(Test_BFs0i_BFu0c_BFu0s_BFu0s, "BFs0i_BFu0c_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i  {
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0i) C1{ Fi:0 Fi:0}



static void Test_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0i");
    static BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i(Test_BFs0i_BFu0i, "BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0c  {
  signed int  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0c) C1{ Fi:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0c");
    static BFs0i_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0c(Test_BFs0i_BFu0i_BFs0c, "BFs0i_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0c_BFs0c  {
  signed int  :0;
  unsigned int  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0c_BFs0c) C1{ Fi:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0i_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0c_BFs0c");
    static BFs0i_BFu0i_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0c_BFs0c(Test_BFs0i_BFu0i_BFs0c_BFs0c, "BFs0i_BFu0i_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0c_BFs0i  {
  signed int  :0;
  unsigned int  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0c_BFs0i) C1{ Fi:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0i_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0c_BFs0i");
    static BFs0i_BFu0i_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0c_BFs0i(Test_BFs0i_BFu0i_BFs0c_BFs0i, "BFs0i_BFu0i_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0c_BFs0ll  {
  signed int  :0;
  unsigned int  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0c_BFs0ll) C1{ Fi:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0i_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0c_BFs0ll");
    static BFs0i_BFu0i_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0c_BFs0ll(Test_BFs0i_BFu0i_BFs0c_BFs0ll, "BFs0i_BFu0i_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0c_BFs0s  {
  signed int  :0;
  unsigned int  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0c_BFs0s) C1{ Fi:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0i_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0c_BFs0s");
    static BFs0i_BFu0i_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0c_BFs0s(Test_BFs0i_BFu0i_BFs0c_BFs0s, "BFs0i_BFu0i_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0c_BFu0c  {
  signed int  :0;
  unsigned int  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0c_BFu0c) C1{ Fi:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0i_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0c_BFu0c");
    static BFs0i_BFu0i_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0c_BFu0c(Test_BFs0i_BFu0i_BFs0c_BFu0c, "BFs0i_BFu0i_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0c_BFu0i  {
  signed int  :0;
  unsigned int  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0c_BFu0i) C1{ Fi:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0i_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0c_BFu0i");
    static BFs0i_BFu0i_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0c_BFu0i(Test_BFs0i_BFu0i_BFs0c_BFu0i, "BFs0i_BFu0i_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0c_BFu0ll  {
  signed int  :0;
  unsigned int  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0c_BFu0ll) C1{ Fi:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0i_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0c_BFu0ll");
    static BFs0i_BFu0i_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0c_BFu0ll(Test_BFs0i_BFu0i_BFs0c_BFu0ll, "BFs0i_BFu0i_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0c_BFu0s  {
  signed int  :0;
  unsigned int  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0c_BFu0s) C1{ Fi:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0i_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0c_BFu0s");
    static BFs0i_BFu0i_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0c_BFu0s(Test_BFs0i_BFu0i_BFs0c_BFu0s, "BFs0i_BFu0i_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0i  {
  signed int  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0i) C1{ Fi:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0i");
    static BFs0i_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0i(Test_BFs0i_BFu0i_BFs0i, "BFs0i_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0i_BFs0c  {
  signed int  :0;
  unsigned int  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0i_BFs0c) C1{ Fi:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0i_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0i_BFs0c");
    static BFs0i_BFu0i_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0i_BFs0c(Test_BFs0i_BFu0i_BFs0i_BFs0c, "BFs0i_BFu0i_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0i_BFs0i  {
  signed int  :0;
  unsigned int  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0i_BFs0i) C1{ Fi:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0i_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0i_BFs0i");
    static BFs0i_BFu0i_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0i_BFs0i(Test_BFs0i_BFu0i_BFs0i_BFs0i, "BFs0i_BFu0i_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0i_BFs0ll  {
  signed int  :0;
  unsigned int  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0i_BFs0ll) C1{ Fi:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0i_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0i_BFs0ll");
    static BFs0i_BFu0i_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0i_BFs0ll(Test_BFs0i_BFu0i_BFs0i_BFs0ll, "BFs0i_BFu0i_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0i_BFs0s  {
  signed int  :0;
  unsigned int  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0i_BFs0s) C1{ Fi:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0i_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0i_BFs0s");
    static BFs0i_BFu0i_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0i_BFs0s(Test_BFs0i_BFu0i_BFs0i_BFs0s, "BFs0i_BFu0i_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0i_BFu0c  {
  signed int  :0;
  unsigned int  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0i_BFu0c) C1{ Fi:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0i_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0i_BFu0c");
    static BFs0i_BFu0i_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0i_BFu0c(Test_BFs0i_BFu0i_BFs0i_BFu0c, "BFs0i_BFu0i_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0i_BFu0i  {
  signed int  :0;
  unsigned int  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0i_BFu0i) C1{ Fi:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0i_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0i_BFu0i");
    static BFs0i_BFu0i_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0i_BFu0i(Test_BFs0i_BFu0i_BFs0i_BFu0i, "BFs0i_BFu0i_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0i_BFu0ll  {
  signed int  :0;
  unsigned int  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0i_BFu0ll) C1{ Fi:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0i_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0i_BFu0ll");
    static BFs0i_BFu0i_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0i_BFu0ll(Test_BFs0i_BFu0i_BFs0i_BFu0ll, "BFs0i_BFu0i_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0i_BFu0s  {
  signed int  :0;
  unsigned int  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0i_BFu0s) C1{ Fi:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0i_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0i_BFu0s");
    static BFs0i_BFu0i_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0i_BFu0s(Test_BFs0i_BFu0i_BFs0i_BFu0s, "BFs0i_BFu0i_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0ll  {
  signed int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0ll) C1{ Fi:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0ll");
    static BFs0i_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0ll(Test_BFs0i_BFu0i_BFs0ll, "BFs0i_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0ll_BFs0c  {
  signed int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0ll_BFs0c) C1{ Fi:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0i_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0ll_BFs0c");
    static BFs0i_BFu0i_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0ll_BFs0c(Test_BFs0i_BFu0i_BFs0ll_BFs0c, "BFs0i_BFu0i_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0ll_BFs0i  {
  signed int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0ll_BFs0i) C1{ Fi:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0i_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0ll_BFs0i");
    static BFs0i_BFu0i_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0ll_BFs0i(Test_BFs0i_BFu0i_BFs0ll_BFs0i, "BFs0i_BFu0i_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0ll_BFs0ll  {
  signed int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0ll_BFs0ll) C1{ Fi:0 Fi:0 FL:0 FL:0}



static void Test_BFs0i_BFu0i_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0ll_BFs0ll");
    static BFs0i_BFu0i_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0ll_BFs0ll(Test_BFs0i_BFu0i_BFs0ll_BFs0ll, "BFs0i_BFu0i_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0ll_BFs0s  {
  signed int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0ll_BFs0s) C1{ Fi:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0i_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0ll_BFs0s");
    static BFs0i_BFu0i_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0ll_BFs0s(Test_BFs0i_BFu0i_BFs0ll_BFs0s, "BFs0i_BFu0i_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0ll_BFu0c  {
  signed int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0ll_BFu0c) C1{ Fi:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0i_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0ll_BFu0c");
    static BFs0i_BFu0i_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0ll_BFu0c(Test_BFs0i_BFu0i_BFs0ll_BFu0c, "BFs0i_BFu0i_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0ll_BFu0i  {
  signed int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0ll_BFu0i) C1{ Fi:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0i_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0ll_BFu0i");
    static BFs0i_BFu0i_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0ll_BFu0i(Test_BFs0i_BFu0i_BFs0ll_BFu0i, "BFs0i_BFu0i_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0ll_BFu0ll  {
  signed int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0ll_BFu0ll) C1{ Fi:0 Fi:0 FL:0 FL:0}



static void Test_BFs0i_BFu0i_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0ll_BFu0ll");
    static BFs0i_BFu0i_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0ll_BFu0ll(Test_BFs0i_BFu0i_BFs0ll_BFu0ll, "BFs0i_BFu0i_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0ll_BFu0s  {
  signed int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0ll_BFu0s) C1{ Fi:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0i_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0ll_BFu0s");
    static BFs0i_BFu0i_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0ll_BFu0s(Test_BFs0i_BFu0i_BFs0ll_BFu0s, "BFs0i_BFu0i_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0s  {
  signed int  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0s) C1{ Fi:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0s");
    static BFs0i_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0s(Test_BFs0i_BFu0i_BFs0s, "BFs0i_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0s_BFs0c  {
  signed int  :0;
  unsigned int  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0s_BFs0c) C1{ Fi:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0i_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0s_BFs0c");
    static BFs0i_BFu0i_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0s_BFs0c(Test_BFs0i_BFu0i_BFs0s_BFs0c, "BFs0i_BFu0i_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0s_BFs0i  {
  signed int  :0;
  unsigned int  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0s_BFs0i) C1{ Fi:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0i_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0s_BFs0i");
    static BFs0i_BFu0i_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0s_BFs0i(Test_BFs0i_BFu0i_BFs0s_BFs0i, "BFs0i_BFu0i_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0s_BFs0ll  {
  signed int  :0;
  unsigned int  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0s_BFs0ll) C1{ Fi:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0i_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0s_BFs0ll");
    static BFs0i_BFu0i_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0s_BFs0ll(Test_BFs0i_BFu0i_BFs0s_BFs0ll, "BFs0i_BFu0i_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0s_BFs0s  {
  signed int  :0;
  unsigned int  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0s_BFs0s) C1{ Fi:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0i_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0s_BFs0s");
    static BFs0i_BFu0i_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0s_BFs0s(Test_BFs0i_BFu0i_BFs0s_BFs0s, "BFs0i_BFu0i_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0s_BFu0c  {
  signed int  :0;
  unsigned int  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0s_BFu0c) C1{ Fi:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0i_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0s_BFu0c");
    static BFs0i_BFu0i_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0s_BFu0c(Test_BFs0i_BFu0i_BFs0s_BFu0c, "BFs0i_BFu0i_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0s_BFu0i  {
  signed int  :0;
  unsigned int  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0s_BFu0i) C1{ Fi:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0i_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0s_BFu0i");
    static BFs0i_BFu0i_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0s_BFu0i(Test_BFs0i_BFu0i_BFs0s_BFu0i, "BFs0i_BFu0i_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0s_BFu0ll  {
  signed int  :0;
  unsigned int  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0s_BFu0ll) C1{ Fi:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0i_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0s_BFu0ll");
    static BFs0i_BFu0i_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0s_BFu0ll(Test_BFs0i_BFu0i_BFs0s_BFu0ll, "BFs0i_BFu0i_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFs0s_BFu0s  {
  signed int  :0;
  unsigned int  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0i_BFs0s_BFu0s) C1{ Fi:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0i_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFs0s_BFu0s");
    static BFs0i_BFu0i_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFs0s_BFu0s(Test_BFs0i_BFu0i_BFs0s_BFu0s, "BFs0i_BFu0i_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0c  {
  signed int  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0c) C1{ Fi:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0c");
    static BFs0i_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0c(Test_BFs0i_BFu0i_BFu0c, "BFs0i_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0c_BFs0c  {
  signed int  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0c_BFs0c) C1{ Fi:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0i_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0c_BFs0c");
    static BFs0i_BFu0i_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0c_BFs0c(Test_BFs0i_BFu0i_BFu0c_BFs0c, "BFs0i_BFu0i_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0c_BFs0i  {
  signed int  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0c_BFs0i) C1{ Fi:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0i_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0c_BFs0i");
    static BFs0i_BFu0i_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0c_BFs0i(Test_BFs0i_BFu0i_BFu0c_BFs0i, "BFs0i_BFu0i_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0c_BFs0ll  {
  signed int  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0c_BFs0ll) C1{ Fi:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0i_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0c_BFs0ll");
    static BFs0i_BFu0i_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0c_BFs0ll(Test_BFs0i_BFu0i_BFu0c_BFs0ll, "BFs0i_BFu0i_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0c_BFs0s  {
  signed int  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0c_BFs0s) C1{ Fi:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0i_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0c_BFs0s");
    static BFs0i_BFu0i_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0c_BFs0s(Test_BFs0i_BFu0i_BFu0c_BFs0s, "BFs0i_BFu0i_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0c_BFu0c  {
  signed int  :0;
  unsigned int  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0c_BFu0c) C1{ Fi:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0i_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0c_BFu0c");
    static BFs0i_BFu0i_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0c_BFu0c(Test_BFs0i_BFu0i_BFu0c_BFu0c, "BFs0i_BFu0i_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0c_BFu0i  {
  signed int  :0;
  unsigned int  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0c_BFu0i) C1{ Fi:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0i_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0c_BFu0i");
    static BFs0i_BFu0i_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0c_BFu0i(Test_BFs0i_BFu0i_BFu0c_BFu0i, "BFs0i_BFu0i_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0c_BFu0ll  {
  signed int  :0;
  unsigned int  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0c_BFu0ll) C1{ Fi:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0i_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0c_BFu0ll");
    static BFs0i_BFu0i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0c_BFu0ll(Test_BFs0i_BFu0i_BFu0c_BFu0ll, "BFs0i_BFu0i_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0c_BFu0s  {
  signed int  :0;
  unsigned int  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0c_BFu0s) C1{ Fi:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0i_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0c_BFu0s");
    static BFs0i_BFu0i_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0c_BFu0s(Test_BFs0i_BFu0i_BFu0c_BFu0s, "BFs0i_BFu0i_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0i  {
  signed int  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0i) C1{ Fi:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0i");
    static BFs0i_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0i(Test_BFs0i_BFu0i_BFu0i, "BFs0i_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0i_BFs0c  {
  signed int  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0i_BFs0c) C1{ Fi:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0i_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0i_BFs0c");
    static BFs0i_BFu0i_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0i_BFs0c(Test_BFs0i_BFu0i_BFu0i_BFs0c, "BFs0i_BFu0i_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0i_BFs0i  {
  signed int  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0i_BFs0i) C1{ Fi:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0i_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0i_BFs0i");
    static BFs0i_BFu0i_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0i_BFs0i(Test_BFs0i_BFu0i_BFu0i_BFs0i, "BFs0i_BFu0i_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0i_BFs0ll  {
  signed int  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0i_BFs0ll) C1{ Fi:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0i_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0i_BFs0ll");
    static BFs0i_BFu0i_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0i_BFs0ll(Test_BFs0i_BFu0i_BFu0i_BFs0ll, "BFs0i_BFu0i_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0i_BFs0s  {
  signed int  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0i_BFs0s) C1{ Fi:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0i_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0i_BFs0s");
    static BFs0i_BFu0i_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0i_BFs0s(Test_BFs0i_BFu0i_BFu0i_BFs0s, "BFs0i_BFu0i_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0i_BFu0c  {
  signed int  :0;
  unsigned int  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0i_BFu0c) C1{ Fi:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0i_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0i_BFu0c");
    static BFs0i_BFu0i_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0i_BFu0c(Test_BFs0i_BFu0i_BFu0i_BFu0c, "BFs0i_BFu0i_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0i_BFu0i  {
  signed int  :0;
  unsigned int  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0i_BFu0i) C1{ Fi:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0i_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0i_BFu0i");
    static BFs0i_BFu0i_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0i_BFu0i(Test_BFs0i_BFu0i_BFu0i_BFu0i, "BFs0i_BFu0i_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0i_BFu0ll  {
  signed int  :0;
  unsigned int  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0i_BFu0ll) C1{ Fi:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0i_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0i_BFu0ll");
    static BFs0i_BFu0i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0i_BFu0ll(Test_BFs0i_BFu0i_BFu0i_BFu0ll, "BFs0i_BFu0i_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0i_BFu0s  {
  signed int  :0;
  unsigned int  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0i_BFu0s) C1{ Fi:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0i_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0i_BFu0s");
    static BFs0i_BFu0i_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0i_BFu0s(Test_BFs0i_BFu0i_BFu0i_BFu0s, "BFs0i_BFu0i_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0ll  {
  signed int  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0ll) C1{ Fi:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0ll");
    static BFs0i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0ll(Test_BFs0i_BFu0i_BFu0ll, "BFs0i_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0ll_BFs0c  {
  signed int  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0ll_BFs0c) C1{ Fi:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0i_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0ll_BFs0c");
    static BFs0i_BFu0i_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0ll_BFs0c(Test_BFs0i_BFu0i_BFu0ll_BFs0c, "BFs0i_BFu0i_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0ll_BFs0i  {
  signed int  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0ll_BFs0i) C1{ Fi:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0i_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0ll_BFs0i");
    static BFs0i_BFu0i_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0ll_BFs0i(Test_BFs0i_BFu0i_BFu0ll_BFs0i, "BFs0i_BFu0i_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0ll_BFs0ll  {
  signed int  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0ll_BFs0ll) C1{ Fi:0 Fi:0 FL:0 FL:0}



static void Test_BFs0i_BFu0i_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0ll_BFs0ll");
    static BFs0i_BFu0i_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0ll_BFs0ll(Test_BFs0i_BFu0i_BFu0ll_BFs0ll, "BFs0i_BFu0i_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0ll_BFs0s  {
  signed int  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0ll_BFs0s) C1{ Fi:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0i_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0ll_BFs0s");
    static BFs0i_BFu0i_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0ll_BFs0s(Test_BFs0i_BFu0i_BFu0ll_BFs0s, "BFs0i_BFu0i_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0ll_BFu0c  {
  signed int  :0;
  unsigned int  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0ll_BFu0c) C1{ Fi:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0i_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0ll_BFu0c");
    static BFs0i_BFu0i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0ll_BFu0c(Test_BFs0i_BFu0i_BFu0ll_BFu0c, "BFs0i_BFu0i_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0ll_BFu0i  {
  signed int  :0;
  unsigned int  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0ll_BFu0i) C1{ Fi:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0i_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0ll_BFu0i");
    static BFs0i_BFu0i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0ll_BFu0i(Test_BFs0i_BFu0i_BFu0ll_BFu0i, "BFs0i_BFu0i_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0ll_BFu0ll  {
  signed int  :0;
  unsigned int  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0ll_BFu0ll) C1{ Fi:0 Fi:0 FL:0 FL:0}



static void Test_BFs0i_BFu0i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0ll_BFu0ll");
    static BFs0i_BFu0i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0ll_BFu0ll(Test_BFs0i_BFu0i_BFu0ll_BFu0ll, "BFs0i_BFu0i_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0ll_BFu0s  {
  signed int  :0;
  unsigned int  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0ll_BFu0s) C1{ Fi:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0i_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0ll_BFu0s");
    static BFs0i_BFu0i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0ll_BFu0s(Test_BFs0i_BFu0i_BFu0ll_BFu0s, "BFs0i_BFu0i_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0s  {
  signed int  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0s) C1{ Fi:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0s");
    static BFs0i_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0s(Test_BFs0i_BFu0i_BFu0s, "BFs0i_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0s_BFs0c  {
  signed int  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0s_BFs0c) C1{ Fi:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0i_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0s_BFs0c");
    static BFs0i_BFu0i_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0s_BFs0c(Test_BFs0i_BFu0i_BFu0s_BFs0c, "BFs0i_BFu0i_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0s_BFs0i  {
  signed int  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0s_BFs0i) C1{ Fi:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0i_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0s_BFs0i");
    static BFs0i_BFu0i_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0s_BFs0i(Test_BFs0i_BFu0i_BFu0s_BFs0i, "BFs0i_BFu0i_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0s_BFs0ll  {
  signed int  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0s_BFs0ll) C1{ Fi:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0i_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0s_BFs0ll");
    static BFs0i_BFu0i_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0s_BFs0ll(Test_BFs0i_BFu0i_BFu0s_BFs0ll, "BFs0i_BFu0i_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0s_BFs0s  {
  signed int  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0s_BFs0s) C1{ Fi:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0i_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0s_BFs0s");
    static BFs0i_BFu0i_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0s_BFs0s(Test_BFs0i_BFu0i_BFu0s_BFs0s, "BFs0i_BFu0i_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0s_BFu0c  {
  signed int  :0;
  unsigned int  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0s_BFu0c) C1{ Fi:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0i_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0s_BFu0c");
    static BFs0i_BFu0i_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0s_BFu0c(Test_BFs0i_BFu0i_BFu0s_BFu0c, "BFs0i_BFu0i_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0s_BFu0i  {
  signed int  :0;
  unsigned int  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0s_BFu0i) C1{ Fi:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0i_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0s_BFu0i");
    static BFs0i_BFu0i_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0s_BFu0i(Test_BFs0i_BFu0i_BFu0s_BFu0i, "BFs0i_BFu0i_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0s_BFu0ll  {
  signed int  :0;
  unsigned int  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0s_BFu0ll) C1{ Fi:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0i_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0s_BFu0ll");
    static BFs0i_BFu0i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0s_BFu0ll(Test_BFs0i_BFu0i_BFu0s_BFu0ll, "BFs0i_BFu0i_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0i_BFu0s_BFu0s  {
  signed int  :0;
  unsigned int  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0i_BFu0s_BFu0s) C1{ Fi:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0i_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0i_BFu0s_BFu0s");
    static BFs0i_BFu0i_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0i_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0i_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0i_BFu0s_BFu0s(Test_BFs0i_BFu0i_BFu0s_BFu0s, "BFs0i_BFu0i_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll  {
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0ll) C1{ Fi:0 FL:0}



static void Test_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll");
    static BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll(Test_BFs0i_BFu0ll, "BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0c  {
  signed int  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0c) C1{ Fi:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0c");
    static BFs0i_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0c(Test_BFs0i_BFu0ll_BFs0c, "BFs0i_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0c_BFs0c  {
  signed int  :0;
  __tsu64  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0c_BFs0c) C1{ Fi:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0c_BFs0c");
    static BFs0i_BFu0ll_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0c_BFs0c(Test_BFs0i_BFu0ll_BFs0c_BFs0c, "BFs0i_BFu0ll_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0c_BFs0i  {
  signed int  :0;
  __tsu64  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0c_BFs0i) C1{ Fi:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0c_BFs0i");
    static BFs0i_BFu0ll_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0c_BFs0i(Test_BFs0i_BFu0ll_BFs0c_BFs0i, "BFs0i_BFu0ll_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0c_BFs0ll  {
  signed int  :0;
  __tsu64  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0c_BFs0ll) C1{ Fi:0 FL:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0ll_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0c_BFs0ll");
    static BFs0i_BFu0ll_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0c_BFs0ll(Test_BFs0i_BFu0ll_BFs0c_BFs0ll, "BFs0i_BFu0ll_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0c_BFs0s  {
  signed int  :0;
  __tsu64  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0c_BFs0s) C1{ Fi:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0c_BFs0s");
    static BFs0i_BFu0ll_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0c_BFs0s(Test_BFs0i_BFu0ll_BFs0c_BFs0s, "BFs0i_BFu0ll_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0c_BFu0c  {
  signed int  :0;
  __tsu64  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0c_BFu0c) C1{ Fi:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0c_BFu0c");
    static BFs0i_BFu0ll_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0c_BFu0c(Test_BFs0i_BFu0ll_BFs0c_BFu0c, "BFs0i_BFu0ll_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0c_BFu0i  {
  signed int  :0;
  __tsu64  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0c_BFu0i) C1{ Fi:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0c_BFu0i");
    static BFs0i_BFu0ll_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0c_BFu0i(Test_BFs0i_BFu0ll_BFs0c_BFu0i, "BFs0i_BFu0ll_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0c_BFu0ll  {
  signed int  :0;
  __tsu64  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0c_BFu0ll) C1{ Fi:0 FL:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0ll_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0c_BFu0ll");
    static BFs0i_BFu0ll_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0c_BFu0ll(Test_BFs0i_BFu0ll_BFs0c_BFu0ll, "BFs0i_BFu0ll_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0c_BFu0s  {
  signed int  :0;
  __tsu64  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0c_BFu0s) C1{ Fi:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0c_BFu0s");
    static BFs0i_BFu0ll_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0c_BFu0s(Test_BFs0i_BFu0ll_BFs0c_BFu0s, "BFs0i_BFu0ll_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0i  {
  signed int  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0i) C1{ Fi:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0i");
    static BFs0i_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0i(Test_BFs0i_BFu0ll_BFs0i, "BFs0i_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0i_BFs0c  {
  signed int  :0;
  __tsu64  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0i_BFs0c) C1{ Fi:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0i_BFs0c");
    static BFs0i_BFu0ll_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0i_BFs0c(Test_BFs0i_BFu0ll_BFs0i_BFs0c, "BFs0i_BFu0ll_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0i_BFs0i  {
  signed int  :0;
  __tsu64  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0i_BFs0i) C1{ Fi:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0i_BFs0i");
    static BFs0i_BFu0ll_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0i_BFs0i(Test_BFs0i_BFu0ll_BFs0i_BFs0i, "BFs0i_BFu0ll_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0i_BFs0ll  {
  signed int  :0;
  __tsu64  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0i_BFs0ll) C1{ Fi:0 FL:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0ll_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0i_BFs0ll");
    static BFs0i_BFu0ll_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0i_BFs0ll(Test_BFs0i_BFu0ll_BFs0i_BFs0ll, "BFs0i_BFu0ll_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0i_BFs0s  {
  signed int  :0;
  __tsu64  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0i_BFs0s) C1{ Fi:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0i_BFs0s");
    static BFs0i_BFu0ll_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0i_BFs0s(Test_BFs0i_BFu0ll_BFs0i_BFs0s, "BFs0i_BFu0ll_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0i_BFu0c  {
  signed int  :0;
  __tsu64  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0i_BFu0c) C1{ Fi:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0i_BFu0c");
    static BFs0i_BFu0ll_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0i_BFu0c(Test_BFs0i_BFu0ll_BFs0i_BFu0c, "BFs0i_BFu0ll_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0i_BFu0i  {
  signed int  :0;
  __tsu64  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0i_BFu0i) C1{ Fi:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0i_BFu0i");
    static BFs0i_BFu0ll_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0i_BFu0i(Test_BFs0i_BFu0ll_BFs0i_BFu0i, "BFs0i_BFu0ll_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0i_BFu0ll  {
  signed int  :0;
  __tsu64  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0i_BFu0ll) C1{ Fi:0 FL:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0ll_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0i_BFu0ll");
    static BFs0i_BFu0ll_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0i_BFu0ll(Test_BFs0i_BFu0ll_BFs0i_BFu0ll, "BFs0i_BFu0ll_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0i_BFu0s  {
  signed int  :0;
  __tsu64  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0i_BFu0s) C1{ Fi:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0i_BFu0s");
    static BFs0i_BFu0ll_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0i_BFu0s(Test_BFs0i_BFu0ll_BFs0i_BFu0s, "BFs0i_BFu0ll_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0ll  {
  signed int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0ll) C1{ Fi:0 FL:0 FL:0}



static void Test_BFs0i_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0ll");
    static BFs0i_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0ll(Test_BFs0i_BFu0ll_BFs0ll, "BFs0i_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0ll_BFs0c  {
  signed int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0ll_BFs0c) C1{ Fi:0 FL:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0ll_BFs0c");
    static BFs0i_BFu0ll_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0ll_BFs0c(Test_BFs0i_BFu0ll_BFs0ll_BFs0c, "BFs0i_BFu0ll_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0ll_BFs0i  {
  signed int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0ll_BFs0i) C1{ Fi:0 FL:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0ll_BFs0i");
    static BFs0i_BFu0ll_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0ll_BFs0i(Test_BFs0i_BFu0ll_BFs0ll_BFs0i, "BFs0i_BFu0ll_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0ll_BFs0ll  {
  signed int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0ll_BFs0ll) C1{ Fi:0 FL:0 FL:0 FL:0}



static void Test_BFs0i_BFu0ll_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0ll_BFs0ll");
    static BFs0i_BFu0ll_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0ll_BFs0ll(Test_BFs0i_BFu0ll_BFs0ll_BFs0ll, "BFs0i_BFu0ll_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0ll_BFs0s  {
  signed int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0ll_BFs0s) C1{ Fi:0 FL:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0ll_BFs0s");
    static BFs0i_BFu0ll_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0ll_BFs0s(Test_BFs0i_BFu0ll_BFs0ll_BFs0s, "BFs0i_BFu0ll_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0ll_BFu0c  {
  signed int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0ll_BFu0c) C1{ Fi:0 FL:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0ll_BFu0c");
    static BFs0i_BFu0ll_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0ll_BFu0c(Test_BFs0i_BFu0ll_BFs0ll_BFu0c, "BFs0i_BFu0ll_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0ll_BFu0i  {
  signed int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0ll_BFu0i) C1{ Fi:0 FL:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0ll_BFu0i");
    static BFs0i_BFu0ll_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0ll_BFu0i(Test_BFs0i_BFu0ll_BFs0ll_BFu0i, "BFs0i_BFu0ll_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0ll_BFu0ll  {
  signed int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0ll_BFu0ll) C1{ Fi:0 FL:0 FL:0 FL:0}



static void Test_BFs0i_BFu0ll_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0ll_BFu0ll");
    static BFs0i_BFu0ll_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0ll_BFu0ll(Test_BFs0i_BFu0ll_BFs0ll_BFu0ll, "BFs0i_BFu0ll_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0ll_BFu0s  {
  signed int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0ll_BFu0s) C1{ Fi:0 FL:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0ll_BFu0s");
    static BFs0i_BFu0ll_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0ll_BFu0s(Test_BFs0i_BFu0ll_BFs0ll_BFu0s, "BFs0i_BFu0ll_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0s  {
  signed int  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0s) C1{ Fi:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0s");
    static BFs0i_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0s(Test_BFs0i_BFu0ll_BFs0s, "BFs0i_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0s_BFs0c  {
  signed int  :0;
  __tsu64  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0s_BFs0c) C1{ Fi:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0s_BFs0c");
    static BFs0i_BFu0ll_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0s_BFs0c(Test_BFs0i_BFu0ll_BFs0s_BFs0c, "BFs0i_BFu0ll_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0s_BFs0i  {
  signed int  :0;
  __tsu64  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0s_BFs0i) C1{ Fi:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0s_BFs0i");
    static BFs0i_BFu0ll_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0s_BFs0i(Test_BFs0i_BFu0ll_BFs0s_BFs0i, "BFs0i_BFu0ll_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0s_BFs0ll  {
  signed int  :0;
  __tsu64  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0s_BFs0ll) C1{ Fi:0 FL:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0ll_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0s_BFs0ll");
    static BFs0i_BFu0ll_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0s_BFs0ll(Test_BFs0i_BFu0ll_BFs0s_BFs0ll, "BFs0i_BFu0ll_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0s_BFs0s  {
  signed int  :0;
  __tsu64  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0s_BFs0s) C1{ Fi:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0s_BFs0s");
    static BFs0i_BFu0ll_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0s_BFs0s(Test_BFs0i_BFu0ll_BFs0s_BFs0s, "BFs0i_BFu0ll_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0s_BFu0c  {
  signed int  :0;
  __tsu64  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0s_BFu0c) C1{ Fi:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0s_BFu0c");
    static BFs0i_BFu0ll_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0s_BFu0c(Test_BFs0i_BFu0ll_BFs0s_BFu0c, "BFs0i_BFu0ll_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0s_BFu0i  {
  signed int  :0;
  __tsu64  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0s_BFu0i) C1{ Fi:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0s_BFu0i");
    static BFs0i_BFu0ll_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0s_BFu0i(Test_BFs0i_BFu0ll_BFs0s_BFu0i, "BFs0i_BFu0ll_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0s_BFu0ll  {
  signed int  :0;
  __tsu64  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0s_BFu0ll) C1{ Fi:0 FL:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0ll_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0s_BFu0ll");
    static BFs0i_BFu0ll_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0s_BFu0ll(Test_BFs0i_BFu0ll_BFs0s_BFu0ll, "BFs0i_BFu0ll_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFs0s_BFu0s  {
  signed int  :0;
  __tsu64  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFs0s_BFu0s) C1{ Fi:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFs0s_BFu0s");
    static BFs0i_BFu0ll_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFs0s_BFu0s(Test_BFs0i_BFu0ll_BFs0s_BFu0s, "BFs0i_BFu0ll_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0c  {
  signed int  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0c) C1{ Fi:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0c");
    static BFs0i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0c(Test_BFs0i_BFu0ll_BFu0c, "BFs0i_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0c_BFs0c  {
  signed int  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0c_BFs0c) C1{ Fi:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0c_BFs0c");
    static BFs0i_BFu0ll_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0c_BFs0c(Test_BFs0i_BFu0ll_BFu0c_BFs0c, "BFs0i_BFu0ll_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0c_BFs0i  {
  signed int  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0c_BFs0i) C1{ Fi:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0c_BFs0i");
    static BFs0i_BFu0ll_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0c_BFs0i(Test_BFs0i_BFu0ll_BFu0c_BFs0i, "BFs0i_BFu0ll_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0c_BFs0ll  {
  signed int  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0c_BFs0ll) C1{ Fi:0 FL:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0ll_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0c_BFs0ll");
    static BFs0i_BFu0ll_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0c_BFs0ll(Test_BFs0i_BFu0ll_BFu0c_BFs0ll, "BFs0i_BFu0ll_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0c_BFs0s  {
  signed int  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0c_BFs0s) C1{ Fi:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0c_BFs0s");
    static BFs0i_BFu0ll_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0c_BFs0s(Test_BFs0i_BFu0ll_BFu0c_BFs0s, "BFs0i_BFu0ll_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0c_BFu0c  {
  signed int  :0;
  __tsu64  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0c_BFu0c) C1{ Fi:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0c_BFu0c");
    static BFs0i_BFu0ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0c_BFu0c(Test_BFs0i_BFu0ll_BFu0c_BFu0c, "BFs0i_BFu0ll_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0c_BFu0i  {
  signed int  :0;
  __tsu64  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0c_BFu0i) C1{ Fi:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0c_BFu0i");
    static BFs0i_BFu0ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0c_BFu0i(Test_BFs0i_BFu0ll_BFu0c_BFu0i, "BFs0i_BFu0ll_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0c_BFu0ll  {
  signed int  :0;
  __tsu64  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0c_BFu0ll) C1{ Fi:0 FL:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0c_BFu0ll");
    static BFs0i_BFu0ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0c_BFu0ll(Test_BFs0i_BFu0ll_BFu0c_BFu0ll, "BFs0i_BFu0ll_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0c_BFu0s  {
  signed int  :0;
  __tsu64  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0c_BFu0s) C1{ Fi:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0c_BFu0s");
    static BFs0i_BFu0ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0c_BFu0s(Test_BFs0i_BFu0ll_BFu0c_BFu0s, "BFs0i_BFu0ll_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0i  {
  signed int  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0i) C1{ Fi:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0i");
    static BFs0i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0i(Test_BFs0i_BFu0ll_BFu0i, "BFs0i_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0i_BFs0c  {
  signed int  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0i_BFs0c) C1{ Fi:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0i_BFs0c");
    static BFs0i_BFu0ll_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0i_BFs0c(Test_BFs0i_BFu0ll_BFu0i_BFs0c, "BFs0i_BFu0ll_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0i_BFs0i  {
  signed int  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0i_BFs0i) C1{ Fi:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0i_BFs0i");
    static BFs0i_BFu0ll_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0i_BFs0i(Test_BFs0i_BFu0ll_BFu0i_BFs0i, "BFs0i_BFu0ll_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0i_BFs0ll  {
  signed int  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0i_BFs0ll) C1{ Fi:0 FL:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0ll_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0i_BFs0ll");
    static BFs0i_BFu0ll_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0i_BFs0ll(Test_BFs0i_BFu0ll_BFu0i_BFs0ll, "BFs0i_BFu0ll_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0i_BFs0s  {
  signed int  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0i_BFs0s) C1{ Fi:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0i_BFs0s");
    static BFs0i_BFu0ll_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0i_BFs0s(Test_BFs0i_BFu0ll_BFu0i_BFs0s, "BFs0i_BFu0ll_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0i_BFu0c  {
  signed int  :0;
  __tsu64  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0i_BFu0c) C1{ Fi:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0i_BFu0c");
    static BFs0i_BFu0ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0i_BFu0c(Test_BFs0i_BFu0ll_BFu0i_BFu0c, "BFs0i_BFu0ll_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0i_BFu0i  {
  signed int  :0;
  __tsu64  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0i_BFu0i) C1{ Fi:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0i_BFu0i");
    static BFs0i_BFu0ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0i_BFu0i(Test_BFs0i_BFu0ll_BFu0i_BFu0i, "BFs0i_BFu0ll_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0i_BFu0ll  {
  signed int  :0;
  __tsu64  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0i_BFu0ll) C1{ Fi:0 FL:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0i_BFu0ll");
    static BFs0i_BFu0ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0i_BFu0ll(Test_BFs0i_BFu0ll_BFu0i_BFu0ll, "BFs0i_BFu0ll_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0i_BFu0s  {
  signed int  :0;
  __tsu64  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0i_BFu0s) C1{ Fi:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0i_BFu0s");
    static BFs0i_BFu0ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0i_BFu0s(Test_BFs0i_BFu0ll_BFu0i_BFu0s, "BFs0i_BFu0ll_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0ll  {
  signed int  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0ll) C1{ Fi:0 FL:0 FL:0}



static void Test_BFs0i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0ll");
    static BFs0i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0ll(Test_BFs0i_BFu0ll_BFu0ll, "BFs0i_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0ll_BFs0c  {
  signed int  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0ll_BFs0c) C1{ Fi:0 FL:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0ll_BFs0c");
    static BFs0i_BFu0ll_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0ll_BFs0c(Test_BFs0i_BFu0ll_BFu0ll_BFs0c, "BFs0i_BFu0ll_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0ll_BFs0i  {
  signed int  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0ll_BFs0i) C1{ Fi:0 FL:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0ll_BFs0i");
    static BFs0i_BFu0ll_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0ll_BFs0i(Test_BFs0i_BFu0ll_BFu0ll_BFs0i, "BFs0i_BFu0ll_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0ll_BFs0ll  {
  signed int  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0ll_BFs0ll) C1{ Fi:0 FL:0 FL:0 FL:0}



static void Test_BFs0i_BFu0ll_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0ll_BFs0ll");
    static BFs0i_BFu0ll_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0ll_BFs0ll(Test_BFs0i_BFu0ll_BFu0ll_BFs0ll, "BFs0i_BFu0ll_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0ll_BFs0s  {
  signed int  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0ll_BFs0s) C1{ Fi:0 FL:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0ll_BFs0s");
    static BFs0i_BFu0ll_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0ll_BFs0s(Test_BFs0i_BFu0ll_BFu0ll_BFs0s, "BFs0i_BFu0ll_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0ll_BFu0c  {
  signed int  :0;
  __tsu64  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0ll_BFu0c) C1{ Fi:0 FL:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0ll_BFu0c");
    static BFs0i_BFu0ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0ll_BFu0c(Test_BFs0i_BFu0ll_BFu0ll_BFu0c, "BFs0i_BFu0ll_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0ll_BFu0i  {
  signed int  :0;
  __tsu64  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0ll_BFu0i) C1{ Fi:0 FL:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0ll_BFu0i");
    static BFs0i_BFu0ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0ll_BFu0i(Test_BFs0i_BFu0ll_BFu0ll_BFu0i, "BFs0i_BFu0ll_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0ll_BFu0ll  {
  signed int  :0;
  __tsu64  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0ll_BFu0ll) C1{ Fi:0 FL:0 FL:0 FL:0}



static void Test_BFs0i_BFu0ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0ll_BFu0ll");
    static BFs0i_BFu0ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0ll_BFu0ll(Test_BFs0i_BFu0ll_BFu0ll_BFu0ll, "BFs0i_BFu0ll_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0ll_BFu0s  {
  signed int  :0;
  __tsu64  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0ll_BFu0s) C1{ Fi:0 FL:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0ll_BFu0s");
    static BFs0i_BFu0ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0ll_BFu0s(Test_BFs0i_BFu0ll_BFu0ll_BFu0s, "BFs0i_BFu0ll_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0s  {
  signed int  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0s) C1{ Fi:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0s");
    static BFs0i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0s(Test_BFs0i_BFu0ll_BFu0s, "BFs0i_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0s_BFs0c  {
  signed int  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0s_BFs0c) C1{ Fi:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0s_BFs0c");
    static BFs0i_BFu0ll_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0s_BFs0c(Test_BFs0i_BFu0ll_BFu0s_BFs0c, "BFs0i_BFu0ll_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0s_BFs0i  {
  signed int  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0s_BFs0i) C1{ Fi:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0s_BFs0i");
    static BFs0i_BFu0ll_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0s_BFs0i(Test_BFs0i_BFu0ll_BFu0s_BFs0i, "BFs0i_BFu0ll_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0s_BFs0ll  {
  signed int  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0s_BFs0ll) C1{ Fi:0 FL:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0ll_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0s_BFs0ll");
    static BFs0i_BFu0ll_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0s_BFs0ll(Test_BFs0i_BFu0ll_BFu0s_BFs0ll, "BFs0i_BFu0ll_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0s_BFs0s  {
  signed int  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0s_BFs0s) C1{ Fi:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0s_BFs0s");
    static BFs0i_BFu0ll_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0s_BFs0s(Test_BFs0i_BFu0ll_BFu0s_BFs0s, "BFs0i_BFu0ll_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0s_BFu0c  {
  signed int  :0;
  __tsu64  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0s_BFu0c) C1{ Fi:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0ll_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0s_BFu0c");
    static BFs0i_BFu0ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0s_BFu0c(Test_BFs0i_BFu0ll_BFu0s_BFu0c, "BFs0i_BFu0ll_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0s_BFu0i  {
  signed int  :0;
  __tsu64  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0s_BFu0i) C1{ Fi:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0ll_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0s_BFu0i");
    static BFs0i_BFu0ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0s_BFu0i(Test_BFs0i_BFu0ll_BFu0s_BFu0i, "BFs0i_BFu0ll_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0s_BFu0ll  {
  signed int  :0;
  __tsu64  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0s_BFu0ll) C1{ Fi:0 FL:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0s_BFu0ll");
    static BFs0i_BFu0ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0s_BFu0ll(Test_BFs0i_BFu0ll_BFu0s_BFu0ll, "BFs0i_BFu0ll_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0ll_BFu0s_BFu0s  {
  signed int  :0;
  __tsu64  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0ll_BFu0s_BFu0s) C1{ Fi:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0ll_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0ll_BFu0s_BFu0s");
    static BFs0i_BFu0ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0ll_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0ll_BFu0s_BFu0s(Test_BFs0i_BFu0ll_BFu0s_BFu0s, "BFs0i_BFu0ll_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s  {
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0s) C1{ Fi:0 Fs:0}



static void Test_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0s");
    static BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s(Test_BFs0i_BFu0s, "BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0c  {
  signed int  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0c) C1{ Fi:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0c");
    static BFs0i_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0c(Test_BFs0i_BFu0s_BFs0c, "BFs0i_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0c_BFs0c  {
  signed int  :0;
  unsigned short  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0c_BFs0c) C1{ Fi:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0s_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0c_BFs0c");
    static BFs0i_BFu0s_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0c_BFs0c(Test_BFs0i_BFu0s_BFs0c_BFs0c, "BFs0i_BFu0s_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0c_BFs0i  {
  signed int  :0;
  unsigned short  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0c_BFs0i) C1{ Fi:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0s_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0c_BFs0i");
    static BFs0i_BFu0s_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0c_BFs0i(Test_BFs0i_BFu0s_BFs0c_BFs0i, "BFs0i_BFu0s_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0c_BFs0ll  {
  signed int  :0;
  unsigned short  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0c_BFs0ll) C1{ Fi:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0s_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0c_BFs0ll");
    static BFs0i_BFu0s_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0c_BFs0ll(Test_BFs0i_BFu0s_BFs0c_BFs0ll, "BFs0i_BFu0s_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0c_BFs0s  {
  signed int  :0;
  unsigned short  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0c_BFs0s) C1{ Fi:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0s_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0c_BFs0s");
    static BFs0i_BFu0s_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0c_BFs0s(Test_BFs0i_BFu0s_BFs0c_BFs0s, "BFs0i_BFu0s_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0c_BFu0c  {
  signed int  :0;
  unsigned short  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0c_BFu0c) C1{ Fi:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0s_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0c_BFu0c");
    static BFs0i_BFu0s_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0c_BFu0c(Test_BFs0i_BFu0s_BFs0c_BFu0c, "BFs0i_BFu0s_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0c_BFu0i  {
  signed int  :0;
  unsigned short  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0c_BFu0i) C1{ Fi:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0s_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0c_BFu0i");
    static BFs0i_BFu0s_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0c_BFu0i(Test_BFs0i_BFu0s_BFs0c_BFu0i, "BFs0i_BFu0s_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0c_BFu0ll  {
  signed int  :0;
  unsigned short  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0c_BFu0ll) C1{ Fi:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0s_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0c_BFu0ll");
    static BFs0i_BFu0s_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0c_BFu0ll(Test_BFs0i_BFu0s_BFs0c_BFu0ll, "BFs0i_BFu0s_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0c_BFu0s  {
  signed int  :0;
  unsigned short  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0c_BFu0s) C1{ Fi:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0s_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0c_BFu0s");
    static BFs0i_BFu0s_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0c_BFu0s(Test_BFs0i_BFu0s_BFs0c_BFu0s, "BFs0i_BFu0s_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0i  {
  signed int  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0i) C1{ Fi:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0i");
    static BFs0i_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0i(Test_BFs0i_BFu0s_BFs0i, "BFs0i_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0i_BFs0c  {
  signed int  :0;
  unsigned short  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0i_BFs0c) C1{ Fi:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0s_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0i_BFs0c");
    static BFs0i_BFu0s_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0i_BFs0c(Test_BFs0i_BFu0s_BFs0i_BFs0c, "BFs0i_BFu0s_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0i_BFs0i  {
  signed int  :0;
  unsigned short  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0i_BFs0i) C1{ Fi:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0s_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0i_BFs0i");
    static BFs0i_BFu0s_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0i_BFs0i(Test_BFs0i_BFu0s_BFs0i_BFs0i, "BFs0i_BFu0s_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0i_BFs0ll  {
  signed int  :0;
  unsigned short  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0i_BFs0ll) C1{ Fi:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0s_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0i_BFs0ll");
    static BFs0i_BFu0s_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0i_BFs0ll(Test_BFs0i_BFu0s_BFs0i_BFs0ll, "BFs0i_BFu0s_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0i_BFs0s  {
  signed int  :0;
  unsigned short  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0i_BFs0s) C1{ Fi:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0s_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0i_BFs0s");
    static BFs0i_BFu0s_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0i_BFs0s(Test_BFs0i_BFu0s_BFs0i_BFs0s, "BFs0i_BFu0s_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0i_BFu0c  {
  signed int  :0;
  unsigned short  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0i_BFu0c) C1{ Fi:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0s_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0i_BFu0c");
    static BFs0i_BFu0s_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0i_BFu0c(Test_BFs0i_BFu0s_BFs0i_BFu0c, "BFs0i_BFu0s_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0i_BFu0i  {
  signed int  :0;
  unsigned short  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0i_BFu0i) C1{ Fi:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0s_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0i_BFu0i");
    static BFs0i_BFu0s_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0i_BFu0i(Test_BFs0i_BFu0s_BFs0i_BFu0i, "BFs0i_BFu0s_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0i_BFu0ll  {
  signed int  :0;
  unsigned short  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0i_BFu0ll) C1{ Fi:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0s_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0i_BFu0ll");
    static BFs0i_BFu0s_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0i_BFu0ll(Test_BFs0i_BFu0s_BFs0i_BFu0ll, "BFs0i_BFu0s_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0i_BFu0s  {
  signed int  :0;
  unsigned short  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0i_BFu0s) C1{ Fi:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0s_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0i_BFu0s");
    static BFs0i_BFu0s_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0i_BFu0s(Test_BFs0i_BFu0s_BFs0i_BFu0s, "BFs0i_BFu0s_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0ll  {
  signed int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0ll) C1{ Fi:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0ll");
    static BFs0i_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0ll(Test_BFs0i_BFu0s_BFs0ll, "BFs0i_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0ll_BFs0c  {
  signed int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0ll_BFs0c) C1{ Fi:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0s_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0ll_BFs0c");
    static BFs0i_BFu0s_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0ll_BFs0c(Test_BFs0i_BFu0s_BFs0ll_BFs0c, "BFs0i_BFu0s_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0ll_BFs0i  {
  signed int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0ll_BFs0i) C1{ Fi:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0s_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0ll_BFs0i");
    static BFs0i_BFu0s_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0ll_BFs0i(Test_BFs0i_BFu0s_BFs0ll_BFs0i, "BFs0i_BFu0s_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0ll_BFs0ll  {
  signed int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0ll_BFs0ll) C1{ Fi:0 Fs:0 FL:0 FL:0}



static void Test_BFs0i_BFu0s_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0ll_BFs0ll");
    static BFs0i_BFu0s_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0ll_BFs0ll(Test_BFs0i_BFu0s_BFs0ll_BFs0ll, "BFs0i_BFu0s_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0ll_BFs0s  {
  signed int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0ll_BFs0s) C1{ Fi:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0s_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0ll_BFs0s");
    static BFs0i_BFu0s_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0ll_BFs0s(Test_BFs0i_BFu0s_BFs0ll_BFs0s, "BFs0i_BFu0s_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0ll_BFu0c  {
  signed int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0ll_BFu0c) C1{ Fi:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0s_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0ll_BFu0c");
    static BFs0i_BFu0s_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0ll_BFu0c(Test_BFs0i_BFu0s_BFs0ll_BFu0c, "BFs0i_BFu0s_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0ll_BFu0i  {
  signed int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0ll_BFu0i) C1{ Fi:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0s_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0ll_BFu0i");
    static BFs0i_BFu0s_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0ll_BFu0i(Test_BFs0i_BFu0s_BFs0ll_BFu0i, "BFs0i_BFu0s_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0ll_BFu0ll  {
  signed int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0ll_BFu0ll) C1{ Fi:0 Fs:0 FL:0 FL:0}



static void Test_BFs0i_BFu0s_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0ll_BFu0ll");
    static BFs0i_BFu0s_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0ll_BFu0ll(Test_BFs0i_BFu0s_BFs0ll_BFu0ll, "BFs0i_BFu0s_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0ll_BFu0s  {
  signed int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0ll_BFu0s) C1{ Fi:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0s_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0ll_BFu0s");
    static BFs0i_BFu0s_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0ll_BFu0s(Test_BFs0i_BFu0s_BFs0ll_BFu0s, "BFs0i_BFu0s_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0s  {
  signed int  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0s) C1{ Fi:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0s");
    static BFs0i_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0s(Test_BFs0i_BFu0s_BFs0s, "BFs0i_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0s_BFs0c  {
  signed int  :0;
  unsigned short  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0s_BFs0c) C1{ Fi:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0s_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0s_BFs0c");
    static BFs0i_BFu0s_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0s_BFs0c(Test_BFs0i_BFu0s_BFs0s_BFs0c, "BFs0i_BFu0s_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0s_BFs0i  {
  signed int  :0;
  unsigned short  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0s_BFs0i) C1{ Fi:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0s_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0s_BFs0i");
    static BFs0i_BFu0s_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0s_BFs0i(Test_BFs0i_BFu0s_BFs0s_BFs0i, "BFs0i_BFu0s_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0s_BFs0ll  {
  signed int  :0;
  unsigned short  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0s_BFs0ll) C1{ Fi:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0s_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0s_BFs0ll");
    static BFs0i_BFu0s_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0s_BFs0ll(Test_BFs0i_BFu0s_BFs0s_BFs0ll, "BFs0i_BFu0s_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0s_BFs0s  {
  signed int  :0;
  unsigned short  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0s_BFs0s) C1{ Fi:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0s_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0s_BFs0s");
    static BFs0i_BFu0s_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0s_BFs0s(Test_BFs0i_BFu0s_BFs0s_BFs0s, "BFs0i_BFu0s_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0s_BFu0c  {
  signed int  :0;
  unsigned short  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0s_BFu0c) C1{ Fi:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0s_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0s_BFu0c");
    static BFs0i_BFu0s_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0s_BFu0c(Test_BFs0i_BFu0s_BFs0s_BFu0c, "BFs0i_BFu0s_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0s_BFu0i  {
  signed int  :0;
  unsigned short  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0s_BFu0i) C1{ Fi:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0s_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0s_BFu0i");
    static BFs0i_BFu0s_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0s_BFu0i(Test_BFs0i_BFu0s_BFs0s_BFu0i, "BFs0i_BFu0s_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0s_BFu0ll  {
  signed int  :0;
  unsigned short  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0s_BFu0ll) C1{ Fi:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0s_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0s_BFu0ll");
    static BFs0i_BFu0s_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0s_BFu0ll(Test_BFs0i_BFu0s_BFs0s_BFu0ll, "BFs0i_BFu0s_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFs0s_BFu0s  {
  signed int  :0;
  unsigned short  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0s_BFs0s_BFu0s) C1{ Fi:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0s_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFs0s_BFu0s");
    static BFs0i_BFu0s_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFs0s_BFu0s(Test_BFs0i_BFu0s_BFs0s_BFu0s, "BFs0i_BFu0s_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0c  {
  signed int  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0c) C1{ Fi:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0c");
    static BFs0i_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0c(Test_BFs0i_BFu0s_BFu0c, "BFs0i_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0c_BFs0c  {
  signed int  :0;
  unsigned short  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0c_BFs0c) C1{ Fi:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0s_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0c_BFs0c");
    static BFs0i_BFu0s_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0c_BFs0c(Test_BFs0i_BFu0s_BFu0c_BFs0c, "BFs0i_BFu0s_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0c_BFs0i  {
  signed int  :0;
  unsigned short  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0c_BFs0i) C1{ Fi:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0s_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0c_BFs0i");
    static BFs0i_BFu0s_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0c_BFs0i(Test_BFs0i_BFu0s_BFu0c_BFs0i, "BFs0i_BFu0s_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0c_BFs0ll  {
  signed int  :0;
  unsigned short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0c_BFs0ll) C1{ Fi:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0s_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0c_BFs0ll");
    static BFs0i_BFu0s_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0c_BFs0ll(Test_BFs0i_BFu0s_BFu0c_BFs0ll, "BFs0i_BFu0s_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0c_BFs0s  {
  signed int  :0;
  unsigned short  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0c_BFs0s) C1{ Fi:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0s_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0c_BFs0s");
    static BFs0i_BFu0s_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0c_BFs0s(Test_BFs0i_BFu0s_BFu0c_BFs0s, "BFs0i_BFu0s_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0c_BFu0c  {
  signed int  :0;
  unsigned short  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0c_BFu0c) C1{ Fi:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0i_BFu0s_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0c_BFu0c");
    static BFs0i_BFu0s_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0c_BFu0c(Test_BFs0i_BFu0s_BFu0c_BFu0c, "BFs0i_BFu0s_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0c_BFu0i  {
  signed int  :0;
  unsigned short  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0c_BFu0i) C1{ Fi:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0i_BFu0s_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0c_BFu0i");
    static BFs0i_BFu0s_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0c_BFu0i(Test_BFs0i_BFu0s_BFu0c_BFu0i, "BFs0i_BFu0s_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0c_BFu0ll  {
  signed int  :0;
  unsigned short  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0c_BFu0ll) C1{ Fi:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0i_BFu0s_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0c_BFu0ll");
    static BFs0i_BFu0s_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0c_BFu0ll(Test_BFs0i_BFu0s_BFu0c_BFu0ll, "BFs0i_BFu0s_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0c_BFu0s  {
  signed int  :0;
  unsigned short  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0c_BFu0s) C1{ Fi:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0i_BFu0s_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0c_BFu0s");
    static BFs0i_BFu0s_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0c_BFu0s(Test_BFs0i_BFu0s_BFu0c_BFu0s, "BFs0i_BFu0s_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0i  {
  signed int  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0i) C1{ Fi:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0i");
    static BFs0i_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0i(Test_BFs0i_BFu0s_BFu0i, "BFs0i_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0i_BFs0c  {
  signed int  :0;
  unsigned short  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0i_BFs0c) C1{ Fi:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0s_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0i_BFs0c");
    static BFs0i_BFu0s_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0i_BFs0c(Test_BFs0i_BFu0s_BFu0i_BFs0c, "BFs0i_BFu0s_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0i_BFs0i  {
  signed int  :0;
  unsigned short  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0i_BFs0i) C1{ Fi:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0s_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0i_BFs0i");
    static BFs0i_BFu0s_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0i_BFs0i(Test_BFs0i_BFu0s_BFu0i_BFs0i, "BFs0i_BFu0s_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0i_BFs0ll  {
  signed int  :0;
  unsigned short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0i_BFs0ll) C1{ Fi:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0s_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0i_BFs0ll");
    static BFs0i_BFu0s_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0i_BFs0ll(Test_BFs0i_BFu0s_BFu0i_BFs0ll, "BFs0i_BFu0s_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0i_BFs0s  {
  signed int  :0;
  unsigned short  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0i_BFs0s) C1{ Fi:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0s_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0i_BFs0s");
    static BFs0i_BFu0s_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0i_BFs0s(Test_BFs0i_BFu0s_BFu0i_BFs0s, "BFs0i_BFu0s_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0i_BFu0c  {
  signed int  :0;
  unsigned short  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0i_BFu0c) C1{ Fi:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0i_BFu0s_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0i_BFu0c");
    static BFs0i_BFu0s_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0i_BFu0c(Test_BFs0i_BFu0s_BFu0i_BFu0c, "BFs0i_BFu0s_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0i_BFu0i  {
  signed int  :0;
  unsigned short  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0i_BFu0i) C1{ Fi:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0i_BFu0s_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0i_BFu0i");
    static BFs0i_BFu0s_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0i_BFu0i(Test_BFs0i_BFu0s_BFu0i_BFu0i, "BFs0i_BFu0s_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0i_BFu0ll  {
  signed int  :0;
  unsigned short  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0i_BFu0ll) C1{ Fi:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0i_BFu0s_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0i_BFu0ll");
    static BFs0i_BFu0s_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0i_BFu0ll(Test_BFs0i_BFu0s_BFu0i_BFu0ll, "BFs0i_BFu0s_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0i_BFu0s  {
  signed int  :0;
  unsigned short  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0i_BFu0s) C1{ Fi:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0i_BFu0s_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0i_BFu0s");
    static BFs0i_BFu0s_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0i_BFu0s(Test_BFs0i_BFu0s_BFu0i_BFu0s, "BFs0i_BFu0s_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0ll  {
  signed int  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0ll) C1{ Fi:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0ll");
    static BFs0i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0ll(Test_BFs0i_BFu0s_BFu0ll, "BFs0i_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0ll_BFs0c  {
  signed int  :0;
  unsigned short  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0ll_BFs0c) C1{ Fi:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0s_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0ll_BFs0c");
    static BFs0i_BFu0s_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0ll_BFs0c(Test_BFs0i_BFu0s_BFu0ll_BFs0c, "BFs0i_BFu0s_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0ll_BFs0i  {
  signed int  :0;
  unsigned short  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0ll_BFs0i) C1{ Fi:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0s_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0ll_BFs0i");
    static BFs0i_BFu0s_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0ll_BFs0i(Test_BFs0i_BFu0s_BFu0ll_BFs0i, "BFs0i_BFu0s_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0ll_BFs0ll  {
  signed int  :0;
  unsigned short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0ll_BFs0ll) C1{ Fi:0 Fs:0 FL:0 FL:0}



static void Test_BFs0i_BFu0s_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0ll_BFs0ll");
    static BFs0i_BFu0s_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0ll_BFs0ll(Test_BFs0i_BFu0s_BFu0ll_BFs0ll, "BFs0i_BFu0s_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0ll_BFs0s  {
  signed int  :0;
  unsigned short  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0ll_BFs0s) C1{ Fi:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0s_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0ll_BFs0s");
    static BFs0i_BFu0s_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0ll_BFs0s(Test_BFs0i_BFu0s_BFu0ll_BFs0s, "BFs0i_BFu0s_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0ll_BFu0c  {
  signed int  :0;
  unsigned short  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0ll_BFu0c) C1{ Fi:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0i_BFu0s_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0ll_BFu0c");
    static BFs0i_BFu0s_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0ll_BFu0c(Test_BFs0i_BFu0s_BFu0ll_BFu0c, "BFs0i_BFu0s_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0ll_BFu0i  {
  signed int  :0;
  unsigned short  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0ll_BFu0i) C1{ Fi:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0i_BFu0s_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0ll_BFu0i");
    static BFs0i_BFu0s_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0ll_BFu0i(Test_BFs0i_BFu0s_BFu0ll_BFu0i, "BFs0i_BFu0s_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0ll_BFu0ll  {
  signed int  :0;
  unsigned short  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0ll_BFu0ll) C1{ Fi:0 Fs:0 FL:0 FL:0}



static void Test_BFs0i_BFu0s_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0ll_BFu0ll");
    static BFs0i_BFu0s_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0ll_BFu0ll(Test_BFs0i_BFu0s_BFu0ll_BFu0ll, "BFs0i_BFu0s_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0ll_BFu0s  {
  signed int  :0;
  unsigned short  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0ll_BFu0s) C1{ Fi:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0i_BFu0s_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0ll_BFu0s");
    static BFs0i_BFu0s_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0ll_BFu0s(Test_BFs0i_BFu0s_BFu0ll_BFu0s, "BFs0i_BFu0s_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0s  {
  signed int  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0s) C1{ Fi:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0s");
    static BFs0i_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0s(Test_BFs0i_BFu0s_BFu0s, "BFs0i_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0s_BFs0c  {
  signed int  :0;
  unsigned short  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0s_BFs0c) C1{ Fi:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0s_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0s_BFs0c");
    static BFs0i_BFu0s_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0s_BFs0c(Test_BFs0i_BFu0s_BFu0s_BFs0c, "BFs0i_BFu0s_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0s_BFs0i  {
  signed int  :0;
  unsigned short  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0s_BFs0i) C1{ Fi:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0s_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0s_BFs0i");
    static BFs0i_BFu0s_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0s_BFs0i(Test_BFs0i_BFu0s_BFu0s_BFs0i, "BFs0i_BFu0s_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0s_BFs0ll  {
  signed int  :0;
  unsigned short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0s_BFs0ll) C1{ Fi:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0s_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0s_BFs0ll");
    static BFs0i_BFu0s_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0s_BFs0ll(Test_BFs0i_BFu0s_BFu0s_BFs0ll, "BFs0i_BFu0s_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0s_BFs0s  {
  signed int  :0;
  unsigned short  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0s_BFs0s) C1{ Fi:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0s_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0s_BFs0s");
    static BFs0i_BFu0s_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0s_BFs0s(Test_BFs0i_BFu0s_BFu0s_BFs0s, "BFs0i_BFu0s_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0s_BFu0c  {
  signed int  :0;
  unsigned short  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0s_BFu0c) C1{ Fi:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0i_BFu0s_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0s_BFu0c");
    static BFs0i_BFu0s_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0s_BFu0c(Test_BFs0i_BFu0s_BFu0s_BFu0c, "BFs0i_BFu0s_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0s_BFu0i  {
  signed int  :0;
  unsigned short  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0s_BFu0i) C1{ Fi:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0i_BFu0s_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0s_BFu0i");
    static BFs0i_BFu0s_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0s_BFu0i(Test_BFs0i_BFu0s_BFu0s_BFu0i, "BFs0i_BFu0s_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0s_BFu0ll  {
  signed int  :0;
  unsigned short  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0s_BFu0ll) C1{ Fi:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0i_BFu0s_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0s_BFu0ll");
    static BFs0i_BFu0s_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0s_BFu0ll(Test_BFs0i_BFu0s_BFu0s_BFu0ll, "BFs0i_BFu0s_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0i_BFu0s_BFu0s_BFu0s  {
  signed int  :0;
  unsigned short  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0i_BFu0s_BFu0s_BFu0s) C1{ Fi:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0i_BFu0s_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0i_BFu0s_BFu0s_BFu0s");
    static BFs0i_BFu0s_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0i_BFu0s_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0i_BFu0s_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0i_BFu0s_BFu0s_BFu0s(Test_BFs0i_BFu0s_BFu0s_BFu0s, "BFs0i_BFu0s_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c  {
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0c) C1{ FL:0 Fc:0}



static void Test_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0c");
    static BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c(Test_BFs0ll_BFs0c, "BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0c  {
  signed __tsi64  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0c) C1{ FL:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0c");
    static BFs0ll_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0c(Test_BFs0ll_BFs0c_BFs0c, "BFs0ll_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0c_BFs0c  {
  signed __tsi64  :0;
  signed char  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0c_BFs0c) C1{ FL:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0c_BFs0c");
    static BFs0ll_BFs0c_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0c_BFs0c(Test_BFs0ll_BFs0c_BFs0c_BFs0c, "BFs0ll_BFs0c_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0c_BFs0i  {
  signed __tsi64  :0;
  signed char  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0c_BFs0i) C1{ FL:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0c_BFs0i");
    static BFs0ll_BFs0c_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0c_BFs0i(Test_BFs0ll_BFs0c_BFs0c_BFs0i, "BFs0ll_BFs0c_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0c_BFs0ll  {
  signed __tsi64  :0;
  signed char  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0c_BFs0ll) C1{ FL:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0c_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0c_BFs0ll");
    static BFs0ll_BFs0c_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0c_BFs0ll(Test_BFs0ll_BFs0c_BFs0c_BFs0ll, "BFs0ll_BFs0c_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0c_BFs0s  {
  signed __tsi64  :0;
  signed char  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0c_BFs0s) C1{ FL:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0c_BFs0s");
    static BFs0ll_BFs0c_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0c_BFs0s(Test_BFs0ll_BFs0c_BFs0c_BFs0s, "BFs0ll_BFs0c_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0c_BFu0c  {
  signed __tsi64  :0;
  signed char  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0c_BFu0c) C1{ FL:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0c_BFu0c");
    static BFs0ll_BFs0c_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0c_BFu0c(Test_BFs0ll_BFs0c_BFs0c_BFu0c, "BFs0ll_BFs0c_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0c_BFu0i  {
  signed __tsi64  :0;
  signed char  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0c_BFu0i) C1{ FL:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0c_BFu0i");
    static BFs0ll_BFs0c_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0c_BFu0i(Test_BFs0ll_BFs0c_BFs0c_BFu0i, "BFs0ll_BFs0c_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0c_BFu0ll  {
  signed __tsi64  :0;
  signed char  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0c_BFu0ll) C1{ FL:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0c_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0c_BFu0ll");
    static BFs0ll_BFs0c_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0c_BFu0ll(Test_BFs0ll_BFs0c_BFs0c_BFu0ll, "BFs0ll_BFs0c_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0c_BFu0s  {
  signed __tsi64  :0;
  signed char  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0c_BFu0s) C1{ FL:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0c_BFu0s");
    static BFs0ll_BFs0c_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0c_BFu0s(Test_BFs0ll_BFs0c_BFs0c_BFu0s, "BFs0ll_BFs0c_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0i  {
  signed __tsi64  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0i) C1{ FL:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0i");
    static BFs0ll_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0i(Test_BFs0ll_BFs0c_BFs0i, "BFs0ll_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0i_BFs0c  {
  signed __tsi64  :0;
  signed char  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0i_BFs0c) C1{ FL:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0i_BFs0c");
    static BFs0ll_BFs0c_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0i_BFs0c(Test_BFs0ll_BFs0c_BFs0i_BFs0c, "BFs0ll_BFs0c_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0i_BFs0i  {
  signed __tsi64  :0;
  signed char  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0i_BFs0i) C1{ FL:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0i_BFs0i");
    static BFs0ll_BFs0c_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0i_BFs0i(Test_BFs0ll_BFs0c_BFs0i_BFs0i, "BFs0ll_BFs0c_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0i_BFs0ll  {
  signed __tsi64  :0;
  signed char  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0i_BFs0ll) C1{ FL:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0c_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0i_BFs0ll");
    static BFs0ll_BFs0c_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0i_BFs0ll(Test_BFs0ll_BFs0c_BFs0i_BFs0ll, "BFs0ll_BFs0c_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0i_BFs0s  {
  signed __tsi64  :0;
  signed char  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0i_BFs0s) C1{ FL:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0i_BFs0s");
    static BFs0ll_BFs0c_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0i_BFs0s(Test_BFs0ll_BFs0c_BFs0i_BFs0s, "BFs0ll_BFs0c_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0i_BFu0c  {
  signed __tsi64  :0;
  signed char  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0i_BFu0c) C1{ FL:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0i_BFu0c");
    static BFs0ll_BFs0c_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0i_BFu0c(Test_BFs0ll_BFs0c_BFs0i_BFu0c, "BFs0ll_BFs0c_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0i_BFu0i  {
  signed __tsi64  :0;
  signed char  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0i_BFu0i) C1{ FL:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0i_BFu0i");
    static BFs0ll_BFs0c_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0i_BFu0i(Test_BFs0ll_BFs0c_BFs0i_BFu0i, "BFs0ll_BFs0c_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0i_BFu0ll  {
  signed __tsi64  :0;
  signed char  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0i_BFu0ll) C1{ FL:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0c_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0i_BFu0ll");
    static BFs0ll_BFs0c_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0i_BFu0ll(Test_BFs0ll_BFs0c_BFs0i_BFu0ll, "BFs0ll_BFs0c_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0i_BFu0s  {
  signed __tsi64  :0;
  signed char  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0i_BFu0s) C1{ FL:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0i_BFu0s");
    static BFs0ll_BFs0c_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0i_BFu0s(Test_BFs0ll_BFs0c_BFs0i_BFu0s, "BFs0ll_BFs0c_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0ll  {
  signed __tsi64  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0ll) C1{ FL:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0ll");
    static BFs0ll_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0ll(Test_BFs0ll_BFs0c_BFs0ll, "BFs0ll_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0ll_BFs0c  {
  signed __tsi64  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0ll_BFs0c) C1{ FL:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0ll_BFs0c");
    static BFs0ll_BFs0c_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0ll_BFs0c(Test_BFs0ll_BFs0c_BFs0ll_BFs0c, "BFs0ll_BFs0c_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0ll_BFs0i  {
  signed __tsi64  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0ll_BFs0i) C1{ FL:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0ll_BFs0i");
    static BFs0ll_BFs0c_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0ll_BFs0i(Test_BFs0ll_BFs0c_BFs0ll_BFs0i, "BFs0ll_BFs0c_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0ll_BFs0ll  {
  signed __tsi64  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0ll_BFs0ll) C1{ FL:0 Fc:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0c_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0ll_BFs0ll");
    static BFs0ll_BFs0c_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0ll_BFs0ll(Test_BFs0ll_BFs0c_BFs0ll_BFs0ll, "BFs0ll_BFs0c_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0ll_BFs0s  {
  signed __tsi64  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0ll_BFs0s) C1{ FL:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0ll_BFs0s");
    static BFs0ll_BFs0c_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0ll_BFs0s(Test_BFs0ll_BFs0c_BFs0ll_BFs0s, "BFs0ll_BFs0c_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0ll_BFu0c  {
  signed __tsi64  :0;
  signed char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0ll_BFu0c) C1{ FL:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0ll_BFu0c");
    static BFs0ll_BFs0c_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0ll_BFu0c(Test_BFs0ll_BFs0c_BFs0ll_BFu0c, "BFs0ll_BFs0c_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0ll_BFu0i  {
  signed __tsi64  :0;
  signed char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0ll_BFu0i) C1{ FL:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0ll_BFu0i");
    static BFs0ll_BFs0c_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0ll_BFu0i(Test_BFs0ll_BFs0c_BFs0ll_BFu0i, "BFs0ll_BFs0c_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0ll_BFu0ll  {
  signed __tsi64  :0;
  signed char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0ll_BFu0ll) C1{ FL:0 Fc:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0c_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0ll_BFu0ll");
    static BFs0ll_BFs0c_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0ll_BFu0ll(Test_BFs0ll_BFs0c_BFs0ll_BFu0ll, "BFs0ll_BFs0c_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0ll_BFu0s  {
  signed __tsi64  :0;
  signed char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0ll_BFu0s) C1{ FL:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0ll_BFu0s");
    static BFs0ll_BFs0c_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0ll_BFu0s(Test_BFs0ll_BFs0c_BFs0ll_BFu0s, "BFs0ll_BFs0c_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0s  {
  signed __tsi64  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0s) C1{ FL:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0s");
    static BFs0ll_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0s(Test_BFs0ll_BFs0c_BFs0s, "BFs0ll_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0s_BFs0c  {
  signed __tsi64  :0;
  signed char  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0s_BFs0c) C1{ FL:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0s_BFs0c");
    static BFs0ll_BFs0c_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0s_BFs0c(Test_BFs0ll_BFs0c_BFs0s_BFs0c, "BFs0ll_BFs0c_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0s_BFs0i  {
  signed __tsi64  :0;
  signed char  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0s_BFs0i) C1{ FL:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0s_BFs0i");
    static BFs0ll_BFs0c_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0s_BFs0i(Test_BFs0ll_BFs0c_BFs0s_BFs0i, "BFs0ll_BFs0c_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0s_BFs0ll  {
  signed __tsi64  :0;
  signed char  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0s_BFs0ll) C1{ FL:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0c_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0s_BFs0ll");
    static BFs0ll_BFs0c_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0s_BFs0ll(Test_BFs0ll_BFs0c_BFs0s_BFs0ll, "BFs0ll_BFs0c_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0s_BFs0s  {
  signed __tsi64  :0;
  signed char  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0s_BFs0s) C1{ FL:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0s_BFs0s");
    static BFs0ll_BFs0c_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0s_BFs0s(Test_BFs0ll_BFs0c_BFs0s_BFs0s, "BFs0ll_BFs0c_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0s_BFu0c  {
  signed __tsi64  :0;
  signed char  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0s_BFu0c) C1{ FL:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0s_BFu0c");
    static BFs0ll_BFs0c_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0s_BFu0c(Test_BFs0ll_BFs0c_BFs0s_BFu0c, "BFs0ll_BFs0c_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0s_BFu0i  {
  signed __tsi64  :0;
  signed char  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0s_BFu0i) C1{ FL:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0s_BFu0i");
    static BFs0ll_BFs0c_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0s_BFu0i(Test_BFs0ll_BFs0c_BFs0s_BFu0i, "BFs0ll_BFs0c_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0s_BFu0ll  {
  signed __tsi64  :0;
  signed char  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0s_BFu0ll) C1{ FL:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0c_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0s_BFu0ll");
    static BFs0ll_BFs0c_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0s_BFu0ll(Test_BFs0ll_BFs0c_BFs0s_BFu0ll, "BFs0ll_BFs0c_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFs0s_BFu0s  {
  signed __tsi64  :0;
  signed char  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFs0s_BFu0s) C1{ FL:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFs0s_BFu0s");
    static BFs0ll_BFs0c_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFs0s_BFu0s(Test_BFs0ll_BFs0c_BFs0s_BFu0s, "BFs0ll_BFs0c_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0c  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0c) C1{ FL:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0c");
    static BFs0ll_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0c(Test_BFs0ll_BFs0c_BFu0c, "BFs0ll_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0c_BFs0c  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0c_BFs0c) C1{ FL:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0c_BFs0c");
    static BFs0ll_BFs0c_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0c_BFs0c(Test_BFs0ll_BFs0c_BFu0c_BFs0c, "BFs0ll_BFs0c_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0c_BFs0i  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0c_BFs0i) C1{ FL:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0c_BFs0i");
    static BFs0ll_BFs0c_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0c_BFs0i(Test_BFs0ll_BFs0c_BFu0c_BFs0i, "BFs0ll_BFs0c_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0c_BFs0ll  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0c_BFs0ll) C1{ FL:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0c_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0c_BFs0ll");
    static BFs0ll_BFs0c_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0c_BFs0ll(Test_BFs0ll_BFs0c_BFu0c_BFs0ll, "BFs0ll_BFs0c_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0c_BFs0s  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0c_BFs0s) C1{ FL:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0c_BFs0s");
    static BFs0ll_BFs0c_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0c_BFs0s(Test_BFs0ll_BFs0c_BFu0c_BFs0s, "BFs0ll_BFs0c_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0c_BFu0c  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0c_BFu0c) C1{ FL:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0c_BFu0c");
    static BFs0ll_BFs0c_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0c_BFu0c(Test_BFs0ll_BFs0c_BFu0c_BFu0c, "BFs0ll_BFs0c_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0c_BFu0i  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0c_BFu0i) C1{ FL:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0c_BFu0i");
    static BFs0ll_BFs0c_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0c_BFu0i(Test_BFs0ll_BFs0c_BFu0c_BFu0i, "BFs0ll_BFs0c_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0c_BFu0ll  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0c_BFu0ll) C1{ FL:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0c_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0c_BFu0ll");
    static BFs0ll_BFs0c_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0c_BFu0ll(Test_BFs0ll_BFs0c_BFu0c_BFu0ll, "BFs0ll_BFs0c_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0c_BFu0s  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0c_BFu0s) C1{ FL:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0c_BFu0s");
    static BFs0ll_BFs0c_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0c_BFu0s(Test_BFs0ll_BFs0c_BFu0c_BFu0s, "BFs0ll_BFs0c_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0i  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0i) C1{ FL:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0i");
    static BFs0ll_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0i(Test_BFs0ll_BFs0c_BFu0i, "BFs0ll_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0i_BFs0c  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0i_BFs0c) C1{ FL:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0i_BFs0c");
    static BFs0ll_BFs0c_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0i_BFs0c(Test_BFs0ll_BFs0c_BFu0i_BFs0c, "BFs0ll_BFs0c_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0i_BFs0i  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0i_BFs0i) C1{ FL:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0i_BFs0i");
    static BFs0ll_BFs0c_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0i_BFs0i(Test_BFs0ll_BFs0c_BFu0i_BFs0i, "BFs0ll_BFs0c_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0i_BFs0ll  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0i_BFs0ll) C1{ FL:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0c_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0i_BFs0ll");
    static BFs0ll_BFs0c_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0i_BFs0ll(Test_BFs0ll_BFs0c_BFu0i_BFs0ll, "BFs0ll_BFs0c_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0i_BFs0s  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0i_BFs0s) C1{ FL:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0i_BFs0s");
    static BFs0ll_BFs0c_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0i_BFs0s(Test_BFs0ll_BFs0c_BFu0i_BFs0s, "BFs0ll_BFs0c_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0i_BFu0c  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0i_BFu0c) C1{ FL:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0i_BFu0c");
    static BFs0ll_BFs0c_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0i_BFu0c(Test_BFs0ll_BFs0c_BFu0i_BFu0c, "BFs0ll_BFs0c_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0i_BFu0i  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0i_BFu0i) C1{ FL:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0i_BFu0i");
    static BFs0ll_BFs0c_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0i_BFu0i(Test_BFs0ll_BFs0c_BFu0i_BFu0i, "BFs0ll_BFs0c_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0i_BFu0ll  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0i_BFu0ll) C1{ FL:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0c_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0i_BFu0ll");
    static BFs0ll_BFs0c_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0i_BFu0ll(Test_BFs0ll_BFs0c_BFu0i_BFu0ll, "BFs0ll_BFs0c_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0i_BFu0s  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0i_BFu0s) C1{ FL:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0i_BFu0s");
    static BFs0ll_BFs0c_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0i_BFu0s(Test_BFs0ll_BFs0c_BFu0i_BFu0s, "BFs0ll_BFs0c_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0ll  {
  signed __tsi64  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0ll) C1{ FL:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0ll");
    static BFs0ll_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0ll(Test_BFs0ll_BFs0c_BFu0ll, "BFs0ll_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0ll_BFs0c  {
  signed __tsi64  :0;
  signed char  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0ll_BFs0c) C1{ FL:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0ll_BFs0c");
    static BFs0ll_BFs0c_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0ll_BFs0c(Test_BFs0ll_BFs0c_BFu0ll_BFs0c, "BFs0ll_BFs0c_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0ll_BFs0i  {
  signed __tsi64  :0;
  signed char  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0ll_BFs0i) C1{ FL:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0ll_BFs0i");
    static BFs0ll_BFs0c_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0ll_BFs0i(Test_BFs0ll_BFs0c_BFu0ll_BFs0i, "BFs0ll_BFs0c_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0ll_BFs0ll  {
  signed __tsi64  :0;
  signed char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0ll_BFs0ll) C1{ FL:0 Fc:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0c_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0ll_BFs0ll");
    static BFs0ll_BFs0c_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0ll_BFs0ll(Test_BFs0ll_BFs0c_BFu0ll_BFs0ll, "BFs0ll_BFs0c_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0ll_BFs0s  {
  signed __tsi64  :0;
  signed char  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0ll_BFs0s) C1{ FL:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0ll_BFs0s");
    static BFs0ll_BFs0c_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0ll_BFs0s(Test_BFs0ll_BFs0c_BFu0ll_BFs0s, "BFs0ll_BFs0c_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0ll_BFu0c  {
  signed __tsi64  :0;
  signed char  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0ll_BFu0c) C1{ FL:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0ll_BFu0c");
    static BFs0ll_BFs0c_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0ll_BFu0c(Test_BFs0ll_BFs0c_BFu0ll_BFu0c, "BFs0ll_BFs0c_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0ll_BFu0i  {
  signed __tsi64  :0;
  signed char  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0ll_BFu0i) C1{ FL:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0ll_BFu0i");
    static BFs0ll_BFs0c_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0ll_BFu0i(Test_BFs0ll_BFs0c_BFu0ll_BFu0i, "BFs0ll_BFs0c_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0ll_BFu0ll  {
  signed __tsi64  :0;
  signed char  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0ll_BFu0ll) C1{ FL:0 Fc:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0c_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0ll_BFu0ll");
    static BFs0ll_BFs0c_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0ll_BFu0ll(Test_BFs0ll_BFs0c_BFu0ll_BFu0ll, "BFs0ll_BFs0c_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0ll_BFu0s  {
  signed __tsi64  :0;
  signed char  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0ll_BFu0s) C1{ FL:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0ll_BFu0s");
    static BFs0ll_BFs0c_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0ll_BFu0s(Test_BFs0ll_BFs0c_BFu0ll_BFu0s, "BFs0ll_BFs0c_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0s  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0s) C1{ FL:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0s");
    static BFs0ll_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0s(Test_BFs0ll_BFs0c_BFu0s, "BFs0ll_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0s_BFs0c  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0s_BFs0c) C1{ FL:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0s_BFs0c");
    static BFs0ll_BFs0c_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0s_BFs0c(Test_BFs0ll_BFs0c_BFu0s_BFs0c, "BFs0ll_BFs0c_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0s_BFs0i  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0s_BFs0i) C1{ FL:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0s_BFs0i");
    static BFs0ll_BFs0c_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0s_BFs0i(Test_BFs0ll_BFs0c_BFu0s_BFs0i, "BFs0ll_BFs0c_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0s_BFs0ll  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0s_BFs0ll) C1{ FL:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0c_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0s_BFs0ll");
    static BFs0ll_BFs0c_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0s_BFs0ll(Test_BFs0ll_BFs0c_BFu0s_BFs0ll, "BFs0ll_BFs0c_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0s_BFs0s  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0s_BFs0s) C1{ FL:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0s_BFs0s");
    static BFs0ll_BFs0c_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0s_BFs0s(Test_BFs0ll_BFs0c_BFu0s_BFs0s, "BFs0ll_BFs0c_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0s_BFu0c  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0s_BFu0c) C1{ FL:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0c_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0s_BFu0c");
    static BFs0ll_BFs0c_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0s_BFu0c(Test_BFs0ll_BFs0c_BFu0s_BFu0c, "BFs0ll_BFs0c_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0s_BFu0i  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0s_BFu0i) C1{ FL:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0c_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0s_BFu0i");
    static BFs0ll_BFs0c_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0s_BFu0i(Test_BFs0ll_BFs0c_BFu0s_BFu0i, "BFs0ll_BFs0c_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0s_BFu0ll  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0s_BFu0ll) C1{ FL:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0c_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0s_BFu0ll");
    static BFs0ll_BFs0c_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0s_BFu0ll(Test_BFs0ll_BFs0c_BFu0s_BFu0ll, "BFs0ll_BFs0c_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0c_BFu0s_BFu0s  {
  signed __tsi64  :0;
  signed char  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0c_BFu0s_BFu0s) C1{ FL:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0c_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0c_BFu0s_BFu0s");
    static BFs0ll_BFs0c_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0c_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0c_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0c_BFu0s_BFu0s(Test_BFs0ll_BFs0c_BFu0s_BFu0s, "BFs0ll_BFs0c_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i  {
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0i) C1{ FL:0 Fi:0}



static void Test_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0i");
    static BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i(Test_BFs0ll_BFs0i, "BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0c  {
  signed __tsi64  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0c) C1{ FL:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0c");
    static BFs0ll_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0c(Test_BFs0ll_BFs0i_BFs0c, "BFs0ll_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0c_BFs0c  {
  signed __tsi64  :0;
  signed int  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0c_BFs0c) C1{ FL:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0c_BFs0c");
    static BFs0ll_BFs0i_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0c_BFs0c(Test_BFs0ll_BFs0i_BFs0c_BFs0c, "BFs0ll_BFs0i_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0c_BFs0i  {
  signed __tsi64  :0;
  signed int  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0c_BFs0i) C1{ FL:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0c_BFs0i");
    static BFs0ll_BFs0i_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0c_BFs0i(Test_BFs0ll_BFs0i_BFs0c_BFs0i, "BFs0ll_BFs0i_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0c_BFs0ll  {
  signed __tsi64  :0;
  signed int  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0c_BFs0ll) C1{ FL:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0i_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0c_BFs0ll");
    static BFs0ll_BFs0i_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0c_BFs0ll(Test_BFs0ll_BFs0i_BFs0c_BFs0ll, "BFs0ll_BFs0i_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0c_BFs0s  {
  signed __tsi64  :0;
  signed int  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0c_BFs0s) C1{ FL:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0c_BFs0s");
    static BFs0ll_BFs0i_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0c_BFs0s(Test_BFs0ll_BFs0i_BFs0c_BFs0s, "BFs0ll_BFs0i_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0c_BFu0c  {
  signed __tsi64  :0;
  signed int  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0c_BFu0c) C1{ FL:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0c_BFu0c");
    static BFs0ll_BFs0i_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0c_BFu0c(Test_BFs0ll_BFs0i_BFs0c_BFu0c, "BFs0ll_BFs0i_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0c_BFu0i  {
  signed __tsi64  :0;
  signed int  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0c_BFu0i) C1{ FL:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0c_BFu0i");
    static BFs0ll_BFs0i_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0c_BFu0i(Test_BFs0ll_BFs0i_BFs0c_BFu0i, "BFs0ll_BFs0i_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0c_BFu0ll  {
  signed __tsi64  :0;
  signed int  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0c_BFu0ll) C1{ FL:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0i_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0c_BFu0ll");
    static BFs0ll_BFs0i_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0c_BFu0ll(Test_BFs0ll_BFs0i_BFs0c_BFu0ll, "BFs0ll_BFs0i_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0c_BFu0s  {
  signed __tsi64  :0;
  signed int  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0c_BFu0s) C1{ FL:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0c_BFu0s");
    static BFs0ll_BFs0i_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0c_BFu0s(Test_BFs0ll_BFs0i_BFs0c_BFu0s, "BFs0ll_BFs0i_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0i  {
  signed __tsi64  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0i) C1{ FL:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0i");
    static BFs0ll_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0i(Test_BFs0ll_BFs0i_BFs0i, "BFs0ll_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0i_BFs0c  {
  signed __tsi64  :0;
  signed int  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0i_BFs0c) C1{ FL:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0i_BFs0c");
    static BFs0ll_BFs0i_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0i_BFs0c(Test_BFs0ll_BFs0i_BFs0i_BFs0c, "BFs0ll_BFs0i_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0i_BFs0i  {
  signed __tsi64  :0;
  signed int  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0i_BFs0i) C1{ FL:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0i_BFs0i");
    static BFs0ll_BFs0i_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0i_BFs0i(Test_BFs0ll_BFs0i_BFs0i_BFs0i, "BFs0ll_BFs0i_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0i_BFs0ll  {
  signed __tsi64  :0;
  signed int  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0i_BFs0ll) C1{ FL:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0i_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0i_BFs0ll");
    static BFs0ll_BFs0i_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0i_BFs0ll(Test_BFs0ll_BFs0i_BFs0i_BFs0ll, "BFs0ll_BFs0i_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0i_BFs0s  {
  signed __tsi64  :0;
  signed int  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0i_BFs0s) C1{ FL:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0i_BFs0s");
    static BFs0ll_BFs0i_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0i_BFs0s(Test_BFs0ll_BFs0i_BFs0i_BFs0s, "BFs0ll_BFs0i_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0i_BFu0c  {
  signed __tsi64  :0;
  signed int  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0i_BFu0c) C1{ FL:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0i_BFu0c");
    static BFs0ll_BFs0i_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0i_BFu0c(Test_BFs0ll_BFs0i_BFs0i_BFu0c, "BFs0ll_BFs0i_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0i_BFu0i  {
  signed __tsi64  :0;
  signed int  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0i_BFu0i) C1{ FL:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0i_BFu0i");
    static BFs0ll_BFs0i_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0i_BFu0i(Test_BFs0ll_BFs0i_BFs0i_BFu0i, "BFs0ll_BFs0i_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0i_BFu0ll  {
  signed __tsi64  :0;
  signed int  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0i_BFu0ll) C1{ FL:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0i_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0i_BFu0ll");
    static BFs0ll_BFs0i_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0i_BFu0ll(Test_BFs0ll_BFs0i_BFs0i_BFu0ll, "BFs0ll_BFs0i_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0i_BFu0s  {
  signed __tsi64  :0;
  signed int  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0i_BFu0s) C1{ FL:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0i_BFu0s");
    static BFs0ll_BFs0i_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0i_BFu0s(Test_BFs0ll_BFs0i_BFs0i_BFu0s, "BFs0ll_BFs0i_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0ll  {
  signed __tsi64  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0ll) C1{ FL:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0ll");
    static BFs0ll_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0ll(Test_BFs0ll_BFs0i_BFs0ll, "BFs0ll_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0ll_BFs0c  {
  signed __tsi64  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0ll_BFs0c) C1{ FL:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0ll_BFs0c");
    static BFs0ll_BFs0i_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0ll_BFs0c(Test_BFs0ll_BFs0i_BFs0ll_BFs0c, "BFs0ll_BFs0i_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0ll_BFs0i  {
  signed __tsi64  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0ll_BFs0i) C1{ FL:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0ll_BFs0i");
    static BFs0ll_BFs0i_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0ll_BFs0i(Test_BFs0ll_BFs0i_BFs0ll_BFs0i, "BFs0ll_BFs0i_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0ll_BFs0ll  {
  signed __tsi64  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0ll_BFs0ll) C1{ FL:0 Fi:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0i_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0ll_BFs0ll");
    static BFs0ll_BFs0i_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0ll_BFs0ll(Test_BFs0ll_BFs0i_BFs0ll_BFs0ll, "BFs0ll_BFs0i_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0ll_BFs0s  {
  signed __tsi64  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0ll_BFs0s) C1{ FL:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0ll_BFs0s");
    static BFs0ll_BFs0i_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0ll_BFs0s(Test_BFs0ll_BFs0i_BFs0ll_BFs0s, "BFs0ll_BFs0i_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0ll_BFu0c  {
  signed __tsi64  :0;
  signed int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0ll_BFu0c) C1{ FL:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0ll_BFu0c");
    static BFs0ll_BFs0i_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0ll_BFu0c(Test_BFs0ll_BFs0i_BFs0ll_BFu0c, "BFs0ll_BFs0i_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0ll_BFu0i  {
  signed __tsi64  :0;
  signed int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0ll_BFu0i) C1{ FL:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0ll_BFu0i");
    static BFs0ll_BFs0i_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0ll_BFu0i(Test_BFs0ll_BFs0i_BFs0ll_BFu0i, "BFs0ll_BFs0i_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0ll_BFu0ll  {
  signed __tsi64  :0;
  signed int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0ll_BFu0ll) C1{ FL:0 Fi:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0i_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0ll_BFu0ll");
    static BFs0ll_BFs0i_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0ll_BFu0ll(Test_BFs0ll_BFs0i_BFs0ll_BFu0ll, "BFs0ll_BFs0i_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0ll_BFu0s  {
  signed __tsi64  :0;
  signed int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0ll_BFu0s) C1{ FL:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0ll_BFu0s");
    static BFs0ll_BFs0i_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0ll_BFu0s(Test_BFs0ll_BFs0i_BFs0ll_BFu0s, "BFs0ll_BFs0i_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0s  {
  signed __tsi64  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0s) C1{ FL:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0s");
    static BFs0ll_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0s(Test_BFs0ll_BFs0i_BFs0s, "BFs0ll_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0s_BFs0c  {
  signed __tsi64  :0;
  signed int  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0s_BFs0c) C1{ FL:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0s_BFs0c");
    static BFs0ll_BFs0i_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0s_BFs0c(Test_BFs0ll_BFs0i_BFs0s_BFs0c, "BFs0ll_BFs0i_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0s_BFs0i  {
  signed __tsi64  :0;
  signed int  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0s_BFs0i) C1{ FL:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0s_BFs0i");
    static BFs0ll_BFs0i_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0s_BFs0i(Test_BFs0ll_BFs0i_BFs0s_BFs0i, "BFs0ll_BFs0i_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0s_BFs0ll  {
  signed __tsi64  :0;
  signed int  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0s_BFs0ll) C1{ FL:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0i_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0s_BFs0ll");
    static BFs0ll_BFs0i_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0s_BFs0ll(Test_BFs0ll_BFs0i_BFs0s_BFs0ll, "BFs0ll_BFs0i_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0s_BFs0s  {
  signed __tsi64  :0;
  signed int  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0s_BFs0s) C1{ FL:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0s_BFs0s");
    static BFs0ll_BFs0i_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0s_BFs0s(Test_BFs0ll_BFs0i_BFs0s_BFs0s, "BFs0ll_BFs0i_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0s_BFu0c  {
  signed __tsi64  :0;
  signed int  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0s_BFu0c) C1{ FL:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0s_BFu0c");
    static BFs0ll_BFs0i_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0s_BFu0c(Test_BFs0ll_BFs0i_BFs0s_BFu0c, "BFs0ll_BFs0i_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0s_BFu0i  {
  signed __tsi64  :0;
  signed int  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0s_BFu0i) C1{ FL:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0s_BFu0i");
    static BFs0ll_BFs0i_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0s_BFu0i(Test_BFs0ll_BFs0i_BFs0s_BFu0i, "BFs0ll_BFs0i_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0s_BFu0ll  {
  signed __tsi64  :0;
  signed int  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0s_BFu0ll) C1{ FL:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0i_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0s_BFu0ll");
    static BFs0ll_BFs0i_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0s_BFu0ll(Test_BFs0ll_BFs0i_BFs0s_BFu0ll, "BFs0ll_BFs0i_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFs0s_BFu0s  {
  signed __tsi64  :0;
  signed int  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFs0s_BFu0s) C1{ FL:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFs0s_BFu0s");
    static BFs0ll_BFs0i_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFs0s_BFu0s(Test_BFs0ll_BFs0i_BFs0s_BFu0s, "BFs0ll_BFs0i_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0c  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0c) C1{ FL:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0c");
    static BFs0ll_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0c(Test_BFs0ll_BFs0i_BFu0c, "BFs0ll_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0c_BFs0c  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0c_BFs0c) C1{ FL:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0c_BFs0c");
    static BFs0ll_BFs0i_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0c_BFs0c(Test_BFs0ll_BFs0i_BFu0c_BFs0c, "BFs0ll_BFs0i_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0c_BFs0i  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0c_BFs0i) C1{ FL:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0c_BFs0i");
    static BFs0ll_BFs0i_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0c_BFs0i(Test_BFs0ll_BFs0i_BFu0c_BFs0i, "BFs0ll_BFs0i_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0c_BFs0ll  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0c_BFs0ll) C1{ FL:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0i_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0c_BFs0ll");
    static BFs0ll_BFs0i_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0c_BFs0ll(Test_BFs0ll_BFs0i_BFu0c_BFs0ll, "BFs0ll_BFs0i_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0c_BFs0s  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0c_BFs0s) C1{ FL:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0c_BFs0s");
    static BFs0ll_BFs0i_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0c_BFs0s(Test_BFs0ll_BFs0i_BFu0c_BFs0s, "BFs0ll_BFs0i_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0c_BFu0c  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0c_BFu0c) C1{ FL:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0c_BFu0c");
    static BFs0ll_BFs0i_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0c_BFu0c(Test_BFs0ll_BFs0i_BFu0c_BFu0c, "BFs0ll_BFs0i_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0c_BFu0i  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0c_BFu0i) C1{ FL:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0c_BFu0i");
    static BFs0ll_BFs0i_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0c_BFu0i(Test_BFs0ll_BFs0i_BFu0c_BFu0i, "BFs0ll_BFs0i_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0c_BFu0ll  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0c_BFu0ll) C1{ FL:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0i_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0c_BFu0ll");
    static BFs0ll_BFs0i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0c_BFu0ll(Test_BFs0ll_BFs0i_BFu0c_BFu0ll, "BFs0ll_BFs0i_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0c_BFu0s  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0c_BFu0s) C1{ FL:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0c_BFu0s");
    static BFs0ll_BFs0i_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0c_BFu0s(Test_BFs0ll_BFs0i_BFu0c_BFu0s, "BFs0ll_BFs0i_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0i  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0i) C1{ FL:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0i");
    static BFs0ll_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0i(Test_BFs0ll_BFs0i_BFu0i, "BFs0ll_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0i_BFs0c  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0i_BFs0c) C1{ FL:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0i_BFs0c");
    static BFs0ll_BFs0i_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0i_BFs0c(Test_BFs0ll_BFs0i_BFu0i_BFs0c, "BFs0ll_BFs0i_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0i_BFs0i  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0i_BFs0i) C1{ FL:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0i_BFs0i");
    static BFs0ll_BFs0i_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0i_BFs0i(Test_BFs0ll_BFs0i_BFu0i_BFs0i, "BFs0ll_BFs0i_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0i_BFs0ll  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0i_BFs0ll) C1{ FL:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0i_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0i_BFs0ll");
    static BFs0ll_BFs0i_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0i_BFs0ll(Test_BFs0ll_BFs0i_BFu0i_BFs0ll, "BFs0ll_BFs0i_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0i_BFs0s  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0i_BFs0s) C1{ FL:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0i_BFs0s");
    static BFs0ll_BFs0i_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0i_BFs0s(Test_BFs0ll_BFs0i_BFu0i_BFs0s, "BFs0ll_BFs0i_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0i_BFu0c  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0i_BFu0c) C1{ FL:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0i_BFu0c");
    static BFs0ll_BFs0i_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0i_BFu0c(Test_BFs0ll_BFs0i_BFu0i_BFu0c, "BFs0ll_BFs0i_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0i_BFu0i  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0i_BFu0i) C1{ FL:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0i_BFu0i");
    static BFs0ll_BFs0i_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0i_BFu0i(Test_BFs0ll_BFs0i_BFu0i_BFu0i, "BFs0ll_BFs0i_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0i_BFu0ll  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0i_BFu0ll) C1{ FL:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0i_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0i_BFu0ll");
    static BFs0ll_BFs0i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0i_BFu0ll(Test_BFs0ll_BFs0i_BFu0i_BFu0ll, "BFs0ll_BFs0i_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0i_BFu0s  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0i_BFu0s) C1{ FL:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0i_BFu0s");
    static BFs0ll_BFs0i_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0i_BFu0s(Test_BFs0ll_BFs0i_BFu0i_BFu0s, "BFs0ll_BFs0i_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0ll  {
  signed __tsi64  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0ll) C1{ FL:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0ll");
    static BFs0ll_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0ll(Test_BFs0ll_BFs0i_BFu0ll, "BFs0ll_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0ll_BFs0c  {
  signed __tsi64  :0;
  signed int  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0ll_BFs0c) C1{ FL:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0ll_BFs0c");
    static BFs0ll_BFs0i_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0ll_BFs0c(Test_BFs0ll_BFs0i_BFu0ll_BFs0c, "BFs0ll_BFs0i_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0ll_BFs0i  {
  signed __tsi64  :0;
  signed int  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0ll_BFs0i) C1{ FL:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0ll_BFs0i");
    static BFs0ll_BFs0i_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0ll_BFs0i(Test_BFs0ll_BFs0i_BFu0ll_BFs0i, "BFs0ll_BFs0i_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0ll_BFs0ll  {
  signed __tsi64  :0;
  signed int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0ll_BFs0ll) C1{ FL:0 Fi:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0i_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0ll_BFs0ll");
    static BFs0ll_BFs0i_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0ll_BFs0ll(Test_BFs0ll_BFs0i_BFu0ll_BFs0ll, "BFs0ll_BFs0i_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0ll_BFs0s  {
  signed __tsi64  :0;
  signed int  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0ll_BFs0s) C1{ FL:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0ll_BFs0s");
    static BFs0ll_BFs0i_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0ll_BFs0s(Test_BFs0ll_BFs0i_BFu0ll_BFs0s, "BFs0ll_BFs0i_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0ll_BFu0c  {
  signed __tsi64  :0;
  signed int  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0ll_BFu0c) C1{ FL:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0ll_BFu0c");
    static BFs0ll_BFs0i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0ll_BFu0c(Test_BFs0ll_BFs0i_BFu0ll_BFu0c, "BFs0ll_BFs0i_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0ll_BFu0i  {
  signed __tsi64  :0;
  signed int  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0ll_BFu0i) C1{ FL:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0ll_BFu0i");
    static BFs0ll_BFs0i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0ll_BFu0i(Test_BFs0ll_BFs0i_BFu0ll_BFu0i, "BFs0ll_BFs0i_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0ll_BFu0ll  {
  signed __tsi64  :0;
  signed int  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0ll_BFu0ll) C1{ FL:0 Fi:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0ll_BFu0ll");
    static BFs0ll_BFs0i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0ll_BFu0ll(Test_BFs0ll_BFs0i_BFu0ll_BFu0ll, "BFs0ll_BFs0i_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0ll_BFu0s  {
  signed __tsi64  :0;
  signed int  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0ll_BFu0s) C1{ FL:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0ll_BFu0s");
    static BFs0ll_BFs0i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0ll_BFu0s(Test_BFs0ll_BFs0i_BFu0ll_BFu0s, "BFs0ll_BFs0i_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0s  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0s) C1{ FL:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0s");
    static BFs0ll_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0s(Test_BFs0ll_BFs0i_BFu0s, "BFs0ll_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0s_BFs0c  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0s_BFs0c) C1{ FL:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0s_BFs0c");
    static BFs0ll_BFs0i_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0s_BFs0c(Test_BFs0ll_BFs0i_BFu0s_BFs0c, "BFs0ll_BFs0i_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0s_BFs0i  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0s_BFs0i) C1{ FL:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0s_BFs0i");
    static BFs0ll_BFs0i_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0s_BFs0i(Test_BFs0ll_BFs0i_BFu0s_BFs0i, "BFs0ll_BFs0i_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0s_BFs0ll  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0s_BFs0ll) C1{ FL:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0i_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0s_BFs0ll");
    static BFs0ll_BFs0i_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0s_BFs0ll(Test_BFs0ll_BFs0i_BFu0s_BFs0ll, "BFs0ll_BFs0i_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0s_BFs0s  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0s_BFs0s) C1{ FL:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0s_BFs0s");
    static BFs0ll_BFs0i_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0s_BFs0s(Test_BFs0ll_BFs0i_BFu0s_BFs0s, "BFs0ll_BFs0i_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0s_BFu0c  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0s_BFu0c) C1{ FL:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0i_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0s_BFu0c");
    static BFs0ll_BFs0i_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0s_BFu0c(Test_BFs0ll_BFs0i_BFu0s_BFu0c, "BFs0ll_BFs0i_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0s_BFu0i  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0s_BFu0i) C1{ FL:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0i_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0s_BFu0i");
    static BFs0ll_BFs0i_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0s_BFu0i(Test_BFs0ll_BFs0i_BFu0s_BFu0i, "BFs0ll_BFs0i_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0s_BFu0ll  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0s_BFu0ll) C1{ FL:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0i_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0s_BFu0ll");
    static BFs0ll_BFs0i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0s_BFu0ll(Test_BFs0ll_BFs0i_BFu0s_BFu0ll, "BFs0ll_BFs0i_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0i_BFu0s_BFu0s  {
  signed __tsi64  :0;
  signed int  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0i_BFu0s_BFu0s) C1{ FL:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0i_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0i_BFu0s_BFu0s");
    static BFs0ll_BFs0i_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0i_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0i_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0i_BFu0s_BFu0s(Test_BFs0ll_BFs0i_BFu0s_BFu0s, "BFs0ll_BFs0i_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0ll) C1{ FL:0 FL:0}



static void Test_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll");
    static BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll(Test_BFs0ll_BFs0ll, "BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0c) C1{ FL:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0c");
    static BFs0ll_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0c(Test_BFs0ll_BFs0ll_BFs0c, "BFs0ll_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0c_BFs0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0c_BFs0c) C1{ FL:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0c_BFs0c");
    static BFs0ll_BFs0ll_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0c_BFs0c(Test_BFs0ll_BFs0ll_BFs0c_BFs0c, "BFs0ll_BFs0ll_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0c_BFs0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0c_BFs0i) C1{ FL:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0c_BFs0i");
    static BFs0ll_BFs0ll_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0c_BFs0i(Test_BFs0ll_BFs0ll_BFs0c_BFs0i, "BFs0ll_BFs0ll_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0c_BFs0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0c_BFs0ll) C1{ FL:0 FL:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0c_BFs0ll");
    static BFs0ll_BFs0ll_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0c_BFs0ll(Test_BFs0ll_BFs0ll_BFs0c_BFs0ll, "BFs0ll_BFs0ll_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0c_BFs0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0c_BFs0s) C1{ FL:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0c_BFs0s");
    static BFs0ll_BFs0ll_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0c_BFs0s(Test_BFs0ll_BFs0ll_BFs0c_BFs0s, "BFs0ll_BFs0ll_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0c_BFu0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0c_BFu0c) C1{ FL:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0c_BFu0c");
    static BFs0ll_BFs0ll_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0c_BFu0c(Test_BFs0ll_BFs0ll_BFs0c_BFu0c, "BFs0ll_BFs0ll_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0c_BFu0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0c_BFu0i) C1{ FL:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0c_BFu0i");
    static BFs0ll_BFs0ll_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0c_BFu0i(Test_BFs0ll_BFs0ll_BFs0c_BFu0i, "BFs0ll_BFs0ll_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0c_BFu0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0c_BFu0ll) C1{ FL:0 FL:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0c_BFu0ll");
    static BFs0ll_BFs0ll_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0c_BFu0ll(Test_BFs0ll_BFs0ll_BFs0c_BFu0ll, "BFs0ll_BFs0ll_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0c_BFu0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0c_BFu0s) C1{ FL:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0c_BFu0s");
    static BFs0ll_BFs0ll_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0c_BFu0s(Test_BFs0ll_BFs0ll_BFs0c_BFu0s, "BFs0ll_BFs0ll_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0i) C1{ FL:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0i");
    static BFs0ll_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0i(Test_BFs0ll_BFs0ll_BFs0i, "BFs0ll_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0i_BFs0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0i_BFs0c) C1{ FL:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0i_BFs0c");
    static BFs0ll_BFs0ll_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0i_BFs0c(Test_BFs0ll_BFs0ll_BFs0i_BFs0c, "BFs0ll_BFs0ll_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0i_BFs0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0i_BFs0i) C1{ FL:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0i_BFs0i");
    static BFs0ll_BFs0ll_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0i_BFs0i(Test_BFs0ll_BFs0ll_BFs0i_BFs0i, "BFs0ll_BFs0ll_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0i_BFs0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0i_BFs0ll) C1{ FL:0 FL:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0i_BFs0ll");
    static BFs0ll_BFs0ll_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0i_BFs0ll(Test_BFs0ll_BFs0ll_BFs0i_BFs0ll, "BFs0ll_BFs0ll_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0i_BFs0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0i_BFs0s) C1{ FL:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0i_BFs0s");
    static BFs0ll_BFs0ll_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0i_BFs0s(Test_BFs0ll_BFs0ll_BFs0i_BFs0s, "BFs0ll_BFs0ll_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0i_BFu0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0i_BFu0c) C1{ FL:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0i_BFu0c");
    static BFs0ll_BFs0ll_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0i_BFu0c(Test_BFs0ll_BFs0ll_BFs0i_BFu0c, "BFs0ll_BFs0ll_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0i_BFu0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0i_BFu0i) C1{ FL:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0i_BFu0i");
    static BFs0ll_BFs0ll_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0i_BFu0i(Test_BFs0ll_BFs0ll_BFs0i_BFu0i, "BFs0ll_BFs0ll_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0i_BFu0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0i_BFu0ll) C1{ FL:0 FL:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0i_BFu0ll");
    static BFs0ll_BFs0ll_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0i_BFu0ll(Test_BFs0ll_BFs0ll_BFs0i_BFu0ll, "BFs0ll_BFs0ll_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0i_BFu0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0i_BFu0s) C1{ FL:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0i_BFu0s");
    static BFs0ll_BFs0ll_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0i_BFu0s(Test_BFs0ll_BFs0ll_BFs0i_BFu0s, "BFs0ll_BFs0ll_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0ll) C1{ FL:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0ll");
    static BFs0ll_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0ll(Test_BFs0ll_BFs0ll_BFs0ll, "BFs0ll_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0ll_BFs0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0ll_BFs0c) C1{ FL:0 FL:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0ll_BFs0c");
    static BFs0ll_BFs0ll_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0ll_BFs0c(Test_BFs0ll_BFs0ll_BFs0ll_BFs0c, "BFs0ll_BFs0ll_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0ll_BFs0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0ll_BFs0i) C1{ FL:0 FL:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0ll_BFs0i");
    static BFs0ll_BFs0ll_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0ll_BFs0i(Test_BFs0ll_BFs0ll_BFs0ll_BFs0i, "BFs0ll_BFs0ll_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0ll_BFs0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0ll_BFs0ll) C1{ FL:0 FL:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0ll_BFs0ll");
    static BFs0ll_BFs0ll_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0ll_BFs0ll(Test_BFs0ll_BFs0ll_BFs0ll_BFs0ll, "BFs0ll_BFs0ll_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0ll_BFs0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0ll_BFs0s) C1{ FL:0 FL:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0ll_BFs0s");
    static BFs0ll_BFs0ll_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0ll_BFs0s(Test_BFs0ll_BFs0ll_BFs0ll_BFs0s, "BFs0ll_BFs0ll_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0ll_BFu0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0ll_BFu0c) C1{ FL:0 FL:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0ll_BFu0c");
    static BFs0ll_BFs0ll_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0ll_BFu0c(Test_BFs0ll_BFs0ll_BFs0ll_BFu0c, "BFs0ll_BFs0ll_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0ll_BFu0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0ll_BFu0i) C1{ FL:0 FL:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0ll_BFu0i");
    static BFs0ll_BFs0ll_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0ll_BFu0i(Test_BFs0ll_BFs0ll_BFs0ll_BFu0i, "BFs0ll_BFs0ll_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0ll_BFu0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0ll_BFu0ll) C1{ FL:0 FL:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0ll_BFu0ll");
    static BFs0ll_BFs0ll_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0ll_BFu0ll(Test_BFs0ll_BFs0ll_BFs0ll_BFu0ll, "BFs0ll_BFs0ll_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0ll_BFu0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0ll_BFu0s) C1{ FL:0 FL:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0ll_BFu0s");
    static BFs0ll_BFs0ll_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0ll_BFu0s(Test_BFs0ll_BFs0ll_BFs0ll_BFu0s, "BFs0ll_BFs0ll_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0s) C1{ FL:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0s");
    static BFs0ll_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0s(Test_BFs0ll_BFs0ll_BFs0s, "BFs0ll_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0s_BFs0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0s_BFs0c) C1{ FL:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0s_BFs0c");
    static BFs0ll_BFs0ll_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0s_BFs0c(Test_BFs0ll_BFs0ll_BFs0s_BFs0c, "BFs0ll_BFs0ll_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0s_BFs0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0s_BFs0i) C1{ FL:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0s_BFs0i");
    static BFs0ll_BFs0ll_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0s_BFs0i(Test_BFs0ll_BFs0ll_BFs0s_BFs0i, "BFs0ll_BFs0ll_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0s_BFs0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0s_BFs0ll) C1{ FL:0 FL:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0s_BFs0ll");
    static BFs0ll_BFs0ll_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0s_BFs0ll(Test_BFs0ll_BFs0ll_BFs0s_BFs0ll, "BFs0ll_BFs0ll_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0s_BFs0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0s_BFs0s) C1{ FL:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0s_BFs0s");
    static BFs0ll_BFs0ll_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0s_BFs0s(Test_BFs0ll_BFs0ll_BFs0s_BFs0s, "BFs0ll_BFs0ll_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0s_BFu0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0s_BFu0c) C1{ FL:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0s_BFu0c");
    static BFs0ll_BFs0ll_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0s_BFu0c(Test_BFs0ll_BFs0ll_BFs0s_BFu0c, "BFs0ll_BFs0ll_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0s_BFu0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0s_BFu0i) C1{ FL:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0s_BFu0i");
    static BFs0ll_BFs0ll_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0s_BFu0i(Test_BFs0ll_BFs0ll_BFs0s_BFu0i, "BFs0ll_BFs0ll_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0s_BFu0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0s_BFu0ll) C1{ FL:0 FL:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0s_BFu0ll");
    static BFs0ll_BFs0ll_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0s_BFu0ll(Test_BFs0ll_BFs0ll_BFs0s_BFu0ll, "BFs0ll_BFs0ll_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFs0s_BFu0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFs0s_BFu0s) C1{ FL:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFs0s_BFu0s");
    static BFs0ll_BFs0ll_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFs0s_BFu0s(Test_BFs0ll_BFs0ll_BFs0s_BFu0s, "BFs0ll_BFs0ll_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0c) C1{ FL:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0c");
    static BFs0ll_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0c(Test_BFs0ll_BFs0ll_BFu0c, "BFs0ll_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0c_BFs0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0c_BFs0c) C1{ FL:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0c_BFs0c");
    static BFs0ll_BFs0ll_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0c_BFs0c(Test_BFs0ll_BFs0ll_BFu0c_BFs0c, "BFs0ll_BFs0ll_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0c_BFs0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0c_BFs0i) C1{ FL:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0c_BFs0i");
    static BFs0ll_BFs0ll_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0c_BFs0i(Test_BFs0ll_BFs0ll_BFu0c_BFs0i, "BFs0ll_BFs0ll_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0c_BFs0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0c_BFs0ll) C1{ FL:0 FL:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0c_BFs0ll");
    static BFs0ll_BFs0ll_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0c_BFs0ll(Test_BFs0ll_BFs0ll_BFu0c_BFs0ll, "BFs0ll_BFs0ll_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0c_BFs0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0c_BFs0s) C1{ FL:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0c_BFs0s");
    static BFs0ll_BFs0ll_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0c_BFs0s(Test_BFs0ll_BFs0ll_BFu0c_BFs0s, "BFs0ll_BFs0ll_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0c_BFu0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0c_BFu0c) C1{ FL:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0c_BFu0c");
    static BFs0ll_BFs0ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0c_BFu0c(Test_BFs0ll_BFs0ll_BFu0c_BFu0c, "BFs0ll_BFs0ll_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0c_BFu0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0c_BFu0i) C1{ FL:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0c_BFu0i");
    static BFs0ll_BFs0ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0c_BFu0i(Test_BFs0ll_BFs0ll_BFu0c_BFu0i, "BFs0ll_BFs0ll_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0c_BFu0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0c_BFu0ll) C1{ FL:0 FL:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0c_BFu0ll");
    static BFs0ll_BFs0ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0c_BFu0ll(Test_BFs0ll_BFs0ll_BFu0c_BFu0ll, "BFs0ll_BFs0ll_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0c_BFu0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0c_BFu0s) C1{ FL:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0c_BFu0s");
    static BFs0ll_BFs0ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0c_BFu0s(Test_BFs0ll_BFs0ll_BFu0c_BFu0s, "BFs0ll_BFs0ll_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0i) C1{ FL:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0i");
    static BFs0ll_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0i(Test_BFs0ll_BFs0ll_BFu0i, "BFs0ll_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0i_BFs0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0i_BFs0c) C1{ FL:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0i_BFs0c");
    static BFs0ll_BFs0ll_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0i_BFs0c(Test_BFs0ll_BFs0ll_BFu0i_BFs0c, "BFs0ll_BFs0ll_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0i_BFs0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0i_BFs0i) C1{ FL:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0i_BFs0i");
    static BFs0ll_BFs0ll_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0i_BFs0i(Test_BFs0ll_BFs0ll_BFu0i_BFs0i, "BFs0ll_BFs0ll_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0i_BFs0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0i_BFs0ll) C1{ FL:0 FL:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0i_BFs0ll");
    static BFs0ll_BFs0ll_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0i_BFs0ll(Test_BFs0ll_BFs0ll_BFu0i_BFs0ll, "BFs0ll_BFs0ll_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0i_BFs0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0i_BFs0s) C1{ FL:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0i_BFs0s");
    static BFs0ll_BFs0ll_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0i_BFs0s(Test_BFs0ll_BFs0ll_BFu0i_BFs0s, "BFs0ll_BFs0ll_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0i_BFu0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0i_BFu0c) C1{ FL:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0i_BFu0c");
    static BFs0ll_BFs0ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0i_BFu0c(Test_BFs0ll_BFs0ll_BFu0i_BFu0c, "BFs0ll_BFs0ll_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0i_BFu0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0i_BFu0i) C1{ FL:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0i_BFu0i");
    static BFs0ll_BFs0ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0i_BFu0i(Test_BFs0ll_BFs0ll_BFu0i_BFu0i, "BFs0ll_BFs0ll_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0i_BFu0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0i_BFu0ll) C1{ FL:0 FL:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0i_BFu0ll");
    static BFs0ll_BFs0ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0i_BFu0ll(Test_BFs0ll_BFs0ll_BFu0i_BFu0ll, "BFs0ll_BFs0ll_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0i_BFu0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0i_BFu0s) C1{ FL:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0i_BFu0s");
    static BFs0ll_BFs0ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0i_BFu0s(Test_BFs0ll_BFs0ll_BFu0i_BFu0s, "BFs0ll_BFs0ll_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0ll) C1{ FL:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0ll");
    static BFs0ll_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0ll(Test_BFs0ll_BFs0ll_BFu0ll, "BFs0ll_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0ll_BFs0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0ll_BFs0c) C1{ FL:0 FL:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0ll_BFs0c");
    static BFs0ll_BFs0ll_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0ll_BFs0c(Test_BFs0ll_BFs0ll_BFu0ll_BFs0c, "BFs0ll_BFs0ll_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0ll_BFs0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0ll_BFs0i) C1{ FL:0 FL:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0ll_BFs0i");
    static BFs0ll_BFs0ll_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0ll_BFs0i(Test_BFs0ll_BFs0ll_BFu0ll_BFs0i, "BFs0ll_BFs0ll_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0ll_BFs0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0ll_BFs0ll) C1{ FL:0 FL:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0ll_BFs0ll");
    static BFs0ll_BFs0ll_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0ll_BFs0ll(Test_BFs0ll_BFs0ll_BFu0ll_BFs0ll, "BFs0ll_BFs0ll_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0ll_BFs0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0ll_BFs0s) C1{ FL:0 FL:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0ll_BFs0s");
    static BFs0ll_BFs0ll_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0ll_BFs0s(Test_BFs0ll_BFs0ll_BFu0ll_BFs0s, "BFs0ll_BFs0ll_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0ll_BFu0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0ll_BFu0c) C1{ FL:0 FL:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0ll_BFu0c");
    static BFs0ll_BFs0ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0ll_BFu0c(Test_BFs0ll_BFs0ll_BFu0ll_BFu0c, "BFs0ll_BFs0ll_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0ll_BFu0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0ll_BFu0i) C1{ FL:0 FL:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0ll_BFu0i");
    static BFs0ll_BFs0ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0ll_BFu0i(Test_BFs0ll_BFs0ll_BFu0ll_BFu0i, "BFs0ll_BFs0ll_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0ll_BFu0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0ll_BFu0ll) C1{ FL:0 FL:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0ll_BFu0ll");
    static BFs0ll_BFs0ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0ll_BFu0ll(Test_BFs0ll_BFs0ll_BFu0ll_BFu0ll, "BFs0ll_BFs0ll_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0ll_BFu0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0ll_BFu0s) C1{ FL:0 FL:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0ll_BFu0s");
    static BFs0ll_BFs0ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0ll_BFu0s(Test_BFs0ll_BFs0ll_BFu0ll_BFu0s, "BFs0ll_BFs0ll_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0s) C1{ FL:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0s");
    static BFs0ll_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0s(Test_BFs0ll_BFs0ll_BFu0s, "BFs0ll_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0s_BFs0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0s_BFs0c) C1{ FL:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0s_BFs0c");
    static BFs0ll_BFs0ll_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0s_BFs0c(Test_BFs0ll_BFs0ll_BFu0s_BFs0c, "BFs0ll_BFs0ll_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0s_BFs0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0s_BFs0i) C1{ FL:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0s_BFs0i");
    static BFs0ll_BFs0ll_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0s_BFs0i(Test_BFs0ll_BFs0ll_BFu0s_BFs0i, "BFs0ll_BFs0ll_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0s_BFs0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0s_BFs0ll) C1{ FL:0 FL:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0s_BFs0ll");
    static BFs0ll_BFs0ll_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0s_BFs0ll(Test_BFs0ll_BFs0ll_BFu0s_BFs0ll, "BFs0ll_BFs0ll_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0s_BFs0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0s_BFs0s) C1{ FL:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0s_BFs0s");
    static BFs0ll_BFs0ll_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0s_BFs0s(Test_BFs0ll_BFs0ll_BFu0s_BFs0s, "BFs0ll_BFs0ll_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0s_BFu0c  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0s_BFu0c) C1{ FL:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0ll_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0s_BFu0c");
    static BFs0ll_BFs0ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0s_BFu0c(Test_BFs0ll_BFs0ll_BFu0s_BFu0c, "BFs0ll_BFs0ll_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0s_BFu0i  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0s_BFu0i) C1{ FL:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0ll_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0s_BFu0i");
    static BFs0ll_BFs0ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0s_BFu0i(Test_BFs0ll_BFs0ll_BFu0s_BFu0i, "BFs0ll_BFs0ll_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0s_BFu0ll  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0s_BFu0ll) C1{ FL:0 FL:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0s_BFu0ll");
    static BFs0ll_BFs0ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0s_BFu0ll(Test_BFs0ll_BFs0ll_BFu0s_BFu0ll, "BFs0ll_BFs0ll_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0ll_BFu0s_BFu0s  {
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0ll_BFu0s_BFu0s) C1{ FL:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0ll_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0ll_BFu0s_BFu0s");
    static BFs0ll_BFs0ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0ll_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0ll_BFu0s_BFu0s(Test_BFs0ll_BFs0ll_BFu0s_BFu0s, "BFs0ll_BFs0ll_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s  {
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0s) C1{ FL:0 Fs:0}



static void Test_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0s");
    static BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s(Test_BFs0ll_BFs0s, "BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0c  {
  signed __tsi64  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0c) C1{ FL:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0c");
    static BFs0ll_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0c(Test_BFs0ll_BFs0s_BFs0c, "BFs0ll_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0c_BFs0c  {
  signed __tsi64  :0;
  signed short  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0c_BFs0c) C1{ FL:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0c_BFs0c");
    static BFs0ll_BFs0s_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0c_BFs0c(Test_BFs0ll_BFs0s_BFs0c_BFs0c, "BFs0ll_BFs0s_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0c_BFs0i  {
  signed __tsi64  :0;
  signed short  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0c_BFs0i) C1{ FL:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0c_BFs0i");
    static BFs0ll_BFs0s_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0c_BFs0i(Test_BFs0ll_BFs0s_BFs0c_BFs0i, "BFs0ll_BFs0s_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0c_BFs0ll  {
  signed __tsi64  :0;
  signed short  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0c_BFs0ll) C1{ FL:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0s_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0c_BFs0ll");
    static BFs0ll_BFs0s_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0c_BFs0ll(Test_BFs0ll_BFs0s_BFs0c_BFs0ll, "BFs0ll_BFs0s_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0c_BFs0s  {
  signed __tsi64  :0;
  signed short  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0c_BFs0s) C1{ FL:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0c_BFs0s");
    static BFs0ll_BFs0s_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0c_BFs0s(Test_BFs0ll_BFs0s_BFs0c_BFs0s, "BFs0ll_BFs0s_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0c_BFu0c  {
  signed __tsi64  :0;
  signed short  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0c_BFu0c) C1{ FL:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0c_BFu0c");
    static BFs0ll_BFs0s_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0c_BFu0c(Test_BFs0ll_BFs0s_BFs0c_BFu0c, "BFs0ll_BFs0s_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0c_BFu0i  {
  signed __tsi64  :0;
  signed short  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0c_BFu0i) C1{ FL:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0c_BFu0i");
    static BFs0ll_BFs0s_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0c_BFu0i(Test_BFs0ll_BFs0s_BFs0c_BFu0i, "BFs0ll_BFs0s_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0c_BFu0ll  {
  signed __tsi64  :0;
  signed short  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0c_BFu0ll) C1{ FL:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0s_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0c_BFu0ll");
    static BFs0ll_BFs0s_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0c_BFu0ll(Test_BFs0ll_BFs0s_BFs0c_BFu0ll, "BFs0ll_BFs0s_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0c_BFu0s  {
  signed __tsi64  :0;
  signed short  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0c_BFu0s) C1{ FL:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0c_BFu0s");
    static BFs0ll_BFs0s_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0c_BFu0s(Test_BFs0ll_BFs0s_BFs0c_BFu0s, "BFs0ll_BFs0s_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0i  {
  signed __tsi64  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0i) C1{ FL:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0i");
    static BFs0ll_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0i(Test_BFs0ll_BFs0s_BFs0i, "BFs0ll_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0i_BFs0c  {
  signed __tsi64  :0;
  signed short  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0i_BFs0c) C1{ FL:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0i_BFs0c");
    static BFs0ll_BFs0s_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0i_BFs0c(Test_BFs0ll_BFs0s_BFs0i_BFs0c, "BFs0ll_BFs0s_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0i_BFs0i  {
  signed __tsi64  :0;
  signed short  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0i_BFs0i) C1{ FL:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0i_BFs0i");
    static BFs0ll_BFs0s_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0i_BFs0i(Test_BFs0ll_BFs0s_BFs0i_BFs0i, "BFs0ll_BFs0s_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0i_BFs0ll  {
  signed __tsi64  :0;
  signed short  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0i_BFs0ll) C1{ FL:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0s_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0i_BFs0ll");
    static BFs0ll_BFs0s_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0i_BFs0ll(Test_BFs0ll_BFs0s_BFs0i_BFs0ll, "BFs0ll_BFs0s_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0i_BFs0s  {
  signed __tsi64  :0;
  signed short  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0i_BFs0s) C1{ FL:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0i_BFs0s");
    static BFs0ll_BFs0s_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0i_BFs0s(Test_BFs0ll_BFs0s_BFs0i_BFs0s, "BFs0ll_BFs0s_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0i_BFu0c  {
  signed __tsi64  :0;
  signed short  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0i_BFu0c) C1{ FL:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0i_BFu0c");
    static BFs0ll_BFs0s_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0i_BFu0c(Test_BFs0ll_BFs0s_BFs0i_BFu0c, "BFs0ll_BFs0s_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0i_BFu0i  {
  signed __tsi64  :0;
  signed short  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0i_BFu0i) C1{ FL:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0i_BFu0i");
    static BFs0ll_BFs0s_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0i_BFu0i(Test_BFs0ll_BFs0s_BFs0i_BFu0i, "BFs0ll_BFs0s_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0i_BFu0ll  {
  signed __tsi64  :0;
  signed short  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0i_BFu0ll) C1{ FL:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0s_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0i_BFu0ll");
    static BFs0ll_BFs0s_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0i_BFu0ll(Test_BFs0ll_BFs0s_BFs0i_BFu0ll, "BFs0ll_BFs0s_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0i_BFu0s  {
  signed __tsi64  :0;
  signed short  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0i_BFu0s) C1{ FL:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0i_BFu0s");
    static BFs0ll_BFs0s_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0i_BFu0s(Test_BFs0ll_BFs0s_BFs0i_BFu0s, "BFs0ll_BFs0s_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0ll  {
  signed __tsi64  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0ll) C1{ FL:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0ll");
    static BFs0ll_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0ll(Test_BFs0ll_BFs0s_BFs0ll, "BFs0ll_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0ll_BFs0c  {
  signed __tsi64  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0ll_BFs0c) C1{ FL:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0ll_BFs0c");
    static BFs0ll_BFs0s_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0ll_BFs0c(Test_BFs0ll_BFs0s_BFs0ll_BFs0c, "BFs0ll_BFs0s_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0ll_BFs0i  {
  signed __tsi64  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0ll_BFs0i) C1{ FL:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0ll_BFs0i");
    static BFs0ll_BFs0s_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0ll_BFs0i(Test_BFs0ll_BFs0s_BFs0ll_BFs0i, "BFs0ll_BFs0s_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0ll_BFs0ll  {
  signed __tsi64  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0ll_BFs0ll) C1{ FL:0 Fs:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0s_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0ll_BFs0ll");
    static BFs0ll_BFs0s_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0ll_BFs0ll(Test_BFs0ll_BFs0s_BFs0ll_BFs0ll, "BFs0ll_BFs0s_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0ll_BFs0s  {
  signed __tsi64  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0ll_BFs0s) C1{ FL:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0ll_BFs0s");
    static BFs0ll_BFs0s_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0ll_BFs0s(Test_BFs0ll_BFs0s_BFs0ll_BFs0s, "BFs0ll_BFs0s_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0ll_BFu0c  {
  signed __tsi64  :0;
  signed short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0ll_BFu0c) C1{ FL:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0ll_BFu0c");
    static BFs0ll_BFs0s_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0ll_BFu0c(Test_BFs0ll_BFs0s_BFs0ll_BFu0c, "BFs0ll_BFs0s_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0ll_BFu0i  {
  signed __tsi64  :0;
  signed short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0ll_BFu0i) C1{ FL:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0ll_BFu0i");
    static BFs0ll_BFs0s_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0ll_BFu0i(Test_BFs0ll_BFs0s_BFs0ll_BFu0i, "BFs0ll_BFs0s_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0ll_BFu0ll  {
  signed __tsi64  :0;
  signed short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0ll_BFu0ll) C1{ FL:0 Fs:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0s_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0ll_BFu0ll");
    static BFs0ll_BFs0s_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0ll_BFu0ll(Test_BFs0ll_BFs0s_BFs0ll_BFu0ll, "BFs0ll_BFs0s_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0ll_BFu0s  {
  signed __tsi64  :0;
  signed short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0ll_BFu0s) C1{ FL:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0ll_BFu0s");
    static BFs0ll_BFs0s_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0ll_BFu0s(Test_BFs0ll_BFs0s_BFs0ll_BFu0s, "BFs0ll_BFs0s_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0s  {
  signed __tsi64  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0s) C1{ FL:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0s");
    static BFs0ll_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0s(Test_BFs0ll_BFs0s_BFs0s, "BFs0ll_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0s_BFs0c  {
  signed __tsi64  :0;
  signed short  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0s_BFs0c) C1{ FL:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0s_BFs0c");
    static BFs0ll_BFs0s_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0s_BFs0c(Test_BFs0ll_BFs0s_BFs0s_BFs0c, "BFs0ll_BFs0s_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0s_BFs0i  {
  signed __tsi64  :0;
  signed short  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0s_BFs0i) C1{ FL:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0s_BFs0i");
    static BFs0ll_BFs0s_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0s_BFs0i(Test_BFs0ll_BFs0s_BFs0s_BFs0i, "BFs0ll_BFs0s_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0s_BFs0ll  {
  signed __tsi64  :0;
  signed short  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0s_BFs0ll) C1{ FL:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0s_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0s_BFs0ll");
    static BFs0ll_BFs0s_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0s_BFs0ll(Test_BFs0ll_BFs0s_BFs0s_BFs0ll, "BFs0ll_BFs0s_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0s_BFs0s  {
  signed __tsi64  :0;
  signed short  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0s_BFs0s) C1{ FL:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0s_BFs0s");
    static BFs0ll_BFs0s_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0s_BFs0s(Test_BFs0ll_BFs0s_BFs0s_BFs0s, "BFs0ll_BFs0s_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0s_BFu0c  {
  signed __tsi64  :0;
  signed short  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0s_BFu0c) C1{ FL:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0s_BFu0c");
    static BFs0ll_BFs0s_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0s_BFu0c(Test_BFs0ll_BFs0s_BFs0s_BFu0c, "BFs0ll_BFs0s_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0s_BFu0i  {
  signed __tsi64  :0;
  signed short  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0s_BFu0i) C1{ FL:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0s_BFu0i");
    static BFs0ll_BFs0s_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0s_BFu0i(Test_BFs0ll_BFs0s_BFs0s_BFu0i, "BFs0ll_BFs0s_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0s_BFu0ll  {
  signed __tsi64  :0;
  signed short  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0s_BFu0ll) C1{ FL:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0s_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0s_BFu0ll");
    static BFs0ll_BFs0s_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0s_BFu0ll(Test_BFs0ll_BFs0s_BFs0s_BFu0ll, "BFs0ll_BFs0s_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFs0s_BFu0s  {
  signed __tsi64  :0;
  signed short  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFs0s_BFu0s) C1{ FL:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFs0s_BFu0s");
    static BFs0ll_BFs0s_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFs0s_BFu0s(Test_BFs0ll_BFs0s_BFs0s_BFu0s, "BFs0ll_BFs0s_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0c  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0c) C1{ FL:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0c");
    static BFs0ll_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0c(Test_BFs0ll_BFs0s_BFu0c, "BFs0ll_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0c_BFs0c  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0c_BFs0c) C1{ FL:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0c_BFs0c");
    static BFs0ll_BFs0s_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0c_BFs0c(Test_BFs0ll_BFs0s_BFu0c_BFs0c, "BFs0ll_BFs0s_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0c_BFs0i  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0c_BFs0i) C1{ FL:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0c_BFs0i");
    static BFs0ll_BFs0s_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0c_BFs0i(Test_BFs0ll_BFs0s_BFu0c_BFs0i, "BFs0ll_BFs0s_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0c_BFs0ll  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0c_BFs0ll) C1{ FL:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0s_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0c_BFs0ll");
    static BFs0ll_BFs0s_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0c_BFs0ll(Test_BFs0ll_BFs0s_BFu0c_BFs0ll, "BFs0ll_BFs0s_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0c_BFs0s  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0c_BFs0s) C1{ FL:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0c_BFs0s");
    static BFs0ll_BFs0s_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0c_BFs0s(Test_BFs0ll_BFs0s_BFu0c_BFs0s, "BFs0ll_BFs0s_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0c_BFu0c  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0c_BFu0c) C1{ FL:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0c_BFu0c");
    static BFs0ll_BFs0s_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0c_BFu0c(Test_BFs0ll_BFs0s_BFu0c_BFu0c, "BFs0ll_BFs0s_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0c_BFu0i  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0c_BFu0i) C1{ FL:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0c_BFu0i");
    static BFs0ll_BFs0s_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0c_BFu0i(Test_BFs0ll_BFs0s_BFu0c_BFu0i, "BFs0ll_BFs0s_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0c_BFu0ll  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0c_BFu0ll) C1{ FL:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0ll_BFs0s_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0c_BFu0ll");
    static BFs0ll_BFs0s_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0c_BFu0ll(Test_BFs0ll_BFs0s_BFu0c_BFu0ll, "BFs0ll_BFs0s_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0c_BFu0s  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0c_BFu0s) C1{ FL:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0c_BFu0s");
    static BFs0ll_BFs0s_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0c_BFu0s(Test_BFs0ll_BFs0s_BFu0c_BFu0s, "BFs0ll_BFs0s_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0i  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0i) C1{ FL:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0i");
    static BFs0ll_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0i(Test_BFs0ll_BFs0s_BFu0i, "BFs0ll_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0i_BFs0c  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0i_BFs0c) C1{ FL:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0i_BFs0c");
    static BFs0ll_BFs0s_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0i_BFs0c(Test_BFs0ll_BFs0s_BFu0i_BFs0c, "BFs0ll_BFs0s_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0i_BFs0i  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0i_BFs0i) C1{ FL:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0i_BFs0i");
    static BFs0ll_BFs0s_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0i_BFs0i(Test_BFs0ll_BFs0s_BFu0i_BFs0i, "BFs0ll_BFs0s_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0i_BFs0ll  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0i_BFs0ll) C1{ FL:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0s_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0i_BFs0ll");
    static BFs0ll_BFs0s_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0i_BFs0ll(Test_BFs0ll_BFs0s_BFu0i_BFs0ll, "BFs0ll_BFs0s_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0i_BFs0s  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0i_BFs0s) C1{ FL:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0i_BFs0s");
    static BFs0ll_BFs0s_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0i_BFs0s(Test_BFs0ll_BFs0s_BFu0i_BFs0s, "BFs0ll_BFs0s_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0i_BFu0c  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0i_BFu0c) C1{ FL:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0i_BFu0c");
    static BFs0ll_BFs0s_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0i_BFu0c(Test_BFs0ll_BFs0s_BFu0i_BFu0c, "BFs0ll_BFs0s_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0i_BFu0i  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0i_BFu0i) C1{ FL:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0i_BFu0i");
    static BFs0ll_BFs0s_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0i_BFu0i(Test_BFs0ll_BFs0s_BFu0i_BFu0i, "BFs0ll_BFs0s_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0i_BFu0ll  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0i_BFu0ll) C1{ FL:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0ll_BFs0s_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0i_BFu0ll");
    static BFs0ll_BFs0s_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0i_BFu0ll(Test_BFs0ll_BFs0s_BFu0i_BFu0ll, "BFs0ll_BFs0s_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0i_BFu0s  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0i_BFu0s) C1{ FL:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0i_BFu0s");
    static BFs0ll_BFs0s_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0i_BFu0s(Test_BFs0ll_BFs0s_BFu0i_BFu0s, "BFs0ll_BFs0s_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0ll  {
  signed __tsi64  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0ll) C1{ FL:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0ll");
    static BFs0ll_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0ll(Test_BFs0ll_BFs0s_BFu0ll, "BFs0ll_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0ll_BFs0c  {
  signed __tsi64  :0;
  signed short  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0ll_BFs0c) C1{ FL:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0ll_BFs0c");
    static BFs0ll_BFs0s_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0ll_BFs0c(Test_BFs0ll_BFs0s_BFu0ll_BFs0c, "BFs0ll_BFs0s_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0ll_BFs0i  {
  signed __tsi64  :0;
  signed short  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0ll_BFs0i) C1{ FL:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0ll_BFs0i");
    static BFs0ll_BFs0s_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0ll_BFs0i(Test_BFs0ll_BFs0s_BFu0ll_BFs0i, "BFs0ll_BFs0s_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0ll_BFs0ll  {
  signed __tsi64  :0;
  signed short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0ll_BFs0ll) C1{ FL:0 Fs:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0s_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0ll_BFs0ll");
    static BFs0ll_BFs0s_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0ll_BFs0ll(Test_BFs0ll_BFs0s_BFu0ll_BFs0ll, "BFs0ll_BFs0s_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0ll_BFs0s  {
  signed __tsi64  :0;
  signed short  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0ll_BFs0s) C1{ FL:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0ll_BFs0s");
    static BFs0ll_BFs0s_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0ll_BFs0s(Test_BFs0ll_BFs0s_BFu0ll_BFs0s, "BFs0ll_BFs0s_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0ll_BFu0c  {
  signed __tsi64  :0;
  signed short  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0ll_BFu0c) C1{ FL:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0ll_BFu0c");
    static BFs0ll_BFs0s_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0ll_BFu0c(Test_BFs0ll_BFs0s_BFu0ll_BFu0c, "BFs0ll_BFs0s_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0ll_BFu0i  {
  signed __tsi64  :0;
  signed short  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0ll_BFu0i) C1{ FL:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0ll_BFu0i");
    static BFs0ll_BFs0s_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0ll_BFu0i(Test_BFs0ll_BFs0s_BFu0ll_BFu0i, "BFs0ll_BFs0s_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0ll_BFu0ll  {
  signed __tsi64  :0;
  signed short  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0ll_BFu0ll) C1{ FL:0 Fs:0 FL:0 FL:0}



static void Test_BFs0ll_BFs0s_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0ll_BFu0ll");
    static BFs0ll_BFs0s_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0ll_BFu0ll(Test_BFs0ll_BFs0s_BFu0ll_BFu0ll, "BFs0ll_BFs0s_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0ll_BFu0s  {
  signed __tsi64  :0;
  signed short  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0ll_BFu0s) C1{ FL:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0ll_BFu0s");
    static BFs0ll_BFs0s_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0ll_BFu0s(Test_BFs0ll_BFs0s_BFu0ll_BFu0s, "BFs0ll_BFs0s_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0s  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0s) C1{ FL:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0s");
    static BFs0ll_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0s(Test_BFs0ll_BFs0s_BFu0s, "BFs0ll_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0s_BFs0c  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0s_BFs0c) C1{ FL:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0s_BFs0c");
    static BFs0ll_BFs0s_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0s_BFs0c(Test_BFs0ll_BFs0s_BFu0s_BFs0c, "BFs0ll_BFs0s_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0s_BFs0i  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0s_BFs0i) C1{ FL:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0s_BFs0i");
    static BFs0ll_BFs0s_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0s_BFs0i(Test_BFs0ll_BFs0s_BFu0s_BFs0i, "BFs0ll_BFs0s_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0s_BFs0ll  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0s_BFs0ll) C1{ FL:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0s_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0s_BFs0ll");
    static BFs0ll_BFs0s_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0s_BFs0ll(Test_BFs0ll_BFs0s_BFu0s_BFs0ll, "BFs0ll_BFs0s_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0s_BFs0s  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0s_BFs0s) C1{ FL:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0s_BFs0s");
    static BFs0ll_BFs0s_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0s_BFs0s(Test_BFs0ll_BFs0s_BFu0s_BFs0s, "BFs0ll_BFs0s_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0s_BFu0c  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0s_BFu0c) C1{ FL:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFs0s_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0s_BFu0c");
    static BFs0ll_BFs0s_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0s_BFu0c(Test_BFs0ll_BFs0s_BFu0s_BFu0c, "BFs0ll_BFs0s_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0s_BFu0i  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0s_BFu0i) C1{ FL:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFs0s_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0s_BFu0i");
    static BFs0ll_BFs0s_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0s_BFu0i(Test_BFs0ll_BFs0s_BFu0s_BFu0i, "BFs0ll_BFs0s_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0s_BFu0ll  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0s_BFu0ll) C1{ FL:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0ll_BFs0s_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0s_BFu0ll");
    static BFs0ll_BFs0s_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0s_BFu0ll(Test_BFs0ll_BFs0s_BFu0s_BFu0ll, "BFs0ll_BFs0s_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFs0s_BFu0s_BFu0s  {
  signed __tsi64  :0;
  signed short  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFs0s_BFu0s_BFu0s) C1{ FL:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFs0s_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFs0s_BFu0s_BFu0s");
    static BFs0ll_BFs0s_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFs0s_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFs0s_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFs0s_BFu0s_BFu0s(Test_BFs0ll_BFs0s_BFu0s_BFu0s, "BFs0ll_BFs0s_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c  {
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0c) C1{ FL:0 Fc:0}



static void Test_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0c");
    static BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c(Test_BFs0ll_BFu0c, "BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0c) C1{ FL:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0c");
    static BFs0ll_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0c(Test_BFs0ll_BFu0c_BFs0c, "BFs0ll_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0c_BFs0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0c_BFs0c) C1{ FL:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0c_BFs0c");
    static BFs0ll_BFu0c_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0c_BFs0c(Test_BFs0ll_BFu0c_BFs0c_BFs0c, "BFs0ll_BFu0c_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0c_BFs0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0c_BFs0i) C1{ FL:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0c_BFs0i");
    static BFs0ll_BFu0c_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0c_BFs0i(Test_BFs0ll_BFu0c_BFs0c_BFs0i, "BFs0ll_BFu0c_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0c_BFs0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0c_BFs0ll) C1{ FL:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0c_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0c_BFs0ll");
    static BFs0ll_BFu0c_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0c_BFs0ll(Test_BFs0ll_BFu0c_BFs0c_BFs0ll, "BFs0ll_BFu0c_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0c_BFs0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0c_BFs0s) C1{ FL:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0c_BFs0s");
    static BFs0ll_BFu0c_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0c_BFs0s(Test_BFs0ll_BFu0c_BFs0c_BFs0s, "BFs0ll_BFu0c_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0c_BFu0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0c_BFu0c) C1{ FL:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0c_BFu0c");
    static BFs0ll_BFu0c_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0c_BFu0c(Test_BFs0ll_BFu0c_BFs0c_BFu0c, "BFs0ll_BFu0c_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0c_BFu0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0c_BFu0i) C1{ FL:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0c_BFu0i");
    static BFs0ll_BFu0c_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0c_BFu0i(Test_BFs0ll_BFu0c_BFs0c_BFu0i, "BFs0ll_BFu0c_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0c_BFu0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0c_BFu0ll) C1{ FL:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0c_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0c_BFu0ll");
    static BFs0ll_BFu0c_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0c_BFu0ll(Test_BFs0ll_BFu0c_BFs0c_BFu0ll, "BFs0ll_BFu0c_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0c_BFu0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0c_BFu0s) C1{ FL:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0c_BFu0s");
    static BFs0ll_BFu0c_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0c_BFu0s(Test_BFs0ll_BFu0c_BFs0c_BFu0s, "BFs0ll_BFu0c_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0i) C1{ FL:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0i");
    static BFs0ll_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0i(Test_BFs0ll_BFu0c_BFs0i, "BFs0ll_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0i_BFs0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0i_BFs0c) C1{ FL:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0i_BFs0c");
    static BFs0ll_BFu0c_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0i_BFs0c(Test_BFs0ll_BFu0c_BFs0i_BFs0c, "BFs0ll_BFu0c_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0i_BFs0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0i_BFs0i) C1{ FL:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0i_BFs0i");
    static BFs0ll_BFu0c_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0i_BFs0i(Test_BFs0ll_BFu0c_BFs0i_BFs0i, "BFs0ll_BFu0c_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0i_BFs0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0i_BFs0ll) C1{ FL:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0c_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0i_BFs0ll");
    static BFs0ll_BFu0c_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0i_BFs0ll(Test_BFs0ll_BFu0c_BFs0i_BFs0ll, "BFs0ll_BFu0c_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0i_BFs0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0i_BFs0s) C1{ FL:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0i_BFs0s");
    static BFs0ll_BFu0c_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0i_BFs0s(Test_BFs0ll_BFu0c_BFs0i_BFs0s, "BFs0ll_BFu0c_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0i_BFu0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0i_BFu0c) C1{ FL:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0i_BFu0c");
    static BFs0ll_BFu0c_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0i_BFu0c(Test_BFs0ll_BFu0c_BFs0i_BFu0c, "BFs0ll_BFu0c_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0i_BFu0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0i_BFu0i) C1{ FL:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0i_BFu0i");
    static BFs0ll_BFu0c_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0i_BFu0i(Test_BFs0ll_BFu0c_BFs0i_BFu0i, "BFs0ll_BFu0c_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0i_BFu0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0i_BFu0ll) C1{ FL:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0c_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0i_BFu0ll");
    static BFs0ll_BFu0c_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0i_BFu0ll(Test_BFs0ll_BFu0c_BFs0i_BFu0ll, "BFs0ll_BFu0c_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0i_BFu0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0i_BFu0s) C1{ FL:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0i_BFu0s");
    static BFs0ll_BFu0c_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0i_BFu0s(Test_BFs0ll_BFu0c_BFs0i_BFu0s, "BFs0ll_BFu0c_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0ll) C1{ FL:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0ll");
    static BFs0ll_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0ll(Test_BFs0ll_BFu0c_BFs0ll, "BFs0ll_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0ll_BFs0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0ll_BFs0c) C1{ FL:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0ll_BFs0c");
    static BFs0ll_BFu0c_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0ll_BFs0c(Test_BFs0ll_BFu0c_BFs0ll_BFs0c, "BFs0ll_BFu0c_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0ll_BFs0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0ll_BFs0i) C1{ FL:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0ll_BFs0i");
    static BFs0ll_BFu0c_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0ll_BFs0i(Test_BFs0ll_BFu0c_BFs0ll_BFs0i, "BFs0ll_BFu0c_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0ll_BFs0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0ll_BFs0ll) C1{ FL:0 Fc:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0c_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0ll_BFs0ll");
    static BFs0ll_BFu0c_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0ll_BFs0ll(Test_BFs0ll_BFu0c_BFs0ll_BFs0ll, "BFs0ll_BFu0c_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0ll_BFs0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0ll_BFs0s) C1{ FL:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0ll_BFs0s");
    static BFs0ll_BFu0c_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0ll_BFs0s(Test_BFs0ll_BFu0c_BFs0ll_BFs0s, "BFs0ll_BFu0c_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0ll_BFu0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0ll_BFu0c) C1{ FL:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0ll_BFu0c");
    static BFs0ll_BFu0c_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0ll_BFu0c(Test_BFs0ll_BFu0c_BFs0ll_BFu0c, "BFs0ll_BFu0c_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0ll_BFu0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0ll_BFu0i) C1{ FL:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0ll_BFu0i");
    static BFs0ll_BFu0c_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0ll_BFu0i(Test_BFs0ll_BFu0c_BFs0ll_BFu0i, "BFs0ll_BFu0c_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0ll_BFu0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0ll_BFu0ll) C1{ FL:0 Fc:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0c_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0ll_BFu0ll");
    static BFs0ll_BFu0c_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0ll_BFu0ll(Test_BFs0ll_BFu0c_BFs0ll_BFu0ll, "BFs0ll_BFu0c_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0ll_BFu0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0ll_BFu0s) C1{ FL:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0ll_BFu0s");
    static BFs0ll_BFu0c_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0ll_BFu0s(Test_BFs0ll_BFu0c_BFs0ll_BFu0s, "BFs0ll_BFu0c_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0s) C1{ FL:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0s");
    static BFs0ll_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0s(Test_BFs0ll_BFu0c_BFs0s, "BFs0ll_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0s_BFs0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0s_BFs0c) C1{ FL:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0s_BFs0c");
    static BFs0ll_BFu0c_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0s_BFs0c(Test_BFs0ll_BFu0c_BFs0s_BFs0c, "BFs0ll_BFu0c_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0s_BFs0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0s_BFs0i) C1{ FL:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0s_BFs0i");
    static BFs0ll_BFu0c_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0s_BFs0i(Test_BFs0ll_BFu0c_BFs0s_BFs0i, "BFs0ll_BFu0c_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0s_BFs0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0s_BFs0ll) C1{ FL:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0c_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0s_BFs0ll");
    static BFs0ll_BFu0c_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0s_BFs0ll(Test_BFs0ll_BFu0c_BFs0s_BFs0ll, "BFs0ll_BFu0c_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0s_BFs0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0s_BFs0s) C1{ FL:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0s_BFs0s");
    static BFs0ll_BFu0c_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0s_BFs0s(Test_BFs0ll_BFu0c_BFs0s_BFs0s, "BFs0ll_BFu0c_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0s_BFu0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0s_BFu0c) C1{ FL:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0s_BFu0c");
    static BFs0ll_BFu0c_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0s_BFu0c(Test_BFs0ll_BFu0c_BFs0s_BFu0c, "BFs0ll_BFu0c_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0s_BFu0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0s_BFu0i) C1{ FL:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0s_BFu0i");
    static BFs0ll_BFu0c_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0s_BFu0i(Test_BFs0ll_BFu0c_BFs0s_BFu0i, "BFs0ll_BFu0c_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0s_BFu0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0s_BFu0ll) C1{ FL:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0c_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0s_BFu0ll");
    static BFs0ll_BFu0c_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0s_BFu0ll(Test_BFs0ll_BFu0c_BFs0s_BFu0ll, "BFs0ll_BFu0c_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFs0s_BFu0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFs0s_BFu0s) C1{ FL:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFs0s_BFu0s");
    static BFs0ll_BFu0c_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFs0s_BFu0s(Test_BFs0ll_BFu0c_BFs0s_BFu0s, "BFs0ll_BFu0c_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0c) C1{ FL:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0c");
    static BFs0ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0c(Test_BFs0ll_BFu0c_BFu0c, "BFs0ll_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0c_BFs0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0c_BFs0c) C1{ FL:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0c_BFs0c");
    static BFs0ll_BFu0c_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0c_BFs0c(Test_BFs0ll_BFu0c_BFu0c_BFs0c, "BFs0ll_BFu0c_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0c_BFs0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0c_BFs0i) C1{ FL:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0c_BFs0i");
    static BFs0ll_BFu0c_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0c_BFs0i(Test_BFs0ll_BFu0c_BFu0c_BFs0i, "BFs0ll_BFu0c_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0c_BFs0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0c_BFs0ll) C1{ FL:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0c_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0c_BFs0ll");
    static BFs0ll_BFu0c_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0c_BFs0ll(Test_BFs0ll_BFu0c_BFu0c_BFs0ll, "BFs0ll_BFu0c_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0c_BFs0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0c_BFs0s) C1{ FL:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0c_BFs0s");
    static BFs0ll_BFu0c_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0c_BFs0s(Test_BFs0ll_BFu0c_BFu0c_BFs0s, "BFs0ll_BFu0c_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0c_BFu0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0c_BFu0c) C1{ FL:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0c_BFu0c");
    static BFs0ll_BFu0c_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0c_BFu0c(Test_BFs0ll_BFu0c_BFu0c_BFu0c, "BFs0ll_BFu0c_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0c_BFu0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0c_BFu0i) C1{ FL:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0c_BFu0i");
    static BFs0ll_BFu0c_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0c_BFu0i(Test_BFs0ll_BFu0c_BFu0c_BFu0i, "BFs0ll_BFu0c_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0c_BFu0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0c_BFu0ll) C1{ FL:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0c_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0c_BFu0ll");
    static BFs0ll_BFu0c_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0c_BFu0ll(Test_BFs0ll_BFu0c_BFu0c_BFu0ll, "BFs0ll_BFu0c_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0c_BFu0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0c_BFu0s) C1{ FL:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0c_BFu0s");
    static BFs0ll_BFu0c_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0c_BFu0s(Test_BFs0ll_BFu0c_BFu0c_BFu0s, "BFs0ll_BFu0c_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0i) C1{ FL:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0i");
    static BFs0ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0i(Test_BFs0ll_BFu0c_BFu0i, "BFs0ll_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0i_BFs0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0i_BFs0c) C1{ FL:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0i_BFs0c");
    static BFs0ll_BFu0c_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0i_BFs0c(Test_BFs0ll_BFu0c_BFu0i_BFs0c, "BFs0ll_BFu0c_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0i_BFs0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0i_BFs0i) C1{ FL:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0i_BFs0i");
    static BFs0ll_BFu0c_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0i_BFs0i(Test_BFs0ll_BFu0c_BFu0i_BFs0i, "BFs0ll_BFu0c_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0i_BFs0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0i_BFs0ll) C1{ FL:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0c_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0i_BFs0ll");
    static BFs0ll_BFu0c_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0i_BFs0ll(Test_BFs0ll_BFu0c_BFu0i_BFs0ll, "BFs0ll_BFu0c_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0i_BFs0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0i_BFs0s) C1{ FL:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0i_BFs0s");
    static BFs0ll_BFu0c_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0i_BFs0s(Test_BFs0ll_BFu0c_BFu0i_BFs0s, "BFs0ll_BFu0c_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0i_BFu0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0i_BFu0c) C1{ FL:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0i_BFu0c");
    static BFs0ll_BFu0c_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0i_BFu0c(Test_BFs0ll_BFu0c_BFu0i_BFu0c, "BFs0ll_BFu0c_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0i_BFu0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0i_BFu0i) C1{ FL:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0i_BFu0i");
    static BFs0ll_BFu0c_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0i_BFu0i(Test_BFs0ll_BFu0c_BFu0i_BFu0i, "BFs0ll_BFu0c_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0i_BFu0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0i_BFu0ll) C1{ FL:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0c_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0i_BFu0ll");
    static BFs0ll_BFu0c_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0i_BFu0ll(Test_BFs0ll_BFu0c_BFu0i_BFu0ll, "BFs0ll_BFu0c_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0i_BFu0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0i_BFu0s) C1{ FL:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0i_BFu0s");
    static BFs0ll_BFu0c_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0i_BFu0s(Test_BFs0ll_BFu0c_BFu0i_BFu0s, "BFs0ll_BFu0c_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0ll) C1{ FL:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0ll");
    static BFs0ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0ll(Test_BFs0ll_BFu0c_BFu0ll, "BFs0ll_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0ll_BFs0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0ll_BFs0c) C1{ FL:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0ll_BFs0c");
    static BFs0ll_BFu0c_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0ll_BFs0c(Test_BFs0ll_BFu0c_BFu0ll_BFs0c, "BFs0ll_BFu0c_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0ll_BFs0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0ll_BFs0i) C1{ FL:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0ll_BFs0i");
    static BFs0ll_BFu0c_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0ll_BFs0i(Test_BFs0ll_BFu0c_BFu0ll_BFs0i, "BFs0ll_BFu0c_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0ll_BFs0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0ll_BFs0ll) C1{ FL:0 Fc:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0c_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0ll_BFs0ll");
    static BFs0ll_BFu0c_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0ll_BFs0ll(Test_BFs0ll_BFu0c_BFu0ll_BFs0ll, "BFs0ll_BFu0c_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0ll_BFs0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0ll_BFs0s) C1{ FL:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0ll_BFs0s");
    static BFs0ll_BFu0c_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0ll_BFs0s(Test_BFs0ll_BFu0c_BFu0ll_BFs0s, "BFs0ll_BFu0c_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0ll_BFu0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0ll_BFu0c) C1{ FL:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0ll_BFu0c");
    static BFs0ll_BFu0c_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0ll_BFu0c(Test_BFs0ll_BFu0c_BFu0ll_BFu0c, "BFs0ll_BFu0c_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0ll_BFu0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0ll_BFu0i) C1{ FL:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0ll_BFu0i");
    static BFs0ll_BFu0c_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0ll_BFu0i(Test_BFs0ll_BFu0c_BFu0ll_BFu0i, "BFs0ll_BFu0c_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0ll_BFu0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0ll_BFu0ll) C1{ FL:0 Fc:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0c_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0ll_BFu0ll");
    static BFs0ll_BFu0c_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0ll_BFu0ll(Test_BFs0ll_BFu0c_BFu0ll_BFu0ll, "BFs0ll_BFu0c_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0ll_BFu0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0ll_BFu0s) C1{ FL:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0ll_BFu0s");
    static BFs0ll_BFu0c_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0ll_BFu0s(Test_BFs0ll_BFu0c_BFu0ll_BFu0s, "BFs0ll_BFu0c_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0s) C1{ FL:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0s");
    static BFs0ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0s(Test_BFs0ll_BFu0c_BFu0s, "BFs0ll_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0s_BFs0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0s_BFs0c) C1{ FL:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0s_BFs0c");
    static BFs0ll_BFu0c_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0s_BFs0c(Test_BFs0ll_BFu0c_BFu0s_BFs0c, "BFs0ll_BFu0c_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0s_BFs0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0s_BFs0i) C1{ FL:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0s_BFs0i");
    static BFs0ll_BFu0c_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0s_BFs0i(Test_BFs0ll_BFu0c_BFu0s_BFs0i, "BFs0ll_BFu0c_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0s_BFs0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0s_BFs0ll) C1{ FL:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0c_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0s_BFs0ll");
    static BFs0ll_BFu0c_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0s_BFs0ll(Test_BFs0ll_BFu0c_BFu0s_BFs0ll, "BFs0ll_BFu0c_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0s_BFs0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0s_BFs0s) C1{ FL:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0s_BFs0s");
    static BFs0ll_BFu0c_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0s_BFs0s(Test_BFs0ll_BFu0c_BFu0s_BFs0s, "BFs0ll_BFu0c_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0s_BFu0c  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0s_BFu0c) C1{ FL:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0c_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0s_BFu0c");
    static BFs0ll_BFu0c_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0s_BFu0c(Test_BFs0ll_BFu0c_BFu0s_BFu0c, "BFs0ll_BFu0c_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0s_BFu0i  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0s_BFu0i) C1{ FL:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0c_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0s_BFu0i");
    static BFs0ll_BFu0c_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0s_BFu0i(Test_BFs0ll_BFu0c_BFu0s_BFu0i, "BFs0ll_BFu0c_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0s_BFu0ll  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0s_BFu0ll) C1{ FL:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0c_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0s_BFu0ll");
    static BFs0ll_BFu0c_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0s_BFu0ll(Test_BFs0ll_BFu0c_BFu0s_BFu0ll, "BFs0ll_BFu0c_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0c_BFu0s_BFu0s  {
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0c_BFu0s_BFu0s) C1{ FL:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0c_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0c_BFu0s_BFu0s");
    static BFs0ll_BFu0c_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0c_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0c_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0c_BFu0s_BFu0s(Test_BFs0ll_BFu0c_BFu0s_BFu0s, "BFs0ll_BFu0c_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i  {
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0i) C1{ FL:0 Fi:0}



static void Test_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0i");
    static BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i(Test_BFs0ll_BFu0i, "BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0c) C1{ FL:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0c");
    static BFs0ll_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0c(Test_BFs0ll_BFu0i_BFs0c, "BFs0ll_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0c_BFs0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0c_BFs0c) C1{ FL:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0c_BFs0c");
    static BFs0ll_BFu0i_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0c_BFs0c(Test_BFs0ll_BFu0i_BFs0c_BFs0c, "BFs0ll_BFu0i_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0c_BFs0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0c_BFs0i) C1{ FL:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0c_BFs0i");
    static BFs0ll_BFu0i_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0c_BFs0i(Test_BFs0ll_BFu0i_BFs0c_BFs0i, "BFs0ll_BFu0i_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0c_BFs0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0c_BFs0ll) C1{ FL:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0i_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0c_BFs0ll");
    static BFs0ll_BFu0i_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0c_BFs0ll(Test_BFs0ll_BFu0i_BFs0c_BFs0ll, "BFs0ll_BFu0i_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0c_BFs0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0c_BFs0s) C1{ FL:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0c_BFs0s");
    static BFs0ll_BFu0i_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0c_BFs0s(Test_BFs0ll_BFu0i_BFs0c_BFs0s, "BFs0ll_BFu0i_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0c_BFu0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0c_BFu0c) C1{ FL:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0c_BFu0c");
    static BFs0ll_BFu0i_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0c_BFu0c(Test_BFs0ll_BFu0i_BFs0c_BFu0c, "BFs0ll_BFu0i_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0c_BFu0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0c_BFu0i) C1{ FL:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0c_BFu0i");
    static BFs0ll_BFu0i_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0c_BFu0i(Test_BFs0ll_BFu0i_BFs0c_BFu0i, "BFs0ll_BFu0i_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0c_BFu0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0c_BFu0ll) C1{ FL:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0i_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0c_BFu0ll");
    static BFs0ll_BFu0i_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0c_BFu0ll(Test_BFs0ll_BFu0i_BFs0c_BFu0ll, "BFs0ll_BFu0i_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0c_BFu0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0c_BFu0s) C1{ FL:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0c_BFu0s");
    static BFs0ll_BFu0i_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0c_BFu0s(Test_BFs0ll_BFu0i_BFs0c_BFu0s, "BFs0ll_BFu0i_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0i) C1{ FL:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0i");
    static BFs0ll_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0i(Test_BFs0ll_BFu0i_BFs0i, "BFs0ll_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0i_BFs0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0i_BFs0c) C1{ FL:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0i_BFs0c");
    static BFs0ll_BFu0i_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0i_BFs0c(Test_BFs0ll_BFu0i_BFs0i_BFs0c, "BFs0ll_BFu0i_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0i_BFs0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0i_BFs0i) C1{ FL:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0i_BFs0i");
    static BFs0ll_BFu0i_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0i_BFs0i(Test_BFs0ll_BFu0i_BFs0i_BFs0i, "BFs0ll_BFu0i_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0i_BFs0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0i_BFs0ll) C1{ FL:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0i_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0i_BFs0ll");
    static BFs0ll_BFu0i_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0i_BFs0ll(Test_BFs0ll_BFu0i_BFs0i_BFs0ll, "BFs0ll_BFu0i_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0i_BFs0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0i_BFs0s) C1{ FL:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0i_BFs0s");
    static BFs0ll_BFu0i_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0i_BFs0s(Test_BFs0ll_BFu0i_BFs0i_BFs0s, "BFs0ll_BFu0i_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0i_BFu0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0i_BFu0c) C1{ FL:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0i_BFu0c");
    static BFs0ll_BFu0i_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0i_BFu0c(Test_BFs0ll_BFu0i_BFs0i_BFu0c, "BFs0ll_BFu0i_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0i_BFu0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0i_BFu0i) C1{ FL:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0i_BFu0i");
    static BFs0ll_BFu0i_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0i_BFu0i(Test_BFs0ll_BFu0i_BFs0i_BFu0i, "BFs0ll_BFu0i_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0i_BFu0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0i_BFu0ll) C1{ FL:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0i_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0i_BFu0ll");
    static BFs0ll_BFu0i_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0i_BFu0ll(Test_BFs0ll_BFu0i_BFs0i_BFu0ll, "BFs0ll_BFu0i_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0i_BFu0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0i_BFu0s) C1{ FL:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0i_BFu0s");
    static BFs0ll_BFu0i_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0i_BFu0s(Test_BFs0ll_BFu0i_BFs0i_BFu0s, "BFs0ll_BFu0i_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0ll) C1{ FL:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0ll");
    static BFs0ll_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0ll(Test_BFs0ll_BFu0i_BFs0ll, "BFs0ll_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0ll_BFs0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0ll_BFs0c) C1{ FL:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0ll_BFs0c");
    static BFs0ll_BFu0i_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0ll_BFs0c(Test_BFs0ll_BFu0i_BFs0ll_BFs0c, "BFs0ll_BFu0i_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0ll_BFs0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0ll_BFs0i) C1{ FL:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0ll_BFs0i");
    static BFs0ll_BFu0i_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0ll_BFs0i(Test_BFs0ll_BFu0i_BFs0ll_BFs0i, "BFs0ll_BFu0i_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0ll_BFs0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0ll_BFs0ll) C1{ FL:0 Fi:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0i_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0ll_BFs0ll");
    static BFs0ll_BFu0i_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0ll_BFs0ll(Test_BFs0ll_BFu0i_BFs0ll_BFs0ll, "BFs0ll_BFu0i_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0ll_BFs0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0ll_BFs0s) C1{ FL:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0ll_BFs0s");
    static BFs0ll_BFu0i_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0ll_BFs0s(Test_BFs0ll_BFu0i_BFs0ll_BFs0s, "BFs0ll_BFu0i_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0ll_BFu0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0ll_BFu0c) C1{ FL:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0ll_BFu0c");
    static BFs0ll_BFu0i_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0ll_BFu0c(Test_BFs0ll_BFu0i_BFs0ll_BFu0c, "BFs0ll_BFu0i_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0ll_BFu0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0ll_BFu0i) C1{ FL:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0ll_BFu0i");
    static BFs0ll_BFu0i_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0ll_BFu0i(Test_BFs0ll_BFu0i_BFs0ll_BFu0i, "BFs0ll_BFu0i_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0ll_BFu0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0ll_BFu0ll) C1{ FL:0 Fi:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0i_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0ll_BFu0ll");
    static BFs0ll_BFu0i_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0ll_BFu0ll(Test_BFs0ll_BFu0i_BFs0ll_BFu0ll, "BFs0ll_BFu0i_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0ll_BFu0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0ll_BFu0s) C1{ FL:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0ll_BFu0s");
    static BFs0ll_BFu0i_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0ll_BFu0s(Test_BFs0ll_BFu0i_BFs0ll_BFu0s, "BFs0ll_BFu0i_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0s) C1{ FL:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0s");
    static BFs0ll_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0s(Test_BFs0ll_BFu0i_BFs0s, "BFs0ll_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0s_BFs0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0s_BFs0c) C1{ FL:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0s_BFs0c");
    static BFs0ll_BFu0i_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0s_BFs0c(Test_BFs0ll_BFu0i_BFs0s_BFs0c, "BFs0ll_BFu0i_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0s_BFs0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0s_BFs0i) C1{ FL:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0s_BFs0i");
    static BFs0ll_BFu0i_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0s_BFs0i(Test_BFs0ll_BFu0i_BFs0s_BFs0i, "BFs0ll_BFu0i_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0s_BFs0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0s_BFs0ll) C1{ FL:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0i_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0s_BFs0ll");
    static BFs0ll_BFu0i_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0s_BFs0ll(Test_BFs0ll_BFu0i_BFs0s_BFs0ll, "BFs0ll_BFu0i_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0s_BFs0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0s_BFs0s) C1{ FL:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0s_BFs0s");
    static BFs0ll_BFu0i_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0s_BFs0s(Test_BFs0ll_BFu0i_BFs0s_BFs0s, "BFs0ll_BFu0i_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0s_BFu0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0s_BFu0c) C1{ FL:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0s_BFu0c");
    static BFs0ll_BFu0i_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0s_BFu0c(Test_BFs0ll_BFu0i_BFs0s_BFu0c, "BFs0ll_BFu0i_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0s_BFu0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0s_BFu0i) C1{ FL:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0s_BFu0i");
    static BFs0ll_BFu0i_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0s_BFu0i(Test_BFs0ll_BFu0i_BFs0s_BFu0i, "BFs0ll_BFu0i_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0s_BFu0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0s_BFu0ll) C1{ FL:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0i_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0s_BFu0ll");
    static BFs0ll_BFu0i_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0s_BFu0ll(Test_BFs0ll_BFu0i_BFs0s_BFu0ll, "BFs0ll_BFu0i_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFs0s_BFu0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFs0s_BFu0s) C1{ FL:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFs0s_BFu0s");
    static BFs0ll_BFu0i_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFs0s_BFu0s(Test_BFs0ll_BFu0i_BFs0s_BFu0s, "BFs0ll_BFu0i_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0c) C1{ FL:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0c");
    static BFs0ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0c(Test_BFs0ll_BFu0i_BFu0c, "BFs0ll_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0c_BFs0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0c_BFs0c) C1{ FL:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0c_BFs0c");
    static BFs0ll_BFu0i_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0c_BFs0c(Test_BFs0ll_BFu0i_BFu0c_BFs0c, "BFs0ll_BFu0i_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0c_BFs0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0c_BFs0i) C1{ FL:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0c_BFs0i");
    static BFs0ll_BFu0i_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0c_BFs0i(Test_BFs0ll_BFu0i_BFu0c_BFs0i, "BFs0ll_BFu0i_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0c_BFs0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0c_BFs0ll) C1{ FL:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0i_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0c_BFs0ll");
    static BFs0ll_BFu0i_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0c_BFs0ll(Test_BFs0ll_BFu0i_BFu0c_BFs0ll, "BFs0ll_BFu0i_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0c_BFs0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0c_BFs0s) C1{ FL:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0c_BFs0s");
    static BFs0ll_BFu0i_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0c_BFs0s(Test_BFs0ll_BFu0i_BFu0c_BFs0s, "BFs0ll_BFu0i_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0c_BFu0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0c_BFu0c) C1{ FL:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0c_BFu0c");
    static BFs0ll_BFu0i_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0c_BFu0c(Test_BFs0ll_BFu0i_BFu0c_BFu0c, "BFs0ll_BFu0i_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0c_BFu0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0c_BFu0i) C1{ FL:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0c_BFu0i");
    static BFs0ll_BFu0i_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0c_BFu0i(Test_BFs0ll_BFu0i_BFu0c_BFu0i, "BFs0ll_BFu0i_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0c_BFu0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0c_BFu0ll) C1{ FL:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0i_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0c_BFu0ll");
    static BFs0ll_BFu0i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0c_BFu0ll(Test_BFs0ll_BFu0i_BFu0c_BFu0ll, "BFs0ll_BFu0i_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0c_BFu0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0c_BFu0s) C1{ FL:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0c_BFu0s");
    static BFs0ll_BFu0i_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0c_BFu0s(Test_BFs0ll_BFu0i_BFu0c_BFu0s, "BFs0ll_BFu0i_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0i) C1{ FL:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0i");
    static BFs0ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0i(Test_BFs0ll_BFu0i_BFu0i, "BFs0ll_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0i_BFs0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0i_BFs0c) C1{ FL:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0i_BFs0c");
    static BFs0ll_BFu0i_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0i_BFs0c(Test_BFs0ll_BFu0i_BFu0i_BFs0c, "BFs0ll_BFu0i_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0i_BFs0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0i_BFs0i) C1{ FL:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0i_BFs0i");
    static BFs0ll_BFu0i_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0i_BFs0i(Test_BFs0ll_BFu0i_BFu0i_BFs0i, "BFs0ll_BFu0i_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0i_BFs0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0i_BFs0ll) C1{ FL:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0i_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0i_BFs0ll");
    static BFs0ll_BFu0i_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0i_BFs0ll(Test_BFs0ll_BFu0i_BFu0i_BFs0ll, "BFs0ll_BFu0i_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0i_BFs0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0i_BFs0s) C1{ FL:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0i_BFs0s");
    static BFs0ll_BFu0i_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0i_BFs0s(Test_BFs0ll_BFu0i_BFu0i_BFs0s, "BFs0ll_BFu0i_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0i_BFu0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0i_BFu0c) C1{ FL:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0i_BFu0c");
    static BFs0ll_BFu0i_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0i_BFu0c(Test_BFs0ll_BFu0i_BFu0i_BFu0c, "BFs0ll_BFu0i_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0i_BFu0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0i_BFu0i) C1{ FL:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0i_BFu0i");
    static BFs0ll_BFu0i_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0i_BFu0i(Test_BFs0ll_BFu0i_BFu0i_BFu0i, "BFs0ll_BFu0i_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0i_BFu0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0i_BFu0ll) C1{ FL:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0i_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0i_BFu0ll");
    static BFs0ll_BFu0i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0i_BFu0ll(Test_BFs0ll_BFu0i_BFu0i_BFu0ll, "BFs0ll_BFu0i_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0i_BFu0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0i_BFu0s) C1{ FL:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0i_BFu0s");
    static BFs0ll_BFu0i_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0i_BFu0s(Test_BFs0ll_BFu0i_BFu0i_BFu0s, "BFs0ll_BFu0i_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0ll) C1{ FL:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0ll");
    static BFs0ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0ll(Test_BFs0ll_BFu0i_BFu0ll, "BFs0ll_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0ll_BFs0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0ll_BFs0c) C1{ FL:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0ll_BFs0c");
    static BFs0ll_BFu0i_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0ll_BFs0c(Test_BFs0ll_BFu0i_BFu0ll_BFs0c, "BFs0ll_BFu0i_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0ll_BFs0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0ll_BFs0i) C1{ FL:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0ll_BFs0i");
    static BFs0ll_BFu0i_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0ll_BFs0i(Test_BFs0ll_BFu0i_BFu0ll_BFs0i, "BFs0ll_BFu0i_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0ll_BFs0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0ll_BFs0ll) C1{ FL:0 Fi:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0i_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0ll_BFs0ll");
    static BFs0ll_BFu0i_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0ll_BFs0ll(Test_BFs0ll_BFu0i_BFu0ll_BFs0ll, "BFs0ll_BFu0i_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0ll_BFs0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0ll_BFs0s) C1{ FL:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0ll_BFs0s");
    static BFs0ll_BFu0i_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0ll_BFs0s(Test_BFs0ll_BFu0i_BFu0ll_BFs0s, "BFs0ll_BFu0i_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0ll_BFu0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0ll_BFu0c) C1{ FL:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0ll_BFu0c");
    static BFs0ll_BFu0i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0ll_BFu0c(Test_BFs0ll_BFu0i_BFu0ll_BFu0c, "BFs0ll_BFu0i_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0ll_BFu0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0ll_BFu0i) C1{ FL:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0ll_BFu0i");
    static BFs0ll_BFu0i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0ll_BFu0i(Test_BFs0ll_BFu0i_BFu0ll_BFu0i, "BFs0ll_BFu0i_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0ll_BFu0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0ll_BFu0ll) C1{ FL:0 Fi:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0ll_BFu0ll");
    static BFs0ll_BFu0i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0ll_BFu0ll(Test_BFs0ll_BFu0i_BFu0ll_BFu0ll, "BFs0ll_BFu0i_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0ll_BFu0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0ll_BFu0s) C1{ FL:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0ll_BFu0s");
    static BFs0ll_BFu0i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0ll_BFu0s(Test_BFs0ll_BFu0i_BFu0ll_BFu0s, "BFs0ll_BFu0i_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0s) C1{ FL:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0s");
    static BFs0ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0s(Test_BFs0ll_BFu0i_BFu0s, "BFs0ll_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0s_BFs0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0s_BFs0c) C1{ FL:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0s_BFs0c");
    static BFs0ll_BFu0i_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0s_BFs0c(Test_BFs0ll_BFu0i_BFu0s_BFs0c, "BFs0ll_BFu0i_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0s_BFs0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0s_BFs0i) C1{ FL:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0s_BFs0i");
    static BFs0ll_BFu0i_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0s_BFs0i(Test_BFs0ll_BFu0i_BFu0s_BFs0i, "BFs0ll_BFu0i_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0s_BFs0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0s_BFs0ll) C1{ FL:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0i_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0s_BFs0ll");
    static BFs0ll_BFu0i_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0s_BFs0ll(Test_BFs0ll_BFu0i_BFu0s_BFs0ll, "BFs0ll_BFu0i_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0s_BFs0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0s_BFs0s) C1{ FL:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0s_BFs0s");
    static BFs0ll_BFu0i_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0s_BFs0s(Test_BFs0ll_BFu0i_BFu0s_BFs0s, "BFs0ll_BFu0i_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0s_BFu0c  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0s_BFu0c) C1{ FL:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0i_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0s_BFu0c");
    static BFs0ll_BFu0i_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0s_BFu0c(Test_BFs0ll_BFu0i_BFu0s_BFu0c, "BFs0ll_BFu0i_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0s_BFu0i  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0s_BFu0i) C1{ FL:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0i_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0s_BFu0i");
    static BFs0ll_BFu0i_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0s_BFu0i(Test_BFs0ll_BFu0i_BFu0s_BFu0i, "BFs0ll_BFu0i_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0s_BFu0ll  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0s_BFu0ll) C1{ FL:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0i_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0s_BFu0ll");
    static BFs0ll_BFu0i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0s_BFu0ll(Test_BFs0ll_BFu0i_BFu0s_BFu0ll, "BFs0ll_BFu0i_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0i_BFu0s_BFu0s  {
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0i_BFu0s_BFu0s) C1{ FL:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0i_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0i_BFu0s_BFu0s");
    static BFs0ll_BFu0i_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0i_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0i_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0i_BFu0s_BFu0s(Test_BFs0ll_BFu0i_BFu0s_BFu0s, "BFs0ll_BFu0i_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0ll) C1{ FL:0 FL:0}



static void Test_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll");
    static BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll(Test_BFs0ll_BFu0ll, "BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0c) C1{ FL:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0c");
    static BFs0ll_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0c(Test_BFs0ll_BFu0ll_BFs0c, "BFs0ll_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0c_BFs0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0c_BFs0c) C1{ FL:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0c_BFs0c");
    static BFs0ll_BFu0ll_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0c_BFs0c(Test_BFs0ll_BFu0ll_BFs0c_BFs0c, "BFs0ll_BFu0ll_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0c_BFs0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0c_BFs0i) C1{ FL:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0c_BFs0i");
    static BFs0ll_BFu0ll_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0c_BFs0i(Test_BFs0ll_BFu0ll_BFs0c_BFs0i, "BFs0ll_BFu0ll_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0c_BFs0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0c_BFs0ll) C1{ FL:0 FL:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0c_BFs0ll");
    static BFs0ll_BFu0ll_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0c_BFs0ll(Test_BFs0ll_BFu0ll_BFs0c_BFs0ll, "BFs0ll_BFu0ll_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0c_BFs0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0c_BFs0s) C1{ FL:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0c_BFs0s");
    static BFs0ll_BFu0ll_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0c_BFs0s(Test_BFs0ll_BFu0ll_BFs0c_BFs0s, "BFs0ll_BFu0ll_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0c_BFu0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0c_BFu0c) C1{ FL:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0c_BFu0c");
    static BFs0ll_BFu0ll_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0c_BFu0c(Test_BFs0ll_BFu0ll_BFs0c_BFu0c, "BFs0ll_BFu0ll_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0c_BFu0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0c_BFu0i) C1{ FL:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0c_BFu0i");
    static BFs0ll_BFu0ll_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0c_BFu0i(Test_BFs0ll_BFu0ll_BFs0c_BFu0i, "BFs0ll_BFu0ll_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0c_BFu0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0c_BFu0ll) C1{ FL:0 FL:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0c_BFu0ll");
    static BFs0ll_BFu0ll_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0c_BFu0ll(Test_BFs0ll_BFu0ll_BFs0c_BFu0ll, "BFs0ll_BFu0ll_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0c_BFu0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0c_BFu0s) C1{ FL:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0c_BFu0s");
    static BFs0ll_BFu0ll_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0c_BFu0s(Test_BFs0ll_BFu0ll_BFs0c_BFu0s, "BFs0ll_BFu0ll_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0i) C1{ FL:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0i");
    static BFs0ll_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0i(Test_BFs0ll_BFu0ll_BFs0i, "BFs0ll_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0i_BFs0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0i_BFs0c) C1{ FL:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0i_BFs0c");
    static BFs0ll_BFu0ll_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0i_BFs0c(Test_BFs0ll_BFu0ll_BFs0i_BFs0c, "BFs0ll_BFu0ll_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0i_BFs0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0i_BFs0i) C1{ FL:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0i_BFs0i");
    static BFs0ll_BFu0ll_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0i_BFs0i(Test_BFs0ll_BFu0ll_BFs0i_BFs0i, "BFs0ll_BFu0ll_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0i_BFs0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0i_BFs0ll) C1{ FL:0 FL:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0i_BFs0ll");
    static BFs0ll_BFu0ll_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0i_BFs0ll(Test_BFs0ll_BFu0ll_BFs0i_BFs0ll, "BFs0ll_BFu0ll_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0i_BFs0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0i_BFs0s) C1{ FL:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0i_BFs0s");
    static BFs0ll_BFu0ll_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0i_BFs0s(Test_BFs0ll_BFu0ll_BFs0i_BFs0s, "BFs0ll_BFu0ll_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0i_BFu0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0i_BFu0c) C1{ FL:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0i_BFu0c");
    static BFs0ll_BFu0ll_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0i_BFu0c(Test_BFs0ll_BFu0ll_BFs0i_BFu0c, "BFs0ll_BFu0ll_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0i_BFu0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0i_BFu0i) C1{ FL:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0i_BFu0i");
    static BFs0ll_BFu0ll_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0i_BFu0i(Test_BFs0ll_BFu0ll_BFs0i_BFu0i, "BFs0ll_BFu0ll_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0i_BFu0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0i_BFu0ll) C1{ FL:0 FL:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0i_BFu0ll");
    static BFs0ll_BFu0ll_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0i_BFu0ll(Test_BFs0ll_BFu0ll_BFs0i_BFu0ll, "BFs0ll_BFu0ll_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0i_BFu0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0i_BFu0s) C1{ FL:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0i_BFu0s");
    static BFs0ll_BFu0ll_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0i_BFu0s(Test_BFs0ll_BFu0ll_BFs0i_BFu0s, "BFs0ll_BFu0ll_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0ll) C1{ FL:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0ll");
    static BFs0ll_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0ll(Test_BFs0ll_BFu0ll_BFs0ll, "BFs0ll_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0ll_BFs0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0ll_BFs0c) C1{ FL:0 FL:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0ll_BFs0c");
    static BFs0ll_BFu0ll_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0ll_BFs0c(Test_BFs0ll_BFu0ll_BFs0ll_BFs0c, "BFs0ll_BFu0ll_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0ll_BFs0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0ll_BFs0i) C1{ FL:0 FL:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0ll_BFs0i");
    static BFs0ll_BFu0ll_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0ll_BFs0i(Test_BFs0ll_BFu0ll_BFs0ll_BFs0i, "BFs0ll_BFu0ll_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0ll_BFs0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0ll_BFs0ll) C1{ FL:0 FL:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0ll_BFs0ll");
    static BFs0ll_BFu0ll_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0ll_BFs0ll(Test_BFs0ll_BFu0ll_BFs0ll_BFs0ll, "BFs0ll_BFu0ll_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0ll_BFs0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0ll_BFs0s) C1{ FL:0 FL:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0ll_BFs0s");
    static BFs0ll_BFu0ll_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0ll_BFs0s(Test_BFs0ll_BFu0ll_BFs0ll_BFs0s, "BFs0ll_BFu0ll_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0ll_BFu0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0ll_BFu0c) C1{ FL:0 FL:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0ll_BFu0c");
    static BFs0ll_BFu0ll_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0ll_BFu0c(Test_BFs0ll_BFu0ll_BFs0ll_BFu0c, "BFs0ll_BFu0ll_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0ll_BFu0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0ll_BFu0i) C1{ FL:0 FL:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0ll_BFu0i");
    static BFs0ll_BFu0ll_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0ll_BFu0i(Test_BFs0ll_BFu0ll_BFs0ll_BFu0i, "BFs0ll_BFu0ll_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0ll_BFu0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0ll_BFu0ll) C1{ FL:0 FL:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0ll_BFu0ll");
    static BFs0ll_BFu0ll_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0ll_BFu0ll(Test_BFs0ll_BFu0ll_BFs0ll_BFu0ll, "BFs0ll_BFu0ll_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0ll_BFu0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0ll_BFu0s) C1{ FL:0 FL:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0ll_BFu0s");
    static BFs0ll_BFu0ll_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0ll_BFu0s(Test_BFs0ll_BFu0ll_BFs0ll_BFu0s, "BFs0ll_BFu0ll_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0s) C1{ FL:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0s");
    static BFs0ll_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0s(Test_BFs0ll_BFu0ll_BFs0s, "BFs0ll_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0s_BFs0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0s_BFs0c) C1{ FL:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0s_BFs0c");
    static BFs0ll_BFu0ll_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0s_BFs0c(Test_BFs0ll_BFu0ll_BFs0s_BFs0c, "BFs0ll_BFu0ll_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0s_BFs0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0s_BFs0i) C1{ FL:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0s_BFs0i");
    static BFs0ll_BFu0ll_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0s_BFs0i(Test_BFs0ll_BFu0ll_BFs0s_BFs0i, "BFs0ll_BFu0ll_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0s_BFs0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0s_BFs0ll) C1{ FL:0 FL:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0s_BFs0ll");
    static BFs0ll_BFu0ll_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0s_BFs0ll(Test_BFs0ll_BFu0ll_BFs0s_BFs0ll, "BFs0ll_BFu0ll_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0s_BFs0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0s_BFs0s) C1{ FL:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0s_BFs0s");
    static BFs0ll_BFu0ll_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0s_BFs0s(Test_BFs0ll_BFu0ll_BFs0s_BFs0s, "BFs0ll_BFu0ll_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0s_BFu0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0s_BFu0c) C1{ FL:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0s_BFu0c");
    static BFs0ll_BFu0ll_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0s_BFu0c(Test_BFs0ll_BFu0ll_BFs0s_BFu0c, "BFs0ll_BFu0ll_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0s_BFu0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0s_BFu0i) C1{ FL:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0s_BFu0i");
    static BFs0ll_BFu0ll_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0s_BFu0i(Test_BFs0ll_BFu0ll_BFs0s_BFu0i, "BFs0ll_BFu0ll_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0s_BFu0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0s_BFu0ll) C1{ FL:0 FL:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0s_BFu0ll");
    static BFs0ll_BFu0ll_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0s_BFu0ll(Test_BFs0ll_BFu0ll_BFs0s_BFu0ll, "BFs0ll_BFu0ll_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFs0s_BFu0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFs0s_BFu0s) C1{ FL:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFs0s_BFu0s");
    static BFs0ll_BFu0ll_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFs0s_BFu0s(Test_BFs0ll_BFu0ll_BFs0s_BFu0s, "BFs0ll_BFu0ll_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0c) C1{ FL:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0c");
    static BFs0ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0c(Test_BFs0ll_BFu0ll_BFu0c, "BFs0ll_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0c_BFs0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0c_BFs0c) C1{ FL:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0c_BFs0c");
    static BFs0ll_BFu0ll_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0c_BFs0c(Test_BFs0ll_BFu0ll_BFu0c_BFs0c, "BFs0ll_BFu0ll_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0c_BFs0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0c_BFs0i) C1{ FL:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0c_BFs0i");
    static BFs0ll_BFu0ll_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0c_BFs0i(Test_BFs0ll_BFu0ll_BFu0c_BFs0i, "BFs0ll_BFu0ll_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0c_BFs0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0c_BFs0ll) C1{ FL:0 FL:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0c_BFs0ll");
    static BFs0ll_BFu0ll_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0c_BFs0ll(Test_BFs0ll_BFu0ll_BFu0c_BFs0ll, "BFs0ll_BFu0ll_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0c_BFs0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0c_BFs0s) C1{ FL:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0c_BFs0s");
    static BFs0ll_BFu0ll_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0c_BFs0s(Test_BFs0ll_BFu0ll_BFu0c_BFs0s, "BFs0ll_BFu0ll_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0c_BFu0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0c_BFu0c) C1{ FL:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0c_BFu0c");
    static BFs0ll_BFu0ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0c_BFu0c(Test_BFs0ll_BFu0ll_BFu0c_BFu0c, "BFs0ll_BFu0ll_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0c_BFu0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0c_BFu0i) C1{ FL:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0c_BFu0i");
    static BFs0ll_BFu0ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0c_BFu0i(Test_BFs0ll_BFu0ll_BFu0c_BFu0i, "BFs0ll_BFu0ll_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0c_BFu0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0c_BFu0ll) C1{ FL:0 FL:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0c_BFu0ll");
    static BFs0ll_BFu0ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0c_BFu0ll(Test_BFs0ll_BFu0ll_BFu0c_BFu0ll, "BFs0ll_BFu0ll_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0c_BFu0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0c_BFu0s) C1{ FL:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0c_BFu0s");
    static BFs0ll_BFu0ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0c_BFu0s(Test_BFs0ll_BFu0ll_BFu0c_BFu0s, "BFs0ll_BFu0ll_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0i) C1{ FL:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0i");
    static BFs0ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0i(Test_BFs0ll_BFu0ll_BFu0i, "BFs0ll_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0i_BFs0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0i_BFs0c) C1{ FL:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0i_BFs0c");
    static BFs0ll_BFu0ll_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0i_BFs0c(Test_BFs0ll_BFu0ll_BFu0i_BFs0c, "BFs0ll_BFu0ll_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0i_BFs0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0i_BFs0i) C1{ FL:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0i_BFs0i");
    static BFs0ll_BFu0ll_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0i_BFs0i(Test_BFs0ll_BFu0ll_BFu0i_BFs0i, "BFs0ll_BFu0ll_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0i_BFs0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0i_BFs0ll) C1{ FL:0 FL:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0i_BFs0ll");
    static BFs0ll_BFu0ll_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0i_BFs0ll(Test_BFs0ll_BFu0ll_BFu0i_BFs0ll, "BFs0ll_BFu0ll_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0i_BFs0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0i_BFs0s) C1{ FL:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0i_BFs0s");
    static BFs0ll_BFu0ll_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0i_BFs0s(Test_BFs0ll_BFu0ll_BFu0i_BFs0s, "BFs0ll_BFu0ll_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0i_BFu0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0i_BFu0c) C1{ FL:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0i_BFu0c");
    static BFs0ll_BFu0ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0i_BFu0c(Test_BFs0ll_BFu0ll_BFu0i_BFu0c, "BFs0ll_BFu0ll_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0i_BFu0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0i_BFu0i) C1{ FL:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0i_BFu0i");
    static BFs0ll_BFu0ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0i_BFu0i(Test_BFs0ll_BFu0ll_BFu0i_BFu0i, "BFs0ll_BFu0ll_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0i_BFu0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0i_BFu0ll) C1{ FL:0 FL:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0i_BFu0ll");
    static BFs0ll_BFu0ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0i_BFu0ll(Test_BFs0ll_BFu0ll_BFu0i_BFu0ll, "BFs0ll_BFu0ll_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0i_BFu0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0i_BFu0s) C1{ FL:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0i_BFu0s");
    static BFs0ll_BFu0ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0i_BFu0s(Test_BFs0ll_BFu0ll_BFu0i_BFu0s, "BFs0ll_BFu0ll_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0ll) C1{ FL:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0ll");
    static BFs0ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0ll(Test_BFs0ll_BFu0ll_BFu0ll, "BFs0ll_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0ll_BFs0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0ll_BFs0c) C1{ FL:0 FL:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0ll_BFs0c");
    static BFs0ll_BFu0ll_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0ll_BFs0c(Test_BFs0ll_BFu0ll_BFu0ll_BFs0c, "BFs0ll_BFu0ll_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0ll_BFs0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0ll_BFs0i) C1{ FL:0 FL:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0ll_BFs0i");
    static BFs0ll_BFu0ll_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0ll_BFs0i(Test_BFs0ll_BFu0ll_BFu0ll_BFs0i, "BFs0ll_BFu0ll_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0ll_BFs0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0ll_BFs0ll) C1{ FL:0 FL:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0ll_BFs0ll");
    static BFs0ll_BFu0ll_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0ll_BFs0ll(Test_BFs0ll_BFu0ll_BFu0ll_BFs0ll, "BFs0ll_BFu0ll_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0ll_BFs0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0ll_BFs0s) C1{ FL:0 FL:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0ll_BFs0s");
    static BFs0ll_BFu0ll_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0ll_BFs0s(Test_BFs0ll_BFu0ll_BFu0ll_BFs0s, "BFs0ll_BFu0ll_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0ll_BFu0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0ll_BFu0c) C1{ FL:0 FL:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0ll_BFu0c");
    static BFs0ll_BFu0ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0ll_BFu0c(Test_BFs0ll_BFu0ll_BFu0ll_BFu0c, "BFs0ll_BFu0ll_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0ll_BFu0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0ll_BFu0i) C1{ FL:0 FL:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0ll_BFu0i");
    static BFs0ll_BFu0ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0ll_BFu0i(Test_BFs0ll_BFu0ll_BFu0ll_BFu0i, "BFs0ll_BFu0ll_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0ll_BFu0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0ll_BFu0ll) C1{ FL:0 FL:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0ll_BFu0ll");
    static BFs0ll_BFu0ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0ll_BFu0ll(Test_BFs0ll_BFu0ll_BFu0ll_BFu0ll, "BFs0ll_BFu0ll_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0ll_BFu0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0ll_BFu0s) C1{ FL:0 FL:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0ll_BFu0s");
    static BFs0ll_BFu0ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0ll_BFu0s(Test_BFs0ll_BFu0ll_BFu0ll_BFu0s, "BFs0ll_BFu0ll_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0s) C1{ FL:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0s");
    static BFs0ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0s(Test_BFs0ll_BFu0ll_BFu0s, "BFs0ll_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0s_BFs0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0s_BFs0c) C1{ FL:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0s_BFs0c");
    static BFs0ll_BFu0ll_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0s_BFs0c(Test_BFs0ll_BFu0ll_BFu0s_BFs0c, "BFs0ll_BFu0ll_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0s_BFs0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0s_BFs0i) C1{ FL:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0s_BFs0i");
    static BFs0ll_BFu0ll_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0s_BFs0i(Test_BFs0ll_BFu0ll_BFu0s_BFs0i, "BFs0ll_BFu0ll_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0s_BFs0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0s_BFs0ll) C1{ FL:0 FL:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0s_BFs0ll");
    static BFs0ll_BFu0ll_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0s_BFs0ll(Test_BFs0ll_BFu0ll_BFu0s_BFs0ll, "BFs0ll_BFu0ll_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0s_BFs0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0s_BFs0s) C1{ FL:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0s_BFs0s");
    static BFs0ll_BFu0ll_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0s_BFs0s(Test_BFs0ll_BFu0ll_BFu0s_BFs0s, "BFs0ll_BFu0ll_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0s_BFu0c  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0s_BFu0c) C1{ FL:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0ll_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0s_BFu0c");
    static BFs0ll_BFu0ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0s_BFu0c(Test_BFs0ll_BFu0ll_BFu0s_BFu0c, "BFs0ll_BFu0ll_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0s_BFu0i  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0s_BFu0i) C1{ FL:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0ll_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0s_BFu0i");
    static BFs0ll_BFu0ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0s_BFu0i(Test_BFs0ll_BFu0ll_BFu0s_BFu0i, "BFs0ll_BFu0ll_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0s_BFu0ll  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0s_BFu0ll) C1{ FL:0 FL:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0s_BFu0ll");
    static BFs0ll_BFu0ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0s_BFu0ll(Test_BFs0ll_BFu0ll_BFu0s_BFu0ll, "BFs0ll_BFu0ll_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0ll_BFu0s_BFu0s  {
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0ll_BFu0s_BFu0s) C1{ FL:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0ll_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0ll_BFu0s_BFu0s");
    static BFs0ll_BFu0ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0ll_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0ll_BFu0s_BFu0s(Test_BFs0ll_BFu0ll_BFu0s_BFu0s, "BFs0ll_BFu0ll_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s  {
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0s) C1{ FL:0 Fs:0}



static void Test_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0s");
    static BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s(Test_BFs0ll_BFu0s, "BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0c) C1{ FL:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0c");
    static BFs0ll_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0c(Test_BFs0ll_BFu0s_BFs0c, "BFs0ll_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0c_BFs0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0c_BFs0c) C1{ FL:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0c_BFs0c");
    static BFs0ll_BFu0s_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0c_BFs0c(Test_BFs0ll_BFu0s_BFs0c_BFs0c, "BFs0ll_BFu0s_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0c_BFs0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0c_BFs0i) C1{ FL:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0c_BFs0i");
    static BFs0ll_BFu0s_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0c_BFs0i(Test_BFs0ll_BFu0s_BFs0c_BFs0i, "BFs0ll_BFu0s_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0c_BFs0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0c_BFs0ll) C1{ FL:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0s_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0c_BFs0ll");
    static BFs0ll_BFu0s_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0c_BFs0ll(Test_BFs0ll_BFu0s_BFs0c_BFs0ll, "BFs0ll_BFu0s_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0c_BFs0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0c_BFs0s) C1{ FL:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0c_BFs0s");
    static BFs0ll_BFu0s_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0c_BFs0s(Test_BFs0ll_BFu0s_BFs0c_BFs0s, "BFs0ll_BFu0s_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0c_BFu0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0c_BFu0c) C1{ FL:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0c_BFu0c");
    static BFs0ll_BFu0s_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0c_BFu0c(Test_BFs0ll_BFu0s_BFs0c_BFu0c, "BFs0ll_BFu0s_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0c_BFu0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0c_BFu0i) C1{ FL:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0c_BFu0i");
    static BFs0ll_BFu0s_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0c_BFu0i(Test_BFs0ll_BFu0s_BFs0c_BFu0i, "BFs0ll_BFu0s_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0c_BFu0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0c_BFu0ll) C1{ FL:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0s_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0c_BFu0ll");
    static BFs0ll_BFu0s_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0c_BFu0ll(Test_BFs0ll_BFu0s_BFs0c_BFu0ll, "BFs0ll_BFu0s_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0c_BFu0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0c_BFu0s) C1{ FL:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0c_BFu0s");
    static BFs0ll_BFu0s_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0c_BFu0s(Test_BFs0ll_BFu0s_BFs0c_BFu0s, "BFs0ll_BFu0s_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0i) C1{ FL:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0i");
    static BFs0ll_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0i(Test_BFs0ll_BFu0s_BFs0i, "BFs0ll_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0i_BFs0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0i_BFs0c) C1{ FL:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0i_BFs0c");
    static BFs0ll_BFu0s_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0i_BFs0c(Test_BFs0ll_BFu0s_BFs0i_BFs0c, "BFs0ll_BFu0s_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0i_BFs0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0i_BFs0i) C1{ FL:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0i_BFs0i");
    static BFs0ll_BFu0s_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0i_BFs0i(Test_BFs0ll_BFu0s_BFs0i_BFs0i, "BFs0ll_BFu0s_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0i_BFs0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0i_BFs0ll) C1{ FL:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0s_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0i_BFs0ll");
    static BFs0ll_BFu0s_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0i_BFs0ll(Test_BFs0ll_BFu0s_BFs0i_BFs0ll, "BFs0ll_BFu0s_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0i_BFs0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0i_BFs0s) C1{ FL:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0i_BFs0s");
    static BFs0ll_BFu0s_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0i_BFs0s(Test_BFs0ll_BFu0s_BFs0i_BFs0s, "BFs0ll_BFu0s_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0i_BFu0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0i_BFu0c) C1{ FL:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0i_BFu0c");
    static BFs0ll_BFu0s_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0i_BFu0c(Test_BFs0ll_BFu0s_BFs0i_BFu0c, "BFs0ll_BFu0s_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0i_BFu0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0i_BFu0i) C1{ FL:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0i_BFu0i");
    static BFs0ll_BFu0s_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0i_BFu0i(Test_BFs0ll_BFu0s_BFs0i_BFu0i, "BFs0ll_BFu0s_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0i_BFu0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0i_BFu0ll) C1{ FL:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0s_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0i_BFu0ll");
    static BFs0ll_BFu0s_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0i_BFu0ll(Test_BFs0ll_BFu0s_BFs0i_BFu0ll, "BFs0ll_BFu0s_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0i_BFu0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0i_BFu0s) C1{ FL:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0i_BFu0s");
    static BFs0ll_BFu0s_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0i_BFu0s(Test_BFs0ll_BFu0s_BFs0i_BFu0s, "BFs0ll_BFu0s_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0ll) C1{ FL:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0ll");
    static BFs0ll_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0ll(Test_BFs0ll_BFu0s_BFs0ll, "BFs0ll_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0ll_BFs0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0ll_BFs0c) C1{ FL:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0ll_BFs0c");
    static BFs0ll_BFu0s_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0ll_BFs0c(Test_BFs0ll_BFu0s_BFs0ll_BFs0c, "BFs0ll_BFu0s_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0ll_BFs0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0ll_BFs0i) C1{ FL:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0ll_BFs0i");
    static BFs0ll_BFu0s_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0ll_BFs0i(Test_BFs0ll_BFu0s_BFs0ll_BFs0i, "BFs0ll_BFu0s_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0ll_BFs0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0ll_BFs0ll) C1{ FL:0 Fs:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0s_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0ll_BFs0ll");
    static BFs0ll_BFu0s_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0ll_BFs0ll(Test_BFs0ll_BFu0s_BFs0ll_BFs0ll, "BFs0ll_BFu0s_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0ll_BFs0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0ll_BFs0s) C1{ FL:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0ll_BFs0s");
    static BFs0ll_BFu0s_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0ll_BFs0s(Test_BFs0ll_BFu0s_BFs0ll_BFs0s, "BFs0ll_BFu0s_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0ll_BFu0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0ll_BFu0c) C1{ FL:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0ll_BFu0c");
    static BFs0ll_BFu0s_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0ll_BFu0c(Test_BFs0ll_BFu0s_BFs0ll_BFu0c, "BFs0ll_BFu0s_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0ll_BFu0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0ll_BFu0i) C1{ FL:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0ll_BFu0i");
    static BFs0ll_BFu0s_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0ll_BFu0i(Test_BFs0ll_BFu0s_BFs0ll_BFu0i, "BFs0ll_BFu0s_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0ll_BFu0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0ll_BFu0ll) C1{ FL:0 Fs:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0s_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0ll_BFu0ll");
    static BFs0ll_BFu0s_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0ll_BFu0ll(Test_BFs0ll_BFu0s_BFs0ll_BFu0ll, "BFs0ll_BFu0s_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0ll_BFu0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0ll_BFu0s) C1{ FL:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0ll_BFu0s");
    static BFs0ll_BFu0s_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0ll_BFu0s(Test_BFs0ll_BFu0s_BFs0ll_BFu0s, "BFs0ll_BFu0s_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0s) C1{ FL:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0s");
    static BFs0ll_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0s(Test_BFs0ll_BFu0s_BFs0s, "BFs0ll_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0s_BFs0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0s_BFs0c) C1{ FL:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0s_BFs0c");
    static BFs0ll_BFu0s_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0s_BFs0c(Test_BFs0ll_BFu0s_BFs0s_BFs0c, "BFs0ll_BFu0s_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0s_BFs0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0s_BFs0i) C1{ FL:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0s_BFs0i");
    static BFs0ll_BFu0s_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0s_BFs0i(Test_BFs0ll_BFu0s_BFs0s_BFs0i, "BFs0ll_BFu0s_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0s_BFs0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0s_BFs0ll) C1{ FL:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0s_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0s_BFs0ll");
    static BFs0ll_BFu0s_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0s_BFs0ll(Test_BFs0ll_BFu0s_BFs0s_BFs0ll, "BFs0ll_BFu0s_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0s_BFs0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0s_BFs0s) C1{ FL:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0s_BFs0s");
    static BFs0ll_BFu0s_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0s_BFs0s(Test_BFs0ll_BFu0s_BFs0s_BFs0s, "BFs0ll_BFu0s_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0s_BFu0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0s_BFu0c) C1{ FL:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0s_BFu0c");
    static BFs0ll_BFu0s_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0s_BFu0c(Test_BFs0ll_BFu0s_BFs0s_BFu0c, "BFs0ll_BFu0s_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0s_BFu0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0s_BFu0i) C1{ FL:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0s_BFu0i");
    static BFs0ll_BFu0s_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0s_BFu0i(Test_BFs0ll_BFu0s_BFs0s_BFu0i, "BFs0ll_BFu0s_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0s_BFu0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0s_BFu0ll) C1{ FL:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0s_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0s_BFu0ll");
    static BFs0ll_BFu0s_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0s_BFu0ll(Test_BFs0ll_BFu0s_BFs0s_BFu0ll, "BFs0ll_BFu0s_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFs0s_BFu0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFs0s_BFu0s) C1{ FL:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFs0s_BFu0s");
    static BFs0ll_BFu0s_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFs0s_BFu0s(Test_BFs0ll_BFu0s_BFs0s_BFu0s, "BFs0ll_BFu0s_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0c) C1{ FL:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0c");
    static BFs0ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0c(Test_BFs0ll_BFu0s_BFu0c, "BFs0ll_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0c_BFs0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0c_BFs0c) C1{ FL:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0c_BFs0c");
    static BFs0ll_BFu0s_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0c_BFs0c(Test_BFs0ll_BFu0s_BFu0c_BFs0c, "BFs0ll_BFu0s_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0c_BFs0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0c_BFs0i) C1{ FL:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0c_BFs0i");
    static BFs0ll_BFu0s_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0c_BFs0i(Test_BFs0ll_BFu0s_BFu0c_BFs0i, "BFs0ll_BFu0s_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0c_BFs0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0c_BFs0ll) C1{ FL:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0s_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0c_BFs0ll");
    static BFs0ll_BFu0s_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0c_BFs0ll(Test_BFs0ll_BFu0s_BFu0c_BFs0ll, "BFs0ll_BFu0s_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0c_BFs0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0c_BFs0s) C1{ FL:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0c_BFs0s");
    static BFs0ll_BFu0s_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0c_BFs0s(Test_BFs0ll_BFu0s_BFu0c_BFs0s, "BFs0ll_BFu0s_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0c_BFu0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0c_BFu0c) C1{ FL:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0c_BFu0c");
    static BFs0ll_BFu0s_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0c_BFu0c(Test_BFs0ll_BFu0s_BFu0c_BFu0c, "BFs0ll_BFu0s_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0c_BFu0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0c_BFu0i) C1{ FL:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0c_BFu0i");
    static BFs0ll_BFu0s_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0c_BFu0i(Test_BFs0ll_BFu0s_BFu0c_BFu0i, "BFs0ll_BFu0s_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0c_BFu0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0c_BFu0ll) C1{ FL:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0ll_BFu0s_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0c_BFu0ll");
    static BFs0ll_BFu0s_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0c_BFu0ll(Test_BFs0ll_BFu0s_BFu0c_BFu0ll, "BFs0ll_BFu0s_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0c_BFu0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0c_BFu0s) C1{ FL:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0c_BFu0s");
    static BFs0ll_BFu0s_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0c_BFu0s(Test_BFs0ll_BFu0s_BFu0c_BFu0s, "BFs0ll_BFu0s_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0i) C1{ FL:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0i");
    static BFs0ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0i(Test_BFs0ll_BFu0s_BFu0i, "BFs0ll_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0i_BFs0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0i_BFs0c) C1{ FL:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0i_BFs0c");
    static BFs0ll_BFu0s_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0i_BFs0c(Test_BFs0ll_BFu0s_BFu0i_BFs0c, "BFs0ll_BFu0s_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0i_BFs0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0i_BFs0i) C1{ FL:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0i_BFs0i");
    static BFs0ll_BFu0s_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0i_BFs0i(Test_BFs0ll_BFu0s_BFu0i_BFs0i, "BFs0ll_BFu0s_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0i_BFs0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0i_BFs0ll) C1{ FL:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0s_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0i_BFs0ll");
    static BFs0ll_BFu0s_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0i_BFs0ll(Test_BFs0ll_BFu0s_BFu0i_BFs0ll, "BFs0ll_BFu0s_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0i_BFs0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0i_BFs0s) C1{ FL:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0i_BFs0s");
    static BFs0ll_BFu0s_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0i_BFs0s(Test_BFs0ll_BFu0s_BFu0i_BFs0s, "BFs0ll_BFu0s_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0i_BFu0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0i_BFu0c) C1{ FL:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0i_BFu0c");
    static BFs0ll_BFu0s_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0i_BFu0c(Test_BFs0ll_BFu0s_BFu0i_BFu0c, "BFs0ll_BFu0s_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0i_BFu0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0i_BFu0i) C1{ FL:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0i_BFu0i");
    static BFs0ll_BFu0s_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0i_BFu0i(Test_BFs0ll_BFu0s_BFu0i_BFu0i, "BFs0ll_BFu0s_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0i_BFu0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0i_BFu0ll) C1{ FL:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0ll_BFu0s_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0i_BFu0ll");
    static BFs0ll_BFu0s_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0i_BFu0ll(Test_BFs0ll_BFu0s_BFu0i_BFu0ll, "BFs0ll_BFu0s_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0i_BFu0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0i_BFu0s) C1{ FL:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0i_BFu0s");
    static BFs0ll_BFu0s_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0i_BFu0s(Test_BFs0ll_BFu0s_BFu0i_BFu0s, "BFs0ll_BFu0s_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0ll) C1{ FL:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0ll");
    static BFs0ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0ll(Test_BFs0ll_BFu0s_BFu0ll, "BFs0ll_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0ll_BFs0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0ll_BFs0c) C1{ FL:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0ll_BFs0c");
    static BFs0ll_BFu0s_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0ll_BFs0c(Test_BFs0ll_BFu0s_BFu0ll_BFs0c, "BFs0ll_BFu0s_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0ll_BFs0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0ll_BFs0i) C1{ FL:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0ll_BFs0i");
    static BFs0ll_BFu0s_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0ll_BFs0i(Test_BFs0ll_BFu0s_BFu0ll_BFs0i, "BFs0ll_BFu0s_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0ll_BFs0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0ll_BFs0ll) C1{ FL:0 Fs:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0s_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0ll_BFs0ll");
    static BFs0ll_BFu0s_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0ll_BFs0ll(Test_BFs0ll_BFu0s_BFu0ll_BFs0ll, "BFs0ll_BFu0s_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0ll_BFs0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0ll_BFs0s) C1{ FL:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0ll_BFs0s");
    static BFs0ll_BFu0s_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0ll_BFs0s(Test_BFs0ll_BFu0s_BFu0ll_BFs0s, "BFs0ll_BFu0s_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0ll_BFu0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0ll_BFu0c) C1{ FL:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0ll_BFu0c");
    static BFs0ll_BFu0s_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0ll_BFu0c(Test_BFs0ll_BFu0s_BFu0ll_BFu0c, "BFs0ll_BFu0s_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0ll_BFu0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0ll_BFu0i) C1{ FL:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0ll_BFu0i");
    static BFs0ll_BFu0s_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0ll_BFu0i(Test_BFs0ll_BFu0s_BFu0ll_BFu0i, "BFs0ll_BFu0s_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0ll_BFu0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0ll_BFu0ll) C1{ FL:0 Fs:0 FL:0 FL:0}



static void Test_BFs0ll_BFu0s_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0ll_BFu0ll");
    static BFs0ll_BFu0s_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0ll_BFu0ll(Test_BFs0ll_BFu0s_BFu0ll_BFu0ll, "BFs0ll_BFu0s_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0ll_BFu0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0ll_BFu0s) C1{ FL:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0ll_BFu0s");
    static BFs0ll_BFu0s_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0ll_BFu0s(Test_BFs0ll_BFu0s_BFu0ll_BFu0s, "BFs0ll_BFu0s_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0s) C1{ FL:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0s");
    static BFs0ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0s(Test_BFs0ll_BFu0s_BFu0s, "BFs0ll_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0s_BFs0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0s_BFs0c) C1{ FL:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0s_BFs0c");
    static BFs0ll_BFu0s_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0s_BFs0c(Test_BFs0ll_BFu0s_BFu0s_BFs0c, "BFs0ll_BFu0s_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0s_BFs0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0s_BFs0i) C1{ FL:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0s_BFs0i");
    static BFs0ll_BFu0s_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0s_BFs0i(Test_BFs0ll_BFu0s_BFu0s_BFs0i, "BFs0ll_BFu0s_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0s_BFs0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0s_BFs0ll) C1{ FL:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0s_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0s_BFs0ll");
    static BFs0ll_BFu0s_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0s_BFs0ll(Test_BFs0ll_BFu0s_BFu0s_BFs0ll, "BFs0ll_BFu0s_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0s_BFs0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0s_BFs0s) C1{ FL:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0s_BFs0s");
    static BFs0ll_BFu0s_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0s_BFs0s(Test_BFs0ll_BFu0s_BFu0s_BFs0s, "BFs0ll_BFu0s_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0s_BFu0c  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0s_BFu0c) C1{ FL:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0ll_BFu0s_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0s_BFu0c");
    static BFs0ll_BFu0s_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0s_BFu0c(Test_BFs0ll_BFu0s_BFu0s_BFu0c, "BFs0ll_BFu0s_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0s_BFu0i  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0s_BFu0i) C1{ FL:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0ll_BFu0s_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0s_BFu0i");
    static BFs0ll_BFu0s_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0s_BFu0i(Test_BFs0ll_BFu0s_BFu0s_BFu0i, "BFs0ll_BFu0s_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0s_BFu0ll  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0s_BFu0ll) C1{ FL:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0ll_BFu0s_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0s_BFu0ll");
    static BFs0ll_BFu0s_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0s_BFu0ll(Test_BFs0ll_BFu0s_BFu0s_BFu0ll, "BFs0ll_BFu0s_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0ll_BFu0s_BFu0s_BFu0s  {
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0ll_BFu0s_BFu0s_BFu0s) C1{ FL:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0ll_BFu0s_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0ll_BFu0s_BFu0s_BFu0s");
    static BFs0ll_BFu0s_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0ll_BFu0s_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0ll_BFu0s_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0ll_BFu0s_BFu0s_BFu0s(Test_BFs0ll_BFu0s_BFu0s_BFu0s, "BFs0ll_BFu0s_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c  {
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0c) C1{ Fs:0 Fc:0}



static void Test_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0c");
    static BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c(Test_BFs0s_BFs0c, "BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0c  {
  signed short  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0c) C1{ Fs:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0c");
    static BFs0s_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0c(Test_BFs0s_BFs0c_BFs0c, "BFs0s_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0c_BFs0c  {
  signed short  :0;
  signed char  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0c_BFs0c) C1{ Fs:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0c_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0c_BFs0c");
    static BFs0s_BFs0c_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0c_BFs0c(Test_BFs0s_BFs0c_BFs0c_BFs0c, "BFs0s_BFs0c_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0c_BFs0i  {
  signed short  :0;
  signed char  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0c_BFs0i) C1{ Fs:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0c_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0c_BFs0i");
    static BFs0s_BFs0c_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0c_BFs0i(Test_BFs0s_BFs0c_BFs0c_BFs0i, "BFs0s_BFs0c_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0c_BFs0ll  {
  signed short  :0;
  signed char  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0c_BFs0ll) C1{ Fs:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0c_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0c_BFs0ll");
    static BFs0s_BFs0c_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0c_BFs0ll(Test_BFs0s_BFs0c_BFs0c_BFs0ll, "BFs0s_BFs0c_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0c_BFs0s  {
  signed short  :0;
  signed char  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0c_BFs0s) C1{ Fs:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0c_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0c_BFs0s");
    static BFs0s_BFs0c_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0c_BFs0s(Test_BFs0s_BFs0c_BFs0c_BFs0s, "BFs0s_BFs0c_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0c_BFu0c  {
  signed short  :0;
  signed char  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0c_BFu0c) C1{ Fs:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0c_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0c_BFu0c");
    static BFs0s_BFs0c_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0c_BFu0c(Test_BFs0s_BFs0c_BFs0c_BFu0c, "BFs0s_BFs0c_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0c_BFu0i  {
  signed short  :0;
  signed char  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0c_BFu0i) C1{ Fs:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0c_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0c_BFu0i");
    static BFs0s_BFs0c_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0c_BFu0i(Test_BFs0s_BFs0c_BFs0c_BFu0i, "BFs0s_BFs0c_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0c_BFu0ll  {
  signed short  :0;
  signed char  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0c_BFu0ll) C1{ Fs:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0c_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0c_BFu0ll");
    static BFs0s_BFs0c_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0c_BFu0ll(Test_BFs0s_BFs0c_BFs0c_BFu0ll, "BFs0s_BFs0c_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0c_BFu0s  {
  signed short  :0;
  signed char  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0c_BFu0s) C1{ Fs:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0c_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0c_BFu0s");
    static BFs0s_BFs0c_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0c_BFu0s(Test_BFs0s_BFs0c_BFs0c_BFu0s, "BFs0s_BFs0c_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0i  {
  signed short  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0i) C1{ Fs:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0i");
    static BFs0s_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0i(Test_BFs0s_BFs0c_BFs0i, "BFs0s_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0i_BFs0c  {
  signed short  :0;
  signed char  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0i_BFs0c) C1{ Fs:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0c_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0i_BFs0c");
    static BFs0s_BFs0c_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0i_BFs0c(Test_BFs0s_BFs0c_BFs0i_BFs0c, "BFs0s_BFs0c_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0i_BFs0i  {
  signed short  :0;
  signed char  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0i_BFs0i) C1{ Fs:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0c_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0i_BFs0i");
    static BFs0s_BFs0c_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0i_BFs0i(Test_BFs0s_BFs0c_BFs0i_BFs0i, "BFs0s_BFs0c_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0i_BFs0ll  {
  signed short  :0;
  signed char  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0i_BFs0ll) C1{ Fs:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0c_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0i_BFs0ll");
    static BFs0s_BFs0c_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0i_BFs0ll(Test_BFs0s_BFs0c_BFs0i_BFs0ll, "BFs0s_BFs0c_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0i_BFs0s  {
  signed short  :0;
  signed char  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0i_BFs0s) C1{ Fs:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0c_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0i_BFs0s");
    static BFs0s_BFs0c_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0i_BFs0s(Test_BFs0s_BFs0c_BFs0i_BFs0s, "BFs0s_BFs0c_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0i_BFu0c  {
  signed short  :0;
  signed char  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0i_BFu0c) C1{ Fs:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0c_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0i_BFu0c");
    static BFs0s_BFs0c_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0i_BFu0c(Test_BFs0s_BFs0c_BFs0i_BFu0c, "BFs0s_BFs0c_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0i_BFu0i  {
  signed short  :0;
  signed char  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0i_BFu0i) C1{ Fs:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0c_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0i_BFu0i");
    static BFs0s_BFs0c_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0i_BFu0i(Test_BFs0s_BFs0c_BFs0i_BFu0i, "BFs0s_BFs0c_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0i_BFu0ll  {
  signed short  :0;
  signed char  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0i_BFu0ll) C1{ Fs:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0c_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0i_BFu0ll");
    static BFs0s_BFs0c_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0i_BFu0ll(Test_BFs0s_BFs0c_BFs0i_BFu0ll, "BFs0s_BFs0c_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0i_BFu0s  {
  signed short  :0;
  signed char  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0i_BFu0s) C1{ Fs:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0c_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0i_BFu0s");
    static BFs0s_BFs0c_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0i_BFu0s(Test_BFs0s_BFs0c_BFs0i_BFu0s, "BFs0s_BFs0c_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0ll  {
  signed short  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0ll) C1{ Fs:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0ll");
    static BFs0s_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0ll(Test_BFs0s_BFs0c_BFs0ll, "BFs0s_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0ll_BFs0c  {
  signed short  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0ll_BFs0c) C1{ Fs:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0c_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0ll_BFs0c");
    static BFs0s_BFs0c_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0ll_BFs0c(Test_BFs0s_BFs0c_BFs0ll_BFs0c, "BFs0s_BFs0c_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0ll_BFs0i  {
  signed short  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0ll_BFs0i) C1{ Fs:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0c_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0ll_BFs0i");
    static BFs0s_BFs0c_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0ll_BFs0i(Test_BFs0s_BFs0c_BFs0ll_BFs0i, "BFs0s_BFs0c_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0ll_BFs0ll  {
  signed short  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0ll_BFs0ll) C1{ Fs:0 Fc:0 FL:0 FL:0}



static void Test_BFs0s_BFs0c_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0ll_BFs0ll");
    static BFs0s_BFs0c_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0ll_BFs0ll(Test_BFs0s_BFs0c_BFs0ll_BFs0ll, "BFs0s_BFs0c_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0ll_BFs0s  {
  signed short  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0ll_BFs0s) C1{ Fs:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0c_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0ll_BFs0s");
    static BFs0s_BFs0c_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0ll_BFs0s(Test_BFs0s_BFs0c_BFs0ll_BFs0s, "BFs0s_BFs0c_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0ll_BFu0c  {
  signed short  :0;
  signed char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0ll_BFu0c) C1{ Fs:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0c_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0ll_BFu0c");
    static BFs0s_BFs0c_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0ll_BFu0c(Test_BFs0s_BFs0c_BFs0ll_BFu0c, "BFs0s_BFs0c_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0ll_BFu0i  {
  signed short  :0;
  signed char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0ll_BFu0i) C1{ Fs:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0c_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0ll_BFu0i");
    static BFs0s_BFs0c_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0ll_BFu0i(Test_BFs0s_BFs0c_BFs0ll_BFu0i, "BFs0s_BFs0c_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0ll_BFu0ll  {
  signed short  :0;
  signed char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0ll_BFu0ll) C1{ Fs:0 Fc:0 FL:0 FL:0}



static void Test_BFs0s_BFs0c_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0ll_BFu0ll");
    static BFs0s_BFs0c_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0ll_BFu0ll(Test_BFs0s_BFs0c_BFs0ll_BFu0ll, "BFs0s_BFs0c_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0ll_BFu0s  {
  signed short  :0;
  signed char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0ll_BFu0s) C1{ Fs:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0c_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0ll_BFu0s");
    static BFs0s_BFs0c_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0ll_BFu0s(Test_BFs0s_BFs0c_BFs0ll_BFu0s, "BFs0s_BFs0c_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0s  {
  signed short  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0s) C1{ Fs:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0s");
    static BFs0s_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0s(Test_BFs0s_BFs0c_BFs0s, "BFs0s_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0s_BFs0c  {
  signed short  :0;
  signed char  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0s_BFs0c) C1{ Fs:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0c_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0s_BFs0c");
    static BFs0s_BFs0c_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0s_BFs0c(Test_BFs0s_BFs0c_BFs0s_BFs0c, "BFs0s_BFs0c_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0s_BFs0i  {
  signed short  :0;
  signed char  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0s_BFs0i) C1{ Fs:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0c_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0s_BFs0i");
    static BFs0s_BFs0c_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0s_BFs0i(Test_BFs0s_BFs0c_BFs0s_BFs0i, "BFs0s_BFs0c_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0s_BFs0ll  {
  signed short  :0;
  signed char  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0s_BFs0ll) C1{ Fs:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0c_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0s_BFs0ll");
    static BFs0s_BFs0c_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0s_BFs0ll(Test_BFs0s_BFs0c_BFs0s_BFs0ll, "BFs0s_BFs0c_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0s_BFs0s  {
  signed short  :0;
  signed char  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0s_BFs0s) C1{ Fs:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0c_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0s_BFs0s");
    static BFs0s_BFs0c_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0s_BFs0s(Test_BFs0s_BFs0c_BFs0s_BFs0s, "BFs0s_BFs0c_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0s_BFu0c  {
  signed short  :0;
  signed char  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0s_BFu0c) C1{ Fs:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0c_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0s_BFu0c");
    static BFs0s_BFs0c_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0s_BFu0c(Test_BFs0s_BFs0c_BFs0s_BFu0c, "BFs0s_BFs0c_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0s_BFu0i  {
  signed short  :0;
  signed char  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0s_BFu0i) C1{ Fs:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0c_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0s_BFu0i");
    static BFs0s_BFs0c_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0s_BFu0i(Test_BFs0s_BFs0c_BFs0s_BFu0i, "BFs0s_BFs0c_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0s_BFu0ll  {
  signed short  :0;
  signed char  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0s_BFu0ll) C1{ Fs:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0c_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0s_BFu0ll");
    static BFs0s_BFs0c_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0s_BFu0ll(Test_BFs0s_BFs0c_BFs0s_BFu0ll, "BFs0s_BFs0c_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFs0s_BFu0s  {
  signed short  :0;
  signed char  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0c_BFs0s_BFu0s) C1{ Fs:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0c_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFs0s_BFu0s");
    static BFs0s_BFs0c_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFs0s_BFu0s(Test_BFs0s_BFs0c_BFs0s_BFu0s, "BFs0s_BFs0c_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0c  {
  signed short  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0c) C1{ Fs:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0c");
    static BFs0s_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0c(Test_BFs0s_BFs0c_BFu0c, "BFs0s_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0c_BFs0c  {
  signed short  :0;
  signed char  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0c_BFs0c) C1{ Fs:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0c_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0c_BFs0c");
    static BFs0s_BFs0c_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0c_BFs0c(Test_BFs0s_BFs0c_BFu0c_BFs0c, "BFs0s_BFs0c_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0c_BFs0i  {
  signed short  :0;
  signed char  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0c_BFs0i) C1{ Fs:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0c_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0c_BFs0i");
    static BFs0s_BFs0c_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0c_BFs0i(Test_BFs0s_BFs0c_BFu0c_BFs0i, "BFs0s_BFs0c_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0c_BFs0ll  {
  signed short  :0;
  signed char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0c_BFs0ll) C1{ Fs:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0c_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0c_BFs0ll");
    static BFs0s_BFs0c_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0c_BFs0ll(Test_BFs0s_BFs0c_BFu0c_BFs0ll, "BFs0s_BFs0c_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0c_BFs0s  {
  signed short  :0;
  signed char  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0c_BFs0s) C1{ Fs:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0c_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0c_BFs0s");
    static BFs0s_BFs0c_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0c_BFs0s(Test_BFs0s_BFs0c_BFu0c_BFs0s, "BFs0s_BFs0c_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0c_BFu0c  {
  signed short  :0;
  signed char  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0c_BFu0c) C1{ Fs:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0c_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0c_BFu0c");
    static BFs0s_BFs0c_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0c_BFu0c(Test_BFs0s_BFs0c_BFu0c_BFu0c, "BFs0s_BFs0c_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0c_BFu0i  {
  signed short  :0;
  signed char  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0c_BFu0i) C1{ Fs:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0c_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0c_BFu0i");
    static BFs0s_BFs0c_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0c_BFu0i(Test_BFs0s_BFs0c_BFu0c_BFu0i, "BFs0s_BFs0c_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0c_BFu0ll  {
  signed short  :0;
  signed char  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0c_BFu0ll) C1{ Fs:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0c_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0c_BFu0ll");
    static BFs0s_BFs0c_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0c_BFu0ll(Test_BFs0s_BFs0c_BFu0c_BFu0ll, "BFs0s_BFs0c_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0c_BFu0s  {
  signed short  :0;
  signed char  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0c_BFu0s) C1{ Fs:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0c_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0c_BFu0s");
    static BFs0s_BFs0c_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0c_BFu0s(Test_BFs0s_BFs0c_BFu0c_BFu0s, "BFs0s_BFs0c_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0i  {
  signed short  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0i) C1{ Fs:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0i");
    static BFs0s_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0i(Test_BFs0s_BFs0c_BFu0i, "BFs0s_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0i_BFs0c  {
  signed short  :0;
  signed char  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0i_BFs0c) C1{ Fs:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0c_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0i_BFs0c");
    static BFs0s_BFs0c_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0i_BFs0c(Test_BFs0s_BFs0c_BFu0i_BFs0c, "BFs0s_BFs0c_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0i_BFs0i  {
  signed short  :0;
  signed char  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0i_BFs0i) C1{ Fs:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0c_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0i_BFs0i");
    static BFs0s_BFs0c_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0i_BFs0i(Test_BFs0s_BFs0c_BFu0i_BFs0i, "BFs0s_BFs0c_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0i_BFs0ll  {
  signed short  :0;
  signed char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0i_BFs0ll) C1{ Fs:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0c_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0i_BFs0ll");
    static BFs0s_BFs0c_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0i_BFs0ll(Test_BFs0s_BFs0c_BFu0i_BFs0ll, "BFs0s_BFs0c_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0i_BFs0s  {
  signed short  :0;
  signed char  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0i_BFs0s) C1{ Fs:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0c_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0i_BFs0s");
    static BFs0s_BFs0c_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0i_BFs0s(Test_BFs0s_BFs0c_BFu0i_BFs0s, "BFs0s_BFs0c_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0i_BFu0c  {
  signed short  :0;
  signed char  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0i_BFu0c) C1{ Fs:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0c_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0i_BFu0c");
    static BFs0s_BFs0c_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0i_BFu0c(Test_BFs0s_BFs0c_BFu0i_BFu0c, "BFs0s_BFs0c_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0i_BFu0i  {
  signed short  :0;
  signed char  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0i_BFu0i) C1{ Fs:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0c_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0i_BFu0i");
    static BFs0s_BFs0c_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0i_BFu0i(Test_BFs0s_BFs0c_BFu0i_BFu0i, "BFs0s_BFs0c_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0i_BFu0ll  {
  signed short  :0;
  signed char  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0i_BFu0ll) C1{ Fs:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0c_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0i_BFu0ll");
    static BFs0s_BFs0c_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0i_BFu0ll(Test_BFs0s_BFs0c_BFu0i_BFu0ll, "BFs0s_BFs0c_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0i_BFu0s  {
  signed short  :0;
  signed char  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0i_BFu0s) C1{ Fs:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0c_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0i_BFu0s");
    static BFs0s_BFs0c_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0i_BFu0s(Test_BFs0s_BFs0c_BFu0i_BFu0s, "BFs0s_BFs0c_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0ll  {
  signed short  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0ll) C1{ Fs:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0ll");
    static BFs0s_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0ll(Test_BFs0s_BFs0c_BFu0ll, "BFs0s_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0ll_BFs0c  {
  signed short  :0;
  signed char  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0ll_BFs0c) C1{ Fs:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0c_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0ll_BFs0c");
    static BFs0s_BFs0c_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0ll_BFs0c(Test_BFs0s_BFs0c_BFu0ll_BFs0c, "BFs0s_BFs0c_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0ll_BFs0i  {
  signed short  :0;
  signed char  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0ll_BFs0i) C1{ Fs:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0c_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0ll_BFs0i");
    static BFs0s_BFs0c_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0ll_BFs0i(Test_BFs0s_BFs0c_BFu0ll_BFs0i, "BFs0s_BFs0c_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0ll_BFs0ll  {
  signed short  :0;
  signed char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0ll_BFs0ll) C1{ Fs:0 Fc:0 FL:0 FL:0}



static void Test_BFs0s_BFs0c_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0ll_BFs0ll");
    static BFs0s_BFs0c_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0ll_BFs0ll(Test_BFs0s_BFs0c_BFu0ll_BFs0ll, "BFs0s_BFs0c_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0ll_BFs0s  {
  signed short  :0;
  signed char  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0ll_BFs0s) C1{ Fs:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0c_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0ll_BFs0s");
    static BFs0s_BFs0c_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0ll_BFs0s(Test_BFs0s_BFs0c_BFu0ll_BFs0s, "BFs0s_BFs0c_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0ll_BFu0c  {
  signed short  :0;
  signed char  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0ll_BFu0c) C1{ Fs:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0c_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0ll_BFu0c");
    static BFs0s_BFs0c_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0ll_BFu0c(Test_BFs0s_BFs0c_BFu0ll_BFu0c, "BFs0s_BFs0c_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0ll_BFu0i  {
  signed short  :0;
  signed char  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0ll_BFu0i) C1{ Fs:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0c_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0ll_BFu0i");
    static BFs0s_BFs0c_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0ll_BFu0i(Test_BFs0s_BFs0c_BFu0ll_BFu0i, "BFs0s_BFs0c_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0ll_BFu0ll  {
  signed short  :0;
  signed char  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0ll_BFu0ll) C1{ Fs:0 Fc:0 FL:0 FL:0}



static void Test_BFs0s_BFs0c_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0ll_BFu0ll");
    static BFs0s_BFs0c_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0ll_BFu0ll(Test_BFs0s_BFs0c_BFu0ll_BFu0ll, "BFs0s_BFs0c_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0ll_BFu0s  {
  signed short  :0;
  signed char  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0ll_BFu0s) C1{ Fs:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0c_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0ll_BFu0s");
    static BFs0s_BFs0c_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0ll_BFu0s(Test_BFs0s_BFs0c_BFu0ll_BFu0s, "BFs0s_BFs0c_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0s  {
  signed short  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0s) C1{ Fs:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0s");
    static BFs0s_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0s(Test_BFs0s_BFs0c_BFu0s, "BFs0s_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0s_BFs0c  {
  signed short  :0;
  signed char  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0s_BFs0c) C1{ Fs:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0c_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0s_BFs0c");
    static BFs0s_BFs0c_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0s_BFs0c(Test_BFs0s_BFs0c_BFu0s_BFs0c, "BFs0s_BFs0c_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0s_BFs0i  {
  signed short  :0;
  signed char  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0s_BFs0i) C1{ Fs:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0c_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0s_BFs0i");
    static BFs0s_BFs0c_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0s_BFs0i(Test_BFs0s_BFs0c_BFu0s_BFs0i, "BFs0s_BFs0c_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0s_BFs0ll  {
  signed short  :0;
  signed char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0s_BFs0ll) C1{ Fs:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0c_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0s_BFs0ll");
    static BFs0s_BFs0c_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0s_BFs0ll(Test_BFs0s_BFs0c_BFu0s_BFs0ll, "BFs0s_BFs0c_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0s_BFs0s  {
  signed short  :0;
  signed char  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0s_BFs0s) C1{ Fs:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0c_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0s_BFs0s");
    static BFs0s_BFs0c_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0s_BFs0s(Test_BFs0s_BFs0c_BFu0s_BFs0s, "BFs0s_BFs0c_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0s_BFu0c  {
  signed short  :0;
  signed char  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0s_BFu0c) C1{ Fs:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0c_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0s_BFu0c");
    static BFs0s_BFs0c_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0s_BFu0c(Test_BFs0s_BFs0c_BFu0s_BFu0c, "BFs0s_BFs0c_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0s_BFu0i  {
  signed short  :0;
  signed char  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0s_BFu0i) C1{ Fs:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0c_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0s_BFu0i");
    static BFs0s_BFs0c_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0s_BFu0i(Test_BFs0s_BFs0c_BFu0s_BFu0i, "BFs0s_BFs0c_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0s_BFu0ll  {
  signed short  :0;
  signed char  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0s_BFu0ll) C1{ Fs:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0c_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0s_BFu0ll");
    static BFs0s_BFs0c_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0s_BFu0ll(Test_BFs0s_BFs0c_BFu0s_BFu0ll, "BFs0s_BFs0c_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0c_BFu0s_BFu0s  {
  signed short  :0;
  signed char  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0c_BFu0s_BFu0s) C1{ Fs:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0c_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0c_BFu0s_BFu0s");
    static BFs0s_BFs0c_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0c_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0c_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0c_BFu0s_BFu0s(Test_BFs0s_BFs0c_BFu0s_BFu0s, "BFs0s_BFs0c_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i  {
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0i) C1{ Fs:0 Fi:0}



static void Test_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0i");
    static BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i(Test_BFs0s_BFs0i, "BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0c  {
  signed short  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0c) C1{ Fs:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0c");
    static BFs0s_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0c(Test_BFs0s_BFs0i_BFs0c, "BFs0s_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0c_BFs0c  {
  signed short  :0;
  signed int  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0c_BFs0c) C1{ Fs:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0i_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0c_BFs0c");
    static BFs0s_BFs0i_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0c_BFs0c(Test_BFs0s_BFs0i_BFs0c_BFs0c, "BFs0s_BFs0i_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0c_BFs0i  {
  signed short  :0;
  signed int  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0c_BFs0i) C1{ Fs:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0i_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0c_BFs0i");
    static BFs0s_BFs0i_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0c_BFs0i(Test_BFs0s_BFs0i_BFs0c_BFs0i, "BFs0s_BFs0i_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0c_BFs0ll  {
  signed short  :0;
  signed int  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0c_BFs0ll) C1{ Fs:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0i_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0c_BFs0ll");
    static BFs0s_BFs0i_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0c_BFs0ll(Test_BFs0s_BFs0i_BFs0c_BFs0ll, "BFs0s_BFs0i_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0c_BFs0s  {
  signed short  :0;
  signed int  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0c_BFs0s) C1{ Fs:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0i_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0c_BFs0s");
    static BFs0s_BFs0i_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0c_BFs0s(Test_BFs0s_BFs0i_BFs0c_BFs0s, "BFs0s_BFs0i_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0c_BFu0c  {
  signed short  :0;
  signed int  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0c_BFu0c) C1{ Fs:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0i_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0c_BFu0c");
    static BFs0s_BFs0i_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0c_BFu0c(Test_BFs0s_BFs0i_BFs0c_BFu0c, "BFs0s_BFs0i_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0c_BFu0i  {
  signed short  :0;
  signed int  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0c_BFu0i) C1{ Fs:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0i_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0c_BFu0i");
    static BFs0s_BFs0i_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0c_BFu0i(Test_BFs0s_BFs0i_BFs0c_BFu0i, "BFs0s_BFs0i_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0c_BFu0ll  {
  signed short  :0;
  signed int  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0c_BFu0ll) C1{ Fs:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0i_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0c_BFu0ll");
    static BFs0s_BFs0i_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0c_BFu0ll(Test_BFs0s_BFs0i_BFs0c_BFu0ll, "BFs0s_BFs0i_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0c_BFu0s  {
  signed short  :0;
  signed int  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0c_BFu0s) C1{ Fs:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0i_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0c_BFu0s");
    static BFs0s_BFs0i_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0c_BFu0s(Test_BFs0s_BFs0i_BFs0c_BFu0s, "BFs0s_BFs0i_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0i  {
  signed short  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0i) C1{ Fs:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0i");
    static BFs0s_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0i(Test_BFs0s_BFs0i_BFs0i, "BFs0s_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0i_BFs0c  {
  signed short  :0;
  signed int  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0i_BFs0c) C1{ Fs:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0i_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0i_BFs0c");
    static BFs0s_BFs0i_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0i_BFs0c(Test_BFs0s_BFs0i_BFs0i_BFs0c, "BFs0s_BFs0i_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0i_BFs0i  {
  signed short  :0;
  signed int  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0i_BFs0i) C1{ Fs:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0i_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0i_BFs0i");
    static BFs0s_BFs0i_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0i_BFs0i(Test_BFs0s_BFs0i_BFs0i_BFs0i, "BFs0s_BFs0i_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0i_BFs0ll  {
  signed short  :0;
  signed int  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0i_BFs0ll) C1{ Fs:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0i_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0i_BFs0ll");
    static BFs0s_BFs0i_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0i_BFs0ll(Test_BFs0s_BFs0i_BFs0i_BFs0ll, "BFs0s_BFs0i_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0i_BFs0s  {
  signed short  :0;
  signed int  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0i_BFs0s) C1{ Fs:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0i_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0i_BFs0s");
    static BFs0s_BFs0i_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0i_BFs0s(Test_BFs0s_BFs0i_BFs0i_BFs0s, "BFs0s_BFs0i_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0i_BFu0c  {
  signed short  :0;
  signed int  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0i_BFu0c) C1{ Fs:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0i_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0i_BFu0c");
    static BFs0s_BFs0i_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0i_BFu0c(Test_BFs0s_BFs0i_BFs0i_BFu0c, "BFs0s_BFs0i_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0i_BFu0i  {
  signed short  :0;
  signed int  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0i_BFu0i) C1{ Fs:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0i_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0i_BFu0i");
    static BFs0s_BFs0i_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0i_BFu0i(Test_BFs0s_BFs0i_BFs0i_BFu0i, "BFs0s_BFs0i_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0i_BFu0ll  {
  signed short  :0;
  signed int  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0i_BFu0ll) C1{ Fs:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0i_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0i_BFu0ll");
    static BFs0s_BFs0i_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0i_BFu0ll(Test_BFs0s_BFs0i_BFs0i_BFu0ll, "BFs0s_BFs0i_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0i_BFu0s  {
  signed short  :0;
  signed int  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0i_BFu0s) C1{ Fs:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0i_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0i_BFu0s");
    static BFs0s_BFs0i_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0i_BFu0s(Test_BFs0s_BFs0i_BFs0i_BFu0s, "BFs0s_BFs0i_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0ll  {
  signed short  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0ll) C1{ Fs:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0ll");
    static BFs0s_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0ll(Test_BFs0s_BFs0i_BFs0ll, "BFs0s_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0ll_BFs0c  {
  signed short  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0ll_BFs0c) C1{ Fs:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0i_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0ll_BFs0c");
    static BFs0s_BFs0i_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0ll_BFs0c(Test_BFs0s_BFs0i_BFs0ll_BFs0c, "BFs0s_BFs0i_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0ll_BFs0i  {
  signed short  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0ll_BFs0i) C1{ Fs:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0i_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0ll_BFs0i");
    static BFs0s_BFs0i_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0ll_BFs0i(Test_BFs0s_BFs0i_BFs0ll_BFs0i, "BFs0s_BFs0i_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0ll_BFs0ll  {
  signed short  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0ll_BFs0ll) C1{ Fs:0 Fi:0 FL:0 FL:0}



static void Test_BFs0s_BFs0i_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0ll_BFs0ll");
    static BFs0s_BFs0i_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0ll_BFs0ll(Test_BFs0s_BFs0i_BFs0ll_BFs0ll, "BFs0s_BFs0i_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0ll_BFs0s  {
  signed short  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0ll_BFs0s) C1{ Fs:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0i_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0ll_BFs0s");
    static BFs0s_BFs0i_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0ll_BFs0s(Test_BFs0s_BFs0i_BFs0ll_BFs0s, "BFs0s_BFs0i_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0ll_BFu0c  {
  signed short  :0;
  signed int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0ll_BFu0c) C1{ Fs:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0i_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0ll_BFu0c");
    static BFs0s_BFs0i_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0ll_BFu0c(Test_BFs0s_BFs0i_BFs0ll_BFu0c, "BFs0s_BFs0i_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0ll_BFu0i  {
  signed short  :0;
  signed int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0ll_BFu0i) C1{ Fs:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0i_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0ll_BFu0i");
    static BFs0s_BFs0i_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0ll_BFu0i(Test_BFs0s_BFs0i_BFs0ll_BFu0i, "BFs0s_BFs0i_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0ll_BFu0ll  {
  signed short  :0;
  signed int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0ll_BFu0ll) C1{ Fs:0 Fi:0 FL:0 FL:0}



static void Test_BFs0s_BFs0i_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0ll_BFu0ll");
    static BFs0s_BFs0i_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0ll_BFu0ll(Test_BFs0s_BFs0i_BFs0ll_BFu0ll, "BFs0s_BFs0i_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0ll_BFu0s  {
  signed short  :0;
  signed int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0ll_BFu0s) C1{ Fs:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0i_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0ll_BFu0s");
    static BFs0s_BFs0i_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0ll_BFu0s(Test_BFs0s_BFs0i_BFs0ll_BFu0s, "BFs0s_BFs0i_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0s  {
  signed short  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0s) C1{ Fs:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0s");
    static BFs0s_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0s(Test_BFs0s_BFs0i_BFs0s, "BFs0s_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0s_BFs0c  {
  signed short  :0;
  signed int  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0s_BFs0c) C1{ Fs:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0i_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0s_BFs0c");
    static BFs0s_BFs0i_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0s_BFs0c(Test_BFs0s_BFs0i_BFs0s_BFs0c, "BFs0s_BFs0i_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0s_BFs0i  {
  signed short  :0;
  signed int  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0s_BFs0i) C1{ Fs:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0i_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0s_BFs0i");
    static BFs0s_BFs0i_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0s_BFs0i(Test_BFs0s_BFs0i_BFs0s_BFs0i, "BFs0s_BFs0i_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0s_BFs0ll  {
  signed short  :0;
  signed int  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0s_BFs0ll) C1{ Fs:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0i_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0s_BFs0ll");
    static BFs0s_BFs0i_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0s_BFs0ll(Test_BFs0s_BFs0i_BFs0s_BFs0ll, "BFs0s_BFs0i_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0s_BFs0s  {
  signed short  :0;
  signed int  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0s_BFs0s) C1{ Fs:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0i_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0s_BFs0s");
    static BFs0s_BFs0i_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0s_BFs0s(Test_BFs0s_BFs0i_BFs0s_BFs0s, "BFs0s_BFs0i_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0s_BFu0c  {
  signed short  :0;
  signed int  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0s_BFu0c) C1{ Fs:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0i_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0s_BFu0c");
    static BFs0s_BFs0i_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0s_BFu0c(Test_BFs0s_BFs0i_BFs0s_BFu0c, "BFs0s_BFs0i_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0s_BFu0i  {
  signed short  :0;
  signed int  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0s_BFu0i) C1{ Fs:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0i_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0s_BFu0i");
    static BFs0s_BFs0i_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0s_BFu0i(Test_BFs0s_BFs0i_BFs0s_BFu0i, "BFs0s_BFs0i_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0s_BFu0ll  {
  signed short  :0;
  signed int  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0s_BFu0ll) C1{ Fs:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0i_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0s_BFu0ll");
    static BFs0s_BFs0i_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0s_BFu0ll(Test_BFs0s_BFs0i_BFs0s_BFu0ll, "BFs0s_BFs0i_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFs0s_BFu0s  {
  signed short  :0;
  signed int  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0i_BFs0s_BFu0s) C1{ Fs:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0i_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFs0s_BFu0s");
    static BFs0s_BFs0i_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFs0s_BFu0s(Test_BFs0s_BFs0i_BFs0s_BFu0s, "BFs0s_BFs0i_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0c  {
  signed short  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0c) C1{ Fs:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0c");
    static BFs0s_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0c(Test_BFs0s_BFs0i_BFu0c, "BFs0s_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0c_BFs0c  {
  signed short  :0;
  signed int  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0c_BFs0c) C1{ Fs:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0i_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0c_BFs0c");
    static BFs0s_BFs0i_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0c_BFs0c(Test_BFs0s_BFs0i_BFu0c_BFs0c, "BFs0s_BFs0i_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0c_BFs0i  {
  signed short  :0;
  signed int  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0c_BFs0i) C1{ Fs:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0i_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0c_BFs0i");
    static BFs0s_BFs0i_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0c_BFs0i(Test_BFs0s_BFs0i_BFu0c_BFs0i, "BFs0s_BFs0i_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0c_BFs0ll  {
  signed short  :0;
  signed int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0c_BFs0ll) C1{ Fs:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0i_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0c_BFs0ll");
    static BFs0s_BFs0i_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0c_BFs0ll(Test_BFs0s_BFs0i_BFu0c_BFs0ll, "BFs0s_BFs0i_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0c_BFs0s  {
  signed short  :0;
  signed int  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0c_BFs0s) C1{ Fs:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0i_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0c_BFs0s");
    static BFs0s_BFs0i_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0c_BFs0s(Test_BFs0s_BFs0i_BFu0c_BFs0s, "BFs0s_BFs0i_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0c_BFu0c  {
  signed short  :0;
  signed int  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0c_BFu0c) C1{ Fs:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0i_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0c_BFu0c");
    static BFs0s_BFs0i_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0c_BFu0c(Test_BFs0s_BFs0i_BFu0c_BFu0c, "BFs0s_BFs0i_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0c_BFu0i  {
  signed short  :0;
  signed int  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0c_BFu0i) C1{ Fs:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0i_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0c_BFu0i");
    static BFs0s_BFs0i_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0c_BFu0i(Test_BFs0s_BFs0i_BFu0c_BFu0i, "BFs0s_BFs0i_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0c_BFu0ll  {
  signed short  :0;
  signed int  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0c_BFu0ll) C1{ Fs:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0i_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0c_BFu0ll");
    static BFs0s_BFs0i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0c_BFu0ll(Test_BFs0s_BFs0i_BFu0c_BFu0ll, "BFs0s_BFs0i_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0c_BFu0s  {
  signed short  :0;
  signed int  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0c_BFu0s) C1{ Fs:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0i_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0c_BFu0s");
    static BFs0s_BFs0i_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0c_BFu0s(Test_BFs0s_BFs0i_BFu0c_BFu0s, "BFs0s_BFs0i_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0i  {
  signed short  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0i) C1{ Fs:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0i");
    static BFs0s_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0i(Test_BFs0s_BFs0i_BFu0i, "BFs0s_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0i_BFs0c  {
  signed short  :0;
  signed int  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0i_BFs0c) C1{ Fs:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0i_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0i_BFs0c");
    static BFs0s_BFs0i_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0i_BFs0c(Test_BFs0s_BFs0i_BFu0i_BFs0c, "BFs0s_BFs0i_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0i_BFs0i  {
  signed short  :0;
  signed int  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0i_BFs0i) C1{ Fs:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0i_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0i_BFs0i");
    static BFs0s_BFs0i_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0i_BFs0i(Test_BFs0s_BFs0i_BFu0i_BFs0i, "BFs0s_BFs0i_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0i_BFs0ll  {
  signed short  :0;
  signed int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0i_BFs0ll) C1{ Fs:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0i_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0i_BFs0ll");
    static BFs0s_BFs0i_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0i_BFs0ll(Test_BFs0s_BFs0i_BFu0i_BFs0ll, "BFs0s_BFs0i_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0i_BFs0s  {
  signed short  :0;
  signed int  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0i_BFs0s) C1{ Fs:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0i_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0i_BFs0s");
    static BFs0s_BFs0i_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0i_BFs0s(Test_BFs0s_BFs0i_BFu0i_BFs0s, "BFs0s_BFs0i_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0i_BFu0c  {
  signed short  :0;
  signed int  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0i_BFu0c) C1{ Fs:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0i_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0i_BFu0c");
    static BFs0s_BFs0i_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0i_BFu0c(Test_BFs0s_BFs0i_BFu0i_BFu0c, "BFs0s_BFs0i_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0i_BFu0i  {
  signed short  :0;
  signed int  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0i_BFu0i) C1{ Fs:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0i_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0i_BFu0i");
    static BFs0s_BFs0i_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0i_BFu0i(Test_BFs0s_BFs0i_BFu0i_BFu0i, "BFs0s_BFs0i_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0i_BFu0ll  {
  signed short  :0;
  signed int  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0i_BFu0ll) C1{ Fs:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0i_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0i_BFu0ll");
    static BFs0s_BFs0i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0i_BFu0ll(Test_BFs0s_BFs0i_BFu0i_BFu0ll, "BFs0s_BFs0i_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0i_BFu0s  {
  signed short  :0;
  signed int  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0i_BFu0s) C1{ Fs:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0i_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0i_BFu0s");
    static BFs0s_BFs0i_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0i_BFu0s(Test_BFs0s_BFs0i_BFu0i_BFu0s, "BFs0s_BFs0i_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0ll  {
  signed short  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0ll) C1{ Fs:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0ll");
    static BFs0s_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0ll(Test_BFs0s_BFs0i_BFu0ll, "BFs0s_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0ll_BFs0c  {
  signed short  :0;
  signed int  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0ll_BFs0c) C1{ Fs:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0i_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0ll_BFs0c");
    static BFs0s_BFs0i_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0ll_BFs0c(Test_BFs0s_BFs0i_BFu0ll_BFs0c, "BFs0s_BFs0i_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0ll_BFs0i  {
  signed short  :0;
  signed int  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0ll_BFs0i) C1{ Fs:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0i_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0ll_BFs0i");
    static BFs0s_BFs0i_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0ll_BFs0i(Test_BFs0s_BFs0i_BFu0ll_BFs0i, "BFs0s_BFs0i_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0ll_BFs0ll  {
  signed short  :0;
  signed int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0ll_BFs0ll) C1{ Fs:0 Fi:0 FL:0 FL:0}



static void Test_BFs0s_BFs0i_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0ll_BFs0ll");
    static BFs0s_BFs0i_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0ll_BFs0ll(Test_BFs0s_BFs0i_BFu0ll_BFs0ll, "BFs0s_BFs0i_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0ll_BFs0s  {
  signed short  :0;
  signed int  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0ll_BFs0s) C1{ Fs:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0i_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0ll_BFs0s");
    static BFs0s_BFs0i_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0ll_BFs0s(Test_BFs0s_BFs0i_BFu0ll_BFs0s, "BFs0s_BFs0i_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0ll_BFu0c  {
  signed short  :0;
  signed int  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0ll_BFu0c) C1{ Fs:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0i_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0ll_BFu0c");
    static BFs0s_BFs0i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0ll_BFu0c(Test_BFs0s_BFs0i_BFu0ll_BFu0c, "BFs0s_BFs0i_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0ll_BFu0i  {
  signed short  :0;
  signed int  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0ll_BFu0i) C1{ Fs:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0i_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0ll_BFu0i");
    static BFs0s_BFs0i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0ll_BFu0i(Test_BFs0s_BFs0i_BFu0ll_BFu0i, "BFs0s_BFs0i_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0ll_BFu0ll  {
  signed short  :0;
  signed int  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0ll_BFu0ll) C1{ Fs:0 Fi:0 FL:0 FL:0}



static void Test_BFs0s_BFs0i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0ll_BFu0ll");
    static BFs0s_BFs0i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0ll_BFu0ll(Test_BFs0s_BFs0i_BFu0ll_BFu0ll, "BFs0s_BFs0i_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0ll_BFu0s  {
  signed short  :0;
  signed int  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0ll_BFu0s) C1{ Fs:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0i_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0ll_BFu0s");
    static BFs0s_BFs0i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0ll_BFu0s(Test_BFs0s_BFs0i_BFu0ll_BFu0s, "BFs0s_BFs0i_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0s  {
  signed short  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0s) C1{ Fs:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0s");
    static BFs0s_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0s(Test_BFs0s_BFs0i_BFu0s, "BFs0s_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0s_BFs0c  {
  signed short  :0;
  signed int  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0s_BFs0c) C1{ Fs:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0i_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0s_BFs0c");
    static BFs0s_BFs0i_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0s_BFs0c(Test_BFs0s_BFs0i_BFu0s_BFs0c, "BFs0s_BFs0i_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0s_BFs0i  {
  signed short  :0;
  signed int  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0s_BFs0i) C1{ Fs:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0i_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0s_BFs0i");
    static BFs0s_BFs0i_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0s_BFs0i(Test_BFs0s_BFs0i_BFu0s_BFs0i, "BFs0s_BFs0i_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0s_BFs0ll  {
  signed short  :0;
  signed int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0s_BFs0ll) C1{ Fs:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0i_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0s_BFs0ll");
    static BFs0s_BFs0i_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0s_BFs0ll(Test_BFs0s_BFs0i_BFu0s_BFs0ll, "BFs0s_BFs0i_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0s_BFs0s  {
  signed short  :0;
  signed int  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0s_BFs0s) C1{ Fs:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0i_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0s_BFs0s");
    static BFs0s_BFs0i_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0s_BFs0s(Test_BFs0s_BFs0i_BFu0s_BFs0s, "BFs0s_BFs0i_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0s_BFu0c  {
  signed short  :0;
  signed int  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0s_BFu0c) C1{ Fs:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0i_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0s_BFu0c");
    static BFs0s_BFs0i_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0s_BFu0c(Test_BFs0s_BFs0i_BFu0s_BFu0c, "BFs0s_BFs0i_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0s_BFu0i  {
  signed short  :0;
  signed int  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0s_BFu0i) C1{ Fs:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0i_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0s_BFu0i");
    static BFs0s_BFs0i_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0s_BFu0i(Test_BFs0s_BFs0i_BFu0s_BFu0i, "BFs0s_BFs0i_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0s_BFu0ll  {
  signed short  :0;
  signed int  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0s_BFu0ll) C1{ Fs:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0i_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0s_BFu0ll");
    static BFs0s_BFs0i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0s_BFu0ll(Test_BFs0s_BFs0i_BFu0s_BFu0ll, "BFs0s_BFs0i_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0i_BFu0s_BFu0s  {
  signed short  :0;
  signed int  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0i_BFu0s_BFu0s) C1{ Fs:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0i_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0i_BFu0s_BFu0s");
    static BFs0s_BFs0i_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0i_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0i_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0i_BFu0s_BFu0s(Test_BFs0s_BFs0i_BFu0s_BFu0s, "BFs0s_BFs0i_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll  {
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0ll) C1{ Fs:0 FL:0}



static void Test_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll");
    static BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll(Test_BFs0s_BFs0ll, "BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0c  {
  signed short  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0c) C1{ Fs:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0c");
    static BFs0s_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0c(Test_BFs0s_BFs0ll_BFs0c, "BFs0s_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0c_BFs0c  {
  signed short  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0c_BFs0c) C1{ Fs:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0c_BFs0c");
    static BFs0s_BFs0ll_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0c_BFs0c(Test_BFs0s_BFs0ll_BFs0c_BFs0c, "BFs0s_BFs0ll_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0c_BFs0i  {
  signed short  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0c_BFs0i) C1{ Fs:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0c_BFs0i");
    static BFs0s_BFs0ll_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0c_BFs0i(Test_BFs0s_BFs0ll_BFs0c_BFs0i, "BFs0s_BFs0ll_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0c_BFs0ll  {
  signed short  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0c_BFs0ll) C1{ Fs:0 FL:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0ll_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0c_BFs0ll");
    static BFs0s_BFs0ll_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0c_BFs0ll(Test_BFs0s_BFs0ll_BFs0c_BFs0ll, "BFs0s_BFs0ll_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0c_BFs0s  {
  signed short  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0c_BFs0s) C1{ Fs:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0c_BFs0s");
    static BFs0s_BFs0ll_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0c_BFs0s(Test_BFs0s_BFs0ll_BFs0c_BFs0s, "BFs0s_BFs0ll_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0c_BFu0c  {
  signed short  :0;
  signed __tsi64  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0c_BFu0c) C1{ Fs:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0c_BFu0c");
    static BFs0s_BFs0ll_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0c_BFu0c(Test_BFs0s_BFs0ll_BFs0c_BFu0c, "BFs0s_BFs0ll_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0c_BFu0i  {
  signed short  :0;
  signed __tsi64  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0c_BFu0i) C1{ Fs:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0c_BFu0i");
    static BFs0s_BFs0ll_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0c_BFu0i(Test_BFs0s_BFs0ll_BFs0c_BFu0i, "BFs0s_BFs0ll_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0c_BFu0ll  {
  signed short  :0;
  signed __tsi64  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0c_BFu0ll) C1{ Fs:0 FL:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0ll_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0c_BFu0ll");
    static BFs0s_BFs0ll_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0c_BFu0ll(Test_BFs0s_BFs0ll_BFs0c_BFu0ll, "BFs0s_BFs0ll_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0c_BFu0s  {
  signed short  :0;
  signed __tsi64  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0c_BFu0s) C1{ Fs:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0c_BFu0s");
    static BFs0s_BFs0ll_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0c_BFu0s(Test_BFs0s_BFs0ll_BFs0c_BFu0s, "BFs0s_BFs0ll_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0i  {
  signed short  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0i) C1{ Fs:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0i");
    static BFs0s_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0i(Test_BFs0s_BFs0ll_BFs0i, "BFs0s_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0i_BFs0c  {
  signed short  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0i_BFs0c) C1{ Fs:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0i_BFs0c");
    static BFs0s_BFs0ll_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0i_BFs0c(Test_BFs0s_BFs0ll_BFs0i_BFs0c, "BFs0s_BFs0ll_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0i_BFs0i  {
  signed short  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0i_BFs0i) C1{ Fs:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0i_BFs0i");
    static BFs0s_BFs0ll_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0i_BFs0i(Test_BFs0s_BFs0ll_BFs0i_BFs0i, "BFs0s_BFs0ll_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0i_BFs0ll  {
  signed short  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0i_BFs0ll) C1{ Fs:0 FL:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0ll_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0i_BFs0ll");
    static BFs0s_BFs0ll_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0i_BFs0ll(Test_BFs0s_BFs0ll_BFs0i_BFs0ll, "BFs0s_BFs0ll_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0i_BFs0s  {
  signed short  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0i_BFs0s) C1{ Fs:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0i_BFs0s");
    static BFs0s_BFs0ll_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0i_BFs0s(Test_BFs0s_BFs0ll_BFs0i_BFs0s, "BFs0s_BFs0ll_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0i_BFu0c  {
  signed short  :0;
  signed __tsi64  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0i_BFu0c) C1{ Fs:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0i_BFu0c");
    static BFs0s_BFs0ll_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0i_BFu0c(Test_BFs0s_BFs0ll_BFs0i_BFu0c, "BFs0s_BFs0ll_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0i_BFu0i  {
  signed short  :0;
  signed __tsi64  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0i_BFu0i) C1{ Fs:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0i_BFu0i");
    static BFs0s_BFs0ll_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0i_BFu0i(Test_BFs0s_BFs0ll_BFs0i_BFu0i, "BFs0s_BFs0ll_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0i_BFu0ll  {
  signed short  :0;
  signed __tsi64  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0i_BFu0ll) C1{ Fs:0 FL:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0ll_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0i_BFu0ll");
    static BFs0s_BFs0ll_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0i_BFu0ll(Test_BFs0s_BFs0ll_BFs0i_BFu0ll, "BFs0s_BFs0ll_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0i_BFu0s  {
  signed short  :0;
  signed __tsi64  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0i_BFu0s) C1{ Fs:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0i_BFu0s");
    static BFs0s_BFs0ll_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0i_BFu0s(Test_BFs0s_BFs0ll_BFs0i_BFu0s, "BFs0s_BFs0ll_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0ll  {
  signed short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0ll) C1{ Fs:0 FL:0 FL:0}



static void Test_BFs0s_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0ll");
    static BFs0s_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0ll(Test_BFs0s_BFs0ll_BFs0ll, "BFs0s_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0ll_BFs0c  {
  signed short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0ll_BFs0c) C1{ Fs:0 FL:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0ll_BFs0c");
    static BFs0s_BFs0ll_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0ll_BFs0c(Test_BFs0s_BFs0ll_BFs0ll_BFs0c, "BFs0s_BFs0ll_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0ll_BFs0i  {
  signed short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0ll_BFs0i) C1{ Fs:0 FL:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0ll_BFs0i");
    static BFs0s_BFs0ll_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0ll_BFs0i(Test_BFs0s_BFs0ll_BFs0ll_BFs0i, "BFs0s_BFs0ll_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0ll_BFs0ll  {
  signed short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0ll_BFs0ll) C1{ Fs:0 FL:0 FL:0 FL:0}



static void Test_BFs0s_BFs0ll_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0ll_BFs0ll");
    static BFs0s_BFs0ll_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0ll_BFs0ll(Test_BFs0s_BFs0ll_BFs0ll_BFs0ll, "BFs0s_BFs0ll_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0ll_BFs0s  {
  signed short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0ll_BFs0s) C1{ Fs:0 FL:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0ll_BFs0s");
    static BFs0s_BFs0ll_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0ll_BFs0s(Test_BFs0s_BFs0ll_BFs0ll_BFs0s, "BFs0s_BFs0ll_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0ll_BFu0c  {
  signed short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0ll_BFu0c) C1{ Fs:0 FL:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0ll_BFu0c");
    static BFs0s_BFs0ll_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0ll_BFu0c(Test_BFs0s_BFs0ll_BFs0ll_BFu0c, "BFs0s_BFs0ll_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0ll_BFu0i  {
  signed short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0ll_BFu0i) C1{ Fs:0 FL:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0ll_BFu0i");
    static BFs0s_BFs0ll_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0ll_BFu0i(Test_BFs0s_BFs0ll_BFs0ll_BFu0i, "BFs0s_BFs0ll_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0ll_BFu0ll  {
  signed short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0ll_BFu0ll) C1{ Fs:0 FL:0 FL:0 FL:0}



static void Test_BFs0s_BFs0ll_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0ll_BFu0ll");
    static BFs0s_BFs0ll_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0ll_BFu0ll(Test_BFs0s_BFs0ll_BFs0ll_BFu0ll, "BFs0s_BFs0ll_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0ll_BFu0s  {
  signed short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0ll_BFu0s) C1{ Fs:0 FL:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0ll_BFu0s");
    static BFs0s_BFs0ll_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0ll_BFu0s(Test_BFs0s_BFs0ll_BFs0ll_BFu0s, "BFs0s_BFs0ll_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0s  {
  signed short  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0s) C1{ Fs:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0s");
    static BFs0s_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0s(Test_BFs0s_BFs0ll_BFs0s, "BFs0s_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0s_BFs0c  {
  signed short  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0s_BFs0c) C1{ Fs:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0s_BFs0c");
    static BFs0s_BFs0ll_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0s_BFs0c(Test_BFs0s_BFs0ll_BFs0s_BFs0c, "BFs0s_BFs0ll_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0s_BFs0i  {
  signed short  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0s_BFs0i) C1{ Fs:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0s_BFs0i");
    static BFs0s_BFs0ll_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0s_BFs0i(Test_BFs0s_BFs0ll_BFs0s_BFs0i, "BFs0s_BFs0ll_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0s_BFs0ll  {
  signed short  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0s_BFs0ll) C1{ Fs:0 FL:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0ll_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0s_BFs0ll");
    static BFs0s_BFs0ll_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0s_BFs0ll(Test_BFs0s_BFs0ll_BFs0s_BFs0ll, "BFs0s_BFs0ll_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0s_BFs0s  {
  signed short  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0s_BFs0s) C1{ Fs:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0s_BFs0s");
    static BFs0s_BFs0ll_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0s_BFs0s(Test_BFs0s_BFs0ll_BFs0s_BFs0s, "BFs0s_BFs0ll_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0s_BFu0c  {
  signed short  :0;
  signed __tsi64  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0s_BFu0c) C1{ Fs:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0s_BFu0c");
    static BFs0s_BFs0ll_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0s_BFu0c(Test_BFs0s_BFs0ll_BFs0s_BFu0c, "BFs0s_BFs0ll_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0s_BFu0i  {
  signed short  :0;
  signed __tsi64  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0s_BFu0i) C1{ Fs:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0s_BFu0i");
    static BFs0s_BFs0ll_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0s_BFu0i(Test_BFs0s_BFs0ll_BFs0s_BFu0i, "BFs0s_BFs0ll_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0s_BFu0ll  {
  signed short  :0;
  signed __tsi64  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0s_BFu0ll) C1{ Fs:0 FL:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0ll_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0s_BFu0ll");
    static BFs0s_BFs0ll_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0s_BFu0ll(Test_BFs0s_BFs0ll_BFs0s_BFu0ll, "BFs0s_BFs0ll_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFs0s_BFu0s  {
  signed short  :0;
  signed __tsi64  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFs0s_BFu0s) C1{ Fs:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFs0s_BFu0s");
    static BFs0s_BFs0ll_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFs0s_BFu0s(Test_BFs0s_BFs0ll_BFs0s_BFu0s, "BFs0s_BFs0ll_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0c  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0c) C1{ Fs:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0c");
    static BFs0s_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0c(Test_BFs0s_BFs0ll_BFu0c, "BFs0s_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0c_BFs0c  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0c_BFs0c) C1{ Fs:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0c_BFs0c");
    static BFs0s_BFs0ll_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0c_BFs0c(Test_BFs0s_BFs0ll_BFu0c_BFs0c, "BFs0s_BFs0ll_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0c_BFs0i  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0c_BFs0i) C1{ Fs:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0c_BFs0i");
    static BFs0s_BFs0ll_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0c_BFs0i(Test_BFs0s_BFs0ll_BFu0c_BFs0i, "BFs0s_BFs0ll_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0c_BFs0ll  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0c_BFs0ll) C1{ Fs:0 FL:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0ll_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0c_BFs0ll");
    static BFs0s_BFs0ll_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0c_BFs0ll(Test_BFs0s_BFs0ll_BFu0c_BFs0ll, "BFs0s_BFs0ll_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0c_BFs0s  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0c_BFs0s) C1{ Fs:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0c_BFs0s");
    static BFs0s_BFs0ll_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0c_BFs0s(Test_BFs0s_BFs0ll_BFu0c_BFs0s, "BFs0s_BFs0ll_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0c_BFu0c  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0c_BFu0c) C1{ Fs:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0c_BFu0c");
    static BFs0s_BFs0ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0c_BFu0c(Test_BFs0s_BFs0ll_BFu0c_BFu0c, "BFs0s_BFs0ll_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0c_BFu0i  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0c_BFu0i) C1{ Fs:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0c_BFu0i");
    static BFs0s_BFs0ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0c_BFu0i(Test_BFs0s_BFs0ll_BFu0c_BFu0i, "BFs0s_BFs0ll_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0c_BFu0ll  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0c_BFu0ll) C1{ Fs:0 FL:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0c_BFu0ll");
    static BFs0s_BFs0ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0c_BFu0ll(Test_BFs0s_BFs0ll_BFu0c_BFu0ll, "BFs0s_BFs0ll_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0c_BFu0s  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0c_BFu0s) C1{ Fs:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0c_BFu0s");
    static BFs0s_BFs0ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0c_BFu0s(Test_BFs0s_BFs0ll_BFu0c_BFu0s, "BFs0s_BFs0ll_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0i  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0i) C1{ Fs:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0i");
    static BFs0s_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0i(Test_BFs0s_BFs0ll_BFu0i, "BFs0s_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0i_BFs0c  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0i_BFs0c) C1{ Fs:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0i_BFs0c");
    static BFs0s_BFs0ll_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0i_BFs0c(Test_BFs0s_BFs0ll_BFu0i_BFs0c, "BFs0s_BFs0ll_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0i_BFs0i  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0i_BFs0i) C1{ Fs:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0i_BFs0i");
    static BFs0s_BFs0ll_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0i_BFs0i(Test_BFs0s_BFs0ll_BFu0i_BFs0i, "BFs0s_BFs0ll_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0i_BFs0ll  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0i_BFs0ll) C1{ Fs:0 FL:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0ll_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0i_BFs0ll");
    static BFs0s_BFs0ll_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0i_BFs0ll(Test_BFs0s_BFs0ll_BFu0i_BFs0ll, "BFs0s_BFs0ll_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0i_BFs0s  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0i_BFs0s) C1{ Fs:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0i_BFs0s");
    static BFs0s_BFs0ll_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0i_BFs0s(Test_BFs0s_BFs0ll_BFu0i_BFs0s, "BFs0s_BFs0ll_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0i_BFu0c  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0i_BFu0c) C1{ Fs:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0i_BFu0c");
    static BFs0s_BFs0ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0i_BFu0c(Test_BFs0s_BFs0ll_BFu0i_BFu0c, "BFs0s_BFs0ll_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0i_BFu0i  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0i_BFu0i) C1{ Fs:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0i_BFu0i");
    static BFs0s_BFs0ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0i_BFu0i(Test_BFs0s_BFs0ll_BFu0i_BFu0i, "BFs0s_BFs0ll_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0i_BFu0ll  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0i_BFu0ll) C1{ Fs:0 FL:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0i_BFu0ll");
    static BFs0s_BFs0ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0i_BFu0ll(Test_BFs0s_BFs0ll_BFu0i_BFu0ll, "BFs0s_BFs0ll_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0i_BFu0s  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0i_BFu0s) C1{ Fs:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0i_BFu0s");
    static BFs0s_BFs0ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0i_BFu0s(Test_BFs0s_BFs0ll_BFu0i_BFu0s, "BFs0s_BFs0ll_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0ll  {
  signed short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0ll) C1{ Fs:0 FL:0 FL:0}



static void Test_BFs0s_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0ll");
    static BFs0s_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0ll(Test_BFs0s_BFs0ll_BFu0ll, "BFs0s_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0ll_BFs0c  {
  signed short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0ll_BFs0c) C1{ Fs:0 FL:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0ll_BFs0c");
    static BFs0s_BFs0ll_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0ll_BFs0c(Test_BFs0s_BFs0ll_BFu0ll_BFs0c, "BFs0s_BFs0ll_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0ll_BFs0i  {
  signed short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0ll_BFs0i) C1{ Fs:0 FL:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0ll_BFs0i");
    static BFs0s_BFs0ll_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0ll_BFs0i(Test_BFs0s_BFs0ll_BFu0ll_BFs0i, "BFs0s_BFs0ll_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0ll_BFs0ll  {
  signed short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0ll_BFs0ll) C1{ Fs:0 FL:0 FL:0 FL:0}



static void Test_BFs0s_BFs0ll_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0ll_BFs0ll");
    static BFs0s_BFs0ll_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0ll_BFs0ll(Test_BFs0s_BFs0ll_BFu0ll_BFs0ll, "BFs0s_BFs0ll_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0ll_BFs0s  {
  signed short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0ll_BFs0s) C1{ Fs:0 FL:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0ll_BFs0s");
    static BFs0s_BFs0ll_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0ll_BFs0s(Test_BFs0s_BFs0ll_BFu0ll_BFs0s, "BFs0s_BFs0ll_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0ll_BFu0c  {
  signed short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0ll_BFu0c) C1{ Fs:0 FL:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0ll_BFu0c");
    static BFs0s_BFs0ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0ll_BFu0c(Test_BFs0s_BFs0ll_BFu0ll_BFu0c, "BFs0s_BFs0ll_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0ll_BFu0i  {
  signed short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0ll_BFu0i) C1{ Fs:0 FL:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0ll_BFu0i");
    static BFs0s_BFs0ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0ll_BFu0i(Test_BFs0s_BFs0ll_BFu0ll_BFu0i, "BFs0s_BFs0ll_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0ll_BFu0ll  {
  signed short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0ll_BFu0ll) C1{ Fs:0 FL:0 FL:0 FL:0}



static void Test_BFs0s_BFs0ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0ll_BFu0ll");
    static BFs0s_BFs0ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0ll_BFu0ll(Test_BFs0s_BFs0ll_BFu0ll_BFu0ll, "BFs0s_BFs0ll_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0ll_BFu0s  {
  signed short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0ll_BFu0s) C1{ Fs:0 FL:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0ll_BFu0s");
    static BFs0s_BFs0ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0ll_BFu0s(Test_BFs0s_BFs0ll_BFu0ll_BFu0s, "BFs0s_BFs0ll_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0s  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0s) C1{ Fs:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0s");
    static BFs0s_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0s(Test_BFs0s_BFs0ll_BFu0s, "BFs0s_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0s_BFs0c  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0s_BFs0c) C1{ Fs:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0s_BFs0c");
    static BFs0s_BFs0ll_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0s_BFs0c(Test_BFs0s_BFs0ll_BFu0s_BFs0c, "BFs0s_BFs0ll_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0s_BFs0i  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0s_BFs0i) C1{ Fs:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0s_BFs0i");
    static BFs0s_BFs0ll_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0s_BFs0i(Test_BFs0s_BFs0ll_BFu0s_BFs0i, "BFs0s_BFs0ll_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0s_BFs0ll  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0s_BFs0ll) C1{ Fs:0 FL:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0ll_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0s_BFs0ll");
    static BFs0s_BFs0ll_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0s_BFs0ll(Test_BFs0s_BFs0ll_BFu0s_BFs0ll, "BFs0s_BFs0ll_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0s_BFs0s  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0s_BFs0s) C1{ Fs:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0s_BFs0s");
    static BFs0s_BFs0ll_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0s_BFs0s(Test_BFs0s_BFs0ll_BFu0s_BFs0s, "BFs0s_BFs0ll_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0s_BFu0c  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0s_BFu0c) C1{ Fs:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0ll_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0s_BFu0c");
    static BFs0s_BFs0ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0s_BFu0c(Test_BFs0s_BFs0ll_BFu0s_BFu0c, "BFs0s_BFs0ll_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0s_BFu0i  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0s_BFu0i) C1{ Fs:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0ll_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0s_BFu0i");
    static BFs0s_BFs0ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0s_BFu0i(Test_BFs0s_BFs0ll_BFu0s_BFu0i, "BFs0s_BFs0ll_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0s_BFu0ll  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0s_BFu0ll) C1{ Fs:0 FL:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0s_BFu0ll");
    static BFs0s_BFs0ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0s_BFu0ll(Test_BFs0s_BFs0ll_BFu0s_BFu0ll, "BFs0s_BFs0ll_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0ll_BFu0s_BFu0s  {
  signed short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0ll_BFu0s_BFu0s) C1{ Fs:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0ll_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0ll_BFu0s_BFu0s");
    static BFs0s_BFs0ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0ll_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0ll_BFu0s_BFu0s(Test_BFs0s_BFs0ll_BFu0s_BFu0s, "BFs0s_BFs0ll_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s  {
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0s) C1{ Fs:0 Fs:0}



static void Test_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0s");
    static BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s(Test_BFs0s_BFs0s, "BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0c  {
  signed short  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0c) C1{ Fs:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0c");
    static BFs0s_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0c(Test_BFs0s_BFs0s_BFs0c, "BFs0s_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0c_BFs0c  {
  signed short  :0;
  signed short  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0c_BFs0c) C1{ Fs:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0s_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0c_BFs0c");
    static BFs0s_BFs0s_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0c_BFs0c(Test_BFs0s_BFs0s_BFs0c_BFs0c, "BFs0s_BFs0s_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0c_BFs0i  {
  signed short  :0;
  signed short  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0c_BFs0i) C1{ Fs:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0s_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0c_BFs0i");
    static BFs0s_BFs0s_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0c_BFs0i(Test_BFs0s_BFs0s_BFs0c_BFs0i, "BFs0s_BFs0s_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0c_BFs0ll  {
  signed short  :0;
  signed short  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0c_BFs0ll) C1{ Fs:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0s_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0c_BFs0ll");
    static BFs0s_BFs0s_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0c_BFs0ll(Test_BFs0s_BFs0s_BFs0c_BFs0ll, "BFs0s_BFs0s_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0c_BFs0s  {
  signed short  :0;
  signed short  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0c_BFs0s) C1{ Fs:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0s_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0c_BFs0s");
    static BFs0s_BFs0s_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0c_BFs0s(Test_BFs0s_BFs0s_BFs0c_BFs0s, "BFs0s_BFs0s_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0c_BFu0c  {
  signed short  :0;
  signed short  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0c_BFu0c) C1{ Fs:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0s_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0c_BFu0c");
    static BFs0s_BFs0s_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0c_BFu0c(Test_BFs0s_BFs0s_BFs0c_BFu0c, "BFs0s_BFs0s_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0c_BFu0i  {
  signed short  :0;
  signed short  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0c_BFu0i) C1{ Fs:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0s_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0c_BFu0i");
    static BFs0s_BFs0s_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0c_BFu0i(Test_BFs0s_BFs0s_BFs0c_BFu0i, "BFs0s_BFs0s_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0c_BFu0ll  {
  signed short  :0;
  signed short  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0c_BFu0ll) C1{ Fs:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0s_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0c_BFu0ll");
    static BFs0s_BFs0s_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0c_BFu0ll(Test_BFs0s_BFs0s_BFs0c_BFu0ll, "BFs0s_BFs0s_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0c_BFu0s  {
  signed short  :0;
  signed short  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0c_BFu0s) C1{ Fs:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0s_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0c_BFu0s");
    static BFs0s_BFs0s_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0c_BFu0s(Test_BFs0s_BFs0s_BFs0c_BFu0s, "BFs0s_BFs0s_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0i  {
  signed short  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0i) C1{ Fs:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0i");
    static BFs0s_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0i(Test_BFs0s_BFs0s_BFs0i, "BFs0s_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0i_BFs0c  {
  signed short  :0;
  signed short  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0i_BFs0c) C1{ Fs:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0s_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0i_BFs0c");
    static BFs0s_BFs0s_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0i_BFs0c(Test_BFs0s_BFs0s_BFs0i_BFs0c, "BFs0s_BFs0s_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0i_BFs0i  {
  signed short  :0;
  signed short  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0i_BFs0i) C1{ Fs:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0s_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0i_BFs0i");
    static BFs0s_BFs0s_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0i_BFs0i(Test_BFs0s_BFs0s_BFs0i_BFs0i, "BFs0s_BFs0s_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0i_BFs0ll  {
  signed short  :0;
  signed short  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0i_BFs0ll) C1{ Fs:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0s_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0i_BFs0ll");
    static BFs0s_BFs0s_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0i_BFs0ll(Test_BFs0s_BFs0s_BFs0i_BFs0ll, "BFs0s_BFs0s_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0i_BFs0s  {
  signed short  :0;
  signed short  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0i_BFs0s) C1{ Fs:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0s_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0i_BFs0s");
    static BFs0s_BFs0s_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0i_BFs0s(Test_BFs0s_BFs0s_BFs0i_BFs0s, "BFs0s_BFs0s_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0i_BFu0c  {
  signed short  :0;
  signed short  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0i_BFu0c) C1{ Fs:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0s_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0i_BFu0c");
    static BFs0s_BFs0s_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0i_BFu0c(Test_BFs0s_BFs0s_BFs0i_BFu0c, "BFs0s_BFs0s_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0i_BFu0i  {
  signed short  :0;
  signed short  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0i_BFu0i) C1{ Fs:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0s_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0i_BFu0i");
    static BFs0s_BFs0s_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0i_BFu0i(Test_BFs0s_BFs0s_BFs0i_BFu0i, "BFs0s_BFs0s_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0i_BFu0ll  {
  signed short  :0;
  signed short  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0i_BFu0ll) C1{ Fs:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0s_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0i_BFu0ll");
    static BFs0s_BFs0s_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0i_BFu0ll(Test_BFs0s_BFs0s_BFs0i_BFu0ll, "BFs0s_BFs0s_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0i_BFu0s  {
  signed short  :0;
  signed short  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0i_BFu0s) C1{ Fs:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0s_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0i_BFu0s");
    static BFs0s_BFs0s_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0i_BFu0s(Test_BFs0s_BFs0s_BFs0i_BFu0s, "BFs0s_BFs0s_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0ll  {
  signed short  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0ll) C1{ Fs:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0ll");
    static BFs0s_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0ll(Test_BFs0s_BFs0s_BFs0ll, "BFs0s_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0ll_BFs0c  {
  signed short  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0ll_BFs0c) C1{ Fs:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0s_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0ll_BFs0c");
    static BFs0s_BFs0s_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0ll_BFs0c(Test_BFs0s_BFs0s_BFs0ll_BFs0c, "BFs0s_BFs0s_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0ll_BFs0i  {
  signed short  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0ll_BFs0i) C1{ Fs:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0s_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0ll_BFs0i");
    static BFs0s_BFs0s_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0ll_BFs0i(Test_BFs0s_BFs0s_BFs0ll_BFs0i, "BFs0s_BFs0s_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0ll_BFs0ll  {
  signed short  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0ll_BFs0ll) C1{ Fs:0 Fs:0 FL:0 FL:0}



static void Test_BFs0s_BFs0s_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0ll_BFs0ll");
    static BFs0s_BFs0s_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0ll_BFs0ll(Test_BFs0s_BFs0s_BFs0ll_BFs0ll, "BFs0s_BFs0s_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0ll_BFs0s  {
  signed short  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0ll_BFs0s) C1{ Fs:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0s_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0ll_BFs0s");
    static BFs0s_BFs0s_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0ll_BFs0s(Test_BFs0s_BFs0s_BFs0ll_BFs0s, "BFs0s_BFs0s_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0ll_BFu0c  {
  signed short  :0;
  signed short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0ll_BFu0c) C1{ Fs:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0s_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0ll_BFu0c");
    static BFs0s_BFs0s_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0ll_BFu0c(Test_BFs0s_BFs0s_BFs0ll_BFu0c, "BFs0s_BFs0s_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0ll_BFu0i  {
  signed short  :0;
  signed short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0ll_BFu0i) C1{ Fs:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0s_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0ll_BFu0i");
    static BFs0s_BFs0s_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0ll_BFu0i(Test_BFs0s_BFs0s_BFs0ll_BFu0i, "BFs0s_BFs0s_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0ll_BFu0ll  {
  signed short  :0;
  signed short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0ll_BFu0ll) C1{ Fs:0 Fs:0 FL:0 FL:0}



static void Test_BFs0s_BFs0s_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0ll_BFu0ll");
    static BFs0s_BFs0s_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0ll_BFu0ll(Test_BFs0s_BFs0s_BFs0ll_BFu0ll, "BFs0s_BFs0s_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0ll_BFu0s  {
  signed short  :0;
  signed short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0ll_BFu0s) C1{ Fs:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0s_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0ll_BFu0s");
    static BFs0s_BFs0s_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0ll_BFu0s(Test_BFs0s_BFs0s_BFs0ll_BFu0s, "BFs0s_BFs0s_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0s  {
  signed short  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0s) C1{ Fs:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0s");
    static BFs0s_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0s(Test_BFs0s_BFs0s_BFs0s, "BFs0s_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0s_BFs0c  {
  signed short  :0;
  signed short  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0s_BFs0c) C1{ Fs:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0s_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0s_BFs0c");
    static BFs0s_BFs0s_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0s_BFs0c(Test_BFs0s_BFs0s_BFs0s_BFs0c, "BFs0s_BFs0s_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0s_BFs0i  {
  signed short  :0;
  signed short  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0s_BFs0i) C1{ Fs:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0s_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0s_BFs0i");
    static BFs0s_BFs0s_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0s_BFs0i(Test_BFs0s_BFs0s_BFs0s_BFs0i, "BFs0s_BFs0s_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0s_BFs0ll  {
  signed short  :0;
  signed short  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0s_BFs0ll) C1{ Fs:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0s_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0s_BFs0ll");
    static BFs0s_BFs0s_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0s_BFs0ll(Test_BFs0s_BFs0s_BFs0s_BFs0ll, "BFs0s_BFs0s_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0s_BFs0s  {
  signed short  :0;
  signed short  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0s_BFs0s) C1{ Fs:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0s_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0s_BFs0s");
    static BFs0s_BFs0s_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0s_BFs0s(Test_BFs0s_BFs0s_BFs0s_BFs0s, "BFs0s_BFs0s_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0s_BFu0c  {
  signed short  :0;
  signed short  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0s_BFu0c) C1{ Fs:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0s_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0s_BFu0c");
    static BFs0s_BFs0s_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0s_BFu0c(Test_BFs0s_BFs0s_BFs0s_BFu0c, "BFs0s_BFs0s_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0s_BFu0i  {
  signed short  :0;
  signed short  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0s_BFu0i) C1{ Fs:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0s_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0s_BFu0i");
    static BFs0s_BFs0s_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0s_BFu0i(Test_BFs0s_BFs0s_BFs0s_BFu0i, "BFs0s_BFs0s_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0s_BFu0ll  {
  signed short  :0;
  signed short  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0s_BFu0ll) C1{ Fs:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0s_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0s_BFu0ll");
    static BFs0s_BFs0s_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0s_BFu0ll(Test_BFs0s_BFs0s_BFs0s_BFu0ll, "BFs0s_BFs0s_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFs0s_BFu0s  {
  signed short  :0;
  signed short  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0s_BFs0s_BFu0s) C1{ Fs:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0s_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFs0s_BFu0s");
    static BFs0s_BFs0s_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFs0s_BFu0s(Test_BFs0s_BFs0s_BFs0s_BFu0s, "BFs0s_BFs0s_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0c  {
  signed short  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0c) C1{ Fs:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0c");
    static BFs0s_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0c(Test_BFs0s_BFs0s_BFu0c, "BFs0s_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0c_BFs0c  {
  signed short  :0;
  signed short  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0c_BFs0c) C1{ Fs:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0s_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0c_BFs0c");
    static BFs0s_BFs0s_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0c_BFs0c(Test_BFs0s_BFs0s_BFu0c_BFs0c, "BFs0s_BFs0s_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0c_BFs0i  {
  signed short  :0;
  signed short  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0c_BFs0i) C1{ Fs:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0s_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0c_BFs0i");
    static BFs0s_BFs0s_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0c_BFs0i(Test_BFs0s_BFs0s_BFu0c_BFs0i, "BFs0s_BFs0s_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0c_BFs0ll  {
  signed short  :0;
  signed short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0c_BFs0ll) C1{ Fs:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0s_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0c_BFs0ll");
    static BFs0s_BFs0s_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0c_BFs0ll(Test_BFs0s_BFs0s_BFu0c_BFs0ll, "BFs0s_BFs0s_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0c_BFs0s  {
  signed short  :0;
  signed short  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0c_BFs0s) C1{ Fs:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0s_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0c_BFs0s");
    static BFs0s_BFs0s_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0c_BFs0s(Test_BFs0s_BFs0s_BFu0c_BFs0s, "BFs0s_BFs0s_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0c_BFu0c  {
  signed short  :0;
  signed short  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0c_BFu0c) C1{ Fs:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0s_BFs0s_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0c_BFu0c");
    static BFs0s_BFs0s_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0c_BFu0c(Test_BFs0s_BFs0s_BFu0c_BFu0c, "BFs0s_BFs0s_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0c_BFu0i  {
  signed short  :0;
  signed short  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0c_BFu0i) C1{ Fs:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0s_BFs0s_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0c_BFu0i");
    static BFs0s_BFs0s_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0c_BFu0i(Test_BFs0s_BFs0s_BFu0c_BFu0i, "BFs0s_BFs0s_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0c_BFu0ll  {
  signed short  :0;
  signed short  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0c_BFu0ll) C1{ Fs:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0s_BFs0s_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0c_BFu0ll");
    static BFs0s_BFs0s_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0c_BFu0ll(Test_BFs0s_BFs0s_BFu0c_BFu0ll, "BFs0s_BFs0s_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0c_BFu0s  {
  signed short  :0;
  signed short  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0c_BFu0s) C1{ Fs:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0s_BFs0s_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0c_BFu0s");
    static BFs0s_BFs0s_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0c_BFu0s(Test_BFs0s_BFs0s_BFu0c_BFu0s, "BFs0s_BFs0s_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0i  {
  signed short  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0i) C1{ Fs:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0i");
    static BFs0s_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0i(Test_BFs0s_BFs0s_BFu0i, "BFs0s_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0i_BFs0c  {
  signed short  :0;
  signed short  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0i_BFs0c) C1{ Fs:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0s_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0i_BFs0c");
    static BFs0s_BFs0s_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0i_BFs0c(Test_BFs0s_BFs0s_BFu0i_BFs0c, "BFs0s_BFs0s_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0i_BFs0i  {
  signed short  :0;
  signed short  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0i_BFs0i) C1{ Fs:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0s_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0i_BFs0i");
    static BFs0s_BFs0s_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0i_BFs0i(Test_BFs0s_BFs0s_BFu0i_BFs0i, "BFs0s_BFs0s_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0i_BFs0ll  {
  signed short  :0;
  signed short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0i_BFs0ll) C1{ Fs:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0s_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0i_BFs0ll");
    static BFs0s_BFs0s_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0i_BFs0ll(Test_BFs0s_BFs0s_BFu0i_BFs0ll, "BFs0s_BFs0s_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0i_BFs0s  {
  signed short  :0;
  signed short  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0i_BFs0s) C1{ Fs:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0s_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0i_BFs0s");
    static BFs0s_BFs0s_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0i_BFs0s(Test_BFs0s_BFs0s_BFu0i_BFs0s, "BFs0s_BFs0s_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0i_BFu0c  {
  signed short  :0;
  signed short  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0i_BFu0c) C1{ Fs:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0s_BFs0s_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0i_BFu0c");
    static BFs0s_BFs0s_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0i_BFu0c(Test_BFs0s_BFs0s_BFu0i_BFu0c, "BFs0s_BFs0s_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0i_BFu0i  {
  signed short  :0;
  signed short  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0i_BFu0i) C1{ Fs:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0s_BFs0s_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0i_BFu0i");
    static BFs0s_BFs0s_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0i_BFu0i(Test_BFs0s_BFs0s_BFu0i_BFu0i, "BFs0s_BFs0s_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0i_BFu0ll  {
  signed short  :0;
  signed short  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0i_BFu0ll) C1{ Fs:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0s_BFs0s_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0i_BFu0ll");
    static BFs0s_BFs0s_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0i_BFu0ll(Test_BFs0s_BFs0s_BFu0i_BFu0ll, "BFs0s_BFs0s_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0i_BFu0s  {
  signed short  :0;
  signed short  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0i_BFu0s) C1{ Fs:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0s_BFs0s_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0i_BFu0s");
    static BFs0s_BFs0s_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0i_BFu0s(Test_BFs0s_BFs0s_BFu0i_BFu0s, "BFs0s_BFs0s_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0ll  {
  signed short  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0ll) C1{ Fs:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0ll");
    static BFs0s_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0ll(Test_BFs0s_BFs0s_BFu0ll, "BFs0s_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0ll_BFs0c  {
  signed short  :0;
  signed short  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0ll_BFs0c) C1{ Fs:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0s_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0ll_BFs0c");
    static BFs0s_BFs0s_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0ll_BFs0c(Test_BFs0s_BFs0s_BFu0ll_BFs0c, "BFs0s_BFs0s_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0ll_BFs0i  {
  signed short  :0;
  signed short  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0ll_BFs0i) C1{ Fs:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0s_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0ll_BFs0i");
    static BFs0s_BFs0s_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0ll_BFs0i(Test_BFs0s_BFs0s_BFu0ll_BFs0i, "BFs0s_BFs0s_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0ll_BFs0ll  {
  signed short  :0;
  signed short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0ll_BFs0ll) C1{ Fs:0 Fs:0 FL:0 FL:0}



static void Test_BFs0s_BFs0s_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0ll_BFs0ll");
    static BFs0s_BFs0s_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0ll_BFs0ll(Test_BFs0s_BFs0s_BFu0ll_BFs0ll, "BFs0s_BFs0s_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0ll_BFs0s  {
  signed short  :0;
  signed short  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0ll_BFs0s) C1{ Fs:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0s_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0ll_BFs0s");
    static BFs0s_BFs0s_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0ll_BFs0s(Test_BFs0s_BFs0s_BFu0ll_BFs0s, "BFs0s_BFs0s_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0ll_BFu0c  {
  signed short  :0;
  signed short  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0ll_BFu0c) C1{ Fs:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0s_BFs0s_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0ll_BFu0c");
    static BFs0s_BFs0s_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0ll_BFu0c(Test_BFs0s_BFs0s_BFu0ll_BFu0c, "BFs0s_BFs0s_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0ll_BFu0i  {
  signed short  :0;
  signed short  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0ll_BFu0i) C1{ Fs:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0s_BFs0s_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0ll_BFu0i");
    static BFs0s_BFs0s_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0ll_BFu0i(Test_BFs0s_BFs0s_BFu0ll_BFu0i, "BFs0s_BFs0s_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0ll_BFu0ll  {
  signed short  :0;
  signed short  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0ll_BFu0ll) C1{ Fs:0 Fs:0 FL:0 FL:0}



static void Test_BFs0s_BFs0s_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0ll_BFu0ll");
    static BFs0s_BFs0s_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0ll_BFu0ll(Test_BFs0s_BFs0s_BFu0ll_BFu0ll, "BFs0s_BFs0s_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0ll_BFu0s  {
  signed short  :0;
  signed short  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0ll_BFu0s) C1{ Fs:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0s_BFs0s_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0ll_BFu0s");
    static BFs0s_BFs0s_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0ll_BFu0s(Test_BFs0s_BFs0s_BFu0ll_BFu0s, "BFs0s_BFs0s_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0s  {
  signed short  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0s) C1{ Fs:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0s");
    static BFs0s_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0s(Test_BFs0s_BFs0s_BFu0s, "BFs0s_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0s_BFs0c  {
  signed short  :0;
  signed short  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0s_BFs0c) C1{ Fs:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0s_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0s_BFs0c");
    static BFs0s_BFs0s_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0s_BFs0c(Test_BFs0s_BFs0s_BFu0s_BFs0c, "BFs0s_BFs0s_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0s_BFs0i  {
  signed short  :0;
  signed short  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0s_BFs0i) C1{ Fs:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0s_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0s_BFs0i");
    static BFs0s_BFs0s_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0s_BFs0i(Test_BFs0s_BFs0s_BFu0s_BFs0i, "BFs0s_BFs0s_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0s_BFs0ll  {
  signed short  :0;
  signed short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0s_BFs0ll) C1{ Fs:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0s_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0s_BFs0ll");
    static BFs0s_BFs0s_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0s_BFs0ll(Test_BFs0s_BFs0s_BFu0s_BFs0ll, "BFs0s_BFs0s_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0s_BFs0s  {
  signed short  :0;
  signed short  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0s_BFs0s) C1{ Fs:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0s_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0s_BFs0s");
    static BFs0s_BFs0s_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0s_BFs0s(Test_BFs0s_BFs0s_BFu0s_BFs0s, "BFs0s_BFs0s_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0s_BFu0c  {
  signed short  :0;
  signed short  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0s_BFu0c) C1{ Fs:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0s_BFs0s_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0s_BFu0c");
    static BFs0s_BFs0s_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0s_BFu0c(Test_BFs0s_BFs0s_BFu0s_BFu0c, "BFs0s_BFs0s_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0s_BFu0i  {
  signed short  :0;
  signed short  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0s_BFu0i) C1{ Fs:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0s_BFs0s_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0s_BFu0i");
    static BFs0s_BFs0s_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0s_BFu0i(Test_BFs0s_BFs0s_BFu0s_BFu0i, "BFs0s_BFs0s_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0s_BFu0ll  {
  signed short  :0;
  signed short  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0s_BFu0ll) C1{ Fs:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0s_BFs0s_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0s_BFu0ll");
    static BFs0s_BFs0s_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0s_BFu0ll(Test_BFs0s_BFs0s_BFu0s_BFu0ll, "BFs0s_BFs0s_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFs0s_BFu0s_BFu0s  {
  signed short  :0;
  signed short  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFs0s_BFu0s_BFu0s) C1{ Fs:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0s_BFs0s_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFs0s_BFu0s_BFu0s");
    static BFs0s_BFs0s_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFs0s_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFs0s_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFs0s_BFu0s_BFu0s(Test_BFs0s_BFs0s_BFu0s_BFu0s, "BFs0s_BFs0s_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c  {
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0c) C1{ Fs:0 Fc:0}



static void Test_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0c");
    static BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c(Test_BFs0s_BFu0c, "BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0c  {
  signed short  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0c) C1{ Fs:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0c");
    static BFs0s_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0c(Test_BFs0s_BFu0c_BFs0c, "BFs0s_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0c_BFs0c  {
  signed short  :0;
  unsigned char  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0c_BFs0c) C1{ Fs:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0c_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0c_BFs0c");
    static BFs0s_BFu0c_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0c_BFs0c(Test_BFs0s_BFu0c_BFs0c_BFs0c, "BFs0s_BFu0c_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0c_BFs0i  {
  signed short  :0;
  unsigned char  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0c_BFs0i) C1{ Fs:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0c_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0c_BFs0i");
    static BFs0s_BFu0c_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0c_BFs0i(Test_BFs0s_BFu0c_BFs0c_BFs0i, "BFs0s_BFu0c_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0c_BFs0ll  {
  signed short  :0;
  unsigned char  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0c_BFs0ll) C1{ Fs:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0c_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0c_BFs0ll");
    static BFs0s_BFu0c_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0c_BFs0ll(Test_BFs0s_BFu0c_BFs0c_BFs0ll, "BFs0s_BFu0c_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0c_BFs0s  {
  signed short  :0;
  unsigned char  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0c_BFs0s) C1{ Fs:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0c_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0c_BFs0s");
    static BFs0s_BFu0c_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0c_BFs0s(Test_BFs0s_BFu0c_BFs0c_BFs0s, "BFs0s_BFu0c_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0c_BFu0c  {
  signed short  :0;
  unsigned char  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0c_BFu0c) C1{ Fs:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0c_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0c_BFu0c");
    static BFs0s_BFu0c_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0c_BFu0c(Test_BFs0s_BFu0c_BFs0c_BFu0c, "BFs0s_BFu0c_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0c_BFu0i  {
  signed short  :0;
  unsigned char  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0c_BFu0i) C1{ Fs:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0c_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0c_BFu0i");
    static BFs0s_BFu0c_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0c_BFu0i(Test_BFs0s_BFu0c_BFs0c_BFu0i, "BFs0s_BFu0c_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0c_BFu0ll  {
  signed short  :0;
  unsigned char  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0c_BFu0ll) C1{ Fs:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0c_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0c_BFu0ll");
    static BFs0s_BFu0c_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0c_BFu0ll(Test_BFs0s_BFu0c_BFs0c_BFu0ll, "BFs0s_BFu0c_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0c_BFu0s  {
  signed short  :0;
  unsigned char  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0c_BFu0s) C1{ Fs:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0c_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0c_BFu0s");
    static BFs0s_BFu0c_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0c_BFu0s(Test_BFs0s_BFu0c_BFs0c_BFu0s, "BFs0s_BFu0c_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0i  {
  signed short  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0i) C1{ Fs:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0i");
    static BFs0s_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0i(Test_BFs0s_BFu0c_BFs0i, "BFs0s_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0i_BFs0c  {
  signed short  :0;
  unsigned char  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0i_BFs0c) C1{ Fs:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0c_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0i_BFs0c");
    static BFs0s_BFu0c_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0i_BFs0c(Test_BFs0s_BFu0c_BFs0i_BFs0c, "BFs0s_BFu0c_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0i_BFs0i  {
  signed short  :0;
  unsigned char  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0i_BFs0i) C1{ Fs:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0c_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0i_BFs0i");
    static BFs0s_BFu0c_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0i_BFs0i(Test_BFs0s_BFu0c_BFs0i_BFs0i, "BFs0s_BFu0c_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0i_BFs0ll  {
  signed short  :0;
  unsigned char  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0i_BFs0ll) C1{ Fs:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0c_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0i_BFs0ll");
    static BFs0s_BFu0c_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0i_BFs0ll(Test_BFs0s_BFu0c_BFs0i_BFs0ll, "BFs0s_BFu0c_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0i_BFs0s  {
  signed short  :0;
  unsigned char  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0i_BFs0s) C1{ Fs:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0c_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0i_BFs0s");
    static BFs0s_BFu0c_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0i_BFs0s(Test_BFs0s_BFu0c_BFs0i_BFs0s, "BFs0s_BFu0c_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0i_BFu0c  {
  signed short  :0;
  unsigned char  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0i_BFu0c) C1{ Fs:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0c_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0i_BFu0c");
    static BFs0s_BFu0c_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0i_BFu0c(Test_BFs0s_BFu0c_BFs0i_BFu0c, "BFs0s_BFu0c_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0i_BFu0i  {
  signed short  :0;
  unsigned char  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0i_BFu0i) C1{ Fs:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0c_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0i_BFu0i");
    static BFs0s_BFu0c_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0i_BFu0i(Test_BFs0s_BFu0c_BFs0i_BFu0i, "BFs0s_BFu0c_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0i_BFu0ll  {
  signed short  :0;
  unsigned char  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0i_BFu0ll) C1{ Fs:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0c_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0i_BFu0ll");
    static BFs0s_BFu0c_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0i_BFu0ll(Test_BFs0s_BFu0c_BFs0i_BFu0ll, "BFs0s_BFu0c_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0i_BFu0s  {
  signed short  :0;
  unsigned char  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0i_BFu0s) C1{ Fs:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0c_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0i_BFu0s");
    static BFs0s_BFu0c_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0i_BFu0s(Test_BFs0s_BFu0c_BFs0i_BFu0s, "BFs0s_BFu0c_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0ll  {
  signed short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0ll) C1{ Fs:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0ll");
    static BFs0s_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0ll(Test_BFs0s_BFu0c_BFs0ll, "BFs0s_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0ll_BFs0c  {
  signed short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0ll_BFs0c) C1{ Fs:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0c_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0ll_BFs0c");
    static BFs0s_BFu0c_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0ll_BFs0c(Test_BFs0s_BFu0c_BFs0ll_BFs0c, "BFs0s_BFu0c_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0ll_BFs0i  {
  signed short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0ll_BFs0i) C1{ Fs:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0c_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0ll_BFs0i");
    static BFs0s_BFu0c_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0ll_BFs0i(Test_BFs0s_BFu0c_BFs0ll_BFs0i, "BFs0s_BFu0c_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0ll_BFs0ll  {
  signed short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0ll_BFs0ll) C1{ Fs:0 Fc:0 FL:0 FL:0}



static void Test_BFs0s_BFu0c_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0ll_BFs0ll");
    static BFs0s_BFu0c_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0ll_BFs0ll(Test_BFs0s_BFu0c_BFs0ll_BFs0ll, "BFs0s_BFu0c_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0ll_BFs0s  {
  signed short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0ll_BFs0s) C1{ Fs:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0c_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0ll_BFs0s");
    static BFs0s_BFu0c_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0ll_BFs0s(Test_BFs0s_BFu0c_BFs0ll_BFs0s, "BFs0s_BFu0c_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0ll_BFu0c  {
  signed short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0ll_BFu0c) C1{ Fs:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0c_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0ll_BFu0c");
    static BFs0s_BFu0c_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0ll_BFu0c(Test_BFs0s_BFu0c_BFs0ll_BFu0c, "BFs0s_BFu0c_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0ll_BFu0i  {
  signed short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0ll_BFu0i) C1{ Fs:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0c_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0ll_BFu0i");
    static BFs0s_BFu0c_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0ll_BFu0i(Test_BFs0s_BFu0c_BFs0ll_BFu0i, "BFs0s_BFu0c_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0ll_BFu0ll  {
  signed short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0ll_BFu0ll) C1{ Fs:0 Fc:0 FL:0 FL:0}



static void Test_BFs0s_BFu0c_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0ll_BFu0ll");
    static BFs0s_BFu0c_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0ll_BFu0ll(Test_BFs0s_BFu0c_BFs0ll_BFu0ll, "BFs0s_BFu0c_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0ll_BFu0s  {
  signed short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0ll_BFu0s) C1{ Fs:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0c_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0ll_BFu0s");
    static BFs0s_BFu0c_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0ll_BFu0s(Test_BFs0s_BFu0c_BFs0ll_BFu0s, "BFs0s_BFu0c_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0s  {
  signed short  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0s) C1{ Fs:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0s");
    static BFs0s_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0s(Test_BFs0s_BFu0c_BFs0s, "BFs0s_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0s_BFs0c  {
  signed short  :0;
  unsigned char  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0s_BFs0c) C1{ Fs:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0c_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0s_BFs0c");
    static BFs0s_BFu0c_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0s_BFs0c(Test_BFs0s_BFu0c_BFs0s_BFs0c, "BFs0s_BFu0c_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0s_BFs0i  {
  signed short  :0;
  unsigned char  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0s_BFs0i) C1{ Fs:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0c_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0s_BFs0i");
    static BFs0s_BFu0c_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0s_BFs0i(Test_BFs0s_BFu0c_BFs0s_BFs0i, "BFs0s_BFu0c_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0s_BFs0ll  {
  signed short  :0;
  unsigned char  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0s_BFs0ll) C1{ Fs:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0c_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0s_BFs0ll");
    static BFs0s_BFu0c_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0s_BFs0ll(Test_BFs0s_BFu0c_BFs0s_BFs0ll, "BFs0s_BFu0c_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0s_BFs0s  {
  signed short  :0;
  unsigned char  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0s_BFs0s) C1{ Fs:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0c_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0s_BFs0s");
    static BFs0s_BFu0c_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0s_BFs0s(Test_BFs0s_BFu0c_BFs0s_BFs0s, "BFs0s_BFu0c_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0s_BFu0c  {
  signed short  :0;
  unsigned char  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0s_BFu0c) C1{ Fs:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0c_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0s_BFu0c");
    static BFs0s_BFu0c_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0s_BFu0c(Test_BFs0s_BFu0c_BFs0s_BFu0c, "BFs0s_BFu0c_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0s_BFu0i  {
  signed short  :0;
  unsigned char  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0s_BFu0i) C1{ Fs:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0c_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0s_BFu0i");
    static BFs0s_BFu0c_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0s_BFu0i(Test_BFs0s_BFu0c_BFs0s_BFu0i, "BFs0s_BFu0c_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0s_BFu0ll  {
  signed short  :0;
  unsigned char  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0s_BFu0ll) C1{ Fs:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0c_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0s_BFu0ll");
    static BFs0s_BFu0c_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0s_BFu0ll(Test_BFs0s_BFu0c_BFs0s_BFu0ll, "BFs0s_BFu0c_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFs0s_BFu0s  {
  signed short  :0;
  unsigned char  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0c_BFs0s_BFu0s) C1{ Fs:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0c_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFs0s_BFu0s");
    static BFs0s_BFu0c_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFs0s_BFu0s(Test_BFs0s_BFu0c_BFs0s_BFu0s, "BFs0s_BFu0c_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0c  {
  signed short  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0c) C1{ Fs:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0c");
    static BFs0s_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0c(Test_BFs0s_BFu0c_BFu0c, "BFs0s_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0c_BFs0c  {
  signed short  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0c_BFs0c) C1{ Fs:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0c_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0c_BFs0c");
    static BFs0s_BFu0c_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0c_BFs0c(Test_BFs0s_BFu0c_BFu0c_BFs0c, "BFs0s_BFu0c_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0c_BFs0i  {
  signed short  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0c_BFs0i) C1{ Fs:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0c_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0c_BFs0i");
    static BFs0s_BFu0c_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0c_BFs0i(Test_BFs0s_BFu0c_BFu0c_BFs0i, "BFs0s_BFu0c_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0c_BFs0ll  {
  signed short  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0c_BFs0ll) C1{ Fs:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0c_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0c_BFs0ll");
    static BFs0s_BFu0c_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0c_BFs0ll(Test_BFs0s_BFu0c_BFu0c_BFs0ll, "BFs0s_BFu0c_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0c_BFs0s  {
  signed short  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0c_BFs0s) C1{ Fs:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0c_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0c_BFs0s");
    static BFs0s_BFu0c_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0c_BFs0s(Test_BFs0s_BFu0c_BFu0c_BFs0s, "BFs0s_BFu0c_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0c_BFu0c  {
  signed short  :0;
  unsigned char  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0c_BFu0c) C1{ Fs:0 Fc:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0c_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0c_BFu0c");
    static BFs0s_BFu0c_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0c_BFu0c(Test_BFs0s_BFu0c_BFu0c_BFu0c, "BFs0s_BFu0c_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0c_BFu0i  {
  signed short  :0;
  unsigned char  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0c_BFu0i) C1{ Fs:0 Fc:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0c_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0c_BFu0i");
    static BFs0s_BFu0c_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0c_BFu0i(Test_BFs0s_BFu0c_BFu0c_BFu0i, "BFs0s_BFu0c_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0c_BFu0ll  {
  signed short  :0;
  unsigned char  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0c_BFu0ll) C1{ Fs:0 Fc:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0c_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0c_BFu0ll");
    static BFs0s_BFu0c_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0c_BFu0ll(Test_BFs0s_BFu0c_BFu0c_BFu0ll, "BFs0s_BFu0c_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0c_BFu0s  {
  signed short  :0;
  unsigned char  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0c_BFu0s) C1{ Fs:0 Fc:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0c_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0c_BFu0s");
    static BFs0s_BFu0c_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0c_BFu0s(Test_BFs0s_BFu0c_BFu0c_BFu0s, "BFs0s_BFu0c_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0i  {
  signed short  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0i) C1{ Fs:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0i");
    static BFs0s_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0i(Test_BFs0s_BFu0c_BFu0i, "BFs0s_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0i_BFs0c  {
  signed short  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0i_BFs0c) C1{ Fs:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0c_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0i_BFs0c");
    static BFs0s_BFu0c_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0i_BFs0c(Test_BFs0s_BFu0c_BFu0i_BFs0c, "BFs0s_BFu0c_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0i_BFs0i  {
  signed short  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0i_BFs0i) C1{ Fs:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0c_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0i_BFs0i");
    static BFs0s_BFu0c_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0i_BFs0i(Test_BFs0s_BFu0c_BFu0i_BFs0i, "BFs0s_BFu0c_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0i_BFs0ll  {
  signed short  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0i_BFs0ll) C1{ Fs:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0c_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0i_BFs0ll");
    static BFs0s_BFu0c_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0i_BFs0ll(Test_BFs0s_BFu0c_BFu0i_BFs0ll, "BFs0s_BFu0c_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0i_BFs0s  {
  signed short  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0i_BFs0s) C1{ Fs:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0c_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0i_BFs0s");
    static BFs0s_BFu0c_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0i_BFs0s(Test_BFs0s_BFu0c_BFu0i_BFs0s, "BFs0s_BFu0c_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0i_BFu0c  {
  signed short  :0;
  unsigned char  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0i_BFu0c) C1{ Fs:0 Fc:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0c_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0i_BFu0c");
    static BFs0s_BFu0c_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0i_BFu0c(Test_BFs0s_BFu0c_BFu0i_BFu0c, "BFs0s_BFu0c_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0i_BFu0i  {
  signed short  :0;
  unsigned char  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0i_BFu0i) C1{ Fs:0 Fc:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0c_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0i_BFu0i");
    static BFs0s_BFu0c_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0i_BFu0i(Test_BFs0s_BFu0c_BFu0i_BFu0i, "BFs0s_BFu0c_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0i_BFu0ll  {
  signed short  :0;
  unsigned char  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0i_BFu0ll) C1{ Fs:0 Fc:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0c_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0i_BFu0ll");
    static BFs0s_BFu0c_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0i_BFu0ll(Test_BFs0s_BFu0c_BFu0i_BFu0ll, "BFs0s_BFu0c_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0i_BFu0s  {
  signed short  :0;
  unsigned char  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0i_BFu0s) C1{ Fs:0 Fc:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0c_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0i_BFu0s");
    static BFs0s_BFu0c_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0i_BFu0s(Test_BFs0s_BFu0c_BFu0i_BFu0s, "BFs0s_BFu0c_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0ll  {
  signed short  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0ll) C1{ Fs:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0ll");
    static BFs0s_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0ll(Test_BFs0s_BFu0c_BFu0ll, "BFs0s_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0ll_BFs0c  {
  signed short  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0ll_BFs0c) C1{ Fs:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0c_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0ll_BFs0c");
    static BFs0s_BFu0c_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0ll_BFs0c(Test_BFs0s_BFu0c_BFu0ll_BFs0c, "BFs0s_BFu0c_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0ll_BFs0i  {
  signed short  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0ll_BFs0i) C1{ Fs:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0c_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0ll_BFs0i");
    static BFs0s_BFu0c_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0ll_BFs0i(Test_BFs0s_BFu0c_BFu0ll_BFs0i, "BFs0s_BFu0c_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0ll_BFs0ll  {
  signed short  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0ll_BFs0ll) C1{ Fs:0 Fc:0 FL:0 FL:0}



static void Test_BFs0s_BFu0c_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0ll_BFs0ll");
    static BFs0s_BFu0c_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0ll_BFs0ll(Test_BFs0s_BFu0c_BFu0ll_BFs0ll, "BFs0s_BFu0c_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0ll_BFs0s  {
  signed short  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0ll_BFs0s) C1{ Fs:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0c_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0ll_BFs0s");
    static BFs0s_BFu0c_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0ll_BFs0s(Test_BFs0s_BFu0c_BFu0ll_BFs0s, "BFs0s_BFu0c_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0ll_BFu0c  {
  signed short  :0;
  unsigned char  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0ll_BFu0c) C1{ Fs:0 Fc:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0c_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0ll_BFu0c");
    static BFs0s_BFu0c_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0ll_BFu0c(Test_BFs0s_BFu0c_BFu0ll_BFu0c, "BFs0s_BFu0c_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0ll_BFu0i  {
  signed short  :0;
  unsigned char  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0ll_BFu0i) C1{ Fs:0 Fc:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0c_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0ll_BFu0i");
    static BFs0s_BFu0c_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0ll_BFu0i(Test_BFs0s_BFu0c_BFu0ll_BFu0i, "BFs0s_BFu0c_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0ll_BFu0ll  {
  signed short  :0;
  unsigned char  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0ll_BFu0ll) C1{ Fs:0 Fc:0 FL:0 FL:0}



static void Test_BFs0s_BFu0c_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0ll_BFu0ll");
    static BFs0s_BFu0c_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0ll_BFu0ll(Test_BFs0s_BFu0c_BFu0ll_BFu0ll, "BFs0s_BFu0c_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0ll_BFu0s  {
  signed short  :0;
  unsigned char  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0ll_BFu0s) C1{ Fs:0 Fc:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0c_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0ll_BFu0s");
    static BFs0s_BFu0c_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0ll_BFu0s(Test_BFs0s_BFu0c_BFu0ll_BFu0s, "BFs0s_BFu0c_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0s  {
  signed short  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0s) C1{ Fs:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0s");
    static BFs0s_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0s(Test_BFs0s_BFu0c_BFu0s, "BFs0s_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0s_BFs0c  {
  signed short  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0s_BFs0c) C1{ Fs:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0c_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0s_BFs0c");
    static BFs0s_BFu0c_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0s_BFs0c(Test_BFs0s_BFu0c_BFu0s_BFs0c, "BFs0s_BFu0c_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0s_BFs0i  {
  signed short  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0s_BFs0i) C1{ Fs:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0c_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0s_BFs0i");
    static BFs0s_BFu0c_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0s_BFs0i(Test_BFs0s_BFu0c_BFu0s_BFs0i, "BFs0s_BFu0c_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0s_BFs0ll  {
  signed short  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0s_BFs0ll) C1{ Fs:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0c_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0s_BFs0ll");
    static BFs0s_BFu0c_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0s_BFs0ll(Test_BFs0s_BFu0c_BFu0s_BFs0ll, "BFs0s_BFu0c_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0s_BFs0s  {
  signed short  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0s_BFs0s) C1{ Fs:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0c_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0s_BFs0s");
    static BFs0s_BFu0c_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0s_BFs0s(Test_BFs0s_BFu0c_BFu0s_BFs0s, "BFs0s_BFu0c_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0s_BFu0c  {
  signed short  :0;
  unsigned char  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0s_BFu0c) C1{ Fs:0 Fc:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0c_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0s_BFu0c");
    static BFs0s_BFu0c_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0s_BFu0c(Test_BFs0s_BFu0c_BFu0s_BFu0c, "BFs0s_BFu0c_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0s_BFu0i  {
  signed short  :0;
  unsigned char  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0s_BFu0i) C1{ Fs:0 Fc:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0c_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0s_BFu0i");
    static BFs0s_BFu0c_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0s_BFu0i(Test_BFs0s_BFu0c_BFu0s_BFu0i, "BFs0s_BFu0c_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0s_BFu0ll  {
  signed short  :0;
  unsigned char  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0s_BFu0ll) C1{ Fs:0 Fc:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0c_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0s_BFu0ll");
    static BFs0s_BFu0c_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0s_BFu0ll(Test_BFs0s_BFu0c_BFu0s_BFu0ll, "BFs0s_BFu0c_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0c_BFu0s_BFu0s  {
  signed short  :0;
  unsigned char  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0c_BFu0s_BFu0s) C1{ Fs:0 Fc:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0c_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0c_BFu0s_BFu0s");
    static BFs0s_BFu0c_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0c_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0c_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0c_BFu0s_BFu0s(Test_BFs0s_BFu0c_BFu0s_BFu0s, "BFs0s_BFu0c_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i  {
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0i) C1{ Fs:0 Fi:0}



static void Test_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0i");
    static BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i(Test_BFs0s_BFu0i, "BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0c  {
  signed short  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0c) C1{ Fs:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0c");
    static BFs0s_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0c(Test_BFs0s_BFu0i_BFs0c, "BFs0s_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0c_BFs0c  {
  signed short  :0;
  unsigned int  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0c_BFs0c) C1{ Fs:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0i_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0c_BFs0c");
    static BFs0s_BFu0i_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0c_BFs0c(Test_BFs0s_BFu0i_BFs0c_BFs0c, "BFs0s_BFu0i_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0c_BFs0i  {
  signed short  :0;
  unsigned int  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0c_BFs0i) C1{ Fs:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0i_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0c_BFs0i");
    static BFs0s_BFu0i_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0c_BFs0i(Test_BFs0s_BFu0i_BFs0c_BFs0i, "BFs0s_BFu0i_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0c_BFs0ll  {
  signed short  :0;
  unsigned int  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0c_BFs0ll) C1{ Fs:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0i_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0c_BFs0ll");
    static BFs0s_BFu0i_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0c_BFs0ll(Test_BFs0s_BFu0i_BFs0c_BFs0ll, "BFs0s_BFu0i_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0c_BFs0s  {
  signed short  :0;
  unsigned int  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0c_BFs0s) C1{ Fs:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0i_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0c_BFs0s");
    static BFs0s_BFu0i_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0c_BFs0s(Test_BFs0s_BFu0i_BFs0c_BFs0s, "BFs0s_BFu0i_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0c_BFu0c  {
  signed short  :0;
  unsigned int  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0c_BFu0c) C1{ Fs:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0i_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0c_BFu0c");
    static BFs0s_BFu0i_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0c_BFu0c(Test_BFs0s_BFu0i_BFs0c_BFu0c, "BFs0s_BFu0i_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0c_BFu0i  {
  signed short  :0;
  unsigned int  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0c_BFu0i) C1{ Fs:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0i_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0c_BFu0i");
    static BFs0s_BFu0i_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0c_BFu0i(Test_BFs0s_BFu0i_BFs0c_BFu0i, "BFs0s_BFu0i_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0c_BFu0ll  {
  signed short  :0;
  unsigned int  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0c_BFu0ll) C1{ Fs:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0i_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0c_BFu0ll");
    static BFs0s_BFu0i_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0c_BFu0ll(Test_BFs0s_BFu0i_BFs0c_BFu0ll, "BFs0s_BFu0i_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0c_BFu0s  {
  signed short  :0;
  unsigned int  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0c_BFu0s) C1{ Fs:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0i_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0c_BFu0s");
    static BFs0s_BFu0i_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0c_BFu0s(Test_BFs0s_BFu0i_BFs0c_BFu0s, "BFs0s_BFu0i_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0i  {
  signed short  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0i) C1{ Fs:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0i");
    static BFs0s_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0i(Test_BFs0s_BFu0i_BFs0i, "BFs0s_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0i_BFs0c  {
  signed short  :0;
  unsigned int  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0i_BFs0c) C1{ Fs:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0i_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0i_BFs0c");
    static BFs0s_BFu0i_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0i_BFs0c(Test_BFs0s_BFu0i_BFs0i_BFs0c, "BFs0s_BFu0i_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0i_BFs0i  {
  signed short  :0;
  unsigned int  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0i_BFs0i) C1{ Fs:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0i_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0i_BFs0i");
    static BFs0s_BFu0i_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0i_BFs0i(Test_BFs0s_BFu0i_BFs0i_BFs0i, "BFs0s_BFu0i_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0i_BFs0ll  {
  signed short  :0;
  unsigned int  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0i_BFs0ll) C1{ Fs:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0i_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0i_BFs0ll");
    static BFs0s_BFu0i_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0i_BFs0ll(Test_BFs0s_BFu0i_BFs0i_BFs0ll, "BFs0s_BFu0i_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0i_BFs0s  {
  signed short  :0;
  unsigned int  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0i_BFs0s) C1{ Fs:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0i_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0i_BFs0s");
    static BFs0s_BFu0i_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0i_BFs0s(Test_BFs0s_BFu0i_BFs0i_BFs0s, "BFs0s_BFu0i_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0i_BFu0c  {
  signed short  :0;
  unsigned int  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0i_BFu0c) C1{ Fs:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0i_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0i_BFu0c");
    static BFs0s_BFu0i_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0i_BFu0c(Test_BFs0s_BFu0i_BFs0i_BFu0c, "BFs0s_BFu0i_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0i_BFu0i  {
  signed short  :0;
  unsigned int  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0i_BFu0i) C1{ Fs:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0i_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0i_BFu0i");
    static BFs0s_BFu0i_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0i_BFu0i(Test_BFs0s_BFu0i_BFs0i_BFu0i, "BFs0s_BFu0i_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0i_BFu0ll  {
  signed short  :0;
  unsigned int  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0i_BFu0ll) C1{ Fs:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0i_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0i_BFu0ll");
    static BFs0s_BFu0i_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0i_BFu0ll(Test_BFs0s_BFu0i_BFs0i_BFu0ll, "BFs0s_BFu0i_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0i_BFu0s  {
  signed short  :0;
  unsigned int  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0i_BFu0s) C1{ Fs:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0i_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0i_BFu0s");
    static BFs0s_BFu0i_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0i_BFu0s(Test_BFs0s_BFu0i_BFs0i_BFu0s, "BFs0s_BFu0i_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0ll  {
  signed short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0ll) C1{ Fs:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0ll");
    static BFs0s_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0ll(Test_BFs0s_BFu0i_BFs0ll, "BFs0s_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0ll_BFs0c  {
  signed short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0ll_BFs0c) C1{ Fs:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0i_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0ll_BFs0c");
    static BFs0s_BFu0i_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0ll_BFs0c(Test_BFs0s_BFu0i_BFs0ll_BFs0c, "BFs0s_BFu0i_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0ll_BFs0i  {
  signed short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0ll_BFs0i) C1{ Fs:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0i_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0ll_BFs0i");
    static BFs0s_BFu0i_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0ll_BFs0i(Test_BFs0s_BFu0i_BFs0ll_BFs0i, "BFs0s_BFu0i_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0ll_BFs0ll  {
  signed short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0ll_BFs0ll) C1{ Fs:0 Fi:0 FL:0 FL:0}



static void Test_BFs0s_BFu0i_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0ll_BFs0ll");
    static BFs0s_BFu0i_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0ll_BFs0ll(Test_BFs0s_BFu0i_BFs0ll_BFs0ll, "BFs0s_BFu0i_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0ll_BFs0s  {
  signed short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0ll_BFs0s) C1{ Fs:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0i_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0ll_BFs0s");
    static BFs0s_BFu0i_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0ll_BFs0s(Test_BFs0s_BFu0i_BFs0ll_BFs0s, "BFs0s_BFu0i_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0ll_BFu0c  {
  signed short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0ll_BFu0c) C1{ Fs:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0i_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0ll_BFu0c");
    static BFs0s_BFu0i_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0ll_BFu0c(Test_BFs0s_BFu0i_BFs0ll_BFu0c, "BFs0s_BFu0i_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0ll_BFu0i  {
  signed short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0ll_BFu0i) C1{ Fs:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0i_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0ll_BFu0i");
    static BFs0s_BFu0i_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0ll_BFu0i(Test_BFs0s_BFu0i_BFs0ll_BFu0i, "BFs0s_BFu0i_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0ll_BFu0ll  {
  signed short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0ll_BFu0ll) C1{ Fs:0 Fi:0 FL:0 FL:0}



static void Test_BFs0s_BFu0i_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0ll_BFu0ll");
    static BFs0s_BFu0i_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0ll_BFu0ll(Test_BFs0s_BFu0i_BFs0ll_BFu0ll, "BFs0s_BFu0i_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0ll_BFu0s  {
  signed short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0ll_BFu0s) C1{ Fs:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0i_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0ll_BFu0s");
    static BFs0s_BFu0i_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0ll_BFu0s(Test_BFs0s_BFu0i_BFs0ll_BFu0s, "BFs0s_BFu0i_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0s  {
  signed short  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0s) C1{ Fs:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0s");
    static BFs0s_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0s(Test_BFs0s_BFu0i_BFs0s, "BFs0s_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0s_BFs0c  {
  signed short  :0;
  unsigned int  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0s_BFs0c) C1{ Fs:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0i_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0s_BFs0c");
    static BFs0s_BFu0i_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0s_BFs0c(Test_BFs0s_BFu0i_BFs0s_BFs0c, "BFs0s_BFu0i_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0s_BFs0i  {
  signed short  :0;
  unsigned int  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0s_BFs0i) C1{ Fs:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0i_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0s_BFs0i");
    static BFs0s_BFu0i_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0s_BFs0i(Test_BFs0s_BFu0i_BFs0s_BFs0i, "BFs0s_BFu0i_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0s_BFs0ll  {
  signed short  :0;
  unsigned int  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0s_BFs0ll) C1{ Fs:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0i_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0s_BFs0ll");
    static BFs0s_BFu0i_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0s_BFs0ll(Test_BFs0s_BFu0i_BFs0s_BFs0ll, "BFs0s_BFu0i_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0s_BFs0s  {
  signed short  :0;
  unsigned int  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0s_BFs0s) C1{ Fs:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0i_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0s_BFs0s");
    static BFs0s_BFu0i_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0s_BFs0s(Test_BFs0s_BFu0i_BFs0s_BFs0s, "BFs0s_BFu0i_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0s_BFu0c  {
  signed short  :0;
  unsigned int  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0s_BFu0c) C1{ Fs:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0i_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0s_BFu0c");
    static BFs0s_BFu0i_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0s_BFu0c(Test_BFs0s_BFu0i_BFs0s_BFu0c, "BFs0s_BFu0i_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0s_BFu0i  {
  signed short  :0;
  unsigned int  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0s_BFu0i) C1{ Fs:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0i_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0s_BFu0i");
    static BFs0s_BFu0i_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0s_BFu0i(Test_BFs0s_BFu0i_BFs0s_BFu0i, "BFs0s_BFu0i_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0s_BFu0ll  {
  signed short  :0;
  unsigned int  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0s_BFu0ll) C1{ Fs:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0i_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0s_BFu0ll");
    static BFs0s_BFu0i_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0s_BFu0ll(Test_BFs0s_BFu0i_BFs0s_BFu0ll, "BFs0s_BFu0i_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFs0s_BFu0s  {
  signed short  :0;
  unsigned int  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0i_BFs0s_BFu0s) C1{ Fs:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0i_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFs0s_BFu0s");
    static BFs0s_BFu0i_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFs0s_BFu0s(Test_BFs0s_BFu0i_BFs0s_BFu0s, "BFs0s_BFu0i_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0c  {
  signed short  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0c) C1{ Fs:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0c");
    static BFs0s_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0c(Test_BFs0s_BFu0i_BFu0c, "BFs0s_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0c_BFs0c  {
  signed short  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0c_BFs0c) C1{ Fs:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0i_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0c_BFs0c");
    static BFs0s_BFu0i_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0c_BFs0c(Test_BFs0s_BFu0i_BFu0c_BFs0c, "BFs0s_BFu0i_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0c_BFs0i  {
  signed short  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0c_BFs0i) C1{ Fs:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0i_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0c_BFs0i");
    static BFs0s_BFu0i_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0c_BFs0i(Test_BFs0s_BFu0i_BFu0c_BFs0i, "BFs0s_BFu0i_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0c_BFs0ll  {
  signed short  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0c_BFs0ll) C1{ Fs:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0i_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0c_BFs0ll");
    static BFs0s_BFu0i_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0c_BFs0ll(Test_BFs0s_BFu0i_BFu0c_BFs0ll, "BFs0s_BFu0i_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0c_BFs0s  {
  signed short  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0c_BFs0s) C1{ Fs:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0i_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0c_BFs0s");
    static BFs0s_BFu0i_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0c_BFs0s(Test_BFs0s_BFu0i_BFu0c_BFs0s, "BFs0s_BFu0i_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0c_BFu0c  {
  signed short  :0;
  unsigned int  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0c_BFu0c) C1{ Fs:0 Fi:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0i_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0c_BFu0c");
    static BFs0s_BFu0i_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0c_BFu0c(Test_BFs0s_BFu0i_BFu0c_BFu0c, "BFs0s_BFu0i_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0c_BFu0i  {
  signed short  :0;
  unsigned int  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0c_BFu0i) C1{ Fs:0 Fi:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0i_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0c_BFu0i");
    static BFs0s_BFu0i_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0c_BFu0i(Test_BFs0s_BFu0i_BFu0c_BFu0i, "BFs0s_BFu0i_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0c_BFu0ll  {
  signed short  :0;
  unsigned int  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0c_BFu0ll) C1{ Fs:0 Fi:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0i_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0c_BFu0ll");
    static BFs0s_BFu0i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0c_BFu0ll(Test_BFs0s_BFu0i_BFu0c_BFu0ll, "BFs0s_BFu0i_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0c_BFu0s  {
  signed short  :0;
  unsigned int  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0c_BFu0s) C1{ Fs:0 Fi:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0i_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0c_BFu0s");
    static BFs0s_BFu0i_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0c_BFu0s(Test_BFs0s_BFu0i_BFu0c_BFu0s, "BFs0s_BFu0i_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0i  {
  signed short  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0i) C1{ Fs:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0i");
    static BFs0s_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0i(Test_BFs0s_BFu0i_BFu0i, "BFs0s_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0i_BFs0c  {
  signed short  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0i_BFs0c) C1{ Fs:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0i_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0i_BFs0c");
    static BFs0s_BFu0i_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0i_BFs0c(Test_BFs0s_BFu0i_BFu0i_BFs0c, "BFs0s_BFu0i_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0i_BFs0i  {
  signed short  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0i_BFs0i) C1{ Fs:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0i_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0i_BFs0i");
    static BFs0s_BFu0i_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0i_BFs0i(Test_BFs0s_BFu0i_BFu0i_BFs0i, "BFs0s_BFu0i_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0i_BFs0ll  {
  signed short  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0i_BFs0ll) C1{ Fs:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0i_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0i_BFs0ll");
    static BFs0s_BFu0i_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0i_BFs0ll(Test_BFs0s_BFu0i_BFu0i_BFs0ll, "BFs0s_BFu0i_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0i_BFs0s  {
  signed short  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0i_BFs0s) C1{ Fs:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0i_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0i_BFs0s");
    static BFs0s_BFu0i_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0i_BFs0s(Test_BFs0s_BFu0i_BFu0i_BFs0s, "BFs0s_BFu0i_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0i_BFu0c  {
  signed short  :0;
  unsigned int  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0i_BFu0c) C1{ Fs:0 Fi:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0i_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0i_BFu0c");
    static BFs0s_BFu0i_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0i_BFu0c(Test_BFs0s_BFu0i_BFu0i_BFu0c, "BFs0s_BFu0i_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0i_BFu0i  {
  signed short  :0;
  unsigned int  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0i_BFu0i) C1{ Fs:0 Fi:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0i_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0i_BFu0i");
    static BFs0s_BFu0i_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0i_BFu0i(Test_BFs0s_BFu0i_BFu0i_BFu0i, "BFs0s_BFu0i_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0i_BFu0ll  {
  signed short  :0;
  unsigned int  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0i_BFu0ll) C1{ Fs:0 Fi:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0i_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0i_BFu0ll");
    static BFs0s_BFu0i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0i_BFu0ll(Test_BFs0s_BFu0i_BFu0i_BFu0ll, "BFs0s_BFu0i_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0i_BFu0s  {
  signed short  :0;
  unsigned int  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0i_BFu0s) C1{ Fs:0 Fi:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0i_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0i_BFu0s");
    static BFs0s_BFu0i_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0i_BFu0s(Test_BFs0s_BFu0i_BFu0i_BFu0s, "BFs0s_BFu0i_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0ll  {
  signed short  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0ll) C1{ Fs:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0ll");
    static BFs0s_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0ll(Test_BFs0s_BFu0i_BFu0ll, "BFs0s_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0ll_BFs0c  {
  signed short  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0ll_BFs0c) C1{ Fs:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0i_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0ll_BFs0c");
    static BFs0s_BFu0i_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0ll_BFs0c(Test_BFs0s_BFu0i_BFu0ll_BFs0c, "BFs0s_BFu0i_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0ll_BFs0i  {
  signed short  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0ll_BFs0i) C1{ Fs:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0i_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0ll_BFs0i");
    static BFs0s_BFu0i_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0ll_BFs0i(Test_BFs0s_BFu0i_BFu0ll_BFs0i, "BFs0s_BFu0i_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0ll_BFs0ll  {
  signed short  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0ll_BFs0ll) C1{ Fs:0 Fi:0 FL:0 FL:0}



static void Test_BFs0s_BFu0i_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0ll_BFs0ll");
    static BFs0s_BFu0i_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0ll_BFs0ll(Test_BFs0s_BFu0i_BFu0ll_BFs0ll, "BFs0s_BFu0i_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0ll_BFs0s  {
  signed short  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0ll_BFs0s) C1{ Fs:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0i_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0ll_BFs0s");
    static BFs0s_BFu0i_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0ll_BFs0s(Test_BFs0s_BFu0i_BFu0ll_BFs0s, "BFs0s_BFu0i_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0ll_BFu0c  {
  signed short  :0;
  unsigned int  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0ll_BFu0c) C1{ Fs:0 Fi:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0i_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0ll_BFu0c");
    static BFs0s_BFu0i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0ll_BFu0c(Test_BFs0s_BFu0i_BFu0ll_BFu0c, "BFs0s_BFu0i_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0ll_BFu0i  {
  signed short  :0;
  unsigned int  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0ll_BFu0i) C1{ Fs:0 Fi:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0i_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0ll_BFu0i");
    static BFs0s_BFu0i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0ll_BFu0i(Test_BFs0s_BFu0i_BFu0ll_BFu0i, "BFs0s_BFu0i_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0ll_BFu0ll  {
  signed short  :0;
  unsigned int  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0ll_BFu0ll) C1{ Fs:0 Fi:0 FL:0 FL:0}



static void Test_BFs0s_BFu0i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0ll_BFu0ll");
    static BFs0s_BFu0i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0ll_BFu0ll(Test_BFs0s_BFu0i_BFu0ll_BFu0ll, "BFs0s_BFu0i_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0ll_BFu0s  {
  signed short  :0;
  unsigned int  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0ll_BFu0s) C1{ Fs:0 Fi:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0i_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0ll_BFu0s");
    static BFs0s_BFu0i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0ll_BFu0s(Test_BFs0s_BFu0i_BFu0ll_BFu0s, "BFs0s_BFu0i_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0s  {
  signed short  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0s) C1{ Fs:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0s");
    static BFs0s_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0s(Test_BFs0s_BFu0i_BFu0s, "BFs0s_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0s_BFs0c  {
  signed short  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0s_BFs0c) C1{ Fs:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0i_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0s_BFs0c");
    static BFs0s_BFu0i_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0s_BFs0c(Test_BFs0s_BFu0i_BFu0s_BFs0c, "BFs0s_BFu0i_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0s_BFs0i  {
  signed short  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0s_BFs0i) C1{ Fs:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0i_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0s_BFs0i");
    static BFs0s_BFu0i_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0s_BFs0i(Test_BFs0s_BFu0i_BFu0s_BFs0i, "BFs0s_BFu0i_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0s_BFs0ll  {
  signed short  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0s_BFs0ll) C1{ Fs:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0i_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0s_BFs0ll");
    static BFs0s_BFu0i_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0s_BFs0ll(Test_BFs0s_BFu0i_BFu0s_BFs0ll, "BFs0s_BFu0i_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0s_BFs0s  {
  signed short  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0s_BFs0s) C1{ Fs:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0i_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0s_BFs0s");
    static BFs0s_BFu0i_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0s_BFs0s(Test_BFs0s_BFu0i_BFu0s_BFs0s, "BFs0s_BFu0i_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0s_BFu0c  {
  signed short  :0;
  unsigned int  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0s_BFu0c) C1{ Fs:0 Fi:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0i_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0s_BFu0c");
    static BFs0s_BFu0i_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0s_BFu0c(Test_BFs0s_BFu0i_BFu0s_BFu0c, "BFs0s_BFu0i_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0s_BFu0i  {
  signed short  :0;
  unsigned int  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0s_BFu0i) C1{ Fs:0 Fi:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0i_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0s_BFu0i");
    static BFs0s_BFu0i_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0s_BFu0i(Test_BFs0s_BFu0i_BFu0s_BFu0i, "BFs0s_BFu0i_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0s_BFu0ll  {
  signed short  :0;
  unsigned int  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0s_BFu0ll) C1{ Fs:0 Fi:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0i_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0s_BFu0ll");
    static BFs0s_BFu0i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0s_BFu0ll(Test_BFs0s_BFu0i_BFu0s_BFu0ll, "BFs0s_BFu0i_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0i_BFu0s_BFu0s  {
  signed short  :0;
  unsigned int  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0i_BFu0s_BFu0s) C1{ Fs:0 Fi:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0i_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0i_BFu0s_BFu0s");
    static BFs0s_BFu0i_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0i_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0i_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0i_BFu0s_BFu0s(Test_BFs0s_BFu0i_BFu0s_BFu0s, "BFs0s_BFu0i_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll  {
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0ll) C1{ Fs:0 FL:0}



static void Test_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll");
    static BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll(Test_BFs0s_BFu0ll, "BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0c  {
  signed short  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0c) C1{ Fs:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0c");
    static BFs0s_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0c(Test_BFs0s_BFu0ll_BFs0c, "BFs0s_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0c_BFs0c  {
  signed short  :0;
  __tsu64  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0c_BFs0c) C1{ Fs:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0c_BFs0c");
    static BFs0s_BFu0ll_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0c_BFs0c(Test_BFs0s_BFu0ll_BFs0c_BFs0c, "BFs0s_BFu0ll_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0c_BFs0i  {
  signed short  :0;
  __tsu64  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0c_BFs0i) C1{ Fs:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0c_BFs0i");
    static BFs0s_BFu0ll_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0c_BFs0i(Test_BFs0s_BFu0ll_BFs0c_BFs0i, "BFs0s_BFu0ll_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0c_BFs0ll  {
  signed short  :0;
  __tsu64  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0c_BFs0ll) C1{ Fs:0 FL:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0ll_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0c_BFs0ll");
    static BFs0s_BFu0ll_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0c_BFs0ll(Test_BFs0s_BFu0ll_BFs0c_BFs0ll, "BFs0s_BFu0ll_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0c_BFs0s  {
  signed short  :0;
  __tsu64  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0c_BFs0s) C1{ Fs:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0c_BFs0s");
    static BFs0s_BFu0ll_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0c_BFs0s(Test_BFs0s_BFu0ll_BFs0c_BFs0s, "BFs0s_BFu0ll_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0c_BFu0c  {
  signed short  :0;
  __tsu64  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0c_BFu0c) C1{ Fs:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0c_BFu0c");
    static BFs0s_BFu0ll_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0c_BFu0c(Test_BFs0s_BFu0ll_BFs0c_BFu0c, "BFs0s_BFu0ll_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0c_BFu0i  {
  signed short  :0;
  __tsu64  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0c_BFu0i) C1{ Fs:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0c_BFu0i");
    static BFs0s_BFu0ll_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0c_BFu0i(Test_BFs0s_BFu0ll_BFs0c_BFu0i, "BFs0s_BFu0ll_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0c_BFu0ll  {
  signed short  :0;
  __tsu64  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0c_BFu0ll) C1{ Fs:0 FL:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0ll_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0c_BFu0ll");
    static BFs0s_BFu0ll_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0c_BFu0ll(Test_BFs0s_BFu0ll_BFs0c_BFu0ll, "BFs0s_BFu0ll_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0c_BFu0s  {
  signed short  :0;
  __tsu64  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0c_BFu0s) C1{ Fs:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0c_BFu0s");
    static BFs0s_BFu0ll_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0c_BFu0s(Test_BFs0s_BFu0ll_BFs0c_BFu0s, "BFs0s_BFu0ll_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0i  {
  signed short  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0i) C1{ Fs:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0i");
    static BFs0s_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0i(Test_BFs0s_BFu0ll_BFs0i, "BFs0s_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0i_BFs0c  {
  signed short  :0;
  __tsu64  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0i_BFs0c) C1{ Fs:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0i_BFs0c");
    static BFs0s_BFu0ll_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0i_BFs0c(Test_BFs0s_BFu0ll_BFs0i_BFs0c, "BFs0s_BFu0ll_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0i_BFs0i  {
  signed short  :0;
  __tsu64  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0i_BFs0i) C1{ Fs:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0i_BFs0i");
    static BFs0s_BFu0ll_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0i_BFs0i(Test_BFs0s_BFu0ll_BFs0i_BFs0i, "BFs0s_BFu0ll_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0i_BFs0ll  {
  signed short  :0;
  __tsu64  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0i_BFs0ll) C1{ Fs:0 FL:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0ll_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0i_BFs0ll");
    static BFs0s_BFu0ll_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0i_BFs0ll(Test_BFs0s_BFu0ll_BFs0i_BFs0ll, "BFs0s_BFu0ll_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0i_BFs0s  {
  signed short  :0;
  __tsu64  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0i_BFs0s) C1{ Fs:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0i_BFs0s");
    static BFs0s_BFu0ll_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0i_BFs0s(Test_BFs0s_BFu0ll_BFs0i_BFs0s, "BFs0s_BFu0ll_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0i_BFu0c  {
  signed short  :0;
  __tsu64  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0i_BFu0c) C1{ Fs:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0i_BFu0c");
    static BFs0s_BFu0ll_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0i_BFu0c(Test_BFs0s_BFu0ll_BFs0i_BFu0c, "BFs0s_BFu0ll_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0i_BFu0i  {
  signed short  :0;
  __tsu64  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0i_BFu0i) C1{ Fs:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0i_BFu0i");
    static BFs0s_BFu0ll_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0i_BFu0i(Test_BFs0s_BFu0ll_BFs0i_BFu0i, "BFs0s_BFu0ll_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0i_BFu0ll  {
  signed short  :0;
  __tsu64  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0i_BFu0ll) C1{ Fs:0 FL:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0ll_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0i_BFu0ll");
    static BFs0s_BFu0ll_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0i_BFu0ll(Test_BFs0s_BFu0ll_BFs0i_BFu0ll, "BFs0s_BFu0ll_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0i_BFu0s  {
  signed short  :0;
  __tsu64  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0i_BFu0s) C1{ Fs:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0i_BFu0s");
    static BFs0s_BFu0ll_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0i_BFu0s(Test_BFs0s_BFu0ll_BFs0i_BFu0s, "BFs0s_BFu0ll_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0ll  {
  signed short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0ll) C1{ Fs:0 FL:0 FL:0}



static void Test_BFs0s_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0ll");
    static BFs0s_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0ll(Test_BFs0s_BFu0ll_BFs0ll, "BFs0s_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0ll_BFs0c  {
  signed short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0ll_BFs0c) C1{ Fs:0 FL:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0ll_BFs0c");
    static BFs0s_BFu0ll_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0ll_BFs0c(Test_BFs0s_BFu0ll_BFs0ll_BFs0c, "BFs0s_BFu0ll_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0ll_BFs0i  {
  signed short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0ll_BFs0i) C1{ Fs:0 FL:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0ll_BFs0i");
    static BFs0s_BFu0ll_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0ll_BFs0i(Test_BFs0s_BFu0ll_BFs0ll_BFs0i, "BFs0s_BFu0ll_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0ll_BFs0ll  {
  signed short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0ll_BFs0ll) C1{ Fs:0 FL:0 FL:0 FL:0}



static void Test_BFs0s_BFu0ll_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0ll_BFs0ll");
    static BFs0s_BFu0ll_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0ll_BFs0ll(Test_BFs0s_BFu0ll_BFs0ll_BFs0ll, "BFs0s_BFu0ll_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0ll_BFs0s  {
  signed short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0ll_BFs0s) C1{ Fs:0 FL:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0ll_BFs0s");
    static BFs0s_BFu0ll_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0ll_BFs0s(Test_BFs0s_BFu0ll_BFs0ll_BFs0s, "BFs0s_BFu0ll_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0ll_BFu0c  {
  signed short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0ll_BFu0c) C1{ Fs:0 FL:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0ll_BFu0c");
    static BFs0s_BFu0ll_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0ll_BFu0c(Test_BFs0s_BFu0ll_BFs0ll_BFu0c, "BFs0s_BFu0ll_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0ll_BFu0i  {
  signed short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0ll_BFu0i) C1{ Fs:0 FL:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0ll_BFu0i");
    static BFs0s_BFu0ll_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0ll_BFu0i(Test_BFs0s_BFu0ll_BFs0ll_BFu0i, "BFs0s_BFu0ll_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0ll_BFu0ll  {
  signed short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0ll_BFu0ll) C1{ Fs:0 FL:0 FL:0 FL:0}



static void Test_BFs0s_BFu0ll_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0ll_BFu0ll");
    static BFs0s_BFu0ll_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0ll_BFu0ll(Test_BFs0s_BFu0ll_BFs0ll_BFu0ll, "BFs0s_BFu0ll_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0ll_BFu0s  {
  signed short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0ll_BFu0s) C1{ Fs:0 FL:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0ll_BFu0s");
    static BFs0s_BFu0ll_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0ll_BFu0s(Test_BFs0s_BFu0ll_BFs0ll_BFu0s, "BFs0s_BFu0ll_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0s  {
  signed short  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0s) C1{ Fs:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0s");
    static BFs0s_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0s(Test_BFs0s_BFu0ll_BFs0s, "BFs0s_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0s_BFs0c  {
  signed short  :0;
  __tsu64  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0s_BFs0c) C1{ Fs:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0s_BFs0c");
    static BFs0s_BFu0ll_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0s_BFs0c(Test_BFs0s_BFu0ll_BFs0s_BFs0c, "BFs0s_BFu0ll_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0s_BFs0i  {
  signed short  :0;
  __tsu64  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0s_BFs0i) C1{ Fs:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0s_BFs0i");
    static BFs0s_BFu0ll_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0s_BFs0i(Test_BFs0s_BFu0ll_BFs0s_BFs0i, "BFs0s_BFu0ll_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0s_BFs0ll  {
  signed short  :0;
  __tsu64  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0s_BFs0ll) C1{ Fs:0 FL:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0ll_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0s_BFs0ll");
    static BFs0s_BFu0ll_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0s_BFs0ll(Test_BFs0s_BFu0ll_BFs0s_BFs0ll, "BFs0s_BFu0ll_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0s_BFs0s  {
  signed short  :0;
  __tsu64  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0s_BFs0s) C1{ Fs:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0s_BFs0s");
    static BFs0s_BFu0ll_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0s_BFs0s(Test_BFs0s_BFu0ll_BFs0s_BFs0s, "BFs0s_BFu0ll_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0s_BFu0c  {
  signed short  :0;
  __tsu64  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0s_BFu0c) C1{ Fs:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0s_BFu0c");
    static BFs0s_BFu0ll_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0s_BFu0c(Test_BFs0s_BFu0ll_BFs0s_BFu0c, "BFs0s_BFu0ll_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0s_BFu0i  {
  signed short  :0;
  __tsu64  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0s_BFu0i) C1{ Fs:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0s_BFu0i");
    static BFs0s_BFu0ll_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0s_BFu0i(Test_BFs0s_BFu0ll_BFs0s_BFu0i, "BFs0s_BFu0ll_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0s_BFu0ll  {
  signed short  :0;
  __tsu64  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0s_BFu0ll) C1{ Fs:0 FL:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0ll_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0s_BFu0ll");
    static BFs0s_BFu0ll_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0s_BFu0ll(Test_BFs0s_BFu0ll_BFs0s_BFu0ll, "BFs0s_BFu0ll_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFs0s_BFu0s  {
  signed short  :0;
  __tsu64  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFs0s_BFu0s) C1{ Fs:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFs0s_BFu0s");
    static BFs0s_BFu0ll_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFs0s_BFu0s(Test_BFs0s_BFu0ll_BFs0s_BFu0s, "BFs0s_BFu0ll_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0c  {
  signed short  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0c) C1{ Fs:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0c");
    static BFs0s_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0c(Test_BFs0s_BFu0ll_BFu0c, "BFs0s_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0c_BFs0c  {
  signed short  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0c_BFs0c) C1{ Fs:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0c_BFs0c");
    static BFs0s_BFu0ll_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0c_BFs0c(Test_BFs0s_BFu0ll_BFu0c_BFs0c, "BFs0s_BFu0ll_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0c_BFs0i  {
  signed short  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0c_BFs0i) C1{ Fs:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0c_BFs0i");
    static BFs0s_BFu0ll_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0c_BFs0i(Test_BFs0s_BFu0ll_BFu0c_BFs0i, "BFs0s_BFu0ll_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0c_BFs0ll  {
  signed short  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0c_BFs0ll) C1{ Fs:0 FL:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0ll_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0c_BFs0ll");
    static BFs0s_BFu0ll_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0c_BFs0ll(Test_BFs0s_BFu0ll_BFu0c_BFs0ll, "BFs0s_BFu0ll_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0c_BFs0s  {
  signed short  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0c_BFs0s) C1{ Fs:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0c_BFs0s");
    static BFs0s_BFu0ll_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0c_BFs0s(Test_BFs0s_BFu0ll_BFu0c_BFs0s, "BFs0s_BFu0ll_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0c_BFu0c  {
  signed short  :0;
  __tsu64  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0c_BFu0c) C1{ Fs:0 FL:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0c_BFu0c");
    static BFs0s_BFu0ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0c_BFu0c(Test_BFs0s_BFu0ll_BFu0c_BFu0c, "BFs0s_BFu0ll_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0c_BFu0i  {
  signed short  :0;
  __tsu64  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0c_BFu0i) C1{ Fs:0 FL:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0c_BFu0i");
    static BFs0s_BFu0ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0c_BFu0i(Test_BFs0s_BFu0ll_BFu0c_BFu0i, "BFs0s_BFu0ll_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0c_BFu0ll  {
  signed short  :0;
  __tsu64  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0c_BFu0ll) C1{ Fs:0 FL:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0c_BFu0ll");
    static BFs0s_BFu0ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0c_BFu0ll(Test_BFs0s_BFu0ll_BFu0c_BFu0ll, "BFs0s_BFu0ll_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0c_BFu0s  {
  signed short  :0;
  __tsu64  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0c_BFu0s) C1{ Fs:0 FL:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0c_BFu0s");
    static BFs0s_BFu0ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0c_BFu0s(Test_BFs0s_BFu0ll_BFu0c_BFu0s, "BFs0s_BFu0ll_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0i  {
  signed short  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0i) C1{ Fs:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0i");
    static BFs0s_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0i(Test_BFs0s_BFu0ll_BFu0i, "BFs0s_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0i_BFs0c  {
  signed short  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0i_BFs0c) C1{ Fs:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0i_BFs0c");
    static BFs0s_BFu0ll_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0i_BFs0c(Test_BFs0s_BFu0ll_BFu0i_BFs0c, "BFs0s_BFu0ll_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0i_BFs0i  {
  signed short  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0i_BFs0i) C1{ Fs:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0i_BFs0i");
    static BFs0s_BFu0ll_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0i_BFs0i(Test_BFs0s_BFu0ll_BFu0i_BFs0i, "BFs0s_BFu0ll_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0i_BFs0ll  {
  signed short  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0i_BFs0ll) C1{ Fs:0 FL:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0ll_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0i_BFs0ll");
    static BFs0s_BFu0ll_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0i_BFs0ll(Test_BFs0s_BFu0ll_BFu0i_BFs0ll, "BFs0s_BFu0ll_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0i_BFs0s  {
  signed short  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0i_BFs0s) C1{ Fs:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0i_BFs0s");
    static BFs0s_BFu0ll_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0i_BFs0s(Test_BFs0s_BFu0ll_BFu0i_BFs0s, "BFs0s_BFu0ll_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0i_BFu0c  {
  signed short  :0;
  __tsu64  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0i_BFu0c) C1{ Fs:0 FL:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0i_BFu0c");
    static BFs0s_BFu0ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0i_BFu0c(Test_BFs0s_BFu0ll_BFu0i_BFu0c, "BFs0s_BFu0ll_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0i_BFu0i  {
  signed short  :0;
  __tsu64  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0i_BFu0i) C1{ Fs:0 FL:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0i_BFu0i");
    static BFs0s_BFu0ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0i_BFu0i(Test_BFs0s_BFu0ll_BFu0i_BFu0i, "BFs0s_BFu0ll_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0i_BFu0ll  {
  signed short  :0;
  __tsu64  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0i_BFu0ll) C1{ Fs:0 FL:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0i_BFu0ll");
    static BFs0s_BFu0ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0i_BFu0ll(Test_BFs0s_BFu0ll_BFu0i_BFu0ll, "BFs0s_BFu0ll_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0i_BFu0s  {
  signed short  :0;
  __tsu64  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0i_BFu0s) C1{ Fs:0 FL:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0i_BFu0s");
    static BFs0s_BFu0ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0i_BFu0s(Test_BFs0s_BFu0ll_BFu0i_BFu0s, "BFs0s_BFu0ll_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0ll  {
  signed short  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0ll) C1{ Fs:0 FL:0 FL:0}



static void Test_BFs0s_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0ll");
    static BFs0s_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0ll(Test_BFs0s_BFu0ll_BFu0ll, "BFs0s_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0ll_BFs0c  {
  signed short  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0ll_BFs0c) C1{ Fs:0 FL:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0ll_BFs0c");
    static BFs0s_BFu0ll_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0ll_BFs0c(Test_BFs0s_BFu0ll_BFu0ll_BFs0c, "BFs0s_BFu0ll_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0ll_BFs0i  {
  signed short  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0ll_BFs0i) C1{ Fs:0 FL:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0ll_BFs0i");
    static BFs0s_BFu0ll_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0ll_BFs0i(Test_BFs0s_BFu0ll_BFu0ll_BFs0i, "BFs0s_BFu0ll_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0ll_BFs0ll  {
  signed short  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0ll_BFs0ll) C1{ Fs:0 FL:0 FL:0 FL:0}



static void Test_BFs0s_BFu0ll_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0ll_BFs0ll");
    static BFs0s_BFu0ll_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0ll_BFs0ll(Test_BFs0s_BFu0ll_BFu0ll_BFs0ll, "BFs0s_BFu0ll_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0ll_BFs0s  {
  signed short  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0ll_BFs0s) C1{ Fs:0 FL:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0ll_BFs0s");
    static BFs0s_BFu0ll_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0ll_BFs0s(Test_BFs0s_BFu0ll_BFu0ll_BFs0s, "BFs0s_BFu0ll_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0ll_BFu0c  {
  signed short  :0;
  __tsu64  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0ll_BFu0c) C1{ Fs:0 FL:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0ll_BFu0c");
    static BFs0s_BFu0ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0ll_BFu0c(Test_BFs0s_BFu0ll_BFu0ll_BFu0c, "BFs0s_BFu0ll_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0ll_BFu0i  {
  signed short  :0;
  __tsu64  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0ll_BFu0i) C1{ Fs:0 FL:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0ll_BFu0i");
    static BFs0s_BFu0ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0ll_BFu0i(Test_BFs0s_BFu0ll_BFu0ll_BFu0i, "BFs0s_BFu0ll_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0ll_BFu0ll  {
  signed short  :0;
  __tsu64  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0ll_BFu0ll) C1{ Fs:0 FL:0 FL:0 FL:0}



static void Test_BFs0s_BFu0ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0ll_BFu0ll");
    static BFs0s_BFu0ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0ll_BFu0ll(Test_BFs0s_BFu0ll_BFu0ll_BFu0ll, "BFs0s_BFu0ll_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0ll_BFu0s  {
  signed short  :0;
  __tsu64  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0ll_BFu0s) C1{ Fs:0 FL:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0ll_BFu0s");
    static BFs0s_BFu0ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0ll_BFu0s(Test_BFs0s_BFu0ll_BFu0ll_BFu0s, "BFs0s_BFu0ll_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0s  {
  signed short  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0s) C1{ Fs:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0s");
    static BFs0s_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0s(Test_BFs0s_BFu0ll_BFu0s, "BFs0s_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0s_BFs0c  {
  signed short  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0s_BFs0c) C1{ Fs:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0s_BFs0c");
    static BFs0s_BFu0ll_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0s_BFs0c(Test_BFs0s_BFu0ll_BFu0s_BFs0c, "BFs0s_BFu0ll_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0s_BFs0i  {
  signed short  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0s_BFs0i) C1{ Fs:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0s_BFs0i");
    static BFs0s_BFu0ll_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0s_BFs0i(Test_BFs0s_BFu0ll_BFu0s_BFs0i, "BFs0s_BFu0ll_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0s_BFs0ll  {
  signed short  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0s_BFs0ll) C1{ Fs:0 FL:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0ll_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0s_BFs0ll");
    static BFs0s_BFu0ll_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0s_BFs0ll(Test_BFs0s_BFu0ll_BFu0s_BFs0ll, "BFs0s_BFu0ll_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0s_BFs0s  {
  signed short  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0s_BFs0s) C1{ Fs:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0s_BFs0s");
    static BFs0s_BFu0ll_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0s_BFs0s(Test_BFs0s_BFu0ll_BFu0s_BFs0s, "BFs0s_BFu0ll_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0s_BFu0c  {
  signed short  :0;
  __tsu64  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0s_BFu0c) C1{ Fs:0 FL:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0ll_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0s_BFu0c");
    static BFs0s_BFu0ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0s_BFu0c(Test_BFs0s_BFu0ll_BFu0s_BFu0c, "BFs0s_BFu0ll_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0s_BFu0i  {
  signed short  :0;
  __tsu64  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0s_BFu0i) C1{ Fs:0 FL:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0ll_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0s_BFu0i");
    static BFs0s_BFu0ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0s_BFu0i(Test_BFs0s_BFu0ll_BFu0s_BFu0i, "BFs0s_BFu0ll_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0s_BFu0ll  {
  signed short  :0;
  __tsu64  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0s_BFu0ll) C1{ Fs:0 FL:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0s_BFu0ll");
    static BFs0s_BFu0ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0s_BFu0ll(Test_BFs0s_BFu0ll_BFu0s_BFu0ll, "BFs0s_BFu0ll_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0ll_BFu0s_BFu0s  {
  signed short  :0;
  __tsu64  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0ll_BFu0s_BFu0s) C1{ Fs:0 FL:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0ll_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0ll_BFu0s_BFu0s");
    static BFs0s_BFu0ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0ll_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0ll_BFu0s_BFu0s(Test_BFs0s_BFu0ll_BFu0s_BFu0s, "BFs0s_BFu0ll_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s  {
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0s) C1{ Fs:0 Fs:0}



static void Test_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0s");
    static BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s(Test_BFs0s_BFu0s, "BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0c  {
  signed short  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0c) C1{ Fs:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0c");
    static BFs0s_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0c(Test_BFs0s_BFu0s_BFs0c, "BFs0s_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0c_BFs0c  {
  signed short  :0;
  unsigned short  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0c_BFs0c) C1{ Fs:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0s_BFs0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0c_BFs0c");
    static BFs0s_BFu0s_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0c_BFs0c(Test_BFs0s_BFu0s_BFs0c_BFs0c, "BFs0s_BFu0s_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0c_BFs0i  {
  signed short  :0;
  unsigned short  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0c_BFs0i) C1{ Fs:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0s_BFs0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0c_BFs0i");
    static BFs0s_BFu0s_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0c_BFs0i(Test_BFs0s_BFu0s_BFs0c_BFs0i, "BFs0s_BFu0s_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0c_BFs0ll  {
  signed short  :0;
  unsigned short  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0c_BFs0ll) C1{ Fs:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0s_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0c_BFs0ll");
    static BFs0s_BFu0s_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0c_BFs0ll(Test_BFs0s_BFu0s_BFs0c_BFs0ll, "BFs0s_BFu0s_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0c_BFs0s  {
  signed short  :0;
  unsigned short  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0c_BFs0s) C1{ Fs:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0s_BFs0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0c_BFs0s");
    static BFs0s_BFu0s_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0c_BFs0s(Test_BFs0s_BFu0s_BFs0c_BFs0s, "BFs0s_BFu0s_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0c_BFu0c  {
  signed short  :0;
  unsigned short  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0c_BFu0c) C1{ Fs:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0s_BFs0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0c_BFu0c");
    static BFs0s_BFu0s_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0c_BFu0c(Test_BFs0s_BFu0s_BFs0c_BFu0c, "BFs0s_BFu0s_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0c_BFu0i  {
  signed short  :0;
  unsigned short  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0c_BFu0i) C1{ Fs:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0s_BFs0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0c_BFu0i");
    static BFs0s_BFu0s_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0c_BFu0i(Test_BFs0s_BFu0s_BFs0c_BFu0i, "BFs0s_BFu0s_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0c_BFu0ll  {
  signed short  :0;
  unsigned short  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0c_BFu0ll) C1{ Fs:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0s_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0c_BFu0ll");
    static BFs0s_BFu0s_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0c_BFu0ll(Test_BFs0s_BFu0s_BFs0c_BFu0ll, "BFs0s_BFu0s_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0c_BFu0s  {
  signed short  :0;
  unsigned short  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0c_BFu0s) C1{ Fs:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0s_BFs0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0c_BFu0s");
    static BFs0s_BFu0s_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0c_BFu0s(Test_BFs0s_BFu0s_BFs0c_BFu0s, "BFs0s_BFu0s_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0i  {
  signed short  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0i) C1{ Fs:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0i");
    static BFs0s_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0i(Test_BFs0s_BFu0s_BFs0i, "BFs0s_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0i_BFs0c  {
  signed short  :0;
  unsigned short  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0i_BFs0c) C1{ Fs:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0s_BFs0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0i_BFs0c");
    static BFs0s_BFu0s_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0i_BFs0c(Test_BFs0s_BFu0s_BFs0i_BFs0c, "BFs0s_BFu0s_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0i_BFs0i  {
  signed short  :0;
  unsigned short  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0i_BFs0i) C1{ Fs:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0s_BFs0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0i_BFs0i");
    static BFs0s_BFu0s_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0i_BFs0i(Test_BFs0s_BFu0s_BFs0i_BFs0i, "BFs0s_BFu0s_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0i_BFs0ll  {
  signed short  :0;
  unsigned short  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0i_BFs0ll) C1{ Fs:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0s_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0i_BFs0ll");
    static BFs0s_BFu0s_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0i_BFs0ll(Test_BFs0s_BFu0s_BFs0i_BFs0ll, "BFs0s_BFu0s_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0i_BFs0s  {
  signed short  :0;
  unsigned short  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0i_BFs0s) C1{ Fs:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0s_BFs0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0i_BFs0s");
    static BFs0s_BFu0s_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0i_BFs0s(Test_BFs0s_BFu0s_BFs0i_BFs0s, "BFs0s_BFu0s_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0i_BFu0c  {
  signed short  :0;
  unsigned short  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0i_BFu0c) C1{ Fs:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0s_BFs0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0i_BFu0c");
    static BFs0s_BFu0s_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0i_BFu0c(Test_BFs0s_BFu0s_BFs0i_BFu0c, "BFs0s_BFu0s_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0i_BFu0i  {
  signed short  :0;
  unsigned short  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0i_BFu0i) C1{ Fs:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0s_BFs0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0i_BFu0i");
    static BFs0s_BFu0s_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0i_BFu0i(Test_BFs0s_BFu0s_BFs0i_BFu0i, "BFs0s_BFu0s_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0i_BFu0ll  {
  signed short  :0;
  unsigned short  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0i_BFu0ll) C1{ Fs:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0s_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0i_BFu0ll");
    static BFs0s_BFu0s_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0i_BFu0ll(Test_BFs0s_BFu0s_BFs0i_BFu0ll, "BFs0s_BFu0s_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0i_BFu0s  {
  signed short  :0;
  unsigned short  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0i_BFu0s) C1{ Fs:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0s_BFs0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0i_BFu0s");
    static BFs0s_BFu0s_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0i_BFu0s(Test_BFs0s_BFu0s_BFs0i_BFu0s, "BFs0s_BFu0s_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0ll  {
  signed short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0ll) C1{ Fs:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0ll");
    static BFs0s_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0ll(Test_BFs0s_BFu0s_BFs0ll, "BFs0s_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0ll_BFs0c  {
  signed short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0ll_BFs0c) C1{ Fs:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0s_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0ll_BFs0c");
    static BFs0s_BFu0s_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0ll_BFs0c(Test_BFs0s_BFu0s_BFs0ll_BFs0c, "BFs0s_BFu0s_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0ll_BFs0i  {
  signed short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0ll_BFs0i) C1{ Fs:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0s_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0ll_BFs0i");
    static BFs0s_BFu0s_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0ll_BFs0i(Test_BFs0s_BFu0s_BFs0ll_BFs0i, "BFs0s_BFu0s_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0ll_BFs0ll  {
  signed short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0ll_BFs0ll) C1{ Fs:0 Fs:0 FL:0 FL:0}



static void Test_BFs0s_BFu0s_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0ll_BFs0ll");
    static BFs0s_BFu0s_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0ll_BFs0ll(Test_BFs0s_BFu0s_BFs0ll_BFs0ll, "BFs0s_BFu0s_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0ll_BFs0s  {
  signed short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0ll_BFs0s) C1{ Fs:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0s_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0ll_BFs0s");
    static BFs0s_BFu0s_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0ll_BFs0s(Test_BFs0s_BFu0s_BFs0ll_BFs0s, "BFs0s_BFu0s_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0ll_BFu0c  {
  signed short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0ll_BFu0c) C1{ Fs:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0s_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0ll_BFu0c");
    static BFs0s_BFu0s_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0ll_BFu0c(Test_BFs0s_BFu0s_BFs0ll_BFu0c, "BFs0s_BFu0s_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0ll_BFu0i  {
  signed short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0ll_BFu0i) C1{ Fs:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0s_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0ll_BFu0i");
    static BFs0s_BFu0s_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0ll_BFu0i(Test_BFs0s_BFu0s_BFs0ll_BFu0i, "BFs0s_BFu0s_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0ll_BFu0ll  {
  signed short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0ll_BFu0ll) C1{ Fs:0 Fs:0 FL:0 FL:0}



static void Test_BFs0s_BFu0s_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0ll_BFu0ll");
    static BFs0s_BFu0s_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0ll_BFu0ll(Test_BFs0s_BFu0s_BFs0ll_BFu0ll, "BFs0s_BFu0s_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0ll_BFu0s  {
  signed short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0ll_BFu0s) C1{ Fs:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0s_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0ll_BFu0s");
    static BFs0s_BFu0s_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0ll_BFu0s(Test_BFs0s_BFu0s_BFs0ll_BFu0s, "BFs0s_BFu0s_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0s  {
  signed short  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0s) C1{ Fs:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0s");
    static BFs0s_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0s(Test_BFs0s_BFu0s_BFs0s, "BFs0s_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0s_BFs0c  {
  signed short  :0;
  unsigned short  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0s_BFs0c) C1{ Fs:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0s_BFs0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0s_BFs0c");
    static BFs0s_BFu0s_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0s_BFs0c(Test_BFs0s_BFu0s_BFs0s_BFs0c, "BFs0s_BFu0s_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0s_BFs0i  {
  signed short  :0;
  unsigned short  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0s_BFs0i) C1{ Fs:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0s_BFs0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0s_BFs0i");
    static BFs0s_BFu0s_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0s_BFs0i(Test_BFs0s_BFu0s_BFs0s_BFs0i, "BFs0s_BFu0s_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0s_BFs0ll  {
  signed short  :0;
  unsigned short  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0s_BFs0ll) C1{ Fs:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0s_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0s_BFs0ll");
    static BFs0s_BFu0s_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0s_BFs0ll(Test_BFs0s_BFu0s_BFs0s_BFs0ll, "BFs0s_BFu0s_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0s_BFs0s  {
  signed short  :0;
  unsigned short  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0s_BFs0s) C1{ Fs:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0s_BFs0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0s_BFs0s");
    static BFs0s_BFu0s_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0s_BFs0s(Test_BFs0s_BFu0s_BFs0s_BFs0s, "BFs0s_BFu0s_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0s_BFu0c  {
  signed short  :0;
  unsigned short  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0s_BFu0c) C1{ Fs:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0s_BFs0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0s_BFu0c");
    static BFs0s_BFu0s_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0s_BFu0c(Test_BFs0s_BFu0s_BFs0s_BFu0c, "BFs0s_BFu0s_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0s_BFu0i  {
  signed short  :0;
  unsigned short  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0s_BFu0i) C1{ Fs:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0s_BFs0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0s_BFu0i");
    static BFs0s_BFu0s_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0s_BFu0i(Test_BFs0s_BFu0s_BFs0s_BFu0i, "BFs0s_BFu0s_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0s_BFu0ll  {
  signed short  :0;
  unsigned short  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0s_BFu0ll) C1{ Fs:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0s_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0s_BFu0ll");
    static BFs0s_BFu0s_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0s_BFu0ll(Test_BFs0s_BFu0s_BFs0s_BFu0ll, "BFs0s_BFu0s_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFs0s_BFu0s  {
  signed short  :0;
  unsigned short  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0s_BFs0s_BFu0s) C1{ Fs:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0s_BFs0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFs0s_BFu0s");
    static BFs0s_BFu0s_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFs0s_BFu0s(Test_BFs0s_BFu0s_BFs0s_BFu0s, "BFs0s_BFu0s_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0c  {
  signed short  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0c) C1{ Fs:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0c");
    static BFs0s_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0c(Test_BFs0s_BFu0s_BFu0c, "BFs0s_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0c_BFs0c  {
  signed short  :0;
  unsigned short  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0c_BFs0c) C1{ Fs:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0s_BFu0c_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0c_BFs0c");
    static BFs0s_BFu0s_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0c_BFs0c(Test_BFs0s_BFu0s_BFu0c_BFs0c, "BFs0s_BFu0s_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0c_BFs0i  {
  signed short  :0;
  unsigned short  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0c_BFs0i) C1{ Fs:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0s_BFu0c_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0c_BFs0i");
    static BFs0s_BFu0s_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0c_BFs0i(Test_BFs0s_BFu0s_BFu0c_BFs0i, "BFs0s_BFu0s_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0c_BFs0ll  {
  signed short  :0;
  unsigned short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0c_BFs0ll) C1{ Fs:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0s_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0c_BFs0ll");
    static BFs0s_BFu0s_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0c_BFs0ll(Test_BFs0s_BFu0s_BFu0c_BFs0ll, "BFs0s_BFu0s_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0c_BFs0s  {
  signed short  :0;
  unsigned short  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0c_BFs0s) C1{ Fs:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0s_BFu0c_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0c_BFs0s");
    static BFs0s_BFu0s_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0c_BFs0s(Test_BFs0s_BFu0s_BFu0c_BFs0s, "BFs0s_BFu0s_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0c_BFu0c  {
  signed short  :0;
  unsigned short  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0c_BFu0c) C1{ Fs:0 Fs:0 Fc:0 Fc:0}



static void Test_BFs0s_BFu0s_BFu0c_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0c_BFu0c");
    static BFs0s_BFu0s_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0c_BFu0c(Test_BFs0s_BFu0s_BFu0c_BFu0c, "BFs0s_BFu0s_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0c_BFu0i  {
  signed short  :0;
  unsigned short  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0c_BFu0i) C1{ Fs:0 Fs:0 Fc:0 Fi:0}



static void Test_BFs0s_BFu0s_BFu0c_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0c_BFu0i");
    static BFs0s_BFu0s_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0c_BFu0i(Test_BFs0s_BFu0s_BFu0c_BFu0i, "BFs0s_BFu0s_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0c_BFu0ll  {
  signed short  :0;
  unsigned short  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0c_BFu0ll) C1{ Fs:0 Fs:0 Fc:0 FL:0}



static void Test_BFs0s_BFu0s_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0c_BFu0ll");
    static BFs0s_BFu0s_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0c_BFu0ll(Test_BFs0s_BFu0s_BFu0c_BFu0ll, "BFs0s_BFu0s_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0c_BFu0s  {
  signed short  :0;
  unsigned short  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0c_BFu0s) C1{ Fs:0 Fs:0 Fc:0 Fs:0}



static void Test_BFs0s_BFu0s_BFu0c_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0c_BFu0s");
    static BFs0s_BFu0s_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0c_BFu0s(Test_BFs0s_BFu0s_BFu0c_BFu0s, "BFs0s_BFu0s_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0i  {
  signed short  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0i) C1{ Fs:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0i");
    static BFs0s_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0i(Test_BFs0s_BFu0s_BFu0i, "BFs0s_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0i_BFs0c  {
  signed short  :0;
  unsigned short  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0i_BFs0c) C1{ Fs:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0s_BFu0i_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0i_BFs0c");
    static BFs0s_BFu0s_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0i_BFs0c(Test_BFs0s_BFu0s_BFu0i_BFs0c, "BFs0s_BFu0s_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0i_BFs0i  {
  signed short  :0;
  unsigned short  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0i_BFs0i) C1{ Fs:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0s_BFu0i_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0i_BFs0i");
    static BFs0s_BFu0s_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0i_BFs0i(Test_BFs0s_BFu0s_BFu0i_BFs0i, "BFs0s_BFu0s_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0i_BFs0ll  {
  signed short  :0;
  unsigned short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0i_BFs0ll) C1{ Fs:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0s_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0i_BFs0ll");
    static BFs0s_BFu0s_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0i_BFs0ll(Test_BFs0s_BFu0s_BFu0i_BFs0ll, "BFs0s_BFu0s_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0i_BFs0s  {
  signed short  :0;
  unsigned short  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0i_BFs0s) C1{ Fs:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0s_BFu0i_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0i_BFs0s");
    static BFs0s_BFu0s_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0i_BFs0s(Test_BFs0s_BFu0s_BFu0i_BFs0s, "BFs0s_BFu0s_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0i_BFu0c  {
  signed short  :0;
  unsigned short  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0i_BFu0c) C1{ Fs:0 Fs:0 Fi:0 Fc:0}



static void Test_BFs0s_BFu0s_BFu0i_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0i_BFu0c");
    static BFs0s_BFu0s_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0i_BFu0c(Test_BFs0s_BFu0s_BFu0i_BFu0c, "BFs0s_BFu0s_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0i_BFu0i  {
  signed short  :0;
  unsigned short  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0i_BFu0i) C1{ Fs:0 Fs:0 Fi:0 Fi:0}



static void Test_BFs0s_BFu0s_BFu0i_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0i_BFu0i");
    static BFs0s_BFu0s_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0i_BFu0i(Test_BFs0s_BFu0s_BFu0i_BFu0i, "BFs0s_BFu0s_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0i_BFu0ll  {
  signed short  :0;
  unsigned short  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0i_BFu0ll) C1{ Fs:0 Fs:0 Fi:0 FL:0}



static void Test_BFs0s_BFu0s_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0i_BFu0ll");
    static BFs0s_BFu0s_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0i_BFu0ll(Test_BFs0s_BFu0s_BFu0i_BFu0ll, "BFs0s_BFu0s_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0i_BFu0s  {
  signed short  :0;
  unsigned short  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0i_BFu0s) C1{ Fs:0 Fs:0 Fi:0 Fs:0}



static void Test_BFs0s_BFu0s_BFu0i_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0i_BFu0s");
    static BFs0s_BFu0s_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0i_BFu0s(Test_BFs0s_BFu0s_BFu0i_BFu0s, "BFs0s_BFu0s_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0ll  {
  signed short  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0ll) C1{ Fs:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0ll");
    static BFs0s_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0ll(Test_BFs0s_BFu0s_BFu0ll, "BFs0s_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0ll_BFs0c  {
  signed short  :0;
  unsigned short  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0ll_BFs0c) C1{ Fs:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0s_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0ll_BFs0c");
    static BFs0s_BFu0s_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0ll_BFs0c(Test_BFs0s_BFu0s_BFu0ll_BFs0c, "BFs0s_BFu0s_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0ll_BFs0i  {
  signed short  :0;
  unsigned short  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0ll_BFs0i) C1{ Fs:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0s_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0ll_BFs0i");
    static BFs0s_BFu0s_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0ll_BFs0i(Test_BFs0s_BFu0s_BFu0ll_BFs0i, "BFs0s_BFu0s_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0ll_BFs0ll  {
  signed short  :0;
  unsigned short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0ll_BFs0ll) C1{ Fs:0 Fs:0 FL:0 FL:0}



static void Test_BFs0s_BFu0s_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0ll_BFs0ll");
    static BFs0s_BFu0s_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0ll_BFs0ll(Test_BFs0s_BFu0s_BFu0ll_BFs0ll, "BFs0s_BFu0s_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0ll_BFs0s  {
  signed short  :0;
  unsigned short  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0ll_BFs0s) C1{ Fs:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0s_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0ll_BFs0s");
    static BFs0s_BFu0s_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0ll_BFs0s(Test_BFs0s_BFu0s_BFu0ll_BFs0s, "BFs0s_BFu0s_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0ll_BFu0c  {
  signed short  :0;
  unsigned short  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0ll_BFu0c) C1{ Fs:0 Fs:0 FL:0 Fc:0}



static void Test_BFs0s_BFu0s_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0ll_BFu0c");
    static BFs0s_BFu0s_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0ll_BFu0c(Test_BFs0s_BFu0s_BFu0ll_BFu0c, "BFs0s_BFu0s_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0ll_BFu0i  {
  signed short  :0;
  unsigned short  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0ll_BFu0i) C1{ Fs:0 Fs:0 FL:0 Fi:0}



static void Test_BFs0s_BFu0s_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0ll_BFu0i");
    static BFs0s_BFu0s_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0ll_BFu0i(Test_BFs0s_BFu0s_BFu0ll_BFu0i, "BFs0s_BFu0s_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0ll_BFu0ll  {
  signed short  :0;
  unsigned short  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0ll_BFu0ll) C1{ Fs:0 Fs:0 FL:0 FL:0}



static void Test_BFs0s_BFu0s_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0ll_BFu0ll");
    static BFs0s_BFu0s_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0ll_BFu0ll(Test_BFs0s_BFu0s_BFu0ll_BFu0ll, "BFs0s_BFu0s_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0ll_BFu0s  {
  signed short  :0;
  unsigned short  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0ll_BFu0s) C1{ Fs:0 Fs:0 FL:0 Fs:0}



static void Test_BFs0s_BFu0s_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0ll_BFu0s");
    static BFs0s_BFu0s_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0ll_BFu0s(Test_BFs0s_BFu0s_BFu0ll_BFu0s, "BFs0s_BFu0s_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0s  {
  signed short  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0s) C1{ Fs:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0s");
    static BFs0s_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0s(Test_BFs0s_BFu0s_BFu0s, "BFs0s_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0s_BFs0c  {
  signed short  :0;
  unsigned short  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0s_BFs0c) C1{ Fs:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0s_BFu0s_BFs0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0s_BFs0c");
    static BFs0s_BFu0s_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0s_BFs0c(Test_BFs0s_BFu0s_BFu0s_BFs0c, "BFs0s_BFu0s_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0s_BFs0i  {
  signed short  :0;
  unsigned short  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0s_BFs0i) C1{ Fs:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0s_BFu0s_BFs0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0s_BFs0i");
    static BFs0s_BFu0s_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0s_BFs0i(Test_BFs0s_BFu0s_BFu0s_BFs0i, "BFs0s_BFu0s_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0s_BFs0ll  {
  signed short  :0;
  unsigned short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0s_BFs0ll) C1{ Fs:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0s_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0s_BFs0ll");
    static BFs0s_BFu0s_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0s_BFs0ll(Test_BFs0s_BFu0s_BFu0s_BFs0ll, "BFs0s_BFu0s_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0s_BFs0s  {
  signed short  :0;
  unsigned short  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0s_BFs0s) C1{ Fs:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0s_BFu0s_BFs0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0s_BFs0s");
    static BFs0s_BFu0s_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0s_BFs0s(Test_BFs0s_BFu0s_BFu0s_BFs0s, "BFs0s_BFu0s_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0s_BFu0c  {
  signed short  :0;
  unsigned short  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0s_BFu0c) C1{ Fs:0 Fs:0 Fs:0 Fc:0}



static void Test_BFs0s_BFu0s_BFu0s_BFu0c()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0s_BFu0c");
    static BFs0s_BFu0s_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0s_BFu0c(Test_BFs0s_BFu0s_BFu0s_BFu0c, "BFs0s_BFu0s_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0s_BFu0i  {
  signed short  :0;
  unsigned short  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0s_BFu0i) C1{ Fs:0 Fs:0 Fs:0 Fi:0}



static void Test_BFs0s_BFu0s_BFu0s_BFu0i()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0s_BFu0i");
    static BFs0s_BFu0s_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0s_BFu0i(Test_BFs0s_BFu0s_BFu0s_BFu0i, "BFs0s_BFu0s_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0s_BFu0ll  {
  signed short  :0;
  unsigned short  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0s_BFu0ll) C1{ Fs:0 Fs:0 Fs:0 FL:0}



static void Test_BFs0s_BFu0s_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0s_BFu0ll");
    static BFs0s_BFu0s_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0s_BFu0ll(Test_BFs0s_BFu0s_BFu0s_BFu0ll, "BFs0s_BFu0s_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFs0s_BFu0s_BFu0s_BFu0s  {
  signed short  :0;
  unsigned short  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFs0s_BFu0s_BFu0s_BFu0s) C1{ Fs:0 Fs:0 Fs:0 Fs:0}



static void Test_BFs0s_BFu0s_BFu0s_BFu0s()
{
  {
    init_simple_test("BFs0s_BFu0s_BFu0s_BFu0s");
    static BFs0s_BFu0s_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFs0s_BFu0s_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFs0s_BFu0s_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFs0s_BFu0s_BFu0s_BFu0s(Test_BFs0s_BFu0s_BFu0s_BFu0s, "BFs0s_BFu0s_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c  {
  unsigned char  :0;
};
//SIG(1 BFu0c) C1{ Fc:0}



static void Test_BFu0c()
{
  {
    init_simple_test("BFu0c");
    static BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c(Test_BFu0c, "BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c  {
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0c) C1{ Fc:0 Fc:0}



static void Test_BFu0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0c");
    static BFu0c_BFs0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFs0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c(Test_BFu0c_BFs0c, "BFu0c_BFs0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0c  {
  unsigned char  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0c) C1{ Fc:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0c");
    static BFu0c_BFs0c_BFs0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFs0c_BFs0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0c(Test_BFu0c_BFs0c_BFs0c, "BFu0c_BFs0c_BFs0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0c_BFs0c  {
  unsigned char  :0;
  signed char  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0c_BFs0c) C1{ Fc:0 Fc:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0c_BFs0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0c_BFs0c");
    static BFu0c_BFs0c_BFs0c_BFs0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFs0c_BFs0c_BFs0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFs0c_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0c_BFs0c(Test_BFu0c_BFs0c_BFs0c_BFs0c, "BFu0c_BFs0c_BFs0c_BFs0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0c_BFs0i  {
  unsigned char  :0;
  signed char  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0c_BFs0i) C1{ Fc:0 Fc:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0c_BFs0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0c_BFs0i");
    static BFu0c_BFs0c_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0c_BFs0i(Test_BFu0c_BFs0c_BFs0c_BFs0i, "BFu0c_BFs0c_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0c_BFs0ll  {
  unsigned char  :0;
  signed char  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0c_BFs0ll) C1{ Fc:0 Fc:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0c_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0c_BFs0ll");
    static BFu0c_BFs0c_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0c_BFs0ll(Test_BFu0c_BFs0c_BFs0c_BFs0ll, "BFu0c_BFs0c_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0c_BFs0s  {
  unsigned char  :0;
  signed char  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0c_BFs0s) C1{ Fc:0 Fc:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0c_BFs0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0c_BFs0s");
    static BFu0c_BFs0c_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0c_BFs0s(Test_BFu0c_BFs0c_BFs0c_BFs0s, "BFu0c_BFs0c_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0c_BFu0c  {
  unsigned char  :0;
  signed char  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0c_BFu0c) C1{ Fc:0 Fc:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0c_BFs0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0c_BFu0c");
    static BFu0c_BFs0c_BFs0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFs0c_BFs0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFs0c_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0c_BFu0c(Test_BFu0c_BFs0c_BFs0c_BFu0c, "BFu0c_BFs0c_BFs0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0c_BFu0i  {
  unsigned char  :0;
  signed char  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0c_BFu0i) C1{ Fc:0 Fc:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0c_BFs0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0c_BFu0i");
    static BFu0c_BFs0c_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0c_BFu0i(Test_BFu0c_BFs0c_BFs0c_BFu0i, "BFu0c_BFs0c_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0c_BFu0ll  {
  unsigned char  :0;
  signed char  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0c_BFu0ll) C1{ Fc:0 Fc:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0c_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0c_BFu0ll");
    static BFu0c_BFs0c_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0c_BFu0ll(Test_BFu0c_BFs0c_BFs0c_BFu0ll, "BFu0c_BFs0c_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0c_BFu0s  {
  unsigned char  :0;
  signed char  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0c_BFu0s) C1{ Fc:0 Fc:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0c_BFs0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0c_BFu0s");
    static BFu0c_BFs0c_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0c_BFu0s(Test_BFu0c_BFs0c_BFs0c_BFu0s, "BFu0c_BFs0c_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0i  {
  unsigned char  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0i) C1{ Fc:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0i");
    static BFu0c_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0i(Test_BFu0c_BFs0c_BFs0i, "BFu0c_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0i_BFs0c  {
  unsigned char  :0;
  signed char  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0i_BFs0c) C1{ Fc:0 Fc:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0c_BFs0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0i_BFs0c");
    static BFu0c_BFs0c_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0i_BFs0c(Test_BFu0c_BFs0c_BFs0i_BFs0c, "BFu0c_BFs0c_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0i_BFs0i  {
  unsigned char  :0;
  signed char  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0i_BFs0i) C1{ Fc:0 Fc:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0c_BFs0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0i_BFs0i");
    static BFu0c_BFs0c_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0i_BFs0i(Test_BFu0c_BFs0c_BFs0i_BFs0i, "BFu0c_BFs0c_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0i_BFs0ll  {
  unsigned char  :0;
  signed char  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0i_BFs0ll) C1{ Fc:0 Fc:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0c_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0i_BFs0ll");
    static BFu0c_BFs0c_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0i_BFs0ll(Test_BFu0c_BFs0c_BFs0i_BFs0ll, "BFu0c_BFs0c_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0i_BFs0s  {
  unsigned char  :0;
  signed char  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0i_BFs0s) C1{ Fc:0 Fc:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0c_BFs0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0i_BFs0s");
    static BFu0c_BFs0c_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0i_BFs0s(Test_BFu0c_BFs0c_BFs0i_BFs0s, "BFu0c_BFs0c_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0i_BFu0c  {
  unsigned char  :0;
  signed char  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0i_BFu0c) C1{ Fc:0 Fc:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0c_BFs0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0i_BFu0c");
    static BFu0c_BFs0c_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0i_BFu0c(Test_BFu0c_BFs0c_BFs0i_BFu0c, "BFu0c_BFs0c_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0i_BFu0i  {
  unsigned char  :0;
  signed char  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0i_BFu0i) C1{ Fc:0 Fc:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0c_BFs0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0i_BFu0i");
    static BFu0c_BFs0c_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0i_BFu0i(Test_BFu0c_BFs0c_BFs0i_BFu0i, "BFu0c_BFs0c_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0i_BFu0ll  {
  unsigned char  :0;
  signed char  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0i_BFu0ll) C1{ Fc:0 Fc:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0c_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0i_BFu0ll");
    static BFu0c_BFs0c_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0i_BFu0ll(Test_BFu0c_BFs0c_BFs0i_BFu0ll, "BFu0c_BFs0c_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0i_BFu0s  {
  unsigned char  :0;
  signed char  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0i_BFu0s) C1{ Fc:0 Fc:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0c_BFs0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0i_BFu0s");
    static BFu0c_BFs0c_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0i_BFu0s(Test_BFu0c_BFs0c_BFs0i_BFu0s, "BFu0c_BFs0c_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0ll  {
  unsigned char  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0ll) C1{ Fc:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0ll");
    static BFu0c_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0ll(Test_BFu0c_BFs0c_BFs0ll, "BFu0c_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0ll_BFs0c  {
  unsigned char  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0ll_BFs0c) C1{ Fc:0 Fc:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0c_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0ll_BFs0c");
    static BFu0c_BFs0c_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0ll_BFs0c(Test_BFu0c_BFs0c_BFs0ll_BFs0c, "BFu0c_BFs0c_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0ll_BFs0i  {
  unsigned char  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0ll_BFs0i) C1{ Fc:0 Fc:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0c_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0ll_BFs0i");
    static BFu0c_BFs0c_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0ll_BFs0i(Test_BFu0c_BFs0c_BFs0ll_BFs0i, "BFu0c_BFs0c_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0ll_BFs0ll  {
  unsigned char  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0ll_BFs0ll) C1{ Fc:0 Fc:0 FL:0 FL:0}



static void Test_BFu0c_BFs0c_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0ll_BFs0ll");
    static BFu0c_BFs0c_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0ll_BFs0ll(Test_BFu0c_BFs0c_BFs0ll_BFs0ll, "BFu0c_BFs0c_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0ll_BFs0s  {
  unsigned char  :0;
  signed char  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0ll_BFs0s) C1{ Fc:0 Fc:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0c_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0ll_BFs0s");
    static BFu0c_BFs0c_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0ll_BFs0s(Test_BFu0c_BFs0c_BFs0ll_BFs0s, "BFu0c_BFs0c_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0ll_BFu0c  {
  unsigned char  :0;
  signed char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0ll_BFu0c) C1{ Fc:0 Fc:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0c_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0ll_BFu0c");
    static BFu0c_BFs0c_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0ll_BFu0c(Test_BFu0c_BFs0c_BFs0ll_BFu0c, "BFu0c_BFs0c_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0ll_BFu0i  {
  unsigned char  :0;
  signed char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0ll_BFu0i) C1{ Fc:0 Fc:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0c_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0ll_BFu0i");
    static BFu0c_BFs0c_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0ll_BFu0i(Test_BFu0c_BFs0c_BFs0ll_BFu0i, "BFu0c_BFs0c_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0ll_BFu0ll  {
  unsigned char  :0;
  signed char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0ll_BFu0ll) C1{ Fc:0 Fc:0 FL:0 FL:0}



static void Test_BFu0c_BFs0c_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0ll_BFu0ll");
    static BFu0c_BFs0c_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0ll_BFu0ll(Test_BFu0c_BFs0c_BFs0ll_BFu0ll, "BFu0c_BFs0c_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0ll_BFu0s  {
  unsigned char  :0;
  signed char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0ll_BFu0s) C1{ Fc:0 Fc:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0c_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0ll_BFu0s");
    static BFu0c_BFs0c_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0ll_BFu0s(Test_BFu0c_BFs0c_BFs0ll_BFu0s, "BFu0c_BFs0c_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0s  {
  unsigned char  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0s) C1{ Fc:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0s");
    static BFu0c_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0s(Test_BFu0c_BFs0c_BFs0s, "BFu0c_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0s_BFs0c  {
  unsigned char  :0;
  signed char  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0s_BFs0c) C1{ Fc:0 Fc:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0c_BFs0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0s_BFs0c");
    static BFu0c_BFs0c_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0s_BFs0c(Test_BFu0c_BFs0c_BFs0s_BFs0c, "BFu0c_BFs0c_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0s_BFs0i  {
  unsigned char  :0;
  signed char  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0s_BFs0i) C1{ Fc:0 Fc:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0c_BFs0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0s_BFs0i");
    static BFu0c_BFs0c_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0s_BFs0i(Test_BFu0c_BFs0c_BFs0s_BFs0i, "BFu0c_BFs0c_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0s_BFs0ll  {
  unsigned char  :0;
  signed char  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0s_BFs0ll) C1{ Fc:0 Fc:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0c_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0s_BFs0ll");
    static BFu0c_BFs0c_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0s_BFs0ll(Test_BFu0c_BFs0c_BFs0s_BFs0ll, "BFu0c_BFs0c_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0s_BFs0s  {
  unsigned char  :0;
  signed char  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0s_BFs0s) C1{ Fc:0 Fc:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0c_BFs0s_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0s_BFs0s");
    static BFu0c_BFs0c_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0s_BFs0s(Test_BFu0c_BFs0c_BFs0s_BFs0s, "BFu0c_BFs0c_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0s_BFu0c  {
  unsigned char  :0;
  signed char  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0s_BFu0c) C1{ Fc:0 Fc:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0c_BFs0s_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0s_BFu0c");
    static BFu0c_BFs0c_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0s_BFu0c(Test_BFu0c_BFs0c_BFs0s_BFu0c, "BFu0c_BFs0c_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0s_BFu0i  {
  unsigned char  :0;
  signed char  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0s_BFu0i) C1{ Fc:0 Fc:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0c_BFs0s_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0s_BFu0i");
    static BFu0c_BFs0c_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0s_BFu0i(Test_BFu0c_BFs0c_BFs0s_BFu0i, "BFu0c_BFs0c_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0s_BFu0ll  {
  unsigned char  :0;
  signed char  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0s_BFu0ll) C1{ Fc:0 Fc:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0c_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0s_BFu0ll");
    static BFu0c_BFs0c_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0s_BFu0ll(Test_BFu0c_BFs0c_BFs0s_BFu0ll, "BFu0c_BFs0c_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFs0s_BFu0s  {
  unsigned char  :0;
  signed char  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0c_BFs0s_BFu0s) C1{ Fc:0 Fc:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0c_BFs0s_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFs0s_BFu0s");
    static BFu0c_BFs0c_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFs0s_BFu0s(Test_BFu0c_BFs0c_BFs0s_BFu0s, "BFu0c_BFs0c_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0c  {
  unsigned char  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0c) C1{ Fc:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0c");
    static BFu0c_BFs0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFs0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0c(Test_BFu0c_BFs0c_BFu0c, "BFu0c_BFs0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0c_BFs0c  {
  unsigned char  :0;
  signed char  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0c_BFs0c) C1{ Fc:0 Fc:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0c_BFu0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0c_BFs0c");
    static BFu0c_BFs0c_BFu0c_BFs0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFs0c_BFu0c_BFs0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFs0c_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0c_BFs0c(Test_BFu0c_BFs0c_BFu0c_BFs0c, "BFu0c_BFs0c_BFu0c_BFs0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0c_BFs0i  {
  unsigned char  :0;
  signed char  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0c_BFs0i) C1{ Fc:0 Fc:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0c_BFu0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0c_BFs0i");
    static BFu0c_BFs0c_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0c_BFs0i(Test_BFu0c_BFs0c_BFu0c_BFs0i, "BFu0c_BFs0c_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0c_BFs0ll  {
  unsigned char  :0;
  signed char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0c_BFs0ll) C1{ Fc:0 Fc:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0c_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0c_BFs0ll");
    static BFu0c_BFs0c_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0c_BFs0ll(Test_BFu0c_BFs0c_BFu0c_BFs0ll, "BFu0c_BFs0c_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0c_BFs0s  {
  unsigned char  :0;
  signed char  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0c_BFs0s) C1{ Fc:0 Fc:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0c_BFu0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0c_BFs0s");
    static BFu0c_BFs0c_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0c_BFs0s(Test_BFu0c_BFs0c_BFu0c_BFs0s, "BFu0c_BFs0c_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0c_BFu0c  {
  unsigned char  :0;
  signed char  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0c_BFu0c) C1{ Fc:0 Fc:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0c_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0c_BFu0c");
    static BFu0c_BFs0c_BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFs0c_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFs0c_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0c_BFu0c(Test_BFu0c_BFs0c_BFu0c_BFu0c, "BFu0c_BFs0c_BFu0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0c_BFu0i  {
  unsigned char  :0;
  signed char  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0c_BFu0i) C1{ Fc:0 Fc:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0c_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0c_BFu0i");
    static BFu0c_BFs0c_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0c_BFu0i(Test_BFu0c_BFs0c_BFu0c_BFu0i, "BFu0c_BFs0c_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0c_BFu0ll  {
  unsigned char  :0;
  signed char  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0c_BFu0ll) C1{ Fc:0 Fc:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0c_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0c_BFu0ll");
    static BFu0c_BFs0c_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0c_BFu0ll(Test_BFu0c_BFs0c_BFu0c_BFu0ll, "BFu0c_BFs0c_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0c_BFu0s  {
  unsigned char  :0;
  signed char  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0c_BFu0s) C1{ Fc:0 Fc:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0c_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0c_BFu0s");
    static BFu0c_BFs0c_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0c_BFu0s(Test_BFu0c_BFs0c_BFu0c_BFu0s, "BFu0c_BFs0c_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0i  {
  unsigned char  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0i) C1{ Fc:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0i");
    static BFu0c_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0i(Test_BFu0c_BFs0c_BFu0i, "BFu0c_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0i_BFs0c  {
  unsigned char  :0;
  signed char  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0i_BFs0c) C1{ Fc:0 Fc:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0c_BFu0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0i_BFs0c");
    static BFu0c_BFs0c_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0i_BFs0c(Test_BFu0c_BFs0c_BFu0i_BFs0c, "BFu0c_BFs0c_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0i_BFs0i  {
  unsigned char  :0;
  signed char  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0i_BFs0i) C1{ Fc:0 Fc:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0c_BFu0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0i_BFs0i");
    static BFu0c_BFs0c_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0i_BFs0i(Test_BFu0c_BFs0c_BFu0i_BFs0i, "BFu0c_BFs0c_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0i_BFs0ll  {
  unsigned char  :0;
  signed char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0i_BFs0ll) C1{ Fc:0 Fc:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0c_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0i_BFs0ll");
    static BFu0c_BFs0c_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0i_BFs0ll(Test_BFu0c_BFs0c_BFu0i_BFs0ll, "BFu0c_BFs0c_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0i_BFs0s  {
  unsigned char  :0;
  signed char  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0i_BFs0s) C1{ Fc:0 Fc:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0c_BFu0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0i_BFs0s");
    static BFu0c_BFs0c_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0i_BFs0s(Test_BFu0c_BFs0c_BFu0i_BFs0s, "BFu0c_BFs0c_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0i_BFu0c  {
  unsigned char  :0;
  signed char  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0i_BFu0c) C1{ Fc:0 Fc:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0c_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0i_BFu0c");
    static BFu0c_BFs0c_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0i_BFu0c(Test_BFu0c_BFs0c_BFu0i_BFu0c, "BFu0c_BFs0c_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0i_BFu0i  {
  unsigned char  :0;
  signed char  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0i_BFu0i) C1{ Fc:0 Fc:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0c_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0i_BFu0i");
    static BFu0c_BFs0c_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0i_BFu0i(Test_BFu0c_BFs0c_BFu0i_BFu0i, "BFu0c_BFs0c_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0i_BFu0ll  {
  unsigned char  :0;
  signed char  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0i_BFu0ll) C1{ Fc:0 Fc:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0c_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0i_BFu0ll");
    static BFu0c_BFs0c_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0i_BFu0ll(Test_BFu0c_BFs0c_BFu0i_BFu0ll, "BFu0c_BFs0c_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0i_BFu0s  {
  unsigned char  :0;
  signed char  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0i_BFu0s) C1{ Fc:0 Fc:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0c_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0i_BFu0s");
    static BFu0c_BFs0c_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0i_BFu0s(Test_BFu0c_BFs0c_BFu0i_BFu0s, "BFu0c_BFs0c_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0ll  {
  unsigned char  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0ll) C1{ Fc:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0ll");
    static BFu0c_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0ll(Test_BFu0c_BFs0c_BFu0ll, "BFu0c_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0ll_BFs0c  {
  unsigned char  :0;
  signed char  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0ll_BFs0c) C1{ Fc:0 Fc:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0c_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0ll_BFs0c");
    static BFu0c_BFs0c_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0ll_BFs0c(Test_BFu0c_BFs0c_BFu0ll_BFs0c, "BFu0c_BFs0c_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0ll_BFs0i  {
  unsigned char  :0;
  signed char  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0ll_BFs0i) C1{ Fc:0 Fc:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0c_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0ll_BFs0i");
    static BFu0c_BFs0c_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0ll_BFs0i(Test_BFu0c_BFs0c_BFu0ll_BFs0i, "BFu0c_BFs0c_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0ll_BFs0ll  {
  unsigned char  :0;
  signed char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0ll_BFs0ll) C1{ Fc:0 Fc:0 FL:0 FL:0}



static void Test_BFu0c_BFs0c_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0ll_BFs0ll");
    static BFu0c_BFs0c_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0ll_BFs0ll(Test_BFu0c_BFs0c_BFu0ll_BFs0ll, "BFu0c_BFs0c_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0ll_BFs0s  {
  unsigned char  :0;
  signed char  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0ll_BFs0s) C1{ Fc:0 Fc:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0c_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0ll_BFs0s");
    static BFu0c_BFs0c_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0ll_BFs0s(Test_BFu0c_BFs0c_BFu0ll_BFs0s, "BFu0c_BFs0c_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0ll_BFu0c  {
  unsigned char  :0;
  signed char  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0ll_BFu0c) C1{ Fc:0 Fc:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0c_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0ll_BFu0c");
    static BFu0c_BFs0c_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0ll_BFu0c(Test_BFu0c_BFs0c_BFu0ll_BFu0c, "BFu0c_BFs0c_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0ll_BFu0i  {
  unsigned char  :0;
  signed char  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0ll_BFu0i) C1{ Fc:0 Fc:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0c_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0ll_BFu0i");
    static BFu0c_BFs0c_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0ll_BFu0i(Test_BFu0c_BFs0c_BFu0ll_BFu0i, "BFu0c_BFs0c_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0ll_BFu0ll  {
  unsigned char  :0;
  signed char  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0ll_BFu0ll) C1{ Fc:0 Fc:0 FL:0 FL:0}



static void Test_BFu0c_BFs0c_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0ll_BFu0ll");
    static BFu0c_BFs0c_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0ll_BFu0ll(Test_BFu0c_BFs0c_BFu0ll_BFu0ll, "BFu0c_BFs0c_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0ll_BFu0s  {
  unsigned char  :0;
  signed char  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0ll_BFu0s) C1{ Fc:0 Fc:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0c_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0ll_BFu0s");
    static BFu0c_BFs0c_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0ll_BFu0s(Test_BFu0c_BFs0c_BFu0ll_BFu0s, "BFu0c_BFs0c_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0s  {
  unsigned char  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0s) C1{ Fc:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0s");
    static BFu0c_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0s(Test_BFu0c_BFs0c_BFu0s, "BFu0c_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0s_BFs0c  {
  unsigned char  :0;
  signed char  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0s_BFs0c) C1{ Fc:0 Fc:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0c_BFu0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0s_BFs0c");
    static BFu0c_BFs0c_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0s_BFs0c(Test_BFu0c_BFs0c_BFu0s_BFs0c, "BFu0c_BFs0c_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0s_BFs0i  {
  unsigned char  :0;
  signed char  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0s_BFs0i) C1{ Fc:0 Fc:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0c_BFu0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0s_BFs0i");
    static BFu0c_BFs0c_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0s_BFs0i(Test_BFu0c_BFs0c_BFu0s_BFs0i, "BFu0c_BFs0c_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0s_BFs0ll  {
  unsigned char  :0;
  signed char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0s_BFs0ll) C1{ Fc:0 Fc:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0c_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0s_BFs0ll");
    static BFu0c_BFs0c_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0s_BFs0ll(Test_BFu0c_BFs0c_BFu0s_BFs0ll, "BFu0c_BFs0c_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0s_BFs0s  {
  unsigned char  :0;
  signed char  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0s_BFs0s) C1{ Fc:0 Fc:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0c_BFu0s_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0s_BFs0s");
    static BFu0c_BFs0c_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0s_BFs0s(Test_BFu0c_BFs0c_BFu0s_BFs0s, "BFu0c_BFs0c_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0s_BFu0c  {
  unsigned char  :0;
  signed char  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0s_BFu0c) C1{ Fc:0 Fc:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0c_BFu0s_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0s_BFu0c");
    static BFu0c_BFs0c_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0s_BFu0c(Test_BFu0c_BFs0c_BFu0s_BFu0c, "BFu0c_BFs0c_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0s_BFu0i  {
  unsigned char  :0;
  signed char  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0s_BFu0i) C1{ Fc:0 Fc:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0c_BFu0s_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0s_BFu0i");
    static BFu0c_BFs0c_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0s_BFu0i(Test_BFu0c_BFs0c_BFu0s_BFu0i, "BFu0c_BFs0c_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0s_BFu0ll  {
  unsigned char  :0;
  signed char  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0s_BFu0ll) C1{ Fc:0 Fc:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0c_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0s_BFu0ll");
    static BFu0c_BFs0c_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0s_BFu0ll(Test_BFu0c_BFs0c_BFu0s_BFu0ll, "BFu0c_BFs0c_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0c_BFu0s_BFu0s  {
  unsigned char  :0;
  signed char  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0c_BFu0s_BFu0s) C1{ Fc:0 Fc:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0c_BFu0s_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0c_BFu0s_BFu0s");
    static BFu0c_BFs0c_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0c_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0c_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0c_BFu0s_BFu0s(Test_BFu0c_BFs0c_BFu0s_BFu0s, "BFu0c_BFs0c_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i  {
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0i) C1{ Fc:0 Fi:0}



static void Test_BFu0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0i");
    static BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i(Test_BFu0c_BFs0i, "BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0c  {
  unsigned char  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0c) C1{ Fc:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0c");
    static BFu0c_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0c(Test_BFu0c_BFs0i_BFs0c, "BFu0c_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0c_BFs0c  {
  unsigned char  :0;
  signed int  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0c_BFs0c) C1{ Fc:0 Fi:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0i_BFs0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0c_BFs0c");
    static BFu0c_BFs0i_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0c_BFs0c(Test_BFu0c_BFs0i_BFs0c_BFs0c, "BFu0c_BFs0i_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0c_BFs0i  {
  unsigned char  :0;
  signed int  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0c_BFs0i) C1{ Fc:0 Fi:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0i_BFs0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0c_BFs0i");
    static BFu0c_BFs0i_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0c_BFs0i(Test_BFu0c_BFs0i_BFs0c_BFs0i, "BFu0c_BFs0i_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0c_BFs0ll  {
  unsigned char  :0;
  signed int  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0c_BFs0ll) C1{ Fc:0 Fi:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0i_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0c_BFs0ll");
    static BFu0c_BFs0i_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0c_BFs0ll(Test_BFu0c_BFs0i_BFs0c_BFs0ll, "BFu0c_BFs0i_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0c_BFs0s  {
  unsigned char  :0;
  signed int  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0c_BFs0s) C1{ Fc:0 Fi:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0i_BFs0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0c_BFs0s");
    static BFu0c_BFs0i_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0c_BFs0s(Test_BFu0c_BFs0i_BFs0c_BFs0s, "BFu0c_BFs0i_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0c_BFu0c  {
  unsigned char  :0;
  signed int  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0c_BFu0c) C1{ Fc:0 Fi:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0i_BFs0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0c_BFu0c");
    static BFu0c_BFs0i_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0c_BFu0c(Test_BFu0c_BFs0i_BFs0c_BFu0c, "BFu0c_BFs0i_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0c_BFu0i  {
  unsigned char  :0;
  signed int  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0c_BFu0i) C1{ Fc:0 Fi:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0i_BFs0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0c_BFu0i");
    static BFu0c_BFs0i_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0c_BFu0i(Test_BFu0c_BFs0i_BFs0c_BFu0i, "BFu0c_BFs0i_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0c_BFu0ll  {
  unsigned char  :0;
  signed int  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0c_BFu0ll) C1{ Fc:0 Fi:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0i_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0c_BFu0ll");
    static BFu0c_BFs0i_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0c_BFu0ll(Test_BFu0c_BFs0i_BFs0c_BFu0ll, "BFu0c_BFs0i_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0c_BFu0s  {
  unsigned char  :0;
  signed int  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0c_BFu0s) C1{ Fc:0 Fi:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0i_BFs0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0c_BFu0s");
    static BFu0c_BFs0i_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0c_BFu0s(Test_BFu0c_BFs0i_BFs0c_BFu0s, "BFu0c_BFs0i_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0i  {
  unsigned char  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0i) C1{ Fc:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0i");
    static BFu0c_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0i(Test_BFu0c_BFs0i_BFs0i, "BFu0c_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0i_BFs0c  {
  unsigned char  :0;
  signed int  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0i_BFs0c) C1{ Fc:0 Fi:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0i_BFs0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0i_BFs0c");
    static BFu0c_BFs0i_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0i_BFs0c(Test_BFu0c_BFs0i_BFs0i_BFs0c, "BFu0c_BFs0i_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0i_BFs0i  {
  unsigned char  :0;
  signed int  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0i_BFs0i) C1{ Fc:0 Fi:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0i_BFs0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0i_BFs0i");
    static BFu0c_BFs0i_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0i_BFs0i(Test_BFu0c_BFs0i_BFs0i_BFs0i, "BFu0c_BFs0i_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0i_BFs0ll  {
  unsigned char  :0;
  signed int  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0i_BFs0ll) C1{ Fc:0 Fi:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0i_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0i_BFs0ll");
    static BFu0c_BFs0i_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0i_BFs0ll(Test_BFu0c_BFs0i_BFs0i_BFs0ll, "BFu0c_BFs0i_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0i_BFs0s  {
  unsigned char  :0;
  signed int  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0i_BFs0s) C1{ Fc:0 Fi:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0i_BFs0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0i_BFs0s");
    static BFu0c_BFs0i_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0i_BFs0s(Test_BFu0c_BFs0i_BFs0i_BFs0s, "BFu0c_BFs0i_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0i_BFu0c  {
  unsigned char  :0;
  signed int  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0i_BFu0c) C1{ Fc:0 Fi:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0i_BFs0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0i_BFu0c");
    static BFu0c_BFs0i_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0i_BFu0c(Test_BFu0c_BFs0i_BFs0i_BFu0c, "BFu0c_BFs0i_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0i_BFu0i  {
  unsigned char  :0;
  signed int  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0i_BFu0i) C1{ Fc:0 Fi:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0i_BFs0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0i_BFu0i");
    static BFu0c_BFs0i_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0i_BFu0i(Test_BFu0c_BFs0i_BFs0i_BFu0i, "BFu0c_BFs0i_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0i_BFu0ll  {
  unsigned char  :0;
  signed int  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0i_BFu0ll) C1{ Fc:0 Fi:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0i_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0i_BFu0ll");
    static BFu0c_BFs0i_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0i_BFu0ll(Test_BFu0c_BFs0i_BFs0i_BFu0ll, "BFu0c_BFs0i_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0i_BFu0s  {
  unsigned char  :0;
  signed int  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0i_BFu0s) C1{ Fc:0 Fi:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0i_BFs0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0i_BFu0s");
    static BFu0c_BFs0i_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0i_BFu0s(Test_BFu0c_BFs0i_BFs0i_BFu0s, "BFu0c_BFs0i_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0ll  {
  unsigned char  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0ll) C1{ Fc:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0ll");
    static BFu0c_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0ll(Test_BFu0c_BFs0i_BFs0ll, "BFu0c_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0ll_BFs0c  {
  unsigned char  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0ll_BFs0c) C1{ Fc:0 Fi:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0i_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0ll_BFs0c");
    static BFu0c_BFs0i_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0ll_BFs0c(Test_BFu0c_BFs0i_BFs0ll_BFs0c, "BFu0c_BFs0i_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0ll_BFs0i  {
  unsigned char  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0ll_BFs0i) C1{ Fc:0 Fi:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0i_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0ll_BFs0i");
    static BFu0c_BFs0i_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0ll_BFs0i(Test_BFu0c_BFs0i_BFs0ll_BFs0i, "BFu0c_BFs0i_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0ll_BFs0ll  {
  unsigned char  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0ll_BFs0ll) C1{ Fc:0 Fi:0 FL:0 FL:0}



static void Test_BFu0c_BFs0i_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0ll_BFs0ll");
    static BFu0c_BFs0i_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0ll_BFs0ll(Test_BFu0c_BFs0i_BFs0ll_BFs0ll, "BFu0c_BFs0i_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0ll_BFs0s  {
  unsigned char  :0;
  signed int  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0ll_BFs0s) C1{ Fc:0 Fi:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0i_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0ll_BFs0s");
    static BFu0c_BFs0i_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0ll_BFs0s(Test_BFu0c_BFs0i_BFs0ll_BFs0s, "BFu0c_BFs0i_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0ll_BFu0c  {
  unsigned char  :0;
  signed int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0ll_BFu0c) C1{ Fc:0 Fi:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0i_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0ll_BFu0c");
    static BFu0c_BFs0i_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0ll_BFu0c(Test_BFu0c_BFs0i_BFs0ll_BFu0c, "BFu0c_BFs0i_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0ll_BFu0i  {
  unsigned char  :0;
  signed int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0ll_BFu0i) C1{ Fc:0 Fi:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0i_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0ll_BFu0i");
    static BFu0c_BFs0i_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0ll_BFu0i(Test_BFu0c_BFs0i_BFs0ll_BFu0i, "BFu0c_BFs0i_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0ll_BFu0ll  {
  unsigned char  :0;
  signed int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0ll_BFu0ll) C1{ Fc:0 Fi:0 FL:0 FL:0}



static void Test_BFu0c_BFs0i_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0ll_BFu0ll");
    static BFu0c_BFs0i_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0ll_BFu0ll(Test_BFu0c_BFs0i_BFs0ll_BFu0ll, "BFu0c_BFs0i_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0ll_BFu0s  {
  unsigned char  :0;
  signed int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0ll_BFu0s) C1{ Fc:0 Fi:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0i_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0ll_BFu0s");
    static BFu0c_BFs0i_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0ll_BFu0s(Test_BFu0c_BFs0i_BFs0ll_BFu0s, "BFu0c_BFs0i_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0s  {
  unsigned char  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0s) C1{ Fc:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0s");
    static BFu0c_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0s(Test_BFu0c_BFs0i_BFs0s, "BFu0c_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0s_BFs0c  {
  unsigned char  :0;
  signed int  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0s_BFs0c) C1{ Fc:0 Fi:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0i_BFs0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0s_BFs0c");
    static BFu0c_BFs0i_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0s_BFs0c(Test_BFu0c_BFs0i_BFs0s_BFs0c, "BFu0c_BFs0i_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0s_BFs0i  {
  unsigned char  :0;
  signed int  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0s_BFs0i) C1{ Fc:0 Fi:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0i_BFs0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0s_BFs0i");
    static BFu0c_BFs0i_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0s_BFs0i(Test_BFu0c_BFs0i_BFs0s_BFs0i, "BFu0c_BFs0i_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0s_BFs0ll  {
  unsigned char  :0;
  signed int  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0s_BFs0ll) C1{ Fc:0 Fi:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0i_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0s_BFs0ll");
    static BFu0c_BFs0i_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0s_BFs0ll(Test_BFu0c_BFs0i_BFs0s_BFs0ll, "BFu0c_BFs0i_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0s_BFs0s  {
  unsigned char  :0;
  signed int  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0s_BFs0s) C1{ Fc:0 Fi:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0i_BFs0s_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0s_BFs0s");
    static BFu0c_BFs0i_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0s_BFs0s(Test_BFu0c_BFs0i_BFs0s_BFs0s, "BFu0c_BFs0i_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0s_BFu0c  {
  unsigned char  :0;
  signed int  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0s_BFu0c) C1{ Fc:0 Fi:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0i_BFs0s_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0s_BFu0c");
    static BFu0c_BFs0i_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0s_BFu0c(Test_BFu0c_BFs0i_BFs0s_BFu0c, "BFu0c_BFs0i_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0s_BFu0i  {
  unsigned char  :0;
  signed int  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0s_BFu0i) C1{ Fc:0 Fi:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0i_BFs0s_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0s_BFu0i");
    static BFu0c_BFs0i_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0s_BFu0i(Test_BFu0c_BFs0i_BFs0s_BFu0i, "BFu0c_BFs0i_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0s_BFu0ll  {
  unsigned char  :0;
  signed int  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0s_BFu0ll) C1{ Fc:0 Fi:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0i_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0s_BFu0ll");
    static BFu0c_BFs0i_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0s_BFu0ll(Test_BFu0c_BFs0i_BFs0s_BFu0ll, "BFu0c_BFs0i_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFs0s_BFu0s  {
  unsigned char  :0;
  signed int  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0i_BFs0s_BFu0s) C1{ Fc:0 Fi:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0i_BFs0s_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFs0s_BFu0s");
    static BFu0c_BFs0i_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFs0s_BFu0s(Test_BFu0c_BFs0i_BFs0s_BFu0s, "BFu0c_BFs0i_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0c  {
  unsigned char  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0c) C1{ Fc:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0c");
    static BFu0c_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0c(Test_BFu0c_BFs0i_BFu0c, "BFu0c_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0c_BFs0c  {
  unsigned char  :0;
  signed int  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0c_BFs0c) C1{ Fc:0 Fi:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0i_BFu0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0c_BFs0c");
    static BFu0c_BFs0i_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0c_BFs0c(Test_BFu0c_BFs0i_BFu0c_BFs0c, "BFu0c_BFs0i_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0c_BFs0i  {
  unsigned char  :0;
  signed int  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0c_BFs0i) C1{ Fc:0 Fi:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0i_BFu0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0c_BFs0i");
    static BFu0c_BFs0i_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0c_BFs0i(Test_BFu0c_BFs0i_BFu0c_BFs0i, "BFu0c_BFs0i_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0c_BFs0ll  {
  unsigned char  :0;
  signed int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0c_BFs0ll) C1{ Fc:0 Fi:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0i_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0c_BFs0ll");
    static BFu0c_BFs0i_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0c_BFs0ll(Test_BFu0c_BFs0i_BFu0c_BFs0ll, "BFu0c_BFs0i_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0c_BFs0s  {
  unsigned char  :0;
  signed int  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0c_BFs0s) C1{ Fc:0 Fi:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0i_BFu0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0c_BFs0s");
    static BFu0c_BFs0i_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0c_BFs0s(Test_BFu0c_BFs0i_BFu0c_BFs0s, "BFu0c_BFs0i_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0c_BFu0c  {
  unsigned char  :0;
  signed int  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0c_BFu0c) C1{ Fc:0 Fi:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0i_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0c_BFu0c");
    static BFu0c_BFs0i_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0c_BFu0c(Test_BFu0c_BFs0i_BFu0c_BFu0c, "BFu0c_BFs0i_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0c_BFu0i  {
  unsigned char  :0;
  signed int  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0c_BFu0i) C1{ Fc:0 Fi:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0i_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0c_BFu0i");
    static BFu0c_BFs0i_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0c_BFu0i(Test_BFu0c_BFs0i_BFu0c_BFu0i, "BFu0c_BFs0i_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0c_BFu0ll  {
  unsigned char  :0;
  signed int  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0c_BFu0ll) C1{ Fc:0 Fi:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0i_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0c_BFu0ll");
    static BFu0c_BFs0i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0c_BFu0ll(Test_BFu0c_BFs0i_BFu0c_BFu0ll, "BFu0c_BFs0i_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0c_BFu0s  {
  unsigned char  :0;
  signed int  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0c_BFu0s) C1{ Fc:0 Fi:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0i_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0c_BFu0s");
    static BFu0c_BFs0i_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0c_BFu0s(Test_BFu0c_BFs0i_BFu0c_BFu0s, "BFu0c_BFs0i_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0i  {
  unsigned char  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0i) C1{ Fc:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0i");
    static BFu0c_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0i(Test_BFu0c_BFs0i_BFu0i, "BFu0c_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0i_BFs0c  {
  unsigned char  :0;
  signed int  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0i_BFs0c) C1{ Fc:0 Fi:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0i_BFu0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0i_BFs0c");
    static BFu0c_BFs0i_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0i_BFs0c(Test_BFu0c_BFs0i_BFu0i_BFs0c, "BFu0c_BFs0i_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0i_BFs0i  {
  unsigned char  :0;
  signed int  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0i_BFs0i) C1{ Fc:0 Fi:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0i_BFu0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0i_BFs0i");
    static BFu0c_BFs0i_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0i_BFs0i(Test_BFu0c_BFs0i_BFu0i_BFs0i, "BFu0c_BFs0i_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0i_BFs0ll  {
  unsigned char  :0;
  signed int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0i_BFs0ll) C1{ Fc:0 Fi:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0i_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0i_BFs0ll");
    static BFu0c_BFs0i_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0i_BFs0ll(Test_BFu0c_BFs0i_BFu0i_BFs0ll, "BFu0c_BFs0i_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0i_BFs0s  {
  unsigned char  :0;
  signed int  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0i_BFs0s) C1{ Fc:0 Fi:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0i_BFu0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0i_BFs0s");
    static BFu0c_BFs0i_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0i_BFs0s(Test_BFu0c_BFs0i_BFu0i_BFs0s, "BFu0c_BFs0i_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0i_BFu0c  {
  unsigned char  :0;
  signed int  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0i_BFu0c) C1{ Fc:0 Fi:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0i_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0i_BFu0c");
    static BFu0c_BFs0i_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0i_BFu0c(Test_BFu0c_BFs0i_BFu0i_BFu0c, "BFu0c_BFs0i_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0i_BFu0i  {
  unsigned char  :0;
  signed int  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0i_BFu0i) C1{ Fc:0 Fi:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0i_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0i_BFu0i");
    static BFu0c_BFs0i_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0i_BFu0i(Test_BFu0c_BFs0i_BFu0i_BFu0i, "BFu0c_BFs0i_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0i_BFu0ll  {
  unsigned char  :0;
  signed int  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0i_BFu0ll) C1{ Fc:0 Fi:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0i_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0i_BFu0ll");
    static BFu0c_BFs0i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0i_BFu0ll(Test_BFu0c_BFs0i_BFu0i_BFu0ll, "BFu0c_BFs0i_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0i_BFu0s  {
  unsigned char  :0;
  signed int  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0i_BFu0s) C1{ Fc:0 Fi:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0i_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0i_BFu0s");
    static BFu0c_BFs0i_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0i_BFu0s(Test_BFu0c_BFs0i_BFu0i_BFu0s, "BFu0c_BFs0i_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0ll  {
  unsigned char  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0ll) C1{ Fc:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0ll");
    static BFu0c_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0ll(Test_BFu0c_BFs0i_BFu0ll, "BFu0c_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0ll_BFs0c  {
  unsigned char  :0;
  signed int  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0ll_BFs0c) C1{ Fc:0 Fi:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0i_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0ll_BFs0c");
    static BFu0c_BFs0i_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0ll_BFs0c(Test_BFu0c_BFs0i_BFu0ll_BFs0c, "BFu0c_BFs0i_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0ll_BFs0i  {
  unsigned char  :0;
  signed int  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0ll_BFs0i) C1{ Fc:0 Fi:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0i_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0ll_BFs0i");
    static BFu0c_BFs0i_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0ll_BFs0i(Test_BFu0c_BFs0i_BFu0ll_BFs0i, "BFu0c_BFs0i_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0ll_BFs0ll  {
  unsigned char  :0;
  signed int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0ll_BFs0ll) C1{ Fc:0 Fi:0 FL:0 FL:0}



static void Test_BFu0c_BFs0i_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0ll_BFs0ll");
    static BFu0c_BFs0i_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0ll_BFs0ll(Test_BFu0c_BFs0i_BFu0ll_BFs0ll, "BFu0c_BFs0i_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0ll_BFs0s  {
  unsigned char  :0;
  signed int  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0ll_BFs0s) C1{ Fc:0 Fi:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0i_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0ll_BFs0s");
    static BFu0c_BFs0i_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0ll_BFs0s(Test_BFu0c_BFs0i_BFu0ll_BFs0s, "BFu0c_BFs0i_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0ll_BFu0c  {
  unsigned char  :0;
  signed int  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0ll_BFu0c) C1{ Fc:0 Fi:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0i_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0ll_BFu0c");
    static BFu0c_BFs0i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0ll_BFu0c(Test_BFu0c_BFs0i_BFu0ll_BFu0c, "BFu0c_BFs0i_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0ll_BFu0i  {
  unsigned char  :0;
  signed int  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0ll_BFu0i) C1{ Fc:0 Fi:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0i_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0ll_BFu0i");
    static BFu0c_BFs0i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0ll_BFu0i(Test_BFu0c_BFs0i_BFu0ll_BFu0i, "BFu0c_BFs0i_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0ll_BFu0ll  {
  unsigned char  :0;
  signed int  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0ll_BFu0ll) C1{ Fc:0 Fi:0 FL:0 FL:0}



static void Test_BFu0c_BFs0i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0ll_BFu0ll");
    static BFu0c_BFs0i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0ll_BFu0ll(Test_BFu0c_BFs0i_BFu0ll_BFu0ll, "BFu0c_BFs0i_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0ll_BFu0s  {
  unsigned char  :0;
  signed int  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0ll_BFu0s) C1{ Fc:0 Fi:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0i_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0ll_BFu0s");
    static BFu0c_BFs0i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0ll_BFu0s(Test_BFu0c_BFs0i_BFu0ll_BFu0s, "BFu0c_BFs0i_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0s  {
  unsigned char  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0s) C1{ Fc:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0s");
    static BFu0c_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0s(Test_BFu0c_BFs0i_BFu0s, "BFu0c_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0s_BFs0c  {
  unsigned char  :0;
  signed int  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0s_BFs0c) C1{ Fc:0 Fi:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0i_BFu0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0s_BFs0c");
    static BFu0c_BFs0i_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0s_BFs0c(Test_BFu0c_BFs0i_BFu0s_BFs0c, "BFu0c_BFs0i_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0s_BFs0i  {
  unsigned char  :0;
  signed int  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0s_BFs0i) C1{ Fc:0 Fi:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0i_BFu0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0s_BFs0i");
    static BFu0c_BFs0i_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0s_BFs0i(Test_BFu0c_BFs0i_BFu0s_BFs0i, "BFu0c_BFs0i_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0s_BFs0ll  {
  unsigned char  :0;
  signed int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0s_BFs0ll) C1{ Fc:0 Fi:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0i_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0s_BFs0ll");
    static BFu0c_BFs0i_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0s_BFs0ll(Test_BFu0c_BFs0i_BFu0s_BFs0ll, "BFu0c_BFs0i_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0s_BFs0s  {
  unsigned char  :0;
  signed int  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0s_BFs0s) C1{ Fc:0 Fi:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0i_BFu0s_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0s_BFs0s");
    static BFu0c_BFs0i_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0s_BFs0s(Test_BFu0c_BFs0i_BFu0s_BFs0s, "BFu0c_BFs0i_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0s_BFu0c  {
  unsigned char  :0;
  signed int  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0s_BFu0c) C1{ Fc:0 Fi:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0i_BFu0s_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0s_BFu0c");
    static BFu0c_BFs0i_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0s_BFu0c(Test_BFu0c_BFs0i_BFu0s_BFu0c, "BFu0c_BFs0i_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0s_BFu0i  {
  unsigned char  :0;
  signed int  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0s_BFu0i) C1{ Fc:0 Fi:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0i_BFu0s_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0s_BFu0i");
    static BFu0c_BFs0i_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0s_BFu0i(Test_BFu0c_BFs0i_BFu0s_BFu0i, "BFu0c_BFs0i_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0s_BFu0ll  {
  unsigned char  :0;
  signed int  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0s_BFu0ll) C1{ Fc:0 Fi:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0i_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0s_BFu0ll");
    static BFu0c_BFs0i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0s_BFu0ll(Test_BFu0c_BFs0i_BFu0s_BFu0ll, "BFu0c_BFs0i_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0i_BFu0s_BFu0s  {
  unsigned char  :0;
  signed int  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0i_BFu0s_BFu0s) C1{ Fc:0 Fi:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0i_BFu0s_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0i_BFu0s_BFu0s");
    static BFu0c_BFs0i_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0i_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0i_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0i_BFu0s_BFu0s(Test_BFu0c_BFs0i_BFu0s_BFu0s, "BFu0c_BFs0i_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0ll) C1{ Fc:0 FL:0}



static void Test_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll");
    static BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll(Test_BFu0c_BFs0ll, "BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0c) C1{ Fc:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0c");
    static BFu0c_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0c(Test_BFu0c_BFs0ll_BFs0c, "BFu0c_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0c_BFs0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0c_BFs0c) C1{ Fc:0 FL:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFs0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0c_BFs0c");
    static BFu0c_BFs0ll_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0c_BFs0c(Test_BFu0c_BFs0ll_BFs0c_BFs0c, "BFu0c_BFs0ll_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0c_BFs0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0c_BFs0i) C1{ Fc:0 FL:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFs0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0c_BFs0i");
    static BFu0c_BFs0ll_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0c_BFs0i(Test_BFu0c_BFs0ll_BFs0c_BFs0i, "BFu0c_BFs0ll_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0c_BFs0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0c_BFs0ll) C1{ Fc:0 FL:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0ll_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0c_BFs0ll");
    static BFu0c_BFs0ll_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0c_BFs0ll(Test_BFu0c_BFs0ll_BFs0c_BFs0ll, "BFu0c_BFs0ll_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0c_BFs0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0c_BFs0s) C1{ Fc:0 FL:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFs0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0c_BFs0s");
    static BFu0c_BFs0ll_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0c_BFs0s(Test_BFu0c_BFs0ll_BFs0c_BFs0s, "BFu0c_BFs0ll_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0c_BFu0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0c_BFu0c) C1{ Fc:0 FL:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFs0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0c_BFu0c");
    static BFu0c_BFs0ll_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0c_BFu0c(Test_BFu0c_BFs0ll_BFs0c_BFu0c, "BFu0c_BFs0ll_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0c_BFu0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0c_BFu0i) C1{ Fc:0 FL:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFs0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0c_BFu0i");
    static BFu0c_BFs0ll_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0c_BFu0i(Test_BFu0c_BFs0ll_BFs0c_BFu0i, "BFu0c_BFs0ll_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0c_BFu0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0c_BFu0ll) C1{ Fc:0 FL:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0ll_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0c_BFu0ll");
    static BFu0c_BFs0ll_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0c_BFu0ll(Test_BFu0c_BFs0ll_BFs0c_BFu0ll, "BFu0c_BFs0ll_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0c_BFu0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0c_BFu0s) C1{ Fc:0 FL:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFs0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0c_BFu0s");
    static BFu0c_BFs0ll_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0c_BFu0s(Test_BFu0c_BFs0ll_BFs0c_BFu0s, "BFu0c_BFs0ll_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0i) C1{ Fc:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0i");
    static BFu0c_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0i(Test_BFu0c_BFs0ll_BFs0i, "BFu0c_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0i_BFs0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0i_BFs0c) C1{ Fc:0 FL:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFs0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0i_BFs0c");
    static BFu0c_BFs0ll_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0i_BFs0c(Test_BFu0c_BFs0ll_BFs0i_BFs0c, "BFu0c_BFs0ll_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0i_BFs0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0i_BFs0i) C1{ Fc:0 FL:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFs0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0i_BFs0i");
    static BFu0c_BFs0ll_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0i_BFs0i(Test_BFu0c_BFs0ll_BFs0i_BFs0i, "BFu0c_BFs0ll_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0i_BFs0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0i_BFs0ll) C1{ Fc:0 FL:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0ll_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0i_BFs0ll");
    static BFu0c_BFs0ll_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0i_BFs0ll(Test_BFu0c_BFs0ll_BFs0i_BFs0ll, "BFu0c_BFs0ll_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0i_BFs0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0i_BFs0s) C1{ Fc:0 FL:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFs0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0i_BFs0s");
    static BFu0c_BFs0ll_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0i_BFs0s(Test_BFu0c_BFs0ll_BFs0i_BFs0s, "BFu0c_BFs0ll_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0i_BFu0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0i_BFu0c) C1{ Fc:0 FL:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFs0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0i_BFu0c");
    static BFu0c_BFs0ll_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0i_BFu0c(Test_BFu0c_BFs0ll_BFs0i_BFu0c, "BFu0c_BFs0ll_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0i_BFu0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0i_BFu0i) C1{ Fc:0 FL:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFs0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0i_BFu0i");
    static BFu0c_BFs0ll_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0i_BFu0i(Test_BFu0c_BFs0ll_BFs0i_BFu0i, "BFu0c_BFs0ll_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0i_BFu0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0i_BFu0ll) C1{ Fc:0 FL:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0ll_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0i_BFu0ll");
    static BFu0c_BFs0ll_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0i_BFu0ll(Test_BFu0c_BFs0ll_BFs0i_BFu0ll, "BFu0c_BFs0ll_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0i_BFu0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0i_BFu0s) C1{ Fc:0 FL:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFs0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0i_BFu0s");
    static BFu0c_BFs0ll_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0i_BFu0s(Test_BFu0c_BFs0ll_BFs0i_BFu0s, "BFu0c_BFs0ll_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0ll) C1{ Fc:0 FL:0 FL:0}



static void Test_BFu0c_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0ll");
    static BFu0c_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0ll(Test_BFu0c_BFs0ll_BFs0ll, "BFu0c_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0ll_BFs0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0ll_BFs0c) C1{ Fc:0 FL:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0ll_BFs0c");
    static BFu0c_BFs0ll_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0ll_BFs0c(Test_BFu0c_BFs0ll_BFs0ll_BFs0c, "BFu0c_BFs0ll_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0ll_BFs0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0ll_BFs0i) C1{ Fc:0 FL:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0ll_BFs0i");
    static BFu0c_BFs0ll_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0ll_BFs0i(Test_BFu0c_BFs0ll_BFs0ll_BFs0i, "BFu0c_BFs0ll_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0ll_BFs0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0ll_BFs0ll) C1{ Fc:0 FL:0 FL:0 FL:0}



static void Test_BFu0c_BFs0ll_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0ll_BFs0ll");
    static BFu0c_BFs0ll_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0ll_BFs0ll(Test_BFu0c_BFs0ll_BFs0ll_BFs0ll, "BFu0c_BFs0ll_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0ll_BFs0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0ll_BFs0s) C1{ Fc:0 FL:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0ll_BFs0s");
    static BFu0c_BFs0ll_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0ll_BFs0s(Test_BFu0c_BFs0ll_BFs0ll_BFs0s, "BFu0c_BFs0ll_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0ll_BFu0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0ll_BFu0c) C1{ Fc:0 FL:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0ll_BFu0c");
    static BFu0c_BFs0ll_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0ll_BFu0c(Test_BFu0c_BFs0ll_BFs0ll_BFu0c, "BFu0c_BFs0ll_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0ll_BFu0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0ll_BFu0i) C1{ Fc:0 FL:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0ll_BFu0i");
    static BFu0c_BFs0ll_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0ll_BFu0i(Test_BFu0c_BFs0ll_BFs0ll_BFu0i, "BFu0c_BFs0ll_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0ll_BFu0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0ll_BFu0ll) C1{ Fc:0 FL:0 FL:0 FL:0}



static void Test_BFu0c_BFs0ll_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0ll_BFu0ll");
    static BFu0c_BFs0ll_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0ll_BFu0ll(Test_BFu0c_BFs0ll_BFs0ll_BFu0ll, "BFu0c_BFs0ll_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0ll_BFu0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0ll_BFu0s) C1{ Fc:0 FL:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0ll_BFu0s");
    static BFu0c_BFs0ll_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0ll_BFu0s(Test_BFu0c_BFs0ll_BFs0ll_BFu0s, "BFu0c_BFs0ll_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0s) C1{ Fc:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0s");
    static BFu0c_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0s(Test_BFu0c_BFs0ll_BFs0s, "BFu0c_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0s_BFs0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0s_BFs0c) C1{ Fc:0 FL:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFs0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0s_BFs0c");
    static BFu0c_BFs0ll_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0s_BFs0c(Test_BFu0c_BFs0ll_BFs0s_BFs0c, "BFu0c_BFs0ll_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0s_BFs0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0s_BFs0i) C1{ Fc:0 FL:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFs0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0s_BFs0i");
    static BFu0c_BFs0ll_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0s_BFs0i(Test_BFu0c_BFs0ll_BFs0s_BFs0i, "BFu0c_BFs0ll_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0s_BFs0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0s_BFs0ll) C1{ Fc:0 FL:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0ll_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0s_BFs0ll");
    static BFu0c_BFs0ll_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0s_BFs0ll(Test_BFu0c_BFs0ll_BFs0s_BFs0ll, "BFu0c_BFs0ll_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0s_BFs0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0s_BFs0s) C1{ Fc:0 FL:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFs0s_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0s_BFs0s");
    static BFu0c_BFs0ll_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0s_BFs0s(Test_BFu0c_BFs0ll_BFs0s_BFs0s, "BFu0c_BFs0ll_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0s_BFu0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0s_BFu0c) C1{ Fc:0 FL:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFs0s_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0s_BFu0c");
    static BFu0c_BFs0ll_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0s_BFu0c(Test_BFu0c_BFs0ll_BFs0s_BFu0c, "BFu0c_BFs0ll_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0s_BFu0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0s_BFu0i) C1{ Fc:0 FL:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFs0s_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0s_BFu0i");
    static BFu0c_BFs0ll_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0s_BFu0i(Test_BFu0c_BFs0ll_BFs0s_BFu0i, "BFu0c_BFs0ll_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0s_BFu0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0s_BFu0ll) C1{ Fc:0 FL:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0ll_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0s_BFu0ll");
    static BFu0c_BFs0ll_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0s_BFu0ll(Test_BFu0c_BFs0ll_BFs0s_BFu0ll, "BFu0c_BFs0ll_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFs0s_BFu0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFs0s_BFu0s) C1{ Fc:0 FL:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFs0s_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFs0s_BFu0s");
    static BFu0c_BFs0ll_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFs0s_BFu0s(Test_BFu0c_BFs0ll_BFs0s_BFu0s, "BFu0c_BFs0ll_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0c) C1{ Fc:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0c");
    static BFu0c_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0c(Test_BFu0c_BFs0ll_BFu0c, "BFu0c_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0c_BFs0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0c_BFs0c) C1{ Fc:0 FL:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFu0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0c_BFs0c");
    static BFu0c_BFs0ll_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0c_BFs0c(Test_BFu0c_BFs0ll_BFu0c_BFs0c, "BFu0c_BFs0ll_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0c_BFs0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0c_BFs0i) C1{ Fc:0 FL:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFu0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0c_BFs0i");
    static BFu0c_BFs0ll_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0c_BFs0i(Test_BFu0c_BFs0ll_BFu0c_BFs0i, "BFu0c_BFs0ll_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0c_BFs0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0c_BFs0ll) C1{ Fc:0 FL:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0ll_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0c_BFs0ll");
    static BFu0c_BFs0ll_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0c_BFs0ll(Test_BFu0c_BFs0ll_BFu0c_BFs0ll, "BFu0c_BFs0ll_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0c_BFs0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0c_BFs0s) C1{ Fc:0 FL:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFu0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0c_BFs0s");
    static BFu0c_BFs0ll_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0c_BFs0s(Test_BFu0c_BFs0ll_BFu0c_BFs0s, "BFu0c_BFs0ll_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0c_BFu0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0c_BFu0c) C1{ Fc:0 FL:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0c_BFu0c");
    static BFu0c_BFs0ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0c_BFu0c(Test_BFu0c_BFs0ll_BFu0c_BFu0c, "BFu0c_BFs0ll_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0c_BFu0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0c_BFu0i) C1{ Fc:0 FL:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0c_BFu0i");
    static BFu0c_BFs0ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0c_BFu0i(Test_BFu0c_BFs0ll_BFu0c_BFu0i, "BFu0c_BFs0ll_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0c_BFu0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0c_BFu0ll) C1{ Fc:0 FL:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0c_BFu0ll");
    static BFu0c_BFs0ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0c_BFu0ll(Test_BFu0c_BFs0ll_BFu0c_BFu0ll, "BFu0c_BFs0ll_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0c_BFu0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0c_BFu0s) C1{ Fc:0 FL:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0c_BFu0s");
    static BFu0c_BFs0ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0c_BFu0s(Test_BFu0c_BFs0ll_BFu0c_BFu0s, "BFu0c_BFs0ll_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0i) C1{ Fc:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0i");
    static BFu0c_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0i(Test_BFu0c_BFs0ll_BFu0i, "BFu0c_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0i_BFs0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0i_BFs0c) C1{ Fc:0 FL:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFu0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0i_BFs0c");
    static BFu0c_BFs0ll_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0i_BFs0c(Test_BFu0c_BFs0ll_BFu0i_BFs0c, "BFu0c_BFs0ll_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0i_BFs0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0i_BFs0i) C1{ Fc:0 FL:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFu0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0i_BFs0i");
    static BFu0c_BFs0ll_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0i_BFs0i(Test_BFu0c_BFs0ll_BFu0i_BFs0i, "BFu0c_BFs0ll_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0i_BFs0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0i_BFs0ll) C1{ Fc:0 FL:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0ll_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0i_BFs0ll");
    static BFu0c_BFs0ll_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0i_BFs0ll(Test_BFu0c_BFs0ll_BFu0i_BFs0ll, "BFu0c_BFs0ll_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0i_BFs0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0i_BFs0s) C1{ Fc:0 FL:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFu0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0i_BFs0s");
    static BFu0c_BFs0ll_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0i_BFs0s(Test_BFu0c_BFs0ll_BFu0i_BFs0s, "BFu0c_BFs0ll_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0i_BFu0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0i_BFu0c) C1{ Fc:0 FL:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0i_BFu0c");
    static BFu0c_BFs0ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0i_BFu0c(Test_BFu0c_BFs0ll_BFu0i_BFu0c, "BFu0c_BFs0ll_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0i_BFu0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0i_BFu0i) C1{ Fc:0 FL:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0i_BFu0i");
    static BFu0c_BFs0ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0i_BFu0i(Test_BFu0c_BFs0ll_BFu0i_BFu0i, "BFu0c_BFs0ll_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0i_BFu0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0i_BFu0ll) C1{ Fc:0 FL:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0i_BFu0ll");
    static BFu0c_BFs0ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0i_BFu0ll(Test_BFu0c_BFs0ll_BFu0i_BFu0ll, "BFu0c_BFs0ll_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0i_BFu0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0i_BFu0s) C1{ Fc:0 FL:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0i_BFu0s");
    static BFu0c_BFs0ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0i_BFu0s(Test_BFu0c_BFs0ll_BFu0i_BFu0s, "BFu0c_BFs0ll_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0ll) C1{ Fc:0 FL:0 FL:0}



static void Test_BFu0c_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0ll");
    static BFu0c_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0ll(Test_BFu0c_BFs0ll_BFu0ll, "BFu0c_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0ll_BFs0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0ll_BFs0c) C1{ Fc:0 FL:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0ll_BFs0c");
    static BFu0c_BFs0ll_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0ll_BFs0c(Test_BFu0c_BFs0ll_BFu0ll_BFs0c, "BFu0c_BFs0ll_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0ll_BFs0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0ll_BFs0i) C1{ Fc:0 FL:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0ll_BFs0i");
    static BFu0c_BFs0ll_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0ll_BFs0i(Test_BFu0c_BFs0ll_BFu0ll_BFs0i, "BFu0c_BFs0ll_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0ll_BFs0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0ll_BFs0ll) C1{ Fc:0 FL:0 FL:0 FL:0}



static void Test_BFu0c_BFs0ll_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0ll_BFs0ll");
    static BFu0c_BFs0ll_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0ll_BFs0ll(Test_BFu0c_BFs0ll_BFu0ll_BFs0ll, "BFu0c_BFs0ll_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0ll_BFs0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0ll_BFs0s) C1{ Fc:0 FL:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0ll_BFs0s");
    static BFu0c_BFs0ll_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0ll_BFs0s(Test_BFu0c_BFs0ll_BFu0ll_BFs0s, "BFu0c_BFs0ll_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0ll_BFu0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0ll_BFu0c) C1{ Fc:0 FL:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0ll_BFu0c");
    static BFu0c_BFs0ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0ll_BFu0c(Test_BFu0c_BFs0ll_BFu0ll_BFu0c, "BFu0c_BFs0ll_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0ll_BFu0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0ll_BFu0i) C1{ Fc:0 FL:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0ll_BFu0i");
    static BFu0c_BFs0ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0ll_BFu0i(Test_BFu0c_BFs0ll_BFu0ll_BFu0i, "BFu0c_BFs0ll_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0ll_BFu0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0ll_BFu0ll) C1{ Fc:0 FL:0 FL:0 FL:0}



static void Test_BFu0c_BFs0ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0ll_BFu0ll");
    static BFu0c_BFs0ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0ll_BFu0ll(Test_BFu0c_BFs0ll_BFu0ll_BFu0ll, "BFu0c_BFs0ll_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0ll_BFu0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0ll_BFu0s) C1{ Fc:0 FL:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0ll_BFu0s");
    static BFu0c_BFs0ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0ll_BFu0s(Test_BFu0c_BFs0ll_BFu0ll_BFu0s, "BFu0c_BFs0ll_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0s) C1{ Fc:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0s");
    static BFu0c_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0s(Test_BFu0c_BFs0ll_BFu0s, "BFu0c_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0s_BFs0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0s_BFs0c) C1{ Fc:0 FL:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFu0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0s_BFs0c");
    static BFu0c_BFs0ll_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0s_BFs0c(Test_BFu0c_BFs0ll_BFu0s_BFs0c, "BFu0c_BFs0ll_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0s_BFs0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0s_BFs0i) C1{ Fc:0 FL:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFu0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0s_BFs0i");
    static BFu0c_BFs0ll_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0s_BFs0i(Test_BFu0c_BFs0ll_BFu0s_BFs0i, "BFu0c_BFs0ll_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0s_BFs0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0s_BFs0ll) C1{ Fc:0 FL:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0ll_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0s_BFs0ll");
    static BFu0c_BFs0ll_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0s_BFs0ll(Test_BFu0c_BFs0ll_BFu0s_BFs0ll, "BFu0c_BFs0ll_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0s_BFs0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0s_BFs0s) C1{ Fc:0 FL:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFu0s_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0s_BFs0s");
    static BFu0c_BFs0ll_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0s_BFs0s(Test_BFu0c_BFs0ll_BFu0s_BFs0s, "BFu0c_BFs0ll_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0s_BFu0c  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0s_BFu0c) C1{ Fc:0 FL:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0ll_BFu0s_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0s_BFu0c");
    static BFu0c_BFs0ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0s_BFu0c(Test_BFu0c_BFs0ll_BFu0s_BFu0c, "BFu0c_BFs0ll_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0s_BFu0i  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0s_BFu0i) C1{ Fc:0 FL:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0ll_BFu0s_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0s_BFu0i");
    static BFu0c_BFs0ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0s_BFu0i(Test_BFu0c_BFs0ll_BFu0s_BFu0i, "BFu0c_BFs0ll_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0s_BFu0ll  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0s_BFu0ll) C1{ Fc:0 FL:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0s_BFu0ll");
    static BFu0c_BFs0ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0s_BFu0ll(Test_BFu0c_BFs0ll_BFu0s_BFu0ll, "BFu0c_BFs0ll_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0ll_BFu0s_BFu0s  {
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0ll_BFu0s_BFu0s) C1{ Fc:0 FL:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0ll_BFu0s_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0ll_BFu0s_BFu0s");
    static BFu0c_BFs0ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0ll_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0ll_BFu0s_BFu0s(Test_BFu0c_BFs0ll_BFu0s_BFu0s, "BFu0c_BFs0ll_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s  {
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0s) C1{ Fc:0 Fs:0}



static void Test_BFu0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0s");
    static BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s(Test_BFu0c_BFs0s, "BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0c  {
  unsigned char  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0c) C1{ Fc:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0c");
    static BFu0c_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0c(Test_BFu0c_BFs0s_BFs0c, "BFu0c_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0c_BFs0c  {
  unsigned char  :0;
  signed short  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0c_BFs0c) C1{ Fc:0 Fs:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0s_BFs0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0c_BFs0c");
    static BFu0c_BFs0s_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0c_BFs0c(Test_BFu0c_BFs0s_BFs0c_BFs0c, "BFu0c_BFs0s_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0c_BFs0i  {
  unsigned char  :0;
  signed short  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0c_BFs0i) C1{ Fc:0 Fs:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0s_BFs0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0c_BFs0i");
    static BFu0c_BFs0s_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0c_BFs0i(Test_BFu0c_BFs0s_BFs0c_BFs0i, "BFu0c_BFs0s_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0c_BFs0ll  {
  unsigned char  :0;
  signed short  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0c_BFs0ll) C1{ Fc:0 Fs:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0s_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0c_BFs0ll");
    static BFu0c_BFs0s_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0c_BFs0ll(Test_BFu0c_BFs0s_BFs0c_BFs0ll, "BFu0c_BFs0s_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0c_BFs0s  {
  unsigned char  :0;
  signed short  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0c_BFs0s) C1{ Fc:0 Fs:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0s_BFs0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0c_BFs0s");
    static BFu0c_BFs0s_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0c_BFs0s(Test_BFu0c_BFs0s_BFs0c_BFs0s, "BFu0c_BFs0s_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0c_BFu0c  {
  unsigned char  :0;
  signed short  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0c_BFu0c) C1{ Fc:0 Fs:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0s_BFs0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0c_BFu0c");
    static BFu0c_BFs0s_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0c_BFu0c(Test_BFu0c_BFs0s_BFs0c_BFu0c, "BFu0c_BFs0s_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0c_BFu0i  {
  unsigned char  :0;
  signed short  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0c_BFu0i) C1{ Fc:0 Fs:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0s_BFs0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0c_BFu0i");
    static BFu0c_BFs0s_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0c_BFu0i(Test_BFu0c_BFs0s_BFs0c_BFu0i, "BFu0c_BFs0s_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0c_BFu0ll  {
  unsigned char  :0;
  signed short  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0c_BFu0ll) C1{ Fc:0 Fs:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0s_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0c_BFu0ll");
    static BFu0c_BFs0s_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0c_BFu0ll(Test_BFu0c_BFs0s_BFs0c_BFu0ll, "BFu0c_BFs0s_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0c_BFu0s  {
  unsigned char  :0;
  signed short  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0c_BFu0s) C1{ Fc:0 Fs:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0s_BFs0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0c_BFu0s");
    static BFu0c_BFs0s_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0c_BFu0s(Test_BFu0c_BFs0s_BFs0c_BFu0s, "BFu0c_BFs0s_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0i  {
  unsigned char  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0i) C1{ Fc:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0i");
    static BFu0c_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0i(Test_BFu0c_BFs0s_BFs0i, "BFu0c_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0i_BFs0c  {
  unsigned char  :0;
  signed short  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0i_BFs0c) C1{ Fc:0 Fs:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0s_BFs0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0i_BFs0c");
    static BFu0c_BFs0s_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0i_BFs0c(Test_BFu0c_BFs0s_BFs0i_BFs0c, "BFu0c_BFs0s_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0i_BFs0i  {
  unsigned char  :0;
  signed short  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0i_BFs0i) C1{ Fc:0 Fs:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0s_BFs0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0i_BFs0i");
    static BFu0c_BFs0s_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0i_BFs0i(Test_BFu0c_BFs0s_BFs0i_BFs0i, "BFu0c_BFs0s_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0i_BFs0ll  {
  unsigned char  :0;
  signed short  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0i_BFs0ll) C1{ Fc:0 Fs:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0s_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0i_BFs0ll");
    static BFu0c_BFs0s_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0i_BFs0ll(Test_BFu0c_BFs0s_BFs0i_BFs0ll, "BFu0c_BFs0s_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0i_BFs0s  {
  unsigned char  :0;
  signed short  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0i_BFs0s) C1{ Fc:0 Fs:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0s_BFs0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0i_BFs0s");
    static BFu0c_BFs0s_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0i_BFs0s(Test_BFu0c_BFs0s_BFs0i_BFs0s, "BFu0c_BFs0s_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0i_BFu0c  {
  unsigned char  :0;
  signed short  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0i_BFu0c) C1{ Fc:0 Fs:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0s_BFs0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0i_BFu0c");
    static BFu0c_BFs0s_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0i_BFu0c(Test_BFu0c_BFs0s_BFs0i_BFu0c, "BFu0c_BFs0s_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0i_BFu0i  {
  unsigned char  :0;
  signed short  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0i_BFu0i) C1{ Fc:0 Fs:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0s_BFs0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0i_BFu0i");
    static BFu0c_BFs0s_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0i_BFu0i(Test_BFu0c_BFs0s_BFs0i_BFu0i, "BFu0c_BFs0s_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0i_BFu0ll  {
  unsigned char  :0;
  signed short  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0i_BFu0ll) C1{ Fc:0 Fs:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0s_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0i_BFu0ll");
    static BFu0c_BFs0s_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0i_BFu0ll(Test_BFu0c_BFs0s_BFs0i_BFu0ll, "BFu0c_BFs0s_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0i_BFu0s  {
  unsigned char  :0;
  signed short  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0i_BFu0s) C1{ Fc:0 Fs:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0s_BFs0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0i_BFu0s");
    static BFu0c_BFs0s_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0i_BFu0s(Test_BFu0c_BFs0s_BFs0i_BFu0s, "BFu0c_BFs0s_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0ll  {
  unsigned char  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0ll) C1{ Fc:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0ll");
    static BFu0c_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0ll(Test_BFu0c_BFs0s_BFs0ll, "BFu0c_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0ll_BFs0c  {
  unsigned char  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0ll_BFs0c) C1{ Fc:0 Fs:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0s_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0ll_BFs0c");
    static BFu0c_BFs0s_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0ll_BFs0c(Test_BFu0c_BFs0s_BFs0ll_BFs0c, "BFu0c_BFs0s_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0ll_BFs0i  {
  unsigned char  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0ll_BFs0i) C1{ Fc:0 Fs:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0s_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0ll_BFs0i");
    static BFu0c_BFs0s_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0ll_BFs0i(Test_BFu0c_BFs0s_BFs0ll_BFs0i, "BFu0c_BFs0s_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0ll_BFs0ll  {
  unsigned char  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0ll_BFs0ll) C1{ Fc:0 Fs:0 FL:0 FL:0}



static void Test_BFu0c_BFs0s_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0ll_BFs0ll");
    static BFu0c_BFs0s_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0ll_BFs0ll(Test_BFu0c_BFs0s_BFs0ll_BFs0ll, "BFu0c_BFs0s_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0ll_BFs0s  {
  unsigned char  :0;
  signed short  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0ll_BFs0s) C1{ Fc:0 Fs:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0s_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0ll_BFs0s");
    static BFu0c_BFs0s_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0ll_BFs0s(Test_BFu0c_BFs0s_BFs0ll_BFs0s, "BFu0c_BFs0s_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0ll_BFu0c  {
  unsigned char  :0;
  signed short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0ll_BFu0c) C1{ Fc:0 Fs:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0s_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0ll_BFu0c");
    static BFu0c_BFs0s_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0ll_BFu0c(Test_BFu0c_BFs0s_BFs0ll_BFu0c, "BFu0c_BFs0s_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0ll_BFu0i  {
  unsigned char  :0;
  signed short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0ll_BFu0i) C1{ Fc:0 Fs:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0s_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0ll_BFu0i");
    static BFu0c_BFs0s_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0ll_BFu0i(Test_BFu0c_BFs0s_BFs0ll_BFu0i, "BFu0c_BFs0s_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0ll_BFu0ll  {
  unsigned char  :0;
  signed short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0ll_BFu0ll) C1{ Fc:0 Fs:0 FL:0 FL:0}



static void Test_BFu0c_BFs0s_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0ll_BFu0ll");
    static BFu0c_BFs0s_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0ll_BFu0ll(Test_BFu0c_BFs0s_BFs0ll_BFu0ll, "BFu0c_BFs0s_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0ll_BFu0s  {
  unsigned char  :0;
  signed short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0ll_BFu0s) C1{ Fc:0 Fs:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0s_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0ll_BFu0s");
    static BFu0c_BFs0s_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0ll_BFu0s(Test_BFu0c_BFs0s_BFs0ll_BFu0s, "BFu0c_BFs0s_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0s  {
  unsigned char  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0s) C1{ Fc:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0s_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0s");
    static BFu0c_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0s(Test_BFu0c_BFs0s_BFs0s, "BFu0c_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0s_BFs0c  {
  unsigned char  :0;
  signed short  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0s_BFs0c) C1{ Fc:0 Fs:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0s_BFs0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0s_BFs0c");
    static BFu0c_BFs0s_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0s_BFs0c(Test_BFu0c_BFs0s_BFs0s_BFs0c, "BFu0c_BFs0s_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0s_BFs0i  {
  unsigned char  :0;
  signed short  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0s_BFs0i) C1{ Fc:0 Fs:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0s_BFs0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0s_BFs0i");
    static BFu0c_BFs0s_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0s_BFs0i(Test_BFu0c_BFs0s_BFs0s_BFs0i, "BFu0c_BFs0s_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0s_BFs0ll  {
  unsigned char  :0;
  signed short  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0s_BFs0ll) C1{ Fc:0 Fs:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0s_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0s_BFs0ll");
    static BFu0c_BFs0s_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0s_BFs0ll(Test_BFu0c_BFs0s_BFs0s_BFs0ll, "BFu0c_BFs0s_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0s_BFs0s  {
  unsigned char  :0;
  signed short  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0s_BFs0s) C1{ Fc:0 Fs:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0s_BFs0s_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0s_BFs0s");
    static BFu0c_BFs0s_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0s_BFs0s(Test_BFu0c_BFs0s_BFs0s_BFs0s, "BFu0c_BFs0s_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0s_BFu0c  {
  unsigned char  :0;
  signed short  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0s_BFu0c) C1{ Fc:0 Fs:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0s_BFs0s_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0s_BFu0c");
    static BFu0c_BFs0s_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0s_BFu0c(Test_BFu0c_BFs0s_BFs0s_BFu0c, "BFu0c_BFs0s_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0s_BFu0i  {
  unsigned char  :0;
  signed short  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0s_BFu0i) C1{ Fc:0 Fs:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0s_BFs0s_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0s_BFu0i");
    static BFu0c_BFs0s_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0s_BFu0i(Test_BFu0c_BFs0s_BFs0s_BFu0i, "BFu0c_BFs0s_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0s_BFu0ll  {
  unsigned char  :0;
  signed short  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0s_BFu0ll) C1{ Fc:0 Fs:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0s_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0s_BFu0ll");
    static BFu0c_BFs0s_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0s_BFu0ll(Test_BFu0c_BFs0s_BFs0s_BFu0ll, "BFu0c_BFs0s_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFs0s_BFu0s  {
  unsigned char  :0;
  signed short  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0s_BFs0s_BFu0s) C1{ Fc:0 Fs:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0s_BFs0s_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFs0s_BFu0s");
    static BFu0c_BFs0s_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFs0s_BFu0s(Test_BFu0c_BFs0s_BFs0s_BFu0s, "BFu0c_BFs0s_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0c  {
  unsigned char  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0c) C1{ Fc:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0s_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0c");
    static BFu0c_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0c(Test_BFu0c_BFs0s_BFu0c, "BFu0c_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0c_BFs0c  {
  unsigned char  :0;
  signed short  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0c_BFs0c) C1{ Fc:0 Fs:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0s_BFu0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0c_BFs0c");
    static BFu0c_BFs0s_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0c_BFs0c(Test_BFu0c_BFs0s_BFu0c_BFs0c, "BFu0c_BFs0s_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0c_BFs0i  {
  unsigned char  :0;
  signed short  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0c_BFs0i) C1{ Fc:0 Fs:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0s_BFu0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0c_BFs0i");
    static BFu0c_BFs0s_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0c_BFs0i(Test_BFu0c_BFs0s_BFu0c_BFs0i, "BFu0c_BFs0s_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0c_BFs0ll  {
  unsigned char  :0;
  signed short  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0c_BFs0ll) C1{ Fc:0 Fs:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0s_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0c_BFs0ll");
    static BFu0c_BFs0s_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0c_BFs0ll(Test_BFu0c_BFs0s_BFu0c_BFs0ll, "BFu0c_BFs0s_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0c_BFs0s  {
  unsigned char  :0;
  signed short  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0c_BFs0s) C1{ Fc:0 Fs:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0s_BFu0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0c_BFs0s");
    static BFu0c_BFs0s_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0c_BFs0s(Test_BFu0c_BFs0s_BFu0c_BFs0s, "BFu0c_BFs0s_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0c_BFu0c  {
  unsigned char  :0;
  signed short  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0c_BFu0c) C1{ Fc:0 Fs:0 Fc:0 Fc:0}



static void Test_BFu0c_BFs0s_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0c_BFu0c");
    static BFu0c_BFs0s_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0c_BFu0c(Test_BFu0c_BFs0s_BFu0c_BFu0c, "BFu0c_BFs0s_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0c_BFu0i  {
  unsigned char  :0;
  signed short  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0c_BFu0i) C1{ Fc:0 Fs:0 Fc:0 Fi:0}



static void Test_BFu0c_BFs0s_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0c_BFu0i");
    static BFu0c_BFs0s_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0c_BFu0i(Test_BFu0c_BFs0s_BFu0c_BFu0i, "BFu0c_BFs0s_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0c_BFu0ll  {
  unsigned char  :0;
  signed short  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0c_BFu0ll) C1{ Fc:0 Fs:0 Fc:0 FL:0}



static void Test_BFu0c_BFs0s_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0c_BFu0ll");
    static BFu0c_BFs0s_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0c_BFu0ll(Test_BFu0c_BFs0s_BFu0c_BFu0ll, "BFu0c_BFs0s_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0c_BFu0s  {
  unsigned char  :0;
  signed short  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0c_BFu0s) C1{ Fc:0 Fs:0 Fc:0 Fs:0}



static void Test_BFu0c_BFs0s_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0c_BFu0s");
    static BFu0c_BFs0s_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0c_BFu0s(Test_BFu0c_BFs0s_BFu0c_BFu0s, "BFu0c_BFs0s_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0i  {
  unsigned char  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0i) C1{ Fc:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0s_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0i");
    static BFu0c_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0i(Test_BFu0c_BFs0s_BFu0i, "BFu0c_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0i_BFs0c  {
  unsigned char  :0;
  signed short  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0i_BFs0c) C1{ Fc:0 Fs:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0s_BFu0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0i_BFs0c");
    static BFu0c_BFs0s_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0i_BFs0c(Test_BFu0c_BFs0s_BFu0i_BFs0c, "BFu0c_BFs0s_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0i_BFs0i  {
  unsigned char  :0;
  signed short  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0i_BFs0i) C1{ Fc:0 Fs:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0s_BFu0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0i_BFs0i");
    static BFu0c_BFs0s_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0i_BFs0i(Test_BFu0c_BFs0s_BFu0i_BFs0i, "BFu0c_BFs0s_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0i_BFs0ll  {
  unsigned char  :0;
  signed short  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0i_BFs0ll) C1{ Fc:0 Fs:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0s_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0i_BFs0ll");
    static BFu0c_BFs0s_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0i_BFs0ll(Test_BFu0c_BFs0s_BFu0i_BFs0ll, "BFu0c_BFs0s_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0i_BFs0s  {
  unsigned char  :0;
  signed short  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0i_BFs0s) C1{ Fc:0 Fs:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0s_BFu0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0i_BFs0s");
    static BFu0c_BFs0s_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0i_BFs0s(Test_BFu0c_BFs0s_BFu0i_BFs0s, "BFu0c_BFs0s_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0i_BFu0c  {
  unsigned char  :0;
  signed short  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0i_BFu0c) C1{ Fc:0 Fs:0 Fi:0 Fc:0}



static void Test_BFu0c_BFs0s_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0i_BFu0c");
    static BFu0c_BFs0s_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0i_BFu0c(Test_BFu0c_BFs0s_BFu0i_BFu0c, "BFu0c_BFs0s_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0i_BFu0i  {
  unsigned char  :0;
  signed short  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0i_BFu0i) C1{ Fc:0 Fs:0 Fi:0 Fi:0}



static void Test_BFu0c_BFs0s_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0i_BFu0i");
    static BFu0c_BFs0s_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0i_BFu0i(Test_BFu0c_BFs0s_BFu0i_BFu0i, "BFu0c_BFs0s_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0i_BFu0ll  {
  unsigned char  :0;
  signed short  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0i_BFu0ll) C1{ Fc:0 Fs:0 Fi:0 FL:0}



static void Test_BFu0c_BFs0s_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0i_BFu0ll");
    static BFu0c_BFs0s_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0i_BFu0ll(Test_BFu0c_BFs0s_BFu0i_BFu0ll, "BFu0c_BFs0s_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0i_BFu0s  {
  unsigned char  :0;
  signed short  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0i_BFu0s) C1{ Fc:0 Fs:0 Fi:0 Fs:0}



static void Test_BFu0c_BFs0s_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0i_BFu0s");
    static BFu0c_BFs0s_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0i_BFu0s(Test_BFu0c_BFs0s_BFu0i_BFu0s, "BFu0c_BFs0s_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0ll  {
  unsigned char  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0ll) C1{ Fc:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0ll");
    static BFu0c_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0ll(Test_BFu0c_BFs0s_BFu0ll, "BFu0c_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0ll_BFs0c  {
  unsigned char  :0;
  signed short  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0ll_BFs0c) C1{ Fc:0 Fs:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0s_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0ll_BFs0c");
    static BFu0c_BFs0s_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0ll_BFs0c(Test_BFu0c_BFs0s_BFu0ll_BFs0c, "BFu0c_BFs0s_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0ll_BFs0i  {
  unsigned char  :0;
  signed short  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0ll_BFs0i) C1{ Fc:0 Fs:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0s_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0ll_BFs0i");
    static BFu0c_BFs0s_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0ll_BFs0i(Test_BFu0c_BFs0s_BFu0ll_BFs0i, "BFu0c_BFs0s_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0ll_BFs0ll  {
  unsigned char  :0;
  signed short  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0ll_BFs0ll) C1{ Fc:0 Fs:0 FL:0 FL:0}



static void Test_BFu0c_BFs0s_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0ll_BFs0ll");
    static BFu0c_BFs0s_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0ll_BFs0ll(Test_BFu0c_BFs0s_BFu0ll_BFs0ll, "BFu0c_BFs0s_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0ll_BFs0s  {
  unsigned char  :0;
  signed short  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0ll_BFs0s) C1{ Fc:0 Fs:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0s_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0ll_BFs0s");
    static BFu0c_BFs0s_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0ll_BFs0s(Test_BFu0c_BFs0s_BFu0ll_BFs0s, "BFu0c_BFs0s_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0ll_BFu0c  {
  unsigned char  :0;
  signed short  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0ll_BFu0c) C1{ Fc:0 Fs:0 FL:0 Fc:0}



static void Test_BFu0c_BFs0s_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0ll_BFu0c");
    static BFu0c_BFs0s_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0ll_BFu0c(Test_BFu0c_BFs0s_BFu0ll_BFu0c, "BFu0c_BFs0s_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0ll_BFu0i  {
  unsigned char  :0;
  signed short  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0ll_BFu0i) C1{ Fc:0 Fs:0 FL:0 Fi:0}



static void Test_BFu0c_BFs0s_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0ll_BFu0i");
    static BFu0c_BFs0s_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0ll_BFu0i(Test_BFu0c_BFs0s_BFu0ll_BFu0i, "BFu0c_BFs0s_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0ll_BFu0ll  {
  unsigned char  :0;
  signed short  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0ll_BFu0ll) C1{ Fc:0 Fs:0 FL:0 FL:0}



static void Test_BFu0c_BFs0s_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0ll_BFu0ll");
    static BFu0c_BFs0s_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0ll_BFu0ll(Test_BFu0c_BFs0s_BFu0ll_BFu0ll, "BFu0c_BFs0s_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0ll_BFu0s  {
  unsigned char  :0;
  signed short  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0ll_BFu0s) C1{ Fc:0 Fs:0 FL:0 Fs:0}



static void Test_BFu0c_BFs0s_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0ll_BFu0s");
    static BFu0c_BFs0s_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0ll_BFu0s(Test_BFu0c_BFs0s_BFu0ll_BFu0s, "BFu0c_BFs0s_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0s  {
  unsigned char  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0s) C1{ Fc:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0s_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0s");
    static BFu0c_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0s(Test_BFu0c_BFs0s_BFu0s, "BFu0c_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0s_BFs0c  {
  unsigned char  :0;
  signed short  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0s_BFs0c) C1{ Fc:0 Fs:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0s_BFu0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0s_BFs0c");
    static BFu0c_BFs0s_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0s_BFs0c(Test_BFu0c_BFs0s_BFu0s_BFs0c, "BFu0c_BFs0s_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0s_BFs0i  {
  unsigned char  :0;
  signed short  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0s_BFs0i) C1{ Fc:0 Fs:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0s_BFu0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0s_BFs0i");
    static BFu0c_BFs0s_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0s_BFs0i(Test_BFu0c_BFs0s_BFu0s_BFs0i, "BFu0c_BFs0s_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0s_BFs0ll  {
  unsigned char  :0;
  signed short  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0s_BFs0ll) C1{ Fc:0 Fs:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0s_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0s_BFs0ll");
    static BFu0c_BFs0s_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0s_BFs0ll(Test_BFu0c_BFs0s_BFu0s_BFs0ll, "BFu0c_BFs0s_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0s_BFs0s  {
  unsigned char  :0;
  signed short  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0s_BFs0s) C1{ Fc:0 Fs:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0s_BFu0s_BFs0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0s_BFs0s");
    static BFu0c_BFs0s_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0s_BFs0s(Test_BFu0c_BFs0s_BFu0s_BFs0s, "BFu0c_BFs0s_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0s_BFu0c  {
  unsigned char  :0;
  signed short  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0s_BFu0c) C1{ Fc:0 Fs:0 Fs:0 Fc:0}



static void Test_BFu0c_BFs0s_BFu0s_BFu0c()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0s_BFu0c");
    static BFu0c_BFs0s_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0s_BFu0c(Test_BFu0c_BFs0s_BFu0s_BFu0c, "BFu0c_BFs0s_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0s_BFu0i  {
  unsigned char  :0;
  signed short  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0s_BFu0i) C1{ Fc:0 Fs:0 Fs:0 Fi:0}



static void Test_BFu0c_BFs0s_BFu0s_BFu0i()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0s_BFu0i");
    static BFu0c_BFs0s_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0s_BFu0i(Test_BFu0c_BFs0s_BFu0s_BFu0i, "BFu0c_BFs0s_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0s_BFu0ll  {
  unsigned char  :0;
  signed short  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0s_BFu0ll) C1{ Fc:0 Fs:0 Fs:0 FL:0}



static void Test_BFu0c_BFs0s_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0s_BFu0ll");
    static BFu0c_BFs0s_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0s_BFu0ll(Test_BFu0c_BFs0s_BFu0s_BFu0ll, "BFu0c_BFs0s_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFs0s_BFu0s_BFu0s  {
  unsigned char  :0;
  signed short  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFs0s_BFu0s_BFu0s) C1{ Fc:0 Fs:0 Fs:0 Fs:0}



static void Test_BFu0c_BFs0s_BFu0s_BFu0s()
{
  {
    init_simple_test("BFu0c_BFs0s_BFu0s_BFu0s");
    static BFu0c_BFs0s_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFs0s_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFs0s_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFs0s_BFu0s_BFu0s(Test_BFu0c_BFs0s_BFu0s_BFu0s, "BFu0c_BFs0s_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c  {
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0c) C1{ Fc:0 Fc:0}



static void Test_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0c");
    static BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c(Test_BFu0c_BFu0c, "BFu0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0c  {
  unsigned char  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0c) C1{ Fc:0 Fc:0 Fc:0}



static void Test_BFu0c_BFu0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0c");
    static BFu0c_BFu0c_BFs0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFu0c_BFs0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0c(Test_BFu0c_BFu0c_BFs0c, "BFu0c_BFu0c_BFs0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0c_BFs0c  {
  unsigned char  :0;
  unsigned char  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0c_BFs0c) C1{ Fc:0 Fc:0 Fc:0 Fc:0}



static void Test_BFu0c_BFu0c_BFs0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0c_BFs0c");
    static BFu0c_BFu0c_BFs0c_BFs0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFu0c_BFs0c_BFs0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFu0c_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0c_BFs0c(Test_BFu0c_BFu0c_BFs0c_BFs0c, "BFu0c_BFu0c_BFs0c_BFs0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0c_BFs0i  {
  unsigned char  :0;
  unsigned char  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0c_BFs0i) C1{ Fc:0 Fc:0 Fc:0 Fi:0}



static void Test_BFu0c_BFu0c_BFs0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0c_BFs0i");
    static BFu0c_BFu0c_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0c_BFs0i(Test_BFu0c_BFu0c_BFs0c_BFs0i, "BFu0c_BFu0c_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0c_BFs0ll  {
  unsigned char  :0;
  unsigned char  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0c_BFs0ll) C1{ Fc:0 Fc:0 Fc:0 FL:0}



static void Test_BFu0c_BFu0c_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0c_BFs0ll");
    static BFu0c_BFu0c_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0c_BFs0ll(Test_BFu0c_BFu0c_BFs0c_BFs0ll, "BFu0c_BFu0c_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0c_BFs0s  {
  unsigned char  :0;
  unsigned char  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0c_BFs0s) C1{ Fc:0 Fc:0 Fc:0 Fs:0}



static void Test_BFu0c_BFu0c_BFs0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0c_BFs0s");
    static BFu0c_BFu0c_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0c_BFs0s(Test_BFu0c_BFu0c_BFs0c_BFs0s, "BFu0c_BFu0c_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0c_BFu0c  {
  unsigned char  :0;
  unsigned char  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0c_BFu0c) C1{ Fc:0 Fc:0 Fc:0 Fc:0}



static void Test_BFu0c_BFu0c_BFs0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0c_BFu0c");
    static BFu0c_BFu0c_BFs0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFu0c_BFs0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFu0c_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0c_BFu0c(Test_BFu0c_BFu0c_BFs0c_BFu0c, "BFu0c_BFu0c_BFs0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0c_BFu0i  {
  unsigned char  :0;
  unsigned char  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0c_BFu0i) C1{ Fc:0 Fc:0 Fc:0 Fi:0}



static void Test_BFu0c_BFu0c_BFs0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0c_BFu0i");
    static BFu0c_BFu0c_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0c_BFu0i(Test_BFu0c_BFu0c_BFs0c_BFu0i, "BFu0c_BFu0c_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0c_BFu0ll  {
  unsigned char  :0;
  unsigned char  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0c_BFu0ll) C1{ Fc:0 Fc:0 Fc:0 FL:0}



static void Test_BFu0c_BFu0c_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0c_BFu0ll");
    static BFu0c_BFu0c_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0c_BFu0ll(Test_BFu0c_BFu0c_BFs0c_BFu0ll, "BFu0c_BFu0c_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0c_BFu0s  {
  unsigned char  :0;
  unsigned char  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0c_BFu0s) C1{ Fc:0 Fc:0 Fc:0 Fs:0}



static void Test_BFu0c_BFu0c_BFs0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0c_BFu0s");
    static BFu0c_BFu0c_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0c_BFu0s(Test_BFu0c_BFu0c_BFs0c_BFu0s, "BFu0c_BFu0c_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0i  {
  unsigned char  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0i) C1{ Fc:0 Fc:0 Fi:0}



static void Test_BFu0c_BFu0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0i");
    static BFu0c_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0i(Test_BFu0c_BFu0c_BFs0i, "BFu0c_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0i_BFs0c  {
  unsigned char  :0;
  unsigned char  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0i_BFs0c) C1{ Fc:0 Fc:0 Fi:0 Fc:0}



static void Test_BFu0c_BFu0c_BFs0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0i_BFs0c");
    static BFu0c_BFu0c_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0i_BFs0c(Test_BFu0c_BFu0c_BFs0i_BFs0c, "BFu0c_BFu0c_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0i_BFs0i  {
  unsigned char  :0;
  unsigned char  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0i_BFs0i) C1{ Fc:0 Fc:0 Fi:0 Fi:0}



static void Test_BFu0c_BFu0c_BFs0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0i_BFs0i");
    static BFu0c_BFu0c_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0i_BFs0i(Test_BFu0c_BFu0c_BFs0i_BFs0i, "BFu0c_BFu0c_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0i_BFs0ll  {
  unsigned char  :0;
  unsigned char  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0i_BFs0ll) C1{ Fc:0 Fc:0 Fi:0 FL:0}



static void Test_BFu0c_BFu0c_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0i_BFs0ll");
    static BFu0c_BFu0c_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0i_BFs0ll(Test_BFu0c_BFu0c_BFs0i_BFs0ll, "BFu0c_BFu0c_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0i_BFs0s  {
  unsigned char  :0;
  unsigned char  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0i_BFs0s) C1{ Fc:0 Fc:0 Fi:0 Fs:0}



static void Test_BFu0c_BFu0c_BFs0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0i_BFs0s");
    static BFu0c_BFu0c_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0i_BFs0s(Test_BFu0c_BFu0c_BFs0i_BFs0s, "BFu0c_BFu0c_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0i_BFu0c  {
  unsigned char  :0;
  unsigned char  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0i_BFu0c) C1{ Fc:0 Fc:0 Fi:0 Fc:0}



static void Test_BFu0c_BFu0c_BFs0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0i_BFu0c");
    static BFu0c_BFu0c_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0i_BFu0c(Test_BFu0c_BFu0c_BFs0i_BFu0c, "BFu0c_BFu0c_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0i_BFu0i  {
  unsigned char  :0;
  unsigned char  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0i_BFu0i) C1{ Fc:0 Fc:0 Fi:0 Fi:0}



static void Test_BFu0c_BFu0c_BFs0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0i_BFu0i");
    static BFu0c_BFu0c_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0i_BFu0i(Test_BFu0c_BFu0c_BFs0i_BFu0i, "BFu0c_BFu0c_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0i_BFu0ll  {
  unsigned char  :0;
  unsigned char  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0i_BFu0ll) C1{ Fc:0 Fc:0 Fi:0 FL:0}



static void Test_BFu0c_BFu0c_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0i_BFu0ll");
    static BFu0c_BFu0c_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0i_BFu0ll(Test_BFu0c_BFu0c_BFs0i_BFu0ll, "BFu0c_BFu0c_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0i_BFu0s  {
  unsigned char  :0;
  unsigned char  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0i_BFu0s) C1{ Fc:0 Fc:0 Fi:0 Fs:0}



static void Test_BFu0c_BFu0c_BFs0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0i_BFu0s");
    static BFu0c_BFu0c_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0i_BFu0s(Test_BFu0c_BFu0c_BFs0i_BFu0s, "BFu0c_BFu0c_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0ll  {
  unsigned char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0ll) C1{ Fc:0 Fc:0 FL:0}



static void Test_BFu0c_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0ll");
    static BFu0c_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0ll(Test_BFu0c_BFu0c_BFs0ll, "BFu0c_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0ll_BFs0c  {
  unsigned char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0ll_BFs0c) C1{ Fc:0 Fc:0 FL:0 Fc:0}



static void Test_BFu0c_BFu0c_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0ll_BFs0c");
    static BFu0c_BFu0c_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0ll_BFs0c(Test_BFu0c_BFu0c_BFs0ll_BFs0c, "BFu0c_BFu0c_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0ll_BFs0i  {
  unsigned char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0ll_BFs0i) C1{ Fc:0 Fc:0 FL:0 Fi:0}



static void Test_BFu0c_BFu0c_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0ll_BFs0i");
    static BFu0c_BFu0c_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0ll_BFs0i(Test_BFu0c_BFu0c_BFs0ll_BFs0i, "BFu0c_BFu0c_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0ll_BFs0ll  {
  unsigned char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0ll_BFs0ll) C1{ Fc:0 Fc:0 FL:0 FL:0}



static void Test_BFu0c_BFu0c_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0ll_BFs0ll");
    static BFu0c_BFu0c_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0ll_BFs0ll(Test_BFu0c_BFu0c_BFs0ll_BFs0ll, "BFu0c_BFu0c_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0ll_BFs0s  {
  unsigned char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0ll_BFs0s) C1{ Fc:0 Fc:0 FL:0 Fs:0}



static void Test_BFu0c_BFu0c_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0ll_BFs0s");
    static BFu0c_BFu0c_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0ll_BFs0s(Test_BFu0c_BFu0c_BFs0ll_BFs0s, "BFu0c_BFu0c_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0ll_BFu0c  {
  unsigned char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0ll_BFu0c) C1{ Fc:0 Fc:0 FL:0 Fc:0}



static void Test_BFu0c_BFu0c_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0ll_BFu0c");
    static BFu0c_BFu0c_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0ll_BFu0c(Test_BFu0c_BFu0c_BFs0ll_BFu0c, "BFu0c_BFu0c_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0ll_BFu0i  {
  unsigned char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0ll_BFu0i) C1{ Fc:0 Fc:0 FL:0 Fi:0}



static void Test_BFu0c_BFu0c_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0ll_BFu0i");
    static BFu0c_BFu0c_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0ll_BFu0i(Test_BFu0c_BFu0c_BFs0ll_BFu0i, "BFu0c_BFu0c_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0ll_BFu0ll  {
  unsigned char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0ll_BFu0ll) C1{ Fc:0 Fc:0 FL:0 FL:0}



static void Test_BFu0c_BFu0c_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0ll_BFu0ll");
    static BFu0c_BFu0c_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0ll_BFu0ll(Test_BFu0c_BFu0c_BFs0ll_BFu0ll, "BFu0c_BFu0c_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0ll_BFu0s  {
  unsigned char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0ll_BFu0s) C1{ Fc:0 Fc:0 FL:0 Fs:0}



static void Test_BFu0c_BFu0c_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0ll_BFu0s");
    static BFu0c_BFu0c_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0ll_BFu0s(Test_BFu0c_BFu0c_BFs0ll_BFu0s, "BFu0c_BFu0c_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0s  {
  unsigned char  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0s) C1{ Fc:0 Fc:0 Fs:0}



static void Test_BFu0c_BFu0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0s");
    static BFu0c_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0s(Test_BFu0c_BFu0c_BFs0s, "BFu0c_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0s_BFs0c  {
  unsigned char  :0;
  unsigned char  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0s_BFs0c) C1{ Fc:0 Fc:0 Fs:0 Fc:0}



static void Test_BFu0c_BFu0c_BFs0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0s_BFs0c");
    static BFu0c_BFu0c_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0s_BFs0c(Test_BFu0c_BFu0c_BFs0s_BFs0c, "BFu0c_BFu0c_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0s_BFs0i  {
  unsigned char  :0;
  unsigned char  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0s_BFs0i) C1{ Fc:0 Fc:0 Fs:0 Fi:0}



static void Test_BFu0c_BFu0c_BFs0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0s_BFs0i");
    static BFu0c_BFu0c_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0s_BFs0i(Test_BFu0c_BFu0c_BFs0s_BFs0i, "BFu0c_BFu0c_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0s_BFs0ll  {
  unsigned char  :0;
  unsigned char  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0s_BFs0ll) C1{ Fc:0 Fc:0 Fs:0 FL:0}



static void Test_BFu0c_BFu0c_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0s_BFs0ll");
    static BFu0c_BFu0c_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0s_BFs0ll(Test_BFu0c_BFu0c_BFs0s_BFs0ll, "BFu0c_BFu0c_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0s_BFs0s  {
  unsigned char  :0;
  unsigned char  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0s_BFs0s) C1{ Fc:0 Fc:0 Fs:0 Fs:0}



static void Test_BFu0c_BFu0c_BFs0s_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0s_BFs0s");
    static BFu0c_BFu0c_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0s_BFs0s(Test_BFu0c_BFu0c_BFs0s_BFs0s, "BFu0c_BFu0c_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0s_BFu0c  {
  unsigned char  :0;
  unsigned char  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0s_BFu0c) C1{ Fc:0 Fc:0 Fs:0 Fc:0}



static void Test_BFu0c_BFu0c_BFs0s_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0s_BFu0c");
    static BFu0c_BFu0c_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0s_BFu0c(Test_BFu0c_BFu0c_BFs0s_BFu0c, "BFu0c_BFu0c_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0s_BFu0i  {
  unsigned char  :0;
  unsigned char  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0s_BFu0i) C1{ Fc:0 Fc:0 Fs:0 Fi:0}



static void Test_BFu0c_BFu0c_BFs0s_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0s_BFu0i");
    static BFu0c_BFu0c_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0s_BFu0i(Test_BFu0c_BFu0c_BFs0s_BFu0i, "BFu0c_BFu0c_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0s_BFu0ll  {
  unsigned char  :0;
  unsigned char  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0s_BFu0ll) C1{ Fc:0 Fc:0 Fs:0 FL:0}



static void Test_BFu0c_BFu0c_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0s_BFu0ll");
    static BFu0c_BFu0c_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0s_BFu0ll(Test_BFu0c_BFu0c_BFs0s_BFu0ll, "BFu0c_BFu0c_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFs0s_BFu0s  {
  unsigned char  :0;
  unsigned char  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0c_BFs0s_BFu0s) C1{ Fc:0 Fc:0 Fs:0 Fs:0}



static void Test_BFu0c_BFu0c_BFs0s_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFs0s_BFu0s");
    static BFu0c_BFu0c_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFs0s_BFu0s(Test_BFu0c_BFu0c_BFs0s_BFu0s, "BFu0c_BFu0c_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0c  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0c) C1{ Fc:0 Fc:0 Fc:0}



static void Test_BFu0c_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0c");
    static BFu0c_BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0c(Test_BFu0c_BFu0c_BFu0c, "BFu0c_BFu0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0c_BFs0c  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0c_BFs0c) C1{ Fc:0 Fc:0 Fc:0 Fc:0}



static void Test_BFu0c_BFu0c_BFu0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0c_BFs0c");
    static BFu0c_BFu0c_BFu0c_BFs0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFu0c_BFu0c_BFs0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFu0c_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0c_BFs0c(Test_BFu0c_BFu0c_BFu0c_BFs0c, "BFu0c_BFu0c_BFu0c_BFs0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0c_BFs0i  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0c_BFs0i) C1{ Fc:0 Fc:0 Fc:0 Fi:0}



static void Test_BFu0c_BFu0c_BFu0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0c_BFs0i");
    static BFu0c_BFu0c_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0c_BFs0i(Test_BFu0c_BFu0c_BFu0c_BFs0i, "BFu0c_BFu0c_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0c_BFs0ll  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0c_BFs0ll) C1{ Fc:0 Fc:0 Fc:0 FL:0}



static void Test_BFu0c_BFu0c_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0c_BFs0ll");
    static BFu0c_BFu0c_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0c_BFs0ll(Test_BFu0c_BFu0c_BFu0c_BFs0ll, "BFu0c_BFu0c_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0c_BFs0s  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0c_BFs0s) C1{ Fc:0 Fc:0 Fc:0 Fs:0}



static void Test_BFu0c_BFu0c_BFu0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0c_BFs0s");
    static BFu0c_BFu0c_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0c_BFs0s(Test_BFu0c_BFu0c_BFu0c_BFs0s, "BFu0c_BFu0c_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0c_BFu0c  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0c_BFu0c) C1{ Fc:0 Fc:0 Fc:0 Fc:0}



static void Test_BFu0c_BFu0c_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0c_BFu0c");
    static BFu0c_BFu0c_BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFu0c_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFu0c_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0c_BFu0c(Test_BFu0c_BFu0c_BFu0c_BFu0c, "BFu0c_BFu0c_BFu0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0c_BFu0i  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0c_BFu0i) C1{ Fc:0 Fc:0 Fc:0 Fi:0}



static void Test_BFu0c_BFu0c_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0c_BFu0i");
    static BFu0c_BFu0c_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0c_BFu0i(Test_BFu0c_BFu0c_BFu0c_BFu0i, "BFu0c_BFu0c_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0c_BFu0ll  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0c_BFu0ll) C1{ Fc:0 Fc:0 Fc:0 FL:0}



static void Test_BFu0c_BFu0c_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0c_BFu0ll");
    static BFu0c_BFu0c_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0c_BFu0ll(Test_BFu0c_BFu0c_BFu0c_BFu0ll, "BFu0c_BFu0c_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0c_BFu0s  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0c_BFu0s) C1{ Fc:0 Fc:0 Fc:0 Fs:0}



static void Test_BFu0c_BFu0c_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0c_BFu0s");
    static BFu0c_BFu0c_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0c_BFu0s(Test_BFu0c_BFu0c_BFu0c_BFu0s, "BFu0c_BFu0c_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0i  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0i) C1{ Fc:0 Fc:0 Fi:0}



static void Test_BFu0c_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0i");
    static BFu0c_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0i(Test_BFu0c_BFu0c_BFu0i, "BFu0c_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0i_BFs0c  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0i_BFs0c) C1{ Fc:0 Fc:0 Fi:0 Fc:0}



static void Test_BFu0c_BFu0c_BFu0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0i_BFs0c");
    static BFu0c_BFu0c_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0i_BFs0c(Test_BFu0c_BFu0c_BFu0i_BFs0c, "BFu0c_BFu0c_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0i_BFs0i  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0i_BFs0i) C1{ Fc:0 Fc:0 Fi:0 Fi:0}



static void Test_BFu0c_BFu0c_BFu0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0i_BFs0i");
    static BFu0c_BFu0c_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0i_BFs0i(Test_BFu0c_BFu0c_BFu0i_BFs0i, "BFu0c_BFu0c_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0i_BFs0ll  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0i_BFs0ll) C1{ Fc:0 Fc:0 Fi:0 FL:0}



static void Test_BFu0c_BFu0c_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0i_BFs0ll");
    static BFu0c_BFu0c_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0i_BFs0ll(Test_BFu0c_BFu0c_BFu0i_BFs0ll, "BFu0c_BFu0c_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0i_BFs0s  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0i_BFs0s) C1{ Fc:0 Fc:0 Fi:0 Fs:0}



static void Test_BFu0c_BFu0c_BFu0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0i_BFs0s");
    static BFu0c_BFu0c_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0i_BFs0s(Test_BFu0c_BFu0c_BFu0i_BFs0s, "BFu0c_BFu0c_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0i_BFu0c  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0i_BFu0c) C1{ Fc:0 Fc:0 Fi:0 Fc:0}



static void Test_BFu0c_BFu0c_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0i_BFu0c");
    static BFu0c_BFu0c_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0i_BFu0c(Test_BFu0c_BFu0c_BFu0i_BFu0c, "BFu0c_BFu0c_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0i_BFu0i  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0i_BFu0i) C1{ Fc:0 Fc:0 Fi:0 Fi:0}



static void Test_BFu0c_BFu0c_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0i_BFu0i");
    static BFu0c_BFu0c_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0i_BFu0i(Test_BFu0c_BFu0c_BFu0i_BFu0i, "BFu0c_BFu0c_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0i_BFu0ll  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0i_BFu0ll) C1{ Fc:0 Fc:0 Fi:0 FL:0}



static void Test_BFu0c_BFu0c_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0i_BFu0ll");
    static BFu0c_BFu0c_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0i_BFu0ll(Test_BFu0c_BFu0c_BFu0i_BFu0ll, "BFu0c_BFu0c_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0i_BFu0s  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0i_BFu0s) C1{ Fc:0 Fc:0 Fi:0 Fs:0}



static void Test_BFu0c_BFu0c_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0i_BFu0s");
    static BFu0c_BFu0c_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0i_BFu0s(Test_BFu0c_BFu0c_BFu0i_BFu0s, "BFu0c_BFu0c_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0ll  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0ll) C1{ Fc:0 Fc:0 FL:0}



static void Test_BFu0c_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0ll");
    static BFu0c_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0ll(Test_BFu0c_BFu0c_BFu0ll, "BFu0c_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0ll_BFs0c  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0ll_BFs0c) C1{ Fc:0 Fc:0 FL:0 Fc:0}



static void Test_BFu0c_BFu0c_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0ll_BFs0c");
    static BFu0c_BFu0c_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0ll_BFs0c(Test_BFu0c_BFu0c_BFu0ll_BFs0c, "BFu0c_BFu0c_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0ll_BFs0i  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0ll_BFs0i) C1{ Fc:0 Fc:0 FL:0 Fi:0}



static void Test_BFu0c_BFu0c_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0ll_BFs0i");
    static BFu0c_BFu0c_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0ll_BFs0i(Test_BFu0c_BFu0c_BFu0ll_BFs0i, "BFu0c_BFu0c_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0ll_BFs0ll  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0ll_BFs0ll) C1{ Fc:0 Fc:0 FL:0 FL:0}



static void Test_BFu0c_BFu0c_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0ll_BFs0ll");
    static BFu0c_BFu0c_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0ll_BFs0ll(Test_BFu0c_BFu0c_BFu0ll_BFs0ll, "BFu0c_BFu0c_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0ll_BFs0s  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0ll_BFs0s) C1{ Fc:0 Fc:0 FL:0 Fs:0}



static void Test_BFu0c_BFu0c_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0ll_BFs0s");
    static BFu0c_BFu0c_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0ll_BFs0s(Test_BFu0c_BFu0c_BFu0ll_BFs0s, "BFu0c_BFu0c_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0ll_BFu0c  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0ll_BFu0c) C1{ Fc:0 Fc:0 FL:0 Fc:0}



static void Test_BFu0c_BFu0c_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0ll_BFu0c");
    static BFu0c_BFu0c_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0ll_BFu0c(Test_BFu0c_BFu0c_BFu0ll_BFu0c, "BFu0c_BFu0c_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0ll_BFu0i  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0ll_BFu0i) C1{ Fc:0 Fc:0 FL:0 Fi:0}



static void Test_BFu0c_BFu0c_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0ll_BFu0i");
    static BFu0c_BFu0c_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0ll_BFu0i(Test_BFu0c_BFu0c_BFu0ll_BFu0i, "BFu0c_BFu0c_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0ll_BFu0ll  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0ll_BFu0ll) C1{ Fc:0 Fc:0 FL:0 FL:0}



static void Test_BFu0c_BFu0c_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0ll_BFu0ll");
    static BFu0c_BFu0c_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0ll_BFu0ll(Test_BFu0c_BFu0c_BFu0ll_BFu0ll, "BFu0c_BFu0c_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0ll_BFu0s  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0ll_BFu0s) C1{ Fc:0 Fc:0 FL:0 Fs:0}



static void Test_BFu0c_BFu0c_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0ll_BFu0s");
    static BFu0c_BFu0c_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0ll_BFu0s(Test_BFu0c_BFu0c_BFu0ll_BFu0s, "BFu0c_BFu0c_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0s  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0s) C1{ Fc:0 Fc:0 Fs:0}



static void Test_BFu0c_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0s");
    static BFu0c_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0s(Test_BFu0c_BFu0c_BFu0s, "BFu0c_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0s_BFs0c  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0s_BFs0c) C1{ Fc:0 Fc:0 Fs:0 Fc:0}



static void Test_BFu0c_BFu0c_BFu0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0s_BFs0c");
    static BFu0c_BFu0c_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0s_BFs0c(Test_BFu0c_BFu0c_BFu0s_BFs0c, "BFu0c_BFu0c_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0s_BFs0i  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0s_BFs0i) C1{ Fc:0 Fc:0 Fs:0 Fi:0}



static void Test_BFu0c_BFu0c_BFu0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0s_BFs0i");
    static BFu0c_BFu0c_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0s_BFs0i(Test_BFu0c_BFu0c_BFu0s_BFs0i, "BFu0c_BFu0c_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0s_BFs0ll  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0s_BFs0ll) C1{ Fc:0 Fc:0 Fs:0 FL:0}



static void Test_BFu0c_BFu0c_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0s_BFs0ll");
    static BFu0c_BFu0c_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0s_BFs0ll(Test_BFu0c_BFu0c_BFu0s_BFs0ll, "BFu0c_BFu0c_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0s_BFs0s  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0s_BFs0s) C1{ Fc:0 Fc:0 Fs:0 Fs:0}



static void Test_BFu0c_BFu0c_BFu0s_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0s_BFs0s");
    static BFu0c_BFu0c_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0s_BFs0s(Test_BFu0c_BFu0c_BFu0s_BFs0s, "BFu0c_BFu0c_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0s_BFu0c  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0s_BFu0c) C1{ Fc:0 Fc:0 Fs:0 Fc:0}



static void Test_BFu0c_BFu0c_BFu0s_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0s_BFu0c");
    static BFu0c_BFu0c_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0s_BFu0c(Test_BFu0c_BFu0c_BFu0s_BFu0c, "BFu0c_BFu0c_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0s_BFu0i  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0s_BFu0i) C1{ Fc:0 Fc:0 Fs:0 Fi:0}



static void Test_BFu0c_BFu0c_BFu0s_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0s_BFu0i");
    static BFu0c_BFu0c_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0s_BFu0i(Test_BFu0c_BFu0c_BFu0s_BFu0i, "BFu0c_BFu0c_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0s_BFu0ll  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0s_BFu0ll) C1{ Fc:0 Fc:0 Fs:0 FL:0}



static void Test_BFu0c_BFu0c_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0s_BFu0ll");
    static BFu0c_BFu0c_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0s_BFu0ll(Test_BFu0c_BFu0c_BFu0s_BFu0ll, "BFu0c_BFu0c_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu0s_BFu0s  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0c_BFu0s_BFu0s) C1{ Fc:0 Fc:0 Fs:0 Fs:0}



static void Test_BFu0c_BFu0c_BFu0s_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu0s_BFu0s");
    static BFu0c_BFu0c_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0c_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0c_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu0s_BFu0s(Test_BFu0c_BFu0c_BFu0s_BFu0s, "BFu0c_BFu0c_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu15i  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int v1:15;
};
//SIG(1 BFu0c_BFu0c_BFu15i) C1{ Fc:0 Fc:0 Fi:15}



static void Test_BFu0c_BFu0c_BFu15i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu15i");
    static BFu0c_BFu0c_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0c_BFu15i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu0c_BFu0c_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu0c_BFu0c_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu15i(Test_BFu0c_BFu0c_BFu15i, "BFu0c_BFu0c_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu15ll  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64 v1:15;
};
//SIG(1 BFu0c_BFu0c_BFu15ll) C1{ Fc:0 Fc:0 FL:15}



static void Test_BFu0c_BFu0c_BFu15ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu15ll");
    static BFu0c_BFu0c_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0c_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu0c_BFu0c_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu0c_BFu0c_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu15ll(Test_BFu0c_BFu0c_BFu15ll, "BFu0c_BFu0c_BFu15ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu15s  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned short v1:15;
};
//SIG(1 BFu0c_BFu0c_BFu15s) C1{ Fc:0 Fc:0 Fs:15}



static void Test_BFu0c_BFu0c_BFu15s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu15s");
    static BFu0c_BFu0c_BFu15s lv;
    check2(sizeof(lv), 2, "sizeof(BFu0c_BFu0c_BFu15s)");
    check2(__alignof__(lv), 2, "__alignof__(BFu0c_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu0c_BFu0c_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu0c_BFu0c_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu15s(Test_BFu0c_BFu0c_BFu15s, "BFu0c_BFu0c_BFu15s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu16i  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int v1:16;
};
//SIG(1 BFu0c_BFu0c_BFu16i) C1{ Fc:0 Fc:0 Fi:16}



static void Test_BFu0c_BFu0c_BFu16i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu16i");
    static BFu0c_BFu0c_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0c_BFu16i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu0c_BFu0c_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu0c_BFu0c_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu16i(Test_BFu0c_BFu0c_BFu16i, "BFu0c_BFu0c_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu16ll  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64 v1:16;
};
//SIG(1 BFu0c_BFu0c_BFu16ll) C1{ Fc:0 Fc:0 FL:16}



static void Test_BFu0c_BFu0c_BFu16ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu16ll");
    static BFu0c_BFu0c_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0c_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu0c_BFu0c_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu0c_BFu0c_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu16ll(Test_BFu0c_BFu0c_BFu16ll, "BFu0c_BFu0c_BFu16ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu16s  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned short v1:16;
};
//SIG(1 BFu0c_BFu0c_BFu16s) C1{ Fc:0 Fc:0 Fs:16}



static void Test_BFu0c_BFu0c_BFu16s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu16s");
    static BFu0c_BFu0c_BFu16s lv;
    check2(sizeof(lv), 2, "sizeof(BFu0c_BFu0c_BFu16s)");
    check2(__alignof__(lv), 2, "__alignof__(BFu0c_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu0c_BFu0c_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu0c_BFu0c_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu16s(Test_BFu0c_BFu0c_BFu16s, "BFu0c_BFu0c_BFu16s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu17i  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int v1:17;
};
//SIG(1 BFu0c_BFu0c_BFu17i) C1{ Fc:0 Fc:0 Fi:17}



static void Test_BFu0c_BFu0c_BFu17i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu17i");
    static BFu0c_BFu0c_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0c_BFu17i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu0c_BFu0c_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu0c_BFu0c_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu17i(Test_BFu0c_BFu0c_BFu17i, "BFu0c_BFu0c_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu17ll  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64 v1:17;
};
//SIG(1 BFu0c_BFu0c_BFu17ll) C1{ Fc:0 Fc:0 FL:17}



static void Test_BFu0c_BFu0c_BFu17ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu17ll");
    static BFu0c_BFu0c_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0c_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu0c_BFu0c_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu0c_BFu0c_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu17ll(Test_BFu0c_BFu0c_BFu17ll, "BFu0c_BFu0c_BFu17ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu1c  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned char v1:1;
};
//SIG(1 BFu0c_BFu0c_BFu1c) C1{ Fc:0 Fc:0 Fc:1}



static void Test_BFu0c_BFu0c_BFu1c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu1c");
    static BFu0c_BFu0c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu0c_BFu0c_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu1c(Test_BFu0c_BFu0c_BFu1c, "BFu0c_BFu0c_BFu1c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu1i  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int v1:1;
};
//SIG(1 BFu0c_BFu0c_BFu1i) C1{ Fc:0 Fc:0 Fi:1}



static void Test_BFu0c_BFu0c_BFu1i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu1i");
    static BFu0c_BFu0c_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0c_BFu1i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu0c_BFu0c_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu1i(Test_BFu0c_BFu0c_BFu1i, "BFu0c_BFu0c_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu1ll  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64 v1:1;
};
//SIG(1 BFu0c_BFu0c_BFu1ll) C1{ Fc:0 Fc:0 FL:1}



static void Test_BFu0c_BFu0c_BFu1ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu1ll");
    static BFu0c_BFu0c_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0c_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu0c_BFu0c_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu1ll(Test_BFu0c_BFu0c_BFu1ll, "BFu0c_BFu0c_BFu1ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu1s  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned short v1:1;
};
//SIG(1 BFu0c_BFu0c_BFu1s) C1{ Fc:0 Fc:0 Fs:1}



static void Test_BFu0c_BFu0c_BFu1s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu1s");
    static BFu0c_BFu0c_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(BFu0c_BFu0c_BFu1s)");
    check2(__alignof__(lv), 2, "__alignof__(BFu0c_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu0c_BFu0c_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu1s(Test_BFu0c_BFu0c_BFu1s, "BFu0c_BFu0c_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu31i  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int v1:31;
};
//SIG(1 BFu0c_BFu0c_BFu31i) C1{ Fc:0 Fc:0 Fi:31}



static void Test_BFu0c_BFu0c_BFu31i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu31i");
    static BFu0c_BFu0c_BFu31i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0c_BFu31i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu0c_BFu0c_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu0c_BFu0c_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu31i(Test_BFu0c_BFu0c_BFu31i, "BFu0c_BFu0c_BFu31i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu31ll  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64 v1:31;
};
//SIG(1 BFu0c_BFu0c_BFu31ll) C1{ Fc:0 Fc:0 FL:31}



static void Test_BFu0c_BFu0c_BFu31ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu31ll");
    static BFu0c_BFu0c_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0c_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu0c_BFu0c_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu0c_BFu0c_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu31ll(Test_BFu0c_BFu0c_BFu31ll, "BFu0c_BFu0c_BFu31ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu32i  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int v1:32;
};
//SIG(1 BFu0c_BFu0c_BFu32i) C1{ Fc:0 Fc:0 Fi:32}



static void Test_BFu0c_BFu0c_BFu32i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu32i");
    static BFu0c_BFu0c_BFu32i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0c_BFu32i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu0c_BFu0c_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu0c_BFu0c_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu32i(Test_BFu0c_BFu0c_BFu32i, "BFu0c_BFu0c_BFu32i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu32ll  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64 v1:32;
};
//SIG(1 BFu0c_BFu0c_BFu32ll) C1{ Fc:0 Fc:0 FL:32}



static void Test_BFu0c_BFu0c_BFu32ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu32ll");
    static BFu0c_BFu0c_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0c_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu0c_BFu0c_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu0c_BFu0c_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu32ll(Test_BFu0c_BFu0c_BFu32ll, "BFu0c_BFu0c_BFu32ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu33  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64 v1:33;
};
//SIG(1 BFu0c_BFu0c_BFu33) C1{ Fc:0 Fc:0 FL:33}



static void Test_BFu0c_BFu0c_BFu33()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu33");
    static BFu0c_BFu0c_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(BFu0c_BFu0c_BFu33)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu0c_BFu0c_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu0c_BFu0c_BFu33");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu33(Test_BFu0c_BFu0c_BFu33, "BFu0c_BFu0c_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu7c  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned char v1:7;
};
//SIG(1 BFu0c_BFu0c_BFu7c) C1{ Fc:0 Fc:0 Fc:7}



static void Test_BFu0c_BFu0c_BFu7c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu7c");
    static BFu0c_BFu0c_BFu7c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu0c_BFu0c_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu0c_BFu0c_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu7c(Test_BFu0c_BFu0c_BFu7c, "BFu0c_BFu0c_BFu7c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu7i  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int v1:7;
};
//SIG(1 BFu0c_BFu0c_BFu7i) C1{ Fc:0 Fc:0 Fi:7}



static void Test_BFu0c_BFu0c_BFu7i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu7i");
    static BFu0c_BFu0c_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0c_BFu7i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu0c_BFu0c_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu0c_BFu0c_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu7i(Test_BFu0c_BFu0c_BFu7i, "BFu0c_BFu0c_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu7ll  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64 v1:7;
};
//SIG(1 BFu0c_BFu0c_BFu7ll) C1{ Fc:0 Fc:0 FL:7}



static void Test_BFu0c_BFu0c_BFu7ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu7ll");
    static BFu0c_BFu0c_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0c_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu0c_BFu0c_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu0c_BFu0c_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu7ll(Test_BFu0c_BFu0c_BFu7ll, "BFu0c_BFu0c_BFu7ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu7s  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned short v1:7;
};
//SIG(1 BFu0c_BFu0c_BFu7s) C1{ Fc:0 Fc:0 Fs:7}



static void Test_BFu0c_BFu0c_BFu7s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu7s");
    static BFu0c_BFu0c_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(BFu0c_BFu0c_BFu7s)");
    check2(__alignof__(lv), 2, "__alignof__(BFu0c_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu0c_BFu0c_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu0c_BFu0c_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu7s(Test_BFu0c_BFu0c_BFu7s, "BFu0c_BFu0c_BFu7s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu8c  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned char v1:8;
};
//SIG(1 BFu0c_BFu0c_BFu8c) C1{ Fc:0 Fc:0 Fc:8}



static void Test_BFu0c_BFu0c_BFu8c()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu8c");
    static BFu0c_BFu0c_BFu8c lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu0c_BFu0c_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu0c_BFu0c_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu8c(Test_BFu0c_BFu0c_BFu8c, "BFu0c_BFu0c_BFu8c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu8i  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int v1:8;
};
//SIG(1 BFu0c_BFu0c_BFu8i) C1{ Fc:0 Fc:0 Fi:8}



static void Test_BFu0c_BFu0c_BFu8i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu8i");
    static BFu0c_BFu0c_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0c_BFu8i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu0c_BFu0c_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu0c_BFu0c_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu8i(Test_BFu0c_BFu0c_BFu8i, "BFu0c_BFu0c_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu8ll  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64 v1:8;
};
//SIG(1 BFu0c_BFu0c_BFu8ll) C1{ Fc:0 Fc:0 FL:8}



static void Test_BFu0c_BFu0c_BFu8ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu8ll");
    static BFu0c_BFu0c_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0c_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu0c_BFu0c_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu0c_BFu0c_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu8ll(Test_BFu0c_BFu0c_BFu8ll, "BFu0c_BFu0c_BFu8ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu8s  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned short v1:8;
};
//SIG(1 BFu0c_BFu0c_BFu8s) C1{ Fc:0 Fc:0 Fs:8}



static void Test_BFu0c_BFu0c_BFu8s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu8s");
    static BFu0c_BFu0c_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(BFu0c_BFu0c_BFu8s)");
    check2(__alignof__(lv), 2, "__alignof__(BFu0c_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu0c_BFu0c_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu0c_BFu0c_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu8s(Test_BFu0c_BFu0c_BFu8s, "BFu0c_BFu0c_BFu8s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu9i  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int v1:9;
};
//SIG(1 BFu0c_BFu0c_BFu9i) C1{ Fc:0 Fc:0 Fi:9}



static void Test_BFu0c_BFu0c_BFu9i()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu9i");
    static BFu0c_BFu0c_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0c_BFu9i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu0c_BFu0c_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu0c_BFu0c_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu9i(Test_BFu0c_BFu0c_BFu9i, "BFu0c_BFu0c_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu9ll  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64 v1:9;
};
//SIG(1 BFu0c_BFu0c_BFu9ll) C1{ Fc:0 Fc:0 FL:9}



static void Test_BFu0c_BFu0c_BFu9ll()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu9ll");
    static BFu0c_BFu0c_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0c_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu0c_BFu0c_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu0c_BFu0c_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu9ll(Test_BFu0c_BFu0c_BFu9ll, "BFu0c_BFu0c_BFu9ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_BFu9s  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned short v1:9;
};
//SIG(1 BFu0c_BFu0c_BFu9s) C1{ Fc:0 Fc:0 Fs:9}



static void Test_BFu0c_BFu0c_BFu9s()
{
  {
    init_simple_test("BFu0c_BFu0c_BFu9s");
    static BFu0c_BFu0c_BFu9s lv;
    check2(sizeof(lv), 2, "sizeof(BFu0c_BFu0c_BFu9s)");
    check2(__alignof__(lv), 2, "__alignof__(BFu0c_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu0c_BFu0c_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu0c_BFu0c_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_BFu9s(Test_BFu0c_BFu0c_BFu9s, "BFu0c_BFu0c_BFu9s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_C  {
  unsigned char  :0;
  unsigned char  :0;
  char v1;
};
//SIG(1 BFu0c_BFu0c_C) C1{ Fc:0 Fc:0 Fc}



static void Test_BFu0c_BFu0c_C()
{
  {
    init_simple_test("BFu0c_BFu0c_C");
    static BFu0c_BFu0c_C lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFu0c_C)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0c_C.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_C(Test_BFu0c_BFu0c_C, "BFu0c_BFu0c_C", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_D  {
  unsigned char  :0;
  unsigned char  :0;
  double v1;
};
//SIG(1 BFu0c_BFu0c_D) C1{ Fc:0 Fc:0 FL}



static void Test_BFu0c_BFu0c_D()
{
  {
    init_simple_test("BFu0c_BFu0c_D");
    static BFu0c_BFu0c_D lv;
    check2(sizeof(lv), 8, "sizeof(BFu0c_BFu0c_D)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0c_D)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0c_D.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_D(Test_BFu0c_BFu0c_D, "BFu0c_BFu0c_D", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_F  {
  unsigned char  :0;
  unsigned char  :0;
  float v1;
};
//SIG(1 BFu0c_BFu0c_F) C1{ Fc:0 Fc:0 Fi}



static void Test_BFu0c_BFu0c_F()
{
  {
    init_simple_test("BFu0c_BFu0c_F");
    static BFu0c_BFu0c_F lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0c_F)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0c_F)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0c_F.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_F(Test_BFu0c_BFu0c_F, "BFu0c_BFu0c_F", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_I  {
  unsigned char  :0;
  unsigned char  :0;
  int v1;
};
//SIG(1 BFu0c_BFu0c_I) C1{ Fc:0 Fc:0 Fi}



static void Test_BFu0c_BFu0c_I()
{
  {
    init_simple_test("BFu0c_BFu0c_I");
    static BFu0c_BFu0c_I lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0c_I)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0c_I)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0c_I.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_I(Test_BFu0c_BFu0c_I, "BFu0c_BFu0c_I", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_Ip  {
  unsigned char  :0;
  unsigned char  :0;
  int *v1;
};
//SIG(1 BFu0c_BFu0c_Ip) C1{ Fc:0 Fc:0 Fp}



static void Test_BFu0c_BFu0c_Ip()
{
  {
    init_simple_test("BFu0c_BFu0c_Ip");
    static BFu0c_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0c_Ip)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0c_Ip)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0c_Ip.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_Ip(Test_BFu0c_BFu0c_Ip, "BFu0c_BFu0c_Ip", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_L  {
  unsigned char  :0;
  unsigned char  :0;
  __tsi64 v1;
};
//SIG(1 BFu0c_BFu0c_L) C1{ Fc:0 Fc:0 FL}



static void Test_BFu0c_BFu0c_L()
{
  {
    init_simple_test("BFu0c_BFu0c_L");
    static BFu0c_BFu0c_L lv;
    check2(sizeof(lv), 8, "sizeof(BFu0c_BFu0c_L)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0c_L)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0c_L.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_L(Test_BFu0c_BFu0c_L, "BFu0c_BFu0c_L", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_S  {
  unsigned char  :0;
  unsigned char  :0;
  short v1;
};
//SIG(1 BFu0c_BFu0c_S) C1{ Fc:0 Fc:0 Fs}



static void Test_BFu0c_BFu0c_S()
{
  {
    init_simple_test("BFu0c_BFu0c_S");
    static BFu0c_BFu0c_S lv;
    check2(sizeof(lv), 2, "sizeof(BFu0c_BFu0c_S)");
    check2(__alignof__(lv), 2, "__alignof__(BFu0c_BFu0c_S)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0c_S.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_S(Test_BFu0c_BFu0c_S, "BFu0c_BFu0c_S", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_Uc  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned char v1;
};
//SIG(1 BFu0c_BFu0c_Uc) C1{ Fc:0 Fc:0 Fc}



static void Test_BFu0c_BFu0c_Uc()
{
  {
    init_simple_test("BFu0c_BFu0c_Uc");
    static BFu0c_BFu0c_Uc lv;
    check2(sizeof(lv), 1, "sizeof(BFu0c_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu0c_BFu0c_Uc)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0c_Uc.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_Uc(Test_BFu0c_BFu0c_Uc, "BFu0c_BFu0c_Uc", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_Ui  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned int v1;
};
//SIG(1 BFu0c_BFu0c_Ui) C1{ Fc:0 Fc:0 Fi}



static void Test_BFu0c_BFu0c_Ui()
{
  {
    init_simple_test("BFu0c_BFu0c_Ui");
    static BFu0c_BFu0c_Ui lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0c_Ui)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0c_Ui)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0c_Ui.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_Ui(Test_BFu0c_BFu0c_Ui, "BFu0c_BFu0c_Ui", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_Ul  {
  unsigned char  :0;
  unsigned char  :0;
  __tsu64 v1;
};
//SIG(1 BFu0c_BFu0c_Ul) C1{ Fc:0 Fc:0 FL}



static void Test_BFu0c_BFu0c_Ul()
{
  {
    init_simple_test("BFu0c_BFu0c_Ul");
    static BFu0c_BFu0c_Ul lv;
    check2(sizeof(lv), 8, "sizeof(BFu0c_BFu0c_Ul)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0c_Ul)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0c_Ul.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_Ul(Test_BFu0c_BFu0c_Ul, "BFu0c_BFu0c_Ul", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_Us  {
  unsigned char  :0;
  unsigned char  :0;
  unsigned short v1;
};
//SIG(1 BFu0c_BFu0c_Us) C1{ Fc:0 Fc:0 Fs}



static void Test_BFu0c_BFu0c_Us()
{
  {
    init_simple_test("BFu0c_BFu0c_Us");
    static BFu0c_BFu0c_Us lv;
    check2(sizeof(lv), 2, "sizeof(BFu0c_BFu0c_Us)");
    check2(__alignof__(lv), 2, "__alignof__(BFu0c_BFu0c_Us)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0c_Us.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_Us(Test_BFu0c_BFu0c_Us, "BFu0c_BFu0c_Us", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0c_Vp  {
  unsigned char  :0;
  unsigned char  :0;
  void *v1;
};
//SIG(1 BFu0c_BFu0c_Vp) C1{ Fc:0 Fc:0 Fp}



static void Test_BFu0c_BFu0c_Vp()
{
  {
    init_simple_test("BFu0c_BFu0c_Vp");
    static BFu0c_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0c_Vp)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0c_Vp)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0c_Vp.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0c_Vp(Test_BFu0c_BFu0c_Vp, "BFu0c_BFu0c_Vp", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i  {
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0i) C1{ Fc:0 Fi:0}



static void Test_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0i");
    static BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i(Test_BFu0c_BFu0i, "BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0c  {
  unsigned char  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0c) C1{ Fc:0 Fi:0 Fc:0}



static void Test_BFu0c_BFu0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0c");
    static BFu0c_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0c(Test_BFu0c_BFu0i_BFs0c, "BFu0c_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0c_BFs0c  {
  unsigned char  :0;
  unsigned int  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0c_BFs0c) C1{ Fc:0 Fi:0 Fc:0 Fc:0}



static void Test_BFu0c_BFu0i_BFs0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0c_BFs0c");
    static BFu0c_BFu0i_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0c_BFs0c(Test_BFu0c_BFu0i_BFs0c_BFs0c, "BFu0c_BFu0i_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0c_BFs0i  {
  unsigned char  :0;
  unsigned int  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0c_BFs0i) C1{ Fc:0 Fi:0 Fc:0 Fi:0}



static void Test_BFu0c_BFu0i_BFs0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0c_BFs0i");
    static BFu0c_BFu0i_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0c_BFs0i(Test_BFu0c_BFu0i_BFs0c_BFs0i, "BFu0c_BFu0i_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0c_BFs0ll  {
  unsigned char  :0;
  unsigned int  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0c_BFs0ll) C1{ Fc:0 Fi:0 Fc:0 FL:0}



static void Test_BFu0c_BFu0i_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0c_BFs0ll");
    static BFu0c_BFu0i_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0c_BFs0ll(Test_BFu0c_BFu0i_BFs0c_BFs0ll, "BFu0c_BFu0i_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0c_BFs0s  {
  unsigned char  :0;
  unsigned int  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0c_BFs0s) C1{ Fc:0 Fi:0 Fc:0 Fs:0}



static void Test_BFu0c_BFu0i_BFs0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0c_BFs0s");
    static BFu0c_BFu0i_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0c_BFs0s(Test_BFu0c_BFu0i_BFs0c_BFs0s, "BFu0c_BFu0i_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0c_BFu0c  {
  unsigned char  :0;
  unsigned int  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0c_BFu0c) C1{ Fc:0 Fi:0 Fc:0 Fc:0}



static void Test_BFu0c_BFu0i_BFs0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0c_BFu0c");
    static BFu0c_BFu0i_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0c_BFu0c(Test_BFu0c_BFu0i_BFs0c_BFu0c, "BFu0c_BFu0i_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0c_BFu0i  {
  unsigned char  :0;
  unsigned int  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0c_BFu0i) C1{ Fc:0 Fi:0 Fc:0 Fi:0}



static void Test_BFu0c_BFu0i_BFs0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0c_BFu0i");
    static BFu0c_BFu0i_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0c_BFu0i(Test_BFu0c_BFu0i_BFs0c_BFu0i, "BFu0c_BFu0i_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0c_BFu0ll  {
  unsigned char  :0;
  unsigned int  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0c_BFu0ll) C1{ Fc:0 Fi:0 Fc:0 FL:0}



static void Test_BFu0c_BFu0i_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0c_BFu0ll");
    static BFu0c_BFu0i_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0c_BFu0ll(Test_BFu0c_BFu0i_BFs0c_BFu0ll, "BFu0c_BFu0i_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0c_BFu0s  {
  unsigned char  :0;
  unsigned int  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0c_BFu0s) C1{ Fc:0 Fi:0 Fc:0 Fs:0}



static void Test_BFu0c_BFu0i_BFs0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0c_BFu0s");
    static BFu0c_BFu0i_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0c_BFu0s(Test_BFu0c_BFu0i_BFs0c_BFu0s, "BFu0c_BFu0i_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0i  {
  unsigned char  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0i) C1{ Fc:0 Fi:0 Fi:0}



static void Test_BFu0c_BFu0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0i");
    static BFu0c_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0i(Test_BFu0c_BFu0i_BFs0i, "BFu0c_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0i_BFs0c  {
  unsigned char  :0;
  unsigned int  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0i_BFs0c) C1{ Fc:0 Fi:0 Fi:0 Fc:0}



static void Test_BFu0c_BFu0i_BFs0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0i_BFs0c");
    static BFu0c_BFu0i_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0i_BFs0c(Test_BFu0c_BFu0i_BFs0i_BFs0c, "BFu0c_BFu0i_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0i_BFs0i  {
  unsigned char  :0;
  unsigned int  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0i_BFs0i) C1{ Fc:0 Fi:0 Fi:0 Fi:0}



static void Test_BFu0c_BFu0i_BFs0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0i_BFs0i");
    static BFu0c_BFu0i_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0i_BFs0i(Test_BFu0c_BFu0i_BFs0i_BFs0i, "BFu0c_BFu0i_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0i_BFs0ll  {
  unsigned char  :0;
  unsigned int  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0i_BFs0ll) C1{ Fc:0 Fi:0 Fi:0 FL:0}



static void Test_BFu0c_BFu0i_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0i_BFs0ll");
    static BFu0c_BFu0i_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0i_BFs0ll(Test_BFu0c_BFu0i_BFs0i_BFs0ll, "BFu0c_BFu0i_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0i_BFs0s  {
  unsigned char  :0;
  unsigned int  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0i_BFs0s) C1{ Fc:0 Fi:0 Fi:0 Fs:0}



static void Test_BFu0c_BFu0i_BFs0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0i_BFs0s");
    static BFu0c_BFu0i_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0i_BFs0s(Test_BFu0c_BFu0i_BFs0i_BFs0s, "BFu0c_BFu0i_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0i_BFu0c  {
  unsigned char  :0;
  unsigned int  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0i_BFu0c) C1{ Fc:0 Fi:0 Fi:0 Fc:0}



static void Test_BFu0c_BFu0i_BFs0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0i_BFu0c");
    static BFu0c_BFu0i_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0i_BFu0c(Test_BFu0c_BFu0i_BFs0i_BFu0c, "BFu0c_BFu0i_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0i_BFu0i  {
  unsigned char  :0;
  unsigned int  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0i_BFu0i) C1{ Fc:0 Fi:0 Fi:0 Fi:0}



static void Test_BFu0c_BFu0i_BFs0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0i_BFu0i");
    static BFu0c_BFu0i_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0i_BFu0i(Test_BFu0c_BFu0i_BFs0i_BFu0i, "BFu0c_BFu0i_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0i_BFu0ll  {
  unsigned char  :0;
  unsigned int  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0i_BFu0ll) C1{ Fc:0 Fi:0 Fi:0 FL:0}



static void Test_BFu0c_BFu0i_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0i_BFu0ll");
    static BFu0c_BFu0i_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0i_BFu0ll(Test_BFu0c_BFu0i_BFs0i_BFu0ll, "BFu0c_BFu0i_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0i_BFu0s  {
  unsigned char  :0;
  unsigned int  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0i_BFu0s) C1{ Fc:0 Fi:0 Fi:0 Fs:0}



static void Test_BFu0c_BFu0i_BFs0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0i_BFu0s");
    static BFu0c_BFu0i_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0i_BFu0s(Test_BFu0c_BFu0i_BFs0i_BFu0s, "BFu0c_BFu0i_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0ll  {
  unsigned char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0ll) C1{ Fc:0 Fi:0 FL:0}



static void Test_BFu0c_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0ll");
    static BFu0c_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0ll(Test_BFu0c_BFu0i_BFs0ll, "BFu0c_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0ll_BFs0c  {
  unsigned char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0ll_BFs0c) C1{ Fc:0 Fi:0 FL:0 Fc:0}



static void Test_BFu0c_BFu0i_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0ll_BFs0c");
    static BFu0c_BFu0i_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0ll_BFs0c(Test_BFu0c_BFu0i_BFs0ll_BFs0c, "BFu0c_BFu0i_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0ll_BFs0i  {
  unsigned char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0ll_BFs0i) C1{ Fc:0 Fi:0 FL:0 Fi:0}



static void Test_BFu0c_BFu0i_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0ll_BFs0i");
    static BFu0c_BFu0i_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0ll_BFs0i(Test_BFu0c_BFu0i_BFs0ll_BFs0i, "BFu0c_BFu0i_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0ll_BFs0ll  {
  unsigned char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0ll_BFs0ll) C1{ Fc:0 Fi:0 FL:0 FL:0}



static void Test_BFu0c_BFu0i_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0ll_BFs0ll");
    static BFu0c_BFu0i_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0ll_BFs0ll(Test_BFu0c_BFu0i_BFs0ll_BFs0ll, "BFu0c_BFu0i_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0ll_BFs0s  {
  unsigned char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0ll_BFs0s) C1{ Fc:0 Fi:0 FL:0 Fs:0}



static void Test_BFu0c_BFu0i_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0ll_BFs0s");
    static BFu0c_BFu0i_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0ll_BFs0s(Test_BFu0c_BFu0i_BFs0ll_BFs0s, "BFu0c_BFu0i_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0ll_BFu0c  {
  unsigned char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0ll_BFu0c) C1{ Fc:0 Fi:0 FL:0 Fc:0}



static void Test_BFu0c_BFu0i_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0ll_BFu0c");
    static BFu0c_BFu0i_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0ll_BFu0c(Test_BFu0c_BFu0i_BFs0ll_BFu0c, "BFu0c_BFu0i_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0ll_BFu0i  {
  unsigned char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0ll_BFu0i) C1{ Fc:0 Fi:0 FL:0 Fi:0}



static void Test_BFu0c_BFu0i_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0ll_BFu0i");
    static BFu0c_BFu0i_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0ll_BFu0i(Test_BFu0c_BFu0i_BFs0ll_BFu0i, "BFu0c_BFu0i_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0ll_BFu0ll  {
  unsigned char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0ll_BFu0ll) C1{ Fc:0 Fi:0 FL:0 FL:0}



static void Test_BFu0c_BFu0i_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0ll_BFu0ll");
    static BFu0c_BFu0i_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0ll_BFu0ll(Test_BFu0c_BFu0i_BFs0ll_BFu0ll, "BFu0c_BFu0i_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0ll_BFu0s  {
  unsigned char  :0;
  unsigned int  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0ll_BFu0s) C1{ Fc:0 Fi:0 FL:0 Fs:0}



static void Test_BFu0c_BFu0i_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0ll_BFu0s");
    static BFu0c_BFu0i_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0ll_BFu0s(Test_BFu0c_BFu0i_BFs0ll_BFu0s, "BFu0c_BFu0i_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0s  {
  unsigned char  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0s) C1{ Fc:0 Fi:0 Fs:0}



static void Test_BFu0c_BFu0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0s");
    static BFu0c_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0s(Test_BFu0c_BFu0i_BFs0s, "BFu0c_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0s_BFs0c  {
  unsigned char  :0;
  unsigned int  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0s_BFs0c) C1{ Fc:0 Fi:0 Fs:0 Fc:0}



static void Test_BFu0c_BFu0i_BFs0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0s_BFs0c");
    static BFu0c_BFu0i_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0s_BFs0c(Test_BFu0c_BFu0i_BFs0s_BFs0c, "BFu0c_BFu0i_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0s_BFs0i  {
  unsigned char  :0;
  unsigned int  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0s_BFs0i) C1{ Fc:0 Fi:0 Fs:0 Fi:0}



static void Test_BFu0c_BFu0i_BFs0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0s_BFs0i");
    static BFu0c_BFu0i_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0s_BFs0i(Test_BFu0c_BFu0i_BFs0s_BFs0i, "BFu0c_BFu0i_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0s_BFs0ll  {
  unsigned char  :0;
  unsigned int  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0s_BFs0ll) C1{ Fc:0 Fi:0 Fs:0 FL:0}



static void Test_BFu0c_BFu0i_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0s_BFs0ll");
    static BFu0c_BFu0i_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0s_BFs0ll(Test_BFu0c_BFu0i_BFs0s_BFs0ll, "BFu0c_BFu0i_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0s_BFs0s  {
  unsigned char  :0;
  unsigned int  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0s_BFs0s) C1{ Fc:0 Fi:0 Fs:0 Fs:0}



static void Test_BFu0c_BFu0i_BFs0s_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0s_BFs0s");
    static BFu0c_BFu0i_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0s_BFs0s(Test_BFu0c_BFu0i_BFs0s_BFs0s, "BFu0c_BFu0i_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0s_BFu0c  {
  unsigned char  :0;
  unsigned int  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0s_BFu0c) C1{ Fc:0 Fi:0 Fs:0 Fc:0}



static void Test_BFu0c_BFu0i_BFs0s_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0s_BFu0c");
    static BFu0c_BFu0i_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0s_BFu0c(Test_BFu0c_BFu0i_BFs0s_BFu0c, "BFu0c_BFu0i_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0s_BFu0i  {
  unsigned char  :0;
  unsigned int  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0s_BFu0i) C1{ Fc:0 Fi:0 Fs:0 Fi:0}



static void Test_BFu0c_BFu0i_BFs0s_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0s_BFu0i");
    static BFu0c_BFu0i_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0s_BFu0i(Test_BFu0c_BFu0i_BFs0s_BFu0i, "BFu0c_BFu0i_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0s_BFu0ll  {
  unsigned char  :0;
  unsigned int  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0s_BFu0ll) C1{ Fc:0 Fi:0 Fs:0 FL:0}



static void Test_BFu0c_BFu0i_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0s_BFu0ll");
    static BFu0c_BFu0i_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0s_BFu0ll(Test_BFu0c_BFu0i_BFs0s_BFu0ll, "BFu0c_BFu0i_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFs0s_BFu0s  {
  unsigned char  :0;
  unsigned int  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0i_BFs0s_BFu0s) C1{ Fc:0 Fi:0 Fs:0 Fs:0}



static void Test_BFu0c_BFu0i_BFs0s_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFs0s_BFu0s");
    static BFu0c_BFu0i_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFs0s_BFu0s(Test_BFu0c_BFu0i_BFs0s_BFu0s, "BFu0c_BFu0i_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0c  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0c) C1{ Fc:0 Fi:0 Fc:0}



static void Test_BFu0c_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0c");
    static BFu0c_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0c(Test_BFu0c_BFu0i_BFu0c, "BFu0c_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0c_BFs0c  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0c_BFs0c) C1{ Fc:0 Fi:0 Fc:0 Fc:0}



static void Test_BFu0c_BFu0i_BFu0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0c_BFs0c");
    static BFu0c_BFu0i_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0c_BFs0c(Test_BFu0c_BFu0i_BFu0c_BFs0c, "BFu0c_BFu0i_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0c_BFs0i  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0c_BFs0i) C1{ Fc:0 Fi:0 Fc:0 Fi:0}



static void Test_BFu0c_BFu0i_BFu0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0c_BFs0i");
    static BFu0c_BFu0i_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0c_BFs0i(Test_BFu0c_BFu0i_BFu0c_BFs0i, "BFu0c_BFu0i_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0c_BFs0ll  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0c_BFs0ll) C1{ Fc:0 Fi:0 Fc:0 FL:0}



static void Test_BFu0c_BFu0i_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0c_BFs0ll");
    static BFu0c_BFu0i_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0c_BFs0ll(Test_BFu0c_BFu0i_BFu0c_BFs0ll, "BFu0c_BFu0i_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0c_BFs0s  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0c_BFs0s) C1{ Fc:0 Fi:0 Fc:0 Fs:0}



static void Test_BFu0c_BFu0i_BFu0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0c_BFs0s");
    static BFu0c_BFu0i_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0c_BFs0s(Test_BFu0c_BFu0i_BFu0c_BFs0s, "BFu0c_BFu0i_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0c_BFu0c  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0c_BFu0c) C1{ Fc:0 Fi:0 Fc:0 Fc:0}



static void Test_BFu0c_BFu0i_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0c_BFu0c");
    static BFu0c_BFu0i_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0c_BFu0c(Test_BFu0c_BFu0i_BFu0c_BFu0c, "BFu0c_BFu0i_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0c_BFu0i  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0c_BFu0i) C1{ Fc:0 Fi:0 Fc:0 Fi:0}



static void Test_BFu0c_BFu0i_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0c_BFu0i");
    static BFu0c_BFu0i_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0c_BFu0i(Test_BFu0c_BFu0i_BFu0c_BFu0i, "BFu0c_BFu0i_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0c_BFu0ll  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0c_BFu0ll) C1{ Fc:0 Fi:0 Fc:0 FL:0}



static void Test_BFu0c_BFu0i_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0c_BFu0ll");
    static BFu0c_BFu0i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0c_BFu0ll(Test_BFu0c_BFu0i_BFu0c_BFu0ll, "BFu0c_BFu0i_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0c_BFu0s  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0c_BFu0s) C1{ Fc:0 Fi:0 Fc:0 Fs:0}



static void Test_BFu0c_BFu0i_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0c_BFu0s");
    static BFu0c_BFu0i_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0c_BFu0s(Test_BFu0c_BFu0i_BFu0c_BFu0s, "BFu0c_BFu0i_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0i  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0i) C1{ Fc:0 Fi:0 Fi:0}



static void Test_BFu0c_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0i");
    static BFu0c_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0i(Test_BFu0c_BFu0i_BFu0i, "BFu0c_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0i_BFs0c  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0i_BFs0c) C1{ Fc:0 Fi:0 Fi:0 Fc:0}



static void Test_BFu0c_BFu0i_BFu0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0i_BFs0c");
    static BFu0c_BFu0i_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0i_BFs0c(Test_BFu0c_BFu0i_BFu0i_BFs0c, "BFu0c_BFu0i_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0i_BFs0i  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0i_BFs0i) C1{ Fc:0 Fi:0 Fi:0 Fi:0}



static void Test_BFu0c_BFu0i_BFu0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0i_BFs0i");
    static BFu0c_BFu0i_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0i_BFs0i(Test_BFu0c_BFu0i_BFu0i_BFs0i, "BFu0c_BFu0i_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0i_BFs0ll  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0i_BFs0ll) C1{ Fc:0 Fi:0 Fi:0 FL:0}



static void Test_BFu0c_BFu0i_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0i_BFs0ll");
    static BFu0c_BFu0i_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0i_BFs0ll(Test_BFu0c_BFu0i_BFu0i_BFs0ll, "BFu0c_BFu0i_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0i_BFs0s  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0i_BFs0s) C1{ Fc:0 Fi:0 Fi:0 Fs:0}



static void Test_BFu0c_BFu0i_BFu0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0i_BFs0s");
    static BFu0c_BFu0i_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0i_BFs0s(Test_BFu0c_BFu0i_BFu0i_BFs0s, "BFu0c_BFu0i_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0i_BFu0c  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0i_BFu0c) C1{ Fc:0 Fi:0 Fi:0 Fc:0}



static void Test_BFu0c_BFu0i_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0i_BFu0c");
    static BFu0c_BFu0i_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0i_BFu0c(Test_BFu0c_BFu0i_BFu0i_BFu0c, "BFu0c_BFu0i_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0i_BFu0i  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0i_BFu0i) C1{ Fc:0 Fi:0 Fi:0 Fi:0}



static void Test_BFu0c_BFu0i_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0i_BFu0i");
    static BFu0c_BFu0i_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0i_BFu0i(Test_BFu0c_BFu0i_BFu0i_BFu0i, "BFu0c_BFu0i_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0i_BFu0ll  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0i_BFu0ll) C1{ Fc:0 Fi:0 Fi:0 FL:0}



static void Test_BFu0c_BFu0i_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0i_BFu0ll");
    static BFu0c_BFu0i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0i_BFu0ll(Test_BFu0c_BFu0i_BFu0i_BFu0ll, "BFu0c_BFu0i_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0i_BFu0s  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0i_BFu0s) C1{ Fc:0 Fi:0 Fi:0 Fs:0}



static void Test_BFu0c_BFu0i_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0i_BFu0s");
    static BFu0c_BFu0i_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0i_BFu0s(Test_BFu0c_BFu0i_BFu0i_BFu0s, "BFu0c_BFu0i_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0ll  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0ll) C1{ Fc:0 Fi:0 FL:0}



static void Test_BFu0c_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0ll");
    static BFu0c_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0ll(Test_BFu0c_BFu0i_BFu0ll, "BFu0c_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0ll_BFs0c  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0ll_BFs0c) C1{ Fc:0 Fi:0 FL:0 Fc:0}



static void Test_BFu0c_BFu0i_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0ll_BFs0c");
    static BFu0c_BFu0i_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0ll_BFs0c(Test_BFu0c_BFu0i_BFu0ll_BFs0c, "BFu0c_BFu0i_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0ll_BFs0i  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0ll_BFs0i) C1{ Fc:0 Fi:0 FL:0 Fi:0}



static void Test_BFu0c_BFu0i_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0ll_BFs0i");
    static BFu0c_BFu0i_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0ll_BFs0i(Test_BFu0c_BFu0i_BFu0ll_BFs0i, "BFu0c_BFu0i_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0ll_BFs0ll  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0ll_BFs0ll) C1{ Fc:0 Fi:0 FL:0 FL:0}



static void Test_BFu0c_BFu0i_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0ll_BFs0ll");
    static BFu0c_BFu0i_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0ll_BFs0ll(Test_BFu0c_BFu0i_BFu0ll_BFs0ll, "BFu0c_BFu0i_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0ll_BFs0s  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0ll_BFs0s) C1{ Fc:0 Fi:0 FL:0 Fs:0}



static void Test_BFu0c_BFu0i_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0ll_BFs0s");
    static BFu0c_BFu0i_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0ll_BFs0s(Test_BFu0c_BFu0i_BFu0ll_BFs0s, "BFu0c_BFu0i_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0ll_BFu0c  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0ll_BFu0c) C1{ Fc:0 Fi:0 FL:0 Fc:0}



static void Test_BFu0c_BFu0i_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0ll_BFu0c");
    static BFu0c_BFu0i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0ll_BFu0c(Test_BFu0c_BFu0i_BFu0ll_BFu0c, "BFu0c_BFu0i_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0ll_BFu0i  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0ll_BFu0i) C1{ Fc:0 Fi:0 FL:0 Fi:0}



static void Test_BFu0c_BFu0i_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0ll_BFu0i");
    static BFu0c_BFu0i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0ll_BFu0i(Test_BFu0c_BFu0i_BFu0ll_BFu0i, "BFu0c_BFu0i_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0ll_BFu0ll  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0ll_BFu0ll) C1{ Fc:0 Fi:0 FL:0 FL:0}



static void Test_BFu0c_BFu0i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0ll_BFu0ll");
    static BFu0c_BFu0i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0ll_BFu0ll(Test_BFu0c_BFu0i_BFu0ll_BFu0ll, "BFu0c_BFu0i_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0ll_BFu0s  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0ll_BFu0s) C1{ Fc:0 Fi:0 FL:0 Fs:0}



static void Test_BFu0c_BFu0i_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0ll_BFu0s");
    static BFu0c_BFu0i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0ll_BFu0s(Test_BFu0c_BFu0i_BFu0ll_BFu0s, "BFu0c_BFu0i_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0s  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0s) C1{ Fc:0 Fi:0 Fs:0}



static void Test_BFu0c_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0s");
    static BFu0c_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0s(Test_BFu0c_BFu0i_BFu0s, "BFu0c_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0s_BFs0c  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0s_BFs0c) C1{ Fc:0 Fi:0 Fs:0 Fc:0}



static void Test_BFu0c_BFu0i_BFu0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0s_BFs0c");
    static BFu0c_BFu0i_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0s_BFs0c(Test_BFu0c_BFu0i_BFu0s_BFs0c, "BFu0c_BFu0i_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0s_BFs0i  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0s_BFs0i) C1{ Fc:0 Fi:0 Fs:0 Fi:0}



static void Test_BFu0c_BFu0i_BFu0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0s_BFs0i");
    static BFu0c_BFu0i_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0s_BFs0i(Test_BFu0c_BFu0i_BFu0s_BFs0i, "BFu0c_BFu0i_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0s_BFs0ll  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0s_BFs0ll) C1{ Fc:0 Fi:0 Fs:0 FL:0}



static void Test_BFu0c_BFu0i_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0s_BFs0ll");
    static BFu0c_BFu0i_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0s_BFs0ll(Test_BFu0c_BFu0i_BFu0s_BFs0ll, "BFu0c_BFu0i_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0s_BFs0s  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0s_BFs0s) C1{ Fc:0 Fi:0 Fs:0 Fs:0}



static void Test_BFu0c_BFu0i_BFu0s_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0s_BFs0s");
    static BFu0c_BFu0i_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0s_BFs0s(Test_BFu0c_BFu0i_BFu0s_BFs0s, "BFu0c_BFu0i_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0s_BFu0c  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0s_BFu0c) C1{ Fc:0 Fi:0 Fs:0 Fc:0}



static void Test_BFu0c_BFu0i_BFu0s_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0s_BFu0c");
    static BFu0c_BFu0i_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0s_BFu0c(Test_BFu0c_BFu0i_BFu0s_BFu0c, "BFu0c_BFu0i_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0s_BFu0i  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0s_BFu0i) C1{ Fc:0 Fi:0 Fs:0 Fi:0}



static void Test_BFu0c_BFu0i_BFu0s_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0s_BFu0i");
    static BFu0c_BFu0i_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0s_BFu0i(Test_BFu0c_BFu0i_BFu0s_BFu0i, "BFu0c_BFu0i_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0s_BFu0ll  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0s_BFu0ll) C1{ Fc:0 Fi:0 Fs:0 FL:0}



static void Test_BFu0c_BFu0i_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0s_BFu0ll");
    static BFu0c_BFu0i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0s_BFu0ll(Test_BFu0c_BFu0i_BFu0s_BFu0ll, "BFu0c_BFu0i_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu0s_BFu0s  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0i_BFu0s_BFu0s) C1{ Fc:0 Fi:0 Fs:0 Fs:0}



static void Test_BFu0c_BFu0i_BFu0s_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu0s_BFu0s");
    static BFu0c_BFu0i_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu0s_BFu0s(Test_BFu0c_BFu0i_BFu0s_BFu0s, "BFu0c_BFu0i_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu15i  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int v1:15;
};
//SIG(1 BFu0c_BFu0i_BFu15i) C1{ Fc:0 Fi:0 Fi:15}



static void Test_BFu0c_BFu0i_BFu15i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu15i");
    static BFu0c_BFu0i_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0i_BFu15i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu0c_BFu0i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu0c_BFu0i_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu15i(Test_BFu0c_BFu0i_BFu15i, "BFu0c_BFu0i_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu15ll  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64 v1:15;
};
//SIG(1 BFu0c_BFu0i_BFu15ll) C1{ Fc:0 Fi:0 FL:15}



static void Test_BFu0c_BFu0i_BFu15ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu15ll");
    static BFu0c_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu0c_BFu0i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu0c_BFu0i_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu15ll(Test_BFu0c_BFu0i_BFu15ll, "BFu0c_BFu0i_BFu15ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu15s  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned short v1:15;
};
//SIG(1 BFu0c_BFu0i_BFu15s) C1{ Fc:0 Fi:0 Fs:15}



static void Test_BFu0c_BFu0i_BFu15s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu15s");
    static BFu0c_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu0c_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(2,2), "__alignof__(BFu0c_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu0c_BFu0i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu0c_BFu0i_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu15s(Test_BFu0c_BFu0i_BFu15s, "BFu0c_BFu0i_BFu15s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu16i  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int v1:16;
};
//SIG(1 BFu0c_BFu0i_BFu16i) C1{ Fc:0 Fi:0 Fi:16}



static void Test_BFu0c_BFu0i_BFu16i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu16i");
    static BFu0c_BFu0i_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0i_BFu16i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu0c_BFu0i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu0c_BFu0i_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu16i(Test_BFu0c_BFu0i_BFu16i, "BFu0c_BFu0i_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu16ll  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64 v1:16;
};
//SIG(1 BFu0c_BFu0i_BFu16ll) C1{ Fc:0 Fi:0 FL:16}



static void Test_BFu0c_BFu0i_BFu16ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu16ll");
    static BFu0c_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu0c_BFu0i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu0c_BFu0i_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu16ll(Test_BFu0c_BFu0i_BFu16ll, "BFu0c_BFu0i_BFu16ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu16s  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned short v1:16;
};
//SIG(1 BFu0c_BFu0i_BFu16s) C1{ Fc:0 Fi:0 Fs:16}



static void Test_BFu0c_BFu0i_BFu16s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu16s");
    static BFu0c_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu0c_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(2,2), "__alignof__(BFu0c_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu0c_BFu0i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu0c_BFu0i_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu16s(Test_BFu0c_BFu0i_BFu16s, "BFu0c_BFu0i_BFu16s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu17i  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int v1:17;
};
//SIG(1 BFu0c_BFu0i_BFu17i) C1{ Fc:0 Fi:0 Fi:17}



static void Test_BFu0c_BFu0i_BFu17i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu17i");
    static BFu0c_BFu0i_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0i_BFu17i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu0c_BFu0i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu0c_BFu0i_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu17i(Test_BFu0c_BFu0i_BFu17i, "BFu0c_BFu0i_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu17ll  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64 v1:17;
};
//SIG(1 BFu0c_BFu0i_BFu17ll) C1{ Fc:0 Fi:0 FL:17}



static void Test_BFu0c_BFu0i_BFu17ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu17ll");
    static BFu0c_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu0c_BFu0i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu0c_BFu0i_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu17ll(Test_BFu0c_BFu0i_BFu17ll, "BFu0c_BFu0i_BFu17ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu1c  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned char v1:1;
};
//SIG(1 BFu0c_BFu0i_BFu1c) C1{ Fc:0 Fi:0 Fc:1}



static void Test_BFu0c_BFu0i_BFu1c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu1c");
    static BFu0c_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu0c_BFu0i_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu1c(Test_BFu0c_BFu0i_BFu1c, "BFu0c_BFu0i_BFu1c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu1i  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int v1:1;
};
//SIG(1 BFu0c_BFu0i_BFu1i) C1{ Fc:0 Fi:0 Fi:1}



static void Test_BFu0c_BFu0i_BFu1i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu1i");
    static BFu0c_BFu0i_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0i_BFu1i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu0c_BFu0i_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu1i(Test_BFu0c_BFu0i_BFu1i, "BFu0c_BFu0i_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu1ll  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64 v1:1;
};
//SIG(1 BFu0c_BFu0i_BFu1ll) C1{ Fc:0 Fi:0 FL:1}



static void Test_BFu0c_BFu0i_BFu1ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu1ll");
    static BFu0c_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu0c_BFu0i_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu1ll(Test_BFu0c_BFu0i_BFu1ll, "BFu0c_BFu0i_BFu1ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu1s  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned short v1:1;
};
//SIG(1 BFu0c_BFu0i_BFu1s) C1{ Fc:0 Fi:0 Fs:1}



static void Test_BFu0c_BFu0i_BFu1s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu1s");
    static BFu0c_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu0c_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(2,2), "__alignof__(BFu0c_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu0c_BFu0i_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu1s(Test_BFu0c_BFu0i_BFu1s, "BFu0c_BFu0i_BFu1s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu31i  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int v1:31;
};
//SIG(1 BFu0c_BFu0i_BFu31i) C1{ Fc:0 Fi:0 Fi:31}



static void Test_BFu0c_BFu0i_BFu31i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu31i");
    static BFu0c_BFu0i_BFu31i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0i_BFu31i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu0c_BFu0i_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu0c_BFu0i_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu31i(Test_BFu0c_BFu0i_BFu31i, "BFu0c_BFu0i_BFu31i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu31ll  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64 v1:31;
};
//SIG(1 BFu0c_BFu0i_BFu31ll) C1{ Fc:0 Fi:0 FL:31}



static void Test_BFu0c_BFu0i_BFu31ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu31ll");
    static BFu0c_BFu0i_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu0c_BFu0i_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu0c_BFu0i_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu31ll(Test_BFu0c_BFu0i_BFu31ll, "BFu0c_BFu0i_BFu31ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu32i  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int v1:32;
};
//SIG(1 BFu0c_BFu0i_BFu32i) C1{ Fc:0 Fi:0 Fi:32}



static void Test_BFu0c_BFu0i_BFu32i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu32i");
    static BFu0c_BFu0i_BFu32i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0i_BFu32i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu0c_BFu0i_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu0c_BFu0i_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu32i(Test_BFu0c_BFu0i_BFu32i, "BFu0c_BFu0i_BFu32i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu32ll  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64 v1:32;
};
//SIG(1 BFu0c_BFu0i_BFu32ll) C1{ Fc:0 Fi:0 FL:32}



static void Test_BFu0c_BFu0i_BFu32ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu32ll");
    static BFu0c_BFu0i_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu0c_BFu0i_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu0c_BFu0i_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu32ll(Test_BFu0c_BFu0i_BFu32ll, "BFu0c_BFu0i_BFu32ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu33  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64 v1:33;
};
//SIG(1 BFu0c_BFu0i_BFu33) C1{ Fc:0 Fi:0 FL:33}



static void Test_BFu0c_BFu0i_BFu33()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu33");
    static BFu0c_BFu0i_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(BFu0c_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu0c_BFu0i_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu0c_BFu0i_BFu33");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu33(Test_BFu0c_BFu0i_BFu33, "BFu0c_BFu0i_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu7c  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned char v1:7;
};
//SIG(1 BFu0c_BFu0i_BFu7c) C1{ Fc:0 Fi:0 Fc:7}



static void Test_BFu0c_BFu0i_BFu7c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu7c");
    static BFu0c_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu0c_BFu0i_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu0c_BFu0i_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu7c(Test_BFu0c_BFu0i_BFu7c, "BFu0c_BFu0i_BFu7c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu7i  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int v1:7;
};
//SIG(1 BFu0c_BFu0i_BFu7i) C1{ Fc:0 Fi:0 Fi:7}



static void Test_BFu0c_BFu0i_BFu7i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu7i");
    static BFu0c_BFu0i_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0i_BFu7i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu0c_BFu0i_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu0c_BFu0i_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu7i(Test_BFu0c_BFu0i_BFu7i, "BFu0c_BFu0i_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu7ll  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64 v1:7;
};
//SIG(1 BFu0c_BFu0i_BFu7ll) C1{ Fc:0 Fi:0 FL:7}



static void Test_BFu0c_BFu0i_BFu7ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu7ll");
    static BFu0c_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu0c_BFu0i_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu0c_BFu0i_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu7ll(Test_BFu0c_BFu0i_BFu7ll, "BFu0c_BFu0i_BFu7ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu7s  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned short v1:7;
};
//SIG(1 BFu0c_BFu0i_BFu7s) C1{ Fc:0 Fi:0 Fs:7}



static void Test_BFu0c_BFu0i_BFu7s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu7s");
    static BFu0c_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu0c_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(2,2), "__alignof__(BFu0c_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu0c_BFu0i_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu0c_BFu0i_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu7s(Test_BFu0c_BFu0i_BFu7s, "BFu0c_BFu0i_BFu7s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu8c  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned char v1:8;
};
//SIG(1 BFu0c_BFu0i_BFu8c) C1{ Fc:0 Fi:0 Fc:8}



static void Test_BFu0c_BFu0i_BFu8c()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu8c");
    static BFu0c_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu0c_BFu0i_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu0c_BFu0i_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu8c(Test_BFu0c_BFu0i_BFu8c, "BFu0c_BFu0i_BFu8c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu8i  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int v1:8;
};
//SIG(1 BFu0c_BFu0i_BFu8i) C1{ Fc:0 Fi:0 Fi:8}



static void Test_BFu0c_BFu0i_BFu8i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu8i");
    static BFu0c_BFu0i_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0i_BFu8i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu0c_BFu0i_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu0c_BFu0i_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu8i(Test_BFu0c_BFu0i_BFu8i, "BFu0c_BFu0i_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu8ll  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64 v1:8;
};
//SIG(1 BFu0c_BFu0i_BFu8ll) C1{ Fc:0 Fi:0 FL:8}



static void Test_BFu0c_BFu0i_BFu8ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu8ll");
    static BFu0c_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu0c_BFu0i_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu0c_BFu0i_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu8ll(Test_BFu0c_BFu0i_BFu8ll, "BFu0c_BFu0i_BFu8ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu8s  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned short v1:8;
};
//SIG(1 BFu0c_BFu0i_BFu8s) C1{ Fc:0 Fi:0 Fs:8}



static void Test_BFu0c_BFu0i_BFu8s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu8s");
    static BFu0c_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu0c_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(2,2), "__alignof__(BFu0c_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu0c_BFu0i_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu0c_BFu0i_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu8s(Test_BFu0c_BFu0i_BFu8s, "BFu0c_BFu0i_BFu8s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu9i  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int v1:9;
};
//SIG(1 BFu0c_BFu0i_BFu9i) C1{ Fc:0 Fi:0 Fi:9}



static void Test_BFu0c_BFu0i_BFu9i()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu9i");
    static BFu0c_BFu0i_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0i_BFu9i)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu0c_BFu0i_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu0c_BFu0i_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu9i(Test_BFu0c_BFu0i_BFu9i, "BFu0c_BFu0i_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu9ll  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64 v1:9;
};
//SIG(1 BFu0c_BFu0i_BFu9ll) C1{ Fc:0 Fi:0 FL:9}



static void Test_BFu0c_BFu0i_BFu9ll()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu9ll");
    static BFu0c_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu0c_BFu0i_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu0c_BFu0i_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu9ll(Test_BFu0c_BFu0i_BFu9ll, "BFu0c_BFu0i_BFu9ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_BFu9s  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned short v1:9;
};
//SIG(1 BFu0c_BFu0i_BFu9s) C1{ Fc:0 Fi:0 Fs:9}



static void Test_BFu0c_BFu0i_BFu9s()
{
  {
    init_simple_test("BFu0c_BFu0i_BFu9s");
    static BFu0c_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu0c_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(2,2), "__alignof__(BFu0c_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu0c_BFu0i_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu0c_BFu0i_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_BFu9s(Test_BFu0c_BFu0i_BFu9s, "BFu0c_BFu0i_BFu9s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_C  {
  unsigned char  :0;
  unsigned int  :0;
  char v1;
};
//SIG(1 BFu0c_BFu0i_C) C1{ Fc:0 Fi:0 Fc}



static void Test_BFu0c_BFu0i_C()
{
  {
    init_simple_test("BFu0c_BFu0i_C");
    static BFu0c_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_C)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0i_C.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_C(Test_BFu0c_BFu0i_C, "BFu0c_BFu0i_C", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_D  {
  unsigned char  :0;
  unsigned int  :0;
  double v1;
};
//SIG(1 BFu0c_BFu0i_D) C1{ Fc:0 Fi:0 FL}



static void Test_BFu0c_BFu0i_D()
{
  {
    init_simple_test("BFu0c_BFu0i_D");
    static BFu0c_BFu0i_D lv;
    check2(sizeof(lv), 8, "sizeof(BFu0c_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0i_D)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0i_D.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_D(Test_BFu0c_BFu0i_D, "BFu0c_BFu0i_D", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_F  {
  unsigned char  :0;
  unsigned int  :0;
  float v1;
};
//SIG(1 BFu0c_BFu0i_F) C1{ Fc:0 Fi:0 Fi}



static void Test_BFu0c_BFu0i_F()
{
  {
    init_simple_test("BFu0c_BFu0i_F");
    static BFu0c_BFu0i_F lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0i_F)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0i_F)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0i_F.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_F(Test_BFu0c_BFu0i_F, "BFu0c_BFu0i_F", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_I  {
  unsigned char  :0;
  unsigned int  :0;
  int v1;
};
//SIG(1 BFu0c_BFu0i_I) C1{ Fc:0 Fi:0 Fi}



static void Test_BFu0c_BFu0i_I()
{
  {
    init_simple_test("BFu0c_BFu0i_I");
    static BFu0c_BFu0i_I lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0i_I)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0i_I)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0i_I.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_I(Test_BFu0c_BFu0i_I, "BFu0c_BFu0i_I", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_Ip  {
  unsigned char  :0;
  unsigned int  :0;
  int *v1;
};
//SIG(1 BFu0c_BFu0i_Ip) C1{ Fc:0 Fi:0 Fp}



static void Test_BFu0c_BFu0i_Ip()
{
  {
    init_simple_test("BFu0c_BFu0i_Ip");
    static BFu0c_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0i_Ip)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0i_Ip.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_Ip(Test_BFu0c_BFu0i_Ip, "BFu0c_BFu0i_Ip", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_L  {
  unsigned char  :0;
  unsigned int  :0;
  __tsi64 v1;
};
//SIG(1 BFu0c_BFu0i_L) C1{ Fc:0 Fi:0 FL}



static void Test_BFu0c_BFu0i_L()
{
  {
    init_simple_test("BFu0c_BFu0i_L");
    static BFu0c_BFu0i_L lv;
    check2(sizeof(lv), 8, "sizeof(BFu0c_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0i_L)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0i_L.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_L(Test_BFu0c_BFu0i_L, "BFu0c_BFu0i_L", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_S  {
  unsigned char  :0;
  unsigned int  :0;
  short v1;
};
//SIG(1 BFu0c_BFu0i_S) C1{ Fc:0 Fi:0 Fs}



static void Test_BFu0c_BFu0i_S()
{
  {
    init_simple_test("BFu0c_BFu0i_S");
    static BFu0c_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu0c_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(2,2), "__alignof__(BFu0c_BFu0i_S)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0i_S.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_S(Test_BFu0c_BFu0i_S, "BFu0c_BFu0i_S", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_Uc  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned char v1;
};
//SIG(1 BFu0c_BFu0i_Uc) C1{ Fc:0 Fi:0 Fc}



static void Test_BFu0c_BFu0i_Uc()
{
  {
    init_simple_test("BFu0c_BFu0i_Uc");
    static BFu0c_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0i_Uc)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0i_Uc.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_Uc(Test_BFu0c_BFu0i_Uc, "BFu0c_BFu0i_Uc", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_Ui  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned int v1;
};
//SIG(1 BFu0c_BFu0i_Ui) C1{ Fc:0 Fi:0 Fi}



static void Test_BFu0c_BFu0i_Ui()
{
  {
    init_simple_test("BFu0c_BFu0i_Ui");
    static BFu0c_BFu0i_Ui lv;
    check2(sizeof(lv), 4, "sizeof(BFu0c_BFu0i_Ui)");
    check2(__alignof__(lv), 4, "__alignof__(BFu0c_BFu0i_Ui)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0i_Ui.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_Ui(Test_BFu0c_BFu0i_Ui, "BFu0c_BFu0i_Ui", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_Ul  {
  unsigned char  :0;
  unsigned int  :0;
  __tsu64 v1;
};
//SIG(1 BFu0c_BFu0i_Ul) C1{ Fc:0 Fi:0 FL}



static void Test_BFu0c_BFu0i_Ul()
{
  {
    init_simple_test("BFu0c_BFu0i_Ul");
    static BFu0c_BFu0i_Ul lv;
    check2(sizeof(lv), 8, "sizeof(BFu0c_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0i_Ul)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0i_Ul.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_Ul(Test_BFu0c_BFu0i_Ul, "BFu0c_BFu0i_Ul", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_Us  {
  unsigned char  :0;
  unsigned int  :0;
  unsigned short v1;
};
//SIG(1 BFu0c_BFu0i_Us) C1{ Fc:0 Fi:0 Fs}



static void Test_BFu0c_BFu0i_Us()
{
  {
    init_simple_test("BFu0c_BFu0i_Us");
    static BFu0c_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu0c_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(2,2), "__alignof__(BFu0c_BFu0i_Us)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0i_Us.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_Us(Test_BFu0c_BFu0i_Us, "BFu0c_BFu0i_Us", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0i_Vp  {
  unsigned char  :0;
  unsigned int  :0;
  void *v1;
};
//SIG(1 BFu0c_BFu0i_Vp) C1{ Fc:0 Fi:0 Fp}



static void Test_BFu0c_BFu0i_Vp()
{
  {
    init_simple_test("BFu0c_BFu0i_Vp");
    static BFu0c_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0i_Vp)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0i_Vp.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0i_Vp(Test_BFu0c_BFu0i_Vp, "BFu0c_BFu0i_Vp", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll  {
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0ll) C1{ Fc:0 FL:0}



static void Test_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll");
    static BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll(Test_BFu0c_BFu0ll, "BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0c  {
  unsigned char  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0c) C1{ Fc:0 FL:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0c");
    static BFu0c_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0c(Test_BFu0c_BFu0ll_BFs0c, "BFu0c_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0c_BFs0c  {
  unsigned char  :0;
  __tsu64  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0c_BFs0c) C1{ Fc:0 FL:0 Fc:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFs0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0c_BFs0c");
    static BFu0c_BFu0ll_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0c_BFs0c(Test_BFu0c_BFu0ll_BFs0c_BFs0c, "BFu0c_BFu0ll_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0c_BFs0i  {
  unsigned char  :0;
  __tsu64  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0c_BFs0i) C1{ Fc:0 FL:0 Fc:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFs0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0c_BFs0i");
    static BFu0c_BFu0ll_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0c_BFs0i(Test_BFu0c_BFu0ll_BFs0c_BFs0i, "BFu0c_BFu0ll_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0c_BFs0ll  {
  unsigned char  :0;
  __tsu64  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0c_BFs0ll) C1{ Fc:0 FL:0 Fc:0 FL:0}



static void Test_BFu0c_BFu0ll_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0c_BFs0ll");
    static BFu0c_BFu0ll_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0c_BFs0ll(Test_BFu0c_BFu0ll_BFs0c_BFs0ll, "BFu0c_BFu0ll_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0c_BFs0s  {
  unsigned char  :0;
  __tsu64  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0c_BFs0s) C1{ Fc:0 FL:0 Fc:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFs0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0c_BFs0s");
    static BFu0c_BFu0ll_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0c_BFs0s(Test_BFu0c_BFu0ll_BFs0c_BFs0s, "BFu0c_BFu0ll_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0c_BFu0c  {
  unsigned char  :0;
  __tsu64  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0c_BFu0c) C1{ Fc:0 FL:0 Fc:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFs0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0c_BFu0c");
    static BFu0c_BFu0ll_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0c_BFu0c(Test_BFu0c_BFu0ll_BFs0c_BFu0c, "BFu0c_BFu0ll_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0c_BFu0i  {
  unsigned char  :0;
  __tsu64  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0c_BFu0i) C1{ Fc:0 FL:0 Fc:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFs0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0c_BFu0i");
    static BFu0c_BFu0ll_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0c_BFu0i(Test_BFu0c_BFu0ll_BFs0c_BFu0i, "BFu0c_BFu0ll_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0c_BFu0ll  {
  unsigned char  :0;
  __tsu64  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0c_BFu0ll) C1{ Fc:0 FL:0 Fc:0 FL:0}



static void Test_BFu0c_BFu0ll_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0c_BFu0ll");
    static BFu0c_BFu0ll_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0c_BFu0ll(Test_BFu0c_BFu0ll_BFs0c_BFu0ll, "BFu0c_BFu0ll_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0c_BFu0s  {
  unsigned char  :0;
  __tsu64  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0c_BFu0s) C1{ Fc:0 FL:0 Fc:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFs0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0c_BFu0s");
    static BFu0c_BFu0ll_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0c_BFu0s(Test_BFu0c_BFu0ll_BFs0c_BFu0s, "BFu0c_BFu0ll_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0i  {
  unsigned char  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0i) C1{ Fc:0 FL:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0i");
    static BFu0c_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0i(Test_BFu0c_BFu0ll_BFs0i, "BFu0c_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0i_BFs0c  {
  unsigned char  :0;
  __tsu64  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0i_BFs0c) C1{ Fc:0 FL:0 Fi:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFs0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0i_BFs0c");
    static BFu0c_BFu0ll_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0i_BFs0c(Test_BFu0c_BFu0ll_BFs0i_BFs0c, "BFu0c_BFu0ll_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0i_BFs0i  {
  unsigned char  :0;
  __tsu64  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0i_BFs0i) C1{ Fc:0 FL:0 Fi:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFs0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0i_BFs0i");
    static BFu0c_BFu0ll_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0i_BFs0i(Test_BFu0c_BFu0ll_BFs0i_BFs0i, "BFu0c_BFu0ll_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0i_BFs0ll  {
  unsigned char  :0;
  __tsu64  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0i_BFs0ll) C1{ Fc:0 FL:0 Fi:0 FL:0}



static void Test_BFu0c_BFu0ll_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0i_BFs0ll");
    static BFu0c_BFu0ll_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0i_BFs0ll(Test_BFu0c_BFu0ll_BFs0i_BFs0ll, "BFu0c_BFu0ll_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0i_BFs0s  {
  unsigned char  :0;
  __tsu64  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0i_BFs0s) C1{ Fc:0 FL:0 Fi:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFs0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0i_BFs0s");
    static BFu0c_BFu0ll_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0i_BFs0s(Test_BFu0c_BFu0ll_BFs0i_BFs0s, "BFu0c_BFu0ll_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0i_BFu0c  {
  unsigned char  :0;
  __tsu64  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0i_BFu0c) C1{ Fc:0 FL:0 Fi:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFs0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0i_BFu0c");
    static BFu0c_BFu0ll_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0i_BFu0c(Test_BFu0c_BFu0ll_BFs0i_BFu0c, "BFu0c_BFu0ll_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0i_BFu0i  {
  unsigned char  :0;
  __tsu64  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0i_BFu0i) C1{ Fc:0 FL:0 Fi:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFs0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0i_BFu0i");
    static BFu0c_BFu0ll_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0i_BFu0i(Test_BFu0c_BFu0ll_BFs0i_BFu0i, "BFu0c_BFu0ll_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0i_BFu0ll  {
  unsigned char  :0;
  __tsu64  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0i_BFu0ll) C1{ Fc:0 FL:0 Fi:0 FL:0}



static void Test_BFu0c_BFu0ll_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0i_BFu0ll");
    static BFu0c_BFu0ll_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0i_BFu0ll(Test_BFu0c_BFu0ll_BFs0i_BFu0ll, "BFu0c_BFu0ll_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0i_BFu0s  {
  unsigned char  :0;
  __tsu64  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0i_BFu0s) C1{ Fc:0 FL:0 Fi:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFs0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0i_BFu0s");
    static BFu0c_BFu0ll_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0i_BFu0s(Test_BFu0c_BFu0ll_BFs0i_BFu0s, "BFu0c_BFu0ll_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0ll  {
  unsigned char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0ll) C1{ Fc:0 FL:0 FL:0}



static void Test_BFu0c_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0ll");
    static BFu0c_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0ll(Test_BFu0c_BFu0ll_BFs0ll, "BFu0c_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0ll_BFs0c  {
  unsigned char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0ll_BFs0c) C1{ Fc:0 FL:0 FL:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0ll_BFs0c");
    static BFu0c_BFu0ll_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0ll_BFs0c(Test_BFu0c_BFu0ll_BFs0ll_BFs0c, "BFu0c_BFu0ll_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0ll_BFs0i  {
  unsigned char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0ll_BFs0i) C1{ Fc:0 FL:0 FL:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0ll_BFs0i");
    static BFu0c_BFu0ll_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0ll_BFs0i(Test_BFu0c_BFu0ll_BFs0ll_BFs0i, "BFu0c_BFu0ll_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0ll_BFs0ll  {
  unsigned char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0ll_BFs0ll) C1{ Fc:0 FL:0 FL:0 FL:0}



static void Test_BFu0c_BFu0ll_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0ll_BFs0ll");
    static BFu0c_BFu0ll_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0ll_BFs0ll(Test_BFu0c_BFu0ll_BFs0ll_BFs0ll, "BFu0c_BFu0ll_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0ll_BFs0s  {
  unsigned char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0ll_BFs0s) C1{ Fc:0 FL:0 FL:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0ll_BFs0s");
    static BFu0c_BFu0ll_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0ll_BFs0s(Test_BFu0c_BFu0ll_BFs0ll_BFs0s, "BFu0c_BFu0ll_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0ll_BFu0c  {
  unsigned char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0ll_BFu0c) C1{ Fc:0 FL:0 FL:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0ll_BFu0c");
    static BFu0c_BFu0ll_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0ll_BFu0c(Test_BFu0c_BFu0ll_BFs0ll_BFu0c, "BFu0c_BFu0ll_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0ll_BFu0i  {
  unsigned char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0ll_BFu0i) C1{ Fc:0 FL:0 FL:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0ll_BFu0i");
    static BFu0c_BFu0ll_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0ll_BFu0i(Test_BFu0c_BFu0ll_BFs0ll_BFu0i, "BFu0c_BFu0ll_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0ll_BFu0ll  {
  unsigned char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0ll_BFu0ll) C1{ Fc:0 FL:0 FL:0 FL:0}



static void Test_BFu0c_BFu0ll_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0ll_BFu0ll");
    static BFu0c_BFu0ll_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0ll_BFu0ll(Test_BFu0c_BFu0ll_BFs0ll_BFu0ll, "BFu0c_BFu0ll_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0ll_BFu0s  {
  unsigned char  :0;
  __tsu64  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0ll_BFu0s) C1{ Fc:0 FL:0 FL:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0ll_BFu0s");
    static BFu0c_BFu0ll_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0ll_BFu0s(Test_BFu0c_BFu0ll_BFs0ll_BFu0s, "BFu0c_BFu0ll_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0s  {
  unsigned char  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0s) C1{ Fc:0 FL:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0s");
    static BFu0c_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0s(Test_BFu0c_BFu0ll_BFs0s, "BFu0c_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0s_BFs0c  {
  unsigned char  :0;
  __tsu64  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0s_BFs0c) C1{ Fc:0 FL:0 Fs:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFs0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0s_BFs0c");
    static BFu0c_BFu0ll_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0s_BFs0c(Test_BFu0c_BFu0ll_BFs0s_BFs0c, "BFu0c_BFu0ll_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0s_BFs0i  {
  unsigned char  :0;
  __tsu64  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0s_BFs0i) C1{ Fc:0 FL:0 Fs:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFs0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0s_BFs0i");
    static BFu0c_BFu0ll_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0s_BFs0i(Test_BFu0c_BFu0ll_BFs0s_BFs0i, "BFu0c_BFu0ll_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0s_BFs0ll  {
  unsigned char  :0;
  __tsu64  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0s_BFs0ll) C1{ Fc:0 FL:0 Fs:0 FL:0}



static void Test_BFu0c_BFu0ll_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0s_BFs0ll");
    static BFu0c_BFu0ll_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0s_BFs0ll(Test_BFu0c_BFu0ll_BFs0s_BFs0ll, "BFu0c_BFu0ll_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0s_BFs0s  {
  unsigned char  :0;
  __tsu64  :0;
  signed short  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0s_BFs0s) C1{ Fc:0 FL:0 Fs:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFs0s_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0s_BFs0s");
    static BFu0c_BFu0ll_BFs0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0s_BFs0s(Test_BFu0c_BFu0ll_BFs0s_BFs0s, "BFu0c_BFu0ll_BFs0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0s_BFu0c  {
  unsigned char  :0;
  __tsu64  :0;
  signed short  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0s_BFu0c) C1{ Fc:0 FL:0 Fs:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFs0s_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0s_BFu0c");
    static BFu0c_BFu0ll_BFs0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0s_BFu0c(Test_BFu0c_BFu0ll_BFs0s_BFu0c, "BFu0c_BFu0ll_BFs0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0s_BFu0i  {
  unsigned char  :0;
  __tsu64  :0;
  signed short  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0s_BFu0i) C1{ Fc:0 FL:0 Fs:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFs0s_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0s_BFu0i");
    static BFu0c_BFu0ll_BFs0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0s_BFu0i(Test_BFu0c_BFu0ll_BFs0s_BFu0i, "BFu0c_BFu0ll_BFs0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0s_BFu0ll  {
  unsigned char  :0;
  __tsu64  :0;
  signed short  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0s_BFu0ll) C1{ Fc:0 FL:0 Fs:0 FL:0}



static void Test_BFu0c_BFu0ll_BFs0s_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0s_BFu0ll");
    static BFu0c_BFu0ll_BFs0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0s_BFu0ll(Test_BFu0c_BFu0ll_BFs0s_BFu0ll, "BFu0c_BFu0ll_BFs0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFs0s_BFu0s  {
  unsigned char  :0;
  __tsu64  :0;
  signed short  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFs0s_BFu0s) C1{ Fc:0 FL:0 Fs:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFs0s_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFs0s_BFu0s");
    static BFu0c_BFu0ll_BFs0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFs0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFs0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFs0s_BFu0s(Test_BFu0c_BFu0ll_BFs0s_BFu0s, "BFu0c_BFu0ll_BFs0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0c  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0c) C1{ Fc:0 FL:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0c");
    static BFu0c_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0c(Test_BFu0c_BFu0ll_BFu0c, "BFu0c_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0c_BFs0c  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0c_BFs0c) C1{ Fc:0 FL:0 Fc:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFu0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0c_BFs0c");
    static BFu0c_BFu0ll_BFu0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0c_BFs0c(Test_BFu0c_BFu0ll_BFu0c_BFs0c, "BFu0c_BFu0ll_BFu0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0c_BFs0i  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0c_BFs0i) C1{ Fc:0 FL:0 Fc:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFu0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0c_BFs0i");
    static BFu0c_BFu0ll_BFu0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0c_BFs0i(Test_BFu0c_BFu0ll_BFu0c_BFs0i, "BFu0c_BFu0ll_BFu0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0c_BFs0ll  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0c_BFs0ll) C1{ Fc:0 FL:0 Fc:0 FL:0}



static void Test_BFu0c_BFu0ll_BFu0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0c_BFs0ll");
    static BFu0c_BFu0ll_BFu0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0c_BFs0ll(Test_BFu0c_BFu0ll_BFu0c_BFs0ll, "BFu0c_BFu0ll_BFu0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0c_BFs0s  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0c_BFs0s) C1{ Fc:0 FL:0 Fc:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFu0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0c_BFs0s");
    static BFu0c_BFu0ll_BFu0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0c_BFs0s(Test_BFu0c_BFu0ll_BFu0c_BFs0s, "BFu0c_BFu0ll_BFu0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0c_BFu0c  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0c_BFu0c) C1{ Fc:0 FL:0 Fc:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0c_BFu0c");
    static BFu0c_BFu0ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0c_BFu0c(Test_BFu0c_BFu0ll_BFu0c_BFu0c, "BFu0c_BFu0ll_BFu0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0c_BFu0i  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0c_BFu0i) C1{ Fc:0 FL:0 Fc:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0c_BFu0i");
    static BFu0c_BFu0ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0c_BFu0i(Test_BFu0c_BFu0ll_BFu0c_BFu0i, "BFu0c_BFu0ll_BFu0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0c_BFu0ll  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0c_BFu0ll) C1{ Fc:0 FL:0 Fc:0 FL:0}



static void Test_BFu0c_BFu0ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0c_BFu0ll");
    static BFu0c_BFu0ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0c_BFu0ll(Test_BFu0c_BFu0ll_BFu0c_BFu0ll, "BFu0c_BFu0ll_BFu0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0c_BFu0s  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0c_BFu0s) C1{ Fc:0 FL:0 Fc:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0c_BFu0s");
    static BFu0c_BFu0ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0c_BFu0s(Test_BFu0c_BFu0ll_BFu0c_BFu0s, "BFu0c_BFu0ll_BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0i  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0i) C1{ Fc:0 FL:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0i");
    static BFu0c_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0i(Test_BFu0c_BFu0ll_BFu0i, "BFu0c_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0i_BFs0c  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0i_BFs0c) C1{ Fc:0 FL:0 Fi:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFu0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0i_BFs0c");
    static BFu0c_BFu0ll_BFu0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0i_BFs0c(Test_BFu0c_BFu0ll_BFu0i_BFs0c, "BFu0c_BFu0ll_BFu0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0i_BFs0i  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0i_BFs0i) C1{ Fc:0 FL:0 Fi:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFu0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0i_BFs0i");
    static BFu0c_BFu0ll_BFu0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0i_BFs0i(Test_BFu0c_BFu0ll_BFu0i_BFs0i, "BFu0c_BFu0ll_BFu0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0i_BFs0ll  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0i_BFs0ll) C1{ Fc:0 FL:0 Fi:0 FL:0}



static void Test_BFu0c_BFu0ll_BFu0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0i_BFs0ll");
    static BFu0c_BFu0ll_BFu0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0i_BFs0ll(Test_BFu0c_BFu0ll_BFu0i_BFs0ll, "BFu0c_BFu0ll_BFu0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0i_BFs0s  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0i_BFs0s) C1{ Fc:0 FL:0 Fi:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFu0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0i_BFs0s");
    static BFu0c_BFu0ll_BFu0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0i_BFs0s(Test_BFu0c_BFu0ll_BFu0i_BFs0s, "BFu0c_BFu0ll_BFu0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0i_BFu0c  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0i_BFu0c) C1{ Fc:0 FL:0 Fi:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0i_BFu0c");
    static BFu0c_BFu0ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0i_BFu0c(Test_BFu0c_BFu0ll_BFu0i_BFu0c, "BFu0c_BFu0ll_BFu0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0i_BFu0i  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0i_BFu0i) C1{ Fc:0 FL:0 Fi:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0i_BFu0i");
    static BFu0c_BFu0ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0i_BFu0i(Test_BFu0c_BFu0ll_BFu0i_BFu0i, "BFu0c_BFu0ll_BFu0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0i_BFu0ll  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0i_BFu0ll) C1{ Fc:0 FL:0 Fi:0 FL:0}



static void Test_BFu0c_BFu0ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0i_BFu0ll");
    static BFu0c_BFu0ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0i_BFu0ll(Test_BFu0c_BFu0ll_BFu0i_BFu0ll, "BFu0c_BFu0ll_BFu0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0i_BFu0s  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0i_BFu0s) C1{ Fc:0 FL:0 Fi:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0i_BFu0s");
    static BFu0c_BFu0ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0i_BFu0s(Test_BFu0c_BFu0ll_BFu0i_BFu0s, "BFu0c_BFu0ll_BFu0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0ll  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0ll) C1{ Fc:0 FL:0 FL:0}



static void Test_BFu0c_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0ll");
    static BFu0c_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0ll(Test_BFu0c_BFu0ll_BFu0ll, "BFu0c_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0ll_BFs0c  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0ll_BFs0c) C1{ Fc:0 FL:0 FL:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFu0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0ll_BFs0c");
    static BFu0c_BFu0ll_BFu0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0ll_BFs0c(Test_BFu0c_BFu0ll_BFu0ll_BFs0c, "BFu0c_BFu0ll_BFu0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0ll_BFs0i  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0ll_BFs0i) C1{ Fc:0 FL:0 FL:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFu0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0ll_BFs0i");
    static BFu0c_BFu0ll_BFu0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0ll_BFs0i(Test_BFu0c_BFu0ll_BFu0ll_BFs0i, "BFu0c_BFu0ll_BFu0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0ll_BFs0ll  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0ll_BFs0ll) C1{ Fc:0 FL:0 FL:0 FL:0}



static void Test_BFu0c_BFu0ll_BFu0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0ll_BFs0ll");
    static BFu0c_BFu0ll_BFu0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0ll_BFs0ll(Test_BFu0c_BFu0ll_BFu0ll_BFs0ll, "BFu0c_BFu0ll_BFu0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0ll_BFs0s  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0ll_BFs0s) C1{ Fc:0 FL:0 FL:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFu0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0ll_BFs0s");
    static BFu0c_BFu0ll_BFu0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0ll_BFs0s(Test_BFu0c_BFu0ll_BFu0ll_BFs0s, "BFu0c_BFu0ll_BFu0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0ll_BFu0c  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0ll_BFu0c) C1{ Fc:0 FL:0 FL:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0ll_BFu0c");
    static BFu0c_BFu0ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0ll_BFu0c(Test_BFu0c_BFu0ll_BFu0ll_BFu0c, "BFu0c_BFu0ll_BFu0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0ll_BFu0i  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0ll_BFu0i) C1{ Fc:0 FL:0 FL:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0ll_BFu0i");
    static BFu0c_BFu0ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0ll_BFu0i(Test_BFu0c_BFu0ll_BFu0ll_BFu0i, "BFu0c_BFu0ll_BFu0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0ll_BFu0ll  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0ll_BFu0ll) C1{ Fc:0 FL:0 FL:0 FL:0}



static void Test_BFu0c_BFu0ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0ll_BFu0ll");
    static BFu0c_BFu0ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0ll_BFu0ll(Test_BFu0c_BFu0ll_BFu0ll_BFu0ll, "BFu0c_BFu0ll_BFu0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0ll_BFu0s  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0ll_BFu0s) C1{ Fc:0 FL:0 FL:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0ll_BFu0s");
    static BFu0c_BFu0ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0ll_BFu0s(Test_BFu0c_BFu0ll_BFu0ll_BFu0s, "BFu0c_BFu0ll_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0s  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0s) C1{ Fc:0 FL:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0s");
    static BFu0c_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0s(Test_BFu0c_BFu0ll_BFu0s, "BFu0c_BFu0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0s_BFs0c  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0s_BFs0c) C1{ Fc:0 FL:0 Fs:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFu0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0s_BFs0c");
    static BFu0c_BFu0ll_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0s_BFs0c(Test_BFu0c_BFu0ll_BFu0s_BFs0c, "BFu0c_BFu0ll_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0s_BFs0i  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0s_BFs0i) C1{ Fc:0 FL:0 Fs:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFu0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0s_BFs0i");
    static BFu0c_BFu0ll_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0s_BFs0i(Test_BFu0c_BFu0ll_BFu0s_BFs0i, "BFu0c_BFu0ll_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0s_BFs0ll  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0s_BFs0ll) C1{ Fc:0 FL:0 Fs:0 FL:0}



static void Test_BFu0c_BFu0ll_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0s_BFs0ll");
    static BFu0c_BFu0ll_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0s_BFs0ll(Test_BFu0c_BFu0ll_BFu0s_BFs0ll, "BFu0c_BFu0ll_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0s_BFs0s  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0s_BFs0s) C1{ Fc:0 FL:0 Fs:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFu0s_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0s_BFs0s");
    static BFu0c_BFu0ll_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0s_BFs0s(Test_BFu0c_BFu0ll_BFu0s_BFs0s, "BFu0c_BFu0ll_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0s_BFu0c  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned short  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0s_BFu0c) C1{ Fc:0 FL:0 Fs:0 Fc:0}



static void Test_BFu0c_BFu0ll_BFu0s_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0s_BFu0c");
    static BFu0c_BFu0ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0s_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0s_BFu0c(Test_BFu0c_BFu0ll_BFu0s_BFu0c, "BFu0c_BFu0ll_BFu0s_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0s_BFu0i  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned short  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0s_BFu0i) C1{ Fc:0 FL:0 Fs:0 Fi:0}



static void Test_BFu0c_BFu0ll_BFu0s_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0s_BFu0i");
    static BFu0c_BFu0ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0s_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0s_BFu0i(Test_BFu0c_BFu0ll_BFu0s_BFu0i, "BFu0c_BFu0ll_BFu0s_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0s_BFu0ll  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned short  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0s_BFu0ll) C1{ Fc:0 FL:0 Fs:0 FL:0}



static void Test_BFu0c_BFu0ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0s_BFu0ll");
    static BFu0c_BFu0ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0s_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0s_BFu0ll(Test_BFu0c_BFu0ll_BFu0s_BFu0ll, "BFu0c_BFu0ll_BFu0s_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu0s_BFu0s  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned short  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0ll_BFu0s_BFu0s) C1{ Fc:0 FL:0 Fs:0 Fs:0}



static void Test_BFu0c_BFu0ll_BFu0s_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu0s_BFu0s");
    static BFu0c_BFu0ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu0s_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu0s_BFu0s(Test_BFu0c_BFu0ll_BFu0s_BFu0s, "BFu0c_BFu0ll_BFu0s_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu15i  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int v1:15;
};
//SIG(1 BFu0c_BFu0ll_BFu15i) C1{ Fc:0 FL:0 Fi:15}



static void Test_BFu0c_BFu0ll_BFu15i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu15i");
    static BFu0c_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu0c_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(4,4), "__alignof__(BFu0c_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu0c_BFu0ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu0c_BFu0ll_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu15i(Test_BFu0c_BFu0ll_BFu15i, "BFu0c_BFu0ll_BFu15i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu15ll  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64 v1:15;
};
//SIG(1 BFu0c_BFu0ll_BFu15ll) C1{ Fc:0 FL:0 FL:15}



static void Test_BFu0c_BFu0ll_BFu15ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu15ll");
    static BFu0c_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu0c_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu0c_BFu0ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu15ll(Test_BFu0c_BFu0ll_BFu15ll, "BFu0c_BFu0ll_BFu15ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu15s  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned short v1:15;
};
//SIG(1 BFu0c_BFu0ll_BFu15s) C1{ Fc:0 FL:0 Fs:15}



static void Test_BFu0c_BFu0ll_BFu15s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu15s");
    static BFu0c_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu0c_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(2,2), "__alignof__(BFu0c_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu0c_BFu0ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu0c_BFu0ll_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu15s(Test_BFu0c_BFu0ll_BFu15s, "BFu0c_BFu0ll_BFu15s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu16i  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int v1:16;
};
//SIG(1 BFu0c_BFu0ll_BFu16i) C1{ Fc:0 FL:0 Fi:16}



static void Test_BFu0c_BFu0ll_BFu16i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu16i");
    static BFu0c_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu0c_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(4,4), "__alignof__(BFu0c_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu0c_BFu0ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu0c_BFu0ll_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu16i(Test_BFu0c_BFu0ll_BFu16i, "BFu0c_BFu0ll_BFu16i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu16ll  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64 v1:16;
};
//SIG(1 BFu0c_BFu0ll_BFu16ll) C1{ Fc:0 FL:0 FL:16}



static void Test_BFu0c_BFu0ll_BFu16ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu16ll");
    static BFu0c_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu0c_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu0c_BFu0ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu16ll(Test_BFu0c_BFu0ll_BFu16ll, "BFu0c_BFu0ll_BFu16ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu16s  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned short v1:16;
};
//SIG(1 BFu0c_BFu0ll_BFu16s) C1{ Fc:0 FL:0 Fs:16}



static void Test_BFu0c_BFu0ll_BFu16s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu16s");
    static BFu0c_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu0c_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(2,2), "__alignof__(BFu0c_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu0c_BFu0ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu0c_BFu0ll_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu16s(Test_BFu0c_BFu0ll_BFu16s, "BFu0c_BFu0ll_BFu16s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu17i  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int v1:17;
};
//SIG(1 BFu0c_BFu0ll_BFu17i) C1{ Fc:0 FL:0 Fi:17}



static void Test_BFu0c_BFu0ll_BFu17i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu17i");
    static BFu0c_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu0c_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(4,4), "__alignof__(BFu0c_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu0c_BFu0ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu0c_BFu0ll_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu17i(Test_BFu0c_BFu0ll_BFu17i, "BFu0c_BFu0ll_BFu17i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu17ll  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64 v1:17;
};
//SIG(1 BFu0c_BFu0ll_BFu17ll) C1{ Fc:0 FL:0 FL:17}



static void Test_BFu0c_BFu0ll_BFu17ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu17ll");
    static BFu0c_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu0c_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu0c_BFu0ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu17ll(Test_BFu0c_BFu0ll_BFu17ll, "BFu0c_BFu0ll_BFu17ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu1c  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned char v1:1;
};
//SIG(1 BFu0c_BFu0ll_BFu1c) C1{ Fc:0 FL:0 Fc:1}



static void Test_BFu0c_BFu0ll_BFu1c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu1c");
    static BFu0c_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu0c_BFu0ll_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu1c(Test_BFu0c_BFu0ll_BFu1c, "BFu0c_BFu0ll_BFu1c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu1i  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int v1:1;
};
//SIG(1 BFu0c_BFu0ll_BFu1i) C1{ Fc:0 FL:0 Fi:1}



static void Test_BFu0c_BFu0ll_BFu1i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu1i");
    static BFu0c_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu0c_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(4,4), "__alignof__(BFu0c_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu0c_BFu0ll_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu1i(Test_BFu0c_BFu0ll_BFu1i, "BFu0c_BFu0ll_BFu1i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu1ll  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64 v1:1;
};
//SIG(1 BFu0c_BFu0ll_BFu1ll) C1{ Fc:0 FL:0 FL:1}



static void Test_BFu0c_BFu0ll_BFu1ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu1ll");
    static BFu0c_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu0c_BFu0ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu1ll(Test_BFu0c_BFu0ll_BFu1ll, "BFu0c_BFu0ll_BFu1ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu1s  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned short v1:1;
};
//SIG(1 BFu0c_BFu0ll_BFu1s) C1{ Fc:0 FL:0 Fs:1}



static void Test_BFu0c_BFu0ll_BFu1s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu1s");
    static BFu0c_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu0c_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(2,2), "__alignof__(BFu0c_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu0c_BFu0ll_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu1s(Test_BFu0c_BFu0ll_BFu1s, "BFu0c_BFu0ll_BFu1s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu31i  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int v1:31;
};
//SIG(1 BFu0c_BFu0ll_BFu31i) C1{ Fc:0 FL:0 Fi:31}



static void Test_BFu0c_BFu0ll_BFu31i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu31i");
    static BFu0c_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu0c_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(4,4), "__alignof__(BFu0c_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu0c_BFu0ll_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu0c_BFu0ll_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu31i(Test_BFu0c_BFu0ll_BFu31i, "BFu0c_BFu0ll_BFu31i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu31ll  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64 v1:31;
};
//SIG(1 BFu0c_BFu0ll_BFu31ll) C1{ Fc:0 FL:0 FL:31}



static void Test_BFu0c_BFu0ll_BFu31ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu31ll");
    static BFu0c_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu0c_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu0c_BFu0ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu31ll(Test_BFu0c_BFu0ll_BFu31ll, "BFu0c_BFu0ll_BFu31ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu32i  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int v1:32;
};
//SIG(1 BFu0c_BFu0ll_BFu32i) C1{ Fc:0 FL:0 Fi:32}



static void Test_BFu0c_BFu0ll_BFu32i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu32i");
    static BFu0c_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu0c_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(4,4), "__alignof__(BFu0c_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu0c_BFu0ll_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu0c_BFu0ll_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu32i(Test_BFu0c_BFu0ll_BFu32i, "BFu0c_BFu0ll_BFu32i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu32ll  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64 v1:32;
};
//SIG(1 BFu0c_BFu0ll_BFu32ll) C1{ Fc:0 FL:0 FL:32}



static void Test_BFu0c_BFu0ll_BFu32ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu32ll");
    static BFu0c_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu0c_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu0c_BFu0ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu32ll(Test_BFu0c_BFu0ll_BFu32ll, "BFu0c_BFu0ll_BFu32ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu33  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64 v1:33;
};
//SIG(1 BFu0c_BFu0ll_BFu33) C1{ Fc:0 FL:0 FL:33}



static void Test_BFu0c_BFu0ll_BFu33()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu33");
    static BFu0c_BFu0ll_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(BFu0c_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu0c_BFu0ll_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu0c_BFu0ll_BFu33");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu33(Test_BFu0c_BFu0ll_BFu33, "BFu0c_BFu0ll_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu7c  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned char v1:7;
};
//SIG(1 BFu0c_BFu0ll_BFu7c) C1{ Fc:0 FL:0 Fc:7}



static void Test_BFu0c_BFu0ll_BFu7c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu7c");
    static BFu0c_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu0c_BFu0ll_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu0c_BFu0ll_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu7c(Test_BFu0c_BFu0ll_BFu7c, "BFu0c_BFu0ll_BFu7c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu7i  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int v1:7;
};
//SIG(1 BFu0c_BFu0ll_BFu7i) C1{ Fc:0 FL:0 Fi:7}



static void Test_BFu0c_BFu0ll_BFu7i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu7i");
    static BFu0c_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu0c_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(4,4), "__alignof__(BFu0c_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu0c_BFu0ll_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu0c_BFu0ll_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu7i(Test_BFu0c_BFu0ll_BFu7i, "BFu0c_BFu0ll_BFu7i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu7ll  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64 v1:7;
};
//SIG(1 BFu0c_BFu0ll_BFu7ll) C1{ Fc:0 FL:0 FL:7}



static void Test_BFu0c_BFu0ll_BFu7ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu7ll");
    static BFu0c_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu0c_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu0c_BFu0ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu7ll(Test_BFu0c_BFu0ll_BFu7ll, "BFu0c_BFu0ll_BFu7ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu7s  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned short v1:7;
};
//SIG(1 BFu0c_BFu0ll_BFu7s) C1{ Fc:0 FL:0 Fs:7}



static void Test_BFu0c_BFu0ll_BFu7s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu7s");
    static BFu0c_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu0c_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(2,2), "__alignof__(BFu0c_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu0c_BFu0ll_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu0c_BFu0ll_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu7s(Test_BFu0c_BFu0ll_BFu7s, "BFu0c_BFu0ll_BFu7s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu8c  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned char v1:8;
};
//SIG(1 BFu0c_BFu0ll_BFu8c) C1{ Fc:0 FL:0 Fc:8}



static void Test_BFu0c_BFu0ll_BFu8c()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu8c");
    static BFu0c_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu0c_BFu0ll_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu0c_BFu0ll_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu8c(Test_BFu0c_BFu0ll_BFu8c, "BFu0c_BFu0ll_BFu8c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu8i  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int v1:8;
};
//SIG(1 BFu0c_BFu0ll_BFu8i) C1{ Fc:0 FL:0 Fi:8}



static void Test_BFu0c_BFu0ll_BFu8i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu8i");
    static BFu0c_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu0c_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(4,4), "__alignof__(BFu0c_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu0c_BFu0ll_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu0c_BFu0ll_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu8i(Test_BFu0c_BFu0ll_BFu8i, "BFu0c_BFu0ll_BFu8i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu8ll  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64 v1:8;
};
//SIG(1 BFu0c_BFu0ll_BFu8ll) C1{ Fc:0 FL:0 FL:8}



static void Test_BFu0c_BFu0ll_BFu8ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu8ll");
    static BFu0c_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu0c_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu0c_BFu0ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu8ll(Test_BFu0c_BFu0ll_BFu8ll, "BFu0c_BFu0ll_BFu8ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu8s  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned short v1:8;
};
//SIG(1 BFu0c_BFu0ll_BFu8s) C1{ Fc:0 FL:0 Fs:8}



static void Test_BFu0c_BFu0ll_BFu8s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu8s");
    static BFu0c_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu0c_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(2,2), "__alignof__(BFu0c_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu0c_BFu0ll_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu0c_BFu0ll_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu8s(Test_BFu0c_BFu0ll_BFu8s, "BFu0c_BFu0ll_BFu8s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu9i  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int v1:9;
};
//SIG(1 BFu0c_BFu0ll_BFu9i) C1{ Fc:0 FL:0 Fi:9}



static void Test_BFu0c_BFu0ll_BFu9i()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu9i");
    static BFu0c_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu0c_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(4,4), "__alignof__(BFu0c_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu0c_BFu0ll_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu0c_BFu0ll_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu9i(Test_BFu0c_BFu0ll_BFu9i, "BFu0c_BFu0ll_BFu9i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu9ll  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64 v1:9;
};
//SIG(1 BFu0c_BFu0ll_BFu9ll) C1{ Fc:0 FL:0 FL:9}



static void Test_BFu0c_BFu0ll_BFu9ll()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu9ll");
    static BFu0c_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu0c_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu0c_BFu0ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu9ll(Test_BFu0c_BFu0ll_BFu9ll, "BFu0c_BFu0ll_BFu9ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_BFu9s  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned short v1:9;
};
//SIG(1 BFu0c_BFu0ll_BFu9s) C1{ Fc:0 FL:0 Fs:9}



static void Test_BFu0c_BFu0ll_BFu9s()
{
  {
    init_simple_test("BFu0c_BFu0ll_BFu9s");
    static BFu0c_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu0c_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(2,2), "__alignof__(BFu0c_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu0c_BFu0ll_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu0c_BFu0ll_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_BFu9s(Test_BFu0c_BFu0ll_BFu9s, "BFu0c_BFu0ll_BFu9s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_C  {
  unsigned char  :0;
  __tsu64  :0;
  char v1;
};
//SIG(1 BFu0c_BFu0ll_C) C1{ Fc:0 FL:0 Fc}



static void Test_BFu0c_BFu0ll_C()
{
  {
    init_simple_test("BFu0c_BFu0ll_C");
    static BFu0c_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_C)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0ll_C.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_C(Test_BFu0c_BFu0ll_C, "BFu0c_BFu0ll_C", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_D  {
  unsigned char  :0;
  __tsu64  :0;
  double v1;
};
//SIG(1 BFu0c_BFu0ll_D) C1{ Fc:0 FL:0 FL}



static void Test_BFu0c_BFu0ll_D()
{
  {
    init_simple_test("BFu0c_BFu0ll_D");
    static BFu0c_BFu0ll_D lv;
    check2(sizeof(lv), 8, "sizeof(BFu0c_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0ll_D)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0ll_D.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_D(Test_BFu0c_BFu0ll_D, "BFu0c_BFu0ll_D", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_F  {
  unsigned char  :0;
  __tsu64  :0;
  float v1;
};
//SIG(1 BFu0c_BFu0ll_F) C1{ Fc:0 FL:0 Fi}



static void Test_BFu0c_BFu0ll_F()
{
  {
    init_simple_test("BFu0c_BFu0ll_F");
    static BFu0c_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu0c_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(4,4), "__alignof__(BFu0c_BFu0ll_F)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0ll_F.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_F(Test_BFu0c_BFu0ll_F, "BFu0c_BFu0ll_F", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_I  {
  unsigned char  :0;
  __tsu64  :0;
  int v1;
};
//SIG(1 BFu0c_BFu0ll_I) C1{ Fc:0 FL:0 Fi}



static void Test_BFu0c_BFu0ll_I()
{
  {
    init_simple_test("BFu0c_BFu0ll_I");
    static BFu0c_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu0c_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(4,4), "__alignof__(BFu0c_BFu0ll_I)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0ll_I.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_I(Test_BFu0c_BFu0ll_I, "BFu0c_BFu0ll_I", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_Ip  {
  unsigned char  :0;
  __tsu64  :0;
  int *v1;
};
//SIG(1 BFu0c_BFu0ll_Ip) C1{ Fc:0 FL:0 Fp}



static void Test_BFu0c_BFu0ll_Ip()
{
  {
    init_simple_test("BFu0c_BFu0ll_Ip");
    static BFu0c_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0ll_Ip)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0ll_Ip.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_Ip(Test_BFu0c_BFu0ll_Ip, "BFu0c_BFu0ll_Ip", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_L  {
  unsigned char  :0;
  __tsu64  :0;
  __tsi64 v1;
};
//SIG(1 BFu0c_BFu0ll_L) C1{ Fc:0 FL:0 FL}



static void Test_BFu0c_BFu0ll_L()
{
  {
    init_simple_test("BFu0c_BFu0ll_L");
    static BFu0c_BFu0ll_L lv;
    check2(sizeof(lv), 8, "sizeof(BFu0c_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0ll_L)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0ll_L.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_L(Test_BFu0c_BFu0ll_L, "BFu0c_BFu0ll_L", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_S  {
  unsigned char  :0;
  __tsu64  :0;
  short v1;
};
//SIG(1 BFu0c_BFu0ll_S) C1{ Fc:0 FL:0 Fs}



static void Test_BFu0c_BFu0ll_S()
{
  {
    init_simple_test("BFu0c_BFu0ll_S");
    static BFu0c_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu0c_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(2,2), "__alignof__(BFu0c_BFu0ll_S)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0ll_S.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_S(Test_BFu0c_BFu0ll_S, "BFu0c_BFu0ll_S", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_Uc  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned char v1;
};
//SIG(1 BFu0c_BFu0ll_Uc) C1{ Fc:0 FL:0 Fc}



static void Test_BFu0c_BFu0ll_Uc()
{
  {
    init_simple_test("BFu0c_BFu0ll_Uc");
    static BFu0c_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0ll_Uc)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0ll_Uc.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_Uc(Test_BFu0c_BFu0ll_Uc, "BFu0c_BFu0ll_Uc", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_Ui  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned int v1;
};
//SIG(1 BFu0c_BFu0ll_Ui) C1{ Fc:0 FL:0 Fi}



static void Test_BFu0c_BFu0ll_Ui()
{
  {
    init_simple_test("BFu0c_BFu0ll_Ui");
    static BFu0c_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu0c_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(4,4), "__alignof__(BFu0c_BFu0ll_Ui)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0ll_Ui.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_Ui(Test_BFu0c_BFu0ll_Ui, "BFu0c_BFu0ll_Ui", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_Ul  {
  unsigned char  :0;
  __tsu64  :0;
  __tsu64 v1;
};
//SIG(1 BFu0c_BFu0ll_Ul) C1{ Fc:0 FL:0 FL}



static void Test_BFu0c_BFu0ll_Ul()
{
  {
    init_simple_test("BFu0c_BFu0ll_Ul");
    static BFu0c_BFu0ll_Ul lv;
    check2(sizeof(lv), 8, "sizeof(BFu0c_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0ll_Ul)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0ll_Ul.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_Ul(Test_BFu0c_BFu0ll_Ul, "BFu0c_BFu0ll_Ul", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_Us  {
  unsigned char  :0;
  __tsu64  :0;
  unsigned short v1;
};
//SIG(1 BFu0c_BFu0ll_Us) C1{ Fc:0 FL:0 Fs}



static void Test_BFu0c_BFu0ll_Us()
{
  {
    init_simple_test("BFu0c_BFu0ll_Us");
    static BFu0c_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu0c_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(2,2), "__alignof__(BFu0c_BFu0ll_Us)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0ll_Us.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_Us(Test_BFu0c_BFu0ll_Us, "BFu0c_BFu0ll_Us", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0ll_Vp  {
  unsigned char  :0;
  __tsu64  :0;
  void *v1;
};
//SIG(1 BFu0c_BFu0ll_Vp) C1{ Fc:0 FL:0 Fp}



static void Test_BFu0c_BFu0ll_Vp()
{
  {
    init_simple_test("BFu0c_BFu0ll_Vp");
    static BFu0c_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu0c_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(8,4), "__alignof__(BFu0c_BFu0ll_Vp)");
    check_field_offset(lv, v1, 0, "BFu0c_BFu0ll_Vp.v1");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0ll_Vp(Test_BFu0c_BFu0ll_Vp, "BFu0c_BFu0ll_Vp", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s  {
  unsigned char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0s) C1{ Fc:0 Fs:0}



static void Test_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0s");
    static BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s(Test_BFu0c_BFu0s, "BFu0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0c  {
  unsigned char  :0;
  unsigned short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0c) C1{ Fc:0 Fs:0 Fc:0}



static void Test_BFu0c_BFu0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0c");
    static BFu0c_BFu0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0c(Test_BFu0c_BFu0s_BFs0c, "BFu0c_BFu0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0c_BFs0c  {
  unsigned char  :0;
  unsigned short  :0;
  signed char  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0c_BFs0c) C1{ Fc:0 Fs:0 Fc:0 Fc:0}



static void Test_BFu0c_BFu0s_BFs0c_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0c_BFs0c");
    static BFu0c_BFu0s_BFs0c_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0c_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0c_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0c_BFs0c(Test_BFu0c_BFu0s_BFs0c_BFs0c, "BFu0c_BFu0s_BFs0c_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0c_BFs0i  {
  unsigned char  :0;
  unsigned short  :0;
  signed char  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0c_BFs0i) C1{ Fc:0 Fs:0 Fc:0 Fi:0}



static void Test_BFu0c_BFu0s_BFs0c_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0c_BFs0i");
    static BFu0c_BFu0s_BFs0c_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0c_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0c_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0c_BFs0i(Test_BFu0c_BFu0s_BFs0c_BFs0i, "BFu0c_BFu0s_BFs0c_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0c_BFs0ll  {
  unsigned char  :0;
  unsigned short  :0;
  signed char  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0c_BFs0ll) C1{ Fc:0 Fs:0 Fc:0 FL:0}



static void Test_BFu0c_BFu0s_BFs0c_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0c_BFs0ll");
    static BFu0c_BFu0s_BFs0c_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0c_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0c_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0c_BFs0ll(Test_BFu0c_BFu0s_BFs0c_BFs0ll, "BFu0c_BFu0s_BFs0c_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0c_BFs0s  {
  unsigned char  :0;
  unsigned short  :0;
  signed char  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0c_BFs0s) C1{ Fc:0 Fs:0 Fc:0 Fs:0}



static void Test_BFu0c_BFu0s_BFs0c_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0c_BFs0s");
    static BFu0c_BFu0s_BFs0c_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0c_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0c_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0c_BFs0s(Test_BFu0c_BFu0s_BFs0c_BFs0s, "BFu0c_BFu0s_BFs0c_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0c_BFu0c  {
  unsigned char  :0;
  unsigned short  :0;
  signed char  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0c_BFu0c) C1{ Fc:0 Fs:0 Fc:0 Fc:0}



static void Test_BFu0c_BFu0s_BFs0c_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0c_BFu0c");
    static BFu0c_BFu0s_BFs0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0c_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0c_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0c_BFu0c(Test_BFu0c_BFu0s_BFs0c_BFu0c, "BFu0c_BFu0s_BFs0c_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0c_BFu0i  {
  unsigned char  :0;
  unsigned short  :0;
  signed char  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0c_BFu0i) C1{ Fc:0 Fs:0 Fc:0 Fi:0}



static void Test_BFu0c_BFu0s_BFs0c_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0c_BFu0i");
    static BFu0c_BFu0s_BFs0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0c_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0c_BFu0i(Test_BFu0c_BFu0s_BFs0c_BFu0i, "BFu0c_BFu0s_BFs0c_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0c_BFu0ll  {
  unsigned char  :0;
  unsigned short  :0;
  signed char  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0c_BFu0ll) C1{ Fc:0 Fs:0 Fc:0 FL:0}



static void Test_BFu0c_BFu0s_BFs0c_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0c_BFu0ll");
    static BFu0c_BFu0s_BFs0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0c_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0c_BFu0ll(Test_BFu0c_BFu0s_BFs0c_BFu0ll, "BFu0c_BFu0s_BFs0c_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0c_BFu0s  {
  unsigned char  :0;
  unsigned short  :0;
  signed char  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0c_BFu0s) C1{ Fc:0 Fs:0 Fc:0 Fs:0}



static void Test_BFu0c_BFu0s_BFs0c_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0c_BFu0s");
    static BFu0c_BFu0s_BFs0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0c_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0c_BFu0s(Test_BFu0c_BFu0s_BFs0c_BFu0s, "BFu0c_BFu0s_BFs0c_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0i  {
  unsigned char  :0;
  unsigned short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0i) C1{ Fc:0 Fs:0 Fi:0}



static void Test_BFu0c_BFu0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0i");
    static BFu0c_BFu0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0i(Test_BFu0c_BFu0s_BFs0i, "BFu0c_BFu0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0i_BFs0c  {
  unsigned char  :0;
  unsigned short  :0;
  signed int  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0i_BFs0c) C1{ Fc:0 Fs:0 Fi:0 Fc:0}



static void Test_BFu0c_BFu0s_BFs0i_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0i_BFs0c");
    static BFu0c_BFu0s_BFs0i_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0i_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0i_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0i_BFs0c(Test_BFu0c_BFu0s_BFs0i_BFs0c, "BFu0c_BFu0s_BFs0i_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0i_BFs0i  {
  unsigned char  :0;
  unsigned short  :0;
  signed int  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0i_BFs0i) C1{ Fc:0 Fs:0 Fi:0 Fi:0}



static void Test_BFu0c_BFu0s_BFs0i_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0i_BFs0i");
    static BFu0c_BFu0s_BFs0i_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0i_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0i_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0i_BFs0i(Test_BFu0c_BFu0s_BFs0i_BFs0i, "BFu0c_BFu0s_BFs0i_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0i_BFs0ll  {
  unsigned char  :0;
  unsigned short  :0;
  signed int  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0i_BFs0ll) C1{ Fc:0 Fs:0 Fi:0 FL:0}



static void Test_BFu0c_BFu0s_BFs0i_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0i_BFs0ll");
    static BFu0c_BFu0s_BFs0i_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0i_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0i_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0i_BFs0ll(Test_BFu0c_BFu0s_BFs0i_BFs0ll, "BFu0c_BFu0s_BFs0i_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0i_BFs0s  {
  unsigned char  :0;
  unsigned short  :0;
  signed int  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0i_BFs0s) C1{ Fc:0 Fs:0 Fi:0 Fs:0}



static void Test_BFu0c_BFu0s_BFs0i_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0i_BFs0s");
    static BFu0c_BFu0s_BFs0i_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0i_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0i_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0i_BFs0s(Test_BFu0c_BFu0s_BFs0i_BFs0s, "BFu0c_BFu0s_BFs0i_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0i_BFu0c  {
  unsigned char  :0;
  unsigned short  :0;
  signed int  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0i_BFu0c) C1{ Fc:0 Fs:0 Fi:0 Fc:0}



static void Test_BFu0c_BFu0s_BFs0i_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0i_BFu0c");
    static BFu0c_BFu0s_BFs0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0i_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0i_BFu0c(Test_BFu0c_BFu0s_BFs0i_BFu0c, "BFu0c_BFu0s_BFs0i_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0i_BFu0i  {
  unsigned char  :0;
  unsigned short  :0;
  signed int  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0i_BFu0i) C1{ Fc:0 Fs:0 Fi:0 Fi:0}



static void Test_BFu0c_BFu0s_BFs0i_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0i_BFu0i");
    static BFu0c_BFu0s_BFs0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0i_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0i_BFu0i(Test_BFu0c_BFu0s_BFs0i_BFu0i, "BFu0c_BFu0s_BFs0i_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0i_BFu0ll  {
  unsigned char  :0;
  unsigned short  :0;
  signed int  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0i_BFu0ll) C1{ Fc:0 Fs:0 Fi:0 FL:0}



static void Test_BFu0c_BFu0s_BFs0i_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0i_BFu0ll");
    static BFu0c_BFu0s_BFs0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0i_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0i_BFu0ll(Test_BFu0c_BFu0s_BFs0i_BFu0ll, "BFu0c_BFu0s_BFs0i_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0i_BFu0s  {
  unsigned char  :0;
  unsigned short  :0;
  signed int  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0i_BFu0s) C1{ Fc:0 Fs:0 Fi:0 Fs:0}



static void Test_BFu0c_BFu0s_BFs0i_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0i_BFu0s");
    static BFu0c_BFu0s_BFs0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0i_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0i_BFu0s(Test_BFu0c_BFu0s_BFs0i_BFu0s, "BFu0c_BFu0s_BFs0i_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0ll  {
  unsigned char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0ll) C1{ Fc:0 Fs:0 FL:0}



static void Test_BFu0c_BFu0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0ll");
    static BFu0c_BFu0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0ll(Test_BFu0c_BFu0s_BFs0ll, "BFu0c_BFu0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0ll_BFs0c  {
  unsigned char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0ll_BFs0c) C1{ Fc:0 Fs:0 FL:0 Fc:0}



static void Test_BFu0c_BFu0s_BFs0ll_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0ll_BFs0c");
    static BFu0c_BFu0s_BFs0ll_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0ll_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0ll_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0ll_BFs0c(Test_BFu0c_BFu0s_BFs0ll_BFs0c, "BFu0c_BFu0s_BFs0ll_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0ll_BFs0i  {
  unsigned char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0ll_BFs0i) C1{ Fc:0 Fs:0 FL:0 Fi:0}



static void Test_BFu0c_BFu0s_BFs0ll_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0ll_BFs0i");
    static BFu0c_BFu0s_BFs0ll_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0ll_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0ll_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0ll_BFs0i(Test_BFu0c_BFu0s_BFs0ll_BFs0i, "BFu0c_BFu0s_BFs0ll_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0ll_BFs0ll  {
  unsigned char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0ll_BFs0ll) C1{ Fc:0 Fs:0 FL:0 FL:0}



static void Test_BFu0c_BFu0s_BFs0ll_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0ll_BFs0ll");
    static BFu0c_BFu0s_BFs0ll_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0ll_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0ll_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0ll_BFs0ll(Test_BFu0c_BFu0s_BFs0ll_BFs0ll, "BFu0c_BFu0s_BFs0ll_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0ll_BFs0s  {
  unsigned char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0ll_BFs0s) C1{ Fc:0 Fs:0 FL:0 Fs:0}



static void Test_BFu0c_BFu0s_BFs0ll_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0ll_BFs0s");
    static BFu0c_BFu0s_BFs0ll_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0ll_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0ll_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0ll_BFs0s(Test_BFu0c_BFu0s_BFs0ll_BFs0s, "BFu0c_BFu0s_BFs0ll_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0ll_BFu0c  {
  unsigned char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  unsigned char  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0ll_BFu0c) C1{ Fc:0 Fs:0 FL:0 Fc:0}



static void Test_BFu0c_BFu0s_BFs0ll_BFu0c()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0ll_BFu0c");
    static BFu0c_BFu0s_BFs0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0ll_BFu0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0ll_BFu0c(Test_BFu0c_BFu0s_BFs0ll_BFu0c, "BFu0c_BFu0s_BFs0ll_BFu0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0ll_BFu0i  {
  unsigned char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  unsigned int  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0ll_BFu0i) C1{ Fc:0 Fs:0 FL:0 Fi:0}



static void Test_BFu0c_BFu0s_BFs0ll_BFu0i()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0ll_BFu0i");
    static BFu0c_BFu0s_BFs0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0ll_BFu0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0ll_BFu0i(Test_BFu0c_BFu0s_BFs0ll_BFu0i, "BFu0c_BFu0s_BFs0ll_BFu0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0ll_BFu0ll  {
  unsigned char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  __tsu64  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0ll_BFu0ll) C1{ Fc:0 Fs:0 FL:0 FL:0}



static void Test_BFu0c_BFu0s_BFs0ll_BFu0ll()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0ll_BFu0ll");
    static BFu0c_BFu0s_BFs0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0ll_BFu0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0ll_BFu0ll(Test_BFu0c_BFu0s_BFs0ll_BFu0ll, "BFu0c_BFu0s_BFs0ll_BFu0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0ll_BFu0s  {
  unsigned char  :0;
  unsigned short  :0;
  signed __tsi64  :0;
  unsigned short  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0ll_BFu0s) C1{ Fc:0 Fs:0 FL:0 Fs:0}



static void Test_BFu0c_BFu0s_BFs0ll_BFu0s()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0ll_BFu0s");
    static BFu0c_BFu0s_BFs0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0ll_BFu0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0ll_BFu0s(Test_BFu0c_BFu0s_BFs0ll_BFu0s, "BFu0c_BFu0s_BFs0ll_BFu0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0s  {
  unsigned char  :0;
  unsigned short  :0;
  signed short  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0s) C1{ Fc:0 Fs:0 Fs:0}



static void Test_BFu0c_BFu0s_BFs0s()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0s");
    static BFu0c_BFu0s_BFs0s lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0s)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0s(Test_BFu0c_BFu0s_BFs0s, "BFu0c_BFu0s_BFs0s", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0s_BFs0c  {
  unsigned char  :0;
  unsigned short  :0;
  signed short  :0;
  signed char  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0s_BFs0c) C1{ Fc:0 Fs:0 Fs:0 Fc:0}



static void Test_BFu0c_BFu0s_BFs0s_BFs0c()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0s_BFs0c");
    static BFu0c_BFu0s_BFs0s_BFs0c lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0s_BFs0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0s_BFs0c)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0s_BFs0c(Test_BFu0c_BFu0s_BFs0s_BFs0c, "BFu0c_BFu0s_BFs0s_BFs0c", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0s_BFs0i  {
  unsigned char  :0;
  unsigned short  :0;
  signed short  :0;
  signed int  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0s_BFs0i) C1{ Fc:0 Fs:0 Fs:0 Fi:0}



static void Test_BFu0c_BFu0s_BFs0s_BFs0i()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0s_BFs0i");
    static BFu0c_BFu0s_BFs0s_BFs0i lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0s_BFs0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0s_BFs0i)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0s_BFs0i(Test_BFu0c_BFu0s_BFs0s_BFs0i, "BFu0c_BFu0s_BFs0s_BFs0i", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus

struct  BFu0c_BFu0s_BFs0s_BFs0ll  {
  unsigned char  :0;
  unsigned short  :0;
  signed short  :0;
  signed __tsi64  :0;
};
//SIG(1 BFu0c_BFu0s_BFs0s_BFs0ll) C1{ Fc:0 Fs:0 Fs:0 FL:0}



static void Test_BFu0c_BFu0s_BFs0s_BFs0ll()
{
  {
    init_simple_test("BFu0c_BFu0s_BFs0s_BFs0ll");
    static BFu0c_BFu0s_BFs0s_BFs0ll lv;
    check2(sizeof(lv), ABISELECT(1,1), "sizeof(BFu0c_BFu0s_BFs0s_BFs0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu0c_BFu0s_BFs0s_BFs0ll)");
  }
}
static Arrange_To_Call_Me vBFu0c_BFu0s_BFs0s_BFs0ll(Test_BFu0c_BFu0s_BFs0s_BFs0ll, "BFu0c_BFu0s_BFs0s_BFs0ll", ABISELECT(1,1));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

