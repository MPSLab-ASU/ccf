// This file is distributed under the University of Illinois Open Source License.
// See LICENSE.TXT for details.
// RUN: c_compiler -c -o %t1.o -I "common" "common/testsuite.c"
// RUN: cxx_compiler cxx_rtti -c %s -I "common" -o %t2.o
// RUN: linker -o %t2%exeext  %t1.o %t2.o
// RUN: runtool %t2%exeext | checker "TEST PASSED"
#include "testsuite.h"
#ifdef __cplusplus
typedef struct empty {} empty;
struct __attribute__((packed)) aSf_BFu16i_BFu15s { empty v1; unsigned int v2:16; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu16i_BFu16i { empty v1; unsigned int v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu16i_BFu16ll { empty v1; unsigned int v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu16i_BFu16s { empty v1; unsigned int v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu16i_BFu17i { empty v1; unsigned int v2:16; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu16i_BFu17ll { empty v1; unsigned int v2:16; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu16i_BFu1c { empty v1; unsigned int v2:16; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu16i_BFu1i { empty v1; unsigned int v2:16; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu16i_BFu1ll { empty v1; unsigned int v2:16; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu16i_BFu1s { empty v1; unsigned int v2:16; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu16i_BFu31i { empty v1; unsigned int v2:16; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu16i_BFu31ll { empty v1; unsigned int v2:16; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu16i_BFu32i { empty v1; unsigned int v2:16; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu16i_BFu32ll { empty v1; unsigned int v2:16; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu16i_BFu33 { empty v1; unsigned int v2:16; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu16i_BFu7c { empty v1; unsigned int v2:16; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu16i_BFu7i { empty v1; unsigned int v2:16; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu16i_BFu7ll { empty v1; unsigned int v2:16; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu16i_BFu7s { empty v1; unsigned int v2:16; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu16i_BFu8c { empty v1; unsigned int v2:16; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu16i_BFu8i { empty v1; unsigned int v2:16; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu16i_BFu8ll { empty v1; unsigned int v2:16; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu16i_BFu8s { empty v1; unsigned int v2:16; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu16i_BFu9i { empty v1; unsigned int v2:16; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu16i_BFu9ll { empty v1; unsigned int v2:16; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu16i_BFu9s { empty v1; unsigned int v2:16; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu16i_C { empty v1; unsigned int v2:16; char v3; };
struct __attribute__((packed)) aSf_BFu16i_D { empty v1; unsigned int v2:16; double v3; };
struct __attribute__((packed)) aSf_BFu16i_F { empty v1; unsigned int v2:16; float v3; };
struct __attribute__((packed)) aSf_BFu16i_I { empty v1; unsigned int v2:16; int v3; };
struct __attribute__((packed)) aSf_BFu16i_Ip { empty v1; unsigned int v2:16; int * v3; };
struct __attribute__((packed)) aSf_BFu16i_L { empty v1; unsigned int v2:16; long long v3; };
struct __attribute__((packed)) aSf_BFu16i_S { empty v1; unsigned int v2:16; short v3; };
struct __attribute__((packed)) aSf_BFu16i_Sf { empty v1; unsigned int v2:16; empty v3; };
struct __attribute__((packed)) aSf_BFu16i_Uc { empty v1; unsigned int v2:16; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu16i_Ui { empty v1; unsigned int v2:16; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu16i_Ul { empty v1; unsigned int v2:16; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu16i_Us { empty v1; unsigned int v2:16; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu16i_Vp { empty v1; unsigned int v2:16; void * v3; };
struct __attribute__((packed)) aSf_BFu16ll { empty v1; unsigned long long v2:16; };
struct __attribute__((packed)) aSf_BFu16ll_BFu15i { empty v1; unsigned long long v2:16; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu16ll_BFu15ll { empty v1; unsigned long long v2:16; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu16ll_BFu15s { empty v1; unsigned long long v2:16; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu16ll_BFu16i { empty v1; unsigned long long v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu16ll_BFu16ll { empty v1; unsigned long long v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu16ll_BFu16s { empty v1; unsigned long long v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu16ll_BFu17i { empty v1; unsigned long long v2:16; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu16ll_BFu17ll { empty v1; unsigned long long v2:16; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu16ll_BFu1c { empty v1; unsigned long long v2:16; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu16ll_BFu1i { empty v1; unsigned long long v2:16; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu16ll_BFu1ll { empty v1; unsigned long long v2:16; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu16ll_BFu1s { empty v1; unsigned long long v2:16; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu16ll_BFu31i { empty v1; unsigned long long v2:16; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu16ll_BFu31ll { empty v1; unsigned long long v2:16; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu16ll_BFu32i { empty v1; unsigned long long v2:16; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu16ll_BFu32ll { empty v1; unsigned long long v2:16; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu16ll_BFu33 { empty v1; unsigned long long v2:16; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu16ll_BFu7c { empty v1; unsigned long long v2:16; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu16ll_BFu7i { empty v1; unsigned long long v2:16; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu16ll_BFu7ll { empty v1; unsigned long long v2:16; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu16ll_BFu7s { empty v1; unsigned long long v2:16; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu16ll_BFu8c { empty v1; unsigned long long v2:16; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu16ll_BFu8i { empty v1; unsigned long long v2:16; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu16ll_BFu8ll { empty v1; unsigned long long v2:16; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu16ll_BFu8s { empty v1; unsigned long long v2:16; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu16ll_BFu9i { empty v1; unsigned long long v2:16; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu16ll_BFu9ll { empty v1; unsigned long long v2:16; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu16ll_BFu9s { empty v1; unsigned long long v2:16; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu16ll_C { empty v1; unsigned long long v2:16; char v3; };
struct __attribute__((packed)) aSf_BFu16ll_D { empty v1; unsigned long long v2:16; double v3; };
struct __attribute__((packed)) aSf_BFu16ll_F { empty v1; unsigned long long v2:16; float v3; };
struct __attribute__((packed)) aSf_BFu16ll_I { empty v1; unsigned long long v2:16; int v3; };
struct __attribute__((packed)) aSf_BFu16ll_Ip { empty v1; unsigned long long v2:16; int * v3; };
struct __attribute__((packed)) aSf_BFu16ll_L { empty v1; unsigned long long v2:16; long long v3; };
struct __attribute__((packed)) aSf_BFu16ll_S { empty v1; unsigned long long v2:16; short v3; };
struct __attribute__((packed)) aSf_BFu16ll_Sf { empty v1; unsigned long long v2:16; empty v3; };
struct __attribute__((packed)) aSf_BFu16ll_Uc { empty v1; unsigned long long v2:16; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu16ll_Ui { empty v1; unsigned long long v2:16; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu16ll_Ul { empty v1; unsigned long long v2:16; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu16ll_Us { empty v1; unsigned long long v2:16; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu16ll_Vp { empty v1; unsigned long long v2:16; void * v3; };
struct __attribute__((packed)) aSf_BFu16s { empty v1; unsigned short v2:16; };
struct __attribute__((packed)) aSf_BFu16s_BFu15i { empty v1; unsigned short v2:16; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu16s_BFu15ll { empty v1; unsigned short v2:16; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu16s_BFu15s { empty v1; unsigned short v2:16; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu16s_BFu16i { empty v1; unsigned short v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu16s_BFu16ll { empty v1; unsigned short v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu16s_BFu16s { empty v1; unsigned short v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu16s_BFu17i { empty v1; unsigned short v2:16; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu16s_BFu17ll { empty v1; unsigned short v2:16; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu16s_BFu1c { empty v1; unsigned short v2:16; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu16s_BFu1i { empty v1; unsigned short v2:16; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu16s_BFu1ll { empty v1; unsigned short v2:16; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu16s_BFu1s { empty v1; unsigned short v2:16; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu16s_BFu31i { empty v1; unsigned short v2:16; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu16s_BFu31ll { empty v1; unsigned short v2:16; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu16s_BFu32i { empty v1; unsigned short v2:16; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu16s_BFu32ll { empty v1; unsigned short v2:16; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu16s_BFu33 { empty v1; unsigned short v2:16; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu16s_BFu7c { empty v1; unsigned short v2:16; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu16s_BFu7i { empty v1; unsigned short v2:16; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu16s_BFu7ll { empty v1; unsigned short v2:16; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu16s_BFu7s { empty v1; unsigned short v2:16; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu16s_BFu8c { empty v1; unsigned short v2:16; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu16s_BFu8i { empty v1; unsigned short v2:16; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu16s_BFu8ll { empty v1; unsigned short v2:16; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu16s_BFu8s { empty v1; unsigned short v2:16; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu16s_BFu9i { empty v1; unsigned short v2:16; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu16s_BFu9ll { empty v1; unsigned short v2:16; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu16s_BFu9s { empty v1; unsigned short v2:16; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu16s_C { empty v1; unsigned short v2:16; char v3; };
struct __attribute__((packed)) aSf_BFu16s_D { empty v1; unsigned short v2:16; double v3; };
struct __attribute__((packed)) aSf_BFu16s_F { empty v1; unsigned short v2:16; float v3; };
struct __attribute__((packed)) aSf_BFu16s_I { empty v1; unsigned short v2:16; int v3; };
struct __attribute__((packed)) aSf_BFu16s_Ip { empty v1; unsigned short v2:16; int * v3; };
struct __attribute__((packed)) aSf_BFu16s_L { empty v1; unsigned short v2:16; long long v3; };
struct __attribute__((packed)) aSf_BFu16s_S { empty v1; unsigned short v2:16; short v3; };
struct __attribute__((packed)) aSf_BFu16s_Sf { empty v1; unsigned short v2:16; empty v3; };
struct __attribute__((packed)) aSf_BFu16s_Uc { empty v1; unsigned short v2:16; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu16s_Ui { empty v1; unsigned short v2:16; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu16s_Ul { empty v1; unsigned short v2:16; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu16s_Us { empty v1; unsigned short v2:16; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu16s_Vp { empty v1; unsigned short v2:16; void * v3; };
struct __attribute__((packed)) aSf_BFu17i { empty v1; unsigned int v2:17; };
struct __attribute__((packed)) aSf_BFu17i_BFu15i { empty v1; unsigned int v2:17; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu17i_BFu15ll { empty v1; unsigned int v2:17; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu17i_BFu15s { empty v1; unsigned int v2:17; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu17i_BFu16i { empty v1; unsigned int v2:17; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu17i_BFu16ll { empty v1; unsigned int v2:17; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu17i_BFu16s { empty v1; unsigned int v2:17; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu17i_BFu17i { empty v1; unsigned int v2:17; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu17i_BFu17ll { empty v1; unsigned int v2:17; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu17i_BFu1c { empty v1; unsigned int v2:17; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu17i_BFu1i { empty v1; unsigned int v2:17; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu17i_BFu1ll { empty v1; unsigned int v2:17; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu17i_BFu1s { empty v1; unsigned int v2:17; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu17i_BFu31i { empty v1; unsigned int v2:17; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu17i_BFu31ll { empty v1; unsigned int v2:17; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu17i_BFu32i { empty v1; unsigned int v2:17; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu17i_BFu32ll { empty v1; unsigned int v2:17; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu17i_BFu33 { empty v1; unsigned int v2:17; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu17i_BFu7c { empty v1; unsigned int v2:17; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu17i_BFu7i { empty v1; unsigned int v2:17; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu17i_BFu7ll { empty v1; unsigned int v2:17; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu17i_BFu7s { empty v1; unsigned int v2:17; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu17i_BFu8c { empty v1; unsigned int v2:17; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu17i_BFu8i { empty v1; unsigned int v2:17; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu17i_BFu8ll { empty v1; unsigned int v2:17; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu17i_BFu8s { empty v1; unsigned int v2:17; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu17i_BFu9i { empty v1; unsigned int v2:17; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu17i_BFu9ll { empty v1; unsigned int v2:17; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu17i_BFu9s { empty v1; unsigned int v2:17; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu17i_C { empty v1; unsigned int v2:17; char v3; };
struct __attribute__((packed)) aSf_BFu17i_D { empty v1; unsigned int v2:17; double v3; };
struct __attribute__((packed)) aSf_BFu17i_F { empty v1; unsigned int v2:17; float v3; };
struct __attribute__((packed)) aSf_BFu17i_I { empty v1; unsigned int v2:17; int v3; };
struct __attribute__((packed)) aSf_BFu17i_Ip { empty v1; unsigned int v2:17; int * v3; };
struct __attribute__((packed)) aSf_BFu17i_L { empty v1; unsigned int v2:17; long long v3; };
struct __attribute__((packed)) aSf_BFu17i_S { empty v1; unsigned int v2:17; short v3; };
struct __attribute__((packed)) aSf_BFu17i_Sf { empty v1; unsigned int v2:17; empty v3; };
struct __attribute__((packed)) aSf_BFu17i_Uc { empty v1; unsigned int v2:17; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu17i_Ui { empty v1; unsigned int v2:17; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu17i_Ul { empty v1; unsigned int v2:17; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu17i_Us { empty v1; unsigned int v2:17; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu17i_Vp { empty v1; unsigned int v2:17; void * v3; };
struct __attribute__((packed)) aSf_BFu17ll { empty v1; unsigned long long v2:17; };
struct __attribute__((packed)) aSf_BFu17ll_BFu15i { empty v1; unsigned long long v2:17; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu17ll_BFu15ll { empty v1; unsigned long long v2:17; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu17ll_BFu15s { empty v1; unsigned long long v2:17; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu17ll_BFu16i { empty v1; unsigned long long v2:17; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu17ll_BFu16ll { empty v1; unsigned long long v2:17; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu17ll_BFu16s { empty v1; unsigned long long v2:17; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu17ll_BFu17i { empty v1; unsigned long long v2:17; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu17ll_BFu17ll { empty v1; unsigned long long v2:17; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu17ll_BFu1c { empty v1; unsigned long long v2:17; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu17ll_BFu1i { empty v1; unsigned long long v2:17; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu17ll_BFu1ll { empty v1; unsigned long long v2:17; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu17ll_BFu1s { empty v1; unsigned long long v2:17; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu17ll_BFu31i { empty v1; unsigned long long v2:17; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu17ll_BFu31ll { empty v1; unsigned long long v2:17; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu17ll_BFu32i { empty v1; unsigned long long v2:17; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu17ll_BFu32ll { empty v1; unsigned long long v2:17; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu17ll_BFu33 { empty v1; unsigned long long v2:17; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu17ll_BFu7c { empty v1; unsigned long long v2:17; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu17ll_BFu7i { empty v1; unsigned long long v2:17; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu17ll_BFu7ll { empty v1; unsigned long long v2:17; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu17ll_BFu7s { empty v1; unsigned long long v2:17; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu17ll_BFu8c { empty v1; unsigned long long v2:17; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu17ll_BFu8i { empty v1; unsigned long long v2:17; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu17ll_BFu8ll { empty v1; unsigned long long v2:17; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu17ll_BFu8s { empty v1; unsigned long long v2:17; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu17ll_BFu9i { empty v1; unsigned long long v2:17; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu17ll_BFu9ll { empty v1; unsigned long long v2:17; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu17ll_BFu9s { empty v1; unsigned long long v2:17; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu17ll_C { empty v1; unsigned long long v2:17; char v3; };
struct __attribute__((packed)) aSf_BFu17ll_D { empty v1; unsigned long long v2:17; double v3; };
struct __attribute__((packed)) aSf_BFu17ll_F { empty v1; unsigned long long v2:17; float v3; };
struct __attribute__((packed)) aSf_BFu17ll_I { empty v1; unsigned long long v2:17; int v3; };
struct __attribute__((packed)) aSf_BFu17ll_Ip { empty v1; unsigned long long v2:17; int * v3; };
struct __attribute__((packed)) aSf_BFu17ll_L { empty v1; unsigned long long v2:17; long long v3; };
struct __attribute__((packed)) aSf_BFu17ll_S { empty v1; unsigned long long v2:17; short v3; };
struct __attribute__((packed)) aSf_BFu17ll_Sf { empty v1; unsigned long long v2:17; empty v3; };
struct __attribute__((packed)) aSf_BFu17ll_Uc { empty v1; unsigned long long v2:17; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu17ll_Ui { empty v1; unsigned long long v2:17; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu17ll_Ul { empty v1; unsigned long long v2:17; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu17ll_Us { empty v1; unsigned long long v2:17; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu17ll_Vp { empty v1; unsigned long long v2:17; void * v3; };
struct __attribute__((packed)) aSf_BFu1c { empty v1; unsigned char v2:1; };
struct __attribute__((packed)) aSf_BFu1c_BFu15i { empty v1; unsigned char v2:1; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu1c_BFu15ll { empty v1; unsigned char v2:1; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu1c_BFu15s { empty v1; unsigned char v2:1; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu1c_BFu16i { empty v1; unsigned char v2:1; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu1c_BFu16ll { empty v1; unsigned char v2:1; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu1c_BFu16s { empty v1; unsigned char v2:1; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu1c_BFu17i { empty v1; unsigned char v2:1; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu1c_BFu17ll { empty v1; unsigned char v2:1; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu1c_BFu1c { empty v1; unsigned char v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu1c_BFu1i { empty v1; unsigned char v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu1c_BFu1ll { empty v1; unsigned char v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu1c_BFu1s { empty v1; unsigned char v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu1c_BFu31i { empty v1; unsigned char v2:1; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu1c_BFu31ll { empty v1; unsigned char v2:1; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu1c_BFu32i { empty v1; unsigned char v2:1; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu1c_BFu32ll { empty v1; unsigned char v2:1; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu1c_BFu33 { empty v1; unsigned char v2:1; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu1c_BFu7c { empty v1; unsigned char v2:1; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu1c_BFu7i { empty v1; unsigned char v2:1; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu1c_BFu7ll { empty v1; unsigned char v2:1; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu1c_BFu7s { empty v1; unsigned char v2:1; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu1c_BFu8c { empty v1; unsigned char v2:1; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu1c_BFu8i { empty v1; unsigned char v2:1; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu1c_BFu8ll { empty v1; unsigned char v2:1; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu1c_BFu8s { empty v1; unsigned char v2:1; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu1c_BFu9i { empty v1; unsigned char v2:1; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu1c_BFu9ll { empty v1; unsigned char v2:1; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu1c_BFu9s { empty v1; unsigned char v2:1; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu1c_C { empty v1; unsigned char v2:1; char v3; };
struct __attribute__((packed)) aSf_BFu1c_D { empty v1; unsigned char v2:1; double v3; };
struct __attribute__((packed)) aSf_BFu1c_F { empty v1; unsigned char v2:1; float v3; };
struct __attribute__((packed)) aSf_BFu1c_I { empty v1; unsigned char v2:1; int v3; };
struct __attribute__((packed)) aSf_BFu1c_Ip { empty v1; unsigned char v2:1; int * v3; };
struct __attribute__((packed)) aSf_BFu1c_L { empty v1; unsigned char v2:1; long long v3; };
struct __attribute__((packed)) aSf_BFu1c_S { empty v1; unsigned char v2:1; short v3; };
struct __attribute__((packed)) aSf_BFu1c_Sf { empty v1; unsigned char v2:1; empty v3; };
struct __attribute__((packed)) aSf_BFu1c_Uc { empty v1; unsigned char v2:1; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu1c_Ui { empty v1; unsigned char v2:1; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu1c_Ul { empty v1; unsigned char v2:1; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu1c_Us { empty v1; unsigned char v2:1; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu1c_Vp { empty v1; unsigned char v2:1; void * v3; };
struct __attribute__((packed)) aSf_BFu1i { empty v1; unsigned int v2:1; };
struct __attribute__((packed)) aSf_BFu1i_BFu15i { empty v1; unsigned int v2:1; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu1i_BFu15ll { empty v1; unsigned int v2:1; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu1i_BFu15s { empty v1; unsigned int v2:1; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu1i_BFu16i { empty v1; unsigned int v2:1; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu1i_BFu16ll { empty v1; unsigned int v2:1; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu1i_BFu16s { empty v1; unsigned int v2:1; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu1i_BFu17i { empty v1; unsigned int v2:1; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu1i_BFu17ll { empty v1; unsigned int v2:1; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu1i_BFu1c { empty v1; unsigned int v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu1i_BFu1i { empty v1; unsigned int v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu1i_BFu1ll { empty v1; unsigned int v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu1i_BFu1s { empty v1; unsigned int v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu1i_BFu31i { empty v1; unsigned int v2:1; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu1i_BFu31ll { empty v1; unsigned int v2:1; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu1i_BFu32i { empty v1; unsigned int v2:1; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu1i_BFu32ll { empty v1; unsigned int v2:1; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu1i_BFu33 { empty v1; unsigned int v2:1; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu1i_BFu7c { empty v1; unsigned int v2:1; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu1i_BFu7i { empty v1; unsigned int v2:1; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu1i_BFu7ll { empty v1; unsigned int v2:1; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu1i_BFu7s { empty v1; unsigned int v2:1; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu1i_BFu8c { empty v1; unsigned int v2:1; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu1i_BFu8i { empty v1; unsigned int v2:1; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu1i_BFu8ll { empty v1; unsigned int v2:1; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu1i_BFu8s { empty v1; unsigned int v2:1; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu1i_BFu9i { empty v1; unsigned int v2:1; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu1i_BFu9ll { empty v1; unsigned int v2:1; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu1i_BFu9s { empty v1; unsigned int v2:1; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu1i_C { empty v1; unsigned int v2:1; char v3; };
struct __attribute__((packed)) aSf_BFu1i_D { empty v1; unsigned int v2:1; double v3; };
struct __attribute__((packed)) aSf_BFu1i_F { empty v1; unsigned int v2:1; float v3; };
struct __attribute__((packed)) aSf_BFu1i_I { empty v1; unsigned int v2:1; int v3; };
struct __attribute__((packed)) aSf_BFu1i_Ip { empty v1; unsigned int v2:1; int * v3; };
struct __attribute__((packed)) aSf_BFu1i_L { empty v1; unsigned int v2:1; long long v3; };
struct __attribute__((packed)) aSf_BFu1i_S { empty v1; unsigned int v2:1; short v3; };
struct __attribute__((packed)) aSf_BFu1i_Sf { empty v1; unsigned int v2:1; empty v3; };
struct __attribute__((packed)) aSf_BFu1i_Uc { empty v1; unsigned int v2:1; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu1i_Ui { empty v1; unsigned int v2:1; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu1i_Ul { empty v1; unsigned int v2:1; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu1i_Us { empty v1; unsigned int v2:1; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu1i_Vp { empty v1; unsigned int v2:1; void * v3; };
struct __attribute__((packed)) aSf_BFu1ll { empty v1; unsigned long long v2:1; };
struct __attribute__((packed)) aSf_BFu1ll_BFu15i { empty v1; unsigned long long v2:1; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu1ll_BFu15ll { empty v1; unsigned long long v2:1; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu1ll_BFu15s { empty v1; unsigned long long v2:1; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu1ll_BFu16i { empty v1; unsigned long long v2:1; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu1ll_BFu16ll { empty v1; unsigned long long v2:1; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu1ll_BFu16s { empty v1; unsigned long long v2:1; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu1ll_BFu17i { empty v1; unsigned long long v2:1; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu1ll_BFu17ll { empty v1; unsigned long long v2:1; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu1ll_BFu1c { empty v1; unsigned long long v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu1ll_BFu1i { empty v1; unsigned long long v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu1ll_BFu1ll { empty v1; unsigned long long v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu1ll_BFu1s { empty v1; unsigned long long v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu1ll_BFu31i { empty v1; unsigned long long v2:1; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu1ll_BFu31ll { empty v1; unsigned long long v2:1; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu1ll_BFu32i { empty v1; unsigned long long v2:1; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu1ll_BFu32ll { empty v1; unsigned long long v2:1; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu1ll_BFu33 { empty v1; unsigned long long v2:1; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu1ll_BFu7c { empty v1; unsigned long long v2:1; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu1ll_BFu7i { empty v1; unsigned long long v2:1; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu1ll_BFu7ll { empty v1; unsigned long long v2:1; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu1ll_BFu7s { empty v1; unsigned long long v2:1; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu1ll_BFu8c { empty v1; unsigned long long v2:1; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu1ll_BFu8i { empty v1; unsigned long long v2:1; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu1ll_BFu8ll { empty v1; unsigned long long v2:1; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu1ll_BFu8s { empty v1; unsigned long long v2:1; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu1ll_BFu9i { empty v1; unsigned long long v2:1; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu1ll_BFu9ll { empty v1; unsigned long long v2:1; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu1ll_BFu9s { empty v1; unsigned long long v2:1; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu1ll_C { empty v1; unsigned long long v2:1; char v3; };
struct __attribute__((packed)) aSf_BFu1ll_D { empty v1; unsigned long long v2:1; double v3; };
struct __attribute__((packed)) aSf_BFu1ll_F { empty v1; unsigned long long v2:1; float v3; };
struct __attribute__((packed)) aSf_BFu1ll_I { empty v1; unsigned long long v2:1; int v3; };
struct __attribute__((packed)) aSf_BFu1ll_Ip { empty v1; unsigned long long v2:1; int * v3; };
struct __attribute__((packed)) aSf_BFu1ll_L { empty v1; unsigned long long v2:1; long long v3; };
struct __attribute__((packed)) aSf_BFu1ll_S { empty v1; unsigned long long v2:1; short v3; };
struct __attribute__((packed)) aSf_BFu1ll_Sf { empty v1; unsigned long long v2:1; empty v3; };
struct __attribute__((packed)) aSf_BFu1ll_Uc { empty v1; unsigned long long v2:1; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu1ll_Ui { empty v1; unsigned long long v2:1; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu1ll_Ul { empty v1; unsigned long long v2:1; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu1ll_Us { empty v1; unsigned long long v2:1; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu1ll_Vp { empty v1; unsigned long long v2:1; void * v3; };
struct __attribute__((packed)) aSf_BFu1s { empty v1; unsigned short v2:1; };
struct __attribute__((packed)) aSf_BFu1s_BFu15i { empty v1; unsigned short v2:1; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu1s_BFu15ll { empty v1; unsigned short v2:1; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu1s_BFu15s { empty v1; unsigned short v2:1; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu1s_BFu16i { empty v1; unsigned short v2:1; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu1s_BFu16ll { empty v1; unsigned short v2:1; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu1s_BFu16s { empty v1; unsigned short v2:1; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu1s_BFu17i { empty v1; unsigned short v2:1; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu1s_BFu17ll { empty v1; unsigned short v2:1; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu1s_BFu1c { empty v1; unsigned short v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu1s_BFu1i { empty v1; unsigned short v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu1s_BFu1ll { empty v1; unsigned short v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu1s_BFu1s { empty v1; unsigned short v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu1s_BFu31i { empty v1; unsigned short v2:1; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu1s_BFu31ll { empty v1; unsigned short v2:1; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu1s_BFu32i { empty v1; unsigned short v2:1; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu1s_BFu32ll { empty v1; unsigned short v2:1; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu1s_BFu33 { empty v1; unsigned short v2:1; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu1s_BFu7c { empty v1; unsigned short v2:1; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu1s_BFu7i { empty v1; unsigned short v2:1; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu1s_BFu7ll { empty v1; unsigned short v2:1; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu1s_BFu7s { empty v1; unsigned short v2:1; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu1s_BFu8c { empty v1; unsigned short v2:1; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu1s_BFu8i { empty v1; unsigned short v2:1; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu1s_BFu8ll { empty v1; unsigned short v2:1; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu1s_BFu8s { empty v1; unsigned short v2:1; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu1s_BFu9i { empty v1; unsigned short v2:1; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu1s_BFu9ll { empty v1; unsigned short v2:1; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu1s_BFu9s { empty v1; unsigned short v2:1; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu1s_C { empty v1; unsigned short v2:1; char v3; };
struct __attribute__((packed)) aSf_BFu1s_D { empty v1; unsigned short v2:1; double v3; };
struct __attribute__((packed)) aSf_BFu1s_F { empty v1; unsigned short v2:1; float v3; };
struct __attribute__((packed)) aSf_BFu1s_I { empty v1; unsigned short v2:1; int v3; };
struct __attribute__((packed)) aSf_BFu1s_Ip { empty v1; unsigned short v2:1; int * v3; };
struct __attribute__((packed)) aSf_BFu1s_L { empty v1; unsigned short v2:1; long long v3; };
struct __attribute__((packed)) aSf_BFu1s_S { empty v1; unsigned short v2:1; short v3; };
struct __attribute__((packed)) aSf_BFu1s_Sf { empty v1; unsigned short v2:1; empty v3; };
struct __attribute__((packed)) aSf_BFu1s_Uc { empty v1; unsigned short v2:1; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu1s_Ui { empty v1; unsigned short v2:1; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu1s_Ul { empty v1; unsigned short v2:1; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu1s_Us { empty v1; unsigned short v2:1; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu1s_Vp { empty v1; unsigned short v2:1; void * v3; };
struct __attribute__((packed)) aSf_BFu31i { empty v1; unsigned int v2:31; };
struct __attribute__((packed)) aSf_BFu31i_BFu15i { empty v1; unsigned int v2:31; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu31i_BFu15ll { empty v1; unsigned int v2:31; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu31i_BFu15s { empty v1; unsigned int v2:31; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu31i_BFu16i { empty v1; unsigned int v2:31; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu31i_BFu16ll { empty v1; unsigned int v2:31; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu31i_BFu16s { empty v1; unsigned int v2:31; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu31i_BFu17i { empty v1; unsigned int v2:31; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu31i_BFu17ll { empty v1; unsigned int v2:31; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu31i_BFu1c { empty v1; unsigned int v2:31; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu31i_BFu1i { empty v1; unsigned int v2:31; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu31i_BFu1ll { empty v1; unsigned int v2:31; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu31i_BFu1s { empty v1; unsigned int v2:31; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu31i_BFu31i { empty v1; unsigned int v2:31; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu31i_BFu31ll { empty v1; unsigned int v2:31; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu31i_BFu32i { empty v1; unsigned int v2:31; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu31i_BFu32ll { empty v1; unsigned int v2:31; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu31i_BFu33 { empty v1; unsigned int v2:31; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu31i_BFu7c { empty v1; unsigned int v2:31; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu31i_BFu7i { empty v1; unsigned int v2:31; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu31i_BFu7ll { empty v1; unsigned int v2:31; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu31i_BFu7s { empty v1; unsigned int v2:31; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu31i_BFu8c { empty v1; unsigned int v2:31; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu31i_BFu8i { empty v1; unsigned int v2:31; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu31i_BFu8ll { empty v1; unsigned int v2:31; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu31i_BFu8s { empty v1; unsigned int v2:31; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu31i_BFu9i { empty v1; unsigned int v2:31; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu31i_BFu9ll { empty v1; unsigned int v2:31; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu31i_BFu9s { empty v1; unsigned int v2:31; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu31i_C { empty v1; unsigned int v2:31; char v3; };
struct __attribute__((packed)) aSf_BFu31i_D { empty v1; unsigned int v2:31; double v3; };
struct __attribute__((packed)) aSf_BFu31i_F { empty v1; unsigned int v2:31; float v3; };
struct __attribute__((packed)) aSf_BFu31i_I { empty v1; unsigned int v2:31; int v3; };
struct __attribute__((packed)) aSf_BFu31i_Ip { empty v1; unsigned int v2:31; int * v3; };
struct __attribute__((packed)) aSf_BFu31i_L { empty v1; unsigned int v2:31; long long v3; };
struct __attribute__((packed)) aSf_BFu31i_S { empty v1; unsigned int v2:31; short v3; };
struct __attribute__((packed)) aSf_BFu31i_Sf { empty v1; unsigned int v2:31; empty v3; };
struct __attribute__((packed)) aSf_BFu31i_Uc { empty v1; unsigned int v2:31; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu31i_Ui { empty v1; unsigned int v2:31; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu31i_Ul { empty v1; unsigned int v2:31; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu31i_Us { empty v1; unsigned int v2:31; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu31i_Vp { empty v1; unsigned int v2:31; void * v3; };
struct __attribute__((packed)) aSf_BFu31ll { empty v1; unsigned long long v2:31; };
struct __attribute__((packed)) aSf_BFu31ll_BFu15i { empty v1; unsigned long long v2:31; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu31ll_BFu15ll { empty v1; unsigned long long v2:31; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu31ll_BFu15s { empty v1; unsigned long long v2:31; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu31ll_BFu16i { empty v1; unsigned long long v2:31; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu31ll_BFu16ll { empty v1; unsigned long long v2:31; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu31ll_BFu16s { empty v1; unsigned long long v2:31; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu31ll_BFu17i { empty v1; unsigned long long v2:31; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu31ll_BFu17ll { empty v1; unsigned long long v2:31; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu31ll_BFu1c { empty v1; unsigned long long v2:31; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu31ll_BFu1i { empty v1; unsigned long long v2:31; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu31ll_BFu1ll { empty v1; unsigned long long v2:31; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu31ll_BFu1s { empty v1; unsigned long long v2:31; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu31ll_BFu31i { empty v1; unsigned long long v2:31; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu31ll_BFu31ll { empty v1; unsigned long long v2:31; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu31ll_BFu32i { empty v1; unsigned long long v2:31; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu31ll_BFu32ll { empty v1; unsigned long long v2:31; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu31ll_BFu33 { empty v1; unsigned long long v2:31; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu31ll_BFu7c { empty v1; unsigned long long v2:31; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu31ll_BFu7i { empty v1; unsigned long long v2:31; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu31ll_BFu7ll { empty v1; unsigned long long v2:31; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu31ll_BFu7s { empty v1; unsigned long long v2:31; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu31ll_BFu8c { empty v1; unsigned long long v2:31; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu31ll_BFu8i { empty v1; unsigned long long v2:31; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu31ll_BFu8ll { empty v1; unsigned long long v2:31; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu31ll_BFu8s { empty v1; unsigned long long v2:31; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu31ll_BFu9i { empty v1; unsigned long long v2:31; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu31ll_BFu9ll { empty v1; unsigned long long v2:31; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu31ll_BFu9s { empty v1; unsigned long long v2:31; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu31ll_C { empty v1; unsigned long long v2:31; char v3; };
struct __attribute__((packed)) aSf_BFu31ll_D { empty v1; unsigned long long v2:31; double v3; };
struct __attribute__((packed)) aSf_BFu31ll_F { empty v1; unsigned long long v2:31; float v3; };
struct __attribute__((packed)) aSf_BFu31ll_I { empty v1; unsigned long long v2:31; int v3; };
struct __attribute__((packed)) aSf_BFu31ll_Ip { empty v1; unsigned long long v2:31; int * v3; };
struct __attribute__((packed)) aSf_BFu31ll_L { empty v1; unsigned long long v2:31; long long v3; };
struct __attribute__((packed)) aSf_BFu31ll_S { empty v1; unsigned long long v2:31; short v3; };
struct __attribute__((packed)) aSf_BFu31ll_Sf { empty v1; unsigned long long v2:31; empty v3; };
struct __attribute__((packed)) aSf_BFu31ll_Uc { empty v1; unsigned long long v2:31; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu31ll_Ui { empty v1; unsigned long long v2:31; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu31ll_Ul { empty v1; unsigned long long v2:31; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu31ll_Us { empty v1; unsigned long long v2:31; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu31ll_Vp { empty v1; unsigned long long v2:31; void * v3; };
struct __attribute__((packed)) aSf_BFu32i { empty v1; unsigned int v2:32; };
struct __attribute__((packed)) aSf_BFu32i_BFu15i { empty v1; unsigned int v2:32; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu32i_BFu15ll { empty v1; unsigned int v2:32; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu32i_BFu15s { empty v1; unsigned int v2:32; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu32i_BFu16i { empty v1; unsigned int v2:32; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu32i_BFu16ll { empty v1; unsigned int v2:32; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu32i_BFu16s { empty v1; unsigned int v2:32; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu32i_BFu17i { empty v1; unsigned int v2:32; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu32i_BFu17ll { empty v1; unsigned int v2:32; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu32i_BFu1c { empty v1; unsigned int v2:32; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu32i_BFu1i { empty v1; unsigned int v2:32; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu32i_BFu1ll { empty v1; unsigned int v2:32; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu32i_BFu1s { empty v1; unsigned int v2:32; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu32i_BFu31i { empty v1; unsigned int v2:32; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu32i_BFu31ll { empty v1; unsigned int v2:32; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu32i_BFu32i { empty v1; unsigned int v2:32; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu32i_BFu32ll { empty v1; unsigned int v2:32; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu32i_BFu33 { empty v1; unsigned int v2:32; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu32i_BFu7c { empty v1; unsigned int v2:32; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu32i_BFu7i { empty v1; unsigned int v2:32; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu32i_BFu7ll { empty v1; unsigned int v2:32; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu32i_BFu7s { empty v1; unsigned int v2:32; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu32i_BFu8c { empty v1; unsigned int v2:32; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu32i_BFu8i { empty v1; unsigned int v2:32; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu32i_BFu8ll { empty v1; unsigned int v2:32; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu32i_BFu8s { empty v1; unsigned int v2:32; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu32i_BFu9i { empty v1; unsigned int v2:32; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu32i_BFu9ll { empty v1; unsigned int v2:32; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu32i_BFu9s { empty v1; unsigned int v2:32; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu32i_C { empty v1; unsigned int v2:32; char v3; };
struct __attribute__((packed)) aSf_BFu32i_D { empty v1; unsigned int v2:32; double v3; };
struct __attribute__((packed)) aSf_BFu32i_F { empty v1; unsigned int v2:32; float v3; };
struct __attribute__((packed)) aSf_BFu32i_I { empty v1; unsigned int v2:32; int v3; };
struct __attribute__((packed)) aSf_BFu32i_Ip { empty v1; unsigned int v2:32; int * v3; };
struct __attribute__((packed)) aSf_BFu32i_L { empty v1; unsigned int v2:32; long long v3; };
struct __attribute__((packed)) aSf_BFu32i_S { empty v1; unsigned int v2:32; short v3; };
struct __attribute__((packed)) aSf_BFu32i_Sf { empty v1; unsigned int v2:32; empty v3; };
struct __attribute__((packed)) aSf_BFu32i_Uc { empty v1; unsigned int v2:32; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu32i_Ui { empty v1; unsigned int v2:32; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu32i_Ul { empty v1; unsigned int v2:32; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu32i_Us { empty v1; unsigned int v2:32; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu32i_Vp { empty v1; unsigned int v2:32; void * v3; };
struct __attribute__((packed)) aSf_BFu32ll { empty v1; unsigned long long v2:32; };
struct __attribute__((packed)) aSf_BFu32ll_BFu15i { empty v1; unsigned long long v2:32; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu32ll_BFu15ll { empty v1; unsigned long long v2:32; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu32ll_BFu15s { empty v1; unsigned long long v2:32; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu32ll_BFu16i { empty v1; unsigned long long v2:32; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu32ll_BFu16ll { empty v1; unsigned long long v2:32; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu32ll_BFu16s { empty v1; unsigned long long v2:32; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu32ll_BFu17i { empty v1; unsigned long long v2:32; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu32ll_BFu17ll { empty v1; unsigned long long v2:32; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu32ll_BFu1c { empty v1; unsigned long long v2:32; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu32ll_BFu1i { empty v1; unsigned long long v2:32; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu32ll_BFu1ll { empty v1; unsigned long long v2:32; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu32ll_BFu1s { empty v1; unsigned long long v2:32; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu32ll_BFu31i { empty v1; unsigned long long v2:32; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu32ll_BFu31ll { empty v1; unsigned long long v2:32; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu32ll_BFu32i { empty v1; unsigned long long v2:32; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu32ll_BFu32ll { empty v1; unsigned long long v2:32; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu32ll_BFu33 { empty v1; unsigned long long v2:32; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu32ll_BFu7c { empty v1; unsigned long long v2:32; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu32ll_BFu7i { empty v1; unsigned long long v2:32; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu32ll_BFu7ll { empty v1; unsigned long long v2:32; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu32ll_BFu7s { empty v1; unsigned long long v2:32; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu32ll_BFu8c { empty v1; unsigned long long v2:32; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu32ll_BFu8i { empty v1; unsigned long long v2:32; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu32ll_BFu8ll { empty v1; unsigned long long v2:32; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu32ll_BFu8s { empty v1; unsigned long long v2:32; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu32ll_BFu9i { empty v1; unsigned long long v2:32; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu32ll_BFu9ll { empty v1; unsigned long long v2:32; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu32ll_BFu9s { empty v1; unsigned long long v2:32; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu32ll_C { empty v1; unsigned long long v2:32; char v3; };
struct __attribute__((packed)) aSf_BFu32ll_D { empty v1; unsigned long long v2:32; double v3; };
struct __attribute__((packed)) aSf_BFu32ll_F { empty v1; unsigned long long v2:32; float v3; };
struct __attribute__((packed)) aSf_BFu32ll_I { empty v1; unsigned long long v2:32; int v3; };
struct __attribute__((packed)) aSf_BFu32ll_Ip { empty v1; unsigned long long v2:32; int * v3; };
struct __attribute__((packed)) aSf_BFu32ll_L { empty v1; unsigned long long v2:32; long long v3; };
struct __attribute__((packed)) aSf_BFu32ll_S { empty v1; unsigned long long v2:32; short v3; };
struct __attribute__((packed)) aSf_BFu32ll_Sf { empty v1; unsigned long long v2:32; empty v3; };
struct __attribute__((packed)) aSf_BFu32ll_Uc { empty v1; unsigned long long v2:32; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu32ll_Ui { empty v1; unsigned long long v2:32; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu32ll_Ul { empty v1; unsigned long long v2:32; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu32ll_Us { empty v1; unsigned long long v2:32; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu32ll_Vp { empty v1; unsigned long long v2:32; void * v3; };
struct __attribute__((packed)) aSf_BFu33 { empty v1; unsigned long long v2:33; };
struct __attribute__((packed)) aSf_BFu33_BFu15i { empty v1; unsigned long long v2:33; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu33_BFu15ll { empty v1; unsigned long long v2:33; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu33_BFu15s { empty v1; unsigned long long v2:33; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu33_BFu16i { empty v1; unsigned long long v2:33; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu33_BFu16ll { empty v1; unsigned long long v2:33; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu33_BFu16s { empty v1; unsigned long long v2:33; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu33_BFu17i { empty v1; unsigned long long v2:33; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu33_BFu17ll { empty v1; unsigned long long v2:33; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu33_BFu1c { empty v1; unsigned long long v2:33; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu33_BFu1i { empty v1; unsigned long long v2:33; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu33_BFu1ll { empty v1; unsigned long long v2:33; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu33_BFu1s { empty v1; unsigned long long v2:33; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu33_BFu31i { empty v1; unsigned long long v2:33; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu33_BFu31ll { empty v1; unsigned long long v2:33; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu33_BFu32i { empty v1; unsigned long long v2:33; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu33_BFu32ll { empty v1; unsigned long long v2:33; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu33_BFu33 { empty v1; unsigned long long v2:33; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu33_BFu7c { empty v1; unsigned long long v2:33; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu33_BFu7i { empty v1; unsigned long long v2:33; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu33_BFu7ll { empty v1; unsigned long long v2:33; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu33_BFu7s { empty v1; unsigned long long v2:33; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu33_BFu8c { empty v1; unsigned long long v2:33; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu33_BFu8i { empty v1; unsigned long long v2:33; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu33_BFu8ll { empty v1; unsigned long long v2:33; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu33_BFu8s { empty v1; unsigned long long v2:33; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu33_BFu9i { empty v1; unsigned long long v2:33; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu33_BFu9ll { empty v1; unsigned long long v2:33; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu33_BFu9s { empty v1; unsigned long long v2:33; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu33_C { empty v1; unsigned long long v2:33; char v3; };
struct __attribute__((packed)) aSf_BFu33_D { empty v1; unsigned long long v2:33; double v3; };
struct __attribute__((packed)) aSf_BFu33_F { empty v1; unsigned long long v2:33; float v3; };
struct __attribute__((packed)) aSf_BFu33_I { empty v1; unsigned long long v2:33; int v3; };
struct __attribute__((packed)) aSf_BFu33_Ip { empty v1; unsigned long long v2:33; int * v3; };
struct __attribute__((packed)) aSf_BFu33_L { empty v1; unsigned long long v2:33; long long v3; };
struct __attribute__((packed)) aSf_BFu33_S { empty v1; unsigned long long v2:33; short v3; };
struct __attribute__((packed)) aSf_BFu33_Sf { empty v1; unsigned long long v2:33; empty v3; };
struct __attribute__((packed)) aSf_BFu33_Uc { empty v1; unsigned long long v2:33; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu33_Ui { empty v1; unsigned long long v2:33; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu33_Ul { empty v1; unsigned long long v2:33; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu33_Us { empty v1; unsigned long long v2:33; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu33_Vp { empty v1; unsigned long long v2:33; void * v3; };
struct __attribute__((packed)) aSf_BFu7c { empty v1; unsigned char v2:7; };
struct __attribute__((packed)) aSf_BFu7c_BFu15i { empty v1; unsigned char v2:7; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu7c_BFu15ll { empty v1; unsigned char v2:7; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu7c_BFu15s { empty v1; unsigned char v2:7; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu7c_BFu16i { empty v1; unsigned char v2:7; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu7c_BFu16ll { empty v1; unsigned char v2:7; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu7c_BFu16s { empty v1; unsigned char v2:7; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu7c_BFu17i { empty v1; unsigned char v2:7; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu7c_BFu17ll { empty v1; unsigned char v2:7; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu7c_BFu1c { empty v1; unsigned char v2:7; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu7c_BFu1i { empty v1; unsigned char v2:7; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu7c_BFu1ll { empty v1; unsigned char v2:7; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu7c_BFu1s { empty v1; unsigned char v2:7; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu7c_BFu31i { empty v1; unsigned char v2:7; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu7c_BFu31ll { empty v1; unsigned char v2:7; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu7c_BFu32i { empty v1; unsigned char v2:7; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu7c_BFu32ll { empty v1; unsigned char v2:7; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu7c_BFu33 { empty v1; unsigned char v2:7; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu7c_BFu7c { empty v1; unsigned char v2:7; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu7c_BFu7i { empty v1; unsigned char v2:7; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu7c_BFu7ll { empty v1; unsigned char v2:7; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu7c_BFu7s { empty v1; unsigned char v2:7; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu7c_BFu8c { empty v1; unsigned char v2:7; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu7c_BFu8i { empty v1; unsigned char v2:7; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu7c_BFu8ll { empty v1; unsigned char v2:7; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu7c_BFu8s { empty v1; unsigned char v2:7; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu7c_BFu9i { empty v1; unsigned char v2:7; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu7c_BFu9ll { empty v1; unsigned char v2:7; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu7c_BFu9s { empty v1; unsigned char v2:7; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu7c_C { empty v1; unsigned char v2:7; char v3; };
struct __attribute__((packed)) aSf_BFu7c_D { empty v1; unsigned char v2:7; double v3; };
struct __attribute__((packed)) aSf_BFu7c_F { empty v1; unsigned char v2:7; float v3; };
struct __attribute__((packed)) aSf_BFu7c_I { empty v1; unsigned char v2:7; int v3; };
struct __attribute__((packed)) aSf_BFu7c_Ip { empty v1; unsigned char v2:7; int * v3; };
struct __attribute__((packed)) aSf_BFu7c_L { empty v1; unsigned char v2:7; long long v3; };
struct __attribute__((packed)) aSf_BFu7c_S { empty v1; unsigned char v2:7; short v3; };
struct __attribute__((packed)) aSf_BFu7c_Sf { empty v1; unsigned char v2:7; empty v3; };
struct __attribute__((packed)) aSf_BFu7c_Uc { empty v1; unsigned char v2:7; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu7c_Ui { empty v1; unsigned char v2:7; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu7c_Ul { empty v1; unsigned char v2:7; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu7c_Us { empty v1; unsigned char v2:7; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu7c_Vp { empty v1; unsigned char v2:7; void * v3; };
struct __attribute__((packed)) aSf_BFu7i { empty v1; unsigned int v2:7; };
struct __attribute__((packed)) aSf_BFu7i_BFu15i { empty v1; unsigned int v2:7; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu7i_BFu15ll { empty v1; unsigned int v2:7; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu7i_BFu15s { empty v1; unsigned int v2:7; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu7i_BFu16i { empty v1; unsigned int v2:7; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu7i_BFu16ll { empty v1; unsigned int v2:7; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu7i_BFu16s { empty v1; unsigned int v2:7; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu7i_BFu17i { empty v1; unsigned int v2:7; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu7i_BFu17ll { empty v1; unsigned int v2:7; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu7i_BFu1c { empty v1; unsigned int v2:7; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu7i_BFu1i { empty v1; unsigned int v2:7; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu7i_BFu1ll { empty v1; unsigned int v2:7; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu7i_BFu1s { empty v1; unsigned int v2:7; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu7i_BFu31i { empty v1; unsigned int v2:7; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu7i_BFu31ll { empty v1; unsigned int v2:7; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu7i_BFu32i { empty v1; unsigned int v2:7; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu7i_BFu32ll { empty v1; unsigned int v2:7; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu7i_BFu33 { empty v1; unsigned int v2:7; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu7i_BFu7c { empty v1; unsigned int v2:7; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu7i_BFu7i { empty v1; unsigned int v2:7; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu7i_BFu7ll { empty v1; unsigned int v2:7; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu7i_BFu7s { empty v1; unsigned int v2:7; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu7i_BFu8c { empty v1; unsigned int v2:7; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu7i_BFu8i { empty v1; unsigned int v2:7; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu7i_BFu8ll { empty v1; unsigned int v2:7; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu7i_BFu8s { empty v1; unsigned int v2:7; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu7i_BFu9i { empty v1; unsigned int v2:7; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu7i_BFu9ll { empty v1; unsigned int v2:7; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu7i_BFu9s { empty v1; unsigned int v2:7; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu7i_C { empty v1; unsigned int v2:7; char v3; };
struct __attribute__((packed)) aSf_BFu7i_D { empty v1; unsigned int v2:7; double v3; };
struct __attribute__((packed)) aSf_BFu7i_F { empty v1; unsigned int v2:7; float v3; };
struct __attribute__((packed)) aSf_BFu7i_I { empty v1; unsigned int v2:7; int v3; };
struct __attribute__((packed)) aSf_BFu7i_Ip { empty v1; unsigned int v2:7; int * v3; };
struct __attribute__((packed)) aSf_BFu7i_L { empty v1; unsigned int v2:7; long long v3; };
struct __attribute__((packed)) aSf_BFu7i_S { empty v1; unsigned int v2:7; short v3; };
struct __attribute__((packed)) aSf_BFu7i_Sf { empty v1; unsigned int v2:7; empty v3; };
struct __attribute__((packed)) aSf_BFu7i_Uc { empty v1; unsigned int v2:7; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu7i_Ui { empty v1; unsigned int v2:7; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu7i_Ul { empty v1; unsigned int v2:7; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu7i_Us { empty v1; unsigned int v2:7; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu7i_Vp { empty v1; unsigned int v2:7; void * v3; };
struct __attribute__((packed)) aSf_BFu7ll { empty v1; unsigned long long v2:7; };
struct __attribute__((packed)) aSf_BFu7ll_BFu15i { empty v1; unsigned long long v2:7; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu7ll_BFu15ll { empty v1; unsigned long long v2:7; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu7ll_BFu15s { empty v1; unsigned long long v2:7; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu7ll_BFu16i { empty v1; unsigned long long v2:7; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu7ll_BFu16ll { empty v1; unsigned long long v2:7; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu7ll_BFu16s { empty v1; unsigned long long v2:7; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu7ll_BFu17i { empty v1; unsigned long long v2:7; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu7ll_BFu17ll { empty v1; unsigned long long v2:7; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu7ll_BFu1c { empty v1; unsigned long long v2:7; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu7ll_BFu1i { empty v1; unsigned long long v2:7; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu7ll_BFu1ll { empty v1; unsigned long long v2:7; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu7ll_BFu1s { empty v1; unsigned long long v2:7; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu7ll_BFu31i { empty v1; unsigned long long v2:7; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu7ll_BFu31ll { empty v1; unsigned long long v2:7; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu7ll_BFu32i { empty v1; unsigned long long v2:7; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu7ll_BFu32ll { empty v1; unsigned long long v2:7; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu7ll_BFu33 { empty v1; unsigned long long v2:7; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu7ll_BFu7c { empty v1; unsigned long long v2:7; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu7ll_BFu7i { empty v1; unsigned long long v2:7; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu7ll_BFu7ll { empty v1; unsigned long long v2:7; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu7ll_BFu7s { empty v1; unsigned long long v2:7; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu7ll_BFu8c { empty v1; unsigned long long v2:7; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu7ll_BFu8i { empty v1; unsigned long long v2:7; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu7ll_BFu8ll { empty v1; unsigned long long v2:7; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu7ll_BFu8s { empty v1; unsigned long long v2:7; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu7ll_BFu9i { empty v1; unsigned long long v2:7; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu7ll_BFu9ll { empty v1; unsigned long long v2:7; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu7ll_BFu9s { empty v1; unsigned long long v2:7; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu7ll_C { empty v1; unsigned long long v2:7; char v3; };
struct __attribute__((packed)) aSf_BFu7ll_D { empty v1; unsigned long long v2:7; double v3; };
struct __attribute__((packed)) aSf_BFu7ll_F { empty v1; unsigned long long v2:7; float v3; };
struct __attribute__((packed)) aSf_BFu7ll_I { empty v1; unsigned long long v2:7; int v3; };
struct __attribute__((packed)) aSf_BFu7ll_Ip { empty v1; unsigned long long v2:7; int * v3; };
struct __attribute__((packed)) aSf_BFu7ll_L { empty v1; unsigned long long v2:7; long long v3; };
struct __attribute__((packed)) aSf_BFu7ll_S { empty v1; unsigned long long v2:7; short v3; };
struct __attribute__((packed)) aSf_BFu7ll_Sf { empty v1; unsigned long long v2:7; empty v3; };
struct __attribute__((packed)) aSf_BFu7ll_Uc { empty v1; unsigned long long v2:7; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu7ll_Ui { empty v1; unsigned long long v2:7; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu7ll_Ul { empty v1; unsigned long long v2:7; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu7ll_Us { empty v1; unsigned long long v2:7; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu7ll_Vp { empty v1; unsigned long long v2:7; void * v3; };
struct __attribute__((packed)) aSf_BFu7s { empty v1; unsigned short v2:7; };
struct __attribute__((packed)) aSf_BFu7s_BFu15i { empty v1; unsigned short v2:7; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu7s_BFu15ll { empty v1; unsigned short v2:7; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu7s_BFu15s { empty v1; unsigned short v2:7; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu7s_BFu16i { empty v1; unsigned short v2:7; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu7s_BFu16ll { empty v1; unsigned short v2:7; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu7s_BFu16s { empty v1; unsigned short v2:7; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu7s_BFu17i { empty v1; unsigned short v2:7; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu7s_BFu17ll { empty v1; unsigned short v2:7; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu7s_BFu1c { empty v1; unsigned short v2:7; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu7s_BFu1i { empty v1; unsigned short v2:7; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu7s_BFu1ll { empty v1; unsigned short v2:7; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu7s_BFu1s { empty v1; unsigned short v2:7; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu7s_BFu31i { empty v1; unsigned short v2:7; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu7s_BFu31ll { empty v1; unsigned short v2:7; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu7s_BFu32i { empty v1; unsigned short v2:7; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu7s_BFu32ll { empty v1; unsigned short v2:7; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu7s_BFu33 { empty v1; unsigned short v2:7; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu7s_BFu7c { empty v1; unsigned short v2:7; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu7s_BFu7i { empty v1; unsigned short v2:7; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu7s_BFu7ll { empty v1; unsigned short v2:7; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu7s_BFu7s { empty v1; unsigned short v2:7; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu7s_BFu8c { empty v1; unsigned short v2:7; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu7s_BFu8i { empty v1; unsigned short v2:7; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu7s_BFu8ll { empty v1; unsigned short v2:7; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu7s_BFu8s { empty v1; unsigned short v2:7; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu7s_BFu9i { empty v1; unsigned short v2:7; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu7s_BFu9ll { empty v1; unsigned short v2:7; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu7s_BFu9s { empty v1; unsigned short v2:7; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu7s_C { empty v1; unsigned short v2:7; char v3; };
struct __attribute__((packed)) aSf_BFu7s_D { empty v1; unsigned short v2:7; double v3; };
struct __attribute__((packed)) aSf_BFu7s_F { empty v1; unsigned short v2:7; float v3; };
struct __attribute__((packed)) aSf_BFu7s_I { empty v1; unsigned short v2:7; int v3; };
struct __attribute__((packed)) aSf_BFu7s_Ip { empty v1; unsigned short v2:7; int * v3; };
struct __attribute__((packed)) aSf_BFu7s_L { empty v1; unsigned short v2:7; long long v3; };
struct __attribute__((packed)) aSf_BFu7s_S { empty v1; unsigned short v2:7; short v3; };
struct __attribute__((packed)) aSf_BFu7s_Sf { empty v1; unsigned short v2:7; empty v3; };
struct __attribute__((packed)) aSf_BFu7s_Uc { empty v1; unsigned short v2:7; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu7s_Ui { empty v1; unsigned short v2:7; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu7s_Ul { empty v1; unsigned short v2:7; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu7s_Us { empty v1; unsigned short v2:7; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu7s_Vp { empty v1; unsigned short v2:7; void * v3; };
struct __attribute__((packed)) aSf_BFu8c { empty v1; unsigned char v2:8; };
struct __attribute__((packed)) aSf_BFu8c_BFu15i { empty v1; unsigned char v2:8; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu8c_BFu15ll { empty v1; unsigned char v2:8; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu8c_BFu15s { empty v1; unsigned char v2:8; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu8c_BFu16i { empty v1; unsigned char v2:8; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu8c_BFu16ll { empty v1; unsigned char v2:8; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu8c_BFu16s { empty v1; unsigned char v2:8; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu8c_BFu17i { empty v1; unsigned char v2:8; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu8c_BFu17ll { empty v1; unsigned char v2:8; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu8c_BFu1c { empty v1; unsigned char v2:8; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu8c_BFu1i { empty v1; unsigned char v2:8; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu8c_BFu1ll { empty v1; unsigned char v2:8; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu8c_BFu1s { empty v1; unsigned char v2:8; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu8c_BFu31i { empty v1; unsigned char v2:8; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu8c_BFu31ll { empty v1; unsigned char v2:8; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu8c_BFu32i { empty v1; unsigned char v2:8; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu8c_BFu32ll { empty v1; unsigned char v2:8; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu8c_BFu33 { empty v1; unsigned char v2:8; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu8c_BFu7c { empty v1; unsigned char v2:8; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu8c_BFu7i { empty v1; unsigned char v2:8; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu8c_BFu7ll { empty v1; unsigned char v2:8; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu8c_BFu7s { empty v1; unsigned char v2:8; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu8c_BFu8c { empty v1; unsigned char v2:8; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu8c_BFu8i { empty v1; unsigned char v2:8; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu8c_BFu8ll { empty v1; unsigned char v2:8; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu8c_BFu8s { empty v1; unsigned char v2:8; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu8c_BFu9i { empty v1; unsigned char v2:8; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu8c_BFu9ll { empty v1; unsigned char v2:8; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu8c_BFu9s { empty v1; unsigned char v2:8; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu8c_C { empty v1; unsigned char v2:8; char v3; };
struct __attribute__((packed)) aSf_BFu8c_D { empty v1; unsigned char v2:8; double v3; };
struct __attribute__((packed)) aSf_BFu8c_F { empty v1; unsigned char v2:8; float v3; };
struct __attribute__((packed)) aSf_BFu8c_I { empty v1; unsigned char v2:8; int v3; };
struct __attribute__((packed)) aSf_BFu8c_Ip { empty v1; unsigned char v2:8; int * v3; };
struct __attribute__((packed)) aSf_BFu8c_L { empty v1; unsigned char v2:8; long long v3; };
struct __attribute__((packed)) aSf_BFu8c_S { empty v1; unsigned char v2:8; short v3; };
struct __attribute__((packed)) aSf_BFu8c_Sf { empty v1; unsigned char v2:8; empty v3; };
struct __attribute__((packed)) aSf_BFu8c_Uc { empty v1; unsigned char v2:8; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu8c_Ui { empty v1; unsigned char v2:8; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu8c_Ul { empty v1; unsigned char v2:8; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu8c_Us { empty v1; unsigned char v2:8; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu8c_Vp { empty v1; unsigned char v2:8; void * v3; };
struct __attribute__((packed)) aSf_BFu8i { empty v1; unsigned int v2:8; };
struct __attribute__((packed)) aSf_BFu8i_BFu15i { empty v1; unsigned int v2:8; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu8i_BFu15ll { empty v1; unsigned int v2:8; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu8i_BFu15s { empty v1; unsigned int v2:8; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu8i_BFu16i { empty v1; unsigned int v2:8; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu8i_BFu16ll { empty v1; unsigned int v2:8; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu8i_BFu16s { empty v1; unsigned int v2:8; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu8i_BFu17i { empty v1; unsigned int v2:8; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu8i_BFu17ll { empty v1; unsigned int v2:8; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu8i_BFu1c { empty v1; unsigned int v2:8; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu8i_BFu1i { empty v1; unsigned int v2:8; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu8i_BFu1ll { empty v1; unsigned int v2:8; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu8i_BFu1s { empty v1; unsigned int v2:8; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu8i_BFu31i { empty v1; unsigned int v2:8; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu8i_BFu31ll { empty v1; unsigned int v2:8; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu8i_BFu32i { empty v1; unsigned int v2:8; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu8i_BFu32ll { empty v1; unsigned int v2:8; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu8i_BFu33 { empty v1; unsigned int v2:8; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu8i_BFu7c { empty v1; unsigned int v2:8; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu8i_BFu7i { empty v1; unsigned int v2:8; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu8i_BFu7ll { empty v1; unsigned int v2:8; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu8i_BFu7s { empty v1; unsigned int v2:8; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu8i_BFu8c { empty v1; unsigned int v2:8; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu8i_BFu8i { empty v1; unsigned int v2:8; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu8i_BFu8ll { empty v1; unsigned int v2:8; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu8i_BFu8s { empty v1; unsigned int v2:8; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu8i_BFu9i { empty v1; unsigned int v2:8; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu8i_BFu9ll { empty v1; unsigned int v2:8; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu8i_BFu9s { empty v1; unsigned int v2:8; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu8i_C { empty v1; unsigned int v2:8; char v3; };
struct __attribute__((packed)) aSf_BFu8i_D { empty v1; unsigned int v2:8; double v3; };
struct __attribute__((packed)) aSf_BFu8i_F { empty v1; unsigned int v2:8; float v3; };
struct __attribute__((packed)) aSf_BFu8i_I { empty v1; unsigned int v2:8; int v3; };
struct __attribute__((packed)) aSf_BFu8i_Ip { empty v1; unsigned int v2:8; int * v3; };
struct __attribute__((packed)) aSf_BFu8i_L { empty v1; unsigned int v2:8; long long v3; };
struct __attribute__((packed)) aSf_BFu8i_S { empty v1; unsigned int v2:8; short v3; };
struct __attribute__((packed)) aSf_BFu8i_Sf { empty v1; unsigned int v2:8; empty v3; };
struct __attribute__((packed)) aSf_BFu8i_Uc { empty v1; unsigned int v2:8; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu8i_Ui { empty v1; unsigned int v2:8; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu8i_Ul { empty v1; unsigned int v2:8; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu8i_Us { empty v1; unsigned int v2:8; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu8i_Vp { empty v1; unsigned int v2:8; void * v3; };
struct __attribute__((packed)) aSf_BFu8ll { empty v1; unsigned long long v2:8; };
struct __attribute__((packed)) aSf_BFu8ll_BFu15i { empty v1; unsigned long long v2:8; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu8ll_BFu15ll { empty v1; unsigned long long v2:8; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu8ll_BFu15s { empty v1; unsigned long long v2:8; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu8ll_BFu16i { empty v1; unsigned long long v2:8; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu8ll_BFu16ll { empty v1; unsigned long long v2:8; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu8ll_BFu16s { empty v1; unsigned long long v2:8; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu8ll_BFu17i { empty v1; unsigned long long v2:8; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu8ll_BFu17ll { empty v1; unsigned long long v2:8; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu8ll_BFu1c { empty v1; unsigned long long v2:8; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu8ll_BFu1i { empty v1; unsigned long long v2:8; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu8ll_BFu1ll { empty v1; unsigned long long v2:8; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu8ll_BFu1s { empty v1; unsigned long long v2:8; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu8ll_BFu31i { empty v1; unsigned long long v2:8; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu8ll_BFu31ll { empty v1; unsigned long long v2:8; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu8ll_BFu32i { empty v1; unsigned long long v2:8; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu8ll_BFu32ll { empty v1; unsigned long long v2:8; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu8ll_BFu33 { empty v1; unsigned long long v2:8; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu8ll_BFu7c { empty v1; unsigned long long v2:8; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu8ll_BFu7i { empty v1; unsigned long long v2:8; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu8ll_BFu7ll { empty v1; unsigned long long v2:8; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu8ll_BFu7s { empty v1; unsigned long long v2:8; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu8ll_BFu8c { empty v1; unsigned long long v2:8; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu8ll_BFu8i { empty v1; unsigned long long v2:8; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu8ll_BFu8ll { empty v1; unsigned long long v2:8; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu8ll_BFu8s { empty v1; unsigned long long v2:8; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu8ll_BFu9i { empty v1; unsigned long long v2:8; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu8ll_BFu9ll { empty v1; unsigned long long v2:8; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu8ll_BFu9s { empty v1; unsigned long long v2:8; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu8ll_C { empty v1; unsigned long long v2:8; char v3; };
struct __attribute__((packed)) aSf_BFu8ll_D { empty v1; unsigned long long v2:8; double v3; };
struct __attribute__((packed)) aSf_BFu8ll_F { empty v1; unsigned long long v2:8; float v3; };
struct __attribute__((packed)) aSf_BFu8ll_I { empty v1; unsigned long long v2:8; int v3; };
struct __attribute__((packed)) aSf_BFu8ll_Ip { empty v1; unsigned long long v2:8; int * v3; };
struct __attribute__((packed)) aSf_BFu8ll_L { empty v1; unsigned long long v2:8; long long v3; };
struct __attribute__((packed)) aSf_BFu8ll_S { empty v1; unsigned long long v2:8; short v3; };
struct __attribute__((packed)) aSf_BFu8ll_Sf { empty v1; unsigned long long v2:8; empty v3; };
struct __attribute__((packed)) aSf_BFu8ll_Uc { empty v1; unsigned long long v2:8; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu8ll_Ui { empty v1; unsigned long long v2:8; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu8ll_Ul { empty v1; unsigned long long v2:8; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu8ll_Us { empty v1; unsigned long long v2:8; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu8ll_Vp { empty v1; unsigned long long v2:8; void * v3; };
struct __attribute__((packed)) aSf_BFu8s { empty v1; unsigned short v2:8; };
struct __attribute__((packed)) aSf_BFu8s_BFu15i { empty v1; unsigned short v2:8; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu8s_BFu15ll { empty v1; unsigned short v2:8; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu8s_BFu15s { empty v1; unsigned short v2:8; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu8s_BFu16i { empty v1; unsigned short v2:8; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu8s_BFu16ll { empty v1; unsigned short v2:8; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu8s_BFu16s { empty v1; unsigned short v2:8; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu8s_BFu17i { empty v1; unsigned short v2:8; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu8s_BFu17ll { empty v1; unsigned short v2:8; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu8s_BFu1c { empty v1; unsigned short v2:8; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu8s_BFu1i { empty v1; unsigned short v2:8; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu8s_BFu1ll { empty v1; unsigned short v2:8; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu8s_BFu1s { empty v1; unsigned short v2:8; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu8s_BFu31i { empty v1; unsigned short v2:8; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu8s_BFu31ll { empty v1; unsigned short v2:8; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu8s_BFu32i { empty v1; unsigned short v2:8; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu8s_BFu32ll { empty v1; unsigned short v2:8; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu8s_BFu33 { empty v1; unsigned short v2:8; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu8s_BFu7c { empty v1; unsigned short v2:8; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu8s_BFu7i { empty v1; unsigned short v2:8; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu8s_BFu7ll { empty v1; unsigned short v2:8; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu8s_BFu7s { empty v1; unsigned short v2:8; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu8s_BFu8c { empty v1; unsigned short v2:8; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu8s_BFu8i { empty v1; unsigned short v2:8; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu8s_BFu8ll { empty v1; unsigned short v2:8; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu8s_BFu8s { empty v1; unsigned short v2:8; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu8s_BFu9i { empty v1; unsigned short v2:8; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu8s_BFu9ll { empty v1; unsigned short v2:8; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu8s_BFu9s { empty v1; unsigned short v2:8; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu8s_C { empty v1; unsigned short v2:8; char v3; };
struct __attribute__((packed)) aSf_BFu8s_D { empty v1; unsigned short v2:8; double v3; };
struct __attribute__((packed)) aSf_BFu8s_F { empty v1; unsigned short v2:8; float v3; };
struct __attribute__((packed)) aSf_BFu8s_I { empty v1; unsigned short v2:8; int v3; };
struct __attribute__((packed)) aSf_BFu8s_Ip { empty v1; unsigned short v2:8; int * v3; };
struct __attribute__((packed)) aSf_BFu8s_L { empty v1; unsigned short v2:8; long long v3; };
struct __attribute__((packed)) aSf_BFu8s_S { empty v1; unsigned short v2:8; short v3; };
struct __attribute__((packed)) aSf_BFu8s_Sf { empty v1; unsigned short v2:8; empty v3; };
struct __attribute__((packed)) aSf_BFu8s_Uc { empty v1; unsigned short v2:8; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu8s_Ui { empty v1; unsigned short v2:8; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu8s_Ul { empty v1; unsigned short v2:8; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu8s_Us { empty v1; unsigned short v2:8; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu8s_Vp { empty v1; unsigned short v2:8; void * v3; };
struct __attribute__((packed)) aSf_BFu9i { empty v1; unsigned int v2:9; };
struct __attribute__((packed)) aSf_BFu9i_BFu15i { empty v1; unsigned int v2:9; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu9i_BFu15ll { empty v1; unsigned int v2:9; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu9i_BFu15s { empty v1; unsigned int v2:9; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu9i_BFu16i { empty v1; unsigned int v2:9; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu9i_BFu16ll { empty v1; unsigned int v2:9; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu9i_BFu16s { empty v1; unsigned int v2:9; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu9i_BFu17i { empty v1; unsigned int v2:9; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu9i_BFu17ll { empty v1; unsigned int v2:9; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu9i_BFu1c { empty v1; unsigned int v2:9; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu9i_BFu1i { empty v1; unsigned int v2:9; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu9i_BFu1ll { empty v1; unsigned int v2:9; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu9i_BFu1s { empty v1; unsigned int v2:9; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu9i_BFu31i { empty v1; unsigned int v2:9; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu9i_BFu31ll { empty v1; unsigned int v2:9; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu9i_BFu32i { empty v1; unsigned int v2:9; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu9i_BFu32ll { empty v1; unsigned int v2:9; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu9i_BFu33 { empty v1; unsigned int v2:9; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu9i_BFu7c { empty v1; unsigned int v2:9; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu9i_BFu7i { empty v1; unsigned int v2:9; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu9i_BFu7ll { empty v1; unsigned int v2:9; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu9i_BFu7s { empty v1; unsigned int v2:9; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu9i_BFu8c { empty v1; unsigned int v2:9; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu9i_BFu8i { empty v1; unsigned int v2:9; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu9i_BFu8ll { empty v1; unsigned int v2:9; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu9i_BFu8s { empty v1; unsigned int v2:9; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu9i_BFu9i { empty v1; unsigned int v2:9; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu9i_BFu9ll { empty v1; unsigned int v2:9; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu9i_BFu9s { empty v1; unsigned int v2:9; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu9i_C { empty v1; unsigned int v2:9; char v3; };
struct __attribute__((packed)) aSf_BFu9i_D { empty v1; unsigned int v2:9; double v3; };
struct __attribute__((packed)) aSf_BFu9i_F { empty v1; unsigned int v2:9; float v3; };
struct __attribute__((packed)) aSf_BFu9i_I { empty v1; unsigned int v2:9; int v3; };
struct __attribute__((packed)) aSf_BFu9i_Ip { empty v1; unsigned int v2:9; int * v3; };
struct __attribute__((packed)) aSf_BFu9i_L { empty v1; unsigned int v2:9; long long v3; };
struct __attribute__((packed)) aSf_BFu9i_S { empty v1; unsigned int v2:9; short v3; };
struct __attribute__((packed)) aSf_BFu9i_Sf { empty v1; unsigned int v2:9; empty v3; };
struct __attribute__((packed)) aSf_BFu9i_Uc { empty v1; unsigned int v2:9; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu9i_Ui { empty v1; unsigned int v2:9; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu9i_Ul { empty v1; unsigned int v2:9; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu9i_Us { empty v1; unsigned int v2:9; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu9i_Vp { empty v1; unsigned int v2:9; void * v3; };
struct __attribute__((packed)) aSf_BFu9ll { empty v1; unsigned long long v2:9; };
struct __attribute__((packed)) aSf_BFu9ll_BFu15i { empty v1; unsigned long long v2:9; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu9ll_BFu15ll { empty v1; unsigned long long v2:9; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu9ll_BFu15s { empty v1; unsigned long long v2:9; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu9ll_BFu16i { empty v1; unsigned long long v2:9; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu9ll_BFu16ll { empty v1; unsigned long long v2:9; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu9ll_BFu16s { empty v1; unsigned long long v2:9; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu9ll_BFu17i { empty v1; unsigned long long v2:9; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu9ll_BFu17ll { empty v1; unsigned long long v2:9; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu9ll_BFu1c { empty v1; unsigned long long v2:9; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu9ll_BFu1i { empty v1; unsigned long long v2:9; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu9ll_BFu1ll { empty v1; unsigned long long v2:9; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu9ll_BFu1s { empty v1; unsigned long long v2:9; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu9ll_BFu31i { empty v1; unsigned long long v2:9; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu9ll_BFu31ll { empty v1; unsigned long long v2:9; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu9ll_BFu32i { empty v1; unsigned long long v2:9; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu9ll_BFu32ll { empty v1; unsigned long long v2:9; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu9ll_BFu33 { empty v1; unsigned long long v2:9; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu9ll_BFu7c { empty v1; unsigned long long v2:9; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu9ll_BFu7i { empty v1; unsigned long long v2:9; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu9ll_BFu7ll { empty v1; unsigned long long v2:9; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu9ll_BFu7s { empty v1; unsigned long long v2:9; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu9ll_BFu8c { empty v1; unsigned long long v2:9; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu9ll_BFu8i { empty v1; unsigned long long v2:9; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu9ll_BFu8ll { empty v1; unsigned long long v2:9; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu9ll_BFu8s { empty v1; unsigned long long v2:9; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu9ll_BFu9i { empty v1; unsigned long long v2:9; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu9ll_BFu9ll { empty v1; unsigned long long v2:9; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu9ll_BFu9s { empty v1; unsigned long long v2:9; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu9ll_C { empty v1; unsigned long long v2:9; char v3; };
struct __attribute__((packed)) aSf_BFu9ll_D { empty v1; unsigned long long v2:9; double v3; };
struct __attribute__((packed)) aSf_BFu9ll_F { empty v1; unsigned long long v2:9; float v3; };
struct __attribute__((packed)) aSf_BFu9ll_I { empty v1; unsigned long long v2:9; int v3; };
struct __attribute__((packed)) aSf_BFu9ll_Ip { empty v1; unsigned long long v2:9; int * v3; };
struct __attribute__((packed)) aSf_BFu9ll_L { empty v1; unsigned long long v2:9; long long v3; };
struct __attribute__((packed)) aSf_BFu9ll_S { empty v1; unsigned long long v2:9; short v3; };
struct __attribute__((packed)) aSf_BFu9ll_Sf { empty v1; unsigned long long v2:9; empty v3; };
struct __attribute__((packed)) aSf_BFu9ll_Uc { empty v1; unsigned long long v2:9; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu9ll_Ui { empty v1; unsigned long long v2:9; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu9ll_Ul { empty v1; unsigned long long v2:9; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu9ll_Us { empty v1; unsigned long long v2:9; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu9ll_Vp { empty v1; unsigned long long v2:9; void * v3; };
struct __attribute__((packed)) aSf_BFu9s { empty v1; unsigned short v2:9; };
struct __attribute__((packed)) aSf_BFu9s_BFu15i { empty v1; unsigned short v2:9; unsigned int v3:15; };
struct __attribute__((packed)) aSf_BFu9s_BFu15ll { empty v1; unsigned short v2:9; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_BFu9s_BFu15s { empty v1; unsigned short v2:9; unsigned short v3:15; };
struct __attribute__((packed)) aSf_BFu9s_BFu16i { empty v1; unsigned short v2:9; unsigned int v3:16; };
struct __attribute__((packed)) aSf_BFu9s_BFu16ll { empty v1; unsigned short v2:9; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_BFu9s_BFu16s { empty v1; unsigned short v2:9; unsigned short v3:16; };
struct __attribute__((packed)) aSf_BFu9s_BFu17i { empty v1; unsigned short v2:9; unsigned int v3:17; };
struct __attribute__((packed)) aSf_BFu9s_BFu17ll { empty v1; unsigned short v2:9; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_BFu9s_BFu1c { empty v1; unsigned short v2:9; unsigned char v3:1; };
struct __attribute__((packed)) aSf_BFu9s_BFu1i { empty v1; unsigned short v2:9; unsigned int v3:1; };
struct __attribute__((packed)) aSf_BFu9s_BFu1ll { empty v1; unsigned short v2:9; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_BFu9s_BFu1s { empty v1; unsigned short v2:9; unsigned short v3:1; };
struct __attribute__((packed)) aSf_BFu9s_BFu31i { empty v1; unsigned short v2:9; unsigned int v3:31; };
struct __attribute__((packed)) aSf_BFu9s_BFu31ll { empty v1; unsigned short v2:9; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_BFu9s_BFu32i { empty v1; unsigned short v2:9; unsigned int v3:32; };
struct __attribute__((packed)) aSf_BFu9s_BFu32ll { empty v1; unsigned short v2:9; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_BFu9s_BFu33 { empty v1; unsigned short v2:9; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_BFu9s_BFu7c { empty v1; unsigned short v2:9; unsigned char v3:7; };
struct __attribute__((packed)) aSf_BFu9s_BFu7i { empty v1; unsigned short v2:9; unsigned int v3:7; };
struct __attribute__((packed)) aSf_BFu9s_BFu7ll { empty v1; unsigned short v2:9; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_BFu9s_BFu7s { empty v1; unsigned short v2:9; unsigned short v3:7; };
struct __attribute__((packed)) aSf_BFu9s_BFu8c { empty v1; unsigned short v2:9; unsigned char v3:8; };
struct __attribute__((packed)) aSf_BFu9s_BFu8i { empty v1; unsigned short v2:9; unsigned int v3:8; };
struct __attribute__((packed)) aSf_BFu9s_BFu8ll { empty v1; unsigned short v2:9; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_BFu9s_BFu8s { empty v1; unsigned short v2:9; unsigned short v3:8; };
struct __attribute__((packed)) aSf_BFu9s_BFu9i { empty v1; unsigned short v2:9; unsigned int v3:9; };
struct __attribute__((packed)) aSf_BFu9s_BFu9ll { empty v1; unsigned short v2:9; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_BFu9s_BFu9s { empty v1; unsigned short v2:9; unsigned short v3:9; };
struct __attribute__((packed)) aSf_BFu9s_C { empty v1; unsigned short v2:9; char v3; };
struct __attribute__((packed)) aSf_BFu9s_D { empty v1; unsigned short v2:9; double v3; };
struct __attribute__((packed)) aSf_BFu9s_F { empty v1; unsigned short v2:9; float v3; };
struct __attribute__((packed)) aSf_BFu9s_I { empty v1; unsigned short v2:9; int v3; };
struct __attribute__((packed)) aSf_BFu9s_Ip { empty v1; unsigned short v2:9; int * v3; };
struct __attribute__((packed)) aSf_BFu9s_L { empty v1; unsigned short v2:9; long long v3; };
struct __attribute__((packed)) aSf_BFu9s_S { empty v1; unsigned short v2:9; short v3; };
struct __attribute__((packed)) aSf_BFu9s_Sf { empty v1; unsigned short v2:9; empty v3; };
struct __attribute__((packed)) aSf_BFu9s_Uc { empty v1; unsigned short v2:9; unsigned char v3; };
struct __attribute__((packed)) aSf_BFu9s_Ui { empty v1; unsigned short v2:9; unsigned int v3; };
struct __attribute__((packed)) aSf_BFu9s_Ul { empty v1; unsigned short v2:9; unsigned long long v3; };
struct __attribute__((packed)) aSf_BFu9s_Us { empty v1; unsigned short v2:9; unsigned short v3; };
struct __attribute__((packed)) aSf_BFu9s_Vp { empty v1; unsigned short v2:9; void * v3; };
struct __attribute__((packed)) aSf_C { empty v1; char v2; };
struct __attribute__((packed)) aSf_C_BFu15i { empty v1; char v2; unsigned int v3:15; };
struct __attribute__((packed)) aSf_C_BFu15ll { empty v1; char v2; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_C_BFu15s { empty v1; char v2; unsigned short v3:15; };
struct __attribute__((packed)) aSf_C_BFu16i { empty v1; char v2; unsigned int v3:16; };
struct __attribute__((packed)) aSf_C_BFu16ll { empty v1; char v2; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_C_BFu16s { empty v1; char v2; unsigned short v3:16; };
struct __attribute__((packed)) aSf_C_BFu17i { empty v1; char v2; unsigned int v3:17; };
struct __attribute__((packed)) aSf_C_BFu17ll { empty v1; char v2; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_C_BFu1c { empty v1; char v2; unsigned char v3:1; };
struct __attribute__((packed)) aSf_C_BFu1i { empty v1; char v2; unsigned int v3:1; };
struct __attribute__((packed)) aSf_C_BFu1ll { empty v1; char v2; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_C_BFu1s { empty v1; char v2; unsigned short v3:1; };
struct __attribute__((packed)) aSf_C_BFu31i { empty v1; char v2; unsigned int v3:31; };
struct __attribute__((packed)) aSf_C_BFu31ll { empty v1; char v2; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_C_BFu32i { empty v1; char v2; unsigned int v3:32; };
struct __attribute__((packed)) aSf_C_BFu32ll { empty v1; char v2; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_C_BFu33 { empty v1; char v2; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_C_BFu7c { empty v1; char v2; unsigned char v3:7; };
struct __attribute__((packed)) aSf_C_BFu7i { empty v1; char v2; unsigned int v3:7; };
struct __attribute__((packed)) aSf_C_BFu7ll { empty v1; char v2; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_C_BFu7s { empty v1; char v2; unsigned short v3:7; };
struct __attribute__((packed)) aSf_C_BFu8c { empty v1; char v2; unsigned char v3:8; };
struct __attribute__((packed)) aSf_C_BFu8i { empty v1; char v2; unsigned int v3:8; };
struct __attribute__((packed)) aSf_C_BFu8ll { empty v1; char v2; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_C_BFu8s { empty v1; char v2; unsigned short v3:8; };
struct __attribute__((packed)) aSf_C_BFu9i { empty v1; char v2; unsigned int v3:9; };
struct __attribute__((packed)) aSf_C_BFu9ll { empty v1; char v2; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_C_BFu9s { empty v1; char v2; unsigned short v3:9; };
struct __attribute__((packed)) aSf_C_C { empty v1; char v2; char v3; };
struct __attribute__((packed)) aSf_C_D { empty v1; char v2; double v3; };
struct __attribute__((packed)) aSf_C_F { empty v1; char v2; float v3; };
struct __attribute__((packed)) aSf_C_I { empty v1; char v2; int v3; };
struct __attribute__((packed)) aSf_C_Ip { empty v1; char v2; int * v3; };
struct __attribute__((packed)) aSf_C_L { empty v1; char v2; long long v3; };
struct __attribute__((packed)) aSf_C_S { empty v1; char v2; short v3; };
struct __attribute__((packed)) aSf_C_Sf { empty v1; char v2; empty v3; };
struct __attribute__((packed)) aSf_C_Uc { empty v1; char v2; unsigned char v3; };
struct __attribute__((packed)) aSf_C_Ui { empty v1; char v2; unsigned int v3; };
struct __attribute__((packed)) aSf_C_Ul { empty v1; char v2; unsigned long long v3; };
struct __attribute__((packed)) aSf_C_Us { empty v1; char v2; unsigned short v3; };
struct __attribute__((packed)) aSf_C_Vp { empty v1; char v2; void * v3; };
struct __attribute__((packed)) aSf_D { empty v1; double v2; };
struct __attribute__((packed)) aSf_D_BFu15i { empty v1; double v2; unsigned int v3:15; };
struct __attribute__((packed)) aSf_D_BFu15ll { empty v1; double v2; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_D_BFu15s { empty v1; double v2; unsigned short v3:15; };
struct __attribute__((packed)) aSf_D_BFu16i { empty v1; double v2; unsigned int v3:16; };
struct __attribute__((packed)) aSf_D_BFu16ll { empty v1; double v2; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_D_BFu16s { empty v1; double v2; unsigned short v3:16; };
struct __attribute__((packed)) aSf_D_BFu17i { empty v1; double v2; unsigned int v3:17; };
struct __attribute__((packed)) aSf_D_BFu17ll { empty v1; double v2; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_D_BFu1c { empty v1; double v2; unsigned char v3:1; };
struct __attribute__((packed)) aSf_D_BFu1i { empty v1; double v2; unsigned int v3:1; };
struct __attribute__((packed)) aSf_D_BFu1ll { empty v1; double v2; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_D_BFu1s { empty v1; double v2; unsigned short v3:1; };
struct __attribute__((packed)) aSf_D_BFu31i { empty v1; double v2; unsigned int v3:31; };
struct __attribute__((packed)) aSf_D_BFu31ll { empty v1; double v2; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_D_BFu32i { empty v1; double v2; unsigned int v3:32; };
struct __attribute__((packed)) aSf_D_BFu32ll { empty v1; double v2; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_D_BFu33 { empty v1; double v2; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_D_BFu7c { empty v1; double v2; unsigned char v3:7; };
struct __attribute__((packed)) aSf_D_BFu7i { empty v1; double v2; unsigned int v3:7; };
struct __attribute__((packed)) aSf_D_BFu7ll { empty v1; double v2; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_D_BFu7s { empty v1; double v2; unsigned short v3:7; };
struct __attribute__((packed)) aSf_D_BFu8c { empty v1; double v2; unsigned char v3:8; };
struct __attribute__((packed)) aSf_D_BFu8i { empty v1; double v2; unsigned int v3:8; };
struct __attribute__((packed)) aSf_D_BFu8ll { empty v1; double v2; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_D_BFu8s { empty v1; double v2; unsigned short v3:8; };
struct __attribute__((packed)) aSf_D_BFu9i { empty v1; double v2; unsigned int v3:9; };
struct __attribute__((packed)) aSf_D_BFu9ll { empty v1; double v2; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_D_BFu9s { empty v1; double v2; unsigned short v3:9; };
struct __attribute__((packed)) aSf_D_C { empty v1; double v2; char v3; };
struct __attribute__((packed)) aSf_D_D { empty v1; double v2; double v3; };
struct __attribute__((packed)) aSf_D_F { empty v1; double v2; float v3; };
struct __attribute__((packed)) aSf_D_I { empty v1; double v2; int v3; };
struct __attribute__((packed)) aSf_D_Ip { empty v1; double v2; int * v3; };
struct __attribute__((packed)) aSf_D_L { empty v1; double v2; long long v3; };
struct __attribute__((packed)) aSf_D_S { empty v1; double v2; short v3; };
struct __attribute__((packed)) aSf_D_Sf { empty v1; double v2; empty v3; };
struct __attribute__((packed)) aSf_D_Uc { empty v1; double v2; unsigned char v3; };
struct __attribute__((packed)) aSf_D_Ui { empty v1; double v2; unsigned int v3; };
struct __attribute__((packed)) aSf_D_Ul { empty v1; double v2; unsigned long long v3; };
struct __attribute__((packed)) aSf_D_Us { empty v1; double v2; unsigned short v3; };
struct __attribute__((packed)) aSf_D_Vp { empty v1; double v2; void * v3; };
struct __attribute__((packed)) aSf_F { empty v1; float v2; };
struct __attribute__((packed)) aSf_F_BFu15i { empty v1; float v2; unsigned int v3:15; };
struct __attribute__((packed)) aSf_F_BFu15ll { empty v1; float v2; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_F_BFu15s { empty v1; float v2; unsigned short v3:15; };
struct __attribute__((packed)) aSf_F_BFu16i { empty v1; float v2; unsigned int v3:16; };
struct __attribute__((packed)) aSf_F_BFu16ll { empty v1; float v2; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_F_BFu16s { empty v1; float v2; unsigned short v3:16; };
struct __attribute__((packed)) aSf_F_BFu17i { empty v1; float v2; unsigned int v3:17; };
struct __attribute__((packed)) aSf_F_BFu17ll { empty v1; float v2; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_F_BFu1c { empty v1; float v2; unsigned char v3:1; };
struct __attribute__((packed)) aSf_F_BFu1i { empty v1; float v2; unsigned int v3:1; };
struct __attribute__((packed)) aSf_F_BFu1ll { empty v1; float v2; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_F_BFu1s { empty v1; float v2; unsigned short v3:1; };
struct __attribute__((packed)) aSf_F_BFu31i { empty v1; float v2; unsigned int v3:31; };
struct __attribute__((packed)) aSf_F_BFu31ll { empty v1; float v2; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_F_BFu32i { empty v1; float v2; unsigned int v3:32; };
struct __attribute__((packed)) aSf_F_BFu32ll { empty v1; float v2; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_F_BFu33 { empty v1; float v2; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_F_BFu7c { empty v1; float v2; unsigned char v3:7; };
struct __attribute__((packed)) aSf_F_BFu7i { empty v1; float v2; unsigned int v3:7; };
struct __attribute__((packed)) aSf_F_BFu7ll { empty v1; float v2; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_F_BFu7s { empty v1; float v2; unsigned short v3:7; };
struct __attribute__((packed)) aSf_F_BFu8c { empty v1; float v2; unsigned char v3:8; };
struct __attribute__((packed)) aSf_F_BFu8i { empty v1; float v2; unsigned int v3:8; };
struct __attribute__((packed)) aSf_F_BFu8ll { empty v1; float v2; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_F_BFu8s { empty v1; float v2; unsigned short v3:8; };
struct __attribute__((packed)) aSf_F_BFu9i { empty v1; float v2; unsigned int v3:9; };
struct __attribute__((packed)) aSf_F_BFu9ll { empty v1; float v2; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_F_BFu9s { empty v1; float v2; unsigned short v3:9; };
struct __attribute__((packed)) aSf_F_C { empty v1; float v2; char v3; };
struct __attribute__((packed)) aSf_F_D { empty v1; float v2; double v3; };
struct __attribute__((packed)) aSf_F_F { empty v1; float v2; float v3; };
struct __attribute__((packed)) aSf_F_I { empty v1; float v2; int v3; };
struct __attribute__((packed)) aSf_F_Ip { empty v1; float v2; int * v3; };
struct __attribute__((packed)) aSf_F_L { empty v1; float v2; long long v3; };
struct __attribute__((packed)) aSf_F_S { empty v1; float v2; short v3; };
struct __attribute__((packed)) aSf_F_Sf { empty v1; float v2; empty v3; };
struct __attribute__((packed)) aSf_F_Uc { empty v1; float v2; unsigned char v3; };
struct __attribute__((packed)) aSf_F_Ui { empty v1; float v2; unsigned int v3; };
struct __attribute__((packed)) aSf_F_Ul { empty v1; float v2; unsigned long long v3; };
struct __attribute__((packed)) aSf_F_Us { empty v1; float v2; unsigned short v3; };
struct __attribute__((packed)) aSf_F_Vp { empty v1; float v2; void * v3; };
struct __attribute__((packed)) aSf_I { empty v1; int v2; };
struct __attribute__((packed)) aSf_I_BFu15i { empty v1; int v2; unsigned int v3:15; };
struct __attribute__((packed)) aSf_I_BFu15ll { empty v1; int v2; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_I_BFu15s { empty v1; int v2; unsigned short v3:15; };
struct __attribute__((packed)) aSf_I_BFu16i { empty v1; int v2; unsigned int v3:16; };
struct __attribute__((packed)) aSf_I_BFu16ll { empty v1; int v2; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_I_BFu16s { empty v1; int v2; unsigned short v3:16; };
struct __attribute__((packed)) aSf_I_BFu17i { empty v1; int v2; unsigned int v3:17; };
struct __attribute__((packed)) aSf_I_BFu17ll { empty v1; int v2; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_I_BFu1c { empty v1; int v2; unsigned char v3:1; };
struct __attribute__((packed)) aSf_I_BFu1i { empty v1; int v2; unsigned int v3:1; };
struct __attribute__((packed)) aSf_I_BFu1ll { empty v1; int v2; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_I_BFu1s { empty v1; int v2; unsigned short v3:1; };
struct __attribute__((packed)) aSf_I_BFu31i { empty v1; int v2; unsigned int v3:31; };
struct __attribute__((packed)) aSf_I_BFu31ll { empty v1; int v2; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_I_BFu32i { empty v1; int v2; unsigned int v3:32; };
struct __attribute__((packed)) aSf_I_BFu32ll { empty v1; int v2; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_I_BFu33 { empty v1; int v2; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_I_BFu7c { empty v1; int v2; unsigned char v3:7; };
struct __attribute__((packed)) aSf_I_BFu7i { empty v1; int v2; unsigned int v3:7; };
struct __attribute__((packed)) aSf_I_BFu7ll { empty v1; int v2; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_I_BFu7s { empty v1; int v2; unsigned short v3:7; };
struct __attribute__((packed)) aSf_I_BFu8c { empty v1; int v2; unsigned char v3:8; };
struct __attribute__((packed)) aSf_I_BFu8i { empty v1; int v2; unsigned int v3:8; };
struct __attribute__((packed)) aSf_I_BFu8ll { empty v1; int v2; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_I_BFu8s { empty v1; int v2; unsigned short v3:8; };
struct __attribute__((packed)) aSf_I_BFu9i { empty v1; int v2; unsigned int v3:9; };
struct __attribute__((packed)) aSf_I_BFu9ll { empty v1; int v2; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_I_BFu9s { empty v1; int v2; unsigned short v3:9; };
struct __attribute__((packed)) aSf_I_C { empty v1; int v2; char v3; };
struct __attribute__((packed)) aSf_I_D { empty v1; int v2; double v3; };
struct __attribute__((packed)) aSf_I_F { empty v1; int v2; float v3; };
struct __attribute__((packed)) aSf_I_I { empty v1; int v2; int v3; };
struct __attribute__((packed)) aSf_I_Ip { empty v1; int v2; int * v3; };
struct __attribute__((packed)) aSf_I_L { empty v1; int v2; long long v3; };
struct __attribute__((packed)) aSf_I_S { empty v1; int v2; short v3; };
struct __attribute__((packed)) aSf_I_Sf { empty v1; int v2; empty v3; };
struct __attribute__((packed)) aSf_I_Uc { empty v1; int v2; unsigned char v3; };
struct __attribute__((packed)) aSf_I_Ui { empty v1; int v2; unsigned int v3; };
struct __attribute__((packed)) aSf_I_Ul { empty v1; int v2; unsigned long long v3; };
struct __attribute__((packed)) aSf_I_Us { empty v1; int v2; unsigned short v3; };
struct __attribute__((packed)) aSf_I_Vp { empty v1; int v2; void * v3; };
struct __attribute__((packed)) aSf_Ip { empty v1; int * v2; };
struct __attribute__((packed)) aSf_Ip_BFu15i { empty v1; int * v2; unsigned int v3:15; };
struct __attribute__((packed)) aSf_Ip_BFu15ll { empty v1; int * v2; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_Ip_BFu15s { empty v1; int * v2; unsigned short v3:15; };
struct __attribute__((packed)) aSf_Ip_BFu16i { empty v1; int * v2; unsigned int v3:16; };
struct __attribute__((packed)) aSf_Ip_BFu16ll { empty v1; int * v2; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_Ip_BFu16s { empty v1; int * v2; unsigned short v3:16; };
struct __attribute__((packed)) aSf_Ip_BFu17i { empty v1; int * v2; unsigned int v3:17; };
struct __attribute__((packed)) aSf_Ip_BFu17ll { empty v1; int * v2; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_Ip_BFu1c { empty v1; int * v2; unsigned char v3:1; };
struct __attribute__((packed)) aSf_Ip_BFu1i { empty v1; int * v2; unsigned int v3:1; };
struct __attribute__((packed)) aSf_Ip_BFu1ll { empty v1; int * v2; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_Ip_BFu1s { empty v1; int * v2; unsigned short v3:1; };
struct __attribute__((packed)) aSf_Ip_BFu31i { empty v1; int * v2; unsigned int v3:31; };
struct __attribute__((packed)) aSf_Ip_BFu31ll { empty v1; int * v2; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_Ip_BFu32i { empty v1; int * v2; unsigned int v3:32; };
struct __attribute__((packed)) aSf_Ip_BFu32ll { empty v1; int * v2; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_Ip_BFu33 { empty v1; int * v2; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_Ip_BFu7c { empty v1; int * v2; unsigned char v3:7; };
struct __attribute__((packed)) aSf_Ip_BFu7i { empty v1; int * v2; unsigned int v3:7; };
struct __attribute__((packed)) aSf_Ip_BFu7ll { empty v1; int * v2; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_Ip_BFu7s { empty v1; int * v2; unsigned short v3:7; };
struct __attribute__((packed)) aSf_Ip_BFu8c { empty v1; int * v2; unsigned char v3:8; };
struct __attribute__((packed)) aSf_Ip_BFu8i { empty v1; int * v2; unsigned int v3:8; };
struct __attribute__((packed)) aSf_Ip_BFu8ll { empty v1; int * v2; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_Ip_BFu8s { empty v1; int * v2; unsigned short v3:8; };
struct __attribute__((packed)) aSf_Ip_BFu9i { empty v1; int * v2; unsigned int v3:9; };
struct __attribute__((packed)) aSf_Ip_BFu9ll { empty v1; int * v2; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_Ip_BFu9s { empty v1; int * v2; unsigned short v3:9; };
struct __attribute__((packed)) aSf_Ip_C { empty v1; int * v2; char v3; };
struct __attribute__((packed)) aSf_Ip_D { empty v1; int * v2; double v3; };
struct __attribute__((packed)) aSf_Ip_F { empty v1; int * v2; float v3; };
struct __attribute__((packed)) aSf_Ip_I { empty v1; int * v2; int v3; };
struct __attribute__((packed)) aSf_Ip_Ip { empty v1; int * v2; int * v3; };
struct __attribute__((packed)) aSf_Ip_L { empty v1; int * v2; long long v3; };
struct __attribute__((packed)) aSf_Ip_S { empty v1; int * v2; short v3; };
struct __attribute__((packed)) aSf_Ip_Sf { empty v1; int * v2; empty v3; };
struct __attribute__((packed)) aSf_Ip_Uc { empty v1; int * v2; unsigned char v3; };
struct __attribute__((packed)) aSf_Ip_Ui { empty v1; int * v2; unsigned int v3; };
struct __attribute__((packed)) aSf_Ip_Ul { empty v1; int * v2; unsigned long long v3; };
struct __attribute__((packed)) aSf_Ip_Us { empty v1; int * v2; unsigned short v3; };
struct __attribute__((packed)) aSf_Ip_Vp { empty v1; int * v2; void * v3; };
struct __attribute__((packed)) aSf_L { empty v1; long long v2; };
struct __attribute__((packed)) aSf_L_BFu15i { empty v1; long long v2; unsigned int v3:15; };
struct __attribute__((packed)) aSf_L_BFu15ll { empty v1; long long v2; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_L_BFu15s { empty v1; long long v2; unsigned short v3:15; };
struct __attribute__((packed)) aSf_L_BFu16i { empty v1; long long v2; unsigned int v3:16; };
struct __attribute__((packed)) aSf_L_BFu16ll { empty v1; long long v2; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_L_BFu16s { empty v1; long long v2; unsigned short v3:16; };
struct __attribute__((packed)) aSf_L_BFu17i { empty v1; long long v2; unsigned int v3:17; };
struct __attribute__((packed)) aSf_L_BFu17ll { empty v1; long long v2; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_L_BFu1c { empty v1; long long v2; unsigned char v3:1; };
struct __attribute__((packed)) aSf_L_BFu1i { empty v1; long long v2; unsigned int v3:1; };
struct __attribute__((packed)) aSf_L_BFu1ll { empty v1; long long v2; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_L_BFu1s { empty v1; long long v2; unsigned short v3:1; };
struct __attribute__((packed)) aSf_L_BFu31i { empty v1; long long v2; unsigned int v3:31; };
struct __attribute__((packed)) aSf_L_BFu31ll { empty v1; long long v2; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_L_BFu32i { empty v1; long long v2; unsigned int v3:32; };
struct __attribute__((packed)) aSf_L_BFu32ll { empty v1; long long v2; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_L_BFu33 { empty v1; long long v2; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_L_BFu7c { empty v1; long long v2; unsigned char v3:7; };
struct __attribute__((packed)) aSf_L_BFu7i { empty v1; long long v2; unsigned int v3:7; };
struct __attribute__((packed)) aSf_L_BFu7ll { empty v1; long long v2; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_L_BFu7s { empty v1; long long v2; unsigned short v3:7; };
struct __attribute__((packed)) aSf_L_BFu8c { empty v1; long long v2; unsigned char v3:8; };
struct __attribute__((packed)) aSf_L_BFu8i { empty v1; long long v2; unsigned int v3:8; };
struct __attribute__((packed)) aSf_L_BFu8ll { empty v1; long long v2; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_L_BFu8s { empty v1; long long v2; unsigned short v3:8; };
struct __attribute__((packed)) aSf_L_BFu9i { empty v1; long long v2; unsigned int v3:9; };
struct __attribute__((packed)) aSf_L_BFu9ll { empty v1; long long v2; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_L_BFu9s { empty v1; long long v2; unsigned short v3:9; };
struct __attribute__((packed)) aSf_L_C { empty v1; long long v2; char v3; };
struct __attribute__((packed)) aSf_L_D { empty v1; long long v2; double v3; };
struct __attribute__((packed)) aSf_L_F { empty v1; long long v2; float v3; };
struct __attribute__((packed)) aSf_L_I { empty v1; long long v2; int v3; };
struct __attribute__((packed)) aSf_L_Ip { empty v1; long long v2; int * v3; };
struct __attribute__((packed)) aSf_L_L { empty v1; long long v2; long long v3; };
struct __attribute__((packed)) aSf_L_S { empty v1; long long v2; short v3; };
struct __attribute__((packed)) aSf_L_Sf { empty v1; long long v2; empty v3; };
struct __attribute__((packed)) aSf_L_Uc { empty v1; long long v2; unsigned char v3; };
struct __attribute__((packed)) aSf_L_Ui { empty v1; long long v2; unsigned int v3; };
struct __attribute__((packed)) aSf_L_Ul { empty v1; long long v2; unsigned long long v3; };
struct __attribute__((packed)) aSf_L_Us { empty v1; long long v2; unsigned short v3; };
struct __attribute__((packed)) aSf_L_Vp { empty v1; long long v2; void * v3; };
struct __attribute__((packed)) aSf_S { empty v1; short v2; };
struct __attribute__((packed)) aSf_S_BFu15i { empty v1; short v2; unsigned int v3:15; };
struct __attribute__((packed)) aSf_S_BFu15ll { empty v1; short v2; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_S_BFu15s { empty v1; short v2; unsigned short v3:15; };
struct __attribute__((packed)) aSf_S_BFu16i { empty v1; short v2; unsigned int v3:16; };
struct __attribute__((packed)) aSf_S_BFu16ll { empty v1; short v2; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_S_BFu16s { empty v1; short v2; unsigned short v3:16; };
struct __attribute__((packed)) aSf_S_BFu17i { empty v1; short v2; unsigned int v3:17; };
struct __attribute__((packed)) aSf_S_BFu17ll { empty v1; short v2; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_S_BFu1c { empty v1; short v2; unsigned char v3:1; };
struct __attribute__((packed)) aSf_S_BFu1i { empty v1; short v2; unsigned int v3:1; };
struct __attribute__((packed)) aSf_S_BFu1ll { empty v1; short v2; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_S_BFu1s { empty v1; short v2; unsigned short v3:1; };
struct __attribute__((packed)) aSf_S_BFu31i { empty v1; short v2; unsigned int v3:31; };
struct __attribute__((packed)) aSf_S_BFu31ll { empty v1; short v2; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_S_BFu32i { empty v1; short v2; unsigned int v3:32; };
struct __attribute__((packed)) aSf_S_BFu32ll { empty v1; short v2; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_S_BFu33 { empty v1; short v2; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_S_BFu7c { empty v1; short v2; unsigned char v3:7; };
struct __attribute__((packed)) aSf_S_BFu7i { empty v1; short v2; unsigned int v3:7; };
struct __attribute__((packed)) aSf_S_BFu7ll { empty v1; short v2; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_S_BFu7s { empty v1; short v2; unsigned short v3:7; };
struct __attribute__((packed)) aSf_S_BFu8c { empty v1; short v2; unsigned char v3:8; };
struct __attribute__((packed)) aSf_S_BFu8i { empty v1; short v2; unsigned int v3:8; };
struct __attribute__((packed)) aSf_S_BFu8ll { empty v1; short v2; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_S_BFu8s { empty v1; short v2; unsigned short v3:8; };
struct __attribute__((packed)) aSf_S_BFu9i { empty v1; short v2; unsigned int v3:9; };
struct __attribute__((packed)) aSf_S_BFu9ll { empty v1; short v2; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_S_BFu9s { empty v1; short v2; unsigned short v3:9; };
struct __attribute__((packed)) aSf_S_C { empty v1; short v2; char v3; };
struct __attribute__((packed)) aSf_S_D { empty v1; short v2; double v3; };
struct __attribute__((packed)) aSf_S_F { empty v1; short v2; float v3; };
struct __attribute__((packed)) aSf_S_I { empty v1; short v2; int v3; };
struct __attribute__((packed)) aSf_S_Ip { empty v1; short v2; int * v3; };
struct __attribute__((packed)) aSf_S_L { empty v1; short v2; long long v3; };
struct __attribute__((packed)) aSf_S_S { empty v1; short v2; short v3; };
struct __attribute__((packed)) aSf_S_Sf { empty v1; short v2; empty v3; };
struct __attribute__((packed)) aSf_S_Uc { empty v1; short v2; unsigned char v3; };
struct __attribute__((packed)) aSf_S_Ui { empty v1; short v2; unsigned int v3; };
struct __attribute__((packed)) aSf_S_Ul { empty v1; short v2; unsigned long long v3; };
struct __attribute__((packed)) aSf_S_Us { empty v1; short v2; unsigned short v3; };
struct __attribute__((packed)) aSf_S_Vp { empty v1; short v2; void * v3; };
struct __attribute__((packed)) aSf_Sf { empty v1; empty v2; };
struct __attribute__((packed)) aSf_Sf_BFu15i { empty v1; empty v2; unsigned int v3:15; };
struct __attribute__((packed)) aSf_Sf_BFu15ll { empty v1; empty v2; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_Sf_BFu15s { empty v1; empty v2; unsigned short v3:15; };
struct __attribute__((packed)) aSf_Sf_BFu16i { empty v1; empty v2; unsigned int v3:16; };
struct __attribute__((packed)) aSf_Sf_BFu16ll { empty v1; empty v2; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_Sf_BFu16s { empty v1; empty v2; unsigned short v3:16; };
struct __attribute__((packed)) aSf_Sf_BFu17i { empty v1; empty v2; unsigned int v3:17; };
struct __attribute__((packed)) aSf_Sf_BFu17ll { empty v1; empty v2; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_Sf_BFu1c { empty v1; empty v2; unsigned char v3:1; };
struct __attribute__((packed)) aSf_Sf_BFu1i { empty v1; empty v2; unsigned int v3:1; };
struct __attribute__((packed)) aSf_Sf_BFu1ll { empty v1; empty v2; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_Sf_BFu1s { empty v1; empty v2; unsigned short v3:1; };
struct __attribute__((packed)) aSf_Sf_BFu31i { empty v1; empty v2; unsigned int v3:31; };
struct __attribute__((packed)) aSf_Sf_BFu31ll { empty v1; empty v2; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_Sf_BFu32i { empty v1; empty v2; unsigned int v3:32; };
struct __attribute__((packed)) aSf_Sf_BFu32ll { empty v1; empty v2; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_Sf_BFu33 { empty v1; empty v2; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_Sf_BFu7c { empty v1; empty v2; unsigned char v3:7; };
struct __attribute__((packed)) aSf_Sf_BFu7i { empty v1; empty v2; unsigned int v3:7; };
struct __attribute__((packed)) aSf_Sf_BFu7ll { empty v1; empty v2; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_Sf_BFu7s { empty v1; empty v2; unsigned short v3:7; };
struct __attribute__((packed)) aSf_Sf_BFu8c { empty v1; empty v2; unsigned char v3:8; };
struct __attribute__((packed)) aSf_Sf_BFu8i { empty v1; empty v2; unsigned int v3:8; };
struct __attribute__((packed)) aSf_Sf_BFu8ll { empty v1; empty v2; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_Sf_BFu8s { empty v1; empty v2; unsigned short v3:8; };
struct __attribute__((packed)) aSf_Sf_BFu9i { empty v1; empty v2; unsigned int v3:9; };
struct __attribute__((packed)) aSf_Sf_BFu9ll { empty v1; empty v2; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_Sf_BFu9s { empty v1; empty v2; unsigned short v3:9; };
struct __attribute__((packed)) aSf_Sf_C { empty v1; empty v2; char v3; };
struct __attribute__((packed)) aSf_Sf_D { empty v1; empty v2; double v3; };
struct __attribute__((packed)) aSf_Sf_F { empty v1; empty v2; float v3; };
struct __attribute__((packed)) aSf_Sf_I { empty v1; empty v2; int v3; };
struct __attribute__((packed)) aSf_Sf_Ip { empty v1; empty v2; int * v3; };
struct __attribute__((packed)) aSf_Sf_L { empty v1; empty v2; long long v3; };
struct __attribute__((packed)) aSf_Sf_S { empty v1; empty v2; short v3; };
struct __attribute__((packed)) aSf_Sf_Sf { empty v1; empty v2; empty v3; };
struct __attribute__((packed)) aSf_Sf_Uc { empty v1; empty v2; unsigned char v3; };
struct __attribute__((packed)) aSf_Sf_Ui { empty v1; empty v2; unsigned int v3; };
struct __attribute__((packed)) aSf_Sf_Ul { empty v1; empty v2; unsigned long long v3; };
struct __attribute__((packed)) aSf_Sf_Us { empty v1; empty v2; unsigned short v3; };
struct __attribute__((packed)) aSf_Sf_Vp { empty v1; empty v2; void * v3; };
struct __attribute__((packed)) aSf_Uc { empty v1; unsigned char v2; };
struct __attribute__((packed)) aSf_Uc_BFu15i { empty v1; unsigned char v2; unsigned int v3:15; };
struct __attribute__((packed)) aSf_Uc_BFu15ll { empty v1; unsigned char v2; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_Uc_BFu15s { empty v1; unsigned char v2; unsigned short v3:15; };
struct __attribute__((packed)) aSf_Uc_BFu16i { empty v1; unsigned char v2; unsigned int v3:16; };
struct __attribute__((packed)) aSf_Uc_BFu16ll { empty v1; unsigned char v2; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_Uc_BFu16s { empty v1; unsigned char v2; unsigned short v3:16; };
struct __attribute__((packed)) aSf_Uc_BFu17i { empty v1; unsigned char v2; unsigned int v3:17; };
struct __attribute__((packed)) aSf_Uc_BFu17ll { empty v1; unsigned char v2; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_Uc_BFu1c { empty v1; unsigned char v2; unsigned char v3:1; };
struct __attribute__((packed)) aSf_Uc_BFu1i { empty v1; unsigned char v2; unsigned int v3:1; };
struct __attribute__((packed)) aSf_Uc_BFu1ll { empty v1; unsigned char v2; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_Uc_BFu1s { empty v1; unsigned char v2; unsigned short v3:1; };
struct __attribute__((packed)) aSf_Uc_BFu31i { empty v1; unsigned char v2; unsigned int v3:31; };
struct __attribute__((packed)) aSf_Uc_BFu31ll { empty v1; unsigned char v2; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_Uc_BFu32i { empty v1; unsigned char v2; unsigned int v3:32; };
struct __attribute__((packed)) aSf_Uc_BFu32ll { empty v1; unsigned char v2; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_Uc_BFu33 { empty v1; unsigned char v2; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_Uc_BFu7c { empty v1; unsigned char v2; unsigned char v3:7; };
struct __attribute__((packed)) aSf_Uc_BFu7i { empty v1; unsigned char v2; unsigned int v3:7; };
struct __attribute__((packed)) aSf_Uc_BFu7ll { empty v1; unsigned char v2; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_Uc_BFu7s { empty v1; unsigned char v2; unsigned short v3:7; };
struct __attribute__((packed)) aSf_Uc_BFu8c { empty v1; unsigned char v2; unsigned char v3:8; };
struct __attribute__((packed)) aSf_Uc_BFu8i { empty v1; unsigned char v2; unsigned int v3:8; };
struct __attribute__((packed)) aSf_Uc_BFu8ll { empty v1; unsigned char v2; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_Uc_BFu8s { empty v1; unsigned char v2; unsigned short v3:8; };
struct __attribute__((packed)) aSf_Uc_BFu9i { empty v1; unsigned char v2; unsigned int v3:9; };
struct __attribute__((packed)) aSf_Uc_BFu9ll { empty v1; unsigned char v2; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_Uc_BFu9s { empty v1; unsigned char v2; unsigned short v3:9; };
struct __attribute__((packed)) aSf_Uc_C { empty v1; unsigned char v2; char v3; };
struct __attribute__((packed)) aSf_Uc_D { empty v1; unsigned char v2; double v3; };
struct __attribute__((packed)) aSf_Uc_F { empty v1; unsigned char v2; float v3; };
struct __attribute__((packed)) aSf_Uc_I { empty v1; unsigned char v2; int v3; };
struct __attribute__((packed)) aSf_Uc_Ip { empty v1; unsigned char v2; int * v3; };
struct __attribute__((packed)) aSf_Uc_L { empty v1; unsigned char v2; long long v3; };
struct __attribute__((packed)) aSf_Uc_S { empty v1; unsigned char v2; short v3; };
struct __attribute__((packed)) aSf_Uc_Sf { empty v1; unsigned char v2; empty v3; };
struct __attribute__((packed)) aSf_Uc_Uc { empty v1; unsigned char v2; unsigned char v3; };
struct __attribute__((packed)) aSf_Uc_Ui { empty v1; unsigned char v2; unsigned int v3; };
struct __attribute__((packed)) aSf_Uc_Ul { empty v1; unsigned char v2; unsigned long long v3; };
struct __attribute__((packed)) aSf_Uc_Us { empty v1; unsigned char v2; unsigned short v3; };
struct __attribute__((packed)) aSf_Uc_Vp { empty v1; unsigned char v2; void * v3; };
struct __attribute__((packed)) aSf_Ui { empty v1; unsigned int v2; };
struct __attribute__((packed)) aSf_Ui_BFu15i { empty v1; unsigned int v2; unsigned int v3:15; };
struct __attribute__((packed)) aSf_Ui_BFu15ll { empty v1; unsigned int v2; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_Ui_BFu15s { empty v1; unsigned int v2; unsigned short v3:15; };
struct __attribute__((packed)) aSf_Ui_BFu16i { empty v1; unsigned int v2; unsigned int v3:16; };
struct __attribute__((packed)) aSf_Ui_BFu16ll { empty v1; unsigned int v2; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_Ui_BFu16s { empty v1; unsigned int v2; unsigned short v3:16; };
struct __attribute__((packed)) aSf_Ui_BFu17i { empty v1; unsigned int v2; unsigned int v3:17; };
struct __attribute__((packed)) aSf_Ui_BFu17ll { empty v1; unsigned int v2; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_Ui_BFu1c { empty v1; unsigned int v2; unsigned char v3:1; };
struct __attribute__((packed)) aSf_Ui_BFu1i { empty v1; unsigned int v2; unsigned int v3:1; };
struct __attribute__((packed)) aSf_Ui_BFu1ll { empty v1; unsigned int v2; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_Ui_BFu1s { empty v1; unsigned int v2; unsigned short v3:1; };
struct __attribute__((packed)) aSf_Ui_BFu31i { empty v1; unsigned int v2; unsigned int v3:31; };
struct __attribute__((packed)) aSf_Ui_BFu31ll { empty v1; unsigned int v2; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_Ui_BFu32i { empty v1; unsigned int v2; unsigned int v3:32; };
struct __attribute__((packed)) aSf_Ui_BFu32ll { empty v1; unsigned int v2; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_Ui_BFu33 { empty v1; unsigned int v2; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_Ui_BFu7c { empty v1; unsigned int v2; unsigned char v3:7; };
struct __attribute__((packed)) aSf_Ui_BFu7i { empty v1; unsigned int v2; unsigned int v3:7; };
struct __attribute__((packed)) aSf_Ui_BFu7ll { empty v1; unsigned int v2; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_Ui_BFu7s { empty v1; unsigned int v2; unsigned short v3:7; };
struct __attribute__((packed)) aSf_Ui_BFu8c { empty v1; unsigned int v2; unsigned char v3:8; };
struct __attribute__((packed)) aSf_Ui_BFu8i { empty v1; unsigned int v2; unsigned int v3:8; };
struct __attribute__((packed)) aSf_Ui_BFu8ll { empty v1; unsigned int v2; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_Ui_BFu8s { empty v1; unsigned int v2; unsigned short v3:8; };
struct __attribute__((packed)) aSf_Ui_BFu9i { empty v1; unsigned int v2; unsigned int v3:9; };
struct __attribute__((packed)) aSf_Ui_BFu9ll { empty v1; unsigned int v2; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_Ui_BFu9s { empty v1; unsigned int v2; unsigned short v3:9; };
struct __attribute__((packed)) aSf_Ui_C { empty v1; unsigned int v2; char v3; };
struct __attribute__((packed)) aSf_Ui_D { empty v1; unsigned int v2; double v3; };
struct __attribute__((packed)) aSf_Ui_F { empty v1; unsigned int v2; float v3; };
struct __attribute__((packed)) aSf_Ui_I { empty v1; unsigned int v2; int v3; };
struct __attribute__((packed)) aSf_Ui_Ip { empty v1; unsigned int v2; int * v3; };
struct __attribute__((packed)) aSf_Ui_L { empty v1; unsigned int v2; long long v3; };
struct __attribute__((packed)) aSf_Ui_S { empty v1; unsigned int v2; short v3; };
struct __attribute__((packed)) aSf_Ui_Sf { empty v1; unsigned int v2; empty v3; };
struct __attribute__((packed)) aSf_Ui_Uc { empty v1; unsigned int v2; unsigned char v3; };
struct __attribute__((packed)) aSf_Ui_Ui { empty v1; unsigned int v2; unsigned int v3; };
struct __attribute__((packed)) aSf_Ui_Ul { empty v1; unsigned int v2; unsigned long long v3; };
struct __attribute__((packed)) aSf_Ui_Us { empty v1; unsigned int v2; unsigned short v3; };
struct __attribute__((packed)) aSf_Ui_Vp { empty v1; unsigned int v2; void * v3; };
struct __attribute__((packed)) aSf_Ul { empty v1; unsigned long long v2; };
struct __attribute__((packed)) aSf_Ul_BFu15i { empty v1; unsigned long long v2; unsigned int v3:15; };
struct __attribute__((packed)) aSf_Ul_BFu15ll { empty v1; unsigned long long v2; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_Ul_BFu15s { empty v1; unsigned long long v2; unsigned short v3:15; };
struct __attribute__((packed)) aSf_Ul_BFu16i { empty v1; unsigned long long v2; unsigned int v3:16; };
struct __attribute__((packed)) aSf_Ul_BFu16ll { empty v1; unsigned long long v2; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_Ul_BFu16s { empty v1; unsigned long long v2; unsigned short v3:16; };
struct __attribute__((packed)) aSf_Ul_BFu17i { empty v1; unsigned long long v2; unsigned int v3:17; };
struct __attribute__((packed)) aSf_Ul_BFu17ll { empty v1; unsigned long long v2; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_Ul_BFu1c { empty v1; unsigned long long v2; unsigned char v3:1; };
struct __attribute__((packed)) aSf_Ul_BFu1i { empty v1; unsigned long long v2; unsigned int v3:1; };
struct __attribute__((packed)) aSf_Ul_BFu1ll { empty v1; unsigned long long v2; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_Ul_BFu1s { empty v1; unsigned long long v2; unsigned short v3:1; };
struct __attribute__((packed)) aSf_Ul_BFu31i { empty v1; unsigned long long v2; unsigned int v3:31; };
struct __attribute__((packed)) aSf_Ul_BFu31ll { empty v1; unsigned long long v2; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_Ul_BFu32i { empty v1; unsigned long long v2; unsigned int v3:32; };
struct __attribute__((packed)) aSf_Ul_BFu32ll { empty v1; unsigned long long v2; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_Ul_BFu33 { empty v1; unsigned long long v2; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_Ul_BFu7c { empty v1; unsigned long long v2; unsigned char v3:7; };
struct __attribute__((packed)) aSf_Ul_BFu7i { empty v1; unsigned long long v2; unsigned int v3:7; };
struct __attribute__((packed)) aSf_Ul_BFu7ll { empty v1; unsigned long long v2; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_Ul_BFu7s { empty v1; unsigned long long v2; unsigned short v3:7; };
struct __attribute__((packed)) aSf_Ul_BFu8c { empty v1; unsigned long long v2; unsigned char v3:8; };
struct __attribute__((packed)) aSf_Ul_BFu8i { empty v1; unsigned long long v2; unsigned int v3:8; };
struct __attribute__((packed)) aSf_Ul_BFu8ll { empty v1; unsigned long long v2; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_Ul_BFu8s { empty v1; unsigned long long v2; unsigned short v3:8; };
struct __attribute__((packed)) aSf_Ul_BFu9i { empty v1; unsigned long long v2; unsigned int v3:9; };
struct __attribute__((packed)) aSf_Ul_BFu9ll { empty v1; unsigned long long v2; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_Ul_BFu9s { empty v1; unsigned long long v2; unsigned short v3:9; };
struct __attribute__((packed)) aSf_Ul_C { empty v1; unsigned long long v2; char v3; };
struct __attribute__((packed)) aSf_Ul_D { empty v1; unsigned long long v2; double v3; };
struct __attribute__((packed)) aSf_Ul_F { empty v1; unsigned long long v2; float v3; };
struct __attribute__((packed)) aSf_Ul_I { empty v1; unsigned long long v2; int v3; };
struct __attribute__((packed)) aSf_Ul_Ip { empty v1; unsigned long long v2; int * v3; };
struct __attribute__((packed)) aSf_Ul_L { empty v1; unsigned long long v2; long long v3; };
struct __attribute__((packed)) aSf_Ul_S { empty v1; unsigned long long v2; short v3; };
struct __attribute__((packed)) aSf_Ul_Sf { empty v1; unsigned long long v2; empty v3; };
struct __attribute__((packed)) aSf_Ul_Uc { empty v1; unsigned long long v2; unsigned char v3; };
struct __attribute__((packed)) aSf_Ul_Ui { empty v1; unsigned long long v2; unsigned int v3; };
struct __attribute__((packed)) aSf_Ul_Ul { empty v1; unsigned long long v2; unsigned long long v3; };
struct __attribute__((packed)) aSf_Ul_Us { empty v1; unsigned long long v2; unsigned short v3; };
struct __attribute__((packed)) aSf_Ul_Vp { empty v1; unsigned long long v2; void * v3; };
struct __attribute__((packed)) aSf_Us { empty v1; unsigned short v2; };
struct __attribute__((packed)) aSf_Us_BFu15i { empty v1; unsigned short v2; unsigned int v3:15; };
struct __attribute__((packed)) aSf_Us_BFu15ll { empty v1; unsigned short v2; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_Us_BFu15s { empty v1; unsigned short v2; unsigned short v3:15; };
struct __attribute__((packed)) aSf_Us_BFu16i { empty v1; unsigned short v2; unsigned int v3:16; };
struct __attribute__((packed)) aSf_Us_BFu16ll { empty v1; unsigned short v2; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_Us_BFu16s { empty v1; unsigned short v2; unsigned short v3:16; };
struct __attribute__((packed)) aSf_Us_BFu17i { empty v1; unsigned short v2; unsigned int v3:17; };
struct __attribute__((packed)) aSf_Us_BFu17ll { empty v1; unsigned short v2; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_Us_BFu1c { empty v1; unsigned short v2; unsigned char v3:1; };
struct __attribute__((packed)) aSf_Us_BFu1i { empty v1; unsigned short v2; unsigned int v3:1; };
struct __attribute__((packed)) aSf_Us_BFu1ll { empty v1; unsigned short v2; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_Us_BFu1s { empty v1; unsigned short v2; unsigned short v3:1; };
struct __attribute__((packed)) aSf_Us_BFu31i { empty v1; unsigned short v2; unsigned int v3:31; };
struct __attribute__((packed)) aSf_Us_BFu31ll { empty v1; unsigned short v2; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_Us_BFu32i { empty v1; unsigned short v2; unsigned int v3:32; };
struct __attribute__((packed)) aSf_Us_BFu32ll { empty v1; unsigned short v2; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_Us_BFu33 { empty v1; unsigned short v2; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_Us_BFu7c { empty v1; unsigned short v2; unsigned char v3:7; };
struct __attribute__((packed)) aSf_Us_BFu7i { empty v1; unsigned short v2; unsigned int v3:7; };
struct __attribute__((packed)) aSf_Us_BFu7ll { empty v1; unsigned short v2; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_Us_BFu7s { empty v1; unsigned short v2; unsigned short v3:7; };
struct __attribute__((packed)) aSf_Us_BFu8c { empty v1; unsigned short v2; unsigned char v3:8; };
struct __attribute__((packed)) aSf_Us_BFu8i { empty v1; unsigned short v2; unsigned int v3:8; };
struct __attribute__((packed)) aSf_Us_BFu8ll { empty v1; unsigned short v2; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_Us_BFu8s { empty v1; unsigned short v2; unsigned short v3:8; };
struct __attribute__((packed)) aSf_Us_BFu9i { empty v1; unsigned short v2; unsigned int v3:9; };
struct __attribute__((packed)) aSf_Us_BFu9ll { empty v1; unsigned short v2; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_Us_BFu9s { empty v1; unsigned short v2; unsigned short v3:9; };
struct __attribute__((packed)) aSf_Us_C { empty v1; unsigned short v2; char v3; };
struct __attribute__((packed)) aSf_Us_D { empty v1; unsigned short v2; double v3; };
struct __attribute__((packed)) aSf_Us_F { empty v1; unsigned short v2; float v3; };
struct __attribute__((packed)) aSf_Us_I { empty v1; unsigned short v2; int v3; };
struct __attribute__((packed)) aSf_Us_Ip { empty v1; unsigned short v2; int * v3; };
struct __attribute__((packed)) aSf_Us_L { empty v1; unsigned short v2; long long v3; };
struct __attribute__((packed)) aSf_Us_S { empty v1; unsigned short v2; short v3; };
struct __attribute__((packed)) aSf_Us_Sf { empty v1; unsigned short v2; empty v3; };
struct __attribute__((packed)) aSf_Us_Uc { empty v1; unsigned short v2; unsigned char v3; };
struct __attribute__((packed)) aSf_Us_Ui { empty v1; unsigned short v2; unsigned int v3; };
struct __attribute__((packed)) aSf_Us_Ul { empty v1; unsigned short v2; unsigned long long v3; };
struct __attribute__((packed)) aSf_Us_Us { empty v1; unsigned short v2; unsigned short v3; };
struct __attribute__((packed)) aSf_Us_Vp { empty v1; unsigned short v2; void * v3; };
struct __attribute__((packed)) aSf_Vp { empty v1; void * v2; };
struct __attribute__((packed)) aSf_Vp_BFu15i { empty v1; void * v2; unsigned int v3:15; };
struct __attribute__((packed)) aSf_Vp_BFu15ll { empty v1; void * v2; unsigned long long v3:15; };
struct __attribute__((packed)) aSf_Vp_BFu15s { empty v1; void * v2; unsigned short v3:15; };
struct __attribute__((packed)) aSf_Vp_BFu16i { empty v1; void * v2; unsigned int v3:16; };
struct __attribute__((packed)) aSf_Vp_BFu16ll { empty v1; void * v2; unsigned long long v3:16; };
struct __attribute__((packed)) aSf_Vp_BFu16s { empty v1; void * v2; unsigned short v3:16; };
struct __attribute__((packed)) aSf_Vp_BFu17i { empty v1; void * v2; unsigned int v3:17; };
struct __attribute__((packed)) aSf_Vp_BFu17ll { empty v1; void * v2; unsigned long long v3:17; };
struct __attribute__((packed)) aSf_Vp_BFu1c { empty v1; void * v2; unsigned char v3:1; };
struct __attribute__((packed)) aSf_Vp_BFu1i { empty v1; void * v2; unsigned int v3:1; };
struct __attribute__((packed)) aSf_Vp_BFu1ll { empty v1; void * v2; unsigned long long v3:1; };
struct __attribute__((packed)) aSf_Vp_BFu1s { empty v1; void * v2; unsigned short v3:1; };
struct __attribute__((packed)) aSf_Vp_BFu31i { empty v1; void * v2; unsigned int v3:31; };
struct __attribute__((packed)) aSf_Vp_BFu31ll { empty v1; void * v2; unsigned long long v3:31; };
struct __attribute__((packed)) aSf_Vp_BFu32i { empty v1; void * v2; unsigned int v3:32; };
struct __attribute__((packed)) aSf_Vp_BFu32ll { empty v1; void * v2; unsigned long long v3:32; };
struct __attribute__((packed)) aSf_Vp_BFu33 { empty v1; void * v2; unsigned long long v3:33; };
struct __attribute__((packed)) aSf_Vp_BFu7c { empty v1; void * v2; unsigned char v3:7; };
struct __attribute__((packed)) aSf_Vp_BFu7i { empty v1; void * v2; unsigned int v3:7; };
struct __attribute__((packed)) aSf_Vp_BFu7ll { empty v1; void * v2; unsigned long long v3:7; };
struct __attribute__((packed)) aSf_Vp_BFu7s { empty v1; void * v2; unsigned short v3:7; };
struct __attribute__((packed)) aSf_Vp_BFu8c { empty v1; void * v2; unsigned char v3:8; };
struct __attribute__((packed)) aSf_Vp_BFu8i { empty v1; void * v2; unsigned int v3:8; };
struct __attribute__((packed)) aSf_Vp_BFu8ll { empty v1; void * v2; unsigned long long v3:8; };
struct __attribute__((packed)) aSf_Vp_BFu8s { empty v1; void * v2; unsigned short v3:8; };
struct __attribute__((packed)) aSf_Vp_BFu9i { empty v1; void * v2; unsigned int v3:9; };
struct __attribute__((packed)) aSf_Vp_BFu9ll { empty v1; void * v2; unsigned long long v3:9; };
struct __attribute__((packed)) aSf_Vp_BFu9s { empty v1; void * v2; unsigned short v3:9; };
struct __attribute__((packed)) aSf_Vp_C { empty v1; void * v2; char v3; };
struct __attribute__((packed)) aSf_Vp_D { empty v1; void * v2; double v3; };
struct __attribute__((packed)) aSf_Vp_F { empty v1; void * v2; float v3; };
struct __attribute__((packed)) aSf_Vp_I { empty v1; void * v2; int v3; };
struct __attribute__((packed)) aSf_Vp_Ip { empty v1; void * v2; int * v3; };
struct __attribute__((packed)) aSf_Vp_L { empty v1; void * v2; long long v3; };
struct __attribute__((packed)) aSf_Vp_S { empty v1; void * v2; short v3; };
struct __attribute__((packed)) aSf_Vp_Sf { empty v1; void * v2; empty v3; };
struct __attribute__((packed)) aSf_Vp_Uc { empty v1; void * v2; unsigned char v3; };
struct __attribute__((packed)) aSf_Vp_Ui { empty v1; void * v2; unsigned int v3; };
struct __attribute__((packed)) aSf_Vp_Ul { empty v1; void * v2; unsigned long long v3; };
struct __attribute__((packed)) aSf_Vp_Us { empty v1; void * v2; unsigned short v3; };
struct __attribute__((packed)) aSf_Vp_Vp { empty v1; void * v2; void * v3; };
struct __attribute__((packed)) aUc_BFu15i_Sf { unsigned char v1; unsigned int v2:15; empty v3; };
struct __attribute__((packed)) aUc_BFu15ll_Sf { unsigned char v1; unsigned long long v2:15; empty v3; };
struct __attribute__((packed)) aUc_BFu15s_Sf { unsigned char v1; unsigned short v2:15; empty v3; };
struct __attribute__((packed)) aUc_BFu16i_Sf { unsigned char v1; unsigned int v2:16; empty v3; };
struct __attribute__((packed)) aUc_BFu16ll_Sf { unsigned char v1; unsigned long long v2:16; empty v3; };
struct __attribute__((packed)) aUc_BFu16s_Sf { unsigned char v1; unsigned short v2:16; empty v3; };
struct __attribute__((packed)) aUc_BFu17i_Sf { unsigned char v1; unsigned int v2:17; empty v3; };
struct __attribute__((packed)) aUc_BFu17ll_Sf { unsigned char v1; unsigned long long v2:17; empty v3; };
struct __attribute__((packed)) aUc_BFu1c_Sf { unsigned char v1; unsigned char v2:1; empty v3; };
struct __attribute__((packed)) aUc_BFu1i_Sf { unsigned char v1; unsigned int v2:1; empty v3; };
struct __attribute__((packed)) aUc_BFu1ll_Sf { unsigned char v1; unsigned long long v2:1; empty v3; };
struct __attribute__((packed)) aUc_BFu1s_Sf { unsigned char v1; unsigned short v2:1; empty v3; };
struct __attribute__((packed)) aUc_BFu31i_Sf { unsigned char v1; unsigned int v2:31; empty v3; };
struct __attribute__((packed)) aUc_BFu31ll_Sf { unsigned char v1; unsigned long long v2:31; empty v3; };
struct __attribute__((packed)) aUc_BFu32i_Sf { unsigned char v1; unsigned int v2:32; empty v3; };
struct __attribute__((packed)) aUc_BFu32ll_Sf { unsigned char v1; unsigned long long v2:32; empty v3; };
struct __attribute__((packed)) aUc_BFu33_Sf { unsigned char v1; unsigned long long v2:33; empty v3; };
struct __attribute__((packed)) aUc_BFu7c_Sf { unsigned char v1; unsigned char v2:7; empty v3; };
struct __attribute__((packed)) aUc_BFu7i_Sf { unsigned char v1; unsigned int v2:7; empty v3; };
struct __attribute__((packed)) aUc_BFu7ll_Sf { unsigned char v1; unsigned long long v2:7; empty v3; };
struct __attribute__((packed)) aUc_BFu7s_Sf { unsigned char v1; unsigned short v2:7; empty v3; };
struct __attribute__((packed)) aUc_BFu8c_Sf { unsigned char v1; unsigned char v2:8; empty v3; };
struct __attribute__((packed)) aUc_BFu8i_Sf { unsigned char v1; unsigned int v2:8; empty v3; };
struct __attribute__((packed)) aUc_BFu8ll_Sf { unsigned char v1; unsigned long long v2:8; empty v3; };
struct __attribute__((packed)) aUc_BFu8s_Sf { unsigned char v1; unsigned short v2:8; empty v3; };
struct __attribute__((packed)) aUc_BFu9i_Sf { unsigned char v1; unsigned int v2:9; empty v3; };
struct __attribute__((packed)) aUc_BFu9ll_Sf { unsigned char v1; unsigned long long v2:9; empty v3; };
struct __attribute__((packed)) aUc_BFu9s_Sf { unsigned char v1; unsigned short v2:9; empty v3; };
struct __attribute__((packed)) aUc_C_Sf { unsigned char v1; char v2; empty v3; };
struct __attribute__((packed)) aUc_D_Sf { unsigned char v1; double v2; empty v3; };
struct __attribute__((packed)) aUc_F_Sf { unsigned char v1; float v2; empty v3; };
struct __attribute__((packed)) aUc_I_Sf { unsigned char v1; int v2; empty v3; };
struct __attribute__((packed)) aUc_Ip_Sf { unsigned char v1; int * v2; empty v3; };
struct __attribute__((packed)) aUc_L_Sf { unsigned char v1; long long v2; empty v3; };
struct __attribute__((packed)) aUc_S_Sf { unsigned char v1; short v2; empty v3; };
struct __attribute__((packed)) aUc_Sf { unsigned char v1; empty v2; };
struct __attribute__((packed)) aUc_Sf_BFu15i { unsigned char v1; empty v2; unsigned int v3:15; };
struct __attribute__((packed)) aUc_Sf_BFu15ll { unsigned char v1; empty v2; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_Sf_BFu15s { unsigned char v1; empty v2; unsigned short v3:15; };
struct __attribute__((packed)) aUc_Sf_BFu16i { unsigned char v1; empty v2; unsigned int v3:16; };
struct __attribute__((packed)) aUc_Sf_BFu16ll { unsigned char v1; empty v2; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_Sf_BFu16s { unsigned char v1; empty v2; unsigned short v3:16; };
struct __attribute__((packed)) aUc_Sf_BFu17i { unsigned char v1; empty v2; unsigned int v3:17; };
struct __attribute__((packed)) aUc_Sf_BFu17ll { unsigned char v1; empty v2; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_Sf_BFu1c { unsigned char v1; empty v2; unsigned char v3:1; };
struct __attribute__((packed)) aUc_Sf_BFu1i { unsigned char v1; empty v2; unsigned int v3:1; };
struct __attribute__((packed)) aUc_Sf_BFu1ll { unsigned char v1; empty v2; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_Sf_BFu1s { unsigned char v1; empty v2; unsigned short v3:1; };
struct __attribute__((packed)) aUc_Sf_BFu31i { unsigned char v1; empty v2; unsigned int v3:31; };
struct __attribute__((packed)) aUc_Sf_BFu31ll { unsigned char v1; empty v2; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_Sf_BFu32i { unsigned char v1; empty v2; unsigned int v3:32; };
struct __attribute__((packed)) aUc_Sf_BFu32ll { unsigned char v1; empty v2; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_Sf_BFu33 { unsigned char v1; empty v2; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_Sf_BFu7c { unsigned char v1; empty v2; unsigned char v3:7; };
struct __attribute__((packed)) aUc_Sf_BFu7i { unsigned char v1; empty v2; unsigned int v3:7; };
struct __attribute__((packed)) aUc_Sf_BFu7ll { unsigned char v1; empty v2; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_Sf_BFu7s { unsigned char v1; empty v2; unsigned short v3:7; };
struct __attribute__((packed)) aUc_Sf_BFu8c { unsigned char v1; empty v2; unsigned char v3:8; };
struct __attribute__((packed)) aUc_Sf_BFu8i { unsigned char v1; empty v2; unsigned int v3:8; };
struct __attribute__((packed)) aUc_Sf_BFu8ll { unsigned char v1; empty v2; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_Sf_BFu8s { unsigned char v1; empty v2; unsigned short v3:8; };
struct __attribute__((packed)) aUc_Sf_BFu9i { unsigned char v1; empty v2; unsigned int v3:9; };
struct __attribute__((packed)) aUc_Sf_BFu9ll { unsigned char v1; empty v2; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_Sf_BFu9s { unsigned char v1; empty v2; unsigned short v3:9; };
struct __attribute__((packed)) aUc_Sf_C { unsigned char v1; empty v2; char v3; };
struct __attribute__((packed)) aUc_Sf_D { unsigned char v1; empty v2; double v3; };
struct __attribute__((packed)) aUc_Sf_F { unsigned char v1; empty v2; float v3; };
struct __attribute__((packed)) aUc_Sf_I { unsigned char v1; empty v2; int v3; };
struct __attribute__((packed)) aUc_Sf_Ip { unsigned char v1; empty v2; int * v3; };
struct __attribute__((packed)) aUc_Sf_L { unsigned char v1; empty v2; long long v3; };
struct __attribute__((packed)) aUc_Sf_S { unsigned char v1; empty v2; short v3; };
struct __attribute__((packed)) aUc_Sf_Sf { unsigned char v1; empty v2; empty v3; };
struct __attribute__((packed)) aUc_Sf_Uc { unsigned char v1; empty v2; unsigned char v3; };
struct __attribute__((packed)) aUc_Sf_Ui { unsigned char v1; empty v2; unsigned int v3; };
struct __attribute__((packed)) aUc_Sf_Ul { unsigned char v1; empty v2; unsigned long long v3; };
struct __attribute__((packed)) aUc_Sf_Us { unsigned char v1; empty v2; unsigned short v3; };
struct __attribute__((packed)) aUc_Sf_Vp { unsigned char v1; empty v2; void * v3; };
struct __attribute__((packed)) aUc_Uc_Sf { unsigned char v1; unsigned char v2; empty v3; };
struct __attribute__((packed)) aUc_Ui_Sf { unsigned char v1; unsigned int v2; empty v3; };
struct __attribute__((packed)) aUc_Ul_Sf { unsigned char v1; unsigned long long v2; empty v3; };
struct __attribute__((packed)) aUc_Us_Sf { unsigned char v1; unsigned short v2; empty v3; };
struct __attribute__((packed)) aUc_Vp_Sf { unsigned char v1; void * v2; empty v3; };
struct __attribute__((packed)) aUi_BFu15i_Sf { unsigned int v1; unsigned int v2:15; empty v3; };
struct __attribute__((packed)) aUi_BFu15ll_Sf { unsigned int v1; unsigned long long v2:15; empty v3; };
struct __attribute__((packed)) aUi_BFu15s_Sf { unsigned int v1; unsigned short v2:15; empty v3; };
struct __attribute__((packed)) aUi_BFu16i_Sf { unsigned int v1; unsigned int v2:16; empty v3; };
struct __attribute__((packed)) aUi_BFu16ll_Sf { unsigned int v1; unsigned long long v2:16; empty v3; };
struct __attribute__((packed)) aUi_BFu16s_Sf { unsigned int v1; unsigned short v2:16; empty v3; };
struct __attribute__((packed)) aUi_BFu17i_Sf { unsigned int v1; unsigned int v2:17; empty v3; };
struct __attribute__((packed)) aUi_BFu17ll_Sf { unsigned int v1; unsigned long long v2:17; empty v3; };
struct __attribute__((packed)) aUi_BFu1c_Sf { unsigned int v1; unsigned char v2:1; empty v3; };
struct __attribute__((packed)) aUi_BFu1i_Sf { unsigned int v1; unsigned int v2:1; empty v3; };
struct __attribute__((packed)) aUi_BFu1ll_Sf { unsigned int v1; unsigned long long v2:1; empty v3; };
struct __attribute__((packed)) aUi_BFu1s_Sf { unsigned int v1; unsigned short v2:1; empty v3; };
struct __attribute__((packed)) aUi_BFu31i_Sf { unsigned int v1; unsigned int v2:31; empty v3; };
struct __attribute__((packed)) aUi_BFu31ll_Sf { unsigned int v1; unsigned long long v2:31; empty v3; };
struct __attribute__((packed)) aUi_BFu32i_Sf { unsigned int v1; unsigned int v2:32; empty v3; };
struct __attribute__((packed)) aUi_BFu32ll_Sf { unsigned int v1; unsigned long long v2:32; empty v3; };
struct __attribute__((packed)) aUi_BFu33_Sf { unsigned int v1; unsigned long long v2:33; empty v3; };
struct __attribute__((packed)) aUi_BFu7c_Sf { unsigned int v1; unsigned char v2:7; empty v3; };
struct __attribute__((packed)) aUi_BFu7i_Sf { unsigned int v1; unsigned int v2:7; empty v3; };
struct __attribute__((packed)) aUi_BFu7ll_Sf { unsigned int v1; unsigned long long v2:7; empty v3; };
struct __attribute__((packed)) aUi_BFu7s_Sf { unsigned int v1; unsigned short v2:7; empty v3; };
struct __attribute__((packed)) aUi_BFu8c_Sf { unsigned int v1; unsigned char v2:8; empty v3; };
struct __attribute__((packed)) aUi_BFu8i_Sf { unsigned int v1; unsigned int v2:8; empty v3; };
struct __attribute__((packed)) aUi_BFu8ll_Sf { unsigned int v1; unsigned long long v2:8; empty v3; };
struct __attribute__((packed)) aUi_BFu8s_Sf { unsigned int v1; unsigned short v2:8; empty v3; };
struct __attribute__((packed)) aUi_BFu9i_Sf { unsigned int v1; unsigned int v2:9; empty v3; };
struct __attribute__((packed)) aUi_BFu9ll_Sf { unsigned int v1; unsigned long long v2:9; empty v3; };
struct __attribute__((packed)) aUi_BFu9s_Sf { unsigned int v1; unsigned short v2:9; empty v3; };
struct __attribute__((packed)) aUi_C_Sf { unsigned int v1; char v2; empty v3; };
struct __attribute__((packed)) aUi_D_Sf { unsigned int v1; double v2; empty v3; };
struct __attribute__((packed)) aUi_F_Sf { unsigned int v1; float v2; empty v3; };
struct __attribute__((packed)) aUi_I_Sf { unsigned int v1; int v2; empty v3; };
struct __attribute__((packed)) aUi_Ip_Sf { unsigned int v1; int * v2; empty v3; };
struct __attribute__((packed)) aUi_L_Sf { unsigned int v1; long long v2; empty v3; };
struct __attribute__((packed)) aUi_S_Sf { unsigned int v1; short v2; empty v3; };
struct __attribute__((packed)) aUi_Sf { unsigned int v1; empty v2; };
struct __attribute__((packed)) aUi_Sf_BFu15i { unsigned int v1; empty v2; unsigned int v3:15; };
struct __attribute__((packed)) aUi_Sf_BFu15ll { unsigned int v1; empty v2; unsigned long long v3:15; };
struct __attribute__((packed)) aUi_Sf_BFu15s { unsigned int v1; empty v2; unsigned short v3:15; };
struct __attribute__((packed)) aUi_Sf_BFu16i { unsigned int v1; empty v2; unsigned int v3:16; };
struct __attribute__((packed)) aUi_Sf_BFu16ll { unsigned int v1; empty v2; unsigned long long v3:16; };
struct __attribute__((packed)) aUi_Sf_BFu16s { unsigned int v1; empty v2; unsigned short v3:16; };
struct __attribute__((packed)) aUi_Sf_BFu17i { unsigned int v1; empty v2; unsigned int v3:17; };
struct __attribute__((packed)) aUi_Sf_BFu17ll { unsigned int v1; empty v2; unsigned long long v3:17; };
struct __attribute__((packed)) aUi_Sf_BFu1c { unsigned int v1; empty v2; unsigned char v3:1; };
struct __attribute__((packed)) aUi_Sf_BFu1i { unsigned int v1; empty v2; unsigned int v3:1; };
struct __attribute__((packed)) aUi_Sf_BFu1ll { unsigned int v1; empty v2; unsigned long long v3:1; };
struct __attribute__((packed)) aUi_Sf_BFu1s { unsigned int v1; empty v2; unsigned short v3:1; };
struct __attribute__((packed)) aUi_Sf_BFu31i { unsigned int v1; empty v2; unsigned int v3:31; };
struct __attribute__((packed)) aUi_Sf_BFu31ll { unsigned int v1; empty v2; unsigned long long v3:31; };
struct __attribute__((packed)) aUi_Sf_BFu32i { unsigned int v1; empty v2; unsigned int v3:32; };
struct __attribute__((packed)) aUi_Sf_BFu32ll { unsigned int v1; empty v2; unsigned long long v3:32; };
struct __attribute__((packed)) aUi_Sf_BFu33 { unsigned int v1; empty v2; unsigned long long v3:33; };
struct __attribute__((packed)) aUi_Sf_BFu7c { unsigned int v1; empty v2; unsigned char v3:7; };
struct __attribute__((packed)) aUi_Sf_BFu7i { unsigned int v1; empty v2; unsigned int v3:7; };
struct __attribute__((packed)) aUi_Sf_BFu7ll { unsigned int v1; empty v2; unsigned long long v3:7; };
struct __attribute__((packed)) aUi_Sf_BFu7s { unsigned int v1; empty v2; unsigned short v3:7; };
struct __attribute__((packed)) aUi_Sf_BFu8c { unsigned int v1; empty v2; unsigned char v3:8; };
struct __attribute__((packed)) aUi_Sf_BFu8i { unsigned int v1; empty v2; unsigned int v3:8; };
struct __attribute__((packed)) aUi_Sf_BFu8ll { unsigned int v1; empty v2; unsigned long long v3:8; };
struct __attribute__((packed)) aUi_Sf_BFu8s { unsigned int v1; empty v2; unsigned short v3:8; };
struct __attribute__((packed)) aUi_Sf_BFu9i { unsigned int v1; empty v2; unsigned int v3:9; };
struct __attribute__((packed)) aUi_Sf_BFu9ll { unsigned int v1; empty v2; unsigned long long v3:9; };
struct __attribute__((packed)) aUi_Sf_BFu9s { unsigned int v1; empty v2; unsigned short v3:9; };
struct __attribute__((packed)) aUi_Sf_C { unsigned int v1; empty v2; char v3; };
struct __attribute__((packed)) aUi_Sf_D { unsigned int v1; empty v2; double v3; };
struct __attribute__((packed)) aUi_Sf_F { unsigned int v1; empty v2; float v3; };
struct __attribute__((packed)) aUi_Sf_I { unsigned int v1; empty v2; int v3; };
struct __attribute__((packed)) aUi_Sf_Ip { unsigned int v1; empty v2; int * v3; };
struct __attribute__((packed)) aUi_Sf_L { unsigned int v1; empty v2; long long v3; };
struct __attribute__((packed)) aUi_Sf_S { unsigned int v1; empty v2; short v3; };
struct __attribute__((packed)) aUi_Sf_Sf { unsigned int v1; empty v2; empty v3; };
struct __attribute__((packed)) aUi_Sf_Uc { unsigned int v1; empty v2; unsigned char v3; };
struct __attribute__((packed)) aUi_Sf_Ui { unsigned int v1; empty v2; unsigned int v3; };
struct __attribute__((packed)) aUi_Sf_Ul { unsigned int v1; empty v2; unsigned long long v3; };
struct __attribute__((packed)) aUi_Sf_Us { unsigned int v1; empty v2; unsigned short v3; };
struct __attribute__((packed)) aUi_Sf_Vp { unsigned int v1; empty v2; void * v3; };
struct __attribute__((packed)) aUi_Uc_Sf { unsigned int v1; unsigned char v2; empty v3; };
struct __attribute__((packed)) aUi_Ui_Sf { unsigned int v1; unsigned int v2; empty v3; };
struct __attribute__((packed)) aUi_Ul_Sf { unsigned int v1; unsigned long long v2; empty v3; };
struct __attribute__((packed)) aUi_Us_Sf { unsigned int v1; unsigned short v2; empty v3; };
struct __attribute__((packed)) aUi_Vp_Sf { unsigned int v1; void * v2; empty v3; };
struct __attribute__((packed)) aUl_BFu15i_Sf { unsigned long long v1; unsigned int v2:15; empty v3; };
struct __attribute__((packed)) aUl_BFu15ll_Sf { unsigned long long v1; unsigned long long v2:15; empty v3; };
struct __attribute__((packed)) aUl_BFu15s_Sf { unsigned long long v1; unsigned short v2:15; empty v3; };
struct __attribute__((packed)) aUl_BFu16i_Sf { unsigned long long v1; unsigned int v2:16; empty v3; };
struct __attribute__((packed)) aUl_BFu16ll_Sf { unsigned long long v1; unsigned long long v2:16; empty v3; };
struct __attribute__((packed)) aUl_BFu16s_Sf { unsigned long long v1; unsigned short v2:16; empty v3; };
struct __attribute__((packed)) aUl_BFu17i_Sf { unsigned long long v1; unsigned int v2:17; empty v3; };
struct __attribute__((packed)) aUl_BFu17ll_Sf { unsigned long long v1; unsigned long long v2:17; empty v3; };
struct __attribute__((packed)) aUl_BFu1c_Sf { unsigned long long v1; unsigned char v2:1; empty v3; };
struct __attribute__((packed)) aUl_BFu1i_Sf { unsigned long long v1; unsigned int v2:1; empty v3; };
struct __attribute__((packed)) aUl_BFu1ll_Sf { unsigned long long v1; unsigned long long v2:1; empty v3; };
struct __attribute__((packed)) aUl_BFu1s_Sf { unsigned long long v1; unsigned short v2:1; empty v3; };
struct __attribute__((packed)) aUl_BFu31i_Sf { unsigned long long v1; unsigned int v2:31; empty v3; };
struct __attribute__((packed)) aUl_BFu31ll_Sf { unsigned long long v1; unsigned long long v2:31; empty v3; };
struct __attribute__((packed)) aUl_BFu32i_Sf { unsigned long long v1; unsigned int v2:32; empty v3; };
struct __attribute__((packed)) aUl_BFu32ll_Sf { unsigned long long v1; unsigned long long v2:32; empty v3; };
struct __attribute__((packed)) aUl_BFu33_Sf { unsigned long long v1; unsigned long long v2:33; empty v3; };
struct __attribute__((packed)) aUl_BFu7c_Sf { unsigned long long v1; unsigned char v2:7; empty v3; };
struct __attribute__((packed)) aUl_BFu7i_Sf { unsigned long long v1; unsigned int v2:7; empty v3; };
struct __attribute__((packed)) aUl_BFu7ll_Sf { unsigned long long v1; unsigned long long v2:7; empty v3; };
struct __attribute__((packed)) aUl_BFu7s_Sf { unsigned long long v1; unsigned short v2:7; empty v3; };
struct __attribute__((packed)) aUl_BFu8c_Sf { unsigned long long v1; unsigned char v2:8; empty v3; };
struct __attribute__((packed)) aUl_BFu8i_Sf { unsigned long long v1; unsigned int v2:8; empty v3; };
struct __attribute__((packed)) aUl_BFu8ll_Sf { unsigned long long v1; unsigned long long v2:8; empty v3; };
struct __attribute__((packed)) aUl_BFu8s_Sf { unsigned long long v1; unsigned short v2:8; empty v3; };
struct __attribute__((packed)) aUl_BFu9i_Sf { unsigned long long v1; unsigned int v2:9; empty v3; };
struct __attribute__((packed)) aUl_BFu9ll_Sf { unsigned long long v1; unsigned long long v2:9; empty v3; };
struct __attribute__((packed)) aUl_BFu9s_Sf { unsigned long long v1; unsigned short v2:9; empty v3; };
struct __attribute__((packed)) aUl_C_Sf { unsigned long long v1; char v2; empty v3; };
struct __attribute__((packed)) aUl_D_Sf { unsigned long long v1; double v2; empty v3; };
struct __attribute__((packed)) aUl_F_Sf { unsigned long long v1; float v2; empty v3; };
struct __attribute__((packed)) aUl_I_Sf { unsigned long long v1; int v2; empty v3; };
struct __attribute__((packed)) aUl_Ip_Sf { unsigned long long v1; int * v2; empty v3; };
struct __attribute__((packed)) aUl_L_Sf { unsigned long long v1; long long v2; empty v3; };
struct __attribute__((packed)) aUl_S_Sf { unsigned long long v1; short v2; empty v3; };
struct __attribute__((packed)) aUl_Sf { unsigned long long v1; empty v2; };
struct __attribute__((packed)) aUl_Sf_BFu15i { unsigned long long v1; empty v2; unsigned int v3:15; };
struct __attribute__((packed)) aUl_Sf_BFu15ll { unsigned long long v1; empty v2; unsigned long long v3:15; };
struct __attribute__((packed)) aUl_Sf_BFu15s { unsigned long long v1; empty v2; unsigned short v3:15; };
struct __attribute__((packed)) aUl_Sf_BFu16i { unsigned long long v1; empty v2; unsigned int v3:16; };
struct __attribute__((packed)) aUl_Sf_BFu16ll { unsigned long long v1; empty v2; unsigned long long v3:16; };
struct __attribute__((packed)) aUl_Sf_BFu16s { unsigned long long v1; empty v2; unsigned short v3:16; };
struct __attribute__((packed)) aUl_Sf_BFu17i { unsigned long long v1; empty v2; unsigned int v3:17; };
struct __attribute__((packed)) aUl_Sf_BFu17ll { unsigned long long v1; empty v2; unsigned long long v3:17; };
struct __attribute__((packed)) aUl_Sf_BFu1c { unsigned long long v1; empty v2; unsigned char v3:1; };
struct __attribute__((packed)) aUl_Sf_BFu1i { unsigned long long v1; empty v2; unsigned int v3:1; };
struct __attribute__((packed)) aUl_Sf_BFu1ll { unsigned long long v1; empty v2; unsigned long long v3:1; };
struct __attribute__((packed)) aUl_Sf_BFu1s { unsigned long long v1; empty v2; unsigned short v3:1; };
struct __attribute__((packed)) aUl_Sf_BFu31i { unsigned long long v1; empty v2; unsigned int v3:31; };
struct __attribute__((packed)) aUl_Sf_BFu31ll { unsigned long long v1; empty v2; unsigned long long v3:31; };
struct __attribute__((packed)) aUl_Sf_BFu32i { unsigned long long v1; empty v2; unsigned int v3:32; };
struct __attribute__((packed)) aUl_Sf_BFu32ll { unsigned long long v1; empty v2; unsigned long long v3:32; };
struct __attribute__((packed)) aUl_Sf_BFu33 { unsigned long long v1; empty v2; unsigned long long v3:33; };
struct __attribute__((packed)) aUl_Sf_BFu7c { unsigned long long v1; empty v2; unsigned char v3:7; };
struct __attribute__((packed)) aUl_Sf_BFu7i { unsigned long long v1; empty v2; unsigned int v3:7; };
struct __attribute__((packed)) aUl_Sf_BFu7ll { unsigned long long v1; empty v2; unsigned long long v3:7; };
struct __attribute__((packed)) aUl_Sf_BFu7s { unsigned long long v1; empty v2; unsigned short v3:7; };
struct __attribute__((packed)) aUl_Sf_BFu8c { unsigned long long v1; empty v2; unsigned char v3:8; };
struct __attribute__((packed)) aUl_Sf_BFu8i { unsigned long long v1; empty v2; unsigned int v3:8; };
struct __attribute__((packed)) aUl_Sf_BFu8ll { unsigned long long v1; empty v2; unsigned long long v3:8; };
struct __attribute__((packed)) aUl_Sf_BFu8s { unsigned long long v1; empty v2; unsigned short v3:8; };
struct __attribute__((packed)) aUl_Sf_BFu9i { unsigned long long v1; empty v2; unsigned int v3:9; };
struct __attribute__((packed)) aUl_Sf_BFu9ll { unsigned long long v1; empty v2; unsigned long long v3:9; };
struct __attribute__((packed)) aUl_Sf_BFu9s { unsigned long long v1; empty v2; unsigned short v3:9; };
struct __attribute__((packed)) aUl_Sf_C { unsigned long long v1; empty v2; char v3; };
struct __attribute__((packed)) aUl_Sf_D { unsigned long long v1; empty v2; double v3; };
struct __attribute__((packed)) aUl_Sf_F { unsigned long long v1; empty v2; float v3; };
struct __attribute__((packed)) aUl_Sf_I { unsigned long long v1; empty v2; int v3; };
struct __attribute__((packed)) aUl_Sf_Ip { unsigned long long v1; empty v2; int * v3; };
struct __attribute__((packed)) aUl_Sf_L { unsigned long long v1; empty v2; long long v3; };
struct __attribute__((packed)) aUl_Sf_S { unsigned long long v1; empty v2; short v3; };
struct __attribute__((packed)) aUl_Sf_Sf { unsigned long long v1; empty v2; empty v3; };
struct __attribute__((packed)) aUl_Sf_Uc { unsigned long long v1; empty v2; unsigned char v3; };
struct __attribute__((packed)) aUl_Sf_Ui { unsigned long long v1; empty v2; unsigned int v3; };
struct __attribute__((packed)) aUl_Sf_Ul { unsigned long long v1; empty v2; unsigned long long v3; };
struct __attribute__((packed)) aUl_Sf_Us { unsigned long long v1; empty v2; unsigned short v3; };
struct __attribute__((packed)) aUl_Sf_Vp { unsigned long long v1; empty v2; void * v3; };
struct __attribute__((packed)) aUl_Uc_Sf { unsigned long long v1; unsigned char v2; empty v3; };
struct __attribute__((packed)) aUl_Ui_Sf { unsigned long long v1; unsigned int v2; empty v3; };
struct __attribute__((packed)) aUl_Ul_Sf { unsigned long long v1; unsigned long long v2; empty v3; };
struct __attribute__((packed)) aUl_Us_Sf { unsigned long long v1; unsigned short v2; empty v3; };
struct __attribute__((packed)) aUl_Vp_Sf { unsigned long long v1; void * v2; empty v3; };
struct __attribute__((packed)) aUs_BFu15i_Sf { unsigned short v1; unsigned int v2:15; empty v3; };
struct __attribute__((packed)) aUs_BFu15ll_Sf { unsigned short v1; unsigned long long v2:15; empty v3; };
struct __attribute__((packed)) aUs_BFu15s_Sf { unsigned short v1; unsigned short v2:15; empty v3; };
struct __attribute__((packed)) aUs_BFu16i_Sf { unsigned short v1; unsigned int v2:16; empty v3; };
struct __attribute__((packed)) aUs_BFu16ll_Sf { unsigned short v1; unsigned long long v2:16; empty v3; };
struct __attribute__((packed)) aUs_BFu16s_Sf { unsigned short v1; unsigned short v2:16; empty v3; };
struct __attribute__((packed)) aUs_BFu17i_Sf { unsigned short v1; unsigned int v2:17; empty v3; };
struct __attribute__((packed)) aUs_BFu17ll_Sf { unsigned short v1; unsigned long long v2:17; empty v3; };
struct __attribute__((packed)) aUs_BFu1c_Sf { unsigned short v1; unsigned char v2:1; empty v3; };
struct __attribute__((packed)) aUs_BFu1i_Sf { unsigned short v1; unsigned int v2:1; empty v3; };
struct __attribute__((packed)) aUs_BFu1ll_Sf { unsigned short v1; unsigned long long v2:1; empty v3; };
struct __attribute__((packed)) aUs_BFu1s_Sf { unsigned short v1; unsigned short v2:1; empty v3; };
struct __attribute__((packed)) aUs_BFu31i_Sf { unsigned short v1; unsigned int v2:31; empty v3; };
struct __attribute__((packed)) aUs_BFu31ll_Sf { unsigned short v1; unsigned long long v2:31; empty v3; };
struct __attribute__((packed)) aUs_BFu32i_Sf { unsigned short v1; unsigned int v2:32; empty v3; };
struct __attribute__((packed)) aUs_BFu32ll_Sf { unsigned short v1; unsigned long long v2:32; empty v3; };
struct __attribute__((packed)) aUs_BFu33_Sf { unsigned short v1; unsigned long long v2:33; empty v3; };
struct __attribute__((packed)) aUs_BFu7c_Sf { unsigned short v1; unsigned char v2:7; empty v3; };
struct __attribute__((packed)) aUs_BFu7i_Sf { unsigned short v1; unsigned int v2:7; empty v3; };
struct __attribute__((packed)) aUs_BFu7ll_Sf { unsigned short v1; unsigned long long v2:7; empty v3; };
struct __attribute__((packed)) aUs_BFu7s_Sf { unsigned short v1; unsigned short v2:7; empty v3; };
struct __attribute__((packed)) aUs_BFu8c_Sf { unsigned short v1; unsigned char v2:8; empty v3; };
struct __attribute__((packed)) aUs_BFu8i_Sf { unsigned short v1; unsigned int v2:8; empty v3; };
struct __attribute__((packed)) aUs_BFu8ll_Sf { unsigned short v1; unsigned long long v2:8; empty v3; };
struct __attribute__((packed)) aUs_BFu8s_Sf { unsigned short v1; unsigned short v2:8; empty v3; };
struct __attribute__((packed)) aUs_BFu9i_Sf { unsigned short v1; unsigned int v2:9; empty v3; };
struct __attribute__((packed)) aUs_BFu9ll_Sf { unsigned short v1; unsigned long long v2:9; empty v3; };
struct __attribute__((packed)) aUs_BFu9s_Sf { unsigned short v1; unsigned short v2:9; empty v3; };
struct __attribute__((packed)) aUs_C_Sf { unsigned short v1; char v2; empty v3; };
struct __attribute__((packed)) aUs_D_Sf { unsigned short v1; double v2; empty v3; };
struct __attribute__((packed)) aUs_F_Sf { unsigned short v1; float v2; empty v3; };
struct __attribute__((packed)) aUs_I_Sf { unsigned short v1; int v2; empty v3; };
struct __attribute__((packed)) aUs_Ip_Sf { unsigned short v1; int * v2; empty v3; };
struct __attribute__((packed)) aUs_L_Sf { unsigned short v1; long long v2; empty v3; };
struct __attribute__((packed)) aUs_S_Sf { unsigned short v1; short v2; empty v3; };
struct __attribute__((packed)) aUs_Sf { unsigned short v1; empty v2; };
struct __attribute__((packed)) aUs_Sf_BFu15i { unsigned short v1; empty v2; unsigned int v3:15; };
struct __attribute__((packed)) aUs_Sf_BFu15ll { unsigned short v1; empty v2; unsigned long long v3:15; };
struct __attribute__((packed)) aUs_Sf_BFu15s { unsigned short v1; empty v2; unsigned short v3:15; };
struct __attribute__((packed)) aUs_Sf_BFu16i { unsigned short v1; empty v2; unsigned int v3:16; };
struct __attribute__((packed)) aUs_Sf_BFu16ll { unsigned short v1; empty v2; unsigned long long v3:16; };
struct __attribute__((packed)) aUs_Sf_BFu16s { unsigned short v1; empty v2; unsigned short v3:16; };
struct __attribute__((packed)) aUs_Sf_BFu17i { unsigned short v1; empty v2; unsigned int v3:17; };
struct __attribute__((packed)) aUs_Sf_BFu17ll { unsigned short v1; empty v2; unsigned long long v3:17; };
struct __attribute__((packed)) aUs_Sf_BFu1c { unsigned short v1; empty v2; unsigned char v3:1; };
struct __attribute__((packed)) aUs_Sf_BFu1i { unsigned short v1; empty v2; unsigned int v3:1; };
struct __attribute__((packed)) aUs_Sf_BFu1ll { unsigned short v1; empty v2; unsigned long long v3:1; };
struct __attribute__((packed)) aUs_Sf_BFu1s { unsigned short v1; empty v2; unsigned short v3:1; };
struct __attribute__((packed)) aUs_Sf_BFu31i { unsigned short v1; empty v2; unsigned int v3:31; };
struct __attribute__((packed)) aUs_Sf_BFu31ll { unsigned short v1; empty v2; unsigned long long v3:31; };
struct __attribute__((packed)) aUs_Sf_BFu32i { unsigned short v1; empty v2; unsigned int v3:32; };
struct __attribute__((packed)) aUs_Sf_BFu32ll { unsigned short v1; empty v2; unsigned long long v3:32; };
struct __attribute__((packed)) aUs_Sf_BFu33 { unsigned short v1; empty v2; unsigned long long v3:33; };
struct __attribute__((packed)) aUs_Sf_BFu7c { unsigned short v1; empty v2; unsigned char v3:7; };
struct __attribute__((packed)) aUs_Sf_BFu7i { unsigned short v1; empty v2; unsigned int v3:7; };
struct __attribute__((packed)) aUs_Sf_BFu7ll { unsigned short v1; empty v2; unsigned long long v3:7; };
struct __attribute__((packed)) aUs_Sf_BFu7s { unsigned short v1; empty v2; unsigned short v3:7; };
struct __attribute__((packed)) aUs_Sf_BFu8c { unsigned short v1; empty v2; unsigned char v3:8; };
struct __attribute__((packed)) aUs_Sf_BFu8i { unsigned short v1; empty v2; unsigned int v3:8; };
struct __attribute__((packed)) aUs_Sf_BFu8ll { unsigned short v1; empty v2; unsigned long long v3:8; };
struct __attribute__((packed)) aUs_Sf_BFu8s { unsigned short v1; empty v2; unsigned short v3:8; };
struct __attribute__((packed)) aUs_Sf_BFu9i { unsigned short v1; empty v2; unsigned int v3:9; };
struct __attribute__((packed)) aUs_Sf_BFu9ll { unsigned short v1; empty v2; unsigned long long v3:9; };
struct __attribute__((packed)) aUs_Sf_BFu9s { unsigned short v1; empty v2; unsigned short v3:9; };
struct __attribute__((packed)) aUs_Sf_C { unsigned short v1; empty v2; char v3; };
struct __attribute__((packed)) aUs_Sf_D { unsigned short v1; empty v2; double v3; };
struct __attribute__((packed)) aUs_Sf_F { unsigned short v1; empty v2; float v3; };
struct __attribute__((packed)) aUs_Sf_I { unsigned short v1; empty v2; int v3; };
struct __attribute__((packed)) aUs_Sf_Ip { unsigned short v1; empty v2; int * v3; };
struct __attribute__((packed)) aUs_Sf_L { unsigned short v1; empty v2; long long v3; };
struct __attribute__((packed)) aUs_Sf_S { unsigned short v1; empty v2; short v3; };
struct __attribute__((packed)) aUs_Sf_Sf { unsigned short v1; empty v2; empty v3; };
struct __attribute__((packed)) aUs_Sf_Uc { unsigned short v1; empty v2; unsigned char v3; };
struct __attribute__((packed)) aUs_Sf_Ui { unsigned short v1; empty v2; unsigned int v3; };
struct __attribute__((packed)) aUs_Sf_Ul { unsigned short v1; empty v2; unsigned long long v3; };
struct __attribute__((packed)) aUs_Sf_Us { unsigned short v1; empty v2; unsigned short v3; };
struct __attribute__((packed)) aUs_Sf_Vp { unsigned short v1; empty v2; void * v3; };
struct __attribute__((packed)) aUs_Uc_Sf { unsigned short v1; unsigned char v2; empty v3; };
struct __attribute__((packed)) aUs_Ui_Sf { unsigned short v1; unsigned int v2; empty v3; };
struct __attribute__((packed)) aUs_Ul_Sf { unsigned short v1; unsigned long long v2; empty v3; };
struct __attribute__((packed)) aUs_Us_Sf { unsigned short v1; unsigned short v2; empty v3; };
struct __attribute__((packed)) aUs_Vp_Sf { unsigned short v1; void * v2; empty v3; };
struct __attribute__((packed)) aVp_BFu15i_Sf { void * v1; unsigned int v2:15; empty v3; };
struct __attribute__((packed)) aVp_BFu15ll_Sf { void * v1; unsigned long long v2:15; empty v3; };
struct __attribute__((packed)) aVp_BFu15s_Sf { void * v1; unsigned short v2:15; empty v3; };
struct __attribute__((packed)) aVp_BFu16i_Sf { void * v1; unsigned int v2:16; empty v3; };
struct __attribute__((packed)) aVp_BFu16ll_Sf { void * v1; unsigned long long v2:16; empty v3; };
struct __attribute__((packed)) aVp_BFu16s_Sf { void * v1; unsigned short v2:16; empty v3; };
struct __attribute__((packed)) aVp_BFu17i_Sf { void * v1; unsigned int v2:17; empty v3; };
struct __attribute__((packed)) aVp_BFu17ll_Sf { void * v1; unsigned long long v2:17; empty v3; };
struct __attribute__((packed)) aVp_BFu1c_Sf { void * v1; unsigned char v2:1; empty v3; };
struct __attribute__((packed)) aVp_BFu1i_Sf { void * v1; unsigned int v2:1; empty v3; };
struct __attribute__((packed)) aVp_BFu1ll_Sf { void * v1; unsigned long long v2:1; empty v3; };
struct __attribute__((packed)) aVp_BFu1s_Sf { void * v1; unsigned short v2:1; empty v3; };
struct __attribute__((packed)) aVp_BFu31i_Sf { void * v1; unsigned int v2:31; empty v3; };
struct __attribute__((packed)) aVp_BFu31ll_Sf { void * v1; unsigned long long v2:31; empty v3; };
struct __attribute__((packed)) aVp_BFu32i_Sf { void * v1; unsigned int v2:32; empty v3; };
struct __attribute__((packed)) aVp_BFu32ll_Sf { void * v1; unsigned long long v2:32; empty v3; };
struct __attribute__((packed)) aVp_BFu33_Sf { void * v1; unsigned long long v2:33; empty v3; };
struct __attribute__((packed)) aVp_BFu7c_Sf { void * v1; unsigned char v2:7; empty v3; };
struct __attribute__((packed)) aVp_BFu7i_Sf { void * v1; unsigned int v2:7; empty v3; };
struct __attribute__((packed)) aVp_BFu7ll_Sf { void * v1; unsigned long long v2:7; empty v3; };
struct __attribute__((packed)) aVp_BFu7s_Sf { void * v1; unsigned short v2:7; empty v3; };
struct __attribute__((packed)) aVp_BFu8c_Sf { void * v1; unsigned char v2:8; empty v3; };
struct __attribute__((packed)) aVp_BFu8i_Sf { void * v1; unsigned int v2:8; empty v3; };
struct __attribute__((packed)) aVp_BFu8ll_Sf { void * v1; unsigned long long v2:8; empty v3; };
struct __attribute__((packed)) aVp_BFu8s_Sf { void * v1; unsigned short v2:8; empty v3; };
struct __attribute__((packed)) aVp_BFu9i_Sf { void * v1; unsigned int v2:9; empty v3; };
struct __attribute__((packed)) aVp_BFu9ll_Sf { void * v1; unsigned long long v2:9; empty v3; };
struct __attribute__((packed)) aVp_BFu9s_Sf { void * v1; unsigned short v2:9; empty v3; };
struct __attribute__((packed)) aVp_C_Sf { void * v1; char v2; empty v3; };
struct __attribute__((packed)) aVp_D_Sf { void * v1; double v2; empty v3; };
struct __attribute__((packed)) aVp_F_Sf { void * v1; float v2; empty v3; };
struct __attribute__((packed)) aVp_I_Sf { void * v1; int v2; empty v3; };
struct __attribute__((packed)) aVp_Ip_Sf { void * v1; int * v2; empty v3; };
struct __attribute__((packed)) aVp_L_Sf { void * v1; long long v2; empty v3; };
struct __attribute__((packed)) aVp_S_Sf { void * v1; short v2; empty v3; };
struct __attribute__((packed)) aVp_Sf { void * v1; empty v2; };
struct __attribute__((packed)) aVp_Sf_BFu15i { void * v1; empty v2; unsigned int v3:15; };
struct __attribute__((packed)) aVp_Sf_BFu15ll { void * v1; empty v2; unsigned long long v3:15; };
struct __attribute__((packed)) aVp_Sf_BFu15s { void * v1; empty v2; unsigned short v3:15; };
struct __attribute__((packed)) aVp_Sf_BFu16i { void * v1; empty v2; unsigned int v3:16; };
struct __attribute__((packed)) aVp_Sf_BFu16ll { void * v1; empty v2; unsigned long long v3:16; };
struct __attribute__((packed)) aVp_Sf_BFu16s { void * v1; empty v2; unsigned short v3:16; };
struct __attribute__((packed)) aVp_Sf_BFu17i { void * v1; empty v2; unsigned int v3:17; };
struct __attribute__((packed)) aVp_Sf_BFu17ll { void * v1; empty v2; unsigned long long v3:17; };
struct __attribute__((packed)) aVp_Sf_BFu1c { void * v1; empty v2; unsigned char v3:1; };
struct __attribute__((packed)) aVp_Sf_BFu1i { void * v1; empty v2; unsigned int v3:1; };
struct __attribute__((packed)) aVp_Sf_BFu1ll { void * v1; empty v2; unsigned long long v3:1; };
struct __attribute__((packed)) aVp_Sf_BFu1s { void * v1; empty v2; unsigned short v3:1; };
struct __attribute__((packed)) aVp_Sf_BFu31i { void * v1; empty v2; unsigned int v3:31; };
struct __attribute__((packed)) aVp_Sf_BFu31ll { void * v1; empty v2; unsigned long long v3:31; };
struct __attribute__((packed)) aVp_Sf_BFu32i { void * v1; empty v2; unsigned int v3:32; };
struct __attribute__((packed)) aVp_Sf_BFu32ll { void * v1; empty v2; unsigned long long v3:32; };
struct __attribute__((packed)) aVp_Sf_BFu33 { void * v1; empty v2; unsigned long long v3:33; };
struct __attribute__((packed)) aVp_Sf_BFu7c { void * v1; empty v2; unsigned char v3:7; };
struct __attribute__((packed)) aVp_Sf_BFu7i { void * v1; empty v2; unsigned int v3:7; };
struct __attribute__((packed)) aVp_Sf_BFu7ll { void * v1; empty v2; unsigned long long v3:7; };
struct __attribute__((packed)) aVp_Sf_BFu7s { void * v1; empty v2; unsigned short v3:7; };
struct __attribute__((packed)) aVp_Sf_BFu8c { void * v1; empty v2; unsigned char v3:8; };
struct __attribute__((packed)) aVp_Sf_BFu8i { void * v1; empty v2; unsigned int v3:8; };
struct __attribute__((packed)) aVp_Sf_BFu8ll { void * v1; empty v2; unsigned long long v3:8; };
struct __attribute__((packed)) aVp_Sf_BFu8s { void * v1; empty v2; unsigned short v3:8; };
struct __attribute__((packed)) aVp_Sf_BFu9i { void * v1; empty v2; unsigned int v3:9; };
struct __attribute__((packed)) aVp_Sf_BFu9ll { void * v1; empty v2; unsigned long long v3:9; };
struct __attribute__((packed)) aVp_Sf_BFu9s { void * v1; empty v2; unsigned short v3:9; };
struct __attribute__((packed)) aVp_Sf_C { void * v1; empty v2; char v3; };
struct __attribute__((packed)) aVp_Sf_D { void * v1; empty v2; double v3; };
struct __attribute__((packed)) aVp_Sf_F { void * v1; empty v2; float v3; };
struct __attribute__((packed)) aVp_Sf_I { void * v1; empty v2; int v3; };
struct __attribute__((packed)) aVp_Sf_Ip { void * v1; empty v2; int * v3; };
struct __attribute__((packed)) aVp_Sf_L { void * v1; empty v2; long long v3; };
struct __attribute__((packed)) aVp_Sf_S { void * v1; empty v2; short v3; };
struct __attribute__((packed)) aVp_Sf_Sf { void * v1; empty v2; empty v3; };
struct __attribute__((packed)) aVp_Sf_Uc { void * v1; empty v2; unsigned char v3; };
struct __attribute__((packed)) aVp_Sf_Ui { void * v1; empty v2; unsigned int v3; };
struct __attribute__((packed)) aVp_Sf_Ul { void * v1; empty v2; unsigned long long v3; };
struct __attribute__((packed)) aVp_Sf_Us { void * v1; empty v2; unsigned short v3; };
struct __attribute__((packed)) aVp_Sf_Vp { void * v1; empty v2; void * v3; };
struct __attribute__((packed)) aVp_Uc_Sf { void * v1; unsigned char v2; empty v3; };
struct __attribute__((packed)) aVp_Ui_Sf { void * v1; unsigned int v2; empty v3; };
struct __attribute__((packed)) aVp_Ul_Sf { void * v1; unsigned long long v2; empty v3; };
struct __attribute__((packed)) aVp_Us_Sf { void * v1; unsigned short v2; empty v3; };
struct __attribute__((packed)) aVp_Vp_Sf { void * v1; void * v2; empty v3; };
#pragma pack(1)
struct BFu15i_BFu15i_Sf { unsigned int v1:15; unsigned int v2:15; empty v3; };
struct BFu15i_BFu15ll_Sf { unsigned int v1:15; unsigned long long v2:15; empty v3; };
struct BFu15i_BFu15s_Sf { unsigned int v1:15; unsigned short v2:15; empty v3; };
struct BFu15i_BFu16i_Sf { unsigned int v1:15; unsigned int v2:16; empty v3; };
struct BFu15i_BFu16ll_Sf { unsigned int v1:15; unsigned long long v2:16; empty v3; };
struct BFu15i_BFu16s_Sf { unsigned int v1:15; unsigned short v2:16; empty v3; };
struct BFu15i_BFu17i_Sf { unsigned int v1:15; unsigned int v2:17; empty v3; };
struct BFu15i_BFu17ll_Sf { unsigned int v1:15; unsigned long long v2:17; empty v3; };
struct BFu15i_BFu1c_Sf { unsigned int v1:15; unsigned char v2:1; empty v3; };
struct BFu15i_BFu1i_Sf { unsigned int v1:15; unsigned int v2:1; empty v3; };
struct BFu15i_BFu1ll_Sf { unsigned int v1:15; unsigned long long v2:1; empty v3; };
struct BFu15i_BFu1s_Sf { unsigned int v1:15; unsigned short v2:1; empty v3; };
struct BFu15i_BFu31i_Sf { unsigned int v1:15; unsigned int v2:31; empty v3; };
struct BFu15i_BFu31ll_Sf { unsigned int v1:15; unsigned long long v2:31; empty v3; };
struct BFu15i_BFu32i_Sf { unsigned int v1:15; unsigned int v2:32; empty v3; };
struct BFu15i_BFu32ll_Sf { unsigned int v1:15; unsigned long long v2:32; empty v3; };
struct BFu15i_BFu33_Sf { unsigned int v1:15; unsigned long long v2:33; empty v3; };
struct BFu15i_BFu7c_Sf { unsigned int v1:15; unsigned char v2:7; empty v3; };
struct BFu15i_BFu7i_Sf { unsigned int v1:15; unsigned int v2:7; empty v3; };
struct BFu15i_BFu7ll_Sf { unsigned int v1:15; unsigned long long v2:7; empty v3; };
struct BFu15i_BFu7s_Sf { unsigned int v1:15; unsigned short v2:7; empty v3; };
struct BFu15i_BFu8c_Sf { unsigned int v1:15; unsigned char v2:8; empty v3; };
struct BFu15i_BFu8i_Sf { unsigned int v1:15; unsigned int v2:8; empty v3; };
struct BFu15i_BFu8ll_Sf { unsigned int v1:15; unsigned long long v2:8; empty v3; };
struct BFu15i_BFu8s_Sf { unsigned int v1:15; unsigned short v2:8; empty v3; };
struct BFu15i_BFu9i_Sf { unsigned int v1:15; unsigned int v2:9; empty v3; };
struct BFu15i_BFu9ll_Sf { unsigned int v1:15; unsigned long long v2:9; empty v3; };
struct BFu15i_BFu9s_Sf { unsigned int v1:15; unsigned short v2:9; empty v3; };
struct BFu15i_C_Sf { unsigned int v1:15; char v2; empty v3; };
struct BFu15i_D_Sf { unsigned int v1:15; double v2; empty v3; };
struct BFu15i_F_Sf { unsigned int v1:15; float v2; empty v3; };
struct BFu15i_I_Sf { unsigned int v1:15; int v2; empty v3; };
struct BFu15i_Ip_Sf { unsigned int v1:15; int * v2; empty v3; };
struct BFu15i_L_Sf { unsigned int v1:15; long long v2; empty v3; };
struct BFu15i_S_Sf { unsigned int v1:15; short v2; empty v3; };
struct BFu15i_Sf { unsigned int v1:15; empty v2; };
struct BFu15i_Sf_BFu15i { unsigned int v1:15; empty v2; unsigned int v3:15; };
struct BFu15i_Sf_BFu15ll { unsigned int v1:15; empty v2; unsigned long long v3:15; };
struct BFu15i_Sf_BFu15s { unsigned int v1:15; empty v2; unsigned short v3:15; };
struct BFu15i_Sf_BFu16i { unsigned int v1:15; empty v2; unsigned int v3:16; };
struct BFu15i_Sf_BFu16ll { unsigned int v1:15; empty v2; unsigned long long v3:16; };
struct BFu15i_Sf_BFu16s { unsigned int v1:15; empty v2; unsigned short v3:16; };
struct BFu15i_Sf_BFu17i { unsigned int v1:15; empty v2; unsigned int v3:17; };
struct BFu15i_Sf_BFu17ll { unsigned int v1:15; empty v2; unsigned long long v3:17; };
struct BFu15i_Sf_BFu1c { unsigned int v1:15; empty v2; unsigned char v3:1; };
struct BFu15i_Sf_BFu1i { unsigned int v1:15; empty v2; unsigned int v3:1; };
struct BFu15i_Sf_BFu1ll { unsigned int v1:15; empty v2; unsigned long long v3:1; };
struct BFu15i_Sf_BFu1s { unsigned int v1:15; empty v2; unsigned short v3:1; };
struct BFu15i_Sf_BFu31i { unsigned int v1:15; empty v2; unsigned int v3:31; };
struct BFu15i_Sf_BFu31ll { unsigned int v1:15; empty v2; unsigned long long v3:31; };
struct BFu15i_Sf_BFu32i { unsigned int v1:15; empty v2; unsigned int v3:32; };
struct BFu15i_Sf_BFu32ll { unsigned int v1:15; empty v2; unsigned long long v3:32; };
struct BFu15i_Sf_BFu33 { unsigned int v1:15; empty v2; unsigned long long v3:33; };
struct BFu15i_Sf_BFu7c { unsigned int v1:15; empty v2; unsigned char v3:7; };
struct BFu15i_Sf_BFu7i { unsigned int v1:15; empty v2; unsigned int v3:7; };
struct BFu15i_Sf_BFu7ll { unsigned int v1:15; empty v2; unsigned long long v3:7; };
struct BFu15i_Sf_BFu7s { unsigned int v1:15; empty v2; unsigned short v3:7; };
struct BFu15i_Sf_BFu8c { unsigned int v1:15; empty v2; unsigned char v3:8; };
struct BFu15i_Sf_BFu8i { unsigned int v1:15; empty v2; unsigned int v3:8; };
struct BFu15i_Sf_BFu8ll { unsigned int v1:15; empty v2; unsigned long long v3:8; };
struct BFu15i_Sf_BFu8s { unsigned int v1:15; empty v2; unsigned short v3:8; };
struct BFu15i_Sf_BFu9i { unsigned int v1:15; empty v2; unsigned int v3:9; };
struct BFu15i_Sf_BFu9ll { unsigned int v1:15; empty v2; unsigned long long v3:9; };
struct BFu15i_Sf_BFu9s { unsigned int v1:15; empty v2; unsigned short v3:9; };
struct BFu15i_Sf_C { unsigned int v1:15; empty v2; char v3; };
struct BFu15i_Sf_D { unsigned int v1:15; empty v2; double v3; };
struct BFu15i_Sf_F { unsigned int v1:15; empty v2; float v3; };
struct BFu15i_Sf_I { unsigned int v1:15; empty v2; int v3; };
struct BFu15i_Sf_Ip { unsigned int v1:15; empty v2; int * v3; };
struct BFu15i_Sf_L { unsigned int v1:15; empty v2; long long v3; };
struct BFu15i_Sf_S { unsigned int v1:15; empty v2; short v3; };
struct BFu15i_Sf_Sf { unsigned int v1:15; empty v2; empty v3; };
struct BFu15i_Sf_Uc { unsigned int v1:15; empty v2; unsigned char v3; };
struct BFu15i_Sf_Ui { unsigned int v1:15; empty v2; unsigned int v3; };
struct BFu15i_Sf_Ul { unsigned int v1:15; empty v2; unsigned long long v3; };
struct BFu15i_Sf_Us { unsigned int v1:15; empty v2; unsigned short v3; };
struct BFu15i_Sf_Vp { unsigned int v1:15; empty v2; void * v3; };
struct BFu15i_Uc_Sf { unsigned int v1:15; unsigned char v2; empty v3; };
struct BFu15i_Ui_Sf { unsigned int v1:15; unsigned int v2; empty v3; };
struct BFu15i_Ul_Sf { unsigned int v1:15; unsigned long long v2; empty v3; };
struct BFu15i_Us_Sf { unsigned int v1:15; unsigned short v2; empty v3; };
struct BFu15i_Vp_Sf { unsigned int v1:15; void * v2; empty v3; };
struct BFu15ll_BFu15i_Sf { unsigned long long v1:15; unsigned int v2:15; empty v3; };
struct BFu15ll_BFu15ll_Sf { unsigned long long v1:15; unsigned long long v2:15; empty v3; };
struct BFu15ll_BFu15s_Sf { unsigned long long v1:15; unsigned short v2:15; empty v3; };
struct BFu15ll_BFu16i_Sf { unsigned long long v1:15; unsigned int v2:16; empty v3; };
struct BFu15ll_BFu16ll_Sf { unsigned long long v1:15; unsigned long long v2:16; empty v3; };
struct BFu15ll_BFu16s_Sf { unsigned long long v1:15; unsigned short v2:16; empty v3; };
struct BFu15ll_BFu17i_Sf { unsigned long long v1:15; unsigned int v2:17; empty v3; };
struct BFu15ll_BFu17ll_Sf { unsigned long long v1:15; unsigned long long v2:17; empty v3; };
struct BFu15ll_BFu1c_Sf { unsigned long long v1:15; unsigned char v2:1; empty v3; };
struct BFu15ll_BFu1i_Sf { unsigned long long v1:15; unsigned int v2:1; empty v3; };
struct BFu15ll_BFu1ll_Sf { unsigned long long v1:15; unsigned long long v2:1; empty v3; };
struct BFu15ll_BFu1s_Sf { unsigned long long v1:15; unsigned short v2:1; empty v3; };
struct BFu15ll_BFu31i_Sf { unsigned long long v1:15; unsigned int v2:31; empty v3; };
struct BFu15ll_BFu31ll_Sf { unsigned long long v1:15; unsigned long long v2:31; empty v3; };
struct BFu15ll_BFu32i_Sf { unsigned long long v1:15; unsigned int v2:32; empty v3; };
struct BFu15ll_BFu32ll_Sf { unsigned long long v1:15; unsigned long long v2:32; empty v3; };
struct BFu15ll_BFu33_Sf { unsigned long long v1:15; unsigned long long v2:33; empty v3; };
struct BFu15ll_BFu7c_Sf { unsigned long long v1:15; unsigned char v2:7; empty v3; };
struct BFu15ll_BFu7i_Sf { unsigned long long v1:15; unsigned int v2:7; empty v3; };
struct BFu15ll_BFu7ll_Sf { unsigned long long v1:15; unsigned long long v2:7; empty v3; };
struct BFu15ll_BFu7s_Sf { unsigned long long v1:15; unsigned short v2:7; empty v3; };
struct BFu15ll_BFu8c_Sf { unsigned long long v1:15; unsigned char v2:8; empty v3; };
struct BFu15ll_BFu8i_Sf { unsigned long long v1:15; unsigned int v2:8; empty v3; };
struct BFu15ll_BFu8ll_Sf { unsigned long long v1:15; unsigned long long v2:8; empty v3; };
struct BFu15ll_BFu8s_Sf { unsigned long long v1:15; unsigned short v2:8; empty v3; };
struct BFu15ll_BFu9i_Sf { unsigned long long v1:15; unsigned int v2:9; empty v3; };
struct BFu15ll_BFu9ll_Sf { unsigned long long v1:15; unsigned long long v2:9; empty v3; };
struct BFu15ll_BFu9s_Sf { unsigned long long v1:15; unsigned short v2:9; empty v3; };
struct BFu15ll_C_Sf { unsigned long long v1:15; char v2; empty v3; };
struct BFu15ll_D_Sf { unsigned long long v1:15; double v2; empty v3; };
struct BFu15ll_F_Sf { unsigned long long v1:15; float v2; empty v3; };
struct BFu15ll_I_Sf { unsigned long long v1:15; int v2; empty v3; };
struct BFu15ll_Ip_Sf { unsigned long long v1:15; int * v2; empty v3; };
struct BFu15ll_L_Sf { unsigned long long v1:15; long long v2; empty v3; };
struct BFu15ll_S_Sf { unsigned long long v1:15; short v2; empty v3; };
struct BFu15ll_Sf { unsigned long long v1:15; empty v2; };
struct BFu15ll_Sf_BFu15i { unsigned long long v1:15; empty v2; unsigned int v3:15; };
struct BFu15ll_Sf_BFu15ll { unsigned long long v1:15; empty v2; unsigned long long v3:15; };
struct BFu15ll_Sf_BFu15s { unsigned long long v1:15; empty v2; unsigned short v3:15; };
struct BFu15ll_Sf_BFu16i { unsigned long long v1:15; empty v2; unsigned int v3:16; };
struct BFu15ll_Sf_BFu16ll { unsigned long long v1:15; empty v2; unsigned long long v3:16; };
struct BFu15ll_Sf_BFu16s { unsigned long long v1:15; empty v2; unsigned short v3:16; };
struct BFu15ll_Sf_BFu17i { unsigned long long v1:15; empty v2; unsigned int v3:17; };
struct BFu15ll_Sf_BFu17ll { unsigned long long v1:15; empty v2; unsigned long long v3:17; };
struct BFu15ll_Sf_BFu1c { unsigned long long v1:15; empty v2; unsigned char v3:1; };
struct BFu15ll_Sf_BFu1i { unsigned long long v1:15; empty v2; unsigned int v3:1; };
struct BFu15ll_Sf_BFu1ll { unsigned long long v1:15; empty v2; unsigned long long v3:1; };
struct BFu15ll_Sf_BFu1s { unsigned long long v1:15; empty v2; unsigned short v3:1; };
struct BFu15ll_Sf_BFu31i { unsigned long long v1:15; empty v2; unsigned int v3:31; };
struct BFu15ll_Sf_BFu31ll { unsigned long long v1:15; empty v2; unsigned long long v3:31; };
struct BFu15ll_Sf_BFu32i { unsigned long long v1:15; empty v2; unsigned int v3:32; };
struct BFu15ll_Sf_BFu32ll { unsigned long long v1:15; empty v2; unsigned long long v3:32; };
struct BFu15ll_Sf_BFu33 { unsigned long long v1:15; empty v2; unsigned long long v3:33; };
struct BFu15ll_Sf_BFu7c { unsigned long long v1:15; empty v2; unsigned char v3:7; };
struct BFu15ll_Sf_BFu7i { unsigned long long v1:15; empty v2; unsigned int v3:7; };
struct BFu15ll_Sf_BFu7ll { unsigned long long v1:15; empty v2; unsigned long long v3:7; };
struct BFu15ll_Sf_BFu7s { unsigned long long v1:15; empty v2; unsigned short v3:7; };
struct BFu15ll_Sf_BFu8c { unsigned long long v1:15; empty v2; unsigned char v3:8; };
struct BFu15ll_Sf_BFu8i { unsigned long long v1:15; empty v2; unsigned int v3:8; };
struct BFu15ll_Sf_BFu8ll { unsigned long long v1:15; empty v2; unsigned long long v3:8; };
struct BFu15ll_Sf_BFu8s { unsigned long long v1:15; empty v2; unsigned short v3:8; };
struct BFu15ll_Sf_BFu9i { unsigned long long v1:15; empty v2; unsigned int v3:9; };
struct BFu15ll_Sf_BFu9ll { unsigned long long v1:15; empty v2; unsigned long long v3:9; };
struct BFu15ll_Sf_BFu9s { unsigned long long v1:15; empty v2; unsigned short v3:9; };
struct BFu15ll_Sf_C { unsigned long long v1:15; empty v2; char v3; };
struct BFu15ll_Sf_D { unsigned long long v1:15; empty v2; double v3; };
struct BFu15ll_Sf_F { unsigned long long v1:15; empty v2; float v3; };
struct BFu15ll_Sf_I { unsigned long long v1:15; empty v2; int v3; };
struct BFu15ll_Sf_Ip { unsigned long long v1:15; empty v2; int * v3; };
struct BFu15ll_Sf_L { unsigned long long v1:15; empty v2; long long v3; };
struct BFu15ll_Sf_S { unsigned long long v1:15; empty v2; short v3; };
struct BFu15ll_Sf_Sf { unsigned long long v1:15; empty v2; empty v3; };
struct BFu15ll_Sf_Uc { unsigned long long v1:15; empty v2; unsigned char v3; };
struct BFu15ll_Sf_Ui { unsigned long long v1:15; empty v2; unsigned int v3; };
struct BFu15ll_Sf_Ul { unsigned long long v1:15; empty v2; unsigned long long v3; };
struct BFu15ll_Sf_Us { unsigned long long v1:15; empty v2; unsigned short v3; };
struct BFu15ll_Sf_Vp { unsigned long long v1:15; empty v2; void * v3; };
struct BFu15ll_Uc_Sf { unsigned long long v1:15; unsigned char v2; empty v3; };
struct BFu15ll_Ui_Sf { unsigned long long v1:15; unsigned int v2; empty v3; };
struct BFu15ll_Ul_Sf { unsigned long long v1:15; unsigned long long v2; empty v3; };
struct BFu15ll_Us_Sf { unsigned long long v1:15; unsigned short v2; empty v3; };
struct BFu15ll_Vp_Sf { unsigned long long v1:15; void * v2; empty v3; };
struct BFu15s_BFu15i_Sf { unsigned short v1:15; unsigned int v2:15; empty v3; };
struct BFu15s_BFu15ll_Sf { unsigned short v1:15; unsigned long long v2:15; empty v3; };
struct BFu15s_BFu15s_Sf { unsigned short v1:15; unsigned short v2:15; empty v3; };
struct BFu15s_BFu16i_Sf { unsigned short v1:15; unsigned int v2:16; empty v3; };
struct BFu15s_BFu16ll_Sf { unsigned short v1:15; unsigned long long v2:16; empty v3; };
struct BFu15s_BFu16s_Sf { unsigned short v1:15; unsigned short v2:16; empty v3; };
struct BFu15s_BFu17i_Sf { unsigned short v1:15; unsigned int v2:17; empty v3; };
struct BFu15s_BFu17ll_Sf { unsigned short v1:15; unsigned long long v2:17; empty v3; };
struct BFu15s_BFu1c_Sf { unsigned short v1:15; unsigned char v2:1; empty v3; };
struct BFu15s_BFu1i_Sf { unsigned short v1:15; unsigned int v2:1; empty v3; };
struct BFu15s_BFu1ll_Sf { unsigned short v1:15; unsigned long long v2:1; empty v3; };
struct BFu15s_BFu1s_Sf { unsigned short v1:15; unsigned short v2:1; empty v3; };
struct BFu15s_BFu31i_Sf { unsigned short v1:15; unsigned int v2:31; empty v3; };
struct BFu15s_BFu31ll_Sf { unsigned short v1:15; unsigned long long v2:31; empty v3; };
struct BFu15s_BFu32i_Sf { unsigned short v1:15; unsigned int v2:32; empty v3; };
struct BFu15s_BFu32ll_Sf { unsigned short v1:15; unsigned long long v2:32; empty v3; };
struct BFu15s_BFu33_Sf { unsigned short v1:15; unsigned long long v2:33; empty v3; };
struct BFu15s_BFu7c_Sf { unsigned short v1:15; unsigned char v2:7; empty v3; };
struct BFu15s_BFu7i_Sf { unsigned short v1:15; unsigned int v2:7; empty v3; };
struct BFu15s_BFu7ll_Sf { unsigned short v1:15; unsigned long long v2:7; empty v3; };
struct BFu15s_BFu7s_Sf { unsigned short v1:15; unsigned short v2:7; empty v3; };
struct BFu15s_BFu8c_Sf { unsigned short v1:15; unsigned char v2:8; empty v3; };
struct BFu15s_BFu8i_Sf { unsigned short v1:15; unsigned int v2:8; empty v3; };
struct BFu15s_BFu8ll_Sf { unsigned short v1:15; unsigned long long v2:8; empty v3; };
struct BFu15s_BFu8s_Sf { unsigned short v1:15; unsigned short v2:8; empty v3; };
struct BFu15s_BFu9i_Sf { unsigned short v1:15; unsigned int v2:9; empty v3; };
struct BFu15s_BFu9ll_Sf { unsigned short v1:15; unsigned long long v2:9; empty v3; };
struct BFu15s_BFu9s_Sf { unsigned short v1:15; unsigned short v2:9; empty v3; };
struct BFu15s_C_Sf { unsigned short v1:15; char v2; empty v3; };
struct BFu15s_D_Sf { unsigned short v1:15; double v2; empty v3; };
struct BFu15s_F_Sf { unsigned short v1:15; float v2; empty v3; };
struct BFu15s_I_Sf { unsigned short v1:15; int v2; empty v3; };
struct BFu15s_Ip_Sf { unsigned short v1:15; int * v2; empty v3; };
struct BFu15s_L_Sf { unsigned short v1:15; long long v2; empty v3; };
struct BFu15s_S_Sf { unsigned short v1:15; short v2; empty v3; };
struct BFu15s_Sf { unsigned short v1:15; empty v2; };
struct BFu15s_Sf_BFu15i { unsigned short v1:15; empty v2; unsigned int v3:15; };
struct BFu15s_Sf_BFu15ll { unsigned short v1:15; empty v2; unsigned long long v3:15; };
struct BFu15s_Sf_BFu15s { unsigned short v1:15; empty v2; unsigned short v3:15; };
struct BFu15s_Sf_BFu16i { unsigned short v1:15; empty v2; unsigned int v3:16; };
struct BFu15s_Sf_BFu16ll { unsigned short v1:15; empty v2; unsigned long long v3:16; };
struct BFu15s_Sf_BFu16s { unsigned short v1:15; empty v2; unsigned short v3:16; };
struct BFu15s_Sf_BFu17i { unsigned short v1:15; empty v2; unsigned int v3:17; };
struct BFu15s_Sf_BFu17ll { unsigned short v1:15; empty v2; unsigned long long v3:17; };
struct BFu15s_Sf_BFu1c { unsigned short v1:15; empty v2; unsigned char v3:1; };
struct BFu15s_Sf_BFu1i { unsigned short v1:15; empty v2; unsigned int v3:1; };
struct BFu15s_Sf_BFu1ll { unsigned short v1:15; empty v2; unsigned long long v3:1; };
struct BFu15s_Sf_BFu1s { unsigned short v1:15; empty v2; unsigned short v3:1; };
struct BFu15s_Sf_BFu31i { unsigned short v1:15; empty v2; unsigned int v3:31; };
struct BFu15s_Sf_BFu31ll { unsigned short v1:15; empty v2; unsigned long long v3:31; };
struct BFu15s_Sf_BFu32i { unsigned short v1:15; empty v2; unsigned int v3:32; };
struct BFu15s_Sf_BFu32ll { unsigned short v1:15; empty v2; unsigned long long v3:32; };
struct BFu15s_Sf_BFu33 { unsigned short v1:15; empty v2; unsigned long long v3:33; };
struct BFu15s_Sf_BFu7c { unsigned short v1:15; empty v2; unsigned char v3:7; };
struct BFu15s_Sf_BFu7i { unsigned short v1:15; empty v2; unsigned int v3:7; };
struct BFu15s_Sf_BFu7ll { unsigned short v1:15; empty v2; unsigned long long v3:7; };
struct BFu15s_Sf_BFu7s { unsigned short v1:15; empty v2; unsigned short v3:7; };
struct BFu15s_Sf_BFu8c { unsigned short v1:15; empty v2; unsigned char v3:8; };
struct BFu15s_Sf_BFu8i { unsigned short v1:15; empty v2; unsigned int v3:8; };
struct BFu15s_Sf_BFu8ll { unsigned short v1:15; empty v2; unsigned long long v3:8; };
struct BFu15s_Sf_BFu8s { unsigned short v1:15; empty v2; unsigned short v3:8; };
struct BFu15s_Sf_BFu9i { unsigned short v1:15; empty v2; unsigned int v3:9; };
struct BFu15s_Sf_BFu9ll { unsigned short v1:15; empty v2; unsigned long long v3:9; };
struct BFu15s_Sf_BFu9s { unsigned short v1:15; empty v2; unsigned short v3:9; };
struct BFu15s_Sf_C { unsigned short v1:15; empty v2; char v3; };
struct BFu15s_Sf_D { unsigned short v1:15; empty v2; double v3; };
struct BFu15s_Sf_F { unsigned short v1:15; empty v2; float v3; };
struct BFu15s_Sf_I { unsigned short v1:15; empty v2; int v3; };
struct BFu15s_Sf_Ip { unsigned short v1:15; empty v2; int * v3; };
struct BFu15s_Sf_L { unsigned short v1:15; empty v2; long long v3; };
struct BFu15s_Sf_S { unsigned short v1:15; empty v2; short v3; };
struct BFu15s_Sf_Sf { unsigned short v1:15; empty v2; empty v3; };
struct BFu15s_Sf_Uc { unsigned short v1:15; empty v2; unsigned char v3; };
struct BFu15s_Sf_Ui { unsigned short v1:15; empty v2; unsigned int v3; };
struct BFu15s_Sf_Ul { unsigned short v1:15; empty v2; unsigned long long v3; };
struct BFu15s_Sf_Us { unsigned short v1:15; empty v2; unsigned short v3; };
struct BFu15s_Sf_Vp { unsigned short v1:15; empty v2; void * v3; };
struct BFu15s_Uc_Sf { unsigned short v1:15; unsigned char v2; empty v3; };
struct BFu15s_Ui_Sf { unsigned short v1:15; unsigned int v2; empty v3; };
struct BFu15s_Ul_Sf { unsigned short v1:15; unsigned long long v2; empty v3; };
struct BFu15s_Us_Sf { unsigned short v1:15; unsigned short v2; empty v3; };
struct BFu15s_Vp_Sf { unsigned short v1:15; void * v2; empty v3; };
struct BFu16i_BFu15i_Sf { unsigned int v1:16; unsigned int v2:15; empty v3; };
struct BFu16i_BFu15ll_Sf { unsigned int v1:16; unsigned long long v2:15; empty v3; };
struct BFu16i_BFu15s_Sf { unsigned int v1:16; unsigned short v2:15; empty v3; };
struct BFu16i_BFu16i_Sf { unsigned int v1:16; unsigned int v2:16; empty v3; };
struct BFu16i_BFu16ll_Sf { unsigned int v1:16; unsigned long long v2:16; empty v3; };
struct BFu16i_BFu16s_Sf { unsigned int v1:16; unsigned short v2:16; empty v3; };
struct BFu16i_BFu17i_Sf { unsigned int v1:16; unsigned int v2:17; empty v3; };
struct BFu16i_BFu17ll_Sf { unsigned int v1:16; unsigned long long v2:17; empty v3; };
struct BFu16i_BFu1c_Sf { unsigned int v1:16; unsigned char v2:1; empty v3; };
struct BFu16i_BFu1i_Sf { unsigned int v1:16; unsigned int v2:1; empty v3; };
struct BFu16i_BFu1ll_Sf { unsigned int v1:16; unsigned long long v2:1; empty v3; };
struct BFu16i_BFu1s_Sf { unsigned int v1:16; unsigned short v2:1; empty v3; };
struct BFu16i_BFu31i_Sf { unsigned int v1:16; unsigned int v2:31; empty v3; };
struct BFu16i_BFu31ll_Sf { unsigned int v1:16; unsigned long long v2:31; empty v3; };
struct BFu16i_BFu32i_Sf { unsigned int v1:16; unsigned int v2:32; empty v3; };
struct BFu16i_BFu32ll_Sf { unsigned int v1:16; unsigned long long v2:32; empty v3; };
struct BFu16i_BFu33_Sf { unsigned int v1:16; unsigned long long v2:33; empty v3; };
struct BFu16i_BFu7c_Sf { unsigned int v1:16; unsigned char v2:7; empty v3; };
struct BFu16i_BFu7i_Sf { unsigned int v1:16; unsigned int v2:7; empty v3; };
struct BFu16i_BFu7ll_Sf { unsigned int v1:16; unsigned long long v2:7; empty v3; };
struct BFu16i_BFu7s_Sf { unsigned int v1:16; unsigned short v2:7; empty v3; };
struct BFu16i_BFu8c_Sf { unsigned int v1:16; unsigned char v2:8; empty v3; };
struct BFu16i_BFu8i_Sf { unsigned int v1:16; unsigned int v2:8; empty v3; };
struct BFu16i_BFu8ll_Sf { unsigned int v1:16; unsigned long long v2:8; empty v3; };
struct BFu16i_BFu8s_Sf { unsigned int v1:16; unsigned short v2:8; empty v3; };
struct BFu16i_BFu9i_Sf { unsigned int v1:16; unsigned int v2:9; empty v3; };
struct BFu16i_BFu9ll_Sf { unsigned int v1:16; unsigned long long v2:9; empty v3; };
struct BFu16i_BFu9s_Sf { unsigned int v1:16; unsigned short v2:9; empty v3; };
struct BFu16i_C_Sf { unsigned int v1:16; char v2; empty v3; };
struct BFu16i_D_Sf { unsigned int v1:16; double v2; empty v3; };
struct BFu16i_F_Sf { unsigned int v1:16; float v2; empty v3; };
struct BFu16i_I_Sf { unsigned int v1:16; int v2; empty v3; };
struct BFu16i_Ip_Sf { unsigned int v1:16; int * v2; empty v3; };
struct BFu16i_L_Sf { unsigned int v1:16; long long v2; empty v3; };
struct BFu16i_S_Sf { unsigned int v1:16; short v2; empty v3; };
struct BFu16i_Sf { unsigned int v1:16; empty v2; };
struct BFu16i_Sf_BFu15i { unsigned int v1:16; empty v2; unsigned int v3:15; };
struct BFu16i_Sf_BFu15ll { unsigned int v1:16; empty v2; unsigned long long v3:15; };
struct BFu16i_Sf_BFu15s { unsigned int v1:16; empty v2; unsigned short v3:15; };
struct BFu16i_Sf_BFu16i { unsigned int v1:16; empty v2; unsigned int v3:16; };
struct BFu16i_Sf_BFu16ll { unsigned int v1:16; empty v2; unsigned long long v3:16; };
struct BFu16i_Sf_BFu16s { unsigned int v1:16; empty v2; unsigned short v3:16; };
struct BFu16i_Sf_BFu17i { unsigned int v1:16; empty v2; unsigned int v3:17; };
struct BFu16i_Sf_BFu17ll { unsigned int v1:16; empty v2; unsigned long long v3:17; };
struct BFu16i_Sf_BFu1c { unsigned int v1:16; empty v2; unsigned char v3:1; };
struct BFu16i_Sf_BFu1i { unsigned int v1:16; empty v2; unsigned int v3:1; };
struct BFu16i_Sf_BFu1ll { unsigned int v1:16; empty v2; unsigned long long v3:1; };
struct BFu16i_Sf_BFu1s { unsigned int v1:16; empty v2; unsigned short v3:1; };
struct BFu16i_Sf_BFu31i { unsigned int v1:16; empty v2; unsigned int v3:31; };
struct BFu16i_Sf_BFu31ll { unsigned int v1:16; empty v2; unsigned long long v3:31; };
struct BFu16i_Sf_BFu32i { unsigned int v1:16; empty v2; unsigned int v3:32; };
struct BFu16i_Sf_BFu32ll { unsigned int v1:16; empty v2; unsigned long long v3:32; };
struct BFu16i_Sf_BFu33 { unsigned int v1:16; empty v2; unsigned long long v3:33; };
struct BFu16i_Sf_BFu7c { unsigned int v1:16; empty v2; unsigned char v3:7; };
struct BFu16i_Sf_BFu7i { unsigned int v1:16; empty v2; unsigned int v3:7; };
struct BFu16i_Sf_BFu7ll { unsigned int v1:16; empty v2; unsigned long long v3:7; };
struct BFu16i_Sf_BFu7s { unsigned int v1:16; empty v2; unsigned short v3:7; };
struct BFu16i_Sf_BFu8c { unsigned int v1:16; empty v2; unsigned char v3:8; };
struct BFu16i_Sf_BFu8i { unsigned int v1:16; empty v2; unsigned int v3:8; };
struct BFu16i_Sf_BFu8ll { unsigned int v1:16; empty v2; unsigned long long v3:8; };
struct BFu16i_Sf_BFu8s { unsigned int v1:16; empty v2; unsigned short v3:8; };
struct BFu16i_Sf_BFu9i { unsigned int v1:16; empty v2; unsigned int v3:9; };
struct BFu16i_Sf_BFu9ll { unsigned int v1:16; empty v2; unsigned long long v3:9; };
struct BFu16i_Sf_BFu9s { unsigned int v1:16; empty v2; unsigned short v3:9; };
struct BFu16i_Sf_C { unsigned int v1:16; empty v2; char v3; };
struct BFu16i_Sf_D { unsigned int v1:16; empty v2; double v3; };
struct BFu16i_Sf_F { unsigned int v1:16; empty v2; float v3; };
struct BFu16i_Sf_I { unsigned int v1:16; empty v2; int v3; };
struct BFu16i_Sf_Ip { unsigned int v1:16; empty v2; int * v3; };
struct BFu16i_Sf_L { unsigned int v1:16; empty v2; long long v3; };
struct BFu16i_Sf_S { unsigned int v1:16; empty v2; short v3; };
struct BFu16i_Sf_Sf { unsigned int v1:16; empty v2; empty v3; };
struct BFu16i_Sf_Uc { unsigned int v1:16; empty v2; unsigned char v3; };
struct BFu16i_Sf_Ui { unsigned int v1:16; empty v2; unsigned int v3; };
struct BFu16i_Sf_Ul { unsigned int v1:16; empty v2; unsigned long long v3; };
struct BFu16i_Sf_Us { unsigned int v1:16; empty v2; unsigned short v3; };
struct BFu16i_Sf_Vp { unsigned int v1:16; empty v2; void * v3; };
struct BFu16i_Uc_Sf { unsigned int v1:16; unsigned char v2; empty v3; };
struct BFu16i_Ui_Sf { unsigned int v1:16; unsigned int v2; empty v3; };
struct BFu16i_Ul_Sf { unsigned int v1:16; unsigned long long v2; empty v3; };
struct BFu16i_Us_Sf { unsigned int v1:16; unsigned short v2; empty v3; };
struct BFu16i_Vp_Sf { unsigned int v1:16; void * v2; empty v3; };
struct BFu16ll_BFu15i_Sf { unsigned long long v1:16; unsigned int v2:15; empty v3; };
struct BFu16ll_BFu15ll_Sf { unsigned long long v1:16; unsigned long long v2:15; empty v3; };
struct BFu16ll_BFu15s_Sf { unsigned long long v1:16; unsigned short v2:15; empty v3; };
struct BFu16ll_BFu16i_Sf { unsigned long long v1:16; unsigned int v2:16; empty v3; };
struct BFu16ll_BFu16ll_Sf { unsigned long long v1:16; unsigned long long v2:16; empty v3; };
struct BFu16ll_BFu16s_Sf { unsigned long long v1:16; unsigned short v2:16; empty v3; };
struct BFu16ll_BFu17i_Sf { unsigned long long v1:16; unsigned int v2:17; empty v3; };
struct BFu16ll_BFu17ll_Sf { unsigned long long v1:16; unsigned long long v2:17; empty v3; };
struct BFu16ll_BFu1c_Sf { unsigned long long v1:16; unsigned char v2:1; empty v3; };
struct BFu16ll_BFu1i_Sf { unsigned long long v1:16; unsigned int v2:1; empty v3; };
struct BFu16ll_BFu1ll_Sf { unsigned long long v1:16; unsigned long long v2:1; empty v3; };
struct BFu16ll_BFu1s_Sf { unsigned long long v1:16; unsigned short v2:1; empty v3; };
struct BFu16ll_BFu31i_Sf { unsigned long long v1:16; unsigned int v2:31; empty v3; };
struct BFu16ll_BFu31ll_Sf { unsigned long long v1:16; unsigned long long v2:31; empty v3; };
struct BFu16ll_BFu32i_Sf { unsigned long long v1:16; unsigned int v2:32; empty v3; };
struct BFu16ll_BFu32ll_Sf { unsigned long long v1:16; unsigned long long v2:32; empty v3; };
struct BFu16ll_BFu33_Sf { unsigned long long v1:16; unsigned long long v2:33; empty v3; };
struct BFu16ll_BFu7c_Sf { unsigned long long v1:16; unsigned char v2:7; empty v3; };
struct BFu16ll_BFu7i_Sf { unsigned long long v1:16; unsigned int v2:7; empty v3; };
struct BFu16ll_BFu7ll_Sf { unsigned long long v1:16; unsigned long long v2:7; empty v3; };
struct BFu16ll_BFu7s_Sf { unsigned long long v1:16; unsigned short v2:7; empty v3; };
struct BFu16ll_BFu8c_Sf { unsigned long long v1:16; unsigned char v2:8; empty v3; };
struct BFu16ll_BFu8i_Sf { unsigned long long v1:16; unsigned int v2:8; empty v3; };
struct BFu16ll_BFu8ll_Sf { unsigned long long v1:16; unsigned long long v2:8; empty v3; };
struct BFu16ll_BFu8s_Sf { unsigned long long v1:16; unsigned short v2:8; empty v3; };
struct BFu16ll_BFu9i_Sf { unsigned long long v1:16; unsigned int v2:9; empty v3; };
struct BFu16ll_BFu9ll_Sf { unsigned long long v1:16; unsigned long long v2:9; empty v3; };
struct BFu16ll_BFu9s_Sf { unsigned long long v1:16; unsigned short v2:9; empty v3; };
struct BFu16ll_C_Sf { unsigned long long v1:16; char v2; empty v3; };
struct BFu16ll_D_Sf { unsigned long long v1:16; double v2; empty v3; };
struct BFu16ll_F_Sf { unsigned long long v1:16; float v2; empty v3; };
struct BFu16ll_I_Sf { unsigned long long v1:16; int v2; empty v3; };
struct BFu16ll_Ip_Sf { unsigned long long v1:16; int * v2; empty v3; };
struct BFu16ll_L_Sf { unsigned long long v1:16; long long v2; empty v3; };
struct BFu16ll_S_Sf { unsigned long long v1:16; short v2; empty v3; };
struct BFu16ll_Sf { unsigned long long v1:16; empty v2; };
struct BFu16ll_Sf_BFu15i { unsigned long long v1:16; empty v2; unsigned int v3:15; };
struct BFu16ll_Sf_BFu15ll { unsigned long long v1:16; empty v2; unsigned long long v3:15; };
struct BFu16ll_Sf_BFu15s { unsigned long long v1:16; empty v2; unsigned short v3:15; };
struct BFu16ll_Sf_BFu16i { unsigned long long v1:16; empty v2; unsigned int v3:16; };
struct BFu16ll_Sf_BFu16ll { unsigned long long v1:16; empty v2; unsigned long long v3:16; };
struct BFu16ll_Sf_BFu16s { unsigned long long v1:16; empty v2; unsigned short v3:16; };
struct BFu16ll_Sf_BFu17i { unsigned long long v1:16; empty v2; unsigned int v3:17; };
struct BFu16ll_Sf_BFu17ll { unsigned long long v1:16; empty v2; unsigned long long v3:17; };
struct BFu16ll_Sf_BFu1c { unsigned long long v1:16; empty v2; unsigned char v3:1; };
struct BFu16ll_Sf_BFu1i { unsigned long long v1:16; empty v2; unsigned int v3:1; };
struct BFu16ll_Sf_BFu1ll { unsigned long long v1:16; empty v2; unsigned long long v3:1; };
struct BFu16ll_Sf_BFu1s { unsigned long long v1:16; empty v2; unsigned short v3:1; };
struct BFu16ll_Sf_BFu31i { unsigned long long v1:16; empty v2; unsigned int v3:31; };
struct BFu16ll_Sf_BFu31ll { unsigned long long v1:16; empty v2; unsigned long long v3:31; };
struct BFu16ll_Sf_BFu32i { unsigned long long v1:16; empty v2; unsigned int v3:32; };
struct BFu16ll_Sf_BFu32ll { unsigned long long v1:16; empty v2; unsigned long long v3:32; };
struct BFu16ll_Sf_BFu33 { unsigned long long v1:16; empty v2; unsigned long long v3:33; };
struct BFu16ll_Sf_BFu7c { unsigned long long v1:16; empty v2; unsigned char v3:7; };
struct BFu16ll_Sf_BFu7i { unsigned long long v1:16; empty v2; unsigned int v3:7; };
struct BFu16ll_Sf_BFu7ll { unsigned long long v1:16; empty v2; unsigned long long v3:7; };
struct BFu16ll_Sf_BFu7s { unsigned long long v1:16; empty v2; unsigned short v3:7; };
struct BFu16ll_Sf_BFu8c { unsigned long long v1:16; empty v2; unsigned char v3:8; };
struct BFu16ll_Sf_BFu8i { unsigned long long v1:16; empty v2; unsigned int v3:8; };
struct BFu16ll_Sf_BFu8ll { unsigned long long v1:16; empty v2; unsigned long long v3:8; };
struct BFu16ll_Sf_BFu8s { unsigned long long v1:16; empty v2; unsigned short v3:8; };
struct BFu16ll_Sf_BFu9i { unsigned long long v1:16; empty v2; unsigned int v3:9; };
struct BFu16ll_Sf_BFu9ll { unsigned long long v1:16; empty v2; unsigned long long v3:9; };
struct BFu16ll_Sf_BFu9s { unsigned long long v1:16; empty v2; unsigned short v3:9; };
struct BFu16ll_Sf_C { unsigned long long v1:16; empty v2; char v3; };
struct BFu16ll_Sf_D { unsigned long long v1:16; empty v2; double v3; };
struct BFu16ll_Sf_F { unsigned long long v1:16; empty v2; float v3; };
struct BFu16ll_Sf_I { unsigned long long v1:16; empty v2; int v3; };
struct BFu16ll_Sf_Ip { unsigned long long v1:16; empty v2; int * v3; };
struct BFu16ll_Sf_L { unsigned long long v1:16; empty v2; long long v3; };
struct BFu16ll_Sf_S { unsigned long long v1:16; empty v2; short v3; };
struct BFu16ll_Sf_Sf { unsigned long long v1:16; empty v2; empty v3; };
struct BFu16ll_Sf_Uc { unsigned long long v1:16; empty v2; unsigned char v3; };
struct BFu16ll_Sf_Ui { unsigned long long v1:16; empty v2; unsigned int v3; };
struct BFu16ll_Sf_Ul { unsigned long long v1:16; empty v2; unsigned long long v3; };
struct BFu16ll_Sf_Us { unsigned long long v1:16; empty v2; unsigned short v3; };
struct BFu16ll_Sf_Vp { unsigned long long v1:16; empty v2; void * v3; };
struct BFu16ll_Uc_Sf { unsigned long long v1:16; unsigned char v2; empty v3; };
struct BFu16ll_Ui_Sf { unsigned long long v1:16; unsigned int v2; empty v3; };
struct BFu16ll_Ul_Sf { unsigned long long v1:16; unsigned long long v2; empty v3; };
struct BFu16ll_Us_Sf { unsigned long long v1:16; unsigned short v2; empty v3; };
struct BFu16ll_Vp_Sf { unsigned long long v1:16; void * v2; empty v3; };
struct BFu16s_BFu15i_Sf { unsigned short v1:16; unsigned int v2:15; empty v3; };
struct BFu16s_BFu15ll_Sf { unsigned short v1:16; unsigned long long v2:15; empty v3; };
struct BFu16s_BFu15s_Sf { unsigned short v1:16; unsigned short v2:15; empty v3; };
struct BFu16s_BFu16i_Sf { unsigned short v1:16; unsigned int v2:16; empty v3; };
struct BFu16s_BFu16ll_Sf { unsigned short v1:16; unsigned long long v2:16; empty v3; };
struct BFu16s_BFu16s_Sf { unsigned short v1:16; unsigned short v2:16; empty v3; };
struct BFu16s_BFu17i_Sf { unsigned short v1:16; unsigned int v2:17; empty v3; };
struct BFu16s_BFu17ll_Sf { unsigned short v1:16; unsigned long long v2:17; empty v3; };
struct BFu16s_BFu1c_Sf { unsigned short v1:16; unsigned char v2:1; empty v3; };
struct BFu16s_BFu1i_Sf { unsigned short v1:16; unsigned int v2:1; empty v3; };
struct BFu16s_BFu1ll_Sf { unsigned short v1:16; unsigned long long v2:1; empty v3; };
struct BFu16s_BFu1s_Sf { unsigned short v1:16; unsigned short v2:1; empty v3; };
struct BFu16s_BFu31i_Sf { unsigned short v1:16; unsigned int v2:31; empty v3; };
struct BFu16s_BFu31ll_Sf { unsigned short v1:16; unsigned long long v2:31; empty v3; };
struct BFu16s_BFu32i_Sf { unsigned short v1:16; unsigned int v2:32; empty v3; };
struct BFu16s_BFu32ll_Sf { unsigned short v1:16; unsigned long long v2:32; empty v3; };
struct BFu16s_BFu33_Sf { unsigned short v1:16; unsigned long long v2:33; empty v3; };
struct BFu16s_BFu7c_Sf { unsigned short v1:16; unsigned char v2:7; empty v3; };
struct BFu16s_BFu7i_Sf { unsigned short v1:16; unsigned int v2:7; empty v3; };
struct BFu16s_BFu7ll_Sf { unsigned short v1:16; unsigned long long v2:7; empty v3; };
struct BFu16s_BFu7s_Sf { unsigned short v1:16; unsigned short v2:7; empty v3; };
struct BFu16s_BFu8c_Sf { unsigned short v1:16; unsigned char v2:8; empty v3; };
struct BFu16s_BFu8i_Sf { unsigned short v1:16; unsigned int v2:8; empty v3; };
struct BFu16s_BFu8ll_Sf { unsigned short v1:16; unsigned long long v2:8; empty v3; };
struct BFu16s_BFu8s_Sf { unsigned short v1:16; unsigned short v2:8; empty v3; };
struct BFu16s_BFu9i_Sf { unsigned short v1:16; unsigned int v2:9; empty v3; };
struct BFu16s_BFu9ll_Sf { unsigned short v1:16; unsigned long long v2:9; empty v3; };
struct BFu16s_BFu9s_Sf { unsigned short v1:16; unsigned short v2:9; empty v3; };
struct BFu16s_C_Sf { unsigned short v1:16; char v2; empty v3; };
struct BFu16s_D_Sf { unsigned short v1:16; double v2; empty v3; };
struct BFu16s_F_Sf { unsigned short v1:16; float v2; empty v3; };
struct BFu16s_I_Sf { unsigned short v1:16; int v2; empty v3; };
struct BFu16s_Ip_Sf { unsigned short v1:16; int * v2; empty v3; };
struct BFu16s_L_Sf { unsigned short v1:16; long long v2; empty v3; };
struct BFu16s_S_Sf { unsigned short v1:16; short v2; empty v3; };
struct BFu16s_Sf { unsigned short v1:16; empty v2; };
struct BFu16s_Sf_BFu15i { unsigned short v1:16; empty v2; unsigned int v3:15; };
struct BFu16s_Sf_BFu15ll { unsigned short v1:16; empty v2; unsigned long long v3:15; };
struct BFu16s_Sf_BFu15s { unsigned short v1:16; empty v2; unsigned short v3:15; };
struct BFu16s_Sf_BFu16i { unsigned short v1:16; empty v2; unsigned int v3:16; };
struct BFu16s_Sf_BFu16ll { unsigned short v1:16; empty v2; unsigned long long v3:16; };
struct BFu16s_Sf_BFu16s { unsigned short v1:16; empty v2; unsigned short v3:16; };
struct BFu16s_Sf_BFu17i { unsigned short v1:16; empty v2; unsigned int v3:17; };
struct BFu16s_Sf_BFu17ll { unsigned short v1:16; empty v2; unsigned long long v3:17; };
struct BFu16s_Sf_BFu1c { unsigned short v1:16; empty v2; unsigned char v3:1; };
struct BFu16s_Sf_BFu1i { unsigned short v1:16; empty v2; unsigned int v3:1; };
struct BFu16s_Sf_BFu1ll { unsigned short v1:16; empty v2; unsigned long long v3:1; };
struct BFu16s_Sf_BFu1s { unsigned short v1:16; empty v2; unsigned short v3:1; };
struct BFu16s_Sf_BFu31i { unsigned short v1:16; empty v2; unsigned int v3:31; };
struct BFu16s_Sf_BFu31ll { unsigned short v1:16; empty v2; unsigned long long v3:31; };
struct BFu16s_Sf_BFu32i { unsigned short v1:16; empty v2; unsigned int v3:32; };
struct BFu16s_Sf_BFu32ll { unsigned short v1:16; empty v2; unsigned long long v3:32; };
struct BFu16s_Sf_BFu33 { unsigned short v1:16; empty v2; unsigned long long v3:33; };
struct BFu16s_Sf_BFu7c { unsigned short v1:16; empty v2; unsigned char v3:7; };
struct BFu16s_Sf_BFu7i { unsigned short v1:16; empty v2; unsigned int v3:7; };
struct BFu16s_Sf_BFu7ll { unsigned short v1:16; empty v2; unsigned long long v3:7; };
struct BFu16s_Sf_BFu7s { unsigned short v1:16; empty v2; unsigned short v3:7; };
struct BFu16s_Sf_BFu8c { unsigned short v1:16; empty v2; unsigned char v3:8; };
struct BFu16s_Sf_BFu8i { unsigned short v1:16; empty v2; unsigned int v3:8; };
struct BFu16s_Sf_BFu8ll { unsigned short v1:16; empty v2; unsigned long long v3:8; };
struct BFu16s_Sf_BFu8s { unsigned short v1:16; empty v2; unsigned short v3:8; };
struct BFu16s_Sf_BFu9i { unsigned short v1:16; empty v2; unsigned int v3:9; };
struct BFu16s_Sf_BFu9ll { unsigned short v1:16; empty v2; unsigned long long v3:9; };
struct BFu16s_Sf_BFu9s { unsigned short v1:16; empty v2; unsigned short v3:9; };
struct BFu16s_Sf_C { unsigned short v1:16; empty v2; char v3; };
struct BFu16s_Sf_D { unsigned short v1:16; empty v2; double v3; };
struct BFu16s_Sf_F { unsigned short v1:16; empty v2; float v3; };
struct BFu16s_Sf_I { unsigned short v1:16; empty v2; int v3; };
struct BFu16s_Sf_Ip { unsigned short v1:16; empty v2; int * v3; };
struct BFu16s_Sf_L { unsigned short v1:16; empty v2; long long v3; };
struct BFu16s_Sf_S { unsigned short v1:16; empty v2; short v3; };
struct BFu16s_Sf_Sf { unsigned short v1:16; empty v2; empty v3; };
struct BFu16s_Sf_Uc { unsigned short v1:16; empty v2; unsigned char v3; };
struct BFu16s_Sf_Ui { unsigned short v1:16; empty v2; unsigned int v3; };
struct BFu16s_Sf_Ul { unsigned short v1:16; empty v2; unsigned long long v3; };
struct BFu16s_Sf_Us { unsigned short v1:16; empty v2; unsigned short v3; };
struct BFu16s_Sf_Vp { unsigned short v1:16; empty v2; void * v3; };
struct BFu16s_Uc_Sf { unsigned short v1:16; unsigned char v2; empty v3; };
struct BFu16s_Ui_Sf { unsigned short v1:16; unsigned int v2; empty v3; };
struct BFu16s_Ul_Sf { unsigned short v1:16; unsigned long long v2; empty v3; };
struct BFu16s_Us_Sf { unsigned short v1:16; unsigned short v2; empty v3; };
struct BFu16s_Vp_Sf { unsigned short v1:16; void * v2; empty v3; };
struct BFu17i_BFu15i_Sf { unsigned int v1:17; unsigned int v2:15; empty v3; };
struct BFu17i_BFu15ll_Sf { unsigned int v1:17; unsigned long long v2:15; empty v3; };
struct BFu17i_BFu15s_Sf { unsigned int v1:17; unsigned short v2:15; empty v3; };
struct BFu17i_BFu16i_Sf { unsigned int v1:17; unsigned int v2:16; empty v3; };
struct BFu17i_BFu16ll_Sf { unsigned int v1:17; unsigned long long v2:16; empty v3; };
struct BFu17i_BFu16s_Sf { unsigned int v1:17; unsigned short v2:16; empty v3; };
struct BFu17i_BFu17i_Sf { unsigned int v1:17; unsigned int v2:17; empty v3; };
struct BFu17i_BFu17ll_Sf { unsigned int v1:17; unsigned long long v2:17; empty v3; };
struct BFu17i_BFu1c_Sf { unsigned int v1:17; unsigned char v2:1; empty v3; };
struct BFu17i_BFu1i_Sf { unsigned int v1:17; unsigned int v2:1; empty v3; };
struct BFu17i_BFu1ll_Sf { unsigned int v1:17; unsigned long long v2:1; empty v3; };
struct BFu17i_BFu1s_Sf { unsigned int v1:17; unsigned short v2:1; empty v3; };
struct BFu17i_BFu31i_Sf { unsigned int v1:17; unsigned int v2:31; empty v3; };
struct BFu17i_BFu31ll_Sf { unsigned int v1:17; unsigned long long v2:31; empty v3; };
struct BFu17i_BFu32i_Sf { unsigned int v1:17; unsigned int v2:32; empty v3; };
struct BFu17i_BFu32ll_Sf { unsigned int v1:17; unsigned long long v2:32; empty v3; };
struct BFu17i_BFu33_Sf { unsigned int v1:17; unsigned long long v2:33; empty v3; };
struct BFu17i_BFu7c_Sf { unsigned int v1:17; unsigned char v2:7; empty v3; };
struct BFu17i_BFu7i_Sf { unsigned int v1:17; unsigned int v2:7; empty v3; };
struct BFu17i_BFu7ll_Sf { unsigned int v1:17; unsigned long long v2:7; empty v3; };
struct BFu17i_BFu7s_Sf { unsigned int v1:17; unsigned short v2:7; empty v3; };
struct BFu17i_BFu8c_Sf { unsigned int v1:17; unsigned char v2:8; empty v3; };
struct BFu17i_BFu8i_Sf { unsigned int v1:17; unsigned int v2:8; empty v3; };
struct BFu17i_BFu8ll_Sf { unsigned int v1:17; unsigned long long v2:8; empty v3; };
struct BFu17i_BFu8s_Sf { unsigned int v1:17; unsigned short v2:8; empty v3; };
struct BFu17i_BFu9i_Sf { unsigned int v1:17; unsigned int v2:9; empty v3; };
struct BFu17i_BFu9ll_Sf { unsigned int v1:17; unsigned long long v2:9; empty v3; };
struct BFu17i_BFu9s_Sf { unsigned int v1:17; unsigned short v2:9; empty v3; };
struct BFu17i_C_Sf { unsigned int v1:17; char v2; empty v3; };
struct BFu17i_D_Sf { unsigned int v1:17; double v2; empty v3; };
struct BFu17i_F_Sf { unsigned int v1:17; float v2; empty v3; };
struct BFu17i_I_Sf { unsigned int v1:17; int v2; empty v3; };
struct BFu17i_Ip_Sf { unsigned int v1:17; int * v2; empty v3; };
struct BFu17i_L_Sf { unsigned int v1:17; long long v2; empty v3; };
struct BFu17i_S_Sf { unsigned int v1:17; short v2; empty v3; };
struct BFu17i_Sf { unsigned int v1:17; empty v2; };
struct BFu17i_Sf_BFu15i { unsigned int v1:17; empty v2; unsigned int v3:15; };
struct BFu17i_Sf_BFu15ll { unsigned int v1:17; empty v2; unsigned long long v3:15; };
struct BFu17i_Sf_BFu15s { unsigned int v1:17; empty v2; unsigned short v3:15; };
struct BFu17i_Sf_BFu16i { unsigned int v1:17; empty v2; unsigned int v3:16; };
struct BFu17i_Sf_BFu16ll { unsigned int v1:17; empty v2; unsigned long long v3:16; };
struct BFu17i_Sf_BFu16s { unsigned int v1:17; empty v2; unsigned short v3:16; };
struct BFu17i_Sf_BFu17i { unsigned int v1:17; empty v2; unsigned int v3:17; };
struct BFu17i_Sf_BFu17ll { unsigned int v1:17; empty v2; unsigned long long v3:17; };
struct BFu17i_Sf_BFu1c { unsigned int v1:17; empty v2; unsigned char v3:1; };
struct BFu17i_Sf_BFu1i { unsigned int v1:17; empty v2; unsigned int v3:1; };
struct BFu17i_Sf_BFu1ll { unsigned int v1:17; empty v2; unsigned long long v3:1; };
struct BFu17i_Sf_BFu1s { unsigned int v1:17; empty v2; unsigned short v3:1; };
struct BFu17i_Sf_BFu31i { unsigned int v1:17; empty v2; unsigned int v3:31; };
struct BFu17i_Sf_BFu31ll { unsigned int v1:17; empty v2; unsigned long long v3:31; };
struct BFu17i_Sf_BFu32i { unsigned int v1:17; empty v2; unsigned int v3:32; };
struct BFu17i_Sf_BFu32ll { unsigned int v1:17; empty v2; unsigned long long v3:32; };
struct BFu17i_Sf_BFu33 { unsigned int v1:17; empty v2; unsigned long long v3:33; };
struct BFu17i_Sf_BFu7c { unsigned int v1:17; empty v2; unsigned char v3:7; };
struct BFu17i_Sf_BFu7i { unsigned int v1:17; empty v2; unsigned int v3:7; };
struct BFu17i_Sf_BFu7ll { unsigned int v1:17; empty v2; unsigned long long v3:7; };
struct BFu17i_Sf_BFu7s { unsigned int v1:17; empty v2; unsigned short v3:7; };
struct BFu17i_Sf_BFu8c { unsigned int v1:17; empty v2; unsigned char v3:8; };
struct BFu17i_Sf_BFu8i { unsigned int v1:17; empty v2; unsigned int v3:8; };
struct BFu17i_Sf_BFu8ll { unsigned int v1:17; empty v2; unsigned long long v3:8; };
struct BFu17i_Sf_BFu8s { unsigned int v1:17; empty v2; unsigned short v3:8; };
struct BFu17i_Sf_BFu9i { unsigned int v1:17; empty v2; unsigned int v3:9; };
struct BFu17i_Sf_BFu9ll { unsigned int v1:17; empty v2; unsigned long long v3:9; };
struct BFu17i_Sf_BFu9s { unsigned int v1:17; empty v2; unsigned short v3:9; };
struct BFu17i_Sf_C { unsigned int v1:17; empty v2; char v3; };
struct BFu17i_Sf_D { unsigned int v1:17; empty v2; double v3; };
struct BFu17i_Sf_F { unsigned int v1:17; empty v2; float v3; };
struct BFu17i_Sf_I { unsigned int v1:17; empty v2; int v3; };
struct BFu17i_Sf_Ip { unsigned int v1:17; empty v2; int * v3; };
struct BFu17i_Sf_L { unsigned int v1:17; empty v2; long long v3; };
struct BFu17i_Sf_S { unsigned int v1:17; empty v2; short v3; };
struct BFu17i_Sf_Sf { unsigned int v1:17; empty v2; empty v3; };
struct BFu17i_Sf_Uc { unsigned int v1:17; empty v2; unsigned char v3; };
struct BFu17i_Sf_Ui { unsigned int v1:17; empty v2; unsigned int v3; };
struct BFu17i_Sf_Ul { unsigned int v1:17; empty v2; unsigned long long v3; };
struct BFu17i_Sf_Us { unsigned int v1:17; empty v2; unsigned short v3; };
struct BFu17i_Sf_Vp { unsigned int v1:17; empty v2; void * v3; };
struct BFu17i_Uc_Sf { unsigned int v1:17; unsigned char v2; empty v3; };
struct BFu17i_Ui_Sf { unsigned int v1:17; unsigned int v2; empty v3; };
struct BFu17i_Ul_Sf { unsigned int v1:17; unsigned long long v2; empty v3; };
struct BFu17i_Us_Sf { unsigned int v1:17; unsigned short v2; empty v3; };
struct BFu17i_Vp_Sf { unsigned int v1:17; void * v2; empty v3; };
struct BFu17ll_BFu15i_Sf { unsigned long long v1:17; unsigned int v2:15; empty v3; };
struct BFu17ll_BFu15ll_Sf { unsigned long long v1:17; unsigned long long v2:15; empty v3; };
struct BFu17ll_BFu15s_Sf { unsigned long long v1:17; unsigned short v2:15; empty v3; };
struct BFu17ll_BFu16i_Sf { unsigned long long v1:17; unsigned int v2:16; empty v3; };
struct BFu17ll_BFu16ll_Sf { unsigned long long v1:17; unsigned long long v2:16; empty v3; };
struct BFu17ll_BFu16s_Sf { unsigned long long v1:17; unsigned short v2:16; empty v3; };
struct BFu17ll_BFu17i_Sf { unsigned long long v1:17; unsigned int v2:17; empty v3; };
struct BFu17ll_BFu17ll_Sf { unsigned long long v1:17; unsigned long long v2:17; empty v3; };
struct BFu17ll_BFu1c_Sf { unsigned long long v1:17; unsigned char v2:1; empty v3; };
struct BFu17ll_BFu1i_Sf { unsigned long long v1:17; unsigned int v2:1; empty v3; };
struct BFu17ll_BFu1ll_Sf { unsigned long long v1:17; unsigned long long v2:1; empty v3; };
struct BFu17ll_BFu1s_Sf { unsigned long long v1:17; unsigned short v2:1; empty v3; };
struct BFu17ll_BFu31i_Sf { unsigned long long v1:17; unsigned int v2:31; empty v3; };
struct BFu17ll_BFu31ll_Sf { unsigned long long v1:17; unsigned long long v2:31; empty v3; };
struct BFu17ll_BFu32i_Sf { unsigned long long v1:17; unsigned int v2:32; empty v3; };
struct BFu17ll_BFu32ll_Sf { unsigned long long v1:17; unsigned long long v2:32; empty v3; };
struct BFu17ll_BFu33_Sf { unsigned long long v1:17; unsigned long long v2:33; empty v3; };
struct BFu17ll_BFu7c_Sf { unsigned long long v1:17; unsigned char v2:7; empty v3; };
struct BFu17ll_BFu7i_Sf { unsigned long long v1:17; unsigned int v2:7; empty v3; };
struct BFu17ll_BFu7ll_Sf { unsigned long long v1:17; unsigned long long v2:7; empty v3; };
struct BFu17ll_BFu7s_Sf { unsigned long long v1:17; unsigned short v2:7; empty v3; };
struct BFu17ll_BFu8c_Sf { unsigned long long v1:17; unsigned char v2:8; empty v3; };
struct BFu17ll_BFu8i_Sf { unsigned long long v1:17; unsigned int v2:8; empty v3; };
struct BFu17ll_BFu8ll_Sf { unsigned long long v1:17; unsigned long long v2:8; empty v3; };
struct BFu17ll_BFu8s_Sf { unsigned long long v1:17; unsigned short v2:8; empty v3; };
struct BFu17ll_BFu9i_Sf { unsigned long long v1:17; unsigned int v2:9; empty v3; };
struct BFu17ll_BFu9ll_Sf { unsigned long long v1:17; unsigned long long v2:9; empty v3; };
struct BFu17ll_BFu9s_Sf { unsigned long long v1:17; unsigned short v2:9; empty v3; };
struct BFu17ll_C_Sf { unsigned long long v1:17; char v2; empty v3; };
struct BFu17ll_D_Sf { unsigned long long v1:17; double v2; empty v3; };
struct BFu17ll_F_Sf { unsigned long long v1:17; float v2; empty v3; };
struct BFu17ll_I_Sf { unsigned long long v1:17; int v2; empty v3; };
struct BFu17ll_Ip_Sf { unsigned long long v1:17; int * v2; empty v3; };
struct BFu17ll_L_Sf { unsigned long long v1:17; long long v2; empty v3; };
struct BFu17ll_S_Sf { unsigned long long v1:17; short v2; empty v3; };
struct BFu17ll_Sf { unsigned long long v1:17; empty v2; };
struct BFu17ll_Sf_BFu15i { unsigned long long v1:17; empty v2; unsigned int v3:15; };
struct BFu17ll_Sf_BFu15ll { unsigned long long v1:17; empty v2; unsigned long long v3:15; };
struct BFu17ll_Sf_BFu15s { unsigned long long v1:17; empty v2; unsigned short v3:15; };
struct BFu17ll_Sf_BFu16i { unsigned long long v1:17; empty v2; unsigned int v3:16; };
struct BFu17ll_Sf_BFu16ll { unsigned long long v1:17; empty v2; unsigned long long v3:16; };
struct BFu17ll_Sf_BFu16s { unsigned long long v1:17; empty v2; unsigned short v3:16; };
struct BFu17ll_Sf_BFu17i { unsigned long long v1:17; empty v2; unsigned int v3:17; };
struct BFu17ll_Sf_BFu17ll { unsigned long long v1:17; empty v2; unsigned long long v3:17; };
struct BFu17ll_Sf_BFu1c { unsigned long long v1:17; empty v2; unsigned char v3:1; };
struct BFu17ll_Sf_BFu1i { unsigned long long v1:17; empty v2; unsigned int v3:1; };
struct BFu17ll_Sf_BFu1ll { unsigned long long v1:17; empty v2; unsigned long long v3:1; };
struct BFu17ll_Sf_BFu1s { unsigned long long v1:17; empty v2; unsigned short v3:1; };
struct BFu17ll_Sf_BFu31i { unsigned long long v1:17; empty v2; unsigned int v3:31; };
struct BFu17ll_Sf_BFu31ll { unsigned long long v1:17; empty v2; unsigned long long v3:31; };
struct BFu17ll_Sf_BFu32i { unsigned long long v1:17; empty v2; unsigned int v3:32; };
struct BFu17ll_Sf_BFu32ll { unsigned long long v1:17; empty v2; unsigned long long v3:32; };
struct BFu17ll_Sf_BFu33 { unsigned long long v1:17; empty v2; unsigned long long v3:33; };
struct BFu17ll_Sf_BFu7c { unsigned long long v1:17; empty v2; unsigned char v3:7; };
struct BFu17ll_Sf_BFu7i { unsigned long long v1:17; empty v2; unsigned int v3:7; };
struct BFu17ll_Sf_BFu7ll { unsigned long long v1:17; empty v2; unsigned long long v3:7; };
struct BFu17ll_Sf_BFu7s { unsigned long long v1:17; empty v2; unsigned short v3:7; };
struct BFu17ll_Sf_BFu8c { unsigned long long v1:17; empty v2; unsigned char v3:8; };
struct BFu17ll_Sf_BFu8i { unsigned long long v1:17; empty v2; unsigned int v3:8; };
struct BFu17ll_Sf_BFu8ll { unsigned long long v1:17; empty v2; unsigned long long v3:8; };
struct BFu17ll_Sf_BFu8s { unsigned long long v1:17; empty v2; unsigned short v3:8; };
struct BFu17ll_Sf_BFu9i { unsigned long long v1:17; empty v2; unsigned int v3:9; };
struct BFu17ll_Sf_BFu9ll { unsigned long long v1:17; empty v2; unsigned long long v3:9; };
struct BFu17ll_Sf_BFu9s { unsigned long long v1:17; empty v2; unsigned short v3:9; };
struct BFu17ll_Sf_C { unsigned long long v1:17; empty v2; char v3; };
struct BFu17ll_Sf_D { unsigned long long v1:17; empty v2; double v3; };
struct BFu17ll_Sf_F { unsigned long long v1:17; empty v2; float v3; };
struct BFu17ll_Sf_I { unsigned long long v1:17; empty v2; int v3; };
struct BFu17ll_Sf_Ip { unsigned long long v1:17; empty v2; int * v3; };
struct BFu17ll_Sf_L { unsigned long long v1:17; empty v2; long long v3; };
struct BFu17ll_Sf_S { unsigned long long v1:17; empty v2; short v3; };
struct BFu17ll_Sf_Sf { unsigned long long v1:17; empty v2; empty v3; };
struct BFu17ll_Sf_Uc { unsigned long long v1:17; empty v2; unsigned char v3; };
struct BFu17ll_Sf_Ui { unsigned long long v1:17; empty v2; unsigned int v3; };
struct BFu17ll_Sf_Ul { unsigned long long v1:17; empty v2; unsigned long long v3; };
struct BFu17ll_Sf_Us { unsigned long long v1:17; empty v2; unsigned short v3; };
struct BFu17ll_Sf_Vp { unsigned long long v1:17; empty v2; void * v3; };
struct BFu17ll_Uc_Sf { unsigned long long v1:17; unsigned char v2; empty v3; };
struct BFu17ll_Ui_Sf { unsigned long long v1:17; unsigned int v2; empty v3; };
struct BFu17ll_Ul_Sf { unsigned long long v1:17; unsigned long long v2; empty v3; };
struct BFu17ll_Us_Sf { unsigned long long v1:17; unsigned short v2; empty v3; };
struct BFu17ll_Vp_Sf { unsigned long long v1:17; void * v2; empty v3; };
struct BFu1c_BFu15i_Sf { unsigned char v1:1; unsigned int v2:15; empty v3; };
struct BFu1c_BFu15ll_Sf { unsigned char v1:1; unsigned long long v2:15; empty v3; };
struct BFu1c_BFu15s_Sf { unsigned char v1:1; unsigned short v2:15; empty v3; };
struct BFu1c_BFu16i_Sf { unsigned char v1:1; unsigned int v2:16; empty v3; };
struct BFu1c_BFu16ll_Sf { unsigned char v1:1; unsigned long long v2:16; empty v3; };
struct BFu1c_BFu16s_Sf { unsigned char v1:1; unsigned short v2:16; empty v3; };
struct BFu1c_BFu17i_Sf { unsigned char v1:1; unsigned int v2:17; empty v3; };
struct BFu1c_BFu17ll_Sf { unsigned char v1:1; unsigned long long v2:17; empty v3; };
struct BFu1c_BFu1c_Sf { unsigned char v1:1; unsigned char v2:1; empty v3; };
struct BFu1c_BFu1i_Sf { unsigned char v1:1; unsigned int v2:1; empty v3; };
struct BFu1c_BFu1ll_Sf { unsigned char v1:1; unsigned long long v2:1; empty v3; };
struct BFu1c_BFu1s_Sf { unsigned char v1:1; unsigned short v2:1; empty v3; };
struct BFu1c_BFu31i_Sf { unsigned char v1:1; unsigned int v2:31; empty v3; };
struct BFu1c_BFu31ll_Sf { unsigned char v1:1; unsigned long long v2:31; empty v3; };
struct BFu1c_BFu32i_Sf { unsigned char v1:1; unsigned int v2:32; empty v3; };
struct BFu1c_BFu32ll_Sf { unsigned char v1:1; unsigned long long v2:32; empty v3; };
struct BFu1c_BFu33_Sf { unsigned char v1:1; unsigned long long v2:33; empty v3; };
struct BFu1c_BFu7c_Sf { unsigned char v1:1; unsigned char v2:7; empty v3; };
struct BFu1c_BFu7i_Sf { unsigned char v1:1; unsigned int v2:7; empty v3; };
struct BFu1c_BFu7ll_Sf { unsigned char v1:1; unsigned long long v2:7; empty v3; };
struct BFu1c_BFu7s_Sf { unsigned char v1:1; unsigned short v2:7; empty v3; };
struct BFu1c_BFu8c_Sf { unsigned char v1:1; unsigned char v2:8; empty v3; };
struct BFu1c_BFu8i_Sf { unsigned char v1:1; unsigned int v2:8; empty v3; };
struct BFu1c_BFu8ll_Sf { unsigned char v1:1; unsigned long long v2:8; empty v3; };
struct BFu1c_BFu8s_Sf { unsigned char v1:1; unsigned short v2:8; empty v3; };
struct BFu1c_BFu9i_Sf { unsigned char v1:1; unsigned int v2:9; empty v3; };
struct BFu1c_BFu9ll_Sf { unsigned char v1:1; unsigned long long v2:9; empty v3; };
struct BFu1c_BFu9s_Sf { unsigned char v1:1; unsigned short v2:9; empty v3; };
struct BFu1c_C_Sf { unsigned char v1:1; char v2; empty v3; };
struct BFu1c_D_Sf { unsigned char v1:1; double v2; empty v3; };
struct BFu1c_F_Sf { unsigned char v1:1; float v2; empty v3; };
struct BFu1c_I_Sf { unsigned char v1:1; int v2; empty v3; };
struct BFu1c_Ip_Sf { unsigned char v1:1; int * v2; empty v3; };
struct BFu1c_L_Sf { unsigned char v1:1; long long v2; empty v3; };
struct BFu1c_S_Sf { unsigned char v1:1; short v2; empty v3; };
struct BFu1c_Sf { unsigned char v1:1; empty v2; };
struct BFu1c_Sf_BFu15i { unsigned char v1:1; empty v2; unsigned int v3:15; };
struct BFu1c_Sf_BFu15ll { unsigned char v1:1; empty v2; unsigned long long v3:15; };
struct BFu1c_Sf_BFu15s { unsigned char v1:1; empty v2; unsigned short v3:15; };
struct BFu1c_Sf_BFu16i { unsigned char v1:1; empty v2; unsigned int v3:16; };
struct BFu1c_Sf_BFu16ll { unsigned char v1:1; empty v2; unsigned long long v3:16; };
struct BFu1c_Sf_BFu16s { unsigned char v1:1; empty v2; unsigned short v3:16; };
struct BFu1c_Sf_BFu17i { unsigned char v1:1; empty v2; unsigned int v3:17; };
struct BFu1c_Sf_BFu17ll { unsigned char v1:1; empty v2; unsigned long long v3:17; };
struct BFu1c_Sf_BFu1c { unsigned char v1:1; empty v2; unsigned char v3:1; };
struct BFu1c_Sf_BFu1i { unsigned char v1:1; empty v2; unsigned int v3:1; };
struct BFu1c_Sf_BFu1ll { unsigned char v1:1; empty v2; unsigned long long v3:1; };
struct BFu1c_Sf_BFu1s { unsigned char v1:1; empty v2; unsigned short v3:1; };
struct BFu1c_Sf_BFu31i { unsigned char v1:1; empty v2; unsigned int v3:31; };
struct BFu1c_Sf_BFu31ll { unsigned char v1:1; empty v2; unsigned long long v3:31; };
struct BFu1c_Sf_BFu32i { unsigned char v1:1; empty v2; unsigned int v3:32; };
struct BFu1c_Sf_BFu32ll { unsigned char v1:1; empty v2; unsigned long long v3:32; };
struct BFu1c_Sf_BFu33 { unsigned char v1:1; empty v2; unsigned long long v3:33; };
struct BFu1c_Sf_BFu7c { unsigned char v1:1; empty v2; unsigned char v3:7; };
struct BFu1c_Sf_BFu7i { unsigned char v1:1; empty v2; unsigned int v3:7; };
struct BFu1c_Sf_BFu7ll { unsigned char v1:1; empty v2; unsigned long long v3:7; };
struct BFu1c_Sf_BFu7s { unsigned char v1:1; empty v2; unsigned short v3:7; };
struct BFu1c_Sf_BFu8c { unsigned char v1:1; empty v2; unsigned char v3:8; };
struct BFu1c_Sf_BFu8i { unsigned char v1:1; empty v2; unsigned int v3:8; };
struct BFu1c_Sf_BFu8ll { unsigned char v1:1; empty v2; unsigned long long v3:8; };
struct BFu1c_Sf_BFu8s { unsigned char v1:1; empty v2; unsigned short v3:8; };
struct BFu1c_Sf_BFu9i { unsigned char v1:1; empty v2; unsigned int v3:9; };
struct BFu1c_Sf_BFu9ll { unsigned char v1:1; empty v2; unsigned long long v3:9; };
struct BFu1c_Sf_BFu9s { unsigned char v1:1; empty v2; unsigned short v3:9; };
struct BFu1c_Sf_C { unsigned char v1:1; empty v2; char v3; };
struct BFu1c_Sf_D { unsigned char v1:1; empty v2; double v3; };
struct BFu1c_Sf_F { unsigned char v1:1; empty v2; float v3; };
struct BFu1c_Sf_I { unsigned char v1:1; empty v2; int v3; };
struct BFu1c_Sf_Ip { unsigned char v1:1; empty v2; int * v3; };
struct BFu1c_Sf_L { unsigned char v1:1; empty v2; long long v3; };
struct BFu1c_Sf_S { unsigned char v1:1; empty v2; short v3; };
struct BFu1c_Sf_Sf { unsigned char v1:1; empty v2; empty v3; };
struct BFu1c_Sf_Uc { unsigned char v1:1; empty v2; unsigned char v3; };
struct BFu1c_Sf_Ui { unsigned char v1:1; empty v2; unsigned int v3; };
struct BFu1c_Sf_Ul { unsigned char v1:1; empty v2; unsigned long long v3; };
struct BFu1c_Sf_Us { unsigned char v1:1; empty v2; unsigned short v3; };
struct BFu1c_Sf_Vp { unsigned char v1:1; empty v2; void * v3; };
struct BFu1c_Uc_Sf { unsigned char v1:1; unsigned char v2; empty v3; };
struct BFu1c_Ui_Sf { unsigned char v1:1; unsigned int v2; empty v3; };
struct BFu1c_Ul_Sf { unsigned char v1:1; unsigned long long v2; empty v3; };
struct BFu1c_Us_Sf { unsigned char v1:1; unsigned short v2; empty v3; };
struct BFu1c_Vp_Sf { unsigned char v1:1; void * v2; empty v3; };
struct BFu1i_BFu15i_Sf { unsigned int v1:1; unsigned int v2:15; empty v3; };
struct BFu1i_BFu15ll_Sf { unsigned int v1:1; unsigned long long v2:15; empty v3; };
struct BFu1i_BFu15s_Sf { unsigned int v1:1; unsigned short v2:15; empty v3; };
struct BFu1i_BFu16i_Sf { unsigned int v1:1; unsigned int v2:16; empty v3; };
struct BFu1i_BFu16ll_Sf { unsigned int v1:1; unsigned long long v2:16; empty v3; };
struct BFu1i_BFu16s_Sf { unsigned int v1:1; unsigned short v2:16; empty v3; };
struct BFu1i_BFu17i_Sf { unsigned int v1:1; unsigned int v2:17; empty v3; };
struct BFu1i_BFu17ll_Sf { unsigned int v1:1; unsigned long long v2:17; empty v3; };
struct BFu1i_BFu1c_Sf { unsigned int v1:1; unsigned char v2:1; empty v3; };
struct BFu1i_BFu1i_Sf { unsigned int v1:1; unsigned int v2:1; empty v3; };
struct BFu1i_BFu1ll_Sf { unsigned int v1:1; unsigned long long v2:1; empty v3; };
struct BFu1i_BFu1s_Sf { unsigned int v1:1; unsigned short v2:1; empty v3; };
struct BFu1i_BFu31i_Sf { unsigned int v1:1; unsigned int v2:31; empty v3; };
struct BFu1i_BFu31ll_Sf { unsigned int v1:1; unsigned long long v2:31; empty v3; };
struct BFu1i_BFu32i_Sf { unsigned int v1:1; unsigned int v2:32; empty v3; };
struct BFu1i_BFu32ll_Sf { unsigned int v1:1; unsigned long long v2:32; empty v3; };
struct BFu1i_BFu33_Sf { unsigned int v1:1; unsigned long long v2:33; empty v3; };
struct BFu1i_BFu7c_Sf { unsigned int v1:1; unsigned char v2:7; empty v3; };
struct BFu1i_BFu7i_Sf { unsigned int v1:1; unsigned int v2:7; empty v3; };
struct BFu1i_BFu7ll_Sf { unsigned int v1:1; unsigned long long v2:7; empty v3; };
struct BFu1i_BFu7s_Sf { unsigned int v1:1; unsigned short v2:7; empty v3; };
struct BFu1i_BFu8c_Sf { unsigned int v1:1; unsigned char v2:8; empty v3; };
struct BFu1i_BFu8i_Sf { unsigned int v1:1; unsigned int v2:8; empty v3; };
struct BFu1i_BFu8ll_Sf { unsigned int v1:1; unsigned long long v2:8; empty v3; };
struct BFu1i_BFu8s_Sf { unsigned int v1:1; unsigned short v2:8; empty v3; };
struct BFu1i_BFu9i_Sf { unsigned int v1:1; unsigned int v2:9; empty v3; };
struct BFu1i_BFu9ll_Sf { unsigned int v1:1; unsigned long long v2:9; empty v3; };
struct BFu1i_BFu9s_Sf { unsigned int v1:1; unsigned short v2:9; empty v3; };
struct BFu1i_C_Sf { unsigned int v1:1; char v2; empty v3; };
struct BFu1i_D_Sf { unsigned int v1:1; double v2; empty v3; };
struct BFu1i_F_Sf { unsigned int v1:1; float v2; empty v3; };
struct BFu1i_I_Sf { unsigned int v1:1; int v2; empty v3; };
struct BFu1i_Ip_Sf { unsigned int v1:1; int * v2; empty v3; };
struct BFu1i_L_Sf { unsigned int v1:1; long long v2; empty v3; };
struct BFu1i_S_Sf { unsigned int v1:1; short v2; empty v3; };
struct BFu1i_Sf { unsigned int v1:1; empty v2; };
struct BFu1i_Sf_BFu15i { unsigned int v1:1; empty v2; unsigned int v3:15; };
struct BFu1i_Sf_BFu15ll { unsigned int v1:1; empty v2; unsigned long long v3:15; };
struct BFu1i_Sf_BFu15s { unsigned int v1:1; empty v2; unsigned short v3:15; };
struct BFu1i_Sf_BFu16i { unsigned int v1:1; empty v2; unsigned int v3:16; };
struct BFu1i_Sf_BFu16ll { unsigned int v1:1; empty v2; unsigned long long v3:16; };
struct BFu1i_Sf_BFu16s { unsigned int v1:1; empty v2; unsigned short v3:16; };
struct BFu1i_Sf_BFu17i { unsigned int v1:1; empty v2; unsigned int v3:17; };
struct BFu1i_Sf_BFu17ll { unsigned int v1:1; empty v2; unsigned long long v3:17; };
struct BFu1i_Sf_BFu1c { unsigned int v1:1; empty v2; unsigned char v3:1; };
struct BFu1i_Sf_BFu1i { unsigned int v1:1; empty v2; unsigned int v3:1; };
struct BFu1i_Sf_BFu1ll { unsigned int v1:1; empty v2; unsigned long long v3:1; };
struct BFu1i_Sf_BFu1s { unsigned int v1:1; empty v2; unsigned short v3:1; };
struct BFu1i_Sf_BFu31i { unsigned int v1:1; empty v2; unsigned int v3:31; };
struct BFu1i_Sf_BFu31ll { unsigned int v1:1; empty v2; unsigned long long v3:31; };
struct BFu1i_Sf_BFu32i { unsigned int v1:1; empty v2; unsigned int v3:32; };
struct BFu1i_Sf_BFu32ll { unsigned int v1:1; empty v2; unsigned long long v3:32; };
struct BFu1i_Sf_BFu33 { unsigned int v1:1; empty v2; unsigned long long v3:33; };
struct BFu1i_Sf_BFu7c { unsigned int v1:1; empty v2; unsigned char v3:7; };
struct BFu1i_Sf_BFu7i { unsigned int v1:1; empty v2; unsigned int v3:7; };
struct BFu1i_Sf_BFu7ll { unsigned int v1:1; empty v2; unsigned long long v3:7; };
struct BFu1i_Sf_BFu7s { unsigned int v1:1; empty v2; unsigned short v3:7; };
struct BFu1i_Sf_BFu8c { unsigned int v1:1; empty v2; unsigned char v3:8; };
struct BFu1i_Sf_BFu8i { unsigned int v1:1; empty v2; unsigned int v3:8; };
struct BFu1i_Sf_BFu8ll { unsigned int v1:1; empty v2; unsigned long long v3:8; };
struct BFu1i_Sf_BFu8s { unsigned int v1:1; empty v2; unsigned short v3:8; };
struct BFu1i_Sf_BFu9i { unsigned int v1:1; empty v2; unsigned int v3:9; };
struct BFu1i_Sf_BFu9ll { unsigned int v1:1; empty v2; unsigned long long v3:9; };
struct BFu1i_Sf_BFu9s { unsigned int v1:1; empty v2; unsigned short v3:9; };
struct BFu1i_Sf_C { unsigned int v1:1; empty v2; char v3; };
struct BFu1i_Sf_D { unsigned int v1:1; empty v2; double v3; };
struct BFu1i_Sf_F { unsigned int v1:1; empty v2; float v3; };
struct BFu1i_Sf_I { unsigned int v1:1; empty v2; int v3; };
struct BFu1i_Sf_Ip { unsigned int v1:1; empty v2; int * v3; };
struct BFu1i_Sf_L { unsigned int v1:1; empty v2; long long v3; };
struct BFu1i_Sf_S { unsigned int v1:1; empty v2; short v3; };
struct BFu1i_Sf_Sf { unsigned int v1:1; empty v2; empty v3; };
struct BFu1i_Sf_Uc { unsigned int v1:1; empty v2; unsigned char v3; };
struct BFu1i_Sf_Ui { unsigned int v1:1; empty v2; unsigned int v3; };
struct BFu1i_Sf_Ul { unsigned int v1:1; empty v2; unsigned long long v3; };
struct BFu1i_Sf_Us { unsigned int v1:1; empty v2; unsigned short v3; };
struct BFu1i_Sf_Vp { unsigned int v1:1; empty v2; void * v3; };
struct BFu1i_Uc_Sf { unsigned int v1:1; unsigned char v2; empty v3; };
struct BFu1i_Ui_Sf { unsigned int v1:1; unsigned int v2; empty v3; };
struct BFu1i_Ul_Sf { unsigned int v1:1; unsigned long long v2; empty v3; };
struct BFu1i_Us_Sf { unsigned int v1:1; unsigned short v2; empty v3; };
struct BFu1i_Vp_Sf { unsigned int v1:1; void * v2; empty v3; };
struct BFu1ll_BFu15i_Sf { unsigned long long v1:1; unsigned int v2:15; empty v3; };
struct BFu1ll_BFu15ll_Sf { unsigned long long v1:1; unsigned long long v2:15; empty v3; };
struct BFu1ll_BFu15s_Sf { unsigned long long v1:1; unsigned short v2:15; empty v3; };
struct BFu1ll_BFu16i_Sf { unsigned long long v1:1; unsigned int v2:16; empty v3; };
struct BFu1ll_BFu16ll_Sf { unsigned long long v1:1; unsigned long long v2:16; empty v3; };
struct BFu1ll_BFu16s_Sf { unsigned long long v1:1; unsigned short v2:16; empty v3; };
struct BFu1ll_BFu17i_Sf { unsigned long long v1:1; unsigned int v2:17; empty v3; };
struct BFu1ll_BFu17ll_Sf { unsigned long long v1:1; unsigned long long v2:17; empty v3; };
struct BFu1ll_BFu1c_Sf { unsigned long long v1:1; unsigned char v2:1; empty v3; };
struct BFu1ll_BFu1i_Sf { unsigned long long v1:1; unsigned int v2:1; empty v3; };
struct BFu1ll_BFu1ll_Sf { unsigned long long v1:1; unsigned long long v2:1; empty v3; };
struct BFu1ll_BFu1s_Sf { unsigned long long v1:1; unsigned short v2:1; empty v3; };
struct BFu1ll_BFu31i_Sf { unsigned long long v1:1; unsigned int v2:31; empty v3; };
struct BFu1ll_BFu31ll_Sf { unsigned long long v1:1; unsigned long long v2:31; empty v3; };
struct BFu1ll_BFu32i_Sf { unsigned long long v1:1; unsigned int v2:32; empty v3; };
struct BFu1ll_BFu32ll_Sf { unsigned long long v1:1; unsigned long long v2:32; empty v3; };
struct BFu1ll_BFu33_Sf { unsigned long long v1:1; unsigned long long v2:33; empty v3; };
struct BFu1ll_BFu7c_Sf { unsigned long long v1:1; unsigned char v2:7; empty v3; };
struct BFu1ll_BFu7i_Sf { unsigned long long v1:1; unsigned int v2:7; empty v3; };
struct BFu1ll_BFu7ll_Sf { unsigned long long v1:1; unsigned long long v2:7; empty v3; };
struct BFu1ll_BFu7s_Sf { unsigned long long v1:1; unsigned short v2:7; empty v3; };
struct BFu1ll_BFu8c_Sf { unsigned long long v1:1; unsigned char v2:8; empty v3; };
struct BFu1ll_BFu8i_Sf { unsigned long long v1:1; unsigned int v2:8; empty v3; };
struct BFu1ll_BFu8ll_Sf { unsigned long long v1:1; unsigned long long v2:8; empty v3; };
struct BFu1ll_BFu8s_Sf { unsigned long long v1:1; unsigned short v2:8; empty v3; };
struct BFu1ll_BFu9i_Sf { unsigned long long v1:1; unsigned int v2:9; empty v3; };
struct BFu1ll_BFu9ll_Sf { unsigned long long v1:1; unsigned long long v2:9; empty v3; };
struct BFu1ll_BFu9s_Sf { unsigned long long v1:1; unsigned short v2:9; empty v3; };
struct BFu1ll_C_Sf { unsigned long long v1:1; char v2; empty v3; };
struct BFu1ll_D_Sf { unsigned long long v1:1; double v2; empty v3; };
struct BFu1ll_F_Sf { unsigned long long v1:1; float v2; empty v3; };
struct BFu1ll_I_Sf { unsigned long long v1:1; int v2; empty v3; };
struct BFu1ll_Ip_Sf { unsigned long long v1:1; int * v2; empty v3; };
struct BFu1ll_L_Sf { unsigned long long v1:1; long long v2; empty v3; };
struct BFu1ll_S_Sf { unsigned long long v1:1; short v2; empty v3; };
struct BFu1ll_Sf { unsigned long long v1:1; empty v2; };
struct BFu1ll_Sf_BFu15i { unsigned long long v1:1; empty v2; unsigned int v3:15; };
struct BFu1ll_Sf_BFu15ll { unsigned long long v1:1; empty v2; unsigned long long v3:15; };
struct BFu1ll_Sf_BFu15s { unsigned long long v1:1; empty v2; unsigned short v3:15; };
struct BFu1ll_Sf_BFu16i { unsigned long long v1:1; empty v2; unsigned int v3:16; };
struct BFu1ll_Sf_BFu16ll { unsigned long long v1:1; empty v2; unsigned long long v3:16; };
struct BFu1ll_Sf_BFu16s { unsigned long long v1:1; empty v2; unsigned short v3:16; };
struct BFu1ll_Sf_BFu17i { unsigned long long v1:1; empty v2; unsigned int v3:17; };
struct BFu1ll_Sf_BFu17ll { unsigned long long v1:1; empty v2; unsigned long long v3:17; };
struct BFu1ll_Sf_BFu1c { unsigned long long v1:1; empty v2; unsigned char v3:1; };
struct BFu1ll_Sf_BFu1i { unsigned long long v1:1; empty v2; unsigned int v3:1; };
struct BFu1ll_Sf_BFu1ll { unsigned long long v1:1; empty v2; unsigned long long v3:1; };
struct BFu1ll_Sf_BFu1s { unsigned long long v1:1; empty v2; unsigned short v3:1; };
struct BFu1ll_Sf_BFu31i { unsigned long long v1:1; empty v2; unsigned int v3:31; };
struct BFu1ll_Sf_BFu31ll { unsigned long long v1:1; empty v2; unsigned long long v3:31; };
struct BFu1ll_Sf_BFu32i { unsigned long long v1:1; empty v2; unsigned int v3:32; };
struct BFu1ll_Sf_BFu32ll { unsigned long long v1:1; empty v2; unsigned long long v3:32; };
struct BFu1ll_Sf_BFu33 { unsigned long long v1:1; empty v2; unsigned long long v3:33; };
struct BFu1ll_Sf_BFu7c { unsigned long long v1:1; empty v2; unsigned char v3:7; };
struct BFu1ll_Sf_BFu7i { unsigned long long v1:1; empty v2; unsigned int v3:7; };
struct BFu1ll_Sf_BFu7ll { unsigned long long v1:1; empty v2; unsigned long long v3:7; };
struct BFu1ll_Sf_BFu7s { unsigned long long v1:1; empty v2; unsigned short v3:7; };
struct BFu1ll_Sf_BFu8c { unsigned long long v1:1; empty v2; unsigned char v3:8; };
struct BFu1ll_Sf_BFu8i { unsigned long long v1:1; empty v2; unsigned int v3:8; };
struct BFu1ll_Sf_BFu8ll { unsigned long long v1:1; empty v2; unsigned long long v3:8; };
struct BFu1ll_Sf_BFu8s { unsigned long long v1:1; empty v2; unsigned short v3:8; };
struct BFu1ll_Sf_BFu9i { unsigned long long v1:1; empty v2; unsigned int v3:9; };
struct BFu1ll_Sf_BFu9ll { unsigned long long v1:1; empty v2; unsigned long long v3:9; };
struct BFu1ll_Sf_BFu9s { unsigned long long v1:1; empty v2; unsigned short v3:9; };
struct BFu1ll_Sf_C { unsigned long long v1:1; empty v2; char v3; };
struct BFu1ll_Sf_D { unsigned long long v1:1; empty v2; double v3; };
struct BFu1ll_Sf_F { unsigned long long v1:1; empty v2; float v3; };
struct BFu1ll_Sf_I { unsigned long long v1:1; empty v2; int v3; };
struct BFu1ll_Sf_Ip { unsigned long long v1:1; empty v2; int * v3; };
struct BFu1ll_Sf_L { unsigned long long v1:1; empty v2; long long v3; };
struct BFu1ll_Sf_S { unsigned long long v1:1; empty v2; short v3; };
struct BFu1ll_Sf_Sf { unsigned long long v1:1; empty v2; empty v3; };
struct BFu1ll_Sf_Uc { unsigned long long v1:1; empty v2; unsigned char v3; };
struct BFu1ll_Sf_Ui { unsigned long long v1:1; empty v2; unsigned int v3; };
struct BFu1ll_Sf_Ul { unsigned long long v1:1; empty v2; unsigned long long v3; };
struct BFu1ll_Sf_Us { unsigned long long v1:1; empty v2; unsigned short v3; };
struct BFu1ll_Sf_Vp { unsigned long long v1:1; empty v2; void * v3; };
struct BFu1ll_Uc_Sf { unsigned long long v1:1; unsigned char v2; empty v3; };
struct BFu1ll_Ui_Sf { unsigned long long v1:1; unsigned int v2; empty v3; };
struct BFu1ll_Ul_Sf { unsigned long long v1:1; unsigned long long v2; empty v3; };
struct BFu1ll_Us_Sf { unsigned long long v1:1; unsigned short v2; empty v3; };
struct BFu1ll_Vp_Sf { unsigned long long v1:1; void * v2; empty v3; };
struct BFu1s_BFu15i_Sf { unsigned short v1:1; unsigned int v2:15; empty v3; };
struct BFu1s_BFu15ll_Sf { unsigned short v1:1; unsigned long long v2:15; empty v3; };
struct BFu1s_BFu15s_Sf { unsigned short v1:1; unsigned short v2:15; empty v3; };
struct BFu1s_BFu16i_Sf { unsigned short v1:1; unsigned int v2:16; empty v3; };
struct BFu1s_BFu16ll_Sf { unsigned short v1:1; unsigned long long v2:16; empty v3; };
struct BFu1s_BFu16s_Sf { unsigned short v1:1; unsigned short v2:16; empty v3; };
struct BFu1s_BFu17i_Sf { unsigned short v1:1; unsigned int v2:17; empty v3; };
struct BFu1s_BFu17ll_Sf { unsigned short v1:1; unsigned long long v2:17; empty v3; };
struct BFu1s_BFu1c_Sf { unsigned short v1:1; unsigned char v2:1; empty v3; };
struct BFu1s_BFu1i_Sf { unsigned short v1:1; unsigned int v2:1; empty v3; };
struct BFu1s_BFu1ll_Sf { unsigned short v1:1; unsigned long long v2:1; empty v3; };
struct BFu1s_BFu1s_Sf { unsigned short v1:1; unsigned short v2:1; empty v3; };
struct BFu1s_BFu31i_Sf { unsigned short v1:1; unsigned int v2:31; empty v3; };
struct BFu1s_BFu31ll_Sf { unsigned short v1:1; unsigned long long v2:31; empty v3; };
struct BFu1s_BFu32i_Sf { unsigned short v1:1; unsigned int v2:32; empty v3; };
struct BFu1s_BFu32ll_Sf { unsigned short v1:1; unsigned long long v2:32; empty v3; };
struct BFu1s_BFu33_Sf { unsigned short v1:1; unsigned long long v2:33; empty v3; };
struct BFu1s_BFu7c_Sf { unsigned short v1:1; unsigned char v2:7; empty v3; };
struct BFu1s_BFu7i_Sf { unsigned short v1:1; unsigned int v2:7; empty v3; };
struct BFu1s_BFu7ll_Sf { unsigned short v1:1; unsigned long long v2:7; empty v3; };
struct BFu1s_BFu7s_Sf { unsigned short v1:1; unsigned short v2:7; empty v3; };
struct BFu1s_BFu8c_Sf { unsigned short v1:1; unsigned char v2:8; empty v3; };
struct BFu1s_BFu8i_Sf { unsigned short v1:1; unsigned int v2:8; empty v3; };
struct BFu1s_BFu8ll_Sf { unsigned short v1:1; unsigned long long v2:8; empty v3; };
struct BFu1s_BFu8s_Sf { unsigned short v1:1; unsigned short v2:8; empty v3; };
struct BFu1s_BFu9i_Sf { unsigned short v1:1; unsigned int v2:9; empty v3; };
struct BFu1s_BFu9ll_Sf { unsigned short v1:1; unsigned long long v2:9; empty v3; };
struct BFu1s_BFu9s_Sf { unsigned short v1:1; unsigned short v2:9; empty v3; };
struct BFu1s_C_Sf { unsigned short v1:1; char v2; empty v3; };
struct BFu1s_D_Sf { unsigned short v1:1; double v2; empty v3; };
struct BFu1s_F_Sf { unsigned short v1:1; float v2; empty v3; };
struct BFu1s_I_Sf { unsigned short v1:1; int v2; empty v3; };
struct BFu1s_Ip_Sf { unsigned short v1:1; int * v2; empty v3; };
struct BFu1s_L_Sf { unsigned short v1:1; long long v2; empty v3; };
struct BFu1s_S_Sf { unsigned short v1:1; short v2; empty v3; };
struct BFu1s_Sf { unsigned short v1:1; empty v2; };
struct BFu1s_Sf_BFu15i { unsigned short v1:1; empty v2; unsigned int v3:15; };
struct BFu1s_Sf_BFu15ll { unsigned short v1:1; empty v2; unsigned long long v3:15; };
struct BFu1s_Sf_BFu15s { unsigned short v1:1; empty v2; unsigned short v3:15; };
struct BFu1s_Sf_BFu16i { unsigned short v1:1; empty v2; unsigned int v3:16; };
struct BFu1s_Sf_BFu16ll { unsigned short v1:1; empty v2; unsigned long long v3:16; };
struct BFu1s_Sf_BFu16s { unsigned short v1:1; empty v2; unsigned short v3:16; };
struct BFu1s_Sf_BFu17i { unsigned short v1:1; empty v2; unsigned int v3:17; };
struct BFu1s_Sf_BFu17ll { unsigned short v1:1; empty v2; unsigned long long v3:17; };
struct BFu1s_Sf_BFu1c { unsigned short v1:1; empty v2; unsigned char v3:1; };
struct BFu1s_Sf_BFu1i { unsigned short v1:1; empty v2; unsigned int v3:1; };
struct BFu1s_Sf_BFu1ll { unsigned short v1:1; empty v2; unsigned long long v3:1; };
struct BFu1s_Sf_BFu1s { unsigned short v1:1; empty v2; unsigned short v3:1; };
struct BFu1s_Sf_BFu31i { unsigned short v1:1; empty v2; unsigned int v3:31; };
struct BFu1s_Sf_BFu31ll { unsigned short v1:1; empty v2; unsigned long long v3:31; };
struct BFu1s_Sf_BFu32i { unsigned short v1:1; empty v2; unsigned int v3:32; };
struct BFu1s_Sf_BFu32ll { unsigned short v1:1; empty v2; unsigned long long v3:32; };
struct BFu1s_Sf_BFu33 { unsigned short v1:1; empty v2; unsigned long long v3:33; };
struct BFu1s_Sf_BFu7c { unsigned short v1:1; empty v2; unsigned char v3:7; };
struct BFu1s_Sf_BFu7i { unsigned short v1:1; empty v2; unsigned int v3:7; };
struct BFu1s_Sf_BFu7ll { unsigned short v1:1; empty v2; unsigned long long v3:7; };
struct BFu1s_Sf_BFu7s { unsigned short v1:1; empty v2; unsigned short v3:7; };
struct BFu1s_Sf_BFu8c { unsigned short v1:1; empty v2; unsigned char v3:8; };
struct BFu1s_Sf_BFu8i { unsigned short v1:1; empty v2; unsigned int v3:8; };
struct BFu1s_Sf_BFu8ll { unsigned short v1:1; empty v2; unsigned long long v3:8; };
struct BFu1s_Sf_BFu8s { unsigned short v1:1; empty v2; unsigned short v3:8; };
struct BFu1s_Sf_BFu9i { unsigned short v1:1; empty v2; unsigned int v3:9; };
struct BFu1s_Sf_BFu9ll { unsigned short v1:1; empty v2; unsigned long long v3:9; };
struct BFu1s_Sf_BFu9s { unsigned short v1:1; empty v2; unsigned short v3:9; };
struct BFu1s_Sf_C { unsigned short v1:1; empty v2; char v3; };
struct BFu1s_Sf_D { unsigned short v1:1; empty v2; double v3; };
struct BFu1s_Sf_F { unsigned short v1:1; empty v2; float v3; };
struct BFu1s_Sf_I { unsigned short v1:1; empty v2; int v3; };
struct BFu1s_Sf_Ip { unsigned short v1:1; empty v2; int * v3; };
struct BFu1s_Sf_L { unsigned short v1:1; empty v2; long long v3; };
struct BFu1s_Sf_S { unsigned short v1:1; empty v2; short v3; };
struct BFu1s_Sf_Sf { unsigned short v1:1; empty v2; empty v3; };
struct BFu1s_Sf_Uc { unsigned short v1:1; empty v2; unsigned char v3; };
struct BFu1s_Sf_Ui { unsigned short v1:1; empty v2; unsigned int v3; };
struct BFu1s_Sf_Ul { unsigned short v1:1; empty v2; unsigned long long v3; };
struct BFu1s_Sf_Us { unsigned short v1:1; empty v2; unsigned short v3; };
struct BFu1s_Sf_Vp { unsigned short v1:1; empty v2; void * v3; };
struct BFu1s_Uc_Sf { unsigned short v1:1; unsigned char v2; empty v3; };
struct BFu1s_Ui_Sf { unsigned short v1:1; unsigned int v2; empty v3; };
struct BFu1s_Ul_Sf { unsigned short v1:1; unsigned long long v2; empty v3; };
struct BFu1s_Us_Sf { unsigned short v1:1; unsigned short v2; empty v3; };
struct BFu1s_Vp_Sf { unsigned short v1:1; void * v2; empty v3; };
struct BFu31i_BFu15i_Sf { unsigned int v1:31; unsigned int v2:15; empty v3; };
struct BFu31i_BFu15ll_Sf { unsigned int v1:31; unsigned long long v2:15; empty v3; };
struct BFu31i_BFu15s_Sf { unsigned int v1:31; unsigned short v2:15; empty v3; };
struct BFu31i_BFu16i_Sf { unsigned int v1:31; unsigned int v2:16; empty v3; };
struct BFu31i_BFu16ll_Sf { unsigned int v1:31; unsigned long long v2:16; empty v3; };
struct BFu31i_BFu16s_Sf { unsigned int v1:31; unsigned short v2:16; empty v3; };
struct BFu31i_BFu17i_Sf { unsigned int v1:31; unsigned int v2:17; empty v3; };
struct BFu31i_BFu17ll_Sf { unsigned int v1:31; unsigned long long v2:17; empty v3; };
struct BFu31i_BFu1c_Sf { unsigned int v1:31; unsigned char v2:1; empty v3; };
struct BFu31i_BFu1i_Sf { unsigned int v1:31; unsigned int v2:1; empty v3; };
struct BFu31i_BFu1ll_Sf { unsigned int v1:31; unsigned long long v2:1; empty v3; };
struct BFu31i_BFu1s_Sf { unsigned int v1:31; unsigned short v2:1; empty v3; };
struct BFu31i_BFu31i_Sf { unsigned int v1:31; unsigned int v2:31; empty v3; };
#endif // __cplusplus
#ifdef __cplusplus


static void Test_empty()
{
  {
    init_simple_test("empty");
    empty lv;
    check2(sizeof(lv), 1, "sizeof(empty)");
    check2(__alignof__(lv), 1, "__alignof__(empty)");
  }
}
static Arrange_To_Call_Me vempty(Test_empty, "empty", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu15s()
{
  {
    init_simple_test("aSf_BFu16i_BFu15s");
    static aSf_BFu16i_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aSf_BFu16i_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aSf_BFu16i_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu15s(Test_aSf_BFu16i_BFu15s, "aSf_BFu16i_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu16i()
{
  {
    init_simple_test("aSf_BFu16i_BFu16i");
    static aSf_BFu16i_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aSf_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu16i(Test_aSf_BFu16i_BFu16i, "aSf_BFu16i_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu16ll()
{
  {
    init_simple_test("aSf_BFu16i_BFu16ll");
    static aSf_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aSf_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu16ll(Test_aSf_BFu16i_BFu16ll, "aSf_BFu16i_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu16s()
{
  {
    init_simple_test("aSf_BFu16i_BFu16s");
    static aSf_BFu16i_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aSf_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu16s(Test_aSf_BFu16i_BFu16s, "aSf_BFu16i_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu17i()
{
  {
    init_simple_test("aSf_BFu16i_BFu17i");
    static aSf_BFu16i_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu16i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aSf_BFu16i_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aSf_BFu16i_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu17i(Test_aSf_BFu16i_BFu17i, "aSf_BFu16i_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu17ll()
{
  {
    init_simple_test("aSf_BFu16i_BFu17ll");
    static aSf_BFu16i_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu16i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aSf_BFu16i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aSf_BFu16i_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu17ll(Test_aSf_BFu16i_BFu17ll, "aSf_BFu16i_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu1c()
{
  {
    init_simple_test("aSf_BFu16i_BFu1c");
    static aSf_BFu16i_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu1c");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_BFu16i_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu1c(Test_aSf_BFu16i_BFu1c, "aSf_BFu16i_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu1i()
{
  {
    init_simple_test("aSf_BFu16i_BFu1i");
    static aSf_BFu16i_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu1i");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_BFu16i_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu1i(Test_aSf_BFu16i_BFu1i, "aSf_BFu16i_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu1ll()
{
  {
    init_simple_test("aSf_BFu16i_BFu1ll");
    static aSf_BFu16i_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu1ll");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_BFu16i_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu1ll(Test_aSf_BFu16i_BFu1ll, "aSf_BFu16i_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu1s()
{
  {
    init_simple_test("aSf_BFu16i_BFu1s");
    static aSf_BFu16i_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu1s");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_BFu16i_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu1s(Test_aSf_BFu16i_BFu1s, "aSf_BFu16i_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu31i()
{
  {
    init_simple_test("aSf_BFu16i_BFu31i");
    static aSf_BFu16i_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aSf_BFu16i_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aSf_BFu16i_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu31i(Test_aSf_BFu16i_BFu31i, "aSf_BFu16i_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu31ll()
{
  {
    init_simple_test("aSf_BFu16i_BFu31ll");
    static aSf_BFu16i_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aSf_BFu16i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aSf_BFu16i_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu31ll(Test_aSf_BFu16i_BFu31ll, "aSf_BFu16i_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu32i()
{
  {
    init_simple_test("aSf_BFu16i_BFu32i");
    static aSf_BFu16i_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aSf_BFu16i_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aSf_BFu16i_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu32i(Test_aSf_BFu16i_BFu32i, "aSf_BFu16i_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu32ll()
{
  {
    init_simple_test("aSf_BFu16i_BFu32ll");
    static aSf_BFu16i_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aSf_BFu16i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aSf_BFu16i_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu32ll(Test_aSf_BFu16i_BFu32ll, "aSf_BFu16i_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu33()
{
  {
    init_simple_test("aSf_BFu16i_BFu33");
    static aSf_BFu16i_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu16i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aSf_BFu16i_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aSf_BFu16i_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu33(Test_aSf_BFu16i_BFu33, "aSf_BFu16i_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu7c()
{
  {
    init_simple_test("aSf_BFu16i_BFu7c");
    static aSf_BFu16i_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_BFu16i_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_BFu16i_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu7c(Test_aSf_BFu16i_BFu7c, "aSf_BFu16i_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu7i()
{
  {
    init_simple_test("aSf_BFu16i_BFu7i");
    static aSf_BFu16i_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_BFu16i_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_BFu16i_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu7i(Test_aSf_BFu16i_BFu7i, "aSf_BFu16i_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu7ll()
{
  {
    init_simple_test("aSf_BFu16i_BFu7ll");
    static aSf_BFu16i_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_BFu16i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_BFu16i_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu7ll(Test_aSf_BFu16i_BFu7ll, "aSf_BFu16i_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu7s()
{
  {
    init_simple_test("aSf_BFu16i_BFu7s");
    static aSf_BFu16i_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_BFu16i_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_BFu16i_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu7s(Test_aSf_BFu16i_BFu7s, "aSf_BFu16i_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu8c()
{
  {
    init_simple_test("aSf_BFu16i_BFu8c");
    static aSf_BFu16i_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_BFu16i_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_BFu16i_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu8c(Test_aSf_BFu16i_BFu8c, "aSf_BFu16i_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu8i()
{
  {
    init_simple_test("aSf_BFu16i_BFu8i");
    static aSf_BFu16i_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_BFu16i_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_BFu16i_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu8i(Test_aSf_BFu16i_BFu8i, "aSf_BFu16i_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu8ll()
{
  {
    init_simple_test("aSf_BFu16i_BFu8ll");
    static aSf_BFu16i_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_BFu16i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_BFu16i_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu8ll(Test_aSf_BFu16i_BFu8ll, "aSf_BFu16i_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu8s()
{
  {
    init_simple_test("aSf_BFu16i_BFu8s");
    static aSf_BFu16i_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_BFu16i_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_BFu16i_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu8s(Test_aSf_BFu16i_BFu8s, "aSf_BFu16i_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu9i()
{
  {
    init_simple_test("aSf_BFu16i_BFu9i");
    static aSf_BFu16i_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aSf_BFu16i_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aSf_BFu16i_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu9i(Test_aSf_BFu16i_BFu9i, "aSf_BFu16i_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu9ll()
{
  {
    init_simple_test("aSf_BFu16i_BFu9ll");
    static aSf_BFu16i_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aSf_BFu16i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aSf_BFu16i_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu9ll(Test_aSf_BFu16i_BFu9ll, "aSf_BFu16i_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_BFu9s()
{
  {
    init_simple_test("aSf_BFu16i_BFu9s");
    static aSf_BFu16i_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aSf_BFu16i_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aSf_BFu16i_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_BFu9s(Test_aSf_BFu16i_BFu9s, "aSf_BFu16i_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_C()
{
  {
    init_simple_test("aSf_BFu16i_C");
    static aSf_BFu16i_C lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_C");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_C");
    check_field_offset(lv, v3, 3, "aSf_BFu16i_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_C(Test_aSf_BFu16i_C, "aSf_BFu16i_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_D()
{
  {
    init_simple_test("aSf_BFu16i_D");
    static aSf_BFu16i_D lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu16i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_D");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_D");
    check_field_offset(lv, v3, 3, "aSf_BFu16i_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_D(Test_aSf_BFu16i_D, "aSf_BFu16i_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_F()
{
  {
    init_simple_test("aSf_BFu16i_F");
    static aSf_BFu16i_F lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_F");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_F");
    check_field_offset(lv, v3, 3, "aSf_BFu16i_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_F(Test_aSf_BFu16i_F, "aSf_BFu16i_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_I()
{
  {
    init_simple_test("aSf_BFu16i_I");
    static aSf_BFu16i_I lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_I");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_I");
    check_field_offset(lv, v3, 3, "aSf_BFu16i_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_I(Test_aSf_BFu16i_I, "aSf_BFu16i_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_Ip()
{
  {
    init_simple_test("aSf_BFu16i_Ip");
    static aSf_BFu16i_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_BFu16i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_Ip");
    check_field_offset(lv, v3, 3, "aSf_BFu16i_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_Ip(Test_aSf_BFu16i_Ip, "aSf_BFu16i_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_L()
{
  {
    init_simple_test("aSf_BFu16i_L");
    static aSf_BFu16i_L lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu16i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_L");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_L");
    check_field_offset(lv, v3, 3, "aSf_BFu16i_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_L(Test_aSf_BFu16i_L, "aSf_BFu16i_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_S()
{
  {
    init_simple_test("aSf_BFu16i_S");
    static aSf_BFu16i_S lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_S");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_S");
    check_field_offset(lv, v3, 3, "aSf_BFu16i_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_S(Test_aSf_BFu16i_S, "aSf_BFu16i_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_Sf()
{
  {
    init_simple_test("aSf_BFu16i_Sf");
    static aSf_BFu16i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_Sf");
    check_field_offset(lv, v3, 3, "aSf_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_Sf(Test_aSf_BFu16i_Sf, "aSf_BFu16i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_Uc()
{
  {
    init_simple_test("aSf_BFu16i_Uc");
    static aSf_BFu16i_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_Uc");
    check_field_offset(lv, v3, 3, "aSf_BFu16i_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_Uc(Test_aSf_BFu16i_Uc, "aSf_BFu16i_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_Ui()
{
  {
    init_simple_test("aSf_BFu16i_Ui");
    static aSf_BFu16i_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_Ui");
    check_field_offset(lv, v3, 3, "aSf_BFu16i_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_Ui(Test_aSf_BFu16i_Ui, "aSf_BFu16i_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_Ul()
{
  {
    init_simple_test("aSf_BFu16i_Ul");
    static aSf_BFu16i_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu16i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_Ul");
    check_field_offset(lv, v3, 3, "aSf_BFu16i_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_Ul(Test_aSf_BFu16i_Ul, "aSf_BFu16i_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_Us()
{
  {
    init_simple_test("aSf_BFu16i_Us");
    static aSf_BFu16i_Us lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_Us");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_Us");
    check_field_offset(lv, v3, 3, "aSf_BFu16i_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_Us(Test_aSf_BFu16i_Us, "aSf_BFu16i_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16i_Vp()
{
  {
    init_simple_test("aSf_BFu16i_Vp");
    static aSf_BFu16i_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_BFu16i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16i_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu16i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16i_Vp");
    check_field_offset(lv, v3, 3, "aSf_BFu16i_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16i_Vp(Test_aSf_BFu16i_Vp, "aSf_BFu16i_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll()
{
  {
    init_simple_test("aSf_BFu16ll");
    static aSf_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll(Test_aSf_BFu16ll, "aSf_BFu16ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu15i()
{
  {
    init_simple_test("aSf_BFu16ll_BFu15i");
    static aSf_BFu16ll_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aSf_BFu16ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aSf_BFu16ll_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu15i(Test_aSf_BFu16ll_BFu15i, "aSf_BFu16ll_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu15ll()
{
  {
    init_simple_test("aSf_BFu16ll_BFu15ll");
    static aSf_BFu16ll_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aSf_BFu16ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aSf_BFu16ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu15ll(Test_aSf_BFu16ll_BFu15ll, "aSf_BFu16ll_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu15s()
{
  {
    init_simple_test("aSf_BFu16ll_BFu15s");
    static aSf_BFu16ll_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aSf_BFu16ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aSf_BFu16ll_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu15s(Test_aSf_BFu16ll_BFu15s, "aSf_BFu16ll_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu16i()
{
  {
    init_simple_test("aSf_BFu16ll_BFu16i");
    static aSf_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aSf_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu16i(Test_aSf_BFu16ll_BFu16i, "aSf_BFu16ll_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aSf_BFu16ll_BFu16ll");
    static aSf_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aSf_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu16ll(Test_aSf_BFu16ll_BFu16ll, "aSf_BFu16ll_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu16s()
{
  {
    init_simple_test("aSf_BFu16ll_BFu16s");
    static aSf_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aSf_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu16s(Test_aSf_BFu16ll_BFu16s, "aSf_BFu16ll_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu17i()
{
  {
    init_simple_test("aSf_BFu16ll_BFu17i");
    static aSf_BFu16ll_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu16ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aSf_BFu16ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aSf_BFu16ll_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu17i(Test_aSf_BFu16ll_BFu17i, "aSf_BFu16ll_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu17ll()
{
  {
    init_simple_test("aSf_BFu16ll_BFu17ll");
    static aSf_BFu16ll_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu16ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aSf_BFu16ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aSf_BFu16ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu17ll(Test_aSf_BFu16ll_BFu17ll, "aSf_BFu16ll_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu1c()
{
  {
    init_simple_test("aSf_BFu16ll_BFu1c");
    static aSf_BFu16ll_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu1c");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_BFu16ll_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu1c(Test_aSf_BFu16ll_BFu1c, "aSf_BFu16ll_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu1i()
{
  {
    init_simple_test("aSf_BFu16ll_BFu1i");
    static aSf_BFu16ll_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu1i");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_BFu16ll_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu1i(Test_aSf_BFu16ll_BFu1i, "aSf_BFu16ll_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu1ll()
{
  {
    init_simple_test("aSf_BFu16ll_BFu1ll");
    static aSf_BFu16ll_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu1ll");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_BFu16ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu1ll(Test_aSf_BFu16ll_BFu1ll, "aSf_BFu16ll_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu1s()
{
  {
    init_simple_test("aSf_BFu16ll_BFu1s");
    static aSf_BFu16ll_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu1s");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_BFu16ll_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu1s(Test_aSf_BFu16ll_BFu1s, "aSf_BFu16ll_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu31i()
{
  {
    init_simple_test("aSf_BFu16ll_BFu31i");
    static aSf_BFu16ll_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aSf_BFu16ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aSf_BFu16ll_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu31i(Test_aSf_BFu16ll_BFu31i, "aSf_BFu16ll_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu31ll()
{
  {
    init_simple_test("aSf_BFu16ll_BFu31ll");
    static aSf_BFu16ll_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aSf_BFu16ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aSf_BFu16ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu31ll(Test_aSf_BFu16ll_BFu31ll, "aSf_BFu16ll_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu32i()
{
  {
    init_simple_test("aSf_BFu16ll_BFu32i");
    static aSf_BFu16ll_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aSf_BFu16ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aSf_BFu16ll_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu32i(Test_aSf_BFu16ll_BFu32i, "aSf_BFu16ll_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu32ll()
{
  {
    init_simple_test("aSf_BFu16ll_BFu32ll");
    static aSf_BFu16ll_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aSf_BFu16ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aSf_BFu16ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu32ll(Test_aSf_BFu16ll_BFu32ll, "aSf_BFu16ll_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu33()
{
  {
    init_simple_test("aSf_BFu16ll_BFu33");
    static aSf_BFu16ll_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu16ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aSf_BFu16ll_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aSf_BFu16ll_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu33(Test_aSf_BFu16ll_BFu33, "aSf_BFu16ll_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu7c()
{
  {
    init_simple_test("aSf_BFu16ll_BFu7c");
    static aSf_BFu16ll_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_BFu16ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_BFu16ll_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu7c(Test_aSf_BFu16ll_BFu7c, "aSf_BFu16ll_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu7i()
{
  {
    init_simple_test("aSf_BFu16ll_BFu7i");
    static aSf_BFu16ll_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_BFu16ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_BFu16ll_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu7i(Test_aSf_BFu16ll_BFu7i, "aSf_BFu16ll_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu7ll()
{
  {
    init_simple_test("aSf_BFu16ll_BFu7ll");
    static aSf_BFu16ll_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_BFu16ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_BFu16ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu7ll(Test_aSf_BFu16ll_BFu7ll, "aSf_BFu16ll_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu7s()
{
  {
    init_simple_test("aSf_BFu16ll_BFu7s");
    static aSf_BFu16ll_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_BFu16ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_BFu16ll_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu7s(Test_aSf_BFu16ll_BFu7s, "aSf_BFu16ll_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu8c()
{
  {
    init_simple_test("aSf_BFu16ll_BFu8c");
    static aSf_BFu16ll_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_BFu16ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_BFu16ll_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu8c(Test_aSf_BFu16ll_BFu8c, "aSf_BFu16ll_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu8i()
{
  {
    init_simple_test("aSf_BFu16ll_BFu8i");
    static aSf_BFu16ll_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_BFu16ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_BFu16ll_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu8i(Test_aSf_BFu16ll_BFu8i, "aSf_BFu16ll_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu8ll()
{
  {
    init_simple_test("aSf_BFu16ll_BFu8ll");
    static aSf_BFu16ll_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_BFu16ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_BFu16ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu8ll(Test_aSf_BFu16ll_BFu8ll, "aSf_BFu16ll_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu8s()
{
  {
    init_simple_test("aSf_BFu16ll_BFu8s");
    static aSf_BFu16ll_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_BFu16ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_BFu16ll_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu8s(Test_aSf_BFu16ll_BFu8s, "aSf_BFu16ll_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu9i()
{
  {
    init_simple_test("aSf_BFu16ll_BFu9i");
    static aSf_BFu16ll_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aSf_BFu16ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aSf_BFu16ll_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu9i(Test_aSf_BFu16ll_BFu9i, "aSf_BFu16ll_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu9ll()
{
  {
    init_simple_test("aSf_BFu16ll_BFu9ll");
    static aSf_BFu16ll_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aSf_BFu16ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aSf_BFu16ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu9ll(Test_aSf_BFu16ll_BFu9ll, "aSf_BFu16ll_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_BFu9s()
{
  {
    init_simple_test("aSf_BFu16ll_BFu9s");
    static aSf_BFu16ll_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aSf_BFu16ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aSf_BFu16ll_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_BFu9s(Test_aSf_BFu16ll_BFu9s, "aSf_BFu16ll_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_C()
{
  {
    init_simple_test("aSf_BFu16ll_C");
    static aSf_BFu16ll_C lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_C");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_C");
    check_field_offset(lv, v3, 3, "aSf_BFu16ll_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_C(Test_aSf_BFu16ll_C, "aSf_BFu16ll_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_D()
{
  {
    init_simple_test("aSf_BFu16ll_D");
    static aSf_BFu16ll_D lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu16ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_D");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_D");
    check_field_offset(lv, v3, 3, "aSf_BFu16ll_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_D(Test_aSf_BFu16ll_D, "aSf_BFu16ll_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_F()
{
  {
    init_simple_test("aSf_BFu16ll_F");
    static aSf_BFu16ll_F lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_F");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_F");
    check_field_offset(lv, v3, 3, "aSf_BFu16ll_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_F(Test_aSf_BFu16ll_F, "aSf_BFu16ll_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_I()
{
  {
    init_simple_test("aSf_BFu16ll_I");
    static aSf_BFu16ll_I lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_I");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_I");
    check_field_offset(lv, v3, 3, "aSf_BFu16ll_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_I(Test_aSf_BFu16ll_I, "aSf_BFu16ll_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_Ip()
{
  {
    init_simple_test("aSf_BFu16ll_Ip");
    static aSf_BFu16ll_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_BFu16ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_Ip");
    check_field_offset(lv, v3, 3, "aSf_BFu16ll_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_Ip(Test_aSf_BFu16ll_Ip, "aSf_BFu16ll_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_L()
{
  {
    init_simple_test("aSf_BFu16ll_L");
    static aSf_BFu16ll_L lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu16ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_L");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_L");
    check_field_offset(lv, v3, 3, "aSf_BFu16ll_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_L(Test_aSf_BFu16ll_L, "aSf_BFu16ll_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_S()
{
  {
    init_simple_test("aSf_BFu16ll_S");
    static aSf_BFu16ll_S lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_S");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_S");
    check_field_offset(lv, v3, 3, "aSf_BFu16ll_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_S(Test_aSf_BFu16ll_S, "aSf_BFu16ll_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_Sf()
{
  {
    init_simple_test("aSf_BFu16ll_Sf");
    static aSf_BFu16ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_Sf");
    check_field_offset(lv, v3, 3, "aSf_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_Sf(Test_aSf_BFu16ll_Sf, "aSf_BFu16ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_Uc()
{
  {
    init_simple_test("aSf_BFu16ll_Uc");
    static aSf_BFu16ll_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_Uc");
    check_field_offset(lv, v3, 3, "aSf_BFu16ll_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_Uc(Test_aSf_BFu16ll_Uc, "aSf_BFu16ll_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_Ui()
{
  {
    init_simple_test("aSf_BFu16ll_Ui");
    static aSf_BFu16ll_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_Ui");
    check_field_offset(lv, v3, 3, "aSf_BFu16ll_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_Ui(Test_aSf_BFu16ll_Ui, "aSf_BFu16ll_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_Ul()
{
  {
    init_simple_test("aSf_BFu16ll_Ul");
    static aSf_BFu16ll_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu16ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_Ul");
    check_field_offset(lv, v3, 3, "aSf_BFu16ll_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_Ul(Test_aSf_BFu16ll_Ul, "aSf_BFu16ll_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_Us()
{
  {
    init_simple_test("aSf_BFu16ll_Us");
    static aSf_BFu16ll_Us lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_Us");
    check_field_offset(lv, v3, 3, "aSf_BFu16ll_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_Us(Test_aSf_BFu16ll_Us, "aSf_BFu16ll_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16ll_Vp()
{
  {
    init_simple_test("aSf_BFu16ll_Vp");
    static aSf_BFu16ll_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_BFu16ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16ll_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu16ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16ll_Vp");
    check_field_offset(lv, v3, 3, "aSf_BFu16ll_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16ll_Vp(Test_aSf_BFu16ll_Vp, "aSf_BFu16ll_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s()
{
  {
    init_simple_test("aSf_BFu16s");
    static aSf_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s(Test_aSf_BFu16s, "aSf_BFu16s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu15i()
{
  {
    init_simple_test("aSf_BFu16s_BFu15i");
    static aSf_BFu16s_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aSf_BFu16s_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aSf_BFu16s_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu15i(Test_aSf_BFu16s_BFu15i, "aSf_BFu16s_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu15ll()
{
  {
    init_simple_test("aSf_BFu16s_BFu15ll");
    static aSf_BFu16s_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aSf_BFu16s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aSf_BFu16s_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu15ll(Test_aSf_BFu16s_BFu15ll, "aSf_BFu16s_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu15s()
{
  {
    init_simple_test("aSf_BFu16s_BFu15s");
    static aSf_BFu16s_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aSf_BFu16s_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aSf_BFu16s_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu15s(Test_aSf_BFu16s_BFu15s, "aSf_BFu16s_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu16i()
{
  {
    init_simple_test("aSf_BFu16s_BFu16i");
    static aSf_BFu16s_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aSf_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu16i(Test_aSf_BFu16s_BFu16i, "aSf_BFu16s_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu16ll()
{
  {
    init_simple_test("aSf_BFu16s_BFu16ll");
    static aSf_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aSf_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu16ll(Test_aSf_BFu16s_BFu16ll, "aSf_BFu16s_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu16s()
{
  {
    init_simple_test("aSf_BFu16s_BFu16s");
    static aSf_BFu16s_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aSf_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu16s(Test_aSf_BFu16s_BFu16s, "aSf_BFu16s_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu17i()
{
  {
    init_simple_test("aSf_BFu16s_BFu17i");
    static aSf_BFu16s_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu16s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aSf_BFu16s_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aSf_BFu16s_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu17i(Test_aSf_BFu16s_BFu17i, "aSf_BFu16s_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu17ll()
{
  {
    init_simple_test("aSf_BFu16s_BFu17ll");
    static aSf_BFu16s_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu16s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aSf_BFu16s_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aSf_BFu16s_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu17ll(Test_aSf_BFu16s_BFu17ll, "aSf_BFu16s_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu1c()
{
  {
    init_simple_test("aSf_BFu16s_BFu1c");
    static aSf_BFu16s_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu1c");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_BFu16s_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu1c(Test_aSf_BFu16s_BFu1c, "aSf_BFu16s_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu1i()
{
  {
    init_simple_test("aSf_BFu16s_BFu1i");
    static aSf_BFu16s_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu1i");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_BFu16s_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu1i(Test_aSf_BFu16s_BFu1i, "aSf_BFu16s_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu1ll()
{
  {
    init_simple_test("aSf_BFu16s_BFu1ll");
    static aSf_BFu16s_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu1ll");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_BFu16s_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu1ll(Test_aSf_BFu16s_BFu1ll, "aSf_BFu16s_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu1s()
{
  {
    init_simple_test("aSf_BFu16s_BFu1s");
    static aSf_BFu16s_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu1s");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_BFu16s_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu1s(Test_aSf_BFu16s_BFu1s, "aSf_BFu16s_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu31i()
{
  {
    init_simple_test("aSf_BFu16s_BFu31i");
    static aSf_BFu16s_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aSf_BFu16s_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aSf_BFu16s_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu31i(Test_aSf_BFu16s_BFu31i, "aSf_BFu16s_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu31ll()
{
  {
    init_simple_test("aSf_BFu16s_BFu31ll");
    static aSf_BFu16s_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aSf_BFu16s_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aSf_BFu16s_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu31ll(Test_aSf_BFu16s_BFu31ll, "aSf_BFu16s_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu32i()
{
  {
    init_simple_test("aSf_BFu16s_BFu32i");
    static aSf_BFu16s_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aSf_BFu16s_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aSf_BFu16s_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu32i(Test_aSf_BFu16s_BFu32i, "aSf_BFu16s_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu32ll()
{
  {
    init_simple_test("aSf_BFu16s_BFu32ll");
    static aSf_BFu16s_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aSf_BFu16s_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aSf_BFu16s_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu32ll(Test_aSf_BFu16s_BFu32ll, "aSf_BFu16s_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu33()
{
  {
    init_simple_test("aSf_BFu16s_BFu33");
    static aSf_BFu16s_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu16s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aSf_BFu16s_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aSf_BFu16s_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu33(Test_aSf_BFu16s_BFu33, "aSf_BFu16s_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu7c()
{
  {
    init_simple_test("aSf_BFu16s_BFu7c");
    static aSf_BFu16s_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_BFu16s_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_BFu16s_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu7c(Test_aSf_BFu16s_BFu7c, "aSf_BFu16s_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu7i()
{
  {
    init_simple_test("aSf_BFu16s_BFu7i");
    static aSf_BFu16s_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_BFu16s_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_BFu16s_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu7i(Test_aSf_BFu16s_BFu7i, "aSf_BFu16s_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu7ll()
{
  {
    init_simple_test("aSf_BFu16s_BFu7ll");
    static aSf_BFu16s_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_BFu16s_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_BFu16s_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu7ll(Test_aSf_BFu16s_BFu7ll, "aSf_BFu16s_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu7s()
{
  {
    init_simple_test("aSf_BFu16s_BFu7s");
    static aSf_BFu16s_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_BFu16s_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_BFu16s_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu7s(Test_aSf_BFu16s_BFu7s, "aSf_BFu16s_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu8c()
{
  {
    init_simple_test("aSf_BFu16s_BFu8c");
    static aSf_BFu16s_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_BFu16s_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_BFu16s_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu8c(Test_aSf_BFu16s_BFu8c, "aSf_BFu16s_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu8i()
{
  {
    init_simple_test("aSf_BFu16s_BFu8i");
    static aSf_BFu16s_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_BFu16s_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_BFu16s_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu8i(Test_aSf_BFu16s_BFu8i, "aSf_BFu16s_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu8ll()
{
  {
    init_simple_test("aSf_BFu16s_BFu8ll");
    static aSf_BFu16s_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_BFu16s_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_BFu16s_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu8ll(Test_aSf_BFu16s_BFu8ll, "aSf_BFu16s_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu8s()
{
  {
    init_simple_test("aSf_BFu16s_BFu8s");
    static aSf_BFu16s_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_BFu16s_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_BFu16s_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu8s(Test_aSf_BFu16s_BFu8s, "aSf_BFu16s_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu9i()
{
  {
    init_simple_test("aSf_BFu16s_BFu9i");
    static aSf_BFu16s_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aSf_BFu16s_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aSf_BFu16s_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu9i(Test_aSf_BFu16s_BFu9i, "aSf_BFu16s_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu9ll()
{
  {
    init_simple_test("aSf_BFu16s_BFu9ll");
    static aSf_BFu16s_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aSf_BFu16s_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aSf_BFu16s_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu9ll(Test_aSf_BFu16s_BFu9ll, "aSf_BFu16s_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_BFu9s()
{
  {
    init_simple_test("aSf_BFu16s_BFu9s");
    static aSf_BFu16s_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aSf_BFu16s_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aSf_BFu16s_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_BFu9s(Test_aSf_BFu16s_BFu9s, "aSf_BFu16s_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_C()
{
  {
    init_simple_test("aSf_BFu16s_C");
    static aSf_BFu16s_C lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_C");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_C");
    check_field_offset(lv, v3, 3, "aSf_BFu16s_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_C(Test_aSf_BFu16s_C, "aSf_BFu16s_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_D()
{
  {
    init_simple_test("aSf_BFu16s_D");
    static aSf_BFu16s_D lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu16s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_D");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_D");
    check_field_offset(lv, v3, 3, "aSf_BFu16s_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_D(Test_aSf_BFu16s_D, "aSf_BFu16s_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_F()
{
  {
    init_simple_test("aSf_BFu16s_F");
    static aSf_BFu16s_F lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_F");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_F");
    check_field_offset(lv, v3, 3, "aSf_BFu16s_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_F(Test_aSf_BFu16s_F, "aSf_BFu16s_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_I()
{
  {
    init_simple_test("aSf_BFu16s_I");
    static aSf_BFu16s_I lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_I");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_I");
    check_field_offset(lv, v3, 3, "aSf_BFu16s_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_I(Test_aSf_BFu16s_I, "aSf_BFu16s_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_Ip()
{
  {
    init_simple_test("aSf_BFu16s_Ip");
    static aSf_BFu16s_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_BFu16s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_Ip");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_Ip");
    check_field_offset(lv, v3, 3, "aSf_BFu16s_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_Ip(Test_aSf_BFu16s_Ip, "aSf_BFu16s_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_L()
{
  {
    init_simple_test("aSf_BFu16s_L");
    static aSf_BFu16s_L lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu16s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_L");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_L");
    check_field_offset(lv, v3, 3, "aSf_BFu16s_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_L(Test_aSf_BFu16s_L, "aSf_BFu16s_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_S()
{
  {
    init_simple_test("aSf_BFu16s_S");
    static aSf_BFu16s_S lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_S");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_S");
    check_field_offset(lv, v3, 3, "aSf_BFu16s_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_S(Test_aSf_BFu16s_S, "aSf_BFu16s_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_Sf()
{
  {
    init_simple_test("aSf_BFu16s_Sf");
    static aSf_BFu16s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_Sf");
    check_field_offset(lv, v3, 3, "aSf_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_Sf(Test_aSf_BFu16s_Sf, "aSf_BFu16s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_Uc()
{
  {
    init_simple_test("aSf_BFu16s_Uc");
    static aSf_BFu16s_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu16s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_Uc");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_Uc");
    check_field_offset(lv, v3, 3, "aSf_BFu16s_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_Uc(Test_aSf_BFu16s_Uc, "aSf_BFu16s_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_Ui()
{
  {
    init_simple_test("aSf_BFu16s_Ui");
    static aSf_BFu16s_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu16s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_Ui");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_Ui");
    check_field_offset(lv, v3, 3, "aSf_BFu16s_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_Ui(Test_aSf_BFu16s_Ui, "aSf_BFu16s_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_Ul()
{
  {
    init_simple_test("aSf_BFu16s_Ul");
    static aSf_BFu16s_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu16s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_Ul");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_Ul");
    check_field_offset(lv, v3, 3, "aSf_BFu16s_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_Ul(Test_aSf_BFu16s_Ul, "aSf_BFu16s_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_Us()
{
  {
    init_simple_test("aSf_BFu16s_Us");
    static aSf_BFu16s_Us lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu16s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_Us");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_Us");
    check_field_offset(lv, v3, 3, "aSf_BFu16s_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_Us(Test_aSf_BFu16s_Us, "aSf_BFu16s_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu16s_Vp()
{
  {
    init_simple_test("aSf_BFu16s_Vp");
    static aSf_BFu16s_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_BFu16s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu16s_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu16s_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aSf_BFu16s_Vp");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aSf_BFu16s_Vp");
    check_field_offset(lv, v3, 3, "aSf_BFu16s_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu16s_Vp(Test_aSf_BFu16s_Vp, "aSf_BFu16s_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i()
{
  {
    init_simple_test("aSf_BFu17i");
    static aSf_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i(Test_aSf_BFu17i, "aSf_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu15i()
{
  {
    init_simple_test("aSf_BFu17i_BFu15i");
    static aSf_BFu17i_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aSf_BFu17i_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aSf_BFu17i_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu15i(Test_aSf_BFu17i_BFu15i, "aSf_BFu17i_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu15ll()
{
  {
    init_simple_test("aSf_BFu17i_BFu15ll");
    static aSf_BFu17i_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aSf_BFu17i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aSf_BFu17i_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu15ll(Test_aSf_BFu17i_BFu15ll, "aSf_BFu17i_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu15s()
{
  {
    init_simple_test("aSf_BFu17i_BFu15s");
    static aSf_BFu17i_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aSf_BFu17i_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aSf_BFu17i_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu15s(Test_aSf_BFu17i_BFu15s, "aSf_BFu17i_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu16i()
{
  {
    init_simple_test("aSf_BFu17i_BFu16i");
    static aSf_BFu17i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu17i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aSf_BFu17i_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aSf_BFu17i_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu16i(Test_aSf_BFu17i_BFu16i, "aSf_BFu17i_BFu16i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu16ll()
{
  {
    init_simple_test("aSf_BFu17i_BFu16ll");
    static aSf_BFu17i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu17i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aSf_BFu17i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aSf_BFu17i_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu16ll(Test_aSf_BFu17i_BFu16ll, "aSf_BFu17i_BFu16ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu16s()
{
  {
    init_simple_test("aSf_BFu17i_BFu16s");
    static aSf_BFu17i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu17i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aSf_BFu17i_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aSf_BFu17i_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu16s(Test_aSf_BFu17i_BFu16s, "aSf_BFu17i_BFu16s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu17i()
{
  {
    init_simple_test("aSf_BFu17i_BFu17i");
    static aSf_BFu17i_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "aSf_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu17i(Test_aSf_BFu17i_BFu17i, "aSf_BFu17i_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu17ll()
{
  {
    init_simple_test("aSf_BFu17i_BFu17ll");
    static aSf_BFu17i_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "aSf_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu17ll(Test_aSf_BFu17i_BFu17ll, "aSf_BFu17i_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu1c()
{
  {
    init_simple_test("aSf_BFu17i_BFu1c");
    static aSf_BFu17i_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu1c");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aSf_BFu17i_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu1c(Test_aSf_BFu17i_BFu1c, "aSf_BFu17i_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu1i()
{
  {
    init_simple_test("aSf_BFu17i_BFu1i");
    static aSf_BFu17i_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu1i");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aSf_BFu17i_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu1i(Test_aSf_BFu17i_BFu1i, "aSf_BFu17i_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu1ll()
{
  {
    init_simple_test("aSf_BFu17i_BFu1ll");
    static aSf_BFu17i_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu1ll");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aSf_BFu17i_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu1ll(Test_aSf_BFu17i_BFu1ll, "aSf_BFu17i_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu1s()
{
  {
    init_simple_test("aSf_BFu17i_BFu1s");
    static aSf_BFu17i_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu1s");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aSf_BFu17i_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu1s(Test_aSf_BFu17i_BFu1s, "aSf_BFu17i_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu31i()
{
  {
    init_simple_test("aSf_BFu17i_BFu31i");
    static aSf_BFu17i_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu17i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "aSf_BFu17i_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "aSf_BFu17i_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu31i(Test_aSf_BFu17i_BFu31i, "aSf_BFu17i_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu31ll()
{
  {
    init_simple_test("aSf_BFu17i_BFu31ll");
    static aSf_BFu17i_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu17i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "aSf_BFu17i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "aSf_BFu17i_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu31ll(Test_aSf_BFu17i_BFu31ll, "aSf_BFu17i_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu32i()
{
  {
    init_simple_test("aSf_BFu17i_BFu32i");
    static aSf_BFu17i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu17i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "aSf_BFu17i_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "aSf_BFu17i_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu32i(Test_aSf_BFu17i_BFu32i, "aSf_BFu17i_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu32ll()
{
  {
    init_simple_test("aSf_BFu17i_BFu32ll");
    static aSf_BFu17i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu17i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "aSf_BFu17i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "aSf_BFu17i_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu32ll(Test_aSf_BFu17i_BFu32ll, "aSf_BFu17i_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu33()
{
  {
    init_simple_test("aSf_BFu17i_BFu33");
    static aSf_BFu17i_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu17i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, 1, "aSf_BFu17i_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, hide_ull(1LL<<32), "aSf_BFu17i_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu33(Test_aSf_BFu17i_BFu33, "aSf_BFu17i_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu7c()
{
  {
    init_simple_test("aSf_BFu17i_BFu7c");
    static aSf_BFu17i_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aSf_BFu17i_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aSf_BFu17i_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu7c(Test_aSf_BFu17i_BFu7c, "aSf_BFu17i_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu7i()
{
  {
    init_simple_test("aSf_BFu17i_BFu7i");
    static aSf_BFu17i_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aSf_BFu17i_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aSf_BFu17i_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu7i(Test_aSf_BFu17i_BFu7i, "aSf_BFu17i_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu7ll()
{
  {
    init_simple_test("aSf_BFu17i_BFu7ll");
    static aSf_BFu17i_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aSf_BFu17i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aSf_BFu17i_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu7ll(Test_aSf_BFu17i_BFu7ll, "aSf_BFu17i_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu7s()
{
  {
    init_simple_test("aSf_BFu17i_BFu7s");
    static aSf_BFu17i_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aSf_BFu17i_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aSf_BFu17i_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu7s(Test_aSf_BFu17i_BFu7s, "aSf_BFu17i_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu8c()
{
  {
    init_simple_test("aSf_BFu17i_BFu8c");
    static aSf_BFu17i_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aSf_BFu17i_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aSf_BFu17i_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu8c(Test_aSf_BFu17i_BFu8c, "aSf_BFu17i_BFu8c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu8i()
{
  {
    init_simple_test("aSf_BFu17i_BFu8i");
    static aSf_BFu17i_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aSf_BFu17i_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aSf_BFu17i_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu8i(Test_aSf_BFu17i_BFu8i, "aSf_BFu17i_BFu8i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu8ll()
{
  {
    init_simple_test("aSf_BFu17i_BFu8ll");
    static aSf_BFu17i_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aSf_BFu17i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aSf_BFu17i_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu8ll(Test_aSf_BFu17i_BFu8ll, "aSf_BFu17i_BFu8ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu8s()
{
  {
    init_simple_test("aSf_BFu17i_BFu8s");
    static aSf_BFu17i_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aSf_BFu17i_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aSf_BFu17i_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu8s(Test_aSf_BFu17i_BFu8s, "aSf_BFu17i_BFu8s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu9i()
{
  {
    init_simple_test("aSf_BFu17i_BFu9i");
    static aSf_BFu17i_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aSf_BFu17i_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aSf_BFu17i_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu9i(Test_aSf_BFu17i_BFu9i, "aSf_BFu17i_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu9ll()
{
  {
    init_simple_test("aSf_BFu17i_BFu9ll");
    static aSf_BFu17i_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aSf_BFu17i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aSf_BFu17i_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu9ll(Test_aSf_BFu17i_BFu9ll, "aSf_BFu17i_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_BFu9s()
{
  {
    init_simple_test("aSf_BFu17i_BFu9s");
    static aSf_BFu17i_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aSf_BFu17i_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aSf_BFu17i_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_BFu9s(Test_aSf_BFu17i_BFu9s, "aSf_BFu17i_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_C()
{
  {
    init_simple_test("aSf_BFu17i_C");
    static aSf_BFu17i_C lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_C");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_C");
    check_field_offset(lv, v3, 4, "aSf_BFu17i_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_C(Test_aSf_BFu17i_C, "aSf_BFu17i_C", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_D()
{
  {
    init_simple_test("aSf_BFu17i_D");
    static aSf_BFu17i_D lv;
    check2(sizeof(lv), 12, "sizeof(aSf_BFu17i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_D");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_D");
    check_field_offset(lv, v3, 4, "aSf_BFu17i_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_D(Test_aSf_BFu17i_D, "aSf_BFu17i_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_F()
{
  {
    init_simple_test("aSf_BFu17i_F");
    static aSf_BFu17i_F lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu17i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_F");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_F");
    check_field_offset(lv, v3, 4, "aSf_BFu17i_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_F(Test_aSf_BFu17i_F, "aSf_BFu17i_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_I()
{
  {
    init_simple_test("aSf_BFu17i_I");
    static aSf_BFu17i_I lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu17i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_I");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_I");
    check_field_offset(lv, v3, 4, "aSf_BFu17i_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_I(Test_aSf_BFu17i_I, "aSf_BFu17i_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_Ip()
{
  {
    init_simple_test("aSf_BFu17i_Ip");
    static aSf_BFu17i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aSf_BFu17i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_Ip");
    check_field_offset(lv, v3, 4, "aSf_BFu17i_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_Ip(Test_aSf_BFu17i_Ip, "aSf_BFu17i_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_L()
{
  {
    init_simple_test("aSf_BFu17i_L");
    static aSf_BFu17i_L lv;
    check2(sizeof(lv), 12, "sizeof(aSf_BFu17i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_L");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_L");
    check_field_offset(lv, v3, 4, "aSf_BFu17i_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_L(Test_aSf_BFu17i_L, "aSf_BFu17i_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_S()
{
  {
    init_simple_test("aSf_BFu17i_S");
    static aSf_BFu17i_S lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu17i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_S");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_S");
    check_field_offset(lv, v3, 4, "aSf_BFu17i_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_S(Test_aSf_BFu17i_S, "aSf_BFu17i_S", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_Sf()
{
  {
    init_simple_test("aSf_BFu17i_Sf");
    static aSf_BFu17i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_Sf");
    check_field_offset(lv, v3, 4, "aSf_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_Sf(Test_aSf_BFu17i_Sf, "aSf_BFu17i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_Uc()
{
  {
    init_simple_test("aSf_BFu17i_Uc");
    static aSf_BFu17i_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_Uc");
    check_field_offset(lv, v3, 4, "aSf_BFu17i_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_Uc(Test_aSf_BFu17i_Uc, "aSf_BFu17i_Uc", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_Ui()
{
  {
    init_simple_test("aSf_BFu17i_Ui");
    static aSf_BFu17i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu17i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_Ui");
    check_field_offset(lv, v3, 4, "aSf_BFu17i_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_Ui(Test_aSf_BFu17i_Ui, "aSf_BFu17i_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_Ul()
{
  {
    init_simple_test("aSf_BFu17i_Ul");
    static aSf_BFu17i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aSf_BFu17i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_Ul");
    check_field_offset(lv, v3, 4, "aSf_BFu17i_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_Ul(Test_aSf_BFu17i_Ul, "aSf_BFu17i_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_Us()
{
  {
    init_simple_test("aSf_BFu17i_Us");
    static aSf_BFu17i_Us lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu17i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_Us");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_Us");
    check_field_offset(lv, v3, 4, "aSf_BFu17i_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_Us(Test_aSf_BFu17i_Us, "aSf_BFu17i_Us", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17i_Vp()
{
  {
    init_simple_test("aSf_BFu17i_Vp");
    static aSf_BFu17i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aSf_BFu17i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17i_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu17i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17i_Vp");
    check_field_offset(lv, v3, 4, "aSf_BFu17i_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17i_Vp(Test_aSf_BFu17i_Vp, "aSf_BFu17i_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll()
{
  {
    init_simple_test("aSf_BFu17ll");
    static aSf_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll(Test_aSf_BFu17ll, "aSf_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu15i()
{
  {
    init_simple_test("aSf_BFu17ll_BFu15i");
    static aSf_BFu17ll_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aSf_BFu17ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aSf_BFu17ll_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu15i(Test_aSf_BFu17ll_BFu15i, "aSf_BFu17ll_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu15ll()
{
  {
    init_simple_test("aSf_BFu17ll_BFu15ll");
    static aSf_BFu17ll_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aSf_BFu17ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aSf_BFu17ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu15ll(Test_aSf_BFu17ll_BFu15ll, "aSf_BFu17ll_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu15s()
{
  {
    init_simple_test("aSf_BFu17ll_BFu15s");
    static aSf_BFu17ll_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aSf_BFu17ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aSf_BFu17ll_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu15s(Test_aSf_BFu17ll_BFu15s, "aSf_BFu17ll_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu16i()
{
  {
    init_simple_test("aSf_BFu17ll_BFu16i");
    static aSf_BFu17ll_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu17ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aSf_BFu17ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aSf_BFu17ll_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu16i(Test_aSf_BFu17ll_BFu16i, "aSf_BFu17ll_BFu16i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu16ll()
{
  {
    init_simple_test("aSf_BFu17ll_BFu16ll");
    static aSf_BFu17ll_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu17ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aSf_BFu17ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aSf_BFu17ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu16ll(Test_aSf_BFu17ll_BFu16ll, "aSf_BFu17ll_BFu16ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu16s()
{
  {
    init_simple_test("aSf_BFu17ll_BFu16s");
    static aSf_BFu17ll_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu17ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aSf_BFu17ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aSf_BFu17ll_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu16s(Test_aSf_BFu17ll_BFu16s, "aSf_BFu17ll_BFu16s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu17i()
{
  {
    init_simple_test("aSf_BFu17ll_BFu17i");
    static aSf_BFu17ll_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "aSf_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu17i(Test_aSf_BFu17ll_BFu17i, "aSf_BFu17ll_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu17ll()
{
  {
    init_simple_test("aSf_BFu17ll_BFu17ll");
    static aSf_BFu17ll_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "aSf_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu17ll(Test_aSf_BFu17ll_BFu17ll, "aSf_BFu17ll_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu1c()
{
  {
    init_simple_test("aSf_BFu17ll_BFu1c");
    static aSf_BFu17ll_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu1c");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aSf_BFu17ll_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu1c(Test_aSf_BFu17ll_BFu1c, "aSf_BFu17ll_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu1i()
{
  {
    init_simple_test("aSf_BFu17ll_BFu1i");
    static aSf_BFu17ll_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu1i");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aSf_BFu17ll_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu1i(Test_aSf_BFu17ll_BFu1i, "aSf_BFu17ll_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu1ll()
{
  {
    init_simple_test("aSf_BFu17ll_BFu1ll");
    static aSf_BFu17ll_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu1ll");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aSf_BFu17ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu1ll(Test_aSf_BFu17ll_BFu1ll, "aSf_BFu17ll_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu1s()
{
  {
    init_simple_test("aSf_BFu17ll_BFu1s");
    static aSf_BFu17ll_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu1s");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aSf_BFu17ll_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu1s(Test_aSf_BFu17ll_BFu1s, "aSf_BFu17ll_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu31i()
{
  {
    init_simple_test("aSf_BFu17ll_BFu31i");
    static aSf_BFu17ll_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu17ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "aSf_BFu17ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "aSf_BFu17ll_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu31i(Test_aSf_BFu17ll_BFu31i, "aSf_BFu17ll_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu31ll()
{
  {
    init_simple_test("aSf_BFu17ll_BFu31ll");
    static aSf_BFu17ll_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu17ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "aSf_BFu17ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "aSf_BFu17ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu31ll(Test_aSf_BFu17ll_BFu31ll, "aSf_BFu17ll_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu32i()
{
  {
    init_simple_test("aSf_BFu17ll_BFu32i");
    static aSf_BFu17ll_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu17ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "aSf_BFu17ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "aSf_BFu17ll_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu32i(Test_aSf_BFu17ll_BFu32i, "aSf_BFu17ll_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu32ll()
{
  {
    init_simple_test("aSf_BFu17ll_BFu32ll");
    static aSf_BFu17ll_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu17ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "aSf_BFu17ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "aSf_BFu17ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu32ll(Test_aSf_BFu17ll_BFu32ll, "aSf_BFu17ll_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu33()
{
  {
    init_simple_test("aSf_BFu17ll_BFu33");
    static aSf_BFu17ll_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu17ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, 1, "aSf_BFu17ll_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, hide_ull(1LL<<32), "aSf_BFu17ll_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu33(Test_aSf_BFu17ll_BFu33, "aSf_BFu17ll_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu7c()
{
  {
    init_simple_test("aSf_BFu17ll_BFu7c");
    static aSf_BFu17ll_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aSf_BFu17ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aSf_BFu17ll_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu7c(Test_aSf_BFu17ll_BFu7c, "aSf_BFu17ll_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu7i()
{
  {
    init_simple_test("aSf_BFu17ll_BFu7i");
    static aSf_BFu17ll_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aSf_BFu17ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aSf_BFu17ll_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu7i(Test_aSf_BFu17ll_BFu7i, "aSf_BFu17ll_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu7ll()
{
  {
    init_simple_test("aSf_BFu17ll_BFu7ll");
    static aSf_BFu17ll_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aSf_BFu17ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aSf_BFu17ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu7ll(Test_aSf_BFu17ll_BFu7ll, "aSf_BFu17ll_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu7s()
{
  {
    init_simple_test("aSf_BFu17ll_BFu7s");
    static aSf_BFu17ll_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu17ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aSf_BFu17ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aSf_BFu17ll_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu7s(Test_aSf_BFu17ll_BFu7s, "aSf_BFu17ll_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu8c()
{
  {
    init_simple_test("aSf_BFu17ll_BFu8c");
    static aSf_BFu17ll_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aSf_BFu17ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aSf_BFu17ll_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu8c(Test_aSf_BFu17ll_BFu8c, "aSf_BFu17ll_BFu8c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu8i()
{
  {
    init_simple_test("aSf_BFu17ll_BFu8i");
    static aSf_BFu17ll_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aSf_BFu17ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aSf_BFu17ll_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu8i(Test_aSf_BFu17ll_BFu8i, "aSf_BFu17ll_BFu8i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu8ll()
{
  {
    init_simple_test("aSf_BFu17ll_BFu8ll");
    static aSf_BFu17ll_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aSf_BFu17ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aSf_BFu17ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu8ll(Test_aSf_BFu17ll_BFu8ll, "aSf_BFu17ll_BFu8ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu8s()
{
  {
    init_simple_test("aSf_BFu17ll_BFu8s");
    static aSf_BFu17ll_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aSf_BFu17ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aSf_BFu17ll_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu8s(Test_aSf_BFu17ll_BFu8s, "aSf_BFu17ll_BFu8s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu9i()
{
  {
    init_simple_test("aSf_BFu17ll_BFu9i");
    static aSf_BFu17ll_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aSf_BFu17ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aSf_BFu17ll_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu9i(Test_aSf_BFu17ll_BFu9i, "aSf_BFu17ll_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu9ll()
{
  {
    init_simple_test("aSf_BFu17ll_BFu9ll");
    static aSf_BFu17ll_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aSf_BFu17ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aSf_BFu17ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu9ll(Test_aSf_BFu17ll_BFu9ll, "aSf_BFu17ll_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_BFu9s()
{
  {
    init_simple_test("aSf_BFu17ll_BFu9s");
    static aSf_BFu17ll_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aSf_BFu17ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aSf_BFu17ll_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_BFu9s(Test_aSf_BFu17ll_BFu9s, "aSf_BFu17ll_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_C()
{
  {
    init_simple_test("aSf_BFu17ll_C");
    static aSf_BFu17ll_C lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_C");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_C");
    check_field_offset(lv, v3, 4, "aSf_BFu17ll_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_C(Test_aSf_BFu17ll_C, "aSf_BFu17ll_C", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_D()
{
  {
    init_simple_test("aSf_BFu17ll_D");
    static aSf_BFu17ll_D lv;
    check2(sizeof(lv), 12, "sizeof(aSf_BFu17ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_D");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_D");
    check_field_offset(lv, v3, 4, "aSf_BFu17ll_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_D(Test_aSf_BFu17ll_D, "aSf_BFu17ll_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_F()
{
  {
    init_simple_test("aSf_BFu17ll_F");
    static aSf_BFu17ll_F lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu17ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_F");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_F");
    check_field_offset(lv, v3, 4, "aSf_BFu17ll_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_F(Test_aSf_BFu17ll_F, "aSf_BFu17ll_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_I()
{
  {
    init_simple_test("aSf_BFu17ll_I");
    static aSf_BFu17ll_I lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu17ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_I");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_I");
    check_field_offset(lv, v3, 4, "aSf_BFu17ll_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_I(Test_aSf_BFu17ll_I, "aSf_BFu17ll_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_Ip()
{
  {
    init_simple_test("aSf_BFu17ll_Ip");
    static aSf_BFu17ll_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aSf_BFu17ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_Ip");
    check_field_offset(lv, v3, 4, "aSf_BFu17ll_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_Ip(Test_aSf_BFu17ll_Ip, "aSf_BFu17ll_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_L()
{
  {
    init_simple_test("aSf_BFu17ll_L");
    static aSf_BFu17ll_L lv;
    check2(sizeof(lv), 12, "sizeof(aSf_BFu17ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_L");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_L");
    check_field_offset(lv, v3, 4, "aSf_BFu17ll_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_L(Test_aSf_BFu17ll_L, "aSf_BFu17ll_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_S()
{
  {
    init_simple_test("aSf_BFu17ll_S");
    static aSf_BFu17ll_S lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu17ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_S");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_S");
    check_field_offset(lv, v3, 4, "aSf_BFu17ll_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_S(Test_aSf_BFu17ll_S, "aSf_BFu17ll_S", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_Sf()
{
  {
    init_simple_test("aSf_BFu17ll_Sf");
    static aSf_BFu17ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_Sf");
    check_field_offset(lv, v3, 4, "aSf_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_Sf(Test_aSf_BFu17ll_Sf, "aSf_BFu17ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_Uc()
{
  {
    init_simple_test("aSf_BFu17ll_Uc");
    static aSf_BFu17ll_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu17ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_Uc");
    check_field_offset(lv, v3, 4, "aSf_BFu17ll_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_Uc(Test_aSf_BFu17ll_Uc, "aSf_BFu17ll_Uc", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_Ui()
{
  {
    init_simple_test("aSf_BFu17ll_Ui");
    static aSf_BFu17ll_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu17ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_Ui");
    check_field_offset(lv, v3, 4, "aSf_BFu17ll_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_Ui(Test_aSf_BFu17ll_Ui, "aSf_BFu17ll_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_Ul()
{
  {
    init_simple_test("aSf_BFu17ll_Ul");
    static aSf_BFu17ll_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aSf_BFu17ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_Ul");
    check_field_offset(lv, v3, 4, "aSf_BFu17ll_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_Ul(Test_aSf_BFu17ll_Ul, "aSf_BFu17ll_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_Us()
{
  {
    init_simple_test("aSf_BFu17ll_Us");
    static aSf_BFu17ll_Us lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu17ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_Us");
    check_field_offset(lv, v3, 4, "aSf_BFu17ll_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_Us(Test_aSf_BFu17ll_Us, "aSf_BFu17ll_Us", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu17ll_Vp()
{
  {
    init_simple_test("aSf_BFu17ll_Vp");
    static aSf_BFu17ll_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aSf_BFu17ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu17ll_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu17ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aSf_BFu17ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aSf_BFu17ll_Vp");
    check_field_offset(lv, v3, 4, "aSf_BFu17ll_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu17ll_Vp(Test_aSf_BFu17ll_Vp, "aSf_BFu17ll_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c()
{
  {
    init_simple_test("aSf_BFu1c");
    static aSf_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c(Test_aSf_BFu1c, "aSf_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu15i()
{
  {
    init_simple_test("aSf_BFu1c_BFu15i");
    static aSf_BFu1c_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aSf_BFu1c_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aSf_BFu1c_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu15i(Test_aSf_BFu1c_BFu15i, "aSf_BFu1c_BFu15i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu15ll()
{
  {
    init_simple_test("aSf_BFu1c_BFu15ll");
    static aSf_BFu1c_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aSf_BFu1c_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aSf_BFu1c_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu15ll(Test_aSf_BFu1c_BFu15ll, "aSf_BFu1c_BFu15ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu15s()
{
  {
    init_simple_test("aSf_BFu1c_BFu15s");
    static aSf_BFu1c_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aSf_BFu1c_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aSf_BFu1c_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu15s(Test_aSf_BFu1c_BFu15s, "aSf_BFu1c_BFu15s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu16i()
{
  {
    init_simple_test("aSf_BFu1c_BFu16i");
    static aSf_BFu1c_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aSf_BFu1c_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aSf_BFu1c_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu16i(Test_aSf_BFu1c_BFu16i, "aSf_BFu1c_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu16ll()
{
  {
    init_simple_test("aSf_BFu1c_BFu16ll");
    static aSf_BFu1c_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aSf_BFu1c_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aSf_BFu1c_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu16ll(Test_aSf_BFu1c_BFu16ll, "aSf_BFu1c_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu16s()
{
  {
    init_simple_test("aSf_BFu1c_BFu16s");
    static aSf_BFu1c_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aSf_BFu1c_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aSf_BFu1c_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu16s(Test_aSf_BFu1c_BFu16s, "aSf_BFu1c_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu17i()
{
  {
    init_simple_test("aSf_BFu1c_BFu17i");
    static aSf_BFu1c_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "aSf_BFu1c_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "aSf_BFu1c_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu17i(Test_aSf_BFu1c_BFu17i, "aSf_BFu1c_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu17ll()
{
  {
    init_simple_test("aSf_BFu1c_BFu17ll");
    static aSf_BFu1c_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "aSf_BFu1c_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "aSf_BFu1c_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu17ll(Test_aSf_BFu1c_BFu17ll, "aSf_BFu1c_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu1c()
{
  {
    init_simple_test("aSf_BFu1c_BFu1c");
    static aSf_BFu1c_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aSf_BFu1c_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu1c(Test_aSf_BFu1c_BFu1c, "aSf_BFu1c_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu1i()
{
  {
    init_simple_test("aSf_BFu1c_BFu1i");
    static aSf_BFu1c_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aSf_BFu1c_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu1i(Test_aSf_BFu1c_BFu1i, "aSf_BFu1c_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu1ll()
{
  {
    init_simple_test("aSf_BFu1c_BFu1ll");
    static aSf_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aSf_BFu1c_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu1ll(Test_aSf_BFu1c_BFu1ll, "aSf_BFu1c_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu1s()
{
  {
    init_simple_test("aSf_BFu1c_BFu1s");
    static aSf_BFu1c_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aSf_BFu1c_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu1s(Test_aSf_BFu1c_BFu1s, "aSf_BFu1c_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu31i()
{
  {
    init_simple_test("aSf_BFu1c_BFu31i");
    static aSf_BFu1c_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu1c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "aSf_BFu1c_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "aSf_BFu1c_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu31i(Test_aSf_BFu1c_BFu31i, "aSf_BFu1c_BFu31i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu31ll()
{
  {
    init_simple_test("aSf_BFu1c_BFu31ll");
    static aSf_BFu1c_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu1c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "aSf_BFu1c_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "aSf_BFu1c_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu31ll(Test_aSf_BFu1c_BFu31ll, "aSf_BFu1c_BFu31ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu32i()
{
  {
    init_simple_test("aSf_BFu1c_BFu32i");
    static aSf_BFu1c_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "aSf_BFu1c_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "aSf_BFu1c_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu32i(Test_aSf_BFu1c_BFu32i, "aSf_BFu1c_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu32ll()
{
  {
    init_simple_test("aSf_BFu1c_BFu32ll");
    static aSf_BFu1c_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "aSf_BFu1c_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "aSf_BFu1c_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu32ll(Test_aSf_BFu1c_BFu32ll, "aSf_BFu1c_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu33()
{
  {
    init_simple_test("aSf_BFu1c_BFu33");
    static aSf_BFu1c_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, 1, "aSf_BFu1c_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, hide_ull(1LL<<32), "aSf_BFu1c_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu33(Test_aSf_BFu1c_BFu33, "aSf_BFu1c_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu7c()
{
  {
    init_simple_test("aSf_BFu1c_BFu7c");
    static aSf_BFu1c_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aSf_BFu1c_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aSf_BFu1c_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu7c(Test_aSf_BFu1c_BFu7c, "aSf_BFu1c_BFu7c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu7i()
{
  {
    init_simple_test("aSf_BFu1c_BFu7i");
    static aSf_BFu1c_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aSf_BFu1c_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aSf_BFu1c_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu7i(Test_aSf_BFu1c_BFu7i, "aSf_BFu1c_BFu7i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu7ll()
{
  {
    init_simple_test("aSf_BFu1c_BFu7ll");
    static aSf_BFu1c_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aSf_BFu1c_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aSf_BFu1c_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu7ll(Test_aSf_BFu1c_BFu7ll, "aSf_BFu1c_BFu7ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu7s()
{
  {
    init_simple_test("aSf_BFu1c_BFu7s");
    static aSf_BFu1c_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aSf_BFu1c_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aSf_BFu1c_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu7s(Test_aSf_BFu1c_BFu7s, "aSf_BFu1c_BFu7s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu8c()
{
  {
    init_simple_test("aSf_BFu1c_BFu8c");
    static aSf_BFu1c_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aSf_BFu1c_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aSf_BFu1c_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu8c(Test_aSf_BFu1c_BFu8c, "aSf_BFu1c_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu8i()
{
  {
    init_simple_test("aSf_BFu1c_BFu8i");
    static aSf_BFu1c_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aSf_BFu1c_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aSf_BFu1c_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu8i(Test_aSf_BFu1c_BFu8i, "aSf_BFu1c_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu8ll()
{
  {
    init_simple_test("aSf_BFu1c_BFu8ll");
    static aSf_BFu1c_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aSf_BFu1c_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aSf_BFu1c_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu8ll(Test_aSf_BFu1c_BFu8ll, "aSf_BFu1c_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu8s()
{
  {
    init_simple_test("aSf_BFu1c_BFu8s");
    static aSf_BFu1c_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aSf_BFu1c_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aSf_BFu1c_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu8s(Test_aSf_BFu1c_BFu8s, "aSf_BFu1c_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu9i()
{
  {
    init_simple_test("aSf_BFu1c_BFu9i");
    static aSf_BFu1c_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aSf_BFu1c_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aSf_BFu1c_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu9i(Test_aSf_BFu1c_BFu9i, "aSf_BFu1c_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu9ll()
{
  {
    init_simple_test("aSf_BFu1c_BFu9ll");
    static aSf_BFu1c_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aSf_BFu1c_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aSf_BFu1c_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu9ll(Test_aSf_BFu1c_BFu9ll, "aSf_BFu1c_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_BFu9s()
{
  {
    init_simple_test("aSf_BFu1c_BFu9s");
    static aSf_BFu1c_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aSf_BFu1c_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aSf_BFu1c_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_BFu9s(Test_aSf_BFu1c_BFu9s, "aSf_BFu1c_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_C()
{
  {
    init_simple_test("aSf_BFu1c_C");
    static aSf_BFu1c_C lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_C");
    check_field_offset(lv, v3, 2, "aSf_BFu1c_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_C(Test_aSf_BFu1c_C, "aSf_BFu1c_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_D()
{
  {
    init_simple_test("aSf_BFu1c_D");
    static aSf_BFu1c_D lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu1c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_D");
    check_field_offset(lv, v3, 2, "aSf_BFu1c_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_D(Test_aSf_BFu1c_D, "aSf_BFu1c_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_F()
{
  {
    init_simple_test("aSf_BFu1c_F");
    static aSf_BFu1c_F lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_F");
    check_field_offset(lv, v3, 2, "aSf_BFu1c_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_F(Test_aSf_BFu1c_F, "aSf_BFu1c_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_I()
{
  {
    init_simple_test("aSf_BFu1c_I");
    static aSf_BFu1c_I lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_I");
    check_field_offset(lv, v3, 2, "aSf_BFu1c_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_I(Test_aSf_BFu1c_I, "aSf_BFu1c_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_Ip()
{
  {
    init_simple_test("aSf_BFu1c_Ip");
    static aSf_BFu1c_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu1c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_Ip");
    check_field_offset(lv, v3, 2, "aSf_BFu1c_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_Ip(Test_aSf_BFu1c_Ip, "aSf_BFu1c_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_L()
{
  {
    init_simple_test("aSf_BFu1c_L");
    static aSf_BFu1c_L lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu1c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_L");
    check_field_offset(lv, v3, 2, "aSf_BFu1c_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_L(Test_aSf_BFu1c_L, "aSf_BFu1c_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_S()
{
  {
    init_simple_test("aSf_BFu1c_S");
    static aSf_BFu1c_S lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_S");
    check_field_offset(lv, v3, 2, "aSf_BFu1c_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_S(Test_aSf_BFu1c_S, "aSf_BFu1c_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_Sf()
{
  {
    init_simple_test("aSf_BFu1c_Sf");
    static aSf_BFu1c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_Sf");
    check_field_offset(lv, v3, 2, "aSf_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_Sf(Test_aSf_BFu1c_Sf, "aSf_BFu1c_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_Uc()
{
  {
    init_simple_test("aSf_BFu1c_Uc");
    static aSf_BFu1c_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_Uc");
    check_field_offset(lv, v3, 2, "aSf_BFu1c_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_Uc(Test_aSf_BFu1c_Uc, "aSf_BFu1c_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_Ui()
{
  {
    init_simple_test("aSf_BFu1c_Ui");
    static aSf_BFu1c_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_Ui");
    check_field_offset(lv, v3, 2, "aSf_BFu1c_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_Ui(Test_aSf_BFu1c_Ui, "aSf_BFu1c_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_Ul()
{
  {
    init_simple_test("aSf_BFu1c_Ul");
    static aSf_BFu1c_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu1c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_Ul");
    check_field_offset(lv, v3, 2, "aSf_BFu1c_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_Ul(Test_aSf_BFu1c_Ul, "aSf_BFu1c_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_Us()
{
  {
    init_simple_test("aSf_BFu1c_Us");
    static aSf_BFu1c_Us lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_Us");
    check_field_offset(lv, v3, 2, "aSf_BFu1c_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_Us(Test_aSf_BFu1c_Us, "aSf_BFu1c_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1c_Vp()
{
  {
    init_simple_test("aSf_BFu1c_Vp");
    static aSf_BFu1c_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu1c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1c_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu1c_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1c_Vp");
    check_field_offset(lv, v3, 2, "aSf_BFu1c_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1c_Vp(Test_aSf_BFu1c_Vp, "aSf_BFu1c_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i()
{
  {
    init_simple_test("aSf_BFu1i");
    static aSf_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i(Test_aSf_BFu1i, "aSf_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu15i()
{
  {
    init_simple_test("aSf_BFu1i_BFu15i");
    static aSf_BFu1i_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aSf_BFu1i_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aSf_BFu1i_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu15i(Test_aSf_BFu1i_BFu15i, "aSf_BFu1i_BFu15i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu15ll()
{
  {
    init_simple_test("aSf_BFu1i_BFu15ll");
    static aSf_BFu1i_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aSf_BFu1i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aSf_BFu1i_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu15ll(Test_aSf_BFu1i_BFu15ll, "aSf_BFu1i_BFu15ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu15s()
{
  {
    init_simple_test("aSf_BFu1i_BFu15s");
    static aSf_BFu1i_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aSf_BFu1i_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aSf_BFu1i_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu15s(Test_aSf_BFu1i_BFu15s, "aSf_BFu1i_BFu15s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu16i()
{
  {
    init_simple_test("aSf_BFu1i_BFu16i");
    static aSf_BFu1i_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aSf_BFu1i_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aSf_BFu1i_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu16i(Test_aSf_BFu1i_BFu16i, "aSf_BFu1i_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu16ll()
{
  {
    init_simple_test("aSf_BFu1i_BFu16ll");
    static aSf_BFu1i_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aSf_BFu1i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aSf_BFu1i_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu16ll(Test_aSf_BFu1i_BFu16ll, "aSf_BFu1i_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu16s()
{
  {
    init_simple_test("aSf_BFu1i_BFu16s");
    static aSf_BFu1i_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aSf_BFu1i_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aSf_BFu1i_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu16s(Test_aSf_BFu1i_BFu16s, "aSf_BFu1i_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu17i()
{
  {
    init_simple_test("aSf_BFu1i_BFu17i");
    static aSf_BFu1i_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "aSf_BFu1i_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "aSf_BFu1i_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu17i(Test_aSf_BFu1i_BFu17i, "aSf_BFu1i_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu17ll()
{
  {
    init_simple_test("aSf_BFu1i_BFu17ll");
    static aSf_BFu1i_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "aSf_BFu1i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "aSf_BFu1i_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu17ll(Test_aSf_BFu1i_BFu17ll, "aSf_BFu1i_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu1c()
{
  {
    init_simple_test("aSf_BFu1i_BFu1c");
    static aSf_BFu1i_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aSf_BFu1i_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu1c(Test_aSf_BFu1i_BFu1c, "aSf_BFu1i_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu1i()
{
  {
    init_simple_test("aSf_BFu1i_BFu1i");
    static aSf_BFu1i_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aSf_BFu1i_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu1i(Test_aSf_BFu1i_BFu1i, "aSf_BFu1i_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu1ll()
{
  {
    init_simple_test("aSf_BFu1i_BFu1ll");
    static aSf_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aSf_BFu1i_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu1ll(Test_aSf_BFu1i_BFu1ll, "aSf_BFu1i_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu1s()
{
  {
    init_simple_test("aSf_BFu1i_BFu1s");
    static aSf_BFu1i_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aSf_BFu1i_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu1s(Test_aSf_BFu1i_BFu1s, "aSf_BFu1i_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu31i()
{
  {
    init_simple_test("aSf_BFu1i_BFu31i");
    static aSf_BFu1i_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu1i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "aSf_BFu1i_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "aSf_BFu1i_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu31i(Test_aSf_BFu1i_BFu31i, "aSf_BFu1i_BFu31i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu31ll()
{
  {
    init_simple_test("aSf_BFu1i_BFu31ll");
    static aSf_BFu1i_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu1i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "aSf_BFu1i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "aSf_BFu1i_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu31ll(Test_aSf_BFu1i_BFu31ll, "aSf_BFu1i_BFu31ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu32i()
{
  {
    init_simple_test("aSf_BFu1i_BFu32i");
    static aSf_BFu1i_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "aSf_BFu1i_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "aSf_BFu1i_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu32i(Test_aSf_BFu1i_BFu32i, "aSf_BFu1i_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu32ll()
{
  {
    init_simple_test("aSf_BFu1i_BFu32ll");
    static aSf_BFu1i_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "aSf_BFu1i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "aSf_BFu1i_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu32ll(Test_aSf_BFu1i_BFu32ll, "aSf_BFu1i_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu33()
{
  {
    init_simple_test("aSf_BFu1i_BFu33");
    static aSf_BFu1i_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, 1, "aSf_BFu1i_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, hide_ull(1LL<<32), "aSf_BFu1i_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu33(Test_aSf_BFu1i_BFu33, "aSf_BFu1i_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu7c()
{
  {
    init_simple_test("aSf_BFu1i_BFu7c");
    static aSf_BFu1i_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aSf_BFu1i_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aSf_BFu1i_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu7c(Test_aSf_BFu1i_BFu7c, "aSf_BFu1i_BFu7c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu7i()
{
  {
    init_simple_test("aSf_BFu1i_BFu7i");
    static aSf_BFu1i_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aSf_BFu1i_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aSf_BFu1i_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu7i(Test_aSf_BFu1i_BFu7i, "aSf_BFu1i_BFu7i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu7ll()
{
  {
    init_simple_test("aSf_BFu1i_BFu7ll");
    static aSf_BFu1i_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aSf_BFu1i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aSf_BFu1i_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu7ll(Test_aSf_BFu1i_BFu7ll, "aSf_BFu1i_BFu7ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu7s()
{
  {
    init_simple_test("aSf_BFu1i_BFu7s");
    static aSf_BFu1i_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aSf_BFu1i_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aSf_BFu1i_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu7s(Test_aSf_BFu1i_BFu7s, "aSf_BFu1i_BFu7s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu8c()
{
  {
    init_simple_test("aSf_BFu1i_BFu8c");
    static aSf_BFu1i_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aSf_BFu1i_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aSf_BFu1i_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu8c(Test_aSf_BFu1i_BFu8c, "aSf_BFu1i_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu8i()
{
  {
    init_simple_test("aSf_BFu1i_BFu8i");
    static aSf_BFu1i_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aSf_BFu1i_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aSf_BFu1i_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu8i(Test_aSf_BFu1i_BFu8i, "aSf_BFu1i_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu8ll()
{
  {
    init_simple_test("aSf_BFu1i_BFu8ll");
    static aSf_BFu1i_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aSf_BFu1i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aSf_BFu1i_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu8ll(Test_aSf_BFu1i_BFu8ll, "aSf_BFu1i_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu8s()
{
  {
    init_simple_test("aSf_BFu1i_BFu8s");
    static aSf_BFu1i_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aSf_BFu1i_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aSf_BFu1i_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu8s(Test_aSf_BFu1i_BFu8s, "aSf_BFu1i_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu9i()
{
  {
    init_simple_test("aSf_BFu1i_BFu9i");
    static aSf_BFu1i_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aSf_BFu1i_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aSf_BFu1i_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu9i(Test_aSf_BFu1i_BFu9i, "aSf_BFu1i_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu9ll()
{
  {
    init_simple_test("aSf_BFu1i_BFu9ll");
    static aSf_BFu1i_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aSf_BFu1i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aSf_BFu1i_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu9ll(Test_aSf_BFu1i_BFu9ll, "aSf_BFu1i_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_BFu9s()
{
  {
    init_simple_test("aSf_BFu1i_BFu9s");
    static aSf_BFu1i_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aSf_BFu1i_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aSf_BFu1i_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_BFu9s(Test_aSf_BFu1i_BFu9s, "aSf_BFu1i_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_C()
{
  {
    init_simple_test("aSf_BFu1i_C");
    static aSf_BFu1i_C lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_C");
    check_field_offset(lv, v3, 2, "aSf_BFu1i_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_C(Test_aSf_BFu1i_C, "aSf_BFu1i_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_D()
{
  {
    init_simple_test("aSf_BFu1i_D");
    static aSf_BFu1i_D lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu1i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_D");
    check_field_offset(lv, v3, 2, "aSf_BFu1i_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_D(Test_aSf_BFu1i_D, "aSf_BFu1i_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_F()
{
  {
    init_simple_test("aSf_BFu1i_F");
    static aSf_BFu1i_F lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_F");
    check_field_offset(lv, v3, 2, "aSf_BFu1i_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_F(Test_aSf_BFu1i_F, "aSf_BFu1i_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_I()
{
  {
    init_simple_test("aSf_BFu1i_I");
    static aSf_BFu1i_I lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_I");
    check_field_offset(lv, v3, 2, "aSf_BFu1i_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_I(Test_aSf_BFu1i_I, "aSf_BFu1i_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_Ip()
{
  {
    init_simple_test("aSf_BFu1i_Ip");
    static aSf_BFu1i_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu1i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_Ip");
    check_field_offset(lv, v3, 2, "aSf_BFu1i_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_Ip(Test_aSf_BFu1i_Ip, "aSf_BFu1i_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_L()
{
  {
    init_simple_test("aSf_BFu1i_L");
    static aSf_BFu1i_L lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu1i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_L");
    check_field_offset(lv, v3, 2, "aSf_BFu1i_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_L(Test_aSf_BFu1i_L, "aSf_BFu1i_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_S()
{
  {
    init_simple_test("aSf_BFu1i_S");
    static aSf_BFu1i_S lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_S");
    check_field_offset(lv, v3, 2, "aSf_BFu1i_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_S(Test_aSf_BFu1i_S, "aSf_BFu1i_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_Sf()
{
  {
    init_simple_test("aSf_BFu1i_Sf");
    static aSf_BFu1i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_Sf");
    check_field_offset(lv, v3, 2, "aSf_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_Sf(Test_aSf_BFu1i_Sf, "aSf_BFu1i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_Uc()
{
  {
    init_simple_test("aSf_BFu1i_Uc");
    static aSf_BFu1i_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_Uc");
    check_field_offset(lv, v3, 2, "aSf_BFu1i_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_Uc(Test_aSf_BFu1i_Uc, "aSf_BFu1i_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_Ui()
{
  {
    init_simple_test("aSf_BFu1i_Ui");
    static aSf_BFu1i_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_Ui");
    check_field_offset(lv, v3, 2, "aSf_BFu1i_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_Ui(Test_aSf_BFu1i_Ui, "aSf_BFu1i_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_Ul()
{
  {
    init_simple_test("aSf_BFu1i_Ul");
    static aSf_BFu1i_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu1i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_Ul");
    check_field_offset(lv, v3, 2, "aSf_BFu1i_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_Ul(Test_aSf_BFu1i_Ul, "aSf_BFu1i_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_Us()
{
  {
    init_simple_test("aSf_BFu1i_Us");
    static aSf_BFu1i_Us lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_Us");
    check_field_offset(lv, v3, 2, "aSf_BFu1i_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_Us(Test_aSf_BFu1i_Us, "aSf_BFu1i_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1i_Vp()
{
  {
    init_simple_test("aSf_BFu1i_Vp");
    static aSf_BFu1i_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu1i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1i_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu1i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1i_Vp");
    check_field_offset(lv, v3, 2, "aSf_BFu1i_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1i_Vp(Test_aSf_BFu1i_Vp, "aSf_BFu1i_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll()
{
  {
    init_simple_test("aSf_BFu1ll");
    static aSf_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll(Test_aSf_BFu1ll, "aSf_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu15i()
{
  {
    init_simple_test("aSf_BFu1ll_BFu15i");
    static aSf_BFu1ll_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aSf_BFu1ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aSf_BFu1ll_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu15i(Test_aSf_BFu1ll_BFu15i, "aSf_BFu1ll_BFu15i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu15ll()
{
  {
    init_simple_test("aSf_BFu1ll_BFu15ll");
    static aSf_BFu1ll_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aSf_BFu1ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aSf_BFu1ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu15ll(Test_aSf_BFu1ll_BFu15ll, "aSf_BFu1ll_BFu15ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu15s()
{
  {
    init_simple_test("aSf_BFu1ll_BFu15s");
    static aSf_BFu1ll_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aSf_BFu1ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aSf_BFu1ll_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu15s(Test_aSf_BFu1ll_BFu15s, "aSf_BFu1ll_BFu15s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu16i()
{
  {
    init_simple_test("aSf_BFu1ll_BFu16i");
    static aSf_BFu1ll_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aSf_BFu1ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aSf_BFu1ll_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu16i(Test_aSf_BFu1ll_BFu16i, "aSf_BFu1ll_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu16ll()
{
  {
    init_simple_test("aSf_BFu1ll_BFu16ll");
    static aSf_BFu1ll_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aSf_BFu1ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aSf_BFu1ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu16ll(Test_aSf_BFu1ll_BFu16ll, "aSf_BFu1ll_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu16s()
{
  {
    init_simple_test("aSf_BFu1ll_BFu16s");
    static aSf_BFu1ll_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aSf_BFu1ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aSf_BFu1ll_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu16s(Test_aSf_BFu1ll_BFu16s, "aSf_BFu1ll_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu17i()
{
  {
    init_simple_test("aSf_BFu1ll_BFu17i");
    static aSf_BFu1ll_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "aSf_BFu1ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "aSf_BFu1ll_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu17i(Test_aSf_BFu1ll_BFu17i, "aSf_BFu1ll_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu17ll()
{
  {
    init_simple_test("aSf_BFu1ll_BFu17ll");
    static aSf_BFu1ll_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "aSf_BFu1ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "aSf_BFu1ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu17ll(Test_aSf_BFu1ll_BFu17ll, "aSf_BFu1ll_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu1c()
{
  {
    init_simple_test("aSf_BFu1ll_BFu1c");
    static aSf_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aSf_BFu1ll_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu1c(Test_aSf_BFu1ll_BFu1c, "aSf_BFu1ll_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu1i()
{
  {
    init_simple_test("aSf_BFu1ll_BFu1i");
    static aSf_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aSf_BFu1ll_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu1i(Test_aSf_BFu1ll_BFu1i, "aSf_BFu1ll_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aSf_BFu1ll_BFu1ll");
    static aSf_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aSf_BFu1ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu1ll(Test_aSf_BFu1ll_BFu1ll, "aSf_BFu1ll_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu1s()
{
  {
    init_simple_test("aSf_BFu1ll_BFu1s");
    static aSf_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aSf_BFu1ll_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu1s(Test_aSf_BFu1ll_BFu1s, "aSf_BFu1ll_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu31i()
{
  {
    init_simple_test("aSf_BFu1ll_BFu31i");
    static aSf_BFu1ll_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu1ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "aSf_BFu1ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "aSf_BFu1ll_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu31i(Test_aSf_BFu1ll_BFu31i, "aSf_BFu1ll_BFu31i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu31ll()
{
  {
    init_simple_test("aSf_BFu1ll_BFu31ll");
    static aSf_BFu1ll_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu1ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "aSf_BFu1ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "aSf_BFu1ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu31ll(Test_aSf_BFu1ll_BFu31ll, "aSf_BFu1ll_BFu31ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu32i()
{
  {
    init_simple_test("aSf_BFu1ll_BFu32i");
    static aSf_BFu1ll_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "aSf_BFu1ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "aSf_BFu1ll_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu32i(Test_aSf_BFu1ll_BFu32i, "aSf_BFu1ll_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu32ll()
{
  {
    init_simple_test("aSf_BFu1ll_BFu32ll");
    static aSf_BFu1ll_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "aSf_BFu1ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "aSf_BFu1ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu32ll(Test_aSf_BFu1ll_BFu32ll, "aSf_BFu1ll_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu33()
{
  {
    init_simple_test("aSf_BFu1ll_BFu33");
    static aSf_BFu1ll_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, 1, "aSf_BFu1ll_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, hide_ull(1LL<<32), "aSf_BFu1ll_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu33(Test_aSf_BFu1ll_BFu33, "aSf_BFu1ll_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu7c()
{
  {
    init_simple_test("aSf_BFu1ll_BFu7c");
    static aSf_BFu1ll_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aSf_BFu1ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aSf_BFu1ll_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu7c(Test_aSf_BFu1ll_BFu7c, "aSf_BFu1ll_BFu7c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu7i()
{
  {
    init_simple_test("aSf_BFu1ll_BFu7i");
    static aSf_BFu1ll_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aSf_BFu1ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aSf_BFu1ll_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu7i(Test_aSf_BFu1ll_BFu7i, "aSf_BFu1ll_BFu7i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu7ll()
{
  {
    init_simple_test("aSf_BFu1ll_BFu7ll");
    static aSf_BFu1ll_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aSf_BFu1ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aSf_BFu1ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu7ll(Test_aSf_BFu1ll_BFu7ll, "aSf_BFu1ll_BFu7ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu7s()
{
  {
    init_simple_test("aSf_BFu1ll_BFu7s");
    static aSf_BFu1ll_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aSf_BFu1ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aSf_BFu1ll_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu7s(Test_aSf_BFu1ll_BFu7s, "aSf_BFu1ll_BFu7s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu8c()
{
  {
    init_simple_test("aSf_BFu1ll_BFu8c");
    static aSf_BFu1ll_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aSf_BFu1ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aSf_BFu1ll_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu8c(Test_aSf_BFu1ll_BFu8c, "aSf_BFu1ll_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu8i()
{
  {
    init_simple_test("aSf_BFu1ll_BFu8i");
    static aSf_BFu1ll_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aSf_BFu1ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aSf_BFu1ll_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu8i(Test_aSf_BFu1ll_BFu8i, "aSf_BFu1ll_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu8ll()
{
  {
    init_simple_test("aSf_BFu1ll_BFu8ll");
    static aSf_BFu1ll_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aSf_BFu1ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aSf_BFu1ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu8ll(Test_aSf_BFu1ll_BFu8ll, "aSf_BFu1ll_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu8s()
{
  {
    init_simple_test("aSf_BFu1ll_BFu8s");
    static aSf_BFu1ll_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aSf_BFu1ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aSf_BFu1ll_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu8s(Test_aSf_BFu1ll_BFu8s, "aSf_BFu1ll_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu9i()
{
  {
    init_simple_test("aSf_BFu1ll_BFu9i");
    static aSf_BFu1ll_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aSf_BFu1ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aSf_BFu1ll_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu9i(Test_aSf_BFu1ll_BFu9i, "aSf_BFu1ll_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu9ll()
{
  {
    init_simple_test("aSf_BFu1ll_BFu9ll");
    static aSf_BFu1ll_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aSf_BFu1ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aSf_BFu1ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu9ll(Test_aSf_BFu1ll_BFu9ll, "aSf_BFu1ll_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_BFu9s()
{
  {
    init_simple_test("aSf_BFu1ll_BFu9s");
    static aSf_BFu1ll_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aSf_BFu1ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aSf_BFu1ll_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_BFu9s(Test_aSf_BFu1ll_BFu9s, "aSf_BFu1ll_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_C()
{
  {
    init_simple_test("aSf_BFu1ll_C");
    static aSf_BFu1ll_C lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_C");
    check_field_offset(lv, v3, 2, "aSf_BFu1ll_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_C(Test_aSf_BFu1ll_C, "aSf_BFu1ll_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_D()
{
  {
    init_simple_test("aSf_BFu1ll_D");
    static aSf_BFu1ll_D lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu1ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_D");
    check_field_offset(lv, v3, 2, "aSf_BFu1ll_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_D(Test_aSf_BFu1ll_D, "aSf_BFu1ll_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_F()
{
  {
    init_simple_test("aSf_BFu1ll_F");
    static aSf_BFu1ll_F lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_F");
    check_field_offset(lv, v3, 2, "aSf_BFu1ll_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_F(Test_aSf_BFu1ll_F, "aSf_BFu1ll_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_I()
{
  {
    init_simple_test("aSf_BFu1ll_I");
    static aSf_BFu1ll_I lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_I");
    check_field_offset(lv, v3, 2, "aSf_BFu1ll_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_I(Test_aSf_BFu1ll_I, "aSf_BFu1ll_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_Ip()
{
  {
    init_simple_test("aSf_BFu1ll_Ip");
    static aSf_BFu1ll_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu1ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_Ip");
    check_field_offset(lv, v3, 2, "aSf_BFu1ll_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_Ip(Test_aSf_BFu1ll_Ip, "aSf_BFu1ll_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_L()
{
  {
    init_simple_test("aSf_BFu1ll_L");
    static aSf_BFu1ll_L lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu1ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_L");
    check_field_offset(lv, v3, 2, "aSf_BFu1ll_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_L(Test_aSf_BFu1ll_L, "aSf_BFu1ll_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_S()
{
  {
    init_simple_test("aSf_BFu1ll_S");
    static aSf_BFu1ll_S lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_S");
    check_field_offset(lv, v3, 2, "aSf_BFu1ll_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_S(Test_aSf_BFu1ll_S, "aSf_BFu1ll_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_Sf()
{
  {
    init_simple_test("aSf_BFu1ll_Sf");
    static aSf_BFu1ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_Sf");
    check_field_offset(lv, v3, 2, "aSf_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_Sf(Test_aSf_BFu1ll_Sf, "aSf_BFu1ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_Uc()
{
  {
    init_simple_test("aSf_BFu1ll_Uc");
    static aSf_BFu1ll_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_Uc");
    check_field_offset(lv, v3, 2, "aSf_BFu1ll_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_Uc(Test_aSf_BFu1ll_Uc, "aSf_BFu1ll_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_Ui()
{
  {
    init_simple_test("aSf_BFu1ll_Ui");
    static aSf_BFu1ll_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_Ui");
    check_field_offset(lv, v3, 2, "aSf_BFu1ll_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_Ui(Test_aSf_BFu1ll_Ui, "aSf_BFu1ll_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_Ul()
{
  {
    init_simple_test("aSf_BFu1ll_Ul");
    static aSf_BFu1ll_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu1ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_Ul");
    check_field_offset(lv, v3, 2, "aSf_BFu1ll_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_Ul(Test_aSf_BFu1ll_Ul, "aSf_BFu1ll_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_Us()
{
  {
    init_simple_test("aSf_BFu1ll_Us");
    static aSf_BFu1ll_Us lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_Us");
    check_field_offset(lv, v3, 2, "aSf_BFu1ll_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_Us(Test_aSf_BFu1ll_Us, "aSf_BFu1ll_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1ll_Vp()
{
  {
    init_simple_test("aSf_BFu1ll_Vp");
    static aSf_BFu1ll_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu1ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1ll_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu1ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1ll_Vp");
    check_field_offset(lv, v3, 2, "aSf_BFu1ll_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1ll_Vp(Test_aSf_BFu1ll_Vp, "aSf_BFu1ll_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s()
{
  {
    init_simple_test("aSf_BFu1s");
    static aSf_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s(Test_aSf_BFu1s, "aSf_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu15i()
{
  {
    init_simple_test("aSf_BFu1s_BFu15i");
    static aSf_BFu1s_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aSf_BFu1s_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aSf_BFu1s_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu15i(Test_aSf_BFu1s_BFu15i, "aSf_BFu1s_BFu15i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu15ll()
{
  {
    init_simple_test("aSf_BFu1s_BFu15ll");
    static aSf_BFu1s_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aSf_BFu1s_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aSf_BFu1s_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu15ll(Test_aSf_BFu1s_BFu15ll, "aSf_BFu1s_BFu15ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu15s()
{
  {
    init_simple_test("aSf_BFu1s_BFu15s");
    static aSf_BFu1s_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aSf_BFu1s_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aSf_BFu1s_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu15s(Test_aSf_BFu1s_BFu15s, "aSf_BFu1s_BFu15s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu16i()
{
  {
    init_simple_test("aSf_BFu1s_BFu16i");
    static aSf_BFu1s_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aSf_BFu1s_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aSf_BFu1s_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu16i(Test_aSf_BFu1s_BFu16i, "aSf_BFu1s_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu16ll()
{
  {
    init_simple_test("aSf_BFu1s_BFu16ll");
    static aSf_BFu1s_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aSf_BFu1s_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aSf_BFu1s_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu16ll(Test_aSf_BFu1s_BFu16ll, "aSf_BFu1s_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu16s()
{
  {
    init_simple_test("aSf_BFu1s_BFu16s");
    static aSf_BFu1s_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aSf_BFu1s_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aSf_BFu1s_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu16s(Test_aSf_BFu1s_BFu16s, "aSf_BFu1s_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu17i()
{
  {
    init_simple_test("aSf_BFu1s_BFu17i");
    static aSf_BFu1s_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "aSf_BFu1s_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "aSf_BFu1s_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu17i(Test_aSf_BFu1s_BFu17i, "aSf_BFu1s_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu17ll()
{
  {
    init_simple_test("aSf_BFu1s_BFu17ll");
    static aSf_BFu1s_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "aSf_BFu1s_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "aSf_BFu1s_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu17ll(Test_aSf_BFu1s_BFu17ll, "aSf_BFu1s_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu1c()
{
  {
    init_simple_test("aSf_BFu1s_BFu1c");
    static aSf_BFu1s_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aSf_BFu1s_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu1c(Test_aSf_BFu1s_BFu1c, "aSf_BFu1s_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu1i()
{
  {
    init_simple_test("aSf_BFu1s_BFu1i");
    static aSf_BFu1s_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aSf_BFu1s_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu1i(Test_aSf_BFu1s_BFu1i, "aSf_BFu1s_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu1ll()
{
  {
    init_simple_test("aSf_BFu1s_BFu1ll");
    static aSf_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aSf_BFu1s_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu1ll(Test_aSf_BFu1s_BFu1ll, "aSf_BFu1s_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu1s()
{
  {
    init_simple_test("aSf_BFu1s_BFu1s");
    static aSf_BFu1s_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aSf_BFu1s_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu1s(Test_aSf_BFu1s_BFu1s, "aSf_BFu1s_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu31i()
{
  {
    init_simple_test("aSf_BFu1s_BFu31i");
    static aSf_BFu1s_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu1s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "aSf_BFu1s_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "aSf_BFu1s_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu31i(Test_aSf_BFu1s_BFu31i, "aSf_BFu1s_BFu31i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu31ll()
{
  {
    init_simple_test("aSf_BFu1s_BFu31ll");
    static aSf_BFu1s_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu1s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "aSf_BFu1s_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "aSf_BFu1s_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu31ll(Test_aSf_BFu1s_BFu31ll, "aSf_BFu1s_BFu31ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu32i()
{
  {
    init_simple_test("aSf_BFu1s_BFu32i");
    static aSf_BFu1s_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "aSf_BFu1s_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "aSf_BFu1s_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu32i(Test_aSf_BFu1s_BFu32i, "aSf_BFu1s_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu32ll()
{
  {
    init_simple_test("aSf_BFu1s_BFu32ll");
    static aSf_BFu1s_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "aSf_BFu1s_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "aSf_BFu1s_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu32ll(Test_aSf_BFu1s_BFu32ll, "aSf_BFu1s_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu33()
{
  {
    init_simple_test("aSf_BFu1s_BFu33");
    static aSf_BFu1s_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, 1, "aSf_BFu1s_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, hide_ull(1LL<<32), "aSf_BFu1s_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu33(Test_aSf_BFu1s_BFu33, "aSf_BFu1s_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu7c()
{
  {
    init_simple_test("aSf_BFu1s_BFu7c");
    static aSf_BFu1s_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aSf_BFu1s_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aSf_BFu1s_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu7c(Test_aSf_BFu1s_BFu7c, "aSf_BFu1s_BFu7c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu7i()
{
  {
    init_simple_test("aSf_BFu1s_BFu7i");
    static aSf_BFu1s_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aSf_BFu1s_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aSf_BFu1s_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu7i(Test_aSf_BFu1s_BFu7i, "aSf_BFu1s_BFu7i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu7ll()
{
  {
    init_simple_test("aSf_BFu1s_BFu7ll");
    static aSf_BFu1s_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aSf_BFu1s_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aSf_BFu1s_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu7ll(Test_aSf_BFu1s_BFu7ll, "aSf_BFu1s_BFu7ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu7s()
{
  {
    init_simple_test("aSf_BFu1s_BFu7s");
    static aSf_BFu1s_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu1s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aSf_BFu1s_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aSf_BFu1s_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu7s(Test_aSf_BFu1s_BFu7s, "aSf_BFu1s_BFu7s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu8c()
{
  {
    init_simple_test("aSf_BFu1s_BFu8c");
    static aSf_BFu1s_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aSf_BFu1s_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aSf_BFu1s_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu8c(Test_aSf_BFu1s_BFu8c, "aSf_BFu1s_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu8i()
{
  {
    init_simple_test("aSf_BFu1s_BFu8i");
    static aSf_BFu1s_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aSf_BFu1s_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aSf_BFu1s_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu8i(Test_aSf_BFu1s_BFu8i, "aSf_BFu1s_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu8ll()
{
  {
    init_simple_test("aSf_BFu1s_BFu8ll");
    static aSf_BFu1s_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aSf_BFu1s_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aSf_BFu1s_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu8ll(Test_aSf_BFu1s_BFu8ll, "aSf_BFu1s_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu8s()
{
  {
    init_simple_test("aSf_BFu1s_BFu8s");
    static aSf_BFu1s_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aSf_BFu1s_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aSf_BFu1s_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu8s(Test_aSf_BFu1s_BFu8s, "aSf_BFu1s_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu9i()
{
  {
    init_simple_test("aSf_BFu1s_BFu9i");
    static aSf_BFu1s_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aSf_BFu1s_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aSf_BFu1s_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu9i(Test_aSf_BFu1s_BFu9i, "aSf_BFu1s_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu9ll()
{
  {
    init_simple_test("aSf_BFu1s_BFu9ll");
    static aSf_BFu1s_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aSf_BFu1s_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aSf_BFu1s_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu9ll(Test_aSf_BFu1s_BFu9ll, "aSf_BFu1s_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_BFu9s()
{
  {
    init_simple_test("aSf_BFu1s_BFu9s");
    static aSf_BFu1s_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aSf_BFu1s_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aSf_BFu1s_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_BFu9s(Test_aSf_BFu1s_BFu9s, "aSf_BFu1s_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_C()
{
  {
    init_simple_test("aSf_BFu1s_C");
    static aSf_BFu1s_C lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_C");
    check_field_offset(lv, v3, 2, "aSf_BFu1s_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_C(Test_aSf_BFu1s_C, "aSf_BFu1s_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_D()
{
  {
    init_simple_test("aSf_BFu1s_D");
    static aSf_BFu1s_D lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu1s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_D");
    check_field_offset(lv, v3, 2, "aSf_BFu1s_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_D(Test_aSf_BFu1s_D, "aSf_BFu1s_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_F()
{
  {
    init_simple_test("aSf_BFu1s_F");
    static aSf_BFu1s_F lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_F");
    check_field_offset(lv, v3, 2, "aSf_BFu1s_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_F(Test_aSf_BFu1s_F, "aSf_BFu1s_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_I()
{
  {
    init_simple_test("aSf_BFu1s_I");
    static aSf_BFu1s_I lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_I");
    check_field_offset(lv, v3, 2, "aSf_BFu1s_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_I(Test_aSf_BFu1s_I, "aSf_BFu1s_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_Ip()
{
  {
    init_simple_test("aSf_BFu1s_Ip");
    static aSf_BFu1s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu1s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_Ip");
    check_field_offset(lv, v3, 2, "aSf_BFu1s_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_Ip(Test_aSf_BFu1s_Ip, "aSf_BFu1s_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_L()
{
  {
    init_simple_test("aSf_BFu1s_L");
    static aSf_BFu1s_L lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu1s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_L");
    check_field_offset(lv, v3, 2, "aSf_BFu1s_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_L(Test_aSf_BFu1s_L, "aSf_BFu1s_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_S()
{
  {
    init_simple_test("aSf_BFu1s_S");
    static aSf_BFu1s_S lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_S");
    check_field_offset(lv, v3, 2, "aSf_BFu1s_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_S(Test_aSf_BFu1s_S, "aSf_BFu1s_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_Sf()
{
  {
    init_simple_test("aSf_BFu1s_Sf");
    static aSf_BFu1s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_Sf");
    check_field_offset(lv, v3, 2, "aSf_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_Sf(Test_aSf_BFu1s_Sf, "aSf_BFu1s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_Uc()
{
  {
    init_simple_test("aSf_BFu1s_Uc");
    static aSf_BFu1s_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu1s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_Uc");
    check_field_offset(lv, v3, 2, "aSf_BFu1s_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_Uc(Test_aSf_BFu1s_Uc, "aSf_BFu1s_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_Ui()
{
  {
    init_simple_test("aSf_BFu1s_Ui");
    static aSf_BFu1s_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu1s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_Ui");
    check_field_offset(lv, v3, 2, "aSf_BFu1s_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_Ui(Test_aSf_BFu1s_Ui, "aSf_BFu1s_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_Ul()
{
  {
    init_simple_test("aSf_BFu1s_Ul");
    static aSf_BFu1s_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu1s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_Ul");
    check_field_offset(lv, v3, 2, "aSf_BFu1s_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_Ul(Test_aSf_BFu1s_Ul, "aSf_BFu1s_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_Us()
{
  {
    init_simple_test("aSf_BFu1s_Us");
    static aSf_BFu1s_Us lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu1s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_Us");
    check_field_offset(lv, v3, 2, "aSf_BFu1s_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_Us(Test_aSf_BFu1s_Us, "aSf_BFu1s_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu1s_Vp()
{
  {
    init_simple_test("aSf_BFu1s_Vp");
    static aSf_BFu1s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu1s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu1s_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu1s_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aSf_BFu1s_Vp");
    check_field_offset(lv, v3, 2, "aSf_BFu1s_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu1s_Vp(Test_aSf_BFu1s_Vp, "aSf_BFu1s_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i()
{
  {
    init_simple_test("aSf_BFu31i");
    static aSf_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i(Test_aSf_BFu31i, "aSf_BFu31i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu15i()
{
  {
    init_simple_test("aSf_BFu31i_BFu15i");
    static aSf_BFu31i_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu15i");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "aSf_BFu31i_BFu15i");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "aSf_BFu31i_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu15i(Test_aSf_BFu31i_BFu15i, "aSf_BFu31i_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu15ll()
{
  {
    init_simple_test("aSf_BFu31i_BFu15ll");
    static aSf_BFu31i_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu15ll");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "aSf_BFu31i_BFu15ll");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "aSf_BFu31i_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu15ll(Test_aSf_BFu31i_BFu15ll, "aSf_BFu31i_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu15s()
{
  {
    init_simple_test("aSf_BFu31i_BFu15s");
    static aSf_BFu31i_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu15s");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "aSf_BFu31i_BFu15s");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "aSf_BFu31i_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu15s(Test_aSf_BFu31i_BFu15s, "aSf_BFu31i_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu16i()
{
  {
    init_simple_test("aSf_BFu31i_BFu16i");
    static aSf_BFu31i_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu16i");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "aSf_BFu31i_BFu16i");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "aSf_BFu31i_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu16i(Test_aSf_BFu31i_BFu16i, "aSf_BFu31i_BFu16i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu16ll()
{
  {
    init_simple_test("aSf_BFu31i_BFu16ll");
    static aSf_BFu31i_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "aSf_BFu31i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "aSf_BFu31i_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu16ll(Test_aSf_BFu31i_BFu16ll, "aSf_BFu31i_BFu16ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu16s()
{
  {
    init_simple_test("aSf_BFu31i_BFu16s");
    static aSf_BFu31i_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu16s");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "aSf_BFu31i_BFu16s");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "aSf_BFu31i_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu16s(Test_aSf_BFu31i_BFu16s, "aSf_BFu31i_BFu16s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu17i()
{
  {
    init_simple_test("aSf_BFu31i_BFu17i");
    static aSf_BFu31i_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu17i");
    set_bf_and_test(lv, v3, 4, 7, 17, 1, "aSf_BFu31i_BFu17i");
    set_bf_and_test(lv, v3, 4, 7, 17, hide_ull(1LL<<16), "aSf_BFu31i_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu17i(Test_aSf_BFu31i_BFu17i, "aSf_BFu31i_BFu17i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu17ll()
{
  {
    init_simple_test("aSf_BFu31i_BFu17ll");
    static aSf_BFu31i_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 7, 17, 1, "aSf_BFu31i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 7, 17, hide_ull(1LL<<16), "aSf_BFu31i_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu17ll(Test_aSf_BFu31i_BFu17ll, "aSf_BFu31i_BFu17ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu1c()
{
  {
    init_simple_test("aSf_BFu31i_BFu1c");
    static aSf_BFu31i_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu31i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu1c");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "aSf_BFu31i_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu1c(Test_aSf_BFu31i_BFu1c, "aSf_BFu31i_BFu1c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu1i()
{
  {
    init_simple_test("aSf_BFu31i_BFu1i");
    static aSf_BFu31i_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu31i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu1i");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "aSf_BFu31i_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu1i(Test_aSf_BFu31i_BFu1i, "aSf_BFu31i_BFu1i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu1ll()
{
  {
    init_simple_test("aSf_BFu31i_BFu1ll");
    static aSf_BFu31i_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu31i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu1ll");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "aSf_BFu31i_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu1ll(Test_aSf_BFu31i_BFu1ll, "aSf_BFu31i_BFu1ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu1s()
{
  {
    init_simple_test("aSf_BFu31i_BFu1s");
    static aSf_BFu31i_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu31i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu1s");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "aSf_BFu31i_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu1s(Test_aSf_BFu31i_BFu1s, "aSf_BFu31i_BFu1s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu31i()
{
  {
    init_simple_test("aSf_BFu31i_BFu31i");
    static aSf_BFu31i_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu31i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu31i");
    set_bf_and_test(lv, v3, 4, 7, 31, 1, "aSf_BFu31i_BFu31i");
    set_bf_and_test(lv, v3, 4, 7, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu31i(Test_aSf_BFu31i_BFu31i, "aSf_BFu31i_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu31ll()
{
  {
    init_simple_test("aSf_BFu31i_BFu31ll");
    static aSf_BFu31i_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu31i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu31ll");
    set_bf_and_test(lv, v3, 4, 7, 31, 1, "aSf_BFu31i_BFu31ll");
    set_bf_and_test(lv, v3, 4, 7, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu31ll(Test_aSf_BFu31i_BFu31ll, "aSf_BFu31i_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu32i()
{
  {
    init_simple_test("aSf_BFu31i_BFu32i");
    static aSf_BFu31i_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu31i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu32i");
    set_bf_and_test(lv, v3, 4, 7, 32, 1, "aSf_BFu31i_BFu32i");
    set_bf_and_test(lv, v3, 4, 7, 32, hide_ull(1LL<<31), "aSf_BFu31i_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu32i(Test_aSf_BFu31i_BFu32i, "aSf_BFu31i_BFu32i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu32ll()
{
  {
    init_simple_test("aSf_BFu31i_BFu32ll");
    static aSf_BFu31i_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu31i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu32ll");
    set_bf_and_test(lv, v3, 4, 7, 32, 1, "aSf_BFu31i_BFu32ll");
    set_bf_and_test(lv, v3, 4, 7, 32, hide_ull(1LL<<31), "aSf_BFu31i_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu32ll(Test_aSf_BFu31i_BFu32ll, "aSf_BFu31i_BFu32ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu33()
{
  {
    init_simple_test("aSf_BFu31i_BFu33");
    static aSf_BFu31i_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu31i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu33");
    set_bf_and_test(lv, v3, 4, 7, 33, 1, "aSf_BFu31i_BFu33");
    set_bf_and_test(lv, v3, 4, 7, 33, hide_ull(1LL<<32), "aSf_BFu31i_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu33(Test_aSf_BFu31i_BFu33, "aSf_BFu31i_BFu33", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu7c()
{
  {
    init_simple_test("aSf_BFu31i_BFu7c");
    static aSf_BFu31i_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu7c");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "aSf_BFu31i_BFu7c");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "aSf_BFu31i_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu7c(Test_aSf_BFu31i_BFu7c, "aSf_BFu31i_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu7i()
{
  {
    init_simple_test("aSf_BFu31i_BFu7i");
    static aSf_BFu31i_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu7i");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "aSf_BFu31i_BFu7i");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "aSf_BFu31i_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu7i(Test_aSf_BFu31i_BFu7i, "aSf_BFu31i_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu7ll()
{
  {
    init_simple_test("aSf_BFu31i_BFu7ll");
    static aSf_BFu31i_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu7ll");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "aSf_BFu31i_BFu7ll");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "aSf_BFu31i_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu7ll(Test_aSf_BFu31i_BFu7ll, "aSf_BFu31i_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu7s()
{
  {
    init_simple_test("aSf_BFu31i_BFu7s");
    static aSf_BFu31i_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu7s");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "aSf_BFu31i_BFu7s");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "aSf_BFu31i_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu7s(Test_aSf_BFu31i_BFu7s, "aSf_BFu31i_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu8c()
{
  {
    init_simple_test("aSf_BFu31i_BFu8c");
    static aSf_BFu31i_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu8c");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "aSf_BFu31i_BFu8c");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "aSf_BFu31i_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu8c(Test_aSf_BFu31i_BFu8c, "aSf_BFu31i_BFu8c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu8i()
{
  {
    init_simple_test("aSf_BFu31i_BFu8i");
    static aSf_BFu31i_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu8i");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "aSf_BFu31i_BFu8i");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "aSf_BFu31i_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu8i(Test_aSf_BFu31i_BFu8i, "aSf_BFu31i_BFu8i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu8ll()
{
  {
    init_simple_test("aSf_BFu31i_BFu8ll");
    static aSf_BFu31i_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu8ll");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "aSf_BFu31i_BFu8ll");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "aSf_BFu31i_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu8ll(Test_aSf_BFu31i_BFu8ll, "aSf_BFu31i_BFu8ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu8s()
{
  {
    init_simple_test("aSf_BFu31i_BFu8s");
    static aSf_BFu31i_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu8s");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "aSf_BFu31i_BFu8s");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "aSf_BFu31i_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu8s(Test_aSf_BFu31i_BFu8s, "aSf_BFu31i_BFu8s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu9i()
{
  {
    init_simple_test("aSf_BFu31i_BFu9i");
    static aSf_BFu31i_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu9i");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "aSf_BFu31i_BFu9i");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "aSf_BFu31i_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu9i(Test_aSf_BFu31i_BFu9i, "aSf_BFu31i_BFu9i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu9ll()
{
  {
    init_simple_test("aSf_BFu31i_BFu9ll");
    static aSf_BFu31i_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu9ll");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "aSf_BFu31i_BFu9ll");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "aSf_BFu31i_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu9ll(Test_aSf_BFu31i_BFu9ll, "aSf_BFu31i_BFu9ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_BFu9s()
{
  {
    init_simple_test("aSf_BFu31i_BFu9s");
    static aSf_BFu31i_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_BFu9s");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "aSf_BFu31i_BFu9s");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "aSf_BFu31i_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_BFu9s(Test_aSf_BFu31i_BFu9s, "aSf_BFu31i_BFu9s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_C()
{
  {
    init_simple_test("aSf_BFu31i_C");
    static aSf_BFu31i_C lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_C");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_C");
    check_field_offset(lv, v3, 5, "aSf_BFu31i_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_C(Test_aSf_BFu31i_C, "aSf_BFu31i_C", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_D()
{
  {
    init_simple_test("aSf_BFu31i_D");
    static aSf_BFu31i_D lv;
    check2(sizeof(lv), 13, "sizeof(aSf_BFu31i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_D");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_D");
    check_field_offset(lv, v3, 5, "aSf_BFu31i_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_D(Test_aSf_BFu31i_D, "aSf_BFu31i_D", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_F()
{
  {
    init_simple_test("aSf_BFu31i_F");
    static aSf_BFu31i_F lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu31i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_F");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_F");
    check_field_offset(lv, v3, 5, "aSf_BFu31i_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_F(Test_aSf_BFu31i_F, "aSf_BFu31i_F", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_I()
{
  {
    init_simple_test("aSf_BFu31i_I");
    static aSf_BFu31i_I lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu31i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_I");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_I");
    check_field_offset(lv, v3, 5, "aSf_BFu31i_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_I(Test_aSf_BFu31i_I, "aSf_BFu31i_I", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_Ip()
{
  {
    init_simple_test("aSf_BFu31i_Ip");
    static aSf_BFu31i_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_BFu31i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_Ip");
    check_field_offset(lv, v3, 5, "aSf_BFu31i_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_Ip(Test_aSf_BFu31i_Ip, "aSf_BFu31i_Ip", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_L()
{
  {
    init_simple_test("aSf_BFu31i_L");
    static aSf_BFu31i_L lv;
    check2(sizeof(lv), 13, "sizeof(aSf_BFu31i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_L");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_L");
    check_field_offset(lv, v3, 5, "aSf_BFu31i_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_L(Test_aSf_BFu31i_L, "aSf_BFu31i_L", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_S()
{
  {
    init_simple_test("aSf_BFu31i_S");
    static aSf_BFu31i_S lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_S");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_S");
    check_field_offset(lv, v3, 5, "aSf_BFu31i_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_S(Test_aSf_BFu31i_S, "aSf_BFu31i_S", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_Sf()
{
  {
    init_simple_test("aSf_BFu31i_Sf");
    static aSf_BFu31i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_Sf");
    check_field_offset(lv, v3, 5, "aSf_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_Sf(Test_aSf_BFu31i_Sf, "aSf_BFu31i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_Uc()
{
  {
    init_simple_test("aSf_BFu31i_Uc");
    static aSf_BFu31i_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_Uc");
    check_field_offset(lv, v3, 5, "aSf_BFu31i_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_Uc(Test_aSf_BFu31i_Uc, "aSf_BFu31i_Uc", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_Ui()
{
  {
    init_simple_test("aSf_BFu31i_Ui");
    static aSf_BFu31i_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu31i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_Ui");
    check_field_offset(lv, v3, 5, "aSf_BFu31i_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_Ui(Test_aSf_BFu31i_Ui, "aSf_BFu31i_Ui", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_Ul()
{
  {
    init_simple_test("aSf_BFu31i_Ul");
    static aSf_BFu31i_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aSf_BFu31i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_Ul");
    check_field_offset(lv, v3, 5, "aSf_BFu31i_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_Ul(Test_aSf_BFu31i_Ul, "aSf_BFu31i_Ul", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_Us()
{
  {
    init_simple_test("aSf_BFu31i_Us");
    static aSf_BFu31i_Us lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_Us");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_Us");
    check_field_offset(lv, v3, 5, "aSf_BFu31i_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_Us(Test_aSf_BFu31i_Us, "aSf_BFu31i_Us", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31i_Vp()
{
  {
    init_simple_test("aSf_BFu31i_Vp");
    static aSf_BFu31i_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_BFu31i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31i_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu31i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31i_Vp");
    check_field_offset(lv, v3, 5, "aSf_BFu31i_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31i_Vp(Test_aSf_BFu31i_Vp, "aSf_BFu31i_Vp", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll()
{
  {
    init_simple_test("aSf_BFu31ll");
    static aSf_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll(Test_aSf_BFu31ll, "aSf_BFu31ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu15i()
{
  {
    init_simple_test("aSf_BFu31ll_BFu15i");
    static aSf_BFu31ll_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu15i");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "aSf_BFu31ll_BFu15i");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "aSf_BFu31ll_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu15i(Test_aSf_BFu31ll_BFu15i, "aSf_BFu31ll_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu15ll()
{
  {
    init_simple_test("aSf_BFu31ll_BFu15ll");
    static aSf_BFu31ll_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu15ll");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "aSf_BFu31ll_BFu15ll");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "aSf_BFu31ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu15ll(Test_aSf_BFu31ll_BFu15ll, "aSf_BFu31ll_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu15s()
{
  {
    init_simple_test("aSf_BFu31ll_BFu15s");
    static aSf_BFu31ll_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu15s");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "aSf_BFu31ll_BFu15s");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "aSf_BFu31ll_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu15s(Test_aSf_BFu31ll_BFu15s, "aSf_BFu31ll_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu16i()
{
  {
    init_simple_test("aSf_BFu31ll_BFu16i");
    static aSf_BFu31ll_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "aSf_BFu31ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "aSf_BFu31ll_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu16i(Test_aSf_BFu31ll_BFu16i, "aSf_BFu31ll_BFu16i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu16ll()
{
  {
    init_simple_test("aSf_BFu31ll_BFu16ll");
    static aSf_BFu31ll_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "aSf_BFu31ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "aSf_BFu31ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu16ll(Test_aSf_BFu31ll_BFu16ll, "aSf_BFu31ll_BFu16ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu16s()
{
  {
    init_simple_test("aSf_BFu31ll_BFu16s");
    static aSf_BFu31ll_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "aSf_BFu31ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "aSf_BFu31ll_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu16s(Test_aSf_BFu31ll_BFu16s, "aSf_BFu31ll_BFu16s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu17i()
{
  {
    init_simple_test("aSf_BFu31ll_BFu17i");
    static aSf_BFu31ll_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 7, 17, 1, "aSf_BFu31ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 7, 17, hide_ull(1LL<<16), "aSf_BFu31ll_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu17i(Test_aSf_BFu31ll_BFu17i, "aSf_BFu31ll_BFu17i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu17ll()
{
  {
    init_simple_test("aSf_BFu31ll_BFu17ll");
    static aSf_BFu31ll_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 7, 17, 1, "aSf_BFu31ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 7, 17, hide_ull(1LL<<16), "aSf_BFu31ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu17ll(Test_aSf_BFu31ll_BFu17ll, "aSf_BFu31ll_BFu17ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu1c()
{
  {
    init_simple_test("aSf_BFu31ll_BFu1c");
    static aSf_BFu31ll_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu31ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu1c");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "aSf_BFu31ll_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu1c(Test_aSf_BFu31ll_BFu1c, "aSf_BFu31ll_BFu1c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu1i()
{
  {
    init_simple_test("aSf_BFu31ll_BFu1i");
    static aSf_BFu31ll_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu31ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu1i");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "aSf_BFu31ll_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu1i(Test_aSf_BFu31ll_BFu1i, "aSf_BFu31ll_BFu1i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu1ll()
{
  {
    init_simple_test("aSf_BFu31ll_BFu1ll");
    static aSf_BFu31ll_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu31ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu1ll");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "aSf_BFu31ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu1ll(Test_aSf_BFu31ll_BFu1ll, "aSf_BFu31ll_BFu1ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu1s()
{
  {
    init_simple_test("aSf_BFu31ll_BFu1s");
    static aSf_BFu31ll_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu31ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu1s");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "aSf_BFu31ll_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu1s(Test_aSf_BFu31ll_BFu1s, "aSf_BFu31ll_BFu1s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu31i()
{
  {
    init_simple_test("aSf_BFu31ll_BFu31i");
    static aSf_BFu31ll_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu31ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu31i");
    set_bf_and_test(lv, v3, 4, 7, 31, 1, "aSf_BFu31ll_BFu31i");
    set_bf_and_test(lv, v3, 4, 7, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu31i(Test_aSf_BFu31ll_BFu31i, "aSf_BFu31ll_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu31ll()
{
  {
    init_simple_test("aSf_BFu31ll_BFu31ll");
    static aSf_BFu31ll_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu31ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu31ll");
    set_bf_and_test(lv, v3, 4, 7, 31, 1, "aSf_BFu31ll_BFu31ll");
    set_bf_and_test(lv, v3, 4, 7, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu31ll(Test_aSf_BFu31ll_BFu31ll, "aSf_BFu31ll_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu32i()
{
  {
    init_simple_test("aSf_BFu31ll_BFu32i");
    static aSf_BFu31ll_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu31ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu32i");
    set_bf_and_test(lv, v3, 4, 7, 32, 1, "aSf_BFu31ll_BFu32i");
    set_bf_and_test(lv, v3, 4, 7, 32, hide_ull(1LL<<31), "aSf_BFu31ll_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu32i(Test_aSf_BFu31ll_BFu32i, "aSf_BFu31ll_BFu32i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu32ll()
{
  {
    init_simple_test("aSf_BFu31ll_BFu32ll");
    static aSf_BFu31ll_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu31ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu32ll");
    set_bf_and_test(lv, v3, 4, 7, 32, 1, "aSf_BFu31ll_BFu32ll");
    set_bf_and_test(lv, v3, 4, 7, 32, hide_ull(1LL<<31), "aSf_BFu31ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu32ll(Test_aSf_BFu31ll_BFu32ll, "aSf_BFu31ll_BFu32ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu33()
{
  {
    init_simple_test("aSf_BFu31ll_BFu33");
    static aSf_BFu31ll_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu31ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu33");
    set_bf_and_test(lv, v3, 4, 7, 33, 1, "aSf_BFu31ll_BFu33");
    set_bf_and_test(lv, v3, 4, 7, 33, hide_ull(1LL<<32), "aSf_BFu31ll_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu33(Test_aSf_BFu31ll_BFu33, "aSf_BFu31ll_BFu33", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu7c()
{
  {
    init_simple_test("aSf_BFu31ll_BFu7c");
    static aSf_BFu31ll_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu7c");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "aSf_BFu31ll_BFu7c");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "aSf_BFu31ll_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu7c(Test_aSf_BFu31ll_BFu7c, "aSf_BFu31ll_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu7i()
{
  {
    init_simple_test("aSf_BFu31ll_BFu7i");
    static aSf_BFu31ll_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu7i");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "aSf_BFu31ll_BFu7i");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "aSf_BFu31ll_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu7i(Test_aSf_BFu31ll_BFu7i, "aSf_BFu31ll_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu7ll()
{
  {
    init_simple_test("aSf_BFu31ll_BFu7ll");
    static aSf_BFu31ll_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu7ll");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "aSf_BFu31ll_BFu7ll");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "aSf_BFu31ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu7ll(Test_aSf_BFu31ll_BFu7ll, "aSf_BFu31ll_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu7s()
{
  {
    init_simple_test("aSf_BFu31ll_BFu7s");
    static aSf_BFu31ll_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu7s");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "aSf_BFu31ll_BFu7s");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "aSf_BFu31ll_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu7s(Test_aSf_BFu31ll_BFu7s, "aSf_BFu31ll_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu8c()
{
  {
    init_simple_test("aSf_BFu31ll_BFu8c");
    static aSf_BFu31ll_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu8c");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "aSf_BFu31ll_BFu8c");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "aSf_BFu31ll_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu8c(Test_aSf_BFu31ll_BFu8c, "aSf_BFu31ll_BFu8c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu8i()
{
  {
    init_simple_test("aSf_BFu31ll_BFu8i");
    static aSf_BFu31ll_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu8i");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "aSf_BFu31ll_BFu8i");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "aSf_BFu31ll_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu8i(Test_aSf_BFu31ll_BFu8i, "aSf_BFu31ll_BFu8i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu8ll()
{
  {
    init_simple_test("aSf_BFu31ll_BFu8ll");
    static aSf_BFu31ll_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu8ll");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "aSf_BFu31ll_BFu8ll");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "aSf_BFu31ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu8ll(Test_aSf_BFu31ll_BFu8ll, "aSf_BFu31ll_BFu8ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu8s()
{
  {
    init_simple_test("aSf_BFu31ll_BFu8s");
    static aSf_BFu31ll_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu8s");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "aSf_BFu31ll_BFu8s");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "aSf_BFu31ll_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu8s(Test_aSf_BFu31ll_BFu8s, "aSf_BFu31ll_BFu8s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu9i()
{
  {
    init_simple_test("aSf_BFu31ll_BFu9i");
    static aSf_BFu31ll_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu9i");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "aSf_BFu31ll_BFu9i");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "aSf_BFu31ll_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu9i(Test_aSf_BFu31ll_BFu9i, "aSf_BFu31ll_BFu9i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu9ll()
{
  {
    init_simple_test("aSf_BFu31ll_BFu9ll");
    static aSf_BFu31ll_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu9ll");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "aSf_BFu31ll_BFu9ll");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "aSf_BFu31ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu9ll(Test_aSf_BFu31ll_BFu9ll, "aSf_BFu31ll_BFu9ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_BFu9s()
{
  {
    init_simple_test("aSf_BFu31ll_BFu9s");
    static aSf_BFu31ll_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_BFu9s");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "aSf_BFu31ll_BFu9s");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "aSf_BFu31ll_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_BFu9s(Test_aSf_BFu31ll_BFu9s, "aSf_BFu31ll_BFu9s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_C()
{
  {
    init_simple_test("aSf_BFu31ll_C");
    static aSf_BFu31ll_C lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_C");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_C");
    check_field_offset(lv, v3, 5, "aSf_BFu31ll_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_C(Test_aSf_BFu31ll_C, "aSf_BFu31ll_C", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_D()
{
  {
    init_simple_test("aSf_BFu31ll_D");
    static aSf_BFu31ll_D lv;
    check2(sizeof(lv), 13, "sizeof(aSf_BFu31ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_D");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_D");
    check_field_offset(lv, v3, 5, "aSf_BFu31ll_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_D(Test_aSf_BFu31ll_D, "aSf_BFu31ll_D", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_F()
{
  {
    init_simple_test("aSf_BFu31ll_F");
    static aSf_BFu31ll_F lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu31ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_F");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_F");
    check_field_offset(lv, v3, 5, "aSf_BFu31ll_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_F(Test_aSf_BFu31ll_F, "aSf_BFu31ll_F", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_I()
{
  {
    init_simple_test("aSf_BFu31ll_I");
    static aSf_BFu31ll_I lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu31ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_I");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_I");
    check_field_offset(lv, v3, 5, "aSf_BFu31ll_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_I(Test_aSf_BFu31ll_I, "aSf_BFu31ll_I", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_Ip()
{
  {
    init_simple_test("aSf_BFu31ll_Ip");
    static aSf_BFu31ll_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_BFu31ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_Ip");
    check_field_offset(lv, v3, 5, "aSf_BFu31ll_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_Ip(Test_aSf_BFu31ll_Ip, "aSf_BFu31ll_Ip", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_L()
{
  {
    init_simple_test("aSf_BFu31ll_L");
    static aSf_BFu31ll_L lv;
    check2(sizeof(lv), 13, "sizeof(aSf_BFu31ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_L");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_L");
    check_field_offset(lv, v3, 5, "aSf_BFu31ll_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_L(Test_aSf_BFu31ll_L, "aSf_BFu31ll_L", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_S()
{
  {
    init_simple_test("aSf_BFu31ll_S");
    static aSf_BFu31ll_S lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_S");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_S");
    check_field_offset(lv, v3, 5, "aSf_BFu31ll_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_S(Test_aSf_BFu31ll_S, "aSf_BFu31ll_S", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_Sf()
{
  {
    init_simple_test("aSf_BFu31ll_Sf");
    static aSf_BFu31ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_Sf");
    check_field_offset(lv, v3, 5, "aSf_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_Sf(Test_aSf_BFu31ll_Sf, "aSf_BFu31ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_Uc()
{
  {
    init_simple_test("aSf_BFu31ll_Uc");
    static aSf_BFu31ll_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu31ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_Uc");
    check_field_offset(lv, v3, 5, "aSf_BFu31ll_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_Uc(Test_aSf_BFu31ll_Uc, "aSf_BFu31ll_Uc", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_Ui()
{
  {
    init_simple_test("aSf_BFu31ll_Ui");
    static aSf_BFu31ll_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu31ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_Ui");
    check_field_offset(lv, v3, 5, "aSf_BFu31ll_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_Ui(Test_aSf_BFu31ll_Ui, "aSf_BFu31ll_Ui", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_Ul()
{
  {
    init_simple_test("aSf_BFu31ll_Ul");
    static aSf_BFu31ll_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aSf_BFu31ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_Ul");
    check_field_offset(lv, v3, 5, "aSf_BFu31ll_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_Ul(Test_aSf_BFu31ll_Ul, "aSf_BFu31ll_Ul", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_Us()
{
  {
    init_simple_test("aSf_BFu31ll_Us");
    static aSf_BFu31ll_Us lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu31ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_Us");
    check_field_offset(lv, v3, 5, "aSf_BFu31ll_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_Us(Test_aSf_BFu31ll_Us, "aSf_BFu31ll_Us", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu31ll_Vp()
{
  {
    init_simple_test("aSf_BFu31ll_Vp");
    static aSf_BFu31ll_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_BFu31ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu31ll_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu31ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aSf_BFu31ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aSf_BFu31ll_Vp");
    check_field_offset(lv, v3, 5, "aSf_BFu31ll_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu31ll_Vp(Test_aSf_BFu31ll_Vp, "aSf_BFu31ll_Vp", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i()
{
  {
    init_simple_test("aSf_BFu32i");
    static aSf_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i(Test_aSf_BFu32i, "aSf_BFu32i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu15i()
{
  {
    init_simple_test("aSf_BFu32i_BFu15i");
    static aSf_BFu32i_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aSf_BFu32i_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aSf_BFu32i_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu15i(Test_aSf_BFu32i_BFu15i, "aSf_BFu32i_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu15ll()
{
  {
    init_simple_test("aSf_BFu32i_BFu15ll");
    static aSf_BFu32i_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aSf_BFu32i_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aSf_BFu32i_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu15ll(Test_aSf_BFu32i_BFu15ll, "aSf_BFu32i_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu15s()
{
  {
    init_simple_test("aSf_BFu32i_BFu15s");
    static aSf_BFu32i_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aSf_BFu32i_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aSf_BFu32i_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu15s(Test_aSf_BFu32i_BFu15s, "aSf_BFu32i_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu16i()
{
  {
    init_simple_test("aSf_BFu32i_BFu16i");
    static aSf_BFu32i_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aSf_BFu32i_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aSf_BFu32i_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu16i(Test_aSf_BFu32i_BFu16i, "aSf_BFu32i_BFu16i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu16ll()
{
  {
    init_simple_test("aSf_BFu32i_BFu16ll");
    static aSf_BFu32i_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aSf_BFu32i_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aSf_BFu32i_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu16ll(Test_aSf_BFu32i_BFu16ll, "aSf_BFu32i_BFu16ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu16s()
{
  {
    init_simple_test("aSf_BFu32i_BFu16s");
    static aSf_BFu32i_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aSf_BFu32i_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aSf_BFu32i_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu16s(Test_aSf_BFu32i_BFu16s, "aSf_BFu32i_BFu16s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu17i()
{
  {
    init_simple_test("aSf_BFu32i_BFu17i");
    static aSf_BFu32i_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu32i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aSf_BFu32i_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aSf_BFu32i_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu17i(Test_aSf_BFu32i_BFu17i, "aSf_BFu32i_BFu17i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu17ll()
{
  {
    init_simple_test("aSf_BFu32i_BFu17ll");
    static aSf_BFu32i_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu32i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aSf_BFu32i_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aSf_BFu32i_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu17ll(Test_aSf_BFu32i_BFu17ll, "aSf_BFu32i_BFu17ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu1c()
{
  {
    init_simple_test("aSf_BFu32i_BFu1c");
    static aSf_BFu32i_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu1c");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_BFu32i_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu1c(Test_aSf_BFu32i_BFu1c, "aSf_BFu32i_BFu1c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu1i()
{
  {
    init_simple_test("aSf_BFu32i_BFu1i");
    static aSf_BFu32i_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu1i");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_BFu32i_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu1i(Test_aSf_BFu32i_BFu1i, "aSf_BFu32i_BFu1i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu1ll()
{
  {
    init_simple_test("aSf_BFu32i_BFu1ll");
    static aSf_BFu32i_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu1ll");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_BFu32i_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu1ll(Test_aSf_BFu32i_BFu1ll, "aSf_BFu32i_BFu1ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu1s()
{
  {
    init_simple_test("aSf_BFu32i_BFu1s");
    static aSf_BFu32i_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu1s");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_BFu32i_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu1s(Test_aSf_BFu32i_BFu1s, "aSf_BFu32i_BFu1s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu31i()
{
  {
    init_simple_test("aSf_BFu32i_BFu31i");
    static aSf_BFu32i_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu32i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aSf_BFu32i_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aSf_BFu32i_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu31i(Test_aSf_BFu32i_BFu31i, "aSf_BFu32i_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu31ll()
{
  {
    init_simple_test("aSf_BFu32i_BFu31ll");
    static aSf_BFu32i_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu32i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aSf_BFu32i_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aSf_BFu32i_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu31ll(Test_aSf_BFu32i_BFu31ll, "aSf_BFu32i_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu32i()
{
  {
    init_simple_test("aSf_BFu32i_BFu32i");
    static aSf_BFu32i_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu32i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aSf_BFu32i_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu32i(Test_aSf_BFu32i_BFu32i, "aSf_BFu32i_BFu32i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu32ll()
{
  {
    init_simple_test("aSf_BFu32i_BFu32ll");
    static aSf_BFu32i_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu32i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aSf_BFu32i_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu32ll(Test_aSf_BFu32i_BFu32ll, "aSf_BFu32i_BFu32ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu33()
{
  {
    init_simple_test("aSf_BFu32i_BFu33");
    static aSf_BFu32i_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu32i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, 1, "aSf_BFu32i_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, hide_ull(1LL<<32), "aSf_BFu32i_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu33(Test_aSf_BFu32i_BFu33, "aSf_BFu32i_BFu33", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu7c()
{
  {
    init_simple_test("aSf_BFu32i_BFu7c");
    static aSf_BFu32i_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_BFu32i_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_BFu32i_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu7c(Test_aSf_BFu32i_BFu7c, "aSf_BFu32i_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu7i()
{
  {
    init_simple_test("aSf_BFu32i_BFu7i");
    static aSf_BFu32i_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_BFu32i_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_BFu32i_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu7i(Test_aSf_BFu32i_BFu7i, "aSf_BFu32i_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu7ll()
{
  {
    init_simple_test("aSf_BFu32i_BFu7ll");
    static aSf_BFu32i_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_BFu32i_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_BFu32i_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu7ll(Test_aSf_BFu32i_BFu7ll, "aSf_BFu32i_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu7s()
{
  {
    init_simple_test("aSf_BFu32i_BFu7s");
    static aSf_BFu32i_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_BFu32i_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_BFu32i_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu7s(Test_aSf_BFu32i_BFu7s, "aSf_BFu32i_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu8c()
{
  {
    init_simple_test("aSf_BFu32i_BFu8c");
    static aSf_BFu32i_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_BFu32i_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_BFu32i_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu8c(Test_aSf_BFu32i_BFu8c, "aSf_BFu32i_BFu8c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu8i()
{
  {
    init_simple_test("aSf_BFu32i_BFu8i");
    static aSf_BFu32i_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_BFu32i_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_BFu32i_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu8i(Test_aSf_BFu32i_BFu8i, "aSf_BFu32i_BFu8i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu8ll()
{
  {
    init_simple_test("aSf_BFu32i_BFu8ll");
    static aSf_BFu32i_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_BFu32i_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_BFu32i_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu8ll(Test_aSf_BFu32i_BFu8ll, "aSf_BFu32i_BFu8ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu8s()
{
  {
    init_simple_test("aSf_BFu32i_BFu8s");
    static aSf_BFu32i_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_BFu32i_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_BFu32i_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu8s(Test_aSf_BFu32i_BFu8s, "aSf_BFu32i_BFu8s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu9i()
{
  {
    init_simple_test("aSf_BFu32i_BFu9i");
    static aSf_BFu32i_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aSf_BFu32i_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aSf_BFu32i_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu9i(Test_aSf_BFu32i_BFu9i, "aSf_BFu32i_BFu9i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu9ll()
{
  {
    init_simple_test("aSf_BFu32i_BFu9ll");
    static aSf_BFu32i_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aSf_BFu32i_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aSf_BFu32i_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu9ll(Test_aSf_BFu32i_BFu9ll, "aSf_BFu32i_BFu9ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_BFu9s()
{
  {
    init_simple_test("aSf_BFu32i_BFu9s");
    static aSf_BFu32i_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aSf_BFu32i_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aSf_BFu32i_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_BFu9s(Test_aSf_BFu32i_BFu9s, "aSf_BFu32i_BFu9s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_C()
{
  {
    init_simple_test("aSf_BFu32i_C");
    static aSf_BFu32i_C lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_C");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_C");
    check_field_offset(lv, v3, 5, "aSf_BFu32i_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_C(Test_aSf_BFu32i_C, "aSf_BFu32i_C", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_D()
{
  {
    init_simple_test("aSf_BFu32i_D");
    static aSf_BFu32i_D lv;
    check2(sizeof(lv), 13, "sizeof(aSf_BFu32i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_D");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_D");
    check_field_offset(lv, v3, 5, "aSf_BFu32i_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_D(Test_aSf_BFu32i_D, "aSf_BFu32i_D", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_F()
{
  {
    init_simple_test("aSf_BFu32i_F");
    static aSf_BFu32i_F lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu32i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_F");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_F");
    check_field_offset(lv, v3, 5, "aSf_BFu32i_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_F(Test_aSf_BFu32i_F, "aSf_BFu32i_F", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_I()
{
  {
    init_simple_test("aSf_BFu32i_I");
    static aSf_BFu32i_I lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu32i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_I");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_I");
    check_field_offset(lv, v3, 5, "aSf_BFu32i_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_I(Test_aSf_BFu32i_I, "aSf_BFu32i_I", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_Ip()
{
  {
    init_simple_test("aSf_BFu32i_Ip");
    static aSf_BFu32i_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_BFu32i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_Ip");
    check_field_offset(lv, v3, 5, "aSf_BFu32i_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_Ip(Test_aSf_BFu32i_Ip, "aSf_BFu32i_Ip", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_L()
{
  {
    init_simple_test("aSf_BFu32i_L");
    static aSf_BFu32i_L lv;
    check2(sizeof(lv), 13, "sizeof(aSf_BFu32i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_L");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_L");
    check_field_offset(lv, v3, 5, "aSf_BFu32i_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_L(Test_aSf_BFu32i_L, "aSf_BFu32i_L", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_S()
{
  {
    init_simple_test("aSf_BFu32i_S");
    static aSf_BFu32i_S lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_S");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_S");
    check_field_offset(lv, v3, 5, "aSf_BFu32i_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_S(Test_aSf_BFu32i_S, "aSf_BFu32i_S", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_Sf()
{
  {
    init_simple_test("aSf_BFu32i_Sf");
    static aSf_BFu32i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_Sf");
    check_field_offset(lv, v3, 5, "aSf_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_Sf(Test_aSf_BFu32i_Sf, "aSf_BFu32i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_Uc()
{
  {
    init_simple_test("aSf_BFu32i_Uc");
    static aSf_BFu32i_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_Uc");
    check_field_offset(lv, v3, 5, "aSf_BFu32i_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_Uc(Test_aSf_BFu32i_Uc, "aSf_BFu32i_Uc", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_Ui()
{
  {
    init_simple_test("aSf_BFu32i_Ui");
    static aSf_BFu32i_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu32i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_Ui");
    check_field_offset(lv, v3, 5, "aSf_BFu32i_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_Ui(Test_aSf_BFu32i_Ui, "aSf_BFu32i_Ui", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_Ul()
{
  {
    init_simple_test("aSf_BFu32i_Ul");
    static aSf_BFu32i_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aSf_BFu32i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_Ul");
    check_field_offset(lv, v3, 5, "aSf_BFu32i_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_Ul(Test_aSf_BFu32i_Ul, "aSf_BFu32i_Ul", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_Us()
{
  {
    init_simple_test("aSf_BFu32i_Us");
    static aSf_BFu32i_Us lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_Us");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_Us");
    check_field_offset(lv, v3, 5, "aSf_BFu32i_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_Us(Test_aSf_BFu32i_Us, "aSf_BFu32i_Us", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32i_Vp()
{
  {
    init_simple_test("aSf_BFu32i_Vp");
    static aSf_BFu32i_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_BFu32i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32i_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu32i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32i_Vp");
    check_field_offset(lv, v3, 5, "aSf_BFu32i_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32i_Vp(Test_aSf_BFu32i_Vp, "aSf_BFu32i_Vp", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll()
{
  {
    init_simple_test("aSf_BFu32ll");
    static aSf_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll(Test_aSf_BFu32ll, "aSf_BFu32ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu15i()
{
  {
    init_simple_test("aSf_BFu32ll_BFu15i");
    static aSf_BFu32ll_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aSf_BFu32ll_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aSf_BFu32ll_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu15i(Test_aSf_BFu32ll_BFu15i, "aSf_BFu32ll_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu15ll()
{
  {
    init_simple_test("aSf_BFu32ll_BFu15ll");
    static aSf_BFu32ll_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aSf_BFu32ll_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aSf_BFu32ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu15ll(Test_aSf_BFu32ll_BFu15ll, "aSf_BFu32ll_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu15s()
{
  {
    init_simple_test("aSf_BFu32ll_BFu15s");
    static aSf_BFu32ll_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aSf_BFu32ll_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aSf_BFu32ll_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu15s(Test_aSf_BFu32ll_BFu15s, "aSf_BFu32ll_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu16i()
{
  {
    init_simple_test("aSf_BFu32ll_BFu16i");
    static aSf_BFu32ll_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aSf_BFu32ll_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aSf_BFu32ll_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu16i(Test_aSf_BFu32ll_BFu16i, "aSf_BFu32ll_BFu16i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu16ll()
{
  {
    init_simple_test("aSf_BFu32ll_BFu16ll");
    static aSf_BFu32ll_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aSf_BFu32ll_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aSf_BFu32ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu16ll(Test_aSf_BFu32ll_BFu16ll, "aSf_BFu32ll_BFu16ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu16s()
{
  {
    init_simple_test("aSf_BFu32ll_BFu16s");
    static aSf_BFu32ll_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aSf_BFu32ll_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aSf_BFu32ll_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu16s(Test_aSf_BFu32ll_BFu16s, "aSf_BFu32ll_BFu16s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu17i()
{
  {
    init_simple_test("aSf_BFu32ll_BFu17i");
    static aSf_BFu32ll_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu32ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aSf_BFu32ll_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aSf_BFu32ll_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu17i(Test_aSf_BFu32ll_BFu17i, "aSf_BFu32ll_BFu17i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu17ll()
{
  {
    init_simple_test("aSf_BFu32ll_BFu17ll");
    static aSf_BFu32ll_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu32ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aSf_BFu32ll_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aSf_BFu32ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu17ll(Test_aSf_BFu32ll_BFu17ll, "aSf_BFu32ll_BFu17ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu1c()
{
  {
    init_simple_test("aSf_BFu32ll_BFu1c");
    static aSf_BFu32ll_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu1c");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_BFu32ll_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu1c(Test_aSf_BFu32ll_BFu1c, "aSf_BFu32ll_BFu1c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu1i()
{
  {
    init_simple_test("aSf_BFu32ll_BFu1i");
    static aSf_BFu32ll_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu1i");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_BFu32ll_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu1i(Test_aSf_BFu32ll_BFu1i, "aSf_BFu32ll_BFu1i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu1ll()
{
  {
    init_simple_test("aSf_BFu32ll_BFu1ll");
    static aSf_BFu32ll_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu1ll");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_BFu32ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu1ll(Test_aSf_BFu32ll_BFu1ll, "aSf_BFu32ll_BFu1ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu1s()
{
  {
    init_simple_test("aSf_BFu32ll_BFu1s");
    static aSf_BFu32ll_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu1s");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_BFu32ll_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu1s(Test_aSf_BFu32ll_BFu1s, "aSf_BFu32ll_BFu1s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu31i()
{
  {
    init_simple_test("aSf_BFu32ll_BFu31i");
    static aSf_BFu32ll_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu32ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aSf_BFu32ll_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aSf_BFu32ll_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu31i(Test_aSf_BFu32ll_BFu31i, "aSf_BFu32ll_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu31ll()
{
  {
    init_simple_test("aSf_BFu32ll_BFu31ll");
    static aSf_BFu32ll_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu32ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aSf_BFu32ll_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aSf_BFu32ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu31ll(Test_aSf_BFu32ll_BFu31ll, "aSf_BFu32ll_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu32i()
{
  {
    init_simple_test("aSf_BFu32ll_BFu32i");
    static aSf_BFu32ll_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu32ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aSf_BFu32ll_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu32i(Test_aSf_BFu32ll_BFu32i, "aSf_BFu32ll_BFu32i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu32ll()
{
  {
    init_simple_test("aSf_BFu32ll_BFu32ll");
    static aSf_BFu32ll_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu32ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aSf_BFu32ll_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu32ll(Test_aSf_BFu32ll_BFu32ll, "aSf_BFu32ll_BFu32ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu33()
{
  {
    init_simple_test("aSf_BFu32ll_BFu33");
    static aSf_BFu32ll_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu32ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, 1, "aSf_BFu32ll_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, hide_ull(1LL<<32), "aSf_BFu32ll_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu33(Test_aSf_BFu32ll_BFu33, "aSf_BFu32ll_BFu33", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu7c()
{
  {
    init_simple_test("aSf_BFu32ll_BFu7c");
    static aSf_BFu32ll_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_BFu32ll_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_BFu32ll_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu7c(Test_aSf_BFu32ll_BFu7c, "aSf_BFu32ll_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu7i()
{
  {
    init_simple_test("aSf_BFu32ll_BFu7i");
    static aSf_BFu32ll_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_BFu32ll_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_BFu32ll_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu7i(Test_aSf_BFu32ll_BFu7i, "aSf_BFu32ll_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu7ll()
{
  {
    init_simple_test("aSf_BFu32ll_BFu7ll");
    static aSf_BFu32ll_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_BFu32ll_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_BFu32ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu7ll(Test_aSf_BFu32ll_BFu7ll, "aSf_BFu32ll_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu7s()
{
  {
    init_simple_test("aSf_BFu32ll_BFu7s");
    static aSf_BFu32ll_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_BFu32ll_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_BFu32ll_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu7s(Test_aSf_BFu32ll_BFu7s, "aSf_BFu32ll_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu8c()
{
  {
    init_simple_test("aSf_BFu32ll_BFu8c");
    static aSf_BFu32ll_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_BFu32ll_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_BFu32ll_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu8c(Test_aSf_BFu32ll_BFu8c, "aSf_BFu32ll_BFu8c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu8i()
{
  {
    init_simple_test("aSf_BFu32ll_BFu8i");
    static aSf_BFu32ll_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_BFu32ll_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_BFu32ll_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu8i(Test_aSf_BFu32ll_BFu8i, "aSf_BFu32ll_BFu8i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu8ll()
{
  {
    init_simple_test("aSf_BFu32ll_BFu8ll");
    static aSf_BFu32ll_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_BFu32ll_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_BFu32ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu8ll(Test_aSf_BFu32ll_BFu8ll, "aSf_BFu32ll_BFu8ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu8s()
{
  {
    init_simple_test("aSf_BFu32ll_BFu8s");
    static aSf_BFu32ll_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_BFu32ll_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_BFu32ll_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu8s(Test_aSf_BFu32ll_BFu8s, "aSf_BFu32ll_BFu8s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu9i()
{
  {
    init_simple_test("aSf_BFu32ll_BFu9i");
    static aSf_BFu32ll_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aSf_BFu32ll_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aSf_BFu32ll_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu9i(Test_aSf_BFu32ll_BFu9i, "aSf_BFu32ll_BFu9i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu9ll()
{
  {
    init_simple_test("aSf_BFu32ll_BFu9ll");
    static aSf_BFu32ll_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aSf_BFu32ll_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aSf_BFu32ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu9ll(Test_aSf_BFu32ll_BFu9ll, "aSf_BFu32ll_BFu9ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_BFu9s()
{
  {
    init_simple_test("aSf_BFu32ll_BFu9s");
    static aSf_BFu32ll_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aSf_BFu32ll_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aSf_BFu32ll_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_BFu9s(Test_aSf_BFu32ll_BFu9s, "aSf_BFu32ll_BFu9s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_C()
{
  {
    init_simple_test("aSf_BFu32ll_C");
    static aSf_BFu32ll_C lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_C");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_C");
    check_field_offset(lv, v3, 5, "aSf_BFu32ll_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_C(Test_aSf_BFu32ll_C, "aSf_BFu32ll_C", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_D()
{
  {
    init_simple_test("aSf_BFu32ll_D");
    static aSf_BFu32ll_D lv;
    check2(sizeof(lv), 13, "sizeof(aSf_BFu32ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_D");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_D");
    check_field_offset(lv, v3, 5, "aSf_BFu32ll_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_D(Test_aSf_BFu32ll_D, "aSf_BFu32ll_D", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_F()
{
  {
    init_simple_test("aSf_BFu32ll_F");
    static aSf_BFu32ll_F lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu32ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_F");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_F");
    check_field_offset(lv, v3, 5, "aSf_BFu32ll_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_F(Test_aSf_BFu32ll_F, "aSf_BFu32ll_F", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_I()
{
  {
    init_simple_test("aSf_BFu32ll_I");
    static aSf_BFu32ll_I lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu32ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_I");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_I");
    check_field_offset(lv, v3, 5, "aSf_BFu32ll_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_I(Test_aSf_BFu32ll_I, "aSf_BFu32ll_I", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_Ip()
{
  {
    init_simple_test("aSf_BFu32ll_Ip");
    static aSf_BFu32ll_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_BFu32ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_Ip");
    check_field_offset(lv, v3, 5, "aSf_BFu32ll_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_Ip(Test_aSf_BFu32ll_Ip, "aSf_BFu32ll_Ip", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_L()
{
  {
    init_simple_test("aSf_BFu32ll_L");
    static aSf_BFu32ll_L lv;
    check2(sizeof(lv), 13, "sizeof(aSf_BFu32ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_L");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_L");
    check_field_offset(lv, v3, 5, "aSf_BFu32ll_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_L(Test_aSf_BFu32ll_L, "aSf_BFu32ll_L", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_S()
{
  {
    init_simple_test("aSf_BFu32ll_S");
    static aSf_BFu32ll_S lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_S");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_S");
    check_field_offset(lv, v3, 5, "aSf_BFu32ll_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_S(Test_aSf_BFu32ll_S, "aSf_BFu32ll_S", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_Sf()
{
  {
    init_simple_test("aSf_BFu32ll_Sf");
    static aSf_BFu32ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_Sf");
    check_field_offset(lv, v3, 5, "aSf_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_Sf(Test_aSf_BFu32ll_Sf, "aSf_BFu32ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_Uc()
{
  {
    init_simple_test("aSf_BFu32ll_Uc");
    static aSf_BFu32ll_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu32ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_Uc");
    check_field_offset(lv, v3, 5, "aSf_BFu32ll_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_Uc(Test_aSf_BFu32ll_Uc, "aSf_BFu32ll_Uc", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_Ui()
{
  {
    init_simple_test("aSf_BFu32ll_Ui");
    static aSf_BFu32ll_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu32ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_Ui");
    check_field_offset(lv, v3, 5, "aSf_BFu32ll_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_Ui(Test_aSf_BFu32ll_Ui, "aSf_BFu32ll_Ui", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_Ul()
{
  {
    init_simple_test("aSf_BFu32ll_Ul");
    static aSf_BFu32ll_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aSf_BFu32ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_Ul");
    check_field_offset(lv, v3, 5, "aSf_BFu32ll_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_Ul(Test_aSf_BFu32ll_Ul, "aSf_BFu32ll_Ul", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_Us()
{
  {
    init_simple_test("aSf_BFu32ll_Us");
    static aSf_BFu32ll_Us lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu32ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_Us");
    check_field_offset(lv, v3, 5, "aSf_BFu32ll_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_Us(Test_aSf_BFu32ll_Us, "aSf_BFu32ll_Us", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu32ll_Vp()
{
  {
    init_simple_test("aSf_BFu32ll_Vp");
    static aSf_BFu32ll_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_BFu32ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu32ll_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu32ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aSf_BFu32ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aSf_BFu32ll_Vp");
    check_field_offset(lv, v3, 5, "aSf_BFu32ll_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu32ll_Vp(Test_aSf_BFu32ll_Vp, "aSf_BFu32ll_Vp", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33()
{
  {
    init_simple_test("aSf_BFu33");
    static aSf_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu33(Test_aSf_BFu33, "aSf_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu15i()
{
  {
    init_simple_test("aSf_BFu33_BFu15i");
    static aSf_BFu33_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu33_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu15i");
    set_bf_and_test(lv, v3, 5, 1, 15, 1, "aSf_BFu33_BFu15i");
    set_bf_and_test(lv, v3, 5, 1, 15, hide_ull(1LL<<14), "aSf_BFu33_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu15i(Test_aSf_BFu33_BFu15i, "aSf_BFu33_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu15ll()
{
  {
    init_simple_test("aSf_BFu33_BFu15ll");
    static aSf_BFu33_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu33_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu15ll");
    set_bf_and_test(lv, v3, 5, 1, 15, 1, "aSf_BFu33_BFu15ll");
    set_bf_and_test(lv, v3, 5, 1, 15, hide_ull(1LL<<14), "aSf_BFu33_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu15ll(Test_aSf_BFu33_BFu15ll, "aSf_BFu33_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu15s()
{
  {
    init_simple_test("aSf_BFu33_BFu15s");
    static aSf_BFu33_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu33_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu15s");
    set_bf_and_test(lv, v3, 5, 1, 15, 1, "aSf_BFu33_BFu15s");
    set_bf_and_test(lv, v3, 5, 1, 15, hide_ull(1LL<<14), "aSf_BFu33_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu15s(Test_aSf_BFu33_BFu15s, "aSf_BFu33_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu16i()
{
  {
    init_simple_test("aSf_BFu33_BFu16i");
    static aSf_BFu33_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu33_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu16i");
    set_bf_and_test(lv, v3, 5, 1, 16, 1, "aSf_BFu33_BFu16i");
    set_bf_and_test(lv, v3, 5, 1, 16, hide_ull(1LL<<15), "aSf_BFu33_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu16i(Test_aSf_BFu33_BFu16i, "aSf_BFu33_BFu16i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu16ll()
{
  {
    init_simple_test("aSf_BFu33_BFu16ll");
    static aSf_BFu33_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu33_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu16ll");
    set_bf_and_test(lv, v3, 5, 1, 16, 1, "aSf_BFu33_BFu16ll");
    set_bf_and_test(lv, v3, 5, 1, 16, hide_ull(1LL<<15), "aSf_BFu33_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu16ll(Test_aSf_BFu33_BFu16ll, "aSf_BFu33_BFu16ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu16s()
{
  {
    init_simple_test("aSf_BFu33_BFu16s");
    static aSf_BFu33_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu33_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu16s");
    set_bf_and_test(lv, v3, 5, 1, 16, 1, "aSf_BFu33_BFu16s");
    set_bf_and_test(lv, v3, 5, 1, 16, hide_ull(1LL<<15), "aSf_BFu33_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu16s(Test_aSf_BFu33_BFu16s, "aSf_BFu33_BFu16s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu17i()
{
  {
    init_simple_test("aSf_BFu33_BFu17i");
    static aSf_BFu33_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu33_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu17i");
    set_bf_and_test(lv, v3, 5, 1, 17, 1, "aSf_BFu33_BFu17i");
    set_bf_and_test(lv, v3, 5, 1, 17, hide_ull(1LL<<16), "aSf_BFu33_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu17i(Test_aSf_BFu33_BFu17i, "aSf_BFu33_BFu17i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu17ll()
{
  {
    init_simple_test("aSf_BFu33_BFu17ll");
    static aSf_BFu33_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu33_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu17ll");
    set_bf_and_test(lv, v3, 5, 1, 17, 1, "aSf_BFu33_BFu17ll");
    set_bf_and_test(lv, v3, 5, 1, 17, hide_ull(1LL<<16), "aSf_BFu33_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu17ll(Test_aSf_BFu33_BFu17ll, "aSf_BFu33_BFu17ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu1c()
{
  {
    init_simple_test("aSf_BFu33_BFu1c");
    static aSf_BFu33_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu33_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu1c");
    set_bf_and_test(lv, v3, 5, 1, 1, 1, "aSf_BFu33_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu1c(Test_aSf_BFu33_BFu1c, "aSf_BFu33_BFu1c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu1i()
{
  {
    init_simple_test("aSf_BFu33_BFu1i");
    static aSf_BFu33_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu33_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu1i");
    set_bf_and_test(lv, v3, 5, 1, 1, 1, "aSf_BFu33_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu1i(Test_aSf_BFu33_BFu1i, "aSf_BFu33_BFu1i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu1ll()
{
  {
    init_simple_test("aSf_BFu33_BFu1ll");
    static aSf_BFu33_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu33_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu1ll");
    set_bf_and_test(lv, v3, 5, 1, 1, 1, "aSf_BFu33_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu1ll(Test_aSf_BFu33_BFu1ll, "aSf_BFu33_BFu1ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu1s()
{
  {
    init_simple_test("aSf_BFu33_BFu1s");
    static aSf_BFu33_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu33_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu1s");
    set_bf_and_test(lv, v3, 5, 1, 1, 1, "aSf_BFu33_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu1s(Test_aSf_BFu33_BFu1s, "aSf_BFu33_BFu1s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu31i()
{
  {
    init_simple_test("aSf_BFu33_BFu31i");
    static aSf_BFu33_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu33_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu31i");
    set_bf_and_test(lv, v3, 5, 1, 31, 1, "aSf_BFu33_BFu31i");
    set_bf_and_test(lv, v3, 5, 1, 31, hide_ull(1LL<<30), "aSf_BFu33_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu31i(Test_aSf_BFu33_BFu31i, "aSf_BFu33_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu31ll()
{
  {
    init_simple_test("aSf_BFu33_BFu31ll");
    static aSf_BFu33_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aSf_BFu33_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu31ll");
    set_bf_and_test(lv, v3, 5, 1, 31, 1, "aSf_BFu33_BFu31ll");
    set_bf_and_test(lv, v3, 5, 1, 31, hide_ull(1LL<<30), "aSf_BFu33_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu31ll(Test_aSf_BFu33_BFu31ll, "aSf_BFu33_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu32i()
{
  {
    init_simple_test("aSf_BFu33_BFu32i");
    static aSf_BFu33_BFu32i lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu33_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu32i");
    set_bf_and_test(lv, v3, 5, 1, 32, 1, "aSf_BFu33_BFu32i");
    set_bf_and_test(lv, v3, 5, 1, 32, hide_ull(1LL<<31), "aSf_BFu33_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu32i(Test_aSf_BFu33_BFu32i, "aSf_BFu33_BFu32i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu32ll()
{
  {
    init_simple_test("aSf_BFu33_BFu32ll");
    static aSf_BFu33_BFu32ll lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu33_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu32ll");
    set_bf_and_test(lv, v3, 5, 1, 32, 1, "aSf_BFu33_BFu32ll");
    set_bf_and_test(lv, v3, 5, 1, 32, hide_ull(1LL<<31), "aSf_BFu33_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu32ll(Test_aSf_BFu33_BFu32ll, "aSf_BFu33_BFu32ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu33()
{
  {
    init_simple_test("aSf_BFu33_BFu33");
    static aSf_BFu33_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu33_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu33");
    set_bf_and_test(lv, v3, 5, 1, 33, 1, "aSf_BFu33_BFu33");
    set_bf_and_test(lv, v3, 5, 1, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu33(Test_aSf_BFu33_BFu33, "aSf_BFu33_BFu33", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu7c()
{
  {
    init_simple_test("aSf_BFu33_BFu7c");
    static aSf_BFu33_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu33_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu7c");
    set_bf_and_test(lv, v3, 5, 1, 7, 1, "aSf_BFu33_BFu7c");
    set_bf_and_test(lv, v3, 5, 1, 7, hide_ull(1LL<<6), "aSf_BFu33_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu7c(Test_aSf_BFu33_BFu7c, "aSf_BFu33_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu7i()
{
  {
    init_simple_test("aSf_BFu33_BFu7i");
    static aSf_BFu33_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu33_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu7i");
    set_bf_and_test(lv, v3, 5, 1, 7, 1, "aSf_BFu33_BFu7i");
    set_bf_and_test(lv, v3, 5, 1, 7, hide_ull(1LL<<6), "aSf_BFu33_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu7i(Test_aSf_BFu33_BFu7i, "aSf_BFu33_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu7ll()
{
  {
    init_simple_test("aSf_BFu33_BFu7ll");
    static aSf_BFu33_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu33_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu7ll");
    set_bf_and_test(lv, v3, 5, 1, 7, 1, "aSf_BFu33_BFu7ll");
    set_bf_and_test(lv, v3, 5, 1, 7, hide_ull(1LL<<6), "aSf_BFu33_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu7ll(Test_aSf_BFu33_BFu7ll, "aSf_BFu33_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu7s()
{
  {
    init_simple_test("aSf_BFu33_BFu7s");
    static aSf_BFu33_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu33_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu7s");
    set_bf_and_test(lv, v3, 5, 1, 7, 1, "aSf_BFu33_BFu7s");
    set_bf_and_test(lv, v3, 5, 1, 7, hide_ull(1LL<<6), "aSf_BFu33_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu7s(Test_aSf_BFu33_BFu7s, "aSf_BFu33_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu8c()
{
  {
    init_simple_test("aSf_BFu33_BFu8c");
    static aSf_BFu33_BFu8c lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu33_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu8c");
    set_bf_and_test(lv, v3, 5, 1, 8, 1, "aSf_BFu33_BFu8c");
    set_bf_and_test(lv, v3, 5, 1, 8, hide_ull(1LL<<7), "aSf_BFu33_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu8c(Test_aSf_BFu33_BFu8c, "aSf_BFu33_BFu8c", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu8i()
{
  {
    init_simple_test("aSf_BFu33_BFu8i");
    static aSf_BFu33_BFu8i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu33_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu8i");
    set_bf_and_test(lv, v3, 5, 1, 8, 1, "aSf_BFu33_BFu8i");
    set_bf_and_test(lv, v3, 5, 1, 8, hide_ull(1LL<<7), "aSf_BFu33_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu8i(Test_aSf_BFu33_BFu8i, "aSf_BFu33_BFu8i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu8ll()
{
  {
    init_simple_test("aSf_BFu33_BFu8ll");
    static aSf_BFu33_BFu8ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu33_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu8ll");
    set_bf_and_test(lv, v3, 5, 1, 8, 1, "aSf_BFu33_BFu8ll");
    set_bf_and_test(lv, v3, 5, 1, 8, hide_ull(1LL<<7), "aSf_BFu33_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu8ll(Test_aSf_BFu33_BFu8ll, "aSf_BFu33_BFu8ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu8s()
{
  {
    init_simple_test("aSf_BFu33_BFu8s");
    static aSf_BFu33_BFu8s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu33_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu8s");
    set_bf_and_test(lv, v3, 5, 1, 8, 1, "aSf_BFu33_BFu8s");
    set_bf_and_test(lv, v3, 5, 1, 8, hide_ull(1LL<<7), "aSf_BFu33_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu8s(Test_aSf_BFu33_BFu8s, "aSf_BFu33_BFu8s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu9i()
{
  {
    init_simple_test("aSf_BFu33_BFu9i");
    static aSf_BFu33_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu33_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu9i");
    set_bf_and_test(lv, v3, 5, 1, 9, 1, "aSf_BFu33_BFu9i");
    set_bf_and_test(lv, v3, 5, 1, 9, hide_ull(1LL<<8), "aSf_BFu33_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu9i(Test_aSf_BFu33_BFu9i, "aSf_BFu33_BFu9i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu9ll()
{
  {
    init_simple_test("aSf_BFu33_BFu9ll");
    static aSf_BFu33_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu33_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu9ll");
    set_bf_and_test(lv, v3, 5, 1, 9, 1, "aSf_BFu33_BFu9ll");
    set_bf_and_test(lv, v3, 5, 1, 9, hide_ull(1LL<<8), "aSf_BFu33_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu9ll(Test_aSf_BFu33_BFu9ll, "aSf_BFu33_BFu9ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_BFu9s()
{
  {
    init_simple_test("aSf_BFu33_BFu9s");
    static aSf_BFu33_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu33_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_BFu9s");
    set_bf_and_test(lv, v3, 5, 1, 9, 1, "aSf_BFu33_BFu9s");
    set_bf_and_test(lv, v3, 5, 1, 9, hide_ull(1LL<<8), "aSf_BFu33_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_BFu9s(Test_aSf_BFu33_BFu9s, "aSf_BFu33_BFu9s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_C()
{
  {
    init_simple_test("aSf_BFu33_C");
    static aSf_BFu33_C lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu33_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_C");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_C");
    check_field_offset(lv, v3, 6, "aSf_BFu33_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_C(Test_aSf_BFu33_C, "aSf_BFu33_C", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_D()
{
  {
    init_simple_test("aSf_BFu33_D");
    static aSf_BFu33_D lv;
    check2(sizeof(lv), 14, "sizeof(aSf_BFu33_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_D");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_D");
    check_field_offset(lv, v3, 6, "aSf_BFu33_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_D(Test_aSf_BFu33_D, "aSf_BFu33_D", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_F()
{
  {
    init_simple_test("aSf_BFu33_F");
    static aSf_BFu33_F lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu33_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_F");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_F");
    check_field_offset(lv, v3, 6, "aSf_BFu33_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_F(Test_aSf_BFu33_F, "aSf_BFu33_F", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_I()
{
  {
    init_simple_test("aSf_BFu33_I");
    static aSf_BFu33_I lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu33_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_I");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_I");
    check_field_offset(lv, v3, 6, "aSf_BFu33_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_I(Test_aSf_BFu33_I, "aSf_BFu33_I", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_Ip()
{
  {
    init_simple_test("aSf_BFu33_Ip");
    static aSf_BFu33_Ip lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aSf_BFu33_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_Ip");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_Ip");
    check_field_offset(lv, v3, 6, "aSf_BFu33_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_Ip(Test_aSf_BFu33_Ip, "aSf_BFu33_Ip", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_L()
{
  {
    init_simple_test("aSf_BFu33_L");
    static aSf_BFu33_L lv;
    check2(sizeof(lv), 14, "sizeof(aSf_BFu33_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_L");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_L");
    check_field_offset(lv, v3, 6, "aSf_BFu33_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_L(Test_aSf_BFu33_L, "aSf_BFu33_L", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_S()
{
  {
    init_simple_test("aSf_BFu33_S");
    static aSf_BFu33_S lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu33_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_S");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_S");
    check_field_offset(lv, v3, 6, "aSf_BFu33_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_S(Test_aSf_BFu33_S, "aSf_BFu33_S", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_Sf()
{
  {
    init_simple_test("aSf_BFu33_Sf");
    static aSf_BFu33_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_Sf");
    check_field_offset(lv, v3, 6, "aSf_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_Sf(Test_aSf_BFu33_Sf, "aSf_BFu33_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_Uc()
{
  {
    init_simple_test("aSf_BFu33_Uc");
    static aSf_BFu33_Uc lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu33_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_Uc");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_Uc");
    check_field_offset(lv, v3, 6, "aSf_BFu33_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_Uc(Test_aSf_BFu33_Uc, "aSf_BFu33_Uc", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_Ui()
{
  {
    init_simple_test("aSf_BFu33_Ui");
    static aSf_BFu33_Ui lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu33_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_Ui");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_Ui");
    check_field_offset(lv, v3, 6, "aSf_BFu33_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_Ui(Test_aSf_BFu33_Ui, "aSf_BFu33_Ui", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_Ul()
{
  {
    init_simple_test("aSf_BFu33_Ul");
    static aSf_BFu33_Ul lv;
    check2(sizeof(lv), 14, "sizeof(aSf_BFu33_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_Ul");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_Ul");
    check_field_offset(lv, v3, 6, "aSf_BFu33_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_Ul(Test_aSf_BFu33_Ul, "aSf_BFu33_Ul", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_Us()
{
  {
    init_simple_test("aSf_BFu33_Us");
    static aSf_BFu33_Us lv;
    check2(sizeof(lv), 8, "sizeof(aSf_BFu33_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_Us");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_Us");
    check_field_offset(lv, v3, 6, "aSf_BFu33_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_Us(Test_aSf_BFu33_Us, "aSf_BFu33_Us", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu33_Vp()
{
  {
    init_simple_test("aSf_BFu33_Vp");
    static aSf_BFu33_Vp lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aSf_BFu33_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu33_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu33_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aSf_BFu33_Vp");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aSf_BFu33_Vp");
    check_field_offset(lv, v3, 6, "aSf_BFu33_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu33_Vp(Test_aSf_BFu33_Vp, "aSf_BFu33_Vp", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c()
{
  {
    init_simple_test("aSf_BFu7c");
    static aSf_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c(Test_aSf_BFu7c, "aSf_BFu7c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu15i()
{
  {
    init_simple_test("aSf_BFu7c_BFu15i");
    static aSf_BFu7c_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aSf_BFu7c_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aSf_BFu7c_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu15i(Test_aSf_BFu7c_BFu15i, "aSf_BFu7c_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu15ll()
{
  {
    init_simple_test("aSf_BFu7c_BFu15ll");
    static aSf_BFu7c_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aSf_BFu7c_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aSf_BFu7c_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu15ll(Test_aSf_BFu7c_BFu15ll, "aSf_BFu7c_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu15s()
{
  {
    init_simple_test("aSf_BFu7c_BFu15s");
    static aSf_BFu7c_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aSf_BFu7c_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aSf_BFu7c_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu15s(Test_aSf_BFu7c_BFu15s, "aSf_BFu7c_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu16i()
{
  {
    init_simple_test("aSf_BFu7c_BFu16i");
    static aSf_BFu7c_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aSf_BFu7c_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aSf_BFu7c_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu16i(Test_aSf_BFu7c_BFu16i, "aSf_BFu7c_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu16ll()
{
  {
    init_simple_test("aSf_BFu7c_BFu16ll");
    static aSf_BFu7c_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aSf_BFu7c_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aSf_BFu7c_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu16ll(Test_aSf_BFu7c_BFu16ll, "aSf_BFu7c_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu16s()
{
  {
    init_simple_test("aSf_BFu7c_BFu16s");
    static aSf_BFu7c_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aSf_BFu7c_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aSf_BFu7c_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu16s(Test_aSf_BFu7c_BFu16s, "aSf_BFu7c_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu17i()
{
  {
    init_simple_test("aSf_BFu7c_BFu17i");
    static aSf_BFu7c_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "aSf_BFu7c_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "aSf_BFu7c_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu17i(Test_aSf_BFu7c_BFu17i, "aSf_BFu7c_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu17ll()
{
  {
    init_simple_test("aSf_BFu7c_BFu17ll");
    static aSf_BFu7c_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "aSf_BFu7c_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "aSf_BFu7c_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu17ll(Test_aSf_BFu7c_BFu17ll, "aSf_BFu7c_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu1c()
{
  {
    init_simple_test("aSf_BFu7c_BFu1c");
    static aSf_BFu7c_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu1c");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aSf_BFu7c_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu1c(Test_aSf_BFu7c_BFu1c, "aSf_BFu7c_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu1i()
{
  {
    init_simple_test("aSf_BFu7c_BFu1i");
    static aSf_BFu7c_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu1i");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aSf_BFu7c_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu1i(Test_aSf_BFu7c_BFu1i, "aSf_BFu7c_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu1ll()
{
  {
    init_simple_test("aSf_BFu7c_BFu1ll");
    static aSf_BFu7c_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu1ll");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aSf_BFu7c_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu1ll(Test_aSf_BFu7c_BFu1ll, "aSf_BFu7c_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu1s()
{
  {
    init_simple_test("aSf_BFu7c_BFu1s");
    static aSf_BFu7c_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu1s");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aSf_BFu7c_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu1s(Test_aSf_BFu7c_BFu1s, "aSf_BFu7c_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu31i()
{
  {
    init_simple_test("aSf_BFu7c_BFu31i");
    static aSf_BFu7c_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "aSf_BFu7c_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "aSf_BFu7c_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu31i(Test_aSf_BFu7c_BFu31i, "aSf_BFu7c_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu31ll()
{
  {
    init_simple_test("aSf_BFu7c_BFu31ll");
    static aSf_BFu7c_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "aSf_BFu7c_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "aSf_BFu7c_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu31ll(Test_aSf_BFu7c_BFu31ll, "aSf_BFu7c_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu32i()
{
  {
    init_simple_test("aSf_BFu7c_BFu32i");
    static aSf_BFu7c_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "aSf_BFu7c_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "aSf_BFu7c_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu32i(Test_aSf_BFu7c_BFu32i, "aSf_BFu7c_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu32ll()
{
  {
    init_simple_test("aSf_BFu7c_BFu32ll");
    static aSf_BFu7c_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "aSf_BFu7c_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "aSf_BFu7c_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu32ll(Test_aSf_BFu7c_BFu32ll, "aSf_BFu7c_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu33()
{
  {
    init_simple_test("aSf_BFu7c_BFu33");
    static aSf_BFu7c_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, 1, "aSf_BFu7c_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, hide_ull(1LL<<32), "aSf_BFu7c_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu33(Test_aSf_BFu7c_BFu33, "aSf_BFu7c_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu7c()
{
  {
    init_simple_test("aSf_BFu7c_BFu7c");
    static aSf_BFu7c_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aSf_BFu7c_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu7c(Test_aSf_BFu7c_BFu7c, "aSf_BFu7c_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu7i()
{
  {
    init_simple_test("aSf_BFu7c_BFu7i");
    static aSf_BFu7c_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aSf_BFu7c_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu7i(Test_aSf_BFu7c_BFu7i, "aSf_BFu7c_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu7ll()
{
  {
    init_simple_test("aSf_BFu7c_BFu7ll");
    static aSf_BFu7c_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aSf_BFu7c_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu7ll(Test_aSf_BFu7c_BFu7ll, "aSf_BFu7c_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu7s()
{
  {
    init_simple_test("aSf_BFu7c_BFu7s");
    static aSf_BFu7c_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aSf_BFu7c_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu7s(Test_aSf_BFu7c_BFu7s, "aSf_BFu7c_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu8c()
{
  {
    init_simple_test("aSf_BFu7c_BFu8c");
    static aSf_BFu7c_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aSf_BFu7c_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aSf_BFu7c_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu8c(Test_aSf_BFu7c_BFu8c, "aSf_BFu7c_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu8i()
{
  {
    init_simple_test("aSf_BFu7c_BFu8i");
    static aSf_BFu7c_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aSf_BFu7c_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aSf_BFu7c_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu8i(Test_aSf_BFu7c_BFu8i, "aSf_BFu7c_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu8ll()
{
  {
    init_simple_test("aSf_BFu7c_BFu8ll");
    static aSf_BFu7c_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aSf_BFu7c_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aSf_BFu7c_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu8ll(Test_aSf_BFu7c_BFu8ll, "aSf_BFu7c_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu8s()
{
  {
    init_simple_test("aSf_BFu7c_BFu8s");
    static aSf_BFu7c_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aSf_BFu7c_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aSf_BFu7c_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu8s(Test_aSf_BFu7c_BFu8s, "aSf_BFu7c_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu9i()
{
  {
    init_simple_test("aSf_BFu7c_BFu9i");
    static aSf_BFu7c_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aSf_BFu7c_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aSf_BFu7c_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu9i(Test_aSf_BFu7c_BFu9i, "aSf_BFu7c_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu9ll()
{
  {
    init_simple_test("aSf_BFu7c_BFu9ll");
    static aSf_BFu7c_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aSf_BFu7c_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aSf_BFu7c_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu9ll(Test_aSf_BFu7c_BFu9ll, "aSf_BFu7c_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_BFu9s()
{
  {
    init_simple_test("aSf_BFu7c_BFu9s");
    static aSf_BFu7c_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aSf_BFu7c_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aSf_BFu7c_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_BFu9s(Test_aSf_BFu7c_BFu9s, "aSf_BFu7c_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_C()
{
  {
    init_simple_test("aSf_BFu7c_C");
    static aSf_BFu7c_C lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_C");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_C");
    check_field_offset(lv, v3, 2, "aSf_BFu7c_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_C(Test_aSf_BFu7c_C, "aSf_BFu7c_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_D()
{
  {
    init_simple_test("aSf_BFu7c_D");
    static aSf_BFu7c_D lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu7c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_D");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_D");
    check_field_offset(lv, v3, 2, "aSf_BFu7c_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_D(Test_aSf_BFu7c_D, "aSf_BFu7c_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_F()
{
  {
    init_simple_test("aSf_BFu7c_F");
    static aSf_BFu7c_F lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_F");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_F");
    check_field_offset(lv, v3, 2, "aSf_BFu7c_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_F(Test_aSf_BFu7c_F, "aSf_BFu7c_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_I()
{
  {
    init_simple_test("aSf_BFu7c_I");
    static aSf_BFu7c_I lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_I");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_I");
    check_field_offset(lv, v3, 2, "aSf_BFu7c_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_I(Test_aSf_BFu7c_I, "aSf_BFu7c_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_Ip()
{
  {
    init_simple_test("aSf_BFu7c_Ip");
    static aSf_BFu7c_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu7c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_Ip");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_Ip");
    check_field_offset(lv, v3, 2, "aSf_BFu7c_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_Ip(Test_aSf_BFu7c_Ip, "aSf_BFu7c_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_L()
{
  {
    init_simple_test("aSf_BFu7c_L");
    static aSf_BFu7c_L lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu7c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_L");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_L");
    check_field_offset(lv, v3, 2, "aSf_BFu7c_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_L(Test_aSf_BFu7c_L, "aSf_BFu7c_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_S()
{
  {
    init_simple_test("aSf_BFu7c_S");
    static aSf_BFu7c_S lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_S");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_S");
    check_field_offset(lv, v3, 2, "aSf_BFu7c_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_S(Test_aSf_BFu7c_S, "aSf_BFu7c_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_Sf()
{
  {
    init_simple_test("aSf_BFu7c_Sf");
    static aSf_BFu7c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_Sf");
    check_field_offset(lv, v3, 2, "aSf_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_Sf(Test_aSf_BFu7c_Sf, "aSf_BFu7c_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_Uc()
{
  {
    init_simple_test("aSf_BFu7c_Uc");
    static aSf_BFu7c_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_Uc");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_Uc");
    check_field_offset(lv, v3, 2, "aSf_BFu7c_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_Uc(Test_aSf_BFu7c_Uc, "aSf_BFu7c_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_Ui()
{
  {
    init_simple_test("aSf_BFu7c_Ui");
    static aSf_BFu7c_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_Ui");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_Ui");
    check_field_offset(lv, v3, 2, "aSf_BFu7c_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_Ui(Test_aSf_BFu7c_Ui, "aSf_BFu7c_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_Ul()
{
  {
    init_simple_test("aSf_BFu7c_Ul");
    static aSf_BFu7c_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu7c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_Ul");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_Ul");
    check_field_offset(lv, v3, 2, "aSf_BFu7c_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_Ul(Test_aSf_BFu7c_Ul, "aSf_BFu7c_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_Us()
{
  {
    init_simple_test("aSf_BFu7c_Us");
    static aSf_BFu7c_Us lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_Us");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_Us");
    check_field_offset(lv, v3, 2, "aSf_BFu7c_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_Us(Test_aSf_BFu7c_Us, "aSf_BFu7c_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7c_Vp()
{
  {
    init_simple_test("aSf_BFu7c_Vp");
    static aSf_BFu7c_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu7c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7c_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu7c_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7c_Vp");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7c_Vp");
    check_field_offset(lv, v3, 2, "aSf_BFu7c_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7c_Vp(Test_aSf_BFu7c_Vp, "aSf_BFu7c_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i()
{
  {
    init_simple_test("aSf_BFu7i");
    static aSf_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i(Test_aSf_BFu7i, "aSf_BFu7i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu15i()
{
  {
    init_simple_test("aSf_BFu7i_BFu15i");
    static aSf_BFu7i_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aSf_BFu7i_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aSf_BFu7i_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu15i(Test_aSf_BFu7i_BFu15i, "aSf_BFu7i_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu15ll()
{
  {
    init_simple_test("aSf_BFu7i_BFu15ll");
    static aSf_BFu7i_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aSf_BFu7i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aSf_BFu7i_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu15ll(Test_aSf_BFu7i_BFu15ll, "aSf_BFu7i_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu15s()
{
  {
    init_simple_test("aSf_BFu7i_BFu15s");
    static aSf_BFu7i_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aSf_BFu7i_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aSf_BFu7i_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu15s(Test_aSf_BFu7i_BFu15s, "aSf_BFu7i_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu16i()
{
  {
    init_simple_test("aSf_BFu7i_BFu16i");
    static aSf_BFu7i_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aSf_BFu7i_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aSf_BFu7i_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu16i(Test_aSf_BFu7i_BFu16i, "aSf_BFu7i_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu16ll()
{
  {
    init_simple_test("aSf_BFu7i_BFu16ll");
    static aSf_BFu7i_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aSf_BFu7i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aSf_BFu7i_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu16ll(Test_aSf_BFu7i_BFu16ll, "aSf_BFu7i_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu16s()
{
  {
    init_simple_test("aSf_BFu7i_BFu16s");
    static aSf_BFu7i_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aSf_BFu7i_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aSf_BFu7i_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu16s(Test_aSf_BFu7i_BFu16s, "aSf_BFu7i_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu17i()
{
  {
    init_simple_test("aSf_BFu7i_BFu17i");
    static aSf_BFu7i_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "aSf_BFu7i_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "aSf_BFu7i_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu17i(Test_aSf_BFu7i_BFu17i, "aSf_BFu7i_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu17ll()
{
  {
    init_simple_test("aSf_BFu7i_BFu17ll");
    static aSf_BFu7i_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "aSf_BFu7i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "aSf_BFu7i_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu17ll(Test_aSf_BFu7i_BFu17ll, "aSf_BFu7i_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu1c()
{
  {
    init_simple_test("aSf_BFu7i_BFu1c");
    static aSf_BFu7i_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu1c");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aSf_BFu7i_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu1c(Test_aSf_BFu7i_BFu1c, "aSf_BFu7i_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu1i()
{
  {
    init_simple_test("aSf_BFu7i_BFu1i");
    static aSf_BFu7i_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu1i");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aSf_BFu7i_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu1i(Test_aSf_BFu7i_BFu1i, "aSf_BFu7i_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu1ll()
{
  {
    init_simple_test("aSf_BFu7i_BFu1ll");
    static aSf_BFu7i_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu1ll");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aSf_BFu7i_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu1ll(Test_aSf_BFu7i_BFu1ll, "aSf_BFu7i_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu1s()
{
  {
    init_simple_test("aSf_BFu7i_BFu1s");
    static aSf_BFu7i_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu1s");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aSf_BFu7i_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu1s(Test_aSf_BFu7i_BFu1s, "aSf_BFu7i_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu31i()
{
  {
    init_simple_test("aSf_BFu7i_BFu31i");
    static aSf_BFu7i_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "aSf_BFu7i_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "aSf_BFu7i_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu31i(Test_aSf_BFu7i_BFu31i, "aSf_BFu7i_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu31ll()
{
  {
    init_simple_test("aSf_BFu7i_BFu31ll");
    static aSf_BFu7i_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "aSf_BFu7i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "aSf_BFu7i_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu31ll(Test_aSf_BFu7i_BFu31ll, "aSf_BFu7i_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu32i()
{
  {
    init_simple_test("aSf_BFu7i_BFu32i");
    static aSf_BFu7i_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "aSf_BFu7i_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "aSf_BFu7i_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu32i(Test_aSf_BFu7i_BFu32i, "aSf_BFu7i_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu32ll()
{
  {
    init_simple_test("aSf_BFu7i_BFu32ll");
    static aSf_BFu7i_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "aSf_BFu7i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "aSf_BFu7i_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu32ll(Test_aSf_BFu7i_BFu32ll, "aSf_BFu7i_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu33()
{
  {
    init_simple_test("aSf_BFu7i_BFu33");
    static aSf_BFu7i_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, 1, "aSf_BFu7i_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, hide_ull(1LL<<32), "aSf_BFu7i_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu33(Test_aSf_BFu7i_BFu33, "aSf_BFu7i_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu7c()
{
  {
    init_simple_test("aSf_BFu7i_BFu7c");
    static aSf_BFu7i_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aSf_BFu7i_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu7c(Test_aSf_BFu7i_BFu7c, "aSf_BFu7i_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu7i()
{
  {
    init_simple_test("aSf_BFu7i_BFu7i");
    static aSf_BFu7i_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aSf_BFu7i_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu7i(Test_aSf_BFu7i_BFu7i, "aSf_BFu7i_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu7ll()
{
  {
    init_simple_test("aSf_BFu7i_BFu7ll");
    static aSf_BFu7i_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aSf_BFu7i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu7ll(Test_aSf_BFu7i_BFu7ll, "aSf_BFu7i_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu7s()
{
  {
    init_simple_test("aSf_BFu7i_BFu7s");
    static aSf_BFu7i_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aSf_BFu7i_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu7s(Test_aSf_BFu7i_BFu7s, "aSf_BFu7i_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu8c()
{
  {
    init_simple_test("aSf_BFu7i_BFu8c");
    static aSf_BFu7i_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aSf_BFu7i_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aSf_BFu7i_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu8c(Test_aSf_BFu7i_BFu8c, "aSf_BFu7i_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu8i()
{
  {
    init_simple_test("aSf_BFu7i_BFu8i");
    static aSf_BFu7i_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aSf_BFu7i_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aSf_BFu7i_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu8i(Test_aSf_BFu7i_BFu8i, "aSf_BFu7i_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu8ll()
{
  {
    init_simple_test("aSf_BFu7i_BFu8ll");
    static aSf_BFu7i_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aSf_BFu7i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aSf_BFu7i_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu8ll(Test_aSf_BFu7i_BFu8ll, "aSf_BFu7i_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu8s()
{
  {
    init_simple_test("aSf_BFu7i_BFu8s");
    static aSf_BFu7i_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aSf_BFu7i_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aSf_BFu7i_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu8s(Test_aSf_BFu7i_BFu8s, "aSf_BFu7i_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu9i()
{
  {
    init_simple_test("aSf_BFu7i_BFu9i");
    static aSf_BFu7i_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aSf_BFu7i_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aSf_BFu7i_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu9i(Test_aSf_BFu7i_BFu9i, "aSf_BFu7i_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu9ll()
{
  {
    init_simple_test("aSf_BFu7i_BFu9ll");
    static aSf_BFu7i_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aSf_BFu7i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aSf_BFu7i_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu9ll(Test_aSf_BFu7i_BFu9ll, "aSf_BFu7i_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_BFu9s()
{
  {
    init_simple_test("aSf_BFu7i_BFu9s");
    static aSf_BFu7i_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aSf_BFu7i_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aSf_BFu7i_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_BFu9s(Test_aSf_BFu7i_BFu9s, "aSf_BFu7i_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_C()
{
  {
    init_simple_test("aSf_BFu7i_C");
    static aSf_BFu7i_C lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_C");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_C");
    check_field_offset(lv, v3, 2, "aSf_BFu7i_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_C(Test_aSf_BFu7i_C, "aSf_BFu7i_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_D()
{
  {
    init_simple_test("aSf_BFu7i_D");
    static aSf_BFu7i_D lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu7i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_D");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_D");
    check_field_offset(lv, v3, 2, "aSf_BFu7i_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_D(Test_aSf_BFu7i_D, "aSf_BFu7i_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_F()
{
  {
    init_simple_test("aSf_BFu7i_F");
    static aSf_BFu7i_F lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_F");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_F");
    check_field_offset(lv, v3, 2, "aSf_BFu7i_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_F(Test_aSf_BFu7i_F, "aSf_BFu7i_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_I()
{
  {
    init_simple_test("aSf_BFu7i_I");
    static aSf_BFu7i_I lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_I");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_I");
    check_field_offset(lv, v3, 2, "aSf_BFu7i_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_I(Test_aSf_BFu7i_I, "aSf_BFu7i_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_Ip()
{
  {
    init_simple_test("aSf_BFu7i_Ip");
    static aSf_BFu7i_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu7i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_Ip");
    check_field_offset(lv, v3, 2, "aSf_BFu7i_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_Ip(Test_aSf_BFu7i_Ip, "aSf_BFu7i_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_L()
{
  {
    init_simple_test("aSf_BFu7i_L");
    static aSf_BFu7i_L lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu7i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_L");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_L");
    check_field_offset(lv, v3, 2, "aSf_BFu7i_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_L(Test_aSf_BFu7i_L, "aSf_BFu7i_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_S()
{
  {
    init_simple_test("aSf_BFu7i_S");
    static aSf_BFu7i_S lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_S");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_S");
    check_field_offset(lv, v3, 2, "aSf_BFu7i_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_S(Test_aSf_BFu7i_S, "aSf_BFu7i_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_Sf()
{
  {
    init_simple_test("aSf_BFu7i_Sf");
    static aSf_BFu7i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_Sf");
    check_field_offset(lv, v3, 2, "aSf_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_Sf(Test_aSf_BFu7i_Sf, "aSf_BFu7i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_Uc()
{
  {
    init_simple_test("aSf_BFu7i_Uc");
    static aSf_BFu7i_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_Uc");
    check_field_offset(lv, v3, 2, "aSf_BFu7i_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_Uc(Test_aSf_BFu7i_Uc, "aSf_BFu7i_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_Ui()
{
  {
    init_simple_test("aSf_BFu7i_Ui");
    static aSf_BFu7i_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_Ui");
    check_field_offset(lv, v3, 2, "aSf_BFu7i_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_Ui(Test_aSf_BFu7i_Ui, "aSf_BFu7i_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_Ul()
{
  {
    init_simple_test("aSf_BFu7i_Ul");
    static aSf_BFu7i_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu7i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_Ul");
    check_field_offset(lv, v3, 2, "aSf_BFu7i_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_Ul(Test_aSf_BFu7i_Ul, "aSf_BFu7i_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_Us()
{
  {
    init_simple_test("aSf_BFu7i_Us");
    static aSf_BFu7i_Us lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_Us");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_Us");
    check_field_offset(lv, v3, 2, "aSf_BFu7i_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_Us(Test_aSf_BFu7i_Us, "aSf_BFu7i_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7i_Vp()
{
  {
    init_simple_test("aSf_BFu7i_Vp");
    static aSf_BFu7i_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu7i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7i_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu7i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7i_Vp");
    check_field_offset(lv, v3, 2, "aSf_BFu7i_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7i_Vp(Test_aSf_BFu7i_Vp, "aSf_BFu7i_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll()
{
  {
    init_simple_test("aSf_BFu7ll");
    static aSf_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll(Test_aSf_BFu7ll, "aSf_BFu7ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu15i()
{
  {
    init_simple_test("aSf_BFu7ll_BFu15i");
    static aSf_BFu7ll_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aSf_BFu7ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aSf_BFu7ll_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu15i(Test_aSf_BFu7ll_BFu15i, "aSf_BFu7ll_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu15ll()
{
  {
    init_simple_test("aSf_BFu7ll_BFu15ll");
    static aSf_BFu7ll_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aSf_BFu7ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aSf_BFu7ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu15ll(Test_aSf_BFu7ll_BFu15ll, "aSf_BFu7ll_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu15s()
{
  {
    init_simple_test("aSf_BFu7ll_BFu15s");
    static aSf_BFu7ll_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aSf_BFu7ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aSf_BFu7ll_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu15s(Test_aSf_BFu7ll_BFu15s, "aSf_BFu7ll_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu16i()
{
  {
    init_simple_test("aSf_BFu7ll_BFu16i");
    static aSf_BFu7ll_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aSf_BFu7ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aSf_BFu7ll_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu16i(Test_aSf_BFu7ll_BFu16i, "aSf_BFu7ll_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu16ll()
{
  {
    init_simple_test("aSf_BFu7ll_BFu16ll");
    static aSf_BFu7ll_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aSf_BFu7ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aSf_BFu7ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu16ll(Test_aSf_BFu7ll_BFu16ll, "aSf_BFu7ll_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu16s()
{
  {
    init_simple_test("aSf_BFu7ll_BFu16s");
    static aSf_BFu7ll_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aSf_BFu7ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aSf_BFu7ll_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu16s(Test_aSf_BFu7ll_BFu16s, "aSf_BFu7ll_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu17i()
{
  {
    init_simple_test("aSf_BFu7ll_BFu17i");
    static aSf_BFu7ll_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "aSf_BFu7ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "aSf_BFu7ll_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu17i(Test_aSf_BFu7ll_BFu17i, "aSf_BFu7ll_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu17ll()
{
  {
    init_simple_test("aSf_BFu7ll_BFu17ll");
    static aSf_BFu7ll_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "aSf_BFu7ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "aSf_BFu7ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu17ll(Test_aSf_BFu7ll_BFu17ll, "aSf_BFu7ll_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu1c()
{
  {
    init_simple_test("aSf_BFu7ll_BFu1c");
    static aSf_BFu7ll_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu1c");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aSf_BFu7ll_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu1c(Test_aSf_BFu7ll_BFu1c, "aSf_BFu7ll_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu1i()
{
  {
    init_simple_test("aSf_BFu7ll_BFu1i");
    static aSf_BFu7ll_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu1i");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aSf_BFu7ll_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu1i(Test_aSf_BFu7ll_BFu1i, "aSf_BFu7ll_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu1ll()
{
  {
    init_simple_test("aSf_BFu7ll_BFu1ll");
    static aSf_BFu7ll_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu1ll");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aSf_BFu7ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu1ll(Test_aSf_BFu7ll_BFu1ll, "aSf_BFu7ll_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu1s()
{
  {
    init_simple_test("aSf_BFu7ll_BFu1s");
    static aSf_BFu7ll_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu1s");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aSf_BFu7ll_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu1s(Test_aSf_BFu7ll_BFu1s, "aSf_BFu7ll_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu31i()
{
  {
    init_simple_test("aSf_BFu7ll_BFu31i");
    static aSf_BFu7ll_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "aSf_BFu7ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "aSf_BFu7ll_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu31i(Test_aSf_BFu7ll_BFu31i, "aSf_BFu7ll_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu31ll()
{
  {
    init_simple_test("aSf_BFu7ll_BFu31ll");
    static aSf_BFu7ll_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "aSf_BFu7ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "aSf_BFu7ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu31ll(Test_aSf_BFu7ll_BFu31ll, "aSf_BFu7ll_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu32i()
{
  {
    init_simple_test("aSf_BFu7ll_BFu32i");
    static aSf_BFu7ll_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "aSf_BFu7ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "aSf_BFu7ll_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu32i(Test_aSf_BFu7ll_BFu32i, "aSf_BFu7ll_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu32ll()
{
  {
    init_simple_test("aSf_BFu7ll_BFu32ll");
    static aSf_BFu7ll_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "aSf_BFu7ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "aSf_BFu7ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu32ll(Test_aSf_BFu7ll_BFu32ll, "aSf_BFu7ll_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu33()
{
  {
    init_simple_test("aSf_BFu7ll_BFu33");
    static aSf_BFu7ll_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, 1, "aSf_BFu7ll_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, hide_ull(1LL<<32), "aSf_BFu7ll_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu33(Test_aSf_BFu7ll_BFu33, "aSf_BFu7ll_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu7c()
{
  {
    init_simple_test("aSf_BFu7ll_BFu7c");
    static aSf_BFu7ll_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aSf_BFu7ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu7c(Test_aSf_BFu7ll_BFu7c, "aSf_BFu7ll_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu7i()
{
  {
    init_simple_test("aSf_BFu7ll_BFu7i");
    static aSf_BFu7ll_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aSf_BFu7ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu7i(Test_aSf_BFu7ll_BFu7i, "aSf_BFu7ll_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu7ll()
{
  {
    init_simple_test("aSf_BFu7ll_BFu7ll");
    static aSf_BFu7ll_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aSf_BFu7ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu7ll(Test_aSf_BFu7ll_BFu7ll, "aSf_BFu7ll_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu7s()
{
  {
    init_simple_test("aSf_BFu7ll_BFu7s");
    static aSf_BFu7ll_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aSf_BFu7ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu7s(Test_aSf_BFu7ll_BFu7s, "aSf_BFu7ll_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu8c()
{
  {
    init_simple_test("aSf_BFu7ll_BFu8c");
    static aSf_BFu7ll_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aSf_BFu7ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aSf_BFu7ll_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu8c(Test_aSf_BFu7ll_BFu8c, "aSf_BFu7ll_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu8i()
{
  {
    init_simple_test("aSf_BFu7ll_BFu8i");
    static aSf_BFu7ll_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aSf_BFu7ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aSf_BFu7ll_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu8i(Test_aSf_BFu7ll_BFu8i, "aSf_BFu7ll_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu8ll()
{
  {
    init_simple_test("aSf_BFu7ll_BFu8ll");
    static aSf_BFu7ll_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aSf_BFu7ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aSf_BFu7ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu8ll(Test_aSf_BFu7ll_BFu8ll, "aSf_BFu7ll_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu8s()
{
  {
    init_simple_test("aSf_BFu7ll_BFu8s");
    static aSf_BFu7ll_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aSf_BFu7ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aSf_BFu7ll_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu8s(Test_aSf_BFu7ll_BFu8s, "aSf_BFu7ll_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu9i()
{
  {
    init_simple_test("aSf_BFu7ll_BFu9i");
    static aSf_BFu7ll_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aSf_BFu7ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aSf_BFu7ll_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu9i(Test_aSf_BFu7ll_BFu9i, "aSf_BFu7ll_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu9ll()
{
  {
    init_simple_test("aSf_BFu7ll_BFu9ll");
    static aSf_BFu7ll_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aSf_BFu7ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aSf_BFu7ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu9ll(Test_aSf_BFu7ll_BFu9ll, "aSf_BFu7ll_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_BFu9s()
{
  {
    init_simple_test("aSf_BFu7ll_BFu9s");
    static aSf_BFu7ll_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aSf_BFu7ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aSf_BFu7ll_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_BFu9s(Test_aSf_BFu7ll_BFu9s, "aSf_BFu7ll_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_C()
{
  {
    init_simple_test("aSf_BFu7ll_C");
    static aSf_BFu7ll_C lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_C");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_C");
    check_field_offset(lv, v3, 2, "aSf_BFu7ll_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_C(Test_aSf_BFu7ll_C, "aSf_BFu7ll_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_D()
{
  {
    init_simple_test("aSf_BFu7ll_D");
    static aSf_BFu7ll_D lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu7ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_D");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_D");
    check_field_offset(lv, v3, 2, "aSf_BFu7ll_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_D(Test_aSf_BFu7ll_D, "aSf_BFu7ll_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_F()
{
  {
    init_simple_test("aSf_BFu7ll_F");
    static aSf_BFu7ll_F lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_F");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_F");
    check_field_offset(lv, v3, 2, "aSf_BFu7ll_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_F(Test_aSf_BFu7ll_F, "aSf_BFu7ll_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_I()
{
  {
    init_simple_test("aSf_BFu7ll_I");
    static aSf_BFu7ll_I lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_I");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_I");
    check_field_offset(lv, v3, 2, "aSf_BFu7ll_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_I(Test_aSf_BFu7ll_I, "aSf_BFu7ll_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_Ip()
{
  {
    init_simple_test("aSf_BFu7ll_Ip");
    static aSf_BFu7ll_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu7ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_Ip");
    check_field_offset(lv, v3, 2, "aSf_BFu7ll_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_Ip(Test_aSf_BFu7ll_Ip, "aSf_BFu7ll_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_L()
{
  {
    init_simple_test("aSf_BFu7ll_L");
    static aSf_BFu7ll_L lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu7ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_L");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_L");
    check_field_offset(lv, v3, 2, "aSf_BFu7ll_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_L(Test_aSf_BFu7ll_L, "aSf_BFu7ll_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_S()
{
  {
    init_simple_test("aSf_BFu7ll_S");
    static aSf_BFu7ll_S lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_S");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_S");
    check_field_offset(lv, v3, 2, "aSf_BFu7ll_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_S(Test_aSf_BFu7ll_S, "aSf_BFu7ll_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_Sf()
{
  {
    init_simple_test("aSf_BFu7ll_Sf");
    static aSf_BFu7ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_Sf");
    check_field_offset(lv, v3, 2, "aSf_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_Sf(Test_aSf_BFu7ll_Sf, "aSf_BFu7ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_Uc()
{
  {
    init_simple_test("aSf_BFu7ll_Uc");
    static aSf_BFu7ll_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_Uc");
    check_field_offset(lv, v3, 2, "aSf_BFu7ll_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_Uc(Test_aSf_BFu7ll_Uc, "aSf_BFu7ll_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_Ui()
{
  {
    init_simple_test("aSf_BFu7ll_Ui");
    static aSf_BFu7ll_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_Ui");
    check_field_offset(lv, v3, 2, "aSf_BFu7ll_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_Ui(Test_aSf_BFu7ll_Ui, "aSf_BFu7ll_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_Ul()
{
  {
    init_simple_test("aSf_BFu7ll_Ul");
    static aSf_BFu7ll_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu7ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_Ul");
    check_field_offset(lv, v3, 2, "aSf_BFu7ll_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_Ul(Test_aSf_BFu7ll_Ul, "aSf_BFu7ll_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_Us()
{
  {
    init_simple_test("aSf_BFu7ll_Us");
    static aSf_BFu7ll_Us lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_Us");
    check_field_offset(lv, v3, 2, "aSf_BFu7ll_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_Us(Test_aSf_BFu7ll_Us, "aSf_BFu7ll_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7ll_Vp()
{
  {
    init_simple_test("aSf_BFu7ll_Vp");
    static aSf_BFu7ll_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu7ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7ll_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu7ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7ll_Vp");
    check_field_offset(lv, v3, 2, "aSf_BFu7ll_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7ll_Vp(Test_aSf_BFu7ll_Vp, "aSf_BFu7ll_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s()
{
  {
    init_simple_test("aSf_BFu7s");
    static aSf_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s(Test_aSf_BFu7s, "aSf_BFu7s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu15i()
{
  {
    init_simple_test("aSf_BFu7s_BFu15i");
    static aSf_BFu7s_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aSf_BFu7s_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aSf_BFu7s_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu15i(Test_aSf_BFu7s_BFu15i, "aSf_BFu7s_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu15ll()
{
  {
    init_simple_test("aSf_BFu7s_BFu15ll");
    static aSf_BFu7s_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aSf_BFu7s_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aSf_BFu7s_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu15ll(Test_aSf_BFu7s_BFu15ll, "aSf_BFu7s_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu15s()
{
  {
    init_simple_test("aSf_BFu7s_BFu15s");
    static aSf_BFu7s_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aSf_BFu7s_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aSf_BFu7s_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu15s(Test_aSf_BFu7s_BFu15s, "aSf_BFu7s_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu16i()
{
  {
    init_simple_test("aSf_BFu7s_BFu16i");
    static aSf_BFu7s_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aSf_BFu7s_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aSf_BFu7s_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu16i(Test_aSf_BFu7s_BFu16i, "aSf_BFu7s_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu16ll()
{
  {
    init_simple_test("aSf_BFu7s_BFu16ll");
    static aSf_BFu7s_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aSf_BFu7s_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aSf_BFu7s_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu16ll(Test_aSf_BFu7s_BFu16ll, "aSf_BFu7s_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu16s()
{
  {
    init_simple_test("aSf_BFu7s_BFu16s");
    static aSf_BFu7s_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aSf_BFu7s_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aSf_BFu7s_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu16s(Test_aSf_BFu7s_BFu16s, "aSf_BFu7s_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu17i()
{
  {
    init_simple_test("aSf_BFu7s_BFu17i");
    static aSf_BFu7s_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "aSf_BFu7s_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "aSf_BFu7s_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu17i(Test_aSf_BFu7s_BFu17i, "aSf_BFu7s_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu17ll()
{
  {
    init_simple_test("aSf_BFu7s_BFu17ll");
    static aSf_BFu7s_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "aSf_BFu7s_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "aSf_BFu7s_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu17ll(Test_aSf_BFu7s_BFu17ll, "aSf_BFu7s_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu1c()
{
  {
    init_simple_test("aSf_BFu7s_BFu1c");
    static aSf_BFu7s_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu1c");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aSf_BFu7s_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu1c(Test_aSf_BFu7s_BFu1c, "aSf_BFu7s_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu1i()
{
  {
    init_simple_test("aSf_BFu7s_BFu1i");
    static aSf_BFu7s_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu1i");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aSf_BFu7s_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu1i(Test_aSf_BFu7s_BFu1i, "aSf_BFu7s_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu1ll()
{
  {
    init_simple_test("aSf_BFu7s_BFu1ll");
    static aSf_BFu7s_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu1ll");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aSf_BFu7s_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu1ll(Test_aSf_BFu7s_BFu1ll, "aSf_BFu7s_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu1s()
{
  {
    init_simple_test("aSf_BFu7s_BFu1s");
    static aSf_BFu7s_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu7s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu1s");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aSf_BFu7s_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu1s(Test_aSf_BFu7s_BFu1s, "aSf_BFu7s_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu31i()
{
  {
    init_simple_test("aSf_BFu7s_BFu31i");
    static aSf_BFu7s_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "aSf_BFu7s_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "aSf_BFu7s_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu31i(Test_aSf_BFu7s_BFu31i, "aSf_BFu7s_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu31ll()
{
  {
    init_simple_test("aSf_BFu7s_BFu31ll");
    static aSf_BFu7s_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "aSf_BFu7s_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "aSf_BFu7s_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu31ll(Test_aSf_BFu7s_BFu31ll, "aSf_BFu7s_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu32i()
{
  {
    init_simple_test("aSf_BFu7s_BFu32i");
    static aSf_BFu7s_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "aSf_BFu7s_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "aSf_BFu7s_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu32i(Test_aSf_BFu7s_BFu32i, "aSf_BFu7s_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu32ll()
{
  {
    init_simple_test("aSf_BFu7s_BFu32ll");
    static aSf_BFu7s_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "aSf_BFu7s_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "aSf_BFu7s_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu32ll(Test_aSf_BFu7s_BFu32ll, "aSf_BFu7s_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu33()
{
  {
    init_simple_test("aSf_BFu7s_BFu33");
    static aSf_BFu7s_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, 1, "aSf_BFu7s_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, hide_ull(1LL<<32), "aSf_BFu7s_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu33(Test_aSf_BFu7s_BFu33, "aSf_BFu7s_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu7c()
{
  {
    init_simple_test("aSf_BFu7s_BFu7c");
    static aSf_BFu7s_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aSf_BFu7s_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu7c(Test_aSf_BFu7s_BFu7c, "aSf_BFu7s_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu7i()
{
  {
    init_simple_test("aSf_BFu7s_BFu7i");
    static aSf_BFu7s_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aSf_BFu7s_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu7i(Test_aSf_BFu7s_BFu7i, "aSf_BFu7s_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu7ll()
{
  {
    init_simple_test("aSf_BFu7s_BFu7ll");
    static aSf_BFu7s_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aSf_BFu7s_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu7ll(Test_aSf_BFu7s_BFu7ll, "aSf_BFu7s_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu7s()
{
  {
    init_simple_test("aSf_BFu7s_BFu7s");
    static aSf_BFu7s_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aSf_BFu7s_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu7s(Test_aSf_BFu7s_BFu7s, "aSf_BFu7s_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu8c()
{
  {
    init_simple_test("aSf_BFu7s_BFu8c");
    static aSf_BFu7s_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aSf_BFu7s_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aSf_BFu7s_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu8c(Test_aSf_BFu7s_BFu8c, "aSf_BFu7s_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu8i()
{
  {
    init_simple_test("aSf_BFu7s_BFu8i");
    static aSf_BFu7s_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aSf_BFu7s_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aSf_BFu7s_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu8i(Test_aSf_BFu7s_BFu8i, "aSf_BFu7s_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu8ll()
{
  {
    init_simple_test("aSf_BFu7s_BFu8ll");
    static aSf_BFu7s_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aSf_BFu7s_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aSf_BFu7s_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu8ll(Test_aSf_BFu7s_BFu8ll, "aSf_BFu7s_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu8s()
{
  {
    init_simple_test("aSf_BFu7s_BFu8s");
    static aSf_BFu7s_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aSf_BFu7s_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aSf_BFu7s_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu8s(Test_aSf_BFu7s_BFu8s, "aSf_BFu7s_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu9i()
{
  {
    init_simple_test("aSf_BFu7s_BFu9i");
    static aSf_BFu7s_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aSf_BFu7s_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aSf_BFu7s_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu9i(Test_aSf_BFu7s_BFu9i, "aSf_BFu7s_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu9ll()
{
  {
    init_simple_test("aSf_BFu7s_BFu9ll");
    static aSf_BFu7s_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aSf_BFu7s_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aSf_BFu7s_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu9ll(Test_aSf_BFu7s_BFu9ll, "aSf_BFu7s_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_BFu9s()
{
  {
    init_simple_test("aSf_BFu7s_BFu9s");
    static aSf_BFu7s_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aSf_BFu7s_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aSf_BFu7s_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_BFu9s(Test_aSf_BFu7s_BFu9s, "aSf_BFu7s_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_C()
{
  {
    init_simple_test("aSf_BFu7s_C");
    static aSf_BFu7s_C lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_C");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_C");
    check_field_offset(lv, v3, 2, "aSf_BFu7s_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_C(Test_aSf_BFu7s_C, "aSf_BFu7s_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_D()
{
  {
    init_simple_test("aSf_BFu7s_D");
    static aSf_BFu7s_D lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu7s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_D");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_D");
    check_field_offset(lv, v3, 2, "aSf_BFu7s_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_D(Test_aSf_BFu7s_D, "aSf_BFu7s_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_F()
{
  {
    init_simple_test("aSf_BFu7s_F");
    static aSf_BFu7s_F lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_F");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_F");
    check_field_offset(lv, v3, 2, "aSf_BFu7s_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_F(Test_aSf_BFu7s_F, "aSf_BFu7s_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_I()
{
  {
    init_simple_test("aSf_BFu7s_I");
    static aSf_BFu7s_I lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_I");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_I");
    check_field_offset(lv, v3, 2, "aSf_BFu7s_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_I(Test_aSf_BFu7s_I, "aSf_BFu7s_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_Ip()
{
  {
    init_simple_test("aSf_BFu7s_Ip");
    static aSf_BFu7s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu7s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_Ip");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_Ip");
    check_field_offset(lv, v3, 2, "aSf_BFu7s_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_Ip(Test_aSf_BFu7s_Ip, "aSf_BFu7s_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_L()
{
  {
    init_simple_test("aSf_BFu7s_L");
    static aSf_BFu7s_L lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu7s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_L");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_L");
    check_field_offset(lv, v3, 2, "aSf_BFu7s_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_L(Test_aSf_BFu7s_L, "aSf_BFu7s_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_S()
{
  {
    init_simple_test("aSf_BFu7s_S");
    static aSf_BFu7s_S lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_S");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_S");
    check_field_offset(lv, v3, 2, "aSf_BFu7s_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_S(Test_aSf_BFu7s_S, "aSf_BFu7s_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_Sf()
{
  {
    init_simple_test("aSf_BFu7s_Sf");
    static aSf_BFu7s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_Sf");
    check_field_offset(lv, v3, 2, "aSf_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_Sf(Test_aSf_BFu7s_Sf, "aSf_BFu7s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_Uc()
{
  {
    init_simple_test("aSf_BFu7s_Uc");
    static aSf_BFu7s_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu7s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_Uc");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_Uc");
    check_field_offset(lv, v3, 2, "aSf_BFu7s_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_Uc(Test_aSf_BFu7s_Uc, "aSf_BFu7s_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_Ui()
{
  {
    init_simple_test("aSf_BFu7s_Ui");
    static aSf_BFu7s_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu7s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_Ui");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_Ui");
    check_field_offset(lv, v3, 2, "aSf_BFu7s_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_Ui(Test_aSf_BFu7s_Ui, "aSf_BFu7s_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_Ul()
{
  {
    init_simple_test("aSf_BFu7s_Ul");
    static aSf_BFu7s_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu7s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_Ul");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_Ul");
    check_field_offset(lv, v3, 2, "aSf_BFu7s_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_Ul(Test_aSf_BFu7s_Ul, "aSf_BFu7s_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_Us()
{
  {
    init_simple_test("aSf_BFu7s_Us");
    static aSf_BFu7s_Us lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu7s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_Us");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_Us");
    check_field_offset(lv, v3, 2, "aSf_BFu7s_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_Us(Test_aSf_BFu7s_Us, "aSf_BFu7s_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu7s_Vp()
{
  {
    init_simple_test("aSf_BFu7s_Vp");
    static aSf_BFu7s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu7s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu7s_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu7s_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aSf_BFu7s_Vp");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aSf_BFu7s_Vp");
    check_field_offset(lv, v3, 2, "aSf_BFu7s_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu7s_Vp(Test_aSf_BFu7s_Vp, "aSf_BFu7s_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c()
{
  {
    init_simple_test("aSf_BFu8c");
    static aSf_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c(Test_aSf_BFu8c, "aSf_BFu8c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu15i()
{
  {
    init_simple_test("aSf_BFu8c_BFu15i");
    static aSf_BFu8c_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_BFu8c_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_BFu8c_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu15i(Test_aSf_BFu8c_BFu15i, "aSf_BFu8c_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu15ll()
{
  {
    init_simple_test("aSf_BFu8c_BFu15ll");
    static aSf_BFu8c_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_BFu8c_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_BFu8c_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu15ll(Test_aSf_BFu8c_BFu15ll, "aSf_BFu8c_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu15s()
{
  {
    init_simple_test("aSf_BFu8c_BFu15s");
    static aSf_BFu8c_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_BFu8c_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_BFu8c_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu15s(Test_aSf_BFu8c_BFu15s, "aSf_BFu8c_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu16i()
{
  {
    init_simple_test("aSf_BFu8c_BFu16i");
    static aSf_BFu8c_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_BFu8c_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_BFu8c_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu16i(Test_aSf_BFu8c_BFu16i, "aSf_BFu8c_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu16ll()
{
  {
    init_simple_test("aSf_BFu8c_BFu16ll");
    static aSf_BFu8c_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_BFu8c_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_BFu8c_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu16ll(Test_aSf_BFu8c_BFu16ll, "aSf_BFu8c_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu16s()
{
  {
    init_simple_test("aSf_BFu8c_BFu16s");
    static aSf_BFu8c_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_BFu8c_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_BFu8c_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu16s(Test_aSf_BFu8c_BFu16s, "aSf_BFu8c_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu17i()
{
  {
    init_simple_test("aSf_BFu8c_BFu17i");
    static aSf_BFu8c_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu8c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aSf_BFu8c_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aSf_BFu8c_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu17i(Test_aSf_BFu8c_BFu17i, "aSf_BFu8c_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu17ll()
{
  {
    init_simple_test("aSf_BFu8c_BFu17ll");
    static aSf_BFu8c_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu8c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aSf_BFu8c_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aSf_BFu8c_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu17ll(Test_aSf_BFu8c_BFu17ll, "aSf_BFu8c_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu1c()
{
  {
    init_simple_test("aSf_BFu8c_BFu1c");
    static aSf_BFu8c_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu1c");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_BFu8c_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu1c(Test_aSf_BFu8c_BFu1c, "aSf_BFu8c_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu1i()
{
  {
    init_simple_test("aSf_BFu8c_BFu1i");
    static aSf_BFu8c_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu1i");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_BFu8c_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu1i(Test_aSf_BFu8c_BFu1i, "aSf_BFu8c_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu1ll()
{
  {
    init_simple_test("aSf_BFu8c_BFu1ll");
    static aSf_BFu8c_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu1ll");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_BFu8c_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu1ll(Test_aSf_BFu8c_BFu1ll, "aSf_BFu8c_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu1s()
{
  {
    init_simple_test("aSf_BFu8c_BFu1s");
    static aSf_BFu8c_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu1s");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_BFu8c_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu1s(Test_aSf_BFu8c_BFu1s, "aSf_BFu8c_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu31i()
{
  {
    init_simple_test("aSf_BFu8c_BFu31i");
    static aSf_BFu8c_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aSf_BFu8c_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aSf_BFu8c_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu31i(Test_aSf_BFu8c_BFu31i, "aSf_BFu8c_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu31ll()
{
  {
    init_simple_test("aSf_BFu8c_BFu31ll");
    static aSf_BFu8c_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aSf_BFu8c_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aSf_BFu8c_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu31ll(Test_aSf_BFu8c_BFu31ll, "aSf_BFu8c_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu32i()
{
  {
    init_simple_test("aSf_BFu8c_BFu32i");
    static aSf_BFu8c_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aSf_BFu8c_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aSf_BFu8c_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu32i(Test_aSf_BFu8c_BFu32i, "aSf_BFu8c_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu32ll()
{
  {
    init_simple_test("aSf_BFu8c_BFu32ll");
    static aSf_BFu8c_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aSf_BFu8c_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aSf_BFu8c_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu32ll(Test_aSf_BFu8c_BFu32ll, "aSf_BFu8c_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu33()
{
  {
    init_simple_test("aSf_BFu8c_BFu33");
    static aSf_BFu8c_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu8c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aSf_BFu8c_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aSf_BFu8c_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu33(Test_aSf_BFu8c_BFu33, "aSf_BFu8c_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu7c()
{
  {
    init_simple_test("aSf_BFu8c_BFu7c");
    static aSf_BFu8c_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_BFu8c_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_BFu8c_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu7c(Test_aSf_BFu8c_BFu7c, "aSf_BFu8c_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu7i()
{
  {
    init_simple_test("aSf_BFu8c_BFu7i");
    static aSf_BFu8c_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_BFu8c_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_BFu8c_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu7i(Test_aSf_BFu8c_BFu7i, "aSf_BFu8c_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu7ll()
{
  {
    init_simple_test("aSf_BFu8c_BFu7ll");
    static aSf_BFu8c_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_BFu8c_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_BFu8c_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu7ll(Test_aSf_BFu8c_BFu7ll, "aSf_BFu8c_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu7s()
{
  {
    init_simple_test("aSf_BFu8c_BFu7s");
    static aSf_BFu8c_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_BFu8c_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_BFu8c_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu7s(Test_aSf_BFu8c_BFu7s, "aSf_BFu8c_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu8c()
{
  {
    init_simple_test("aSf_BFu8c_BFu8c");
    static aSf_BFu8c_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_BFu8c_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu8c(Test_aSf_BFu8c_BFu8c, "aSf_BFu8c_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu8i()
{
  {
    init_simple_test("aSf_BFu8c_BFu8i");
    static aSf_BFu8c_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_BFu8c_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu8i(Test_aSf_BFu8c_BFu8i, "aSf_BFu8c_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu8ll()
{
  {
    init_simple_test("aSf_BFu8c_BFu8ll");
    static aSf_BFu8c_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_BFu8c_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu8ll(Test_aSf_BFu8c_BFu8ll, "aSf_BFu8c_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu8s()
{
  {
    init_simple_test("aSf_BFu8c_BFu8s");
    static aSf_BFu8c_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_BFu8c_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu8s(Test_aSf_BFu8c_BFu8s, "aSf_BFu8c_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu9i()
{
  {
    init_simple_test("aSf_BFu8c_BFu9i");
    static aSf_BFu8c_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_BFu8c_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_BFu8c_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu9i(Test_aSf_BFu8c_BFu9i, "aSf_BFu8c_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu9ll()
{
  {
    init_simple_test("aSf_BFu8c_BFu9ll");
    static aSf_BFu8c_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_BFu8c_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_BFu8c_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu9ll(Test_aSf_BFu8c_BFu9ll, "aSf_BFu8c_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_BFu9s()
{
  {
    init_simple_test("aSf_BFu8c_BFu9s");
    static aSf_BFu8c_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_BFu8c_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_BFu8c_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_BFu9s(Test_aSf_BFu8c_BFu9s, "aSf_BFu8c_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_C()
{
  {
    init_simple_test("aSf_BFu8c_C");
    static aSf_BFu8c_C lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_C");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_C");
    check_field_offset(lv, v3, 2, "aSf_BFu8c_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_C(Test_aSf_BFu8c_C, "aSf_BFu8c_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_D()
{
  {
    init_simple_test("aSf_BFu8c_D");
    static aSf_BFu8c_D lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu8c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_D");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_D");
    check_field_offset(lv, v3, 2, "aSf_BFu8c_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_D(Test_aSf_BFu8c_D, "aSf_BFu8c_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_F()
{
  {
    init_simple_test("aSf_BFu8c_F");
    static aSf_BFu8c_F lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_F");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_F");
    check_field_offset(lv, v3, 2, "aSf_BFu8c_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_F(Test_aSf_BFu8c_F, "aSf_BFu8c_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_I()
{
  {
    init_simple_test("aSf_BFu8c_I");
    static aSf_BFu8c_I lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_I");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_I");
    check_field_offset(lv, v3, 2, "aSf_BFu8c_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_I(Test_aSf_BFu8c_I, "aSf_BFu8c_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_Ip()
{
  {
    init_simple_test("aSf_BFu8c_Ip");
    static aSf_BFu8c_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu8c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_Ip");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_Ip");
    check_field_offset(lv, v3, 2, "aSf_BFu8c_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_Ip(Test_aSf_BFu8c_Ip, "aSf_BFu8c_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_L()
{
  {
    init_simple_test("aSf_BFu8c_L");
    static aSf_BFu8c_L lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu8c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_L");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_L");
    check_field_offset(lv, v3, 2, "aSf_BFu8c_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_L(Test_aSf_BFu8c_L, "aSf_BFu8c_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_S()
{
  {
    init_simple_test("aSf_BFu8c_S");
    static aSf_BFu8c_S lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_S");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_S");
    check_field_offset(lv, v3, 2, "aSf_BFu8c_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_S(Test_aSf_BFu8c_S, "aSf_BFu8c_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_Sf()
{
  {
    init_simple_test("aSf_BFu8c_Sf");
    static aSf_BFu8c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_Sf");
    check_field_offset(lv, v3, 2, "aSf_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_Sf(Test_aSf_BFu8c_Sf, "aSf_BFu8c_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_Uc()
{
  {
    init_simple_test("aSf_BFu8c_Uc");
    static aSf_BFu8c_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_Uc");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_Uc");
    check_field_offset(lv, v3, 2, "aSf_BFu8c_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_Uc(Test_aSf_BFu8c_Uc, "aSf_BFu8c_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_Ui()
{
  {
    init_simple_test("aSf_BFu8c_Ui");
    static aSf_BFu8c_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_Ui");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_Ui");
    check_field_offset(lv, v3, 2, "aSf_BFu8c_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_Ui(Test_aSf_BFu8c_Ui, "aSf_BFu8c_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_Ul()
{
  {
    init_simple_test("aSf_BFu8c_Ul");
    static aSf_BFu8c_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu8c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_Ul");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_Ul");
    check_field_offset(lv, v3, 2, "aSf_BFu8c_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_Ul(Test_aSf_BFu8c_Ul, "aSf_BFu8c_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_Us()
{
  {
    init_simple_test("aSf_BFu8c_Us");
    static aSf_BFu8c_Us lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_Us");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_Us");
    check_field_offset(lv, v3, 2, "aSf_BFu8c_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_Us(Test_aSf_BFu8c_Us, "aSf_BFu8c_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8c_Vp()
{
  {
    init_simple_test("aSf_BFu8c_Vp");
    static aSf_BFu8c_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu8c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8c_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu8c_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8c_Vp");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8c_Vp");
    check_field_offset(lv, v3, 2, "aSf_BFu8c_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8c_Vp(Test_aSf_BFu8c_Vp, "aSf_BFu8c_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i()
{
  {
    init_simple_test("aSf_BFu8i");
    static aSf_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i(Test_aSf_BFu8i, "aSf_BFu8i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu15i()
{
  {
    init_simple_test("aSf_BFu8i_BFu15i");
    static aSf_BFu8i_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_BFu8i_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_BFu8i_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu15i(Test_aSf_BFu8i_BFu15i, "aSf_BFu8i_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu15ll()
{
  {
    init_simple_test("aSf_BFu8i_BFu15ll");
    static aSf_BFu8i_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_BFu8i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_BFu8i_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu15ll(Test_aSf_BFu8i_BFu15ll, "aSf_BFu8i_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu15s()
{
  {
    init_simple_test("aSf_BFu8i_BFu15s");
    static aSf_BFu8i_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_BFu8i_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_BFu8i_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu15s(Test_aSf_BFu8i_BFu15s, "aSf_BFu8i_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu16i()
{
  {
    init_simple_test("aSf_BFu8i_BFu16i");
    static aSf_BFu8i_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_BFu8i_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_BFu8i_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu16i(Test_aSf_BFu8i_BFu16i, "aSf_BFu8i_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu16ll()
{
  {
    init_simple_test("aSf_BFu8i_BFu16ll");
    static aSf_BFu8i_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_BFu8i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_BFu8i_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu16ll(Test_aSf_BFu8i_BFu16ll, "aSf_BFu8i_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu16s()
{
  {
    init_simple_test("aSf_BFu8i_BFu16s");
    static aSf_BFu8i_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_BFu8i_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_BFu8i_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu16s(Test_aSf_BFu8i_BFu16s, "aSf_BFu8i_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu17i()
{
  {
    init_simple_test("aSf_BFu8i_BFu17i");
    static aSf_BFu8i_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu8i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aSf_BFu8i_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aSf_BFu8i_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu17i(Test_aSf_BFu8i_BFu17i, "aSf_BFu8i_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu17ll()
{
  {
    init_simple_test("aSf_BFu8i_BFu17ll");
    static aSf_BFu8i_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu8i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aSf_BFu8i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aSf_BFu8i_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu17ll(Test_aSf_BFu8i_BFu17ll, "aSf_BFu8i_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu1c()
{
  {
    init_simple_test("aSf_BFu8i_BFu1c");
    static aSf_BFu8i_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu1c");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_BFu8i_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu1c(Test_aSf_BFu8i_BFu1c, "aSf_BFu8i_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu1i()
{
  {
    init_simple_test("aSf_BFu8i_BFu1i");
    static aSf_BFu8i_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu1i");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_BFu8i_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu1i(Test_aSf_BFu8i_BFu1i, "aSf_BFu8i_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu1ll()
{
  {
    init_simple_test("aSf_BFu8i_BFu1ll");
    static aSf_BFu8i_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu1ll");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_BFu8i_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu1ll(Test_aSf_BFu8i_BFu1ll, "aSf_BFu8i_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu1s()
{
  {
    init_simple_test("aSf_BFu8i_BFu1s");
    static aSf_BFu8i_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu1s");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_BFu8i_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu1s(Test_aSf_BFu8i_BFu1s, "aSf_BFu8i_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu31i()
{
  {
    init_simple_test("aSf_BFu8i_BFu31i");
    static aSf_BFu8i_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aSf_BFu8i_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aSf_BFu8i_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu31i(Test_aSf_BFu8i_BFu31i, "aSf_BFu8i_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu31ll()
{
  {
    init_simple_test("aSf_BFu8i_BFu31ll");
    static aSf_BFu8i_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aSf_BFu8i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aSf_BFu8i_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu31ll(Test_aSf_BFu8i_BFu31ll, "aSf_BFu8i_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu32i()
{
  {
    init_simple_test("aSf_BFu8i_BFu32i");
    static aSf_BFu8i_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aSf_BFu8i_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aSf_BFu8i_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu32i(Test_aSf_BFu8i_BFu32i, "aSf_BFu8i_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu32ll()
{
  {
    init_simple_test("aSf_BFu8i_BFu32ll");
    static aSf_BFu8i_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aSf_BFu8i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aSf_BFu8i_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu32ll(Test_aSf_BFu8i_BFu32ll, "aSf_BFu8i_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu33()
{
  {
    init_simple_test("aSf_BFu8i_BFu33");
    static aSf_BFu8i_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu8i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aSf_BFu8i_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aSf_BFu8i_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu33(Test_aSf_BFu8i_BFu33, "aSf_BFu8i_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu7c()
{
  {
    init_simple_test("aSf_BFu8i_BFu7c");
    static aSf_BFu8i_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_BFu8i_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_BFu8i_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu7c(Test_aSf_BFu8i_BFu7c, "aSf_BFu8i_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu7i()
{
  {
    init_simple_test("aSf_BFu8i_BFu7i");
    static aSf_BFu8i_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_BFu8i_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_BFu8i_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu7i(Test_aSf_BFu8i_BFu7i, "aSf_BFu8i_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu7ll()
{
  {
    init_simple_test("aSf_BFu8i_BFu7ll");
    static aSf_BFu8i_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_BFu8i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_BFu8i_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu7ll(Test_aSf_BFu8i_BFu7ll, "aSf_BFu8i_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu7s()
{
  {
    init_simple_test("aSf_BFu8i_BFu7s");
    static aSf_BFu8i_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_BFu8i_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_BFu8i_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu7s(Test_aSf_BFu8i_BFu7s, "aSf_BFu8i_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu8c()
{
  {
    init_simple_test("aSf_BFu8i_BFu8c");
    static aSf_BFu8i_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_BFu8i_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu8c(Test_aSf_BFu8i_BFu8c, "aSf_BFu8i_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu8i()
{
  {
    init_simple_test("aSf_BFu8i_BFu8i");
    static aSf_BFu8i_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_BFu8i_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu8i(Test_aSf_BFu8i_BFu8i, "aSf_BFu8i_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu8ll()
{
  {
    init_simple_test("aSf_BFu8i_BFu8ll");
    static aSf_BFu8i_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_BFu8i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu8ll(Test_aSf_BFu8i_BFu8ll, "aSf_BFu8i_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu8s()
{
  {
    init_simple_test("aSf_BFu8i_BFu8s");
    static aSf_BFu8i_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_BFu8i_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu8s(Test_aSf_BFu8i_BFu8s, "aSf_BFu8i_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu9i()
{
  {
    init_simple_test("aSf_BFu8i_BFu9i");
    static aSf_BFu8i_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_BFu8i_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_BFu8i_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu9i(Test_aSf_BFu8i_BFu9i, "aSf_BFu8i_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu9ll()
{
  {
    init_simple_test("aSf_BFu8i_BFu9ll");
    static aSf_BFu8i_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_BFu8i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_BFu8i_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu9ll(Test_aSf_BFu8i_BFu9ll, "aSf_BFu8i_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_BFu9s()
{
  {
    init_simple_test("aSf_BFu8i_BFu9s");
    static aSf_BFu8i_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_BFu8i_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_BFu8i_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_BFu9s(Test_aSf_BFu8i_BFu9s, "aSf_BFu8i_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_C()
{
  {
    init_simple_test("aSf_BFu8i_C");
    static aSf_BFu8i_C lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_C");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_C");
    check_field_offset(lv, v3, 2, "aSf_BFu8i_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_C(Test_aSf_BFu8i_C, "aSf_BFu8i_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_D()
{
  {
    init_simple_test("aSf_BFu8i_D");
    static aSf_BFu8i_D lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu8i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_D");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_D");
    check_field_offset(lv, v3, 2, "aSf_BFu8i_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_D(Test_aSf_BFu8i_D, "aSf_BFu8i_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_F()
{
  {
    init_simple_test("aSf_BFu8i_F");
    static aSf_BFu8i_F lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_F");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_F");
    check_field_offset(lv, v3, 2, "aSf_BFu8i_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_F(Test_aSf_BFu8i_F, "aSf_BFu8i_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_I()
{
  {
    init_simple_test("aSf_BFu8i_I");
    static aSf_BFu8i_I lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_I");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_I");
    check_field_offset(lv, v3, 2, "aSf_BFu8i_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_I(Test_aSf_BFu8i_I, "aSf_BFu8i_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_Ip()
{
  {
    init_simple_test("aSf_BFu8i_Ip");
    static aSf_BFu8i_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu8i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_Ip");
    check_field_offset(lv, v3, 2, "aSf_BFu8i_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_Ip(Test_aSf_BFu8i_Ip, "aSf_BFu8i_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_L()
{
  {
    init_simple_test("aSf_BFu8i_L");
    static aSf_BFu8i_L lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu8i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_L");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_L");
    check_field_offset(lv, v3, 2, "aSf_BFu8i_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_L(Test_aSf_BFu8i_L, "aSf_BFu8i_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_S()
{
  {
    init_simple_test("aSf_BFu8i_S");
    static aSf_BFu8i_S lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_S");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_S");
    check_field_offset(lv, v3, 2, "aSf_BFu8i_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_S(Test_aSf_BFu8i_S, "aSf_BFu8i_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_Sf()
{
  {
    init_simple_test("aSf_BFu8i_Sf");
    static aSf_BFu8i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_Sf");
    check_field_offset(lv, v3, 2, "aSf_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_Sf(Test_aSf_BFu8i_Sf, "aSf_BFu8i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_Uc()
{
  {
    init_simple_test("aSf_BFu8i_Uc");
    static aSf_BFu8i_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_Uc");
    check_field_offset(lv, v3, 2, "aSf_BFu8i_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_Uc(Test_aSf_BFu8i_Uc, "aSf_BFu8i_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_Ui()
{
  {
    init_simple_test("aSf_BFu8i_Ui");
    static aSf_BFu8i_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_Ui");
    check_field_offset(lv, v3, 2, "aSf_BFu8i_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_Ui(Test_aSf_BFu8i_Ui, "aSf_BFu8i_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_Ul()
{
  {
    init_simple_test("aSf_BFu8i_Ul");
    static aSf_BFu8i_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu8i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_Ul");
    check_field_offset(lv, v3, 2, "aSf_BFu8i_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_Ul(Test_aSf_BFu8i_Ul, "aSf_BFu8i_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_Us()
{
  {
    init_simple_test("aSf_BFu8i_Us");
    static aSf_BFu8i_Us lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_Us");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_Us");
    check_field_offset(lv, v3, 2, "aSf_BFu8i_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_Us(Test_aSf_BFu8i_Us, "aSf_BFu8i_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8i_Vp()
{
  {
    init_simple_test("aSf_BFu8i_Vp");
    static aSf_BFu8i_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu8i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8i_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu8i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8i_Vp");
    check_field_offset(lv, v3, 2, "aSf_BFu8i_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8i_Vp(Test_aSf_BFu8i_Vp, "aSf_BFu8i_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll()
{
  {
    init_simple_test("aSf_BFu8ll");
    static aSf_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll(Test_aSf_BFu8ll, "aSf_BFu8ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu15i()
{
  {
    init_simple_test("aSf_BFu8ll_BFu15i");
    static aSf_BFu8ll_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_BFu8ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_BFu8ll_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu15i(Test_aSf_BFu8ll_BFu15i, "aSf_BFu8ll_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu15ll()
{
  {
    init_simple_test("aSf_BFu8ll_BFu15ll");
    static aSf_BFu8ll_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_BFu8ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_BFu8ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu15ll(Test_aSf_BFu8ll_BFu15ll, "aSf_BFu8ll_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu15s()
{
  {
    init_simple_test("aSf_BFu8ll_BFu15s");
    static aSf_BFu8ll_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_BFu8ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_BFu8ll_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu15s(Test_aSf_BFu8ll_BFu15s, "aSf_BFu8ll_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu16i()
{
  {
    init_simple_test("aSf_BFu8ll_BFu16i");
    static aSf_BFu8ll_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_BFu8ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_BFu8ll_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu16i(Test_aSf_BFu8ll_BFu16i, "aSf_BFu8ll_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu16ll()
{
  {
    init_simple_test("aSf_BFu8ll_BFu16ll");
    static aSf_BFu8ll_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_BFu8ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_BFu8ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu16ll(Test_aSf_BFu8ll_BFu16ll, "aSf_BFu8ll_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu16s()
{
  {
    init_simple_test("aSf_BFu8ll_BFu16s");
    static aSf_BFu8ll_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_BFu8ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_BFu8ll_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu16s(Test_aSf_BFu8ll_BFu16s, "aSf_BFu8ll_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu17i()
{
  {
    init_simple_test("aSf_BFu8ll_BFu17i");
    static aSf_BFu8ll_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu8ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aSf_BFu8ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aSf_BFu8ll_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu17i(Test_aSf_BFu8ll_BFu17i, "aSf_BFu8ll_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu17ll()
{
  {
    init_simple_test("aSf_BFu8ll_BFu17ll");
    static aSf_BFu8ll_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu8ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aSf_BFu8ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aSf_BFu8ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu17ll(Test_aSf_BFu8ll_BFu17ll, "aSf_BFu8ll_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu1c()
{
  {
    init_simple_test("aSf_BFu8ll_BFu1c");
    static aSf_BFu8ll_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu1c");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_BFu8ll_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu1c(Test_aSf_BFu8ll_BFu1c, "aSf_BFu8ll_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu1i()
{
  {
    init_simple_test("aSf_BFu8ll_BFu1i");
    static aSf_BFu8ll_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu1i");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_BFu8ll_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu1i(Test_aSf_BFu8ll_BFu1i, "aSf_BFu8ll_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu1ll()
{
  {
    init_simple_test("aSf_BFu8ll_BFu1ll");
    static aSf_BFu8ll_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu1ll");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_BFu8ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu1ll(Test_aSf_BFu8ll_BFu1ll, "aSf_BFu8ll_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu1s()
{
  {
    init_simple_test("aSf_BFu8ll_BFu1s");
    static aSf_BFu8ll_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu1s");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_BFu8ll_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu1s(Test_aSf_BFu8ll_BFu1s, "aSf_BFu8ll_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu31i()
{
  {
    init_simple_test("aSf_BFu8ll_BFu31i");
    static aSf_BFu8ll_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aSf_BFu8ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aSf_BFu8ll_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu31i(Test_aSf_BFu8ll_BFu31i, "aSf_BFu8ll_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu31ll()
{
  {
    init_simple_test("aSf_BFu8ll_BFu31ll");
    static aSf_BFu8ll_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aSf_BFu8ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aSf_BFu8ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu31ll(Test_aSf_BFu8ll_BFu31ll, "aSf_BFu8ll_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu32i()
{
  {
    init_simple_test("aSf_BFu8ll_BFu32i");
    static aSf_BFu8ll_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aSf_BFu8ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aSf_BFu8ll_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu32i(Test_aSf_BFu8ll_BFu32i, "aSf_BFu8ll_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu32ll()
{
  {
    init_simple_test("aSf_BFu8ll_BFu32ll");
    static aSf_BFu8ll_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aSf_BFu8ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aSf_BFu8ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu32ll(Test_aSf_BFu8ll_BFu32ll, "aSf_BFu8ll_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu33()
{
  {
    init_simple_test("aSf_BFu8ll_BFu33");
    static aSf_BFu8ll_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu8ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aSf_BFu8ll_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aSf_BFu8ll_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu33(Test_aSf_BFu8ll_BFu33, "aSf_BFu8ll_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu7c()
{
  {
    init_simple_test("aSf_BFu8ll_BFu7c");
    static aSf_BFu8ll_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_BFu8ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_BFu8ll_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu7c(Test_aSf_BFu8ll_BFu7c, "aSf_BFu8ll_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu7i()
{
  {
    init_simple_test("aSf_BFu8ll_BFu7i");
    static aSf_BFu8ll_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_BFu8ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_BFu8ll_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu7i(Test_aSf_BFu8ll_BFu7i, "aSf_BFu8ll_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu7ll()
{
  {
    init_simple_test("aSf_BFu8ll_BFu7ll");
    static aSf_BFu8ll_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_BFu8ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_BFu8ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu7ll(Test_aSf_BFu8ll_BFu7ll, "aSf_BFu8ll_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu7s()
{
  {
    init_simple_test("aSf_BFu8ll_BFu7s");
    static aSf_BFu8ll_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_BFu8ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_BFu8ll_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu7s(Test_aSf_BFu8ll_BFu7s, "aSf_BFu8ll_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu8c()
{
  {
    init_simple_test("aSf_BFu8ll_BFu8c");
    static aSf_BFu8ll_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_BFu8ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu8c(Test_aSf_BFu8ll_BFu8c, "aSf_BFu8ll_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu8i()
{
  {
    init_simple_test("aSf_BFu8ll_BFu8i");
    static aSf_BFu8ll_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_BFu8ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu8i(Test_aSf_BFu8ll_BFu8i, "aSf_BFu8ll_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu8ll()
{
  {
    init_simple_test("aSf_BFu8ll_BFu8ll");
    static aSf_BFu8ll_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_BFu8ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu8ll(Test_aSf_BFu8ll_BFu8ll, "aSf_BFu8ll_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu8s()
{
  {
    init_simple_test("aSf_BFu8ll_BFu8s");
    static aSf_BFu8ll_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_BFu8ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu8s(Test_aSf_BFu8ll_BFu8s, "aSf_BFu8ll_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu9i()
{
  {
    init_simple_test("aSf_BFu8ll_BFu9i");
    static aSf_BFu8ll_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_BFu8ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_BFu8ll_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu9i(Test_aSf_BFu8ll_BFu9i, "aSf_BFu8ll_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu9ll()
{
  {
    init_simple_test("aSf_BFu8ll_BFu9ll");
    static aSf_BFu8ll_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_BFu8ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_BFu8ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu9ll(Test_aSf_BFu8ll_BFu9ll, "aSf_BFu8ll_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_BFu9s()
{
  {
    init_simple_test("aSf_BFu8ll_BFu9s");
    static aSf_BFu8ll_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_BFu8ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_BFu8ll_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_BFu9s(Test_aSf_BFu8ll_BFu9s, "aSf_BFu8ll_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_C()
{
  {
    init_simple_test("aSf_BFu8ll_C");
    static aSf_BFu8ll_C lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_C");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_C");
    check_field_offset(lv, v3, 2, "aSf_BFu8ll_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_C(Test_aSf_BFu8ll_C, "aSf_BFu8ll_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_D()
{
  {
    init_simple_test("aSf_BFu8ll_D");
    static aSf_BFu8ll_D lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu8ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_D");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_D");
    check_field_offset(lv, v3, 2, "aSf_BFu8ll_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_D(Test_aSf_BFu8ll_D, "aSf_BFu8ll_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_F()
{
  {
    init_simple_test("aSf_BFu8ll_F");
    static aSf_BFu8ll_F lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_F");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_F");
    check_field_offset(lv, v3, 2, "aSf_BFu8ll_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_F(Test_aSf_BFu8ll_F, "aSf_BFu8ll_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_I()
{
  {
    init_simple_test("aSf_BFu8ll_I");
    static aSf_BFu8ll_I lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_I");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_I");
    check_field_offset(lv, v3, 2, "aSf_BFu8ll_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_I(Test_aSf_BFu8ll_I, "aSf_BFu8ll_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_Ip()
{
  {
    init_simple_test("aSf_BFu8ll_Ip");
    static aSf_BFu8ll_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu8ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_Ip");
    check_field_offset(lv, v3, 2, "aSf_BFu8ll_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_Ip(Test_aSf_BFu8ll_Ip, "aSf_BFu8ll_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_L()
{
  {
    init_simple_test("aSf_BFu8ll_L");
    static aSf_BFu8ll_L lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu8ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_L");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_L");
    check_field_offset(lv, v3, 2, "aSf_BFu8ll_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_L(Test_aSf_BFu8ll_L, "aSf_BFu8ll_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_S()
{
  {
    init_simple_test("aSf_BFu8ll_S");
    static aSf_BFu8ll_S lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_S");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_S");
    check_field_offset(lv, v3, 2, "aSf_BFu8ll_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_S(Test_aSf_BFu8ll_S, "aSf_BFu8ll_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_Sf()
{
  {
    init_simple_test("aSf_BFu8ll_Sf");
    static aSf_BFu8ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_Sf");
    check_field_offset(lv, v3, 2, "aSf_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_Sf(Test_aSf_BFu8ll_Sf, "aSf_BFu8ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_Uc()
{
  {
    init_simple_test("aSf_BFu8ll_Uc");
    static aSf_BFu8ll_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_Uc");
    check_field_offset(lv, v3, 2, "aSf_BFu8ll_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_Uc(Test_aSf_BFu8ll_Uc, "aSf_BFu8ll_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_Ui()
{
  {
    init_simple_test("aSf_BFu8ll_Ui");
    static aSf_BFu8ll_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_Ui");
    check_field_offset(lv, v3, 2, "aSf_BFu8ll_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_Ui(Test_aSf_BFu8ll_Ui, "aSf_BFu8ll_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_Ul()
{
  {
    init_simple_test("aSf_BFu8ll_Ul");
    static aSf_BFu8ll_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu8ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_Ul");
    check_field_offset(lv, v3, 2, "aSf_BFu8ll_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_Ul(Test_aSf_BFu8ll_Ul, "aSf_BFu8ll_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_Us()
{
  {
    init_simple_test("aSf_BFu8ll_Us");
    static aSf_BFu8ll_Us lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_Us");
    check_field_offset(lv, v3, 2, "aSf_BFu8ll_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_Us(Test_aSf_BFu8ll_Us, "aSf_BFu8ll_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8ll_Vp()
{
  {
    init_simple_test("aSf_BFu8ll_Vp");
    static aSf_BFu8ll_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu8ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8ll_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu8ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8ll_Vp");
    check_field_offset(lv, v3, 2, "aSf_BFu8ll_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8ll_Vp(Test_aSf_BFu8ll_Vp, "aSf_BFu8ll_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s()
{
  {
    init_simple_test("aSf_BFu8s");
    static aSf_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(aSf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s(Test_aSf_BFu8s, "aSf_BFu8s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu15i()
{
  {
    init_simple_test("aSf_BFu8s_BFu15i");
    static aSf_BFu8s_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_BFu8s_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_BFu8s_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu15i(Test_aSf_BFu8s_BFu15i, "aSf_BFu8s_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu15ll()
{
  {
    init_simple_test("aSf_BFu8s_BFu15ll");
    static aSf_BFu8s_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_BFu8s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_BFu8s_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu15ll(Test_aSf_BFu8s_BFu15ll, "aSf_BFu8s_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu15s()
{
  {
    init_simple_test("aSf_BFu8s_BFu15s");
    static aSf_BFu8s_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_BFu8s_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_BFu8s_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu15s(Test_aSf_BFu8s_BFu15s, "aSf_BFu8s_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu16i()
{
  {
    init_simple_test("aSf_BFu8s_BFu16i");
    static aSf_BFu8s_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_BFu8s_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_BFu8s_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu16i(Test_aSf_BFu8s_BFu16i, "aSf_BFu8s_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu16ll()
{
  {
    init_simple_test("aSf_BFu8s_BFu16ll");
    static aSf_BFu8s_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_BFu8s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_BFu8s_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu16ll(Test_aSf_BFu8s_BFu16ll, "aSf_BFu8s_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu16s()
{
  {
    init_simple_test("aSf_BFu8s_BFu16s");
    static aSf_BFu8s_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_BFu8s_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_BFu8s_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu16s(Test_aSf_BFu8s_BFu16s, "aSf_BFu8s_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu17i()
{
  {
    init_simple_test("aSf_BFu8s_BFu17i");
    static aSf_BFu8s_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu8s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aSf_BFu8s_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aSf_BFu8s_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu17i(Test_aSf_BFu8s_BFu17i, "aSf_BFu8s_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu17ll()
{
  {
    init_simple_test("aSf_BFu8s_BFu17ll");
    static aSf_BFu8s_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu8s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aSf_BFu8s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aSf_BFu8s_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu17ll(Test_aSf_BFu8s_BFu17ll, "aSf_BFu8s_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu1c()
{
  {
    init_simple_test("aSf_BFu8s_BFu1c");
    static aSf_BFu8s_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu1c");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_BFu8s_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu1c(Test_aSf_BFu8s_BFu1c, "aSf_BFu8s_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu1i()
{
  {
    init_simple_test("aSf_BFu8s_BFu1i");
    static aSf_BFu8s_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu1i");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_BFu8s_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu1i(Test_aSf_BFu8s_BFu1i, "aSf_BFu8s_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu1ll()
{
  {
    init_simple_test("aSf_BFu8s_BFu1ll");
    static aSf_BFu8s_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu1ll");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_BFu8s_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu1ll(Test_aSf_BFu8s_BFu1ll, "aSf_BFu8s_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu1s()
{
  {
    init_simple_test("aSf_BFu8s_BFu1s");
    static aSf_BFu8s_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu1s");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_BFu8s_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu1s(Test_aSf_BFu8s_BFu1s, "aSf_BFu8s_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu31i()
{
  {
    init_simple_test("aSf_BFu8s_BFu31i");
    static aSf_BFu8s_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aSf_BFu8s_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aSf_BFu8s_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu31i(Test_aSf_BFu8s_BFu31i, "aSf_BFu8s_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu31ll()
{
  {
    init_simple_test("aSf_BFu8s_BFu31ll");
    static aSf_BFu8s_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aSf_BFu8s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aSf_BFu8s_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu31ll(Test_aSf_BFu8s_BFu31ll, "aSf_BFu8s_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu32i()
{
  {
    init_simple_test("aSf_BFu8s_BFu32i");
    static aSf_BFu8s_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aSf_BFu8s_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aSf_BFu8s_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu32i(Test_aSf_BFu8s_BFu32i, "aSf_BFu8s_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu32ll()
{
  {
    init_simple_test("aSf_BFu8s_BFu32ll");
    static aSf_BFu8s_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aSf_BFu8s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aSf_BFu8s_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu32ll(Test_aSf_BFu8s_BFu32ll, "aSf_BFu8s_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu33()
{
  {
    init_simple_test("aSf_BFu8s_BFu33");
    static aSf_BFu8s_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu8s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aSf_BFu8s_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aSf_BFu8s_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu33(Test_aSf_BFu8s_BFu33, "aSf_BFu8s_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu7c()
{
  {
    init_simple_test("aSf_BFu8s_BFu7c");
    static aSf_BFu8s_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_BFu8s_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_BFu8s_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu7c(Test_aSf_BFu8s_BFu7c, "aSf_BFu8s_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu7i()
{
  {
    init_simple_test("aSf_BFu8s_BFu7i");
    static aSf_BFu8s_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_BFu8s_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_BFu8s_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu7i(Test_aSf_BFu8s_BFu7i, "aSf_BFu8s_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu7ll()
{
  {
    init_simple_test("aSf_BFu8s_BFu7ll");
    static aSf_BFu8s_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_BFu8s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_BFu8s_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu7ll(Test_aSf_BFu8s_BFu7ll, "aSf_BFu8s_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu7s()
{
  {
    init_simple_test("aSf_BFu8s_BFu7s");
    static aSf_BFu8s_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_BFu8s_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_BFu8s_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu7s(Test_aSf_BFu8s_BFu7s, "aSf_BFu8s_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu8c()
{
  {
    init_simple_test("aSf_BFu8s_BFu8c");
    static aSf_BFu8s_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_BFu8s_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu8c(Test_aSf_BFu8s_BFu8c, "aSf_BFu8s_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu8i()
{
  {
    init_simple_test("aSf_BFu8s_BFu8i");
    static aSf_BFu8s_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_BFu8s_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu8i(Test_aSf_BFu8s_BFu8i, "aSf_BFu8s_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu8ll()
{
  {
    init_simple_test("aSf_BFu8s_BFu8ll");
    static aSf_BFu8s_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_BFu8s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu8ll(Test_aSf_BFu8s_BFu8ll, "aSf_BFu8s_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu8s()
{
  {
    init_simple_test("aSf_BFu8s_BFu8s");
    static aSf_BFu8s_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_BFu8s_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu8s(Test_aSf_BFu8s_BFu8s, "aSf_BFu8s_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu9i()
{
  {
    init_simple_test("aSf_BFu8s_BFu9i");
    static aSf_BFu8s_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_BFu8s_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_BFu8s_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu9i(Test_aSf_BFu8s_BFu9i, "aSf_BFu8s_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu9ll()
{
  {
    init_simple_test("aSf_BFu8s_BFu9ll");
    static aSf_BFu8s_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_BFu8s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_BFu8s_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu9ll(Test_aSf_BFu8s_BFu9ll, "aSf_BFu8s_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_BFu9s()
{
  {
    init_simple_test("aSf_BFu8s_BFu9s");
    static aSf_BFu8s_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_BFu8s_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_BFu8s_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_BFu9s(Test_aSf_BFu8s_BFu9s, "aSf_BFu8s_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_C()
{
  {
    init_simple_test("aSf_BFu8s_C");
    static aSf_BFu8s_C lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_C");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_C");
    check_field_offset(lv, v3, 2, "aSf_BFu8s_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_C(Test_aSf_BFu8s_C, "aSf_BFu8s_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_D()
{
  {
    init_simple_test("aSf_BFu8s_D");
    static aSf_BFu8s_D lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu8s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_D");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_D");
    check_field_offset(lv, v3, 2, "aSf_BFu8s_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_D(Test_aSf_BFu8s_D, "aSf_BFu8s_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_F()
{
  {
    init_simple_test("aSf_BFu8s_F");
    static aSf_BFu8s_F lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_F");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_F");
    check_field_offset(lv, v3, 2, "aSf_BFu8s_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_F(Test_aSf_BFu8s_F, "aSf_BFu8s_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_I()
{
  {
    init_simple_test("aSf_BFu8s_I");
    static aSf_BFu8s_I lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_I");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_I");
    check_field_offset(lv, v3, 2, "aSf_BFu8s_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_I(Test_aSf_BFu8s_I, "aSf_BFu8s_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_Ip()
{
  {
    init_simple_test("aSf_BFu8s_Ip");
    static aSf_BFu8s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu8s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_Ip");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_Ip");
    check_field_offset(lv, v3, 2, "aSf_BFu8s_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_Ip(Test_aSf_BFu8s_Ip, "aSf_BFu8s_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_L()
{
  {
    init_simple_test("aSf_BFu8s_L");
    static aSf_BFu8s_L lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu8s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_L");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_L");
    check_field_offset(lv, v3, 2, "aSf_BFu8s_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_L(Test_aSf_BFu8s_L, "aSf_BFu8s_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_S()
{
  {
    init_simple_test("aSf_BFu8s_S");
    static aSf_BFu8s_S lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_S");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_S");
    check_field_offset(lv, v3, 2, "aSf_BFu8s_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_S(Test_aSf_BFu8s_S, "aSf_BFu8s_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_Sf()
{
  {
    init_simple_test("aSf_BFu8s_Sf");
    static aSf_BFu8s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_Sf");
    check_field_offset(lv, v3, 2, "aSf_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_Sf(Test_aSf_BFu8s_Sf, "aSf_BFu8s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_Uc()
{
  {
    init_simple_test("aSf_BFu8s_Uc");
    static aSf_BFu8s_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu8s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_Uc");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_Uc");
    check_field_offset(lv, v3, 2, "aSf_BFu8s_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_Uc(Test_aSf_BFu8s_Uc, "aSf_BFu8s_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_Ui()
{
  {
    init_simple_test("aSf_BFu8s_Ui");
    static aSf_BFu8s_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu8s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_Ui");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_Ui");
    check_field_offset(lv, v3, 2, "aSf_BFu8s_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_Ui(Test_aSf_BFu8s_Ui, "aSf_BFu8s_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_Ul()
{
  {
    init_simple_test("aSf_BFu8s_Ul");
    static aSf_BFu8s_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aSf_BFu8s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_Ul");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_Ul");
    check_field_offset(lv, v3, 2, "aSf_BFu8s_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_Ul(Test_aSf_BFu8s_Ul, "aSf_BFu8s_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_Us()
{
  {
    init_simple_test("aSf_BFu8s_Us");
    static aSf_BFu8s_Us lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu8s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_Us");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_Us");
    check_field_offset(lv, v3, 2, "aSf_BFu8s_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_Us(Test_aSf_BFu8s_Us, "aSf_BFu8s_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu8s_Vp()
{
  {
    init_simple_test("aSf_BFu8s_Vp");
    static aSf_BFu8s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_BFu8s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu8s_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu8s_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aSf_BFu8s_Vp");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aSf_BFu8s_Vp");
    check_field_offset(lv, v3, 2, "aSf_BFu8s_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu8s_Vp(Test_aSf_BFu8s_Vp, "aSf_BFu8s_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i()
{
  {
    init_simple_test("aSf_BFu9i");
    static aSf_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i(Test_aSf_BFu9i, "aSf_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu15i()
{
  {
    init_simple_test("aSf_BFu9i_BFu15i");
    static aSf_BFu9i_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aSf_BFu9i_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aSf_BFu9i_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu15i(Test_aSf_BFu9i_BFu15i, "aSf_BFu9i_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu15ll()
{
  {
    init_simple_test("aSf_BFu9i_BFu15ll");
    static aSf_BFu9i_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aSf_BFu9i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aSf_BFu9i_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu15ll(Test_aSf_BFu9i_BFu15ll, "aSf_BFu9i_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu15s()
{
  {
    init_simple_test("aSf_BFu9i_BFu15s");
    static aSf_BFu9i_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aSf_BFu9i_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aSf_BFu9i_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu15s(Test_aSf_BFu9i_BFu15s, "aSf_BFu9i_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu16i()
{
  {
    init_simple_test("aSf_BFu9i_BFu16i");
    static aSf_BFu9i_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aSf_BFu9i_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aSf_BFu9i_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu16i(Test_aSf_BFu9i_BFu16i, "aSf_BFu9i_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu16ll()
{
  {
    init_simple_test("aSf_BFu9i_BFu16ll");
    static aSf_BFu9i_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aSf_BFu9i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aSf_BFu9i_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu16ll(Test_aSf_BFu9i_BFu16ll, "aSf_BFu9i_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu16s()
{
  {
    init_simple_test("aSf_BFu9i_BFu16s");
    static aSf_BFu9i_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aSf_BFu9i_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aSf_BFu9i_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu16s(Test_aSf_BFu9i_BFu16s, "aSf_BFu9i_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu17i()
{
  {
    init_simple_test("aSf_BFu9i_BFu17i");
    static aSf_BFu9i_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aSf_BFu9i_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aSf_BFu9i_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu17i(Test_aSf_BFu9i_BFu17i, "aSf_BFu9i_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu17ll()
{
  {
    init_simple_test("aSf_BFu9i_BFu17ll");
    static aSf_BFu9i_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aSf_BFu9i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aSf_BFu9i_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu17ll(Test_aSf_BFu9i_BFu17ll, "aSf_BFu9i_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu1c()
{
  {
    init_simple_test("aSf_BFu9i_BFu1c");
    static aSf_BFu9i_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu1c");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aSf_BFu9i_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu1c(Test_aSf_BFu9i_BFu1c, "aSf_BFu9i_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu1i()
{
  {
    init_simple_test("aSf_BFu9i_BFu1i");
    static aSf_BFu9i_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu1i");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aSf_BFu9i_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu1i(Test_aSf_BFu9i_BFu1i, "aSf_BFu9i_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu1ll()
{
  {
    init_simple_test("aSf_BFu9i_BFu1ll");
    static aSf_BFu9i_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu1ll");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aSf_BFu9i_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu1ll(Test_aSf_BFu9i_BFu1ll, "aSf_BFu9i_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu1s()
{
  {
    init_simple_test("aSf_BFu9i_BFu1s");
    static aSf_BFu9i_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu1s");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aSf_BFu9i_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu1s(Test_aSf_BFu9i_BFu1s, "aSf_BFu9i_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu31i()
{
  {
    init_simple_test("aSf_BFu9i_BFu31i");
    static aSf_BFu9i_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu9i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aSf_BFu9i_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aSf_BFu9i_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu31i(Test_aSf_BFu9i_BFu31i, "aSf_BFu9i_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu31ll()
{
  {
    init_simple_test("aSf_BFu9i_BFu31ll");
    static aSf_BFu9i_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu9i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aSf_BFu9i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aSf_BFu9i_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu31ll(Test_aSf_BFu9i_BFu31ll, "aSf_BFu9i_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu32i()
{
  {
    init_simple_test("aSf_BFu9i_BFu32i");
    static aSf_BFu9i_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aSf_BFu9i_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aSf_BFu9i_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu32i(Test_aSf_BFu9i_BFu32i, "aSf_BFu9i_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu32ll()
{
  {
    init_simple_test("aSf_BFu9i_BFu32ll");
    static aSf_BFu9i_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aSf_BFu9i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aSf_BFu9i_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu32ll(Test_aSf_BFu9i_BFu32ll, "aSf_BFu9i_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu33()
{
  {
    init_simple_test("aSf_BFu9i_BFu33");
    static aSf_BFu9i_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, 1, "aSf_BFu9i_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, hide_ull(1LL<<32), "aSf_BFu9i_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu33(Test_aSf_BFu9i_BFu33, "aSf_BFu9i_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu7c()
{
  {
    init_simple_test("aSf_BFu9i_BFu7c");
    static aSf_BFu9i_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aSf_BFu9i_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aSf_BFu9i_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu7c(Test_aSf_BFu9i_BFu7c, "aSf_BFu9i_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu7i()
{
  {
    init_simple_test("aSf_BFu9i_BFu7i");
    static aSf_BFu9i_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aSf_BFu9i_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aSf_BFu9i_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu7i(Test_aSf_BFu9i_BFu7i, "aSf_BFu9i_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu7ll()
{
  {
    init_simple_test("aSf_BFu9i_BFu7ll");
    static aSf_BFu9i_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aSf_BFu9i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aSf_BFu9i_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu7ll(Test_aSf_BFu9i_BFu7ll, "aSf_BFu9i_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu7s()
{
  {
    init_simple_test("aSf_BFu9i_BFu7s");
    static aSf_BFu9i_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aSf_BFu9i_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aSf_BFu9i_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu7s(Test_aSf_BFu9i_BFu7s, "aSf_BFu9i_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu8c()
{
  {
    init_simple_test("aSf_BFu9i_BFu8c");
    static aSf_BFu9i_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aSf_BFu9i_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aSf_BFu9i_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu8c(Test_aSf_BFu9i_BFu8c, "aSf_BFu9i_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu8i()
{
  {
    init_simple_test("aSf_BFu9i_BFu8i");
    static aSf_BFu9i_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aSf_BFu9i_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aSf_BFu9i_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu8i(Test_aSf_BFu9i_BFu8i, "aSf_BFu9i_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu8ll()
{
  {
    init_simple_test("aSf_BFu9i_BFu8ll");
    static aSf_BFu9i_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aSf_BFu9i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aSf_BFu9i_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu8ll(Test_aSf_BFu9i_BFu8ll, "aSf_BFu9i_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu8s()
{
  {
    init_simple_test("aSf_BFu9i_BFu8s");
    static aSf_BFu9i_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aSf_BFu9i_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aSf_BFu9i_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu8s(Test_aSf_BFu9i_BFu8s, "aSf_BFu9i_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu9i()
{
  {
    init_simple_test("aSf_BFu9i_BFu9i");
    static aSf_BFu9i_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aSf_BFu9i_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu9i(Test_aSf_BFu9i_BFu9i, "aSf_BFu9i_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu9ll()
{
  {
    init_simple_test("aSf_BFu9i_BFu9ll");
    static aSf_BFu9i_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aSf_BFu9i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu9ll(Test_aSf_BFu9i_BFu9ll, "aSf_BFu9i_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_BFu9s()
{
  {
    init_simple_test("aSf_BFu9i_BFu9s");
    static aSf_BFu9i_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aSf_BFu9i_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aSf_BFu9i_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_BFu9s(Test_aSf_BFu9i_BFu9s, "aSf_BFu9i_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_C()
{
  {
    init_simple_test("aSf_BFu9i_C");
    static aSf_BFu9i_C lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_C");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_C");
    check_field_offset(lv, v3, 3, "aSf_BFu9i_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_C(Test_aSf_BFu9i_C, "aSf_BFu9i_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_D()
{
  {
    init_simple_test("aSf_BFu9i_D");
    static aSf_BFu9i_D lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu9i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_D");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_D");
    check_field_offset(lv, v3, 3, "aSf_BFu9i_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_D(Test_aSf_BFu9i_D, "aSf_BFu9i_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_F()
{
  {
    init_simple_test("aSf_BFu9i_F");
    static aSf_BFu9i_F lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_F");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_F");
    check_field_offset(lv, v3, 3, "aSf_BFu9i_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_F(Test_aSf_BFu9i_F, "aSf_BFu9i_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_I()
{
  {
    init_simple_test("aSf_BFu9i_I");
    static aSf_BFu9i_I lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_I");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_I");
    check_field_offset(lv, v3, 3, "aSf_BFu9i_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_I(Test_aSf_BFu9i_I, "aSf_BFu9i_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_Ip()
{
  {
    init_simple_test("aSf_BFu9i_Ip");
    static aSf_BFu9i_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_BFu9i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_Ip");
    check_field_offset(lv, v3, 3, "aSf_BFu9i_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_Ip(Test_aSf_BFu9i_Ip, "aSf_BFu9i_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_L()
{
  {
    init_simple_test("aSf_BFu9i_L");
    static aSf_BFu9i_L lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu9i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_L");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_L");
    check_field_offset(lv, v3, 3, "aSf_BFu9i_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_L(Test_aSf_BFu9i_L, "aSf_BFu9i_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_S()
{
  {
    init_simple_test("aSf_BFu9i_S");
    static aSf_BFu9i_S lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_S");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_S");
    check_field_offset(lv, v3, 3, "aSf_BFu9i_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_S(Test_aSf_BFu9i_S, "aSf_BFu9i_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_Sf()
{
  {
    init_simple_test("aSf_BFu9i_Sf");
    static aSf_BFu9i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_Sf");
    check_field_offset(lv, v3, 3, "aSf_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_Sf(Test_aSf_BFu9i_Sf, "aSf_BFu9i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_Uc()
{
  {
    init_simple_test("aSf_BFu9i_Uc");
    static aSf_BFu9i_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_Uc");
    check_field_offset(lv, v3, 3, "aSf_BFu9i_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_Uc(Test_aSf_BFu9i_Uc, "aSf_BFu9i_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_Ui()
{
  {
    init_simple_test("aSf_BFu9i_Ui");
    static aSf_BFu9i_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_Ui");
    check_field_offset(lv, v3, 3, "aSf_BFu9i_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_Ui(Test_aSf_BFu9i_Ui, "aSf_BFu9i_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_Ul()
{
  {
    init_simple_test("aSf_BFu9i_Ul");
    static aSf_BFu9i_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu9i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_Ul");
    check_field_offset(lv, v3, 3, "aSf_BFu9i_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_Ul(Test_aSf_BFu9i_Ul, "aSf_BFu9i_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_Us()
{
  {
    init_simple_test("aSf_BFu9i_Us");
    static aSf_BFu9i_Us lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_Us");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_Us");
    check_field_offset(lv, v3, 3, "aSf_BFu9i_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_Us(Test_aSf_BFu9i_Us, "aSf_BFu9i_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9i_Vp()
{
  {
    init_simple_test("aSf_BFu9i_Vp");
    static aSf_BFu9i_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_BFu9i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9i_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu9i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9i_Vp");
    check_field_offset(lv, v3, 3, "aSf_BFu9i_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9i_Vp(Test_aSf_BFu9i_Vp, "aSf_BFu9i_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll()
{
  {
    init_simple_test("aSf_BFu9ll");
    static aSf_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll(Test_aSf_BFu9ll, "aSf_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu15i()
{
  {
    init_simple_test("aSf_BFu9ll_BFu15i");
    static aSf_BFu9ll_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aSf_BFu9ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aSf_BFu9ll_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu15i(Test_aSf_BFu9ll_BFu15i, "aSf_BFu9ll_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu15ll()
{
  {
    init_simple_test("aSf_BFu9ll_BFu15ll");
    static aSf_BFu9ll_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aSf_BFu9ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aSf_BFu9ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu15ll(Test_aSf_BFu9ll_BFu15ll, "aSf_BFu9ll_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu15s()
{
  {
    init_simple_test("aSf_BFu9ll_BFu15s");
    static aSf_BFu9ll_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aSf_BFu9ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aSf_BFu9ll_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu15s(Test_aSf_BFu9ll_BFu15s, "aSf_BFu9ll_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu16i()
{
  {
    init_simple_test("aSf_BFu9ll_BFu16i");
    static aSf_BFu9ll_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aSf_BFu9ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aSf_BFu9ll_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu16i(Test_aSf_BFu9ll_BFu16i, "aSf_BFu9ll_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu16ll()
{
  {
    init_simple_test("aSf_BFu9ll_BFu16ll");
    static aSf_BFu9ll_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aSf_BFu9ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aSf_BFu9ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu16ll(Test_aSf_BFu9ll_BFu16ll, "aSf_BFu9ll_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu16s()
{
  {
    init_simple_test("aSf_BFu9ll_BFu16s");
    static aSf_BFu9ll_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aSf_BFu9ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aSf_BFu9ll_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu16s(Test_aSf_BFu9ll_BFu16s, "aSf_BFu9ll_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu17i()
{
  {
    init_simple_test("aSf_BFu9ll_BFu17i");
    static aSf_BFu9ll_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aSf_BFu9ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aSf_BFu9ll_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu17i(Test_aSf_BFu9ll_BFu17i, "aSf_BFu9ll_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu17ll()
{
  {
    init_simple_test("aSf_BFu9ll_BFu17ll");
    static aSf_BFu9ll_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aSf_BFu9ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aSf_BFu9ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu17ll(Test_aSf_BFu9ll_BFu17ll, "aSf_BFu9ll_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu1c()
{
  {
    init_simple_test("aSf_BFu9ll_BFu1c");
    static aSf_BFu9ll_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu1c");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aSf_BFu9ll_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu1c(Test_aSf_BFu9ll_BFu1c, "aSf_BFu9ll_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu1i()
{
  {
    init_simple_test("aSf_BFu9ll_BFu1i");
    static aSf_BFu9ll_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu1i");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aSf_BFu9ll_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu1i(Test_aSf_BFu9ll_BFu1i, "aSf_BFu9ll_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu1ll()
{
  {
    init_simple_test("aSf_BFu9ll_BFu1ll");
    static aSf_BFu9ll_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu1ll");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aSf_BFu9ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu1ll(Test_aSf_BFu9ll_BFu1ll, "aSf_BFu9ll_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu1s()
{
  {
    init_simple_test("aSf_BFu9ll_BFu1s");
    static aSf_BFu9ll_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu1s");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aSf_BFu9ll_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu1s(Test_aSf_BFu9ll_BFu1s, "aSf_BFu9ll_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu31i()
{
  {
    init_simple_test("aSf_BFu9ll_BFu31i");
    static aSf_BFu9ll_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu9ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aSf_BFu9ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aSf_BFu9ll_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu31i(Test_aSf_BFu9ll_BFu31i, "aSf_BFu9ll_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu31ll()
{
  {
    init_simple_test("aSf_BFu9ll_BFu31ll");
    static aSf_BFu9ll_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu9ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aSf_BFu9ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aSf_BFu9ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu31ll(Test_aSf_BFu9ll_BFu31ll, "aSf_BFu9ll_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu32i()
{
  {
    init_simple_test("aSf_BFu9ll_BFu32i");
    static aSf_BFu9ll_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aSf_BFu9ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aSf_BFu9ll_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu32i(Test_aSf_BFu9ll_BFu32i, "aSf_BFu9ll_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu32ll()
{
  {
    init_simple_test("aSf_BFu9ll_BFu32ll");
    static aSf_BFu9ll_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aSf_BFu9ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aSf_BFu9ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu32ll(Test_aSf_BFu9ll_BFu32ll, "aSf_BFu9ll_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu33()
{
  {
    init_simple_test("aSf_BFu9ll_BFu33");
    static aSf_BFu9ll_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, 1, "aSf_BFu9ll_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, hide_ull(1LL<<32), "aSf_BFu9ll_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu33(Test_aSf_BFu9ll_BFu33, "aSf_BFu9ll_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu7c()
{
  {
    init_simple_test("aSf_BFu9ll_BFu7c");
    static aSf_BFu9ll_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aSf_BFu9ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aSf_BFu9ll_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu7c(Test_aSf_BFu9ll_BFu7c, "aSf_BFu9ll_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu7i()
{
  {
    init_simple_test("aSf_BFu9ll_BFu7i");
    static aSf_BFu9ll_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aSf_BFu9ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aSf_BFu9ll_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu7i(Test_aSf_BFu9ll_BFu7i, "aSf_BFu9ll_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu7ll()
{
  {
    init_simple_test("aSf_BFu9ll_BFu7ll");
    static aSf_BFu9ll_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aSf_BFu9ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aSf_BFu9ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu7ll(Test_aSf_BFu9ll_BFu7ll, "aSf_BFu9ll_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu7s()
{
  {
    init_simple_test("aSf_BFu9ll_BFu7s");
    static aSf_BFu9ll_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aSf_BFu9ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aSf_BFu9ll_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu7s(Test_aSf_BFu9ll_BFu7s, "aSf_BFu9ll_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu8c()
{
  {
    init_simple_test("aSf_BFu9ll_BFu8c");
    static aSf_BFu9ll_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aSf_BFu9ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aSf_BFu9ll_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu8c(Test_aSf_BFu9ll_BFu8c, "aSf_BFu9ll_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu8i()
{
  {
    init_simple_test("aSf_BFu9ll_BFu8i");
    static aSf_BFu9ll_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aSf_BFu9ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aSf_BFu9ll_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu8i(Test_aSf_BFu9ll_BFu8i, "aSf_BFu9ll_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu8ll()
{
  {
    init_simple_test("aSf_BFu9ll_BFu8ll");
    static aSf_BFu9ll_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aSf_BFu9ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aSf_BFu9ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu8ll(Test_aSf_BFu9ll_BFu8ll, "aSf_BFu9ll_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu8s()
{
  {
    init_simple_test("aSf_BFu9ll_BFu8s");
    static aSf_BFu9ll_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aSf_BFu9ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aSf_BFu9ll_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu8s(Test_aSf_BFu9ll_BFu8s, "aSf_BFu9ll_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu9i()
{
  {
    init_simple_test("aSf_BFu9ll_BFu9i");
    static aSf_BFu9ll_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aSf_BFu9ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu9i(Test_aSf_BFu9ll_BFu9i, "aSf_BFu9ll_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu9ll()
{
  {
    init_simple_test("aSf_BFu9ll_BFu9ll");
    static aSf_BFu9ll_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aSf_BFu9ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu9ll(Test_aSf_BFu9ll_BFu9ll, "aSf_BFu9ll_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_BFu9s()
{
  {
    init_simple_test("aSf_BFu9ll_BFu9s");
    static aSf_BFu9ll_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aSf_BFu9ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aSf_BFu9ll_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_BFu9s(Test_aSf_BFu9ll_BFu9s, "aSf_BFu9ll_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_C()
{
  {
    init_simple_test("aSf_BFu9ll_C");
    static aSf_BFu9ll_C lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_C");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_C");
    check_field_offset(lv, v3, 3, "aSf_BFu9ll_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_C(Test_aSf_BFu9ll_C, "aSf_BFu9ll_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_D()
{
  {
    init_simple_test("aSf_BFu9ll_D");
    static aSf_BFu9ll_D lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu9ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_D");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_D");
    check_field_offset(lv, v3, 3, "aSf_BFu9ll_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_D(Test_aSf_BFu9ll_D, "aSf_BFu9ll_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_F()
{
  {
    init_simple_test("aSf_BFu9ll_F");
    static aSf_BFu9ll_F lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_F");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_F");
    check_field_offset(lv, v3, 3, "aSf_BFu9ll_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_F(Test_aSf_BFu9ll_F, "aSf_BFu9ll_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_I()
{
  {
    init_simple_test("aSf_BFu9ll_I");
    static aSf_BFu9ll_I lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_I");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_I");
    check_field_offset(lv, v3, 3, "aSf_BFu9ll_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_I(Test_aSf_BFu9ll_I, "aSf_BFu9ll_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_Ip()
{
  {
    init_simple_test("aSf_BFu9ll_Ip");
    static aSf_BFu9ll_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_BFu9ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_Ip");
    check_field_offset(lv, v3, 3, "aSf_BFu9ll_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_Ip(Test_aSf_BFu9ll_Ip, "aSf_BFu9ll_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_L()
{
  {
    init_simple_test("aSf_BFu9ll_L");
    static aSf_BFu9ll_L lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu9ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_L");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_L");
    check_field_offset(lv, v3, 3, "aSf_BFu9ll_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_L(Test_aSf_BFu9ll_L, "aSf_BFu9ll_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_S()
{
  {
    init_simple_test("aSf_BFu9ll_S");
    static aSf_BFu9ll_S lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_S");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_S");
    check_field_offset(lv, v3, 3, "aSf_BFu9ll_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_S(Test_aSf_BFu9ll_S, "aSf_BFu9ll_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_Sf()
{
  {
    init_simple_test("aSf_BFu9ll_Sf");
    static aSf_BFu9ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_Sf");
    check_field_offset(lv, v3, 3, "aSf_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_Sf(Test_aSf_BFu9ll_Sf, "aSf_BFu9ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_Uc()
{
  {
    init_simple_test("aSf_BFu9ll_Uc");
    static aSf_BFu9ll_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_Uc");
    check_field_offset(lv, v3, 3, "aSf_BFu9ll_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_Uc(Test_aSf_BFu9ll_Uc, "aSf_BFu9ll_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_Ui()
{
  {
    init_simple_test("aSf_BFu9ll_Ui");
    static aSf_BFu9ll_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_Ui");
    check_field_offset(lv, v3, 3, "aSf_BFu9ll_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_Ui(Test_aSf_BFu9ll_Ui, "aSf_BFu9ll_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_Ul()
{
  {
    init_simple_test("aSf_BFu9ll_Ul");
    static aSf_BFu9ll_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu9ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_Ul");
    check_field_offset(lv, v3, 3, "aSf_BFu9ll_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_Ul(Test_aSf_BFu9ll_Ul, "aSf_BFu9ll_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_Us()
{
  {
    init_simple_test("aSf_BFu9ll_Us");
    static aSf_BFu9ll_Us lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_Us");
    check_field_offset(lv, v3, 3, "aSf_BFu9ll_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_Us(Test_aSf_BFu9ll_Us, "aSf_BFu9ll_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9ll_Vp()
{
  {
    init_simple_test("aSf_BFu9ll_Vp");
    static aSf_BFu9ll_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_BFu9ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9ll_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu9ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9ll_Vp");
    check_field_offset(lv, v3, 3, "aSf_BFu9ll_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9ll_Vp(Test_aSf_BFu9ll_Vp, "aSf_BFu9ll_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s()
{
  {
    init_simple_test("aSf_BFu9s");
    static aSf_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s(Test_aSf_BFu9s, "aSf_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu15i()
{
  {
    init_simple_test("aSf_BFu9s_BFu15i");
    static aSf_BFu9s_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aSf_BFu9s_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aSf_BFu9s_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu15i(Test_aSf_BFu9s_BFu15i, "aSf_BFu9s_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu15ll()
{
  {
    init_simple_test("aSf_BFu9s_BFu15ll");
    static aSf_BFu9s_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aSf_BFu9s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aSf_BFu9s_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu15ll(Test_aSf_BFu9s_BFu15ll, "aSf_BFu9s_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu15s()
{
  {
    init_simple_test("aSf_BFu9s_BFu15s");
    static aSf_BFu9s_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aSf_BFu9s_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aSf_BFu9s_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu15s(Test_aSf_BFu9s_BFu15s, "aSf_BFu9s_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu16i()
{
  {
    init_simple_test("aSf_BFu9s_BFu16i");
    static aSf_BFu9s_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aSf_BFu9s_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aSf_BFu9s_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu16i(Test_aSf_BFu9s_BFu16i, "aSf_BFu9s_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu16ll()
{
  {
    init_simple_test("aSf_BFu9s_BFu16ll");
    static aSf_BFu9s_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aSf_BFu9s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aSf_BFu9s_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu16ll(Test_aSf_BFu9s_BFu16ll, "aSf_BFu9s_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu16s()
{
  {
    init_simple_test("aSf_BFu9s_BFu16s");
    static aSf_BFu9s_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aSf_BFu9s_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aSf_BFu9s_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu16s(Test_aSf_BFu9s_BFu16s, "aSf_BFu9s_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu17i()
{
  {
    init_simple_test("aSf_BFu9s_BFu17i");
    static aSf_BFu9s_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aSf_BFu9s_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aSf_BFu9s_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu17i(Test_aSf_BFu9s_BFu17i, "aSf_BFu9s_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu17ll()
{
  {
    init_simple_test("aSf_BFu9s_BFu17ll");
    static aSf_BFu9s_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aSf_BFu9s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aSf_BFu9s_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu17ll(Test_aSf_BFu9s_BFu17ll, "aSf_BFu9s_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu1c()
{
  {
    init_simple_test("aSf_BFu9s_BFu1c");
    static aSf_BFu9s_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu1c");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aSf_BFu9s_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu1c(Test_aSf_BFu9s_BFu1c, "aSf_BFu9s_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu1i()
{
  {
    init_simple_test("aSf_BFu9s_BFu1i");
    static aSf_BFu9s_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu1i");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aSf_BFu9s_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu1i(Test_aSf_BFu9s_BFu1i, "aSf_BFu9s_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu1ll()
{
  {
    init_simple_test("aSf_BFu9s_BFu1ll");
    static aSf_BFu9s_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu1ll");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aSf_BFu9s_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu1ll(Test_aSf_BFu9s_BFu1ll, "aSf_BFu9s_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu1s()
{
  {
    init_simple_test("aSf_BFu9s_BFu1s");
    static aSf_BFu9s_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu1s");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aSf_BFu9s_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu1s(Test_aSf_BFu9s_BFu1s, "aSf_BFu9s_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu31i()
{
  {
    init_simple_test("aSf_BFu9s_BFu31i");
    static aSf_BFu9s_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu9s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aSf_BFu9s_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aSf_BFu9s_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu31i(Test_aSf_BFu9s_BFu31i, "aSf_BFu9s_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu31ll()
{
  {
    init_simple_test("aSf_BFu9s_BFu31ll");
    static aSf_BFu9s_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_BFu9s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aSf_BFu9s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aSf_BFu9s_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu31ll(Test_aSf_BFu9s_BFu31ll, "aSf_BFu9s_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu32i()
{
  {
    init_simple_test("aSf_BFu9s_BFu32i");
    static aSf_BFu9s_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aSf_BFu9s_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aSf_BFu9s_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu32i(Test_aSf_BFu9s_BFu32i, "aSf_BFu9s_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu32ll()
{
  {
    init_simple_test("aSf_BFu9s_BFu32ll");
    static aSf_BFu9s_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aSf_BFu9s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aSf_BFu9s_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu32ll(Test_aSf_BFu9s_BFu32ll, "aSf_BFu9s_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu33()
{
  {
    init_simple_test("aSf_BFu9s_BFu33");
    static aSf_BFu9s_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, 1, "aSf_BFu9s_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, hide_ull(1LL<<32), "aSf_BFu9s_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu33(Test_aSf_BFu9s_BFu33, "aSf_BFu9s_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu7c()
{
  {
    init_simple_test("aSf_BFu9s_BFu7c");
    static aSf_BFu9s_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aSf_BFu9s_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aSf_BFu9s_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu7c(Test_aSf_BFu9s_BFu7c, "aSf_BFu9s_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu7i()
{
  {
    init_simple_test("aSf_BFu9s_BFu7i");
    static aSf_BFu9s_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aSf_BFu9s_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aSf_BFu9s_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu7i(Test_aSf_BFu9s_BFu7i, "aSf_BFu9s_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu7ll()
{
  {
    init_simple_test("aSf_BFu9s_BFu7ll");
    static aSf_BFu9s_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aSf_BFu9s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aSf_BFu9s_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu7ll(Test_aSf_BFu9s_BFu7ll, "aSf_BFu9s_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu7s()
{
  {
    init_simple_test("aSf_BFu9s_BFu7s");
    static aSf_BFu9s_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_BFu9s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aSf_BFu9s_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aSf_BFu9s_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu7s(Test_aSf_BFu9s_BFu7s, "aSf_BFu9s_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu8c()
{
  {
    init_simple_test("aSf_BFu9s_BFu8c");
    static aSf_BFu9s_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aSf_BFu9s_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aSf_BFu9s_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu8c(Test_aSf_BFu9s_BFu8c, "aSf_BFu9s_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu8i()
{
  {
    init_simple_test("aSf_BFu9s_BFu8i");
    static aSf_BFu9s_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aSf_BFu9s_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aSf_BFu9s_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu8i(Test_aSf_BFu9s_BFu8i, "aSf_BFu9s_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu8ll()
{
  {
    init_simple_test("aSf_BFu9s_BFu8ll");
    static aSf_BFu9s_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aSf_BFu9s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aSf_BFu9s_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu8ll(Test_aSf_BFu9s_BFu8ll, "aSf_BFu9s_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu8s()
{
  {
    init_simple_test("aSf_BFu9s_BFu8s");
    static aSf_BFu9s_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aSf_BFu9s_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aSf_BFu9s_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu8s(Test_aSf_BFu9s_BFu8s, "aSf_BFu9s_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu9i()
{
  {
    init_simple_test("aSf_BFu9s_BFu9i");
    static aSf_BFu9s_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aSf_BFu9s_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu9i(Test_aSf_BFu9s_BFu9i, "aSf_BFu9s_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu9ll()
{
  {
    init_simple_test("aSf_BFu9s_BFu9ll");
    static aSf_BFu9s_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aSf_BFu9s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu9ll(Test_aSf_BFu9s_BFu9ll, "aSf_BFu9s_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_BFu9s()
{
  {
    init_simple_test("aSf_BFu9s_BFu9s");
    static aSf_BFu9s_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aSf_BFu9s_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aSf_BFu9s_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_BFu9s(Test_aSf_BFu9s_BFu9s, "aSf_BFu9s_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_C()
{
  {
    init_simple_test("aSf_BFu9s_C");
    static aSf_BFu9s_C lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_C)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_C");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_C");
    check_field_offset(lv, v3, 3, "aSf_BFu9s_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_C(Test_aSf_BFu9s_C, "aSf_BFu9s_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_D()
{
  {
    init_simple_test("aSf_BFu9s_D");
    static aSf_BFu9s_D lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu9s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_D)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_D");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_D");
    check_field_offset(lv, v3, 3, "aSf_BFu9s_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_D(Test_aSf_BFu9s_D, "aSf_BFu9s_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_F()
{
  {
    init_simple_test("aSf_BFu9s_F");
    static aSf_BFu9s_F lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_F)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_F");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_F");
    check_field_offset(lv, v3, 3, "aSf_BFu9s_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_F(Test_aSf_BFu9s_F, "aSf_BFu9s_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_I()
{
  {
    init_simple_test("aSf_BFu9s_I");
    static aSf_BFu9s_I lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_I)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_I");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_I");
    check_field_offset(lv, v3, 3, "aSf_BFu9s_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_I(Test_aSf_BFu9s_I, "aSf_BFu9s_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_Ip()
{
  {
    init_simple_test("aSf_BFu9s_Ip");
    static aSf_BFu9s_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_BFu9s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_Ip)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_Ip");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_Ip");
    check_field_offset(lv, v3, 3, "aSf_BFu9s_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_Ip(Test_aSf_BFu9s_Ip, "aSf_BFu9s_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_L()
{
  {
    init_simple_test("aSf_BFu9s_L");
    static aSf_BFu9s_L lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu9s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_L)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_L");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_L");
    check_field_offset(lv, v3, 3, "aSf_BFu9s_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_L(Test_aSf_BFu9s_L, "aSf_BFu9s_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_S()
{
  {
    init_simple_test("aSf_BFu9s_S");
    static aSf_BFu9s_S lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_S)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_S");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_S");
    check_field_offset(lv, v3, 3, "aSf_BFu9s_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_S(Test_aSf_BFu9s_S, "aSf_BFu9s_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_Sf()
{
  {
    init_simple_test("aSf_BFu9s_Sf");
    static aSf_BFu9s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_Sf)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_Sf");
    check_field_offset(lv, v3, 3, "aSf_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_Sf(Test_aSf_BFu9s_Sf, "aSf_BFu9s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_Uc()
{
  {
    init_simple_test("aSf_BFu9s_Uc");
    static aSf_BFu9s_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aSf_BFu9s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_Uc)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_Uc");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_Uc");
    check_field_offset(lv, v3, 3, "aSf_BFu9s_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_Uc(Test_aSf_BFu9s_Uc, "aSf_BFu9s_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_Ui()
{
  {
    init_simple_test("aSf_BFu9s_Ui");
    static aSf_BFu9s_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aSf_BFu9s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_Ui)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_Ui");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_Ui");
    check_field_offset(lv, v3, 3, "aSf_BFu9s_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_Ui(Test_aSf_BFu9s_Ui, "aSf_BFu9s_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_Ul()
{
  {
    init_simple_test("aSf_BFu9s_Ul");
    static aSf_BFu9s_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aSf_BFu9s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_Ul)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_Ul");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_Ul");
    check_field_offset(lv, v3, 3, "aSf_BFu9s_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_Ul(Test_aSf_BFu9s_Ul, "aSf_BFu9s_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_Us()
{
  {
    init_simple_test("aSf_BFu9s_Us");
    static aSf_BFu9s_Us lv;
    check2(sizeof(lv), 5, "sizeof(aSf_BFu9s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_Us)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_Us");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_Us");
    check_field_offset(lv, v3, 3, "aSf_BFu9s_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_Us(Test_aSf_BFu9s_Us, "aSf_BFu9s_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_BFu9s_Vp()
{
  {
    init_simple_test("aSf_BFu9s_Vp");
    static aSf_BFu9s_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_BFu9s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_BFu9s_Vp)");
    check_field_offset(lv, v1, 0, "aSf_BFu9s_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aSf_BFu9s_Vp");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aSf_BFu9s_Vp");
    check_field_offset(lv, v3, 3, "aSf_BFu9s_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_BFu9s_Vp(Test_aSf_BFu9s_Vp, "aSf_BFu9s_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C()
{
  {
    init_simple_test("aSf_C");
    aSf_C lv;
    check2(sizeof(lv), 2, "sizeof(aSf_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C)");
    check_field_offset(lv, v1, 0, "aSf_C.v1");
    check_field_offset(lv, v2, 1, "aSf_C.v2");
  }
}
static Arrange_To_Call_Me vaSf_C(Test_aSf_C, "aSf_C", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu15i()
{
  {
    init_simple_test("aSf_C_BFu15i");
    static aSf_C_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_C_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_C_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_C_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu15i(Test_aSf_C_BFu15i, "aSf_C_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu15ll()
{
  {
    init_simple_test("aSf_C_BFu15ll");
    static aSf_C_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_C_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_C_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_C_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu15ll(Test_aSf_C_BFu15ll, "aSf_C_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu15s()
{
  {
    init_simple_test("aSf_C_BFu15s");
    static aSf_C_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_C_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_C_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_C_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu15s(Test_aSf_C_BFu15s, "aSf_C_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu16i()
{
  {
    init_simple_test("aSf_C_BFu16i");
    static aSf_C_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_C_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_C_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_C_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu16i(Test_aSf_C_BFu16i, "aSf_C_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu16ll()
{
  {
    init_simple_test("aSf_C_BFu16ll");
    static aSf_C_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_C_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_C_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_C_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu16ll(Test_aSf_C_BFu16ll, "aSf_C_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu16s()
{
  {
    init_simple_test("aSf_C_BFu16s");
    static aSf_C_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_C_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_C_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_C_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu16s(Test_aSf_C_BFu16s, "aSf_C_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu17i()
{
  {
    init_simple_test("aSf_C_BFu17i");
    static aSf_C_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_C_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aSf_C_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aSf_C_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu17i(Test_aSf_C_BFu17i, "aSf_C_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu17ll()
{
  {
    init_simple_test("aSf_C_BFu17ll");
    static aSf_C_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_C_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aSf_C_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aSf_C_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu17ll(Test_aSf_C_BFu17ll, "aSf_C_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu1c()
{
  {
    init_simple_test("aSf_C_BFu1c");
    static aSf_C_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_C_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_C_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu1c(Test_aSf_C_BFu1c, "aSf_C_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu1i()
{
  {
    init_simple_test("aSf_C_BFu1i");
    static aSf_C_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_C_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_C_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu1i(Test_aSf_C_BFu1i, "aSf_C_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu1ll()
{
  {
    init_simple_test("aSf_C_BFu1ll");
    static aSf_C_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_C_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_C_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu1ll(Test_aSf_C_BFu1ll, "aSf_C_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu1s()
{
  {
    init_simple_test("aSf_C_BFu1s");
    static aSf_C_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_C_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_C_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu1s(Test_aSf_C_BFu1s, "aSf_C_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu31i()
{
  {
    init_simple_test("aSf_C_BFu31i");
    static aSf_C_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_C_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aSf_C_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aSf_C_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu31i(Test_aSf_C_BFu31i, "aSf_C_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu31ll()
{
  {
    init_simple_test("aSf_C_BFu31ll");
    static aSf_C_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_C_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aSf_C_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aSf_C_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu31ll(Test_aSf_C_BFu31ll, "aSf_C_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu32i()
{
  {
    init_simple_test("aSf_C_BFu32i");
    static aSf_C_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_C_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aSf_C_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aSf_C_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu32i(Test_aSf_C_BFu32i, "aSf_C_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu32ll()
{
  {
    init_simple_test("aSf_C_BFu32ll");
    static aSf_C_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_C_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aSf_C_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aSf_C_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu32ll(Test_aSf_C_BFu32ll, "aSf_C_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu33()
{
  {
    init_simple_test("aSf_C_BFu33");
    static aSf_C_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aSf_C_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu33.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aSf_C_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aSf_C_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu33(Test_aSf_C_BFu33, "aSf_C_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu7c()
{
  {
    init_simple_test("aSf_C_BFu7c");
    static aSf_C_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_C_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_C_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_C_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu7c(Test_aSf_C_BFu7c, "aSf_C_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu7i()
{
  {
    init_simple_test("aSf_C_BFu7i");
    static aSf_C_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_C_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_C_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_C_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu7i(Test_aSf_C_BFu7i, "aSf_C_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu7ll()
{
  {
    init_simple_test("aSf_C_BFu7ll");
    static aSf_C_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_C_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_C_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_C_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu7ll(Test_aSf_C_BFu7ll, "aSf_C_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu7s()
{
  {
    init_simple_test("aSf_C_BFu7s");
    static aSf_C_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_C_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_C_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_C_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu7s(Test_aSf_C_BFu7s, "aSf_C_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu8c()
{
  {
    init_simple_test("aSf_C_BFu8c");
    static aSf_C_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_C_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_C_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_C_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu8c(Test_aSf_C_BFu8c, "aSf_C_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu8i()
{
  {
    init_simple_test("aSf_C_BFu8i");
    static aSf_C_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_C_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_C_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_C_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu8i(Test_aSf_C_BFu8i, "aSf_C_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu8ll()
{
  {
    init_simple_test("aSf_C_BFu8ll");
    static aSf_C_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_C_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_C_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_C_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu8ll(Test_aSf_C_BFu8ll, "aSf_C_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu8s()
{
  {
    init_simple_test("aSf_C_BFu8s");
    static aSf_C_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_C_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_C_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_C_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu8s(Test_aSf_C_BFu8s, "aSf_C_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu9i()
{
  {
    init_simple_test("aSf_C_BFu9i");
    static aSf_C_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_C_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_C_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_C_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu9i(Test_aSf_C_BFu9i, "aSf_C_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu9ll()
{
  {
    init_simple_test("aSf_C_BFu9ll");
    static aSf_C_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_C_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_C_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_C_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu9ll(Test_aSf_C_BFu9ll, "aSf_C_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_BFu9s()
{
  {
    init_simple_test("aSf_C_BFu9s");
    static aSf_C_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_C_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_C_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aSf_C_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_C_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_C_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_C_BFu9s(Test_aSf_C_BFu9s, "aSf_C_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_C()
{
  {
    init_simple_test("aSf_C_C");
    aSf_C_C lv;
    check2(sizeof(lv), 3, "sizeof(aSf_C_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_C)");
    check_field_offset(lv, v1, 0, "aSf_C_C.v1");
    check_field_offset(lv, v2, 1, "aSf_C_C.v2");
    check_field_offset(lv, v3, 2, "aSf_C_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_C_C(Test_aSf_C_C, "aSf_C_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_D()
{
  {
    init_simple_test("aSf_C_D");
    aSf_C_D lv;
    check2(sizeof(lv), 10, "sizeof(aSf_C_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_D)");
    check_field_offset(lv, v1, 0, "aSf_C_D.v1");
    check_field_offset(lv, v2, 1, "aSf_C_D.v2");
    check_field_offset(lv, v3, 2, "aSf_C_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_C_D(Test_aSf_C_D, "aSf_C_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_F()
{
  {
    init_simple_test("aSf_C_F");
    aSf_C_F lv;
    check2(sizeof(lv), 6, "sizeof(aSf_C_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_F)");
    check_field_offset(lv, v1, 0, "aSf_C_F.v1");
    check_field_offset(lv, v2, 1, "aSf_C_F.v2");
    check_field_offset(lv, v3, 2, "aSf_C_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_C_F(Test_aSf_C_F, "aSf_C_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_I()
{
  {
    init_simple_test("aSf_C_I");
    aSf_C_I lv;
    check2(sizeof(lv), 6, "sizeof(aSf_C_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_I)");
    check_field_offset(lv, v1, 0, "aSf_C_I.v1");
    check_field_offset(lv, v2, 1, "aSf_C_I.v2");
    check_field_offset(lv, v3, 2, "aSf_C_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_C_I(Test_aSf_C_I, "aSf_C_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_Ip()
{
  {
    init_simple_test("aSf_C_Ip");
    aSf_C_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_C_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_Ip)");
    check_field_offset(lv, v1, 0, "aSf_C_Ip.v1");
    check_field_offset(lv, v2, 1, "aSf_C_Ip.v2");
    check_field_offset(lv, v3, 2, "aSf_C_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_C_Ip(Test_aSf_C_Ip, "aSf_C_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_L()
{
  {
    init_simple_test("aSf_C_L");
    aSf_C_L lv;
    check2(sizeof(lv), 10, "sizeof(aSf_C_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_L)");
    check_field_offset(lv, v1, 0, "aSf_C_L.v1");
    check_field_offset(lv, v2, 1, "aSf_C_L.v2");
    check_field_offset(lv, v3, 2, "aSf_C_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_C_L(Test_aSf_C_L, "aSf_C_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_S()
{
  {
    init_simple_test("aSf_C_S");
    aSf_C_S lv;
    check2(sizeof(lv), 4, "sizeof(aSf_C_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_S)");
    check_field_offset(lv, v1, 0, "aSf_C_S.v1");
    check_field_offset(lv, v2, 1, "aSf_C_S.v2");
    check_field_offset(lv, v3, 2, "aSf_C_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_C_S(Test_aSf_C_S, "aSf_C_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_Sf()
{
  {
    init_simple_test("aSf_C_Sf");
    aSf_C_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aSf_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_Sf)");
    check_field_offset(lv, v1, 0, "aSf_C_Sf.v1");
    check_field_offset(lv, v2, 1, "aSf_C_Sf.v2");
    check_field_offset(lv, v3, 2, "aSf_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_C_Sf(Test_aSf_C_Sf, "aSf_C_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_Uc()
{
  {
    init_simple_test("aSf_C_Uc");
    aSf_C_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aSf_C_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_Uc)");
    check_field_offset(lv, v1, 0, "aSf_C_Uc.v1");
    check_field_offset(lv, v2, 1, "aSf_C_Uc.v2");
    check_field_offset(lv, v3, 2, "aSf_C_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_C_Uc(Test_aSf_C_Uc, "aSf_C_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_Ui()
{
  {
    init_simple_test("aSf_C_Ui");
    aSf_C_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aSf_C_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_Ui)");
    check_field_offset(lv, v1, 0, "aSf_C_Ui.v1");
    check_field_offset(lv, v2, 1, "aSf_C_Ui.v2");
    check_field_offset(lv, v3, 2, "aSf_C_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_C_Ui(Test_aSf_C_Ui, "aSf_C_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_Ul()
{
  {
    init_simple_test("aSf_C_Ul");
    aSf_C_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aSf_C_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_Ul)");
    check_field_offset(lv, v1, 0, "aSf_C_Ul.v1");
    check_field_offset(lv, v2, 1, "aSf_C_Ul.v2");
    check_field_offset(lv, v3, 2, "aSf_C_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_C_Ul(Test_aSf_C_Ul, "aSf_C_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_Us()
{
  {
    init_simple_test("aSf_C_Us");
    aSf_C_Us lv;
    check2(sizeof(lv), 4, "sizeof(aSf_C_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_Us)");
    check_field_offset(lv, v1, 0, "aSf_C_Us.v1");
    check_field_offset(lv, v2, 1, "aSf_C_Us.v2");
    check_field_offset(lv, v3, 2, "aSf_C_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_C_Us(Test_aSf_C_Us, "aSf_C_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_C_Vp()
{
  {
    init_simple_test("aSf_C_Vp");
    aSf_C_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_C_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_C_Vp)");
    check_field_offset(lv, v1, 0, "aSf_C_Vp.v1");
    check_field_offset(lv, v2, 1, "aSf_C_Vp.v2");
    check_field_offset(lv, v3, 2, "aSf_C_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_C_Vp(Test_aSf_C_Vp, "aSf_C_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D()
{
  {
    init_simple_test("aSf_D");
    aSf_D lv;
    check2(sizeof(lv), 9, "sizeof(aSf_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D)");
    check_field_offset(lv, v1, 0, "aSf_D.v1");
    check_field_offset(lv, v2, 1, "aSf_D.v2");
  }
}
static Arrange_To_Call_Me vaSf_D(Test_aSf_D, "aSf_D", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu15i()
{
  {
    init_simple_test("aSf_D_BFu15i");
    static aSf_D_BFu15i lv;
    check2(sizeof(lv), 11, "sizeof(aSf_D_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu15i.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aSf_D_BFu15i");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aSf_D_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu15i(Test_aSf_D_BFu15i, "aSf_D_BFu15i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu15ll()
{
  {
    init_simple_test("aSf_D_BFu15ll");
    static aSf_D_BFu15ll lv;
    check2(sizeof(lv), 11, "sizeof(aSf_D_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu15ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aSf_D_BFu15ll");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aSf_D_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu15ll(Test_aSf_D_BFu15ll, "aSf_D_BFu15ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu15s()
{
  {
    init_simple_test("aSf_D_BFu15s");
    static aSf_D_BFu15s lv;
    check2(sizeof(lv), 11, "sizeof(aSf_D_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu15s.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aSf_D_BFu15s");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aSf_D_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu15s(Test_aSf_D_BFu15s, "aSf_D_BFu15s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu16i()
{
  {
    init_simple_test("aSf_D_BFu16i");
    static aSf_D_BFu16i lv;
    check2(sizeof(lv), 11, "sizeof(aSf_D_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu16i.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aSf_D_BFu16i");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aSf_D_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu16i(Test_aSf_D_BFu16i, "aSf_D_BFu16i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu16ll()
{
  {
    init_simple_test("aSf_D_BFu16ll");
    static aSf_D_BFu16ll lv;
    check2(sizeof(lv), 11, "sizeof(aSf_D_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu16ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aSf_D_BFu16ll");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aSf_D_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu16ll(Test_aSf_D_BFu16ll, "aSf_D_BFu16ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu16s()
{
  {
    init_simple_test("aSf_D_BFu16s");
    static aSf_D_BFu16s lv;
    check2(sizeof(lv), 11, "sizeof(aSf_D_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu16s.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aSf_D_BFu16s");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aSf_D_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu16s(Test_aSf_D_BFu16s, "aSf_D_BFu16s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu17i()
{
  {
    init_simple_test("aSf_D_BFu17i");
    static aSf_D_BFu17i lv;
    check2(sizeof(lv), 12, "sizeof(aSf_D_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu17i.v2");
    set_bf_and_test(lv, v3, 9, 0, 17, 1, "aSf_D_BFu17i");
    set_bf_and_test(lv, v3, 9, 0, 17, hide_ull(1LL<<16), "aSf_D_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu17i(Test_aSf_D_BFu17i, "aSf_D_BFu17i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu17ll()
{
  {
    init_simple_test("aSf_D_BFu17ll");
    static aSf_D_BFu17ll lv;
    check2(sizeof(lv), 12, "sizeof(aSf_D_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu17ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 17, 1, "aSf_D_BFu17ll");
    set_bf_and_test(lv, v3, 9, 0, 17, hide_ull(1LL<<16), "aSf_D_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu17ll(Test_aSf_D_BFu17ll, "aSf_D_BFu17ll", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu1c()
{
  {
    init_simple_test("aSf_D_BFu1c");
    static aSf_D_BFu1c lv;
    check2(sizeof(lv), 10, "sizeof(aSf_D_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu1c.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aSf_D_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu1c(Test_aSf_D_BFu1c, "aSf_D_BFu1c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu1i()
{
  {
    init_simple_test("aSf_D_BFu1i");
    static aSf_D_BFu1i lv;
    check2(sizeof(lv), 10, "sizeof(aSf_D_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu1i.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aSf_D_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu1i(Test_aSf_D_BFu1i, "aSf_D_BFu1i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu1ll()
{
  {
    init_simple_test("aSf_D_BFu1ll");
    static aSf_D_BFu1ll lv;
    check2(sizeof(lv), 10, "sizeof(aSf_D_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu1ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aSf_D_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu1ll(Test_aSf_D_BFu1ll, "aSf_D_BFu1ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu1s()
{
  {
    init_simple_test("aSf_D_BFu1s");
    static aSf_D_BFu1s lv;
    check2(sizeof(lv), 10, "sizeof(aSf_D_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu1s.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aSf_D_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu1s(Test_aSf_D_BFu1s, "aSf_D_BFu1s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu31i()
{
  {
    init_simple_test("aSf_D_BFu31i");
    static aSf_D_BFu31i lv;
    check2(sizeof(lv), 13, "sizeof(aSf_D_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu31i.v2");
    set_bf_and_test(lv, v3, 9, 0, 31, 1, "aSf_D_BFu31i");
    set_bf_and_test(lv, v3, 9, 0, 31, hide_ull(1LL<<30), "aSf_D_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu31i(Test_aSf_D_BFu31i, "aSf_D_BFu31i", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu31ll()
{
  {
    init_simple_test("aSf_D_BFu31ll");
    static aSf_D_BFu31ll lv;
    check2(sizeof(lv), 13, "sizeof(aSf_D_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu31ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 31, 1, "aSf_D_BFu31ll");
    set_bf_and_test(lv, v3, 9, 0, 31, hide_ull(1LL<<30), "aSf_D_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu31ll(Test_aSf_D_BFu31ll, "aSf_D_BFu31ll", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu32i()
{
  {
    init_simple_test("aSf_D_BFu32i");
    static aSf_D_BFu32i lv;
    check2(sizeof(lv), 13, "sizeof(aSf_D_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu32i.v2");
    set_bf_and_test(lv, v3, 9, 0, 32, 1, "aSf_D_BFu32i");
    set_bf_and_test(lv, v3, 9, 0, 32, hide_ull(1LL<<31), "aSf_D_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu32i(Test_aSf_D_BFu32i, "aSf_D_BFu32i", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu32ll()
{
  {
    init_simple_test("aSf_D_BFu32ll");
    static aSf_D_BFu32ll lv;
    check2(sizeof(lv), 13, "sizeof(aSf_D_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu32ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 32, 1, "aSf_D_BFu32ll");
    set_bf_and_test(lv, v3, 9, 0, 32, hide_ull(1LL<<31), "aSf_D_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu32ll(Test_aSf_D_BFu32ll, "aSf_D_BFu32ll", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu33()
{
  {
    init_simple_test("aSf_D_BFu33");
    static aSf_D_BFu33 lv;
    check2(sizeof(lv), 14, "sizeof(aSf_D_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu33.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu33.v2");
    set_bf_and_test(lv, v3, 9, 0, 33, 1, "aSf_D_BFu33");
    set_bf_and_test(lv, v3, 9, 0, 33, hide_ull(1LL<<32), "aSf_D_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu33(Test_aSf_D_BFu33, "aSf_D_BFu33", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu7c()
{
  {
    init_simple_test("aSf_D_BFu7c");
    static aSf_D_BFu7c lv;
    check2(sizeof(lv), 10, "sizeof(aSf_D_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu7c.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aSf_D_BFu7c");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aSf_D_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu7c(Test_aSf_D_BFu7c, "aSf_D_BFu7c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu7i()
{
  {
    init_simple_test("aSf_D_BFu7i");
    static aSf_D_BFu7i lv;
    check2(sizeof(lv), 10, "sizeof(aSf_D_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu7i.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aSf_D_BFu7i");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aSf_D_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu7i(Test_aSf_D_BFu7i, "aSf_D_BFu7i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu7ll()
{
  {
    init_simple_test("aSf_D_BFu7ll");
    static aSf_D_BFu7ll lv;
    check2(sizeof(lv), 10, "sizeof(aSf_D_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu7ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aSf_D_BFu7ll");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aSf_D_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu7ll(Test_aSf_D_BFu7ll, "aSf_D_BFu7ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu7s()
{
  {
    init_simple_test("aSf_D_BFu7s");
    static aSf_D_BFu7s lv;
    check2(sizeof(lv), 10, "sizeof(aSf_D_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu7s.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aSf_D_BFu7s");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aSf_D_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu7s(Test_aSf_D_BFu7s, "aSf_D_BFu7s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu8c()
{
  {
    init_simple_test("aSf_D_BFu8c");
    static aSf_D_BFu8c lv;
    check2(sizeof(lv), 10, "sizeof(aSf_D_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu8c.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aSf_D_BFu8c");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aSf_D_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu8c(Test_aSf_D_BFu8c, "aSf_D_BFu8c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu8i()
{
  {
    init_simple_test("aSf_D_BFu8i");
    static aSf_D_BFu8i lv;
    check2(sizeof(lv), 10, "sizeof(aSf_D_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu8i.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aSf_D_BFu8i");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aSf_D_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu8i(Test_aSf_D_BFu8i, "aSf_D_BFu8i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu8ll()
{
  {
    init_simple_test("aSf_D_BFu8ll");
    static aSf_D_BFu8ll lv;
    check2(sizeof(lv), 10, "sizeof(aSf_D_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu8ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aSf_D_BFu8ll");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aSf_D_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu8ll(Test_aSf_D_BFu8ll, "aSf_D_BFu8ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu8s()
{
  {
    init_simple_test("aSf_D_BFu8s");
    static aSf_D_BFu8s lv;
    check2(sizeof(lv), 10, "sizeof(aSf_D_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu8s.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aSf_D_BFu8s");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aSf_D_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu8s(Test_aSf_D_BFu8s, "aSf_D_BFu8s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu9i()
{
  {
    init_simple_test("aSf_D_BFu9i");
    static aSf_D_BFu9i lv;
    check2(sizeof(lv), 11, "sizeof(aSf_D_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu9i.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aSf_D_BFu9i");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aSf_D_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu9i(Test_aSf_D_BFu9i, "aSf_D_BFu9i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu9ll()
{
  {
    init_simple_test("aSf_D_BFu9ll");
    static aSf_D_BFu9ll lv;
    check2(sizeof(lv), 11, "sizeof(aSf_D_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu9ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aSf_D_BFu9ll");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aSf_D_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu9ll(Test_aSf_D_BFu9ll, "aSf_D_BFu9ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_BFu9s()
{
  {
    init_simple_test("aSf_D_BFu9s");
    static aSf_D_BFu9s lv;
    check2(sizeof(lv), 11, "sizeof(aSf_D_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_D_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aSf_D_BFu9s.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aSf_D_BFu9s");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aSf_D_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_D_BFu9s(Test_aSf_D_BFu9s, "aSf_D_BFu9s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_C()
{
  {
    init_simple_test("aSf_D_C");
    aSf_D_C lv;
    check2(sizeof(lv), 10, "sizeof(aSf_D_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_C)");
    check_field_offset(lv, v1, 0, "aSf_D_C.v1");
    check_field_offset(lv, v2, 1, "aSf_D_C.v2");
    check_field_offset(lv, v3, 9, "aSf_D_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_D_C(Test_aSf_D_C, "aSf_D_C", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_D()
{
  {
    init_simple_test("aSf_D_D");
    aSf_D_D lv;
    check2(sizeof(lv), 17, "sizeof(aSf_D_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_D)");
    check_field_offset(lv, v1, 0, "aSf_D_D.v1");
    check_field_offset(lv, v2, 1, "aSf_D_D.v2");
    check_field_offset(lv, v3, 9, "aSf_D_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_D_D(Test_aSf_D_D, "aSf_D_D", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_F()
{
  {
    init_simple_test("aSf_D_F");
    aSf_D_F lv;
    check2(sizeof(lv), 13, "sizeof(aSf_D_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_F)");
    check_field_offset(lv, v1, 0, "aSf_D_F.v1");
    check_field_offset(lv, v2, 1, "aSf_D_F.v2");
    check_field_offset(lv, v3, 9, "aSf_D_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_D_F(Test_aSf_D_F, "aSf_D_F", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_I()
{
  {
    init_simple_test("aSf_D_I");
    aSf_D_I lv;
    check2(sizeof(lv), 13, "sizeof(aSf_D_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_I)");
    check_field_offset(lv, v1, 0, "aSf_D_I.v1");
    check_field_offset(lv, v2, 1, "aSf_D_I.v2");
    check_field_offset(lv, v3, 9, "aSf_D_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_D_I(Test_aSf_D_I, "aSf_D_I", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_Ip()
{
  {
    init_simple_test("aSf_D_Ip");
    aSf_D_Ip lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aSf_D_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_Ip)");
    check_field_offset(lv, v1, 0, "aSf_D_Ip.v1");
    check_field_offset(lv, v2, 1, "aSf_D_Ip.v2");
    check_field_offset(lv, v3, 9, "aSf_D_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_D_Ip(Test_aSf_D_Ip, "aSf_D_Ip", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_L()
{
  {
    init_simple_test("aSf_D_L");
    aSf_D_L lv;
    check2(sizeof(lv), 17, "sizeof(aSf_D_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_L)");
    check_field_offset(lv, v1, 0, "aSf_D_L.v1");
    check_field_offset(lv, v2, 1, "aSf_D_L.v2");
    check_field_offset(lv, v3, 9, "aSf_D_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_D_L(Test_aSf_D_L, "aSf_D_L", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_S()
{
  {
    init_simple_test("aSf_D_S");
    aSf_D_S lv;
    check2(sizeof(lv), 11, "sizeof(aSf_D_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_S)");
    check_field_offset(lv, v1, 0, "aSf_D_S.v1");
    check_field_offset(lv, v2, 1, "aSf_D_S.v2");
    check_field_offset(lv, v3, 9, "aSf_D_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_D_S(Test_aSf_D_S, "aSf_D_S", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_Sf()
{
  {
    init_simple_test("aSf_D_Sf");
    aSf_D_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aSf_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_Sf)");
    check_field_offset(lv, v1, 0, "aSf_D_Sf.v1");
    check_field_offset(lv, v2, 1, "aSf_D_Sf.v2");
    check_field_offset(lv, v3, 9, "aSf_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_D_Sf(Test_aSf_D_Sf, "aSf_D_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_Uc()
{
  {
    init_simple_test("aSf_D_Uc");
    aSf_D_Uc lv;
    check2(sizeof(lv), 10, "sizeof(aSf_D_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_Uc)");
    check_field_offset(lv, v1, 0, "aSf_D_Uc.v1");
    check_field_offset(lv, v2, 1, "aSf_D_Uc.v2");
    check_field_offset(lv, v3, 9, "aSf_D_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_D_Uc(Test_aSf_D_Uc, "aSf_D_Uc", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_Ui()
{
  {
    init_simple_test("aSf_D_Ui");
    aSf_D_Ui lv;
    check2(sizeof(lv), 13, "sizeof(aSf_D_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_Ui)");
    check_field_offset(lv, v1, 0, "aSf_D_Ui.v1");
    check_field_offset(lv, v2, 1, "aSf_D_Ui.v2");
    check_field_offset(lv, v3, 9, "aSf_D_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_D_Ui(Test_aSf_D_Ui, "aSf_D_Ui", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_Ul()
{
  {
    init_simple_test("aSf_D_Ul");
    aSf_D_Ul lv;
    check2(sizeof(lv), 17, "sizeof(aSf_D_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_Ul)");
    check_field_offset(lv, v1, 0, "aSf_D_Ul.v1");
    check_field_offset(lv, v2, 1, "aSf_D_Ul.v2");
    check_field_offset(lv, v3, 9, "aSf_D_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_D_Ul(Test_aSf_D_Ul, "aSf_D_Ul", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_Us()
{
  {
    init_simple_test("aSf_D_Us");
    aSf_D_Us lv;
    check2(sizeof(lv), 11, "sizeof(aSf_D_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_Us)");
    check_field_offset(lv, v1, 0, "aSf_D_Us.v1");
    check_field_offset(lv, v2, 1, "aSf_D_Us.v2");
    check_field_offset(lv, v3, 9, "aSf_D_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_D_Us(Test_aSf_D_Us, "aSf_D_Us", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_D_Vp()
{
  {
    init_simple_test("aSf_D_Vp");
    aSf_D_Vp lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aSf_D_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_D_Vp)");
    check_field_offset(lv, v1, 0, "aSf_D_Vp.v1");
    check_field_offset(lv, v2, 1, "aSf_D_Vp.v2");
    check_field_offset(lv, v3, 9, "aSf_D_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_D_Vp(Test_aSf_D_Vp, "aSf_D_Vp", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F()
{
  {
    init_simple_test("aSf_F");
    aSf_F lv;
    check2(sizeof(lv), 5, "sizeof(aSf_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F)");
    check_field_offset(lv, v1, 0, "aSf_F.v1");
    check_field_offset(lv, v2, 1, "aSf_F.v2");
  }
}
static Arrange_To_Call_Me vaSf_F(Test_aSf_F, "aSf_F", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu15i()
{
  {
    init_simple_test("aSf_F_BFu15i");
    static aSf_F_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_F_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu15i.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aSf_F_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aSf_F_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu15i(Test_aSf_F_BFu15i, "aSf_F_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu15ll()
{
  {
    init_simple_test("aSf_F_BFu15ll");
    static aSf_F_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_F_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu15ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aSf_F_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aSf_F_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu15ll(Test_aSf_F_BFu15ll, "aSf_F_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu15s()
{
  {
    init_simple_test("aSf_F_BFu15s");
    static aSf_F_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_F_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu15s.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aSf_F_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aSf_F_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu15s(Test_aSf_F_BFu15s, "aSf_F_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu16i()
{
  {
    init_simple_test("aSf_F_BFu16i");
    static aSf_F_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_F_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu16i.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aSf_F_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aSf_F_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu16i(Test_aSf_F_BFu16i, "aSf_F_BFu16i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu16ll()
{
  {
    init_simple_test("aSf_F_BFu16ll");
    static aSf_F_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_F_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu16ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aSf_F_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aSf_F_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu16ll(Test_aSf_F_BFu16ll, "aSf_F_BFu16ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu16s()
{
  {
    init_simple_test("aSf_F_BFu16s");
    static aSf_F_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_F_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu16s.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aSf_F_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aSf_F_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu16s(Test_aSf_F_BFu16s, "aSf_F_BFu16s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu17i()
{
  {
    init_simple_test("aSf_F_BFu17i");
    static aSf_F_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(aSf_F_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu17i.v2");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aSf_F_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aSf_F_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu17i(Test_aSf_F_BFu17i, "aSf_F_BFu17i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu17ll()
{
  {
    init_simple_test("aSf_F_BFu17ll");
    static aSf_F_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(aSf_F_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu17ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aSf_F_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aSf_F_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu17ll(Test_aSf_F_BFu17ll, "aSf_F_BFu17ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu1c()
{
  {
    init_simple_test("aSf_F_BFu1c");
    static aSf_F_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_F_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu1c.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_F_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu1c(Test_aSf_F_BFu1c, "aSf_F_BFu1c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu1i()
{
  {
    init_simple_test("aSf_F_BFu1i");
    static aSf_F_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_F_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu1i.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_F_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu1i(Test_aSf_F_BFu1i, "aSf_F_BFu1i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu1ll()
{
  {
    init_simple_test("aSf_F_BFu1ll");
    static aSf_F_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_F_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu1ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_F_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu1ll(Test_aSf_F_BFu1ll, "aSf_F_BFu1ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu1s()
{
  {
    init_simple_test("aSf_F_BFu1s");
    static aSf_F_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_F_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu1s.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_F_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu1s(Test_aSf_F_BFu1s, "aSf_F_BFu1s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu31i()
{
  {
    init_simple_test("aSf_F_BFu31i");
    static aSf_F_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aSf_F_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu31i.v2");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aSf_F_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aSf_F_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu31i(Test_aSf_F_BFu31i, "aSf_F_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu31ll()
{
  {
    init_simple_test("aSf_F_BFu31ll");
    static aSf_F_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aSf_F_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu31ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aSf_F_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aSf_F_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu31ll(Test_aSf_F_BFu31ll, "aSf_F_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu32i()
{
  {
    init_simple_test("aSf_F_BFu32i");
    static aSf_F_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aSf_F_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu32i.v2");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aSf_F_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aSf_F_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu32i(Test_aSf_F_BFu32i, "aSf_F_BFu32i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu32ll()
{
  {
    init_simple_test("aSf_F_BFu32ll");
    static aSf_F_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aSf_F_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu32ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aSf_F_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aSf_F_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu32ll(Test_aSf_F_BFu32ll, "aSf_F_BFu32ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu33()
{
  {
    init_simple_test("aSf_F_BFu33");
    static aSf_F_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(aSf_F_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu33.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu33.v2");
    set_bf_and_test(lv, v3, 5, 0, 33, 1, "aSf_F_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, hide_ull(1LL<<32), "aSf_F_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu33(Test_aSf_F_BFu33, "aSf_F_BFu33", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu7c()
{
  {
    init_simple_test("aSf_F_BFu7c");
    static aSf_F_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_F_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu7c.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_F_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_F_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu7c(Test_aSf_F_BFu7c, "aSf_F_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu7i()
{
  {
    init_simple_test("aSf_F_BFu7i");
    static aSf_F_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_F_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu7i.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_F_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_F_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu7i(Test_aSf_F_BFu7i, "aSf_F_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu7ll()
{
  {
    init_simple_test("aSf_F_BFu7ll");
    static aSf_F_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_F_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu7ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_F_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_F_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu7ll(Test_aSf_F_BFu7ll, "aSf_F_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu7s()
{
  {
    init_simple_test("aSf_F_BFu7s");
    static aSf_F_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_F_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu7s.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_F_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_F_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu7s(Test_aSf_F_BFu7s, "aSf_F_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu8c()
{
  {
    init_simple_test("aSf_F_BFu8c");
    static aSf_F_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_F_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu8c.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_F_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_F_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu8c(Test_aSf_F_BFu8c, "aSf_F_BFu8c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu8i()
{
  {
    init_simple_test("aSf_F_BFu8i");
    static aSf_F_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_F_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu8i.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_F_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_F_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu8i(Test_aSf_F_BFu8i, "aSf_F_BFu8i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu8ll()
{
  {
    init_simple_test("aSf_F_BFu8ll");
    static aSf_F_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_F_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu8ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_F_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_F_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu8ll(Test_aSf_F_BFu8ll, "aSf_F_BFu8ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu8s()
{
  {
    init_simple_test("aSf_F_BFu8s");
    static aSf_F_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_F_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu8s.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_F_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_F_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu8s(Test_aSf_F_BFu8s, "aSf_F_BFu8s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu9i()
{
  {
    init_simple_test("aSf_F_BFu9i");
    static aSf_F_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_F_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu9i.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aSf_F_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aSf_F_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu9i(Test_aSf_F_BFu9i, "aSf_F_BFu9i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu9ll()
{
  {
    init_simple_test("aSf_F_BFu9ll");
    static aSf_F_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_F_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu9ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aSf_F_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aSf_F_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu9ll(Test_aSf_F_BFu9ll, "aSf_F_BFu9ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_BFu9s()
{
  {
    init_simple_test("aSf_F_BFu9s");
    static aSf_F_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_F_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_F_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aSf_F_BFu9s.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aSf_F_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aSf_F_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_F_BFu9s(Test_aSf_F_BFu9s, "aSf_F_BFu9s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_C()
{
  {
    init_simple_test("aSf_F_C");
    aSf_F_C lv;
    check2(sizeof(lv), 6, "sizeof(aSf_F_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_C)");
    check_field_offset(lv, v1, 0, "aSf_F_C.v1");
    check_field_offset(lv, v2, 1, "aSf_F_C.v2");
    check_field_offset(lv, v3, 5, "aSf_F_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_F_C(Test_aSf_F_C, "aSf_F_C", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_D()
{
  {
    init_simple_test("aSf_F_D");
    aSf_F_D lv;
    check2(sizeof(lv), 13, "sizeof(aSf_F_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_D)");
    check_field_offset(lv, v1, 0, "aSf_F_D.v1");
    check_field_offset(lv, v2, 1, "aSf_F_D.v2");
    check_field_offset(lv, v3, 5, "aSf_F_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_F_D(Test_aSf_F_D, "aSf_F_D", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_F()
{
  {
    init_simple_test("aSf_F_F");
    aSf_F_F lv;
    check2(sizeof(lv), 9, "sizeof(aSf_F_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_F)");
    check_field_offset(lv, v1, 0, "aSf_F_F.v1");
    check_field_offset(lv, v2, 1, "aSf_F_F.v2");
    check_field_offset(lv, v3, 5, "aSf_F_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_F_F(Test_aSf_F_F, "aSf_F_F", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_I()
{
  {
    init_simple_test("aSf_F_I");
    aSf_F_I lv;
    check2(sizeof(lv), 9, "sizeof(aSf_F_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_I)");
    check_field_offset(lv, v1, 0, "aSf_F_I.v1");
    check_field_offset(lv, v2, 1, "aSf_F_I.v2");
    check_field_offset(lv, v3, 5, "aSf_F_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_F_I(Test_aSf_F_I, "aSf_F_I", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_Ip()
{
  {
    init_simple_test("aSf_F_Ip");
    aSf_F_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_F_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_Ip)");
    check_field_offset(lv, v1, 0, "aSf_F_Ip.v1");
    check_field_offset(lv, v2, 1, "aSf_F_Ip.v2");
    check_field_offset(lv, v3, 5, "aSf_F_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_F_Ip(Test_aSf_F_Ip, "aSf_F_Ip", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_L()
{
  {
    init_simple_test("aSf_F_L");
    aSf_F_L lv;
    check2(sizeof(lv), 13, "sizeof(aSf_F_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_L)");
    check_field_offset(lv, v1, 0, "aSf_F_L.v1");
    check_field_offset(lv, v2, 1, "aSf_F_L.v2");
    check_field_offset(lv, v3, 5, "aSf_F_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_F_L(Test_aSf_F_L, "aSf_F_L", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_S()
{
  {
    init_simple_test("aSf_F_S");
    aSf_F_S lv;
    check2(sizeof(lv), 7, "sizeof(aSf_F_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_S)");
    check_field_offset(lv, v1, 0, "aSf_F_S.v1");
    check_field_offset(lv, v2, 1, "aSf_F_S.v2");
    check_field_offset(lv, v3, 5, "aSf_F_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_F_S(Test_aSf_F_S, "aSf_F_S", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_Sf()
{
  {
    init_simple_test("aSf_F_Sf");
    aSf_F_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aSf_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_Sf)");
    check_field_offset(lv, v1, 0, "aSf_F_Sf.v1");
    check_field_offset(lv, v2, 1, "aSf_F_Sf.v2");
    check_field_offset(lv, v3, 5, "aSf_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_F_Sf(Test_aSf_F_Sf, "aSf_F_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_Uc()
{
  {
    init_simple_test("aSf_F_Uc");
    aSf_F_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aSf_F_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_Uc)");
    check_field_offset(lv, v1, 0, "aSf_F_Uc.v1");
    check_field_offset(lv, v2, 1, "aSf_F_Uc.v2");
    check_field_offset(lv, v3, 5, "aSf_F_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_F_Uc(Test_aSf_F_Uc, "aSf_F_Uc", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_Ui()
{
  {
    init_simple_test("aSf_F_Ui");
    aSf_F_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aSf_F_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_Ui)");
    check_field_offset(lv, v1, 0, "aSf_F_Ui.v1");
    check_field_offset(lv, v2, 1, "aSf_F_Ui.v2");
    check_field_offset(lv, v3, 5, "aSf_F_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_F_Ui(Test_aSf_F_Ui, "aSf_F_Ui", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_Ul()
{
  {
    init_simple_test("aSf_F_Ul");
    aSf_F_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aSf_F_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_Ul)");
    check_field_offset(lv, v1, 0, "aSf_F_Ul.v1");
    check_field_offset(lv, v2, 1, "aSf_F_Ul.v2");
    check_field_offset(lv, v3, 5, "aSf_F_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_F_Ul(Test_aSf_F_Ul, "aSf_F_Ul", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_Us()
{
  {
    init_simple_test("aSf_F_Us");
    aSf_F_Us lv;
    check2(sizeof(lv), 7, "sizeof(aSf_F_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_Us)");
    check_field_offset(lv, v1, 0, "aSf_F_Us.v1");
    check_field_offset(lv, v2, 1, "aSf_F_Us.v2");
    check_field_offset(lv, v3, 5, "aSf_F_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_F_Us(Test_aSf_F_Us, "aSf_F_Us", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_F_Vp()
{
  {
    init_simple_test("aSf_F_Vp");
    aSf_F_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_F_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_F_Vp)");
    check_field_offset(lv, v1, 0, "aSf_F_Vp.v1");
    check_field_offset(lv, v2, 1, "aSf_F_Vp.v2");
    check_field_offset(lv, v3, 5, "aSf_F_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_F_Vp(Test_aSf_F_Vp, "aSf_F_Vp", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I()
{
  {
    init_simple_test("aSf_I");
    aSf_I lv;
    check2(sizeof(lv), 5, "sizeof(aSf_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I)");
    check_field_offset(lv, v1, 0, "aSf_I.v1");
    check_field_offset(lv, v2, 1, "aSf_I.v2");
  }
}
static Arrange_To_Call_Me vaSf_I(Test_aSf_I, "aSf_I", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu15i()
{
  {
    init_simple_test("aSf_I_BFu15i");
    static aSf_I_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_I_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu15i.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aSf_I_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aSf_I_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu15i(Test_aSf_I_BFu15i, "aSf_I_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu15ll()
{
  {
    init_simple_test("aSf_I_BFu15ll");
    static aSf_I_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_I_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu15ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aSf_I_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aSf_I_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu15ll(Test_aSf_I_BFu15ll, "aSf_I_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu15s()
{
  {
    init_simple_test("aSf_I_BFu15s");
    static aSf_I_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_I_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu15s.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aSf_I_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aSf_I_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu15s(Test_aSf_I_BFu15s, "aSf_I_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu16i()
{
  {
    init_simple_test("aSf_I_BFu16i");
    static aSf_I_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_I_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu16i.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aSf_I_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aSf_I_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu16i(Test_aSf_I_BFu16i, "aSf_I_BFu16i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu16ll()
{
  {
    init_simple_test("aSf_I_BFu16ll");
    static aSf_I_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_I_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu16ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aSf_I_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aSf_I_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu16ll(Test_aSf_I_BFu16ll, "aSf_I_BFu16ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu16s()
{
  {
    init_simple_test("aSf_I_BFu16s");
    static aSf_I_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_I_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu16s.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aSf_I_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aSf_I_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu16s(Test_aSf_I_BFu16s, "aSf_I_BFu16s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu17i()
{
  {
    init_simple_test("aSf_I_BFu17i");
    static aSf_I_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(aSf_I_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu17i.v2");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aSf_I_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aSf_I_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu17i(Test_aSf_I_BFu17i, "aSf_I_BFu17i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu17ll()
{
  {
    init_simple_test("aSf_I_BFu17ll");
    static aSf_I_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(aSf_I_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu17ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aSf_I_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aSf_I_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu17ll(Test_aSf_I_BFu17ll, "aSf_I_BFu17ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu1c()
{
  {
    init_simple_test("aSf_I_BFu1c");
    static aSf_I_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_I_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu1c.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_I_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu1c(Test_aSf_I_BFu1c, "aSf_I_BFu1c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu1i()
{
  {
    init_simple_test("aSf_I_BFu1i");
    static aSf_I_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_I_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu1i.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_I_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu1i(Test_aSf_I_BFu1i, "aSf_I_BFu1i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu1ll()
{
  {
    init_simple_test("aSf_I_BFu1ll");
    static aSf_I_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_I_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu1ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_I_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu1ll(Test_aSf_I_BFu1ll, "aSf_I_BFu1ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu1s()
{
  {
    init_simple_test("aSf_I_BFu1s");
    static aSf_I_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_I_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu1s.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_I_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu1s(Test_aSf_I_BFu1s, "aSf_I_BFu1s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu31i()
{
  {
    init_simple_test("aSf_I_BFu31i");
    static aSf_I_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aSf_I_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu31i.v2");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aSf_I_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aSf_I_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu31i(Test_aSf_I_BFu31i, "aSf_I_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu31ll()
{
  {
    init_simple_test("aSf_I_BFu31ll");
    static aSf_I_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aSf_I_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu31ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aSf_I_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aSf_I_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu31ll(Test_aSf_I_BFu31ll, "aSf_I_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu32i()
{
  {
    init_simple_test("aSf_I_BFu32i");
    static aSf_I_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aSf_I_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu32i.v2");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aSf_I_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aSf_I_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu32i(Test_aSf_I_BFu32i, "aSf_I_BFu32i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu32ll()
{
  {
    init_simple_test("aSf_I_BFu32ll");
    static aSf_I_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aSf_I_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu32ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aSf_I_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aSf_I_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu32ll(Test_aSf_I_BFu32ll, "aSf_I_BFu32ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu33()
{
  {
    init_simple_test("aSf_I_BFu33");
    static aSf_I_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(aSf_I_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu33.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu33.v2");
    set_bf_and_test(lv, v3, 5, 0, 33, 1, "aSf_I_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, hide_ull(1LL<<32), "aSf_I_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu33(Test_aSf_I_BFu33, "aSf_I_BFu33", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu7c()
{
  {
    init_simple_test("aSf_I_BFu7c");
    static aSf_I_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_I_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu7c.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_I_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_I_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu7c(Test_aSf_I_BFu7c, "aSf_I_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu7i()
{
  {
    init_simple_test("aSf_I_BFu7i");
    static aSf_I_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_I_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu7i.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_I_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_I_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu7i(Test_aSf_I_BFu7i, "aSf_I_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu7ll()
{
  {
    init_simple_test("aSf_I_BFu7ll");
    static aSf_I_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_I_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu7ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_I_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_I_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu7ll(Test_aSf_I_BFu7ll, "aSf_I_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu7s()
{
  {
    init_simple_test("aSf_I_BFu7s");
    static aSf_I_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_I_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu7s.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_I_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_I_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu7s(Test_aSf_I_BFu7s, "aSf_I_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu8c()
{
  {
    init_simple_test("aSf_I_BFu8c");
    static aSf_I_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_I_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu8c.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_I_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_I_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu8c(Test_aSf_I_BFu8c, "aSf_I_BFu8c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu8i()
{
  {
    init_simple_test("aSf_I_BFu8i");
    static aSf_I_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_I_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu8i.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_I_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_I_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu8i(Test_aSf_I_BFu8i, "aSf_I_BFu8i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu8ll()
{
  {
    init_simple_test("aSf_I_BFu8ll");
    static aSf_I_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_I_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu8ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_I_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_I_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu8ll(Test_aSf_I_BFu8ll, "aSf_I_BFu8ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu8s()
{
  {
    init_simple_test("aSf_I_BFu8s");
    static aSf_I_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_I_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu8s.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_I_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_I_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu8s(Test_aSf_I_BFu8s, "aSf_I_BFu8s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu9i()
{
  {
    init_simple_test("aSf_I_BFu9i");
    static aSf_I_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_I_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu9i.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aSf_I_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aSf_I_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu9i(Test_aSf_I_BFu9i, "aSf_I_BFu9i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu9ll()
{
  {
    init_simple_test("aSf_I_BFu9ll");
    static aSf_I_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_I_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu9ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aSf_I_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aSf_I_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu9ll(Test_aSf_I_BFu9ll, "aSf_I_BFu9ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_BFu9s()
{
  {
    init_simple_test("aSf_I_BFu9s");
    static aSf_I_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_I_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_I_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aSf_I_BFu9s.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aSf_I_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aSf_I_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_I_BFu9s(Test_aSf_I_BFu9s, "aSf_I_BFu9s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_C()
{
  {
    init_simple_test("aSf_I_C");
    aSf_I_C lv;
    check2(sizeof(lv), 6, "sizeof(aSf_I_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_C)");
    check_field_offset(lv, v1, 0, "aSf_I_C.v1");
    check_field_offset(lv, v2, 1, "aSf_I_C.v2");
    check_field_offset(lv, v3, 5, "aSf_I_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_I_C(Test_aSf_I_C, "aSf_I_C", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_D()
{
  {
    init_simple_test("aSf_I_D");
    aSf_I_D lv;
    check2(sizeof(lv), 13, "sizeof(aSf_I_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_D)");
    check_field_offset(lv, v1, 0, "aSf_I_D.v1");
    check_field_offset(lv, v2, 1, "aSf_I_D.v2");
    check_field_offset(lv, v3, 5, "aSf_I_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_I_D(Test_aSf_I_D, "aSf_I_D", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_F()
{
  {
    init_simple_test("aSf_I_F");
    aSf_I_F lv;
    check2(sizeof(lv), 9, "sizeof(aSf_I_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_F)");
    check_field_offset(lv, v1, 0, "aSf_I_F.v1");
    check_field_offset(lv, v2, 1, "aSf_I_F.v2");
    check_field_offset(lv, v3, 5, "aSf_I_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_I_F(Test_aSf_I_F, "aSf_I_F", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_I()
{
  {
    init_simple_test("aSf_I_I");
    aSf_I_I lv;
    check2(sizeof(lv), 9, "sizeof(aSf_I_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_I)");
    check_field_offset(lv, v1, 0, "aSf_I_I.v1");
    check_field_offset(lv, v2, 1, "aSf_I_I.v2");
    check_field_offset(lv, v3, 5, "aSf_I_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_I_I(Test_aSf_I_I, "aSf_I_I", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_Ip()
{
  {
    init_simple_test("aSf_I_Ip");
    aSf_I_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_I_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_Ip)");
    check_field_offset(lv, v1, 0, "aSf_I_Ip.v1");
    check_field_offset(lv, v2, 1, "aSf_I_Ip.v2");
    check_field_offset(lv, v3, 5, "aSf_I_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_I_Ip(Test_aSf_I_Ip, "aSf_I_Ip", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_L()
{
  {
    init_simple_test("aSf_I_L");
    aSf_I_L lv;
    check2(sizeof(lv), 13, "sizeof(aSf_I_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_L)");
    check_field_offset(lv, v1, 0, "aSf_I_L.v1");
    check_field_offset(lv, v2, 1, "aSf_I_L.v2");
    check_field_offset(lv, v3, 5, "aSf_I_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_I_L(Test_aSf_I_L, "aSf_I_L", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_S()
{
  {
    init_simple_test("aSf_I_S");
    aSf_I_S lv;
    check2(sizeof(lv), 7, "sizeof(aSf_I_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_S)");
    check_field_offset(lv, v1, 0, "aSf_I_S.v1");
    check_field_offset(lv, v2, 1, "aSf_I_S.v2");
    check_field_offset(lv, v3, 5, "aSf_I_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_I_S(Test_aSf_I_S, "aSf_I_S", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_Sf()
{
  {
    init_simple_test("aSf_I_Sf");
    aSf_I_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aSf_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_Sf)");
    check_field_offset(lv, v1, 0, "aSf_I_Sf.v1");
    check_field_offset(lv, v2, 1, "aSf_I_Sf.v2");
    check_field_offset(lv, v3, 5, "aSf_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_I_Sf(Test_aSf_I_Sf, "aSf_I_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_Uc()
{
  {
    init_simple_test("aSf_I_Uc");
    aSf_I_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aSf_I_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_Uc)");
    check_field_offset(lv, v1, 0, "aSf_I_Uc.v1");
    check_field_offset(lv, v2, 1, "aSf_I_Uc.v2");
    check_field_offset(lv, v3, 5, "aSf_I_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_I_Uc(Test_aSf_I_Uc, "aSf_I_Uc", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_Ui()
{
  {
    init_simple_test("aSf_I_Ui");
    aSf_I_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aSf_I_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_Ui)");
    check_field_offset(lv, v1, 0, "aSf_I_Ui.v1");
    check_field_offset(lv, v2, 1, "aSf_I_Ui.v2");
    check_field_offset(lv, v3, 5, "aSf_I_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_I_Ui(Test_aSf_I_Ui, "aSf_I_Ui", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_Ul()
{
  {
    init_simple_test("aSf_I_Ul");
    aSf_I_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aSf_I_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_Ul)");
    check_field_offset(lv, v1, 0, "aSf_I_Ul.v1");
    check_field_offset(lv, v2, 1, "aSf_I_Ul.v2");
    check_field_offset(lv, v3, 5, "aSf_I_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_I_Ul(Test_aSf_I_Ul, "aSf_I_Ul", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_Us()
{
  {
    init_simple_test("aSf_I_Us");
    aSf_I_Us lv;
    check2(sizeof(lv), 7, "sizeof(aSf_I_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_Us)");
    check_field_offset(lv, v1, 0, "aSf_I_Us.v1");
    check_field_offset(lv, v2, 1, "aSf_I_Us.v2");
    check_field_offset(lv, v3, 5, "aSf_I_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_I_Us(Test_aSf_I_Us, "aSf_I_Us", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_I_Vp()
{
  {
    init_simple_test("aSf_I_Vp");
    aSf_I_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_I_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_I_Vp)");
    check_field_offset(lv, v1, 0, "aSf_I_Vp.v1");
    check_field_offset(lv, v2, 1, "aSf_I_Vp.v2");
    check_field_offset(lv, v3, 5, "aSf_I_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_I_Vp(Test_aSf_I_Vp, "aSf_I_Vp", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip()
{
  {
    init_simple_test("aSf_Ip");
    aSf_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aSf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip)");
    check_field_offset(lv, v1, 0, "aSf_Ip.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip.v2");
  }
}
static Arrange_To_Call_Me vaSf_Ip(Test_aSf_Ip, "aSf_Ip", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu15i()
{
  {
    init_simple_test("aSf_Ip_BFu15i");
    static aSf_Ip_BFu15i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Ip_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu15i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, 1, "aSf_Ip_BFu15i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, hide_ull(1LL<<14), "aSf_Ip_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu15i(Test_aSf_Ip_BFu15i, "aSf_Ip_BFu15i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu15ll()
{
  {
    init_simple_test("aSf_Ip_BFu15ll");
    static aSf_Ip_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Ip_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu15ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, 1, "aSf_Ip_BFu15ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, hide_ull(1LL<<14), "aSf_Ip_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu15ll(Test_aSf_Ip_BFu15ll, "aSf_Ip_BFu15ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu15s()
{
  {
    init_simple_test("aSf_Ip_BFu15s");
    static aSf_Ip_BFu15s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Ip_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu15s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, 1, "aSf_Ip_BFu15s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, hide_ull(1LL<<14), "aSf_Ip_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu15s(Test_aSf_Ip_BFu15s, "aSf_Ip_BFu15s", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu16i()
{
  {
    init_simple_test("aSf_Ip_BFu16i");
    static aSf_Ip_BFu16i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Ip_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu16i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, 1, "aSf_Ip_BFu16i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, hide_ull(1LL<<15), "aSf_Ip_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu16i(Test_aSf_Ip_BFu16i, "aSf_Ip_BFu16i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu16ll()
{
  {
    init_simple_test("aSf_Ip_BFu16ll");
    static aSf_Ip_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Ip_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu16ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, 1, "aSf_Ip_BFu16ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, hide_ull(1LL<<15), "aSf_Ip_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu16ll(Test_aSf_Ip_BFu16ll, "aSf_Ip_BFu16ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu16s()
{
  {
    init_simple_test("aSf_Ip_BFu16s");
    static aSf_Ip_BFu16s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Ip_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu16s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, 1, "aSf_Ip_BFu16s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, hide_ull(1LL<<15), "aSf_Ip_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu16s(Test_aSf_Ip_BFu16s, "aSf_Ip_BFu16s", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu17i()
{
  {
    init_simple_test("aSf_Ip_BFu17i");
    static aSf_Ip_BFu17i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aSf_Ip_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu17i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, 1, "aSf_Ip_BFu17i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, hide_ull(1LL<<16), "aSf_Ip_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu17i(Test_aSf_Ip_BFu17i, "aSf_Ip_BFu17i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu17ll()
{
  {
    init_simple_test("aSf_Ip_BFu17ll");
    static aSf_Ip_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aSf_Ip_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu17ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, 1, "aSf_Ip_BFu17ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, hide_ull(1LL<<16), "aSf_Ip_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu17ll(Test_aSf_Ip_BFu17ll, "aSf_Ip_BFu17ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu1c()
{
  {
    init_simple_test("aSf_Ip_BFu1c");
    static aSf_Ip_BFu1c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Ip_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu1c.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aSf_Ip_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu1c(Test_aSf_Ip_BFu1c, "aSf_Ip_BFu1c", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu1i()
{
  {
    init_simple_test("aSf_Ip_BFu1i");
    static aSf_Ip_BFu1i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Ip_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu1i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aSf_Ip_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu1i(Test_aSf_Ip_BFu1i, "aSf_Ip_BFu1i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu1ll()
{
  {
    init_simple_test("aSf_Ip_BFu1ll");
    static aSf_Ip_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Ip_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu1ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aSf_Ip_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu1ll(Test_aSf_Ip_BFu1ll, "aSf_Ip_BFu1ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu1s()
{
  {
    init_simple_test("aSf_Ip_BFu1s");
    static aSf_Ip_BFu1s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Ip_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu1s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aSf_Ip_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu1s(Test_aSf_Ip_BFu1s, "aSf_Ip_BFu1s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu31i()
{
  {
    init_simple_test("aSf_Ip_BFu31i");
    static aSf_Ip_BFu31i lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_Ip_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu31i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, 1, "aSf_Ip_BFu31i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, hide_ull(1LL<<30), "aSf_Ip_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu31i(Test_aSf_Ip_BFu31i, "aSf_Ip_BFu31i", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu31ll()
{
  {
    init_simple_test("aSf_Ip_BFu31ll");
    static aSf_Ip_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_Ip_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu31ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, 1, "aSf_Ip_BFu31ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, hide_ull(1LL<<30), "aSf_Ip_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu31ll(Test_aSf_Ip_BFu31ll, "aSf_Ip_BFu31ll", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu32i()
{
  {
    init_simple_test("aSf_Ip_BFu32i");
    static aSf_Ip_BFu32i lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_Ip_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu32i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, 1, "aSf_Ip_BFu32i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, hide_ull(1LL<<31), "aSf_Ip_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu32i(Test_aSf_Ip_BFu32i, "aSf_Ip_BFu32i", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu32ll()
{
  {
    init_simple_test("aSf_Ip_BFu32ll");
    static aSf_Ip_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_Ip_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu32ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, 1, "aSf_Ip_BFu32ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, hide_ull(1LL<<31), "aSf_Ip_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu32ll(Test_aSf_Ip_BFu32ll, "aSf_Ip_BFu32ll", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu33()
{
  {
    init_simple_test("aSf_Ip_BFu33");
    static aSf_Ip_BFu33 lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aSf_Ip_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu33.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu33.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 33, 1, "aSf_Ip_BFu33");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 33, hide_ull(1LL<<32), "aSf_Ip_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu33(Test_aSf_Ip_BFu33, "aSf_Ip_BFu33", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu7c()
{
  {
    init_simple_test("aSf_Ip_BFu7c");
    static aSf_Ip_BFu7c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Ip_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu7c.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aSf_Ip_BFu7c");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aSf_Ip_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu7c(Test_aSf_Ip_BFu7c, "aSf_Ip_BFu7c", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu7i()
{
  {
    init_simple_test("aSf_Ip_BFu7i");
    static aSf_Ip_BFu7i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Ip_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu7i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aSf_Ip_BFu7i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aSf_Ip_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu7i(Test_aSf_Ip_BFu7i, "aSf_Ip_BFu7i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu7ll()
{
  {
    init_simple_test("aSf_Ip_BFu7ll");
    static aSf_Ip_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Ip_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu7ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aSf_Ip_BFu7ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aSf_Ip_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu7ll(Test_aSf_Ip_BFu7ll, "aSf_Ip_BFu7ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu7s()
{
  {
    init_simple_test("aSf_Ip_BFu7s");
    static aSf_Ip_BFu7s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Ip_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu7s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aSf_Ip_BFu7s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aSf_Ip_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu7s(Test_aSf_Ip_BFu7s, "aSf_Ip_BFu7s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu8c()
{
  {
    init_simple_test("aSf_Ip_BFu8c");
    static aSf_Ip_BFu8c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Ip_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu8c.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aSf_Ip_BFu8c");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aSf_Ip_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu8c(Test_aSf_Ip_BFu8c, "aSf_Ip_BFu8c", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu8i()
{
  {
    init_simple_test("aSf_Ip_BFu8i");
    static aSf_Ip_BFu8i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Ip_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu8i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aSf_Ip_BFu8i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aSf_Ip_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu8i(Test_aSf_Ip_BFu8i, "aSf_Ip_BFu8i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu8ll()
{
  {
    init_simple_test("aSf_Ip_BFu8ll");
    static aSf_Ip_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Ip_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu8ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aSf_Ip_BFu8ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aSf_Ip_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu8ll(Test_aSf_Ip_BFu8ll, "aSf_Ip_BFu8ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu8s()
{
  {
    init_simple_test("aSf_Ip_BFu8s");
    static aSf_Ip_BFu8s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Ip_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu8s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aSf_Ip_BFu8s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aSf_Ip_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu8s(Test_aSf_Ip_BFu8s, "aSf_Ip_BFu8s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu9i()
{
  {
    init_simple_test("aSf_Ip_BFu9i");
    static aSf_Ip_BFu9i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Ip_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu9i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, 1, "aSf_Ip_BFu9i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, hide_ull(1LL<<8), "aSf_Ip_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu9i(Test_aSf_Ip_BFu9i, "aSf_Ip_BFu9i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu9ll()
{
  {
    init_simple_test("aSf_Ip_BFu9ll");
    static aSf_Ip_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Ip_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu9ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, 1, "aSf_Ip_BFu9ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, hide_ull(1LL<<8), "aSf_Ip_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu9ll(Test_aSf_Ip_BFu9ll, "aSf_Ip_BFu9ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_BFu9s()
{
  {
    init_simple_test("aSf_Ip_BFu9s");
    static aSf_Ip_BFu9s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Ip_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_Ip_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_BFu9s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, 1, "aSf_Ip_BFu9s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, hide_ull(1LL<<8), "aSf_Ip_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_Ip_BFu9s(Test_aSf_Ip_BFu9s, "aSf_Ip_BFu9s", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_C()
{
  {
    init_simple_test("aSf_Ip_C");
    aSf_Ip_C lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Ip_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_C)");
    check_field_offset(lv, v1, 0, "aSf_Ip_C.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_C.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Ip_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ip_C(Test_aSf_Ip_C, "aSf_Ip_C", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_D()
{
  {
    init_simple_test("aSf_Ip_D");
    aSf_Ip_D lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aSf_Ip_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_D)");
    check_field_offset(lv, v1, 0, "aSf_Ip_D.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_D.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Ip_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ip_D(Test_aSf_Ip_D, "aSf_Ip_D", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_F()
{
  {
    init_simple_test("aSf_Ip_F");
    aSf_Ip_F lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_Ip_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_F)");
    check_field_offset(lv, v1, 0, "aSf_Ip_F.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_F.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Ip_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ip_F(Test_aSf_Ip_F, "aSf_Ip_F", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_I()
{
  {
    init_simple_test("aSf_Ip_I");
    aSf_Ip_I lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_Ip_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_I)");
    check_field_offset(lv, v1, 0, "aSf_Ip_I.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_I.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Ip_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ip_I(Test_aSf_Ip_I, "aSf_Ip_I", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_Ip()
{
  {
    init_simple_test("aSf_Ip_Ip");
    aSf_Ip_Ip lv;
    check2(sizeof(lv), ABISELECT(17,9), "sizeof(aSf_Ip_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_Ip)");
    check_field_offset(lv, v1, 0, "aSf_Ip_Ip.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_Ip.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Ip_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ip_Ip(Test_aSf_Ip_Ip, "aSf_Ip_Ip", ABISELECT(17,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_L()
{
  {
    init_simple_test("aSf_Ip_L");
    aSf_Ip_L lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aSf_Ip_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_L)");
    check_field_offset(lv, v1, 0, "aSf_Ip_L.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_L.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Ip_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ip_L(Test_aSf_Ip_L, "aSf_Ip_L", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_S()
{
  {
    init_simple_test("aSf_Ip_S");
    aSf_Ip_S lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Ip_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_S)");
    check_field_offset(lv, v1, 0, "aSf_Ip_S.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_S.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Ip_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ip_S(Test_aSf_Ip_S, "aSf_Ip_S", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_Sf()
{
  {
    init_simple_test("aSf_Ip_Sf");
    aSf_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_Sf)");
    check_field_offset(lv, v1, 0, "aSf_Ip_Sf.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ip_Sf(Test_aSf_Ip_Sf, "aSf_Ip_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_Uc()
{
  {
    init_simple_test("aSf_Ip_Uc");
    aSf_Ip_Uc lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Ip_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_Uc)");
    check_field_offset(lv, v1, 0, "aSf_Ip_Uc.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_Uc.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Ip_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ip_Uc(Test_aSf_Ip_Uc, "aSf_Ip_Uc", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_Ui()
{
  {
    init_simple_test("aSf_Ip_Ui");
    aSf_Ip_Ui lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_Ip_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_Ui)");
    check_field_offset(lv, v1, 0, "aSf_Ip_Ui.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_Ui.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Ip_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ip_Ui(Test_aSf_Ip_Ui, "aSf_Ip_Ui", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_Ul()
{
  {
    init_simple_test("aSf_Ip_Ul");
    aSf_Ip_Ul lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aSf_Ip_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_Ul)");
    check_field_offset(lv, v1, 0, "aSf_Ip_Ul.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_Ul.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Ip_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ip_Ul(Test_aSf_Ip_Ul, "aSf_Ip_Ul", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_Us()
{
  {
    init_simple_test("aSf_Ip_Us");
    aSf_Ip_Us lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Ip_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_Us)");
    check_field_offset(lv, v1, 0, "aSf_Ip_Us.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_Us.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Ip_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ip_Us(Test_aSf_Ip_Us, "aSf_Ip_Us", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ip_Vp()
{
  {
    init_simple_test("aSf_Ip_Vp");
    aSf_Ip_Vp lv;
    check2(sizeof(lv), ABISELECT(17,9), "sizeof(aSf_Ip_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ip_Vp)");
    check_field_offset(lv, v1, 0, "aSf_Ip_Vp.v1");
    check_field_offset(lv, v2, 1, "aSf_Ip_Vp.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Ip_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ip_Vp(Test_aSf_Ip_Vp, "aSf_Ip_Vp", ABISELECT(17,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L()
{
  {
    init_simple_test("aSf_L");
    aSf_L lv;
    check2(sizeof(lv), 9, "sizeof(aSf_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L)");
    check_field_offset(lv, v1, 0, "aSf_L.v1");
    check_field_offset(lv, v2, 1, "aSf_L.v2");
  }
}
static Arrange_To_Call_Me vaSf_L(Test_aSf_L, "aSf_L", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu15i()
{
  {
    init_simple_test("aSf_L_BFu15i");
    static aSf_L_BFu15i lv;
    check2(sizeof(lv), 11, "sizeof(aSf_L_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu15i.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aSf_L_BFu15i");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aSf_L_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu15i(Test_aSf_L_BFu15i, "aSf_L_BFu15i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu15ll()
{
  {
    init_simple_test("aSf_L_BFu15ll");
    static aSf_L_BFu15ll lv;
    check2(sizeof(lv), 11, "sizeof(aSf_L_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu15ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aSf_L_BFu15ll");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aSf_L_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu15ll(Test_aSf_L_BFu15ll, "aSf_L_BFu15ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu15s()
{
  {
    init_simple_test("aSf_L_BFu15s");
    static aSf_L_BFu15s lv;
    check2(sizeof(lv), 11, "sizeof(aSf_L_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu15s.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aSf_L_BFu15s");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aSf_L_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu15s(Test_aSf_L_BFu15s, "aSf_L_BFu15s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu16i()
{
  {
    init_simple_test("aSf_L_BFu16i");
    static aSf_L_BFu16i lv;
    check2(sizeof(lv), 11, "sizeof(aSf_L_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu16i.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aSf_L_BFu16i");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aSf_L_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu16i(Test_aSf_L_BFu16i, "aSf_L_BFu16i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu16ll()
{
  {
    init_simple_test("aSf_L_BFu16ll");
    static aSf_L_BFu16ll lv;
    check2(sizeof(lv), 11, "sizeof(aSf_L_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu16ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aSf_L_BFu16ll");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aSf_L_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu16ll(Test_aSf_L_BFu16ll, "aSf_L_BFu16ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu16s()
{
  {
    init_simple_test("aSf_L_BFu16s");
    static aSf_L_BFu16s lv;
    check2(sizeof(lv), 11, "sizeof(aSf_L_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu16s.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aSf_L_BFu16s");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aSf_L_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu16s(Test_aSf_L_BFu16s, "aSf_L_BFu16s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu17i()
{
  {
    init_simple_test("aSf_L_BFu17i");
    static aSf_L_BFu17i lv;
    check2(sizeof(lv), 12, "sizeof(aSf_L_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu17i.v2");
    set_bf_and_test(lv, v3, 9, 0, 17, 1, "aSf_L_BFu17i");
    set_bf_and_test(lv, v3, 9, 0, 17, hide_ull(1LL<<16), "aSf_L_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu17i(Test_aSf_L_BFu17i, "aSf_L_BFu17i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu17ll()
{
  {
    init_simple_test("aSf_L_BFu17ll");
    static aSf_L_BFu17ll lv;
    check2(sizeof(lv), 12, "sizeof(aSf_L_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu17ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 17, 1, "aSf_L_BFu17ll");
    set_bf_and_test(lv, v3, 9, 0, 17, hide_ull(1LL<<16), "aSf_L_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu17ll(Test_aSf_L_BFu17ll, "aSf_L_BFu17ll", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu1c()
{
  {
    init_simple_test("aSf_L_BFu1c");
    static aSf_L_BFu1c lv;
    check2(sizeof(lv), 10, "sizeof(aSf_L_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu1c.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aSf_L_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu1c(Test_aSf_L_BFu1c, "aSf_L_BFu1c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu1i()
{
  {
    init_simple_test("aSf_L_BFu1i");
    static aSf_L_BFu1i lv;
    check2(sizeof(lv), 10, "sizeof(aSf_L_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu1i.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aSf_L_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu1i(Test_aSf_L_BFu1i, "aSf_L_BFu1i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu1ll()
{
  {
    init_simple_test("aSf_L_BFu1ll");
    static aSf_L_BFu1ll lv;
    check2(sizeof(lv), 10, "sizeof(aSf_L_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu1ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aSf_L_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu1ll(Test_aSf_L_BFu1ll, "aSf_L_BFu1ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu1s()
{
  {
    init_simple_test("aSf_L_BFu1s");
    static aSf_L_BFu1s lv;
    check2(sizeof(lv), 10, "sizeof(aSf_L_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu1s.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aSf_L_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu1s(Test_aSf_L_BFu1s, "aSf_L_BFu1s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu31i()
{
  {
    init_simple_test("aSf_L_BFu31i");
    static aSf_L_BFu31i lv;
    check2(sizeof(lv), 13, "sizeof(aSf_L_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu31i.v2");
    set_bf_and_test(lv, v3, 9, 0, 31, 1, "aSf_L_BFu31i");
    set_bf_and_test(lv, v3, 9, 0, 31, hide_ull(1LL<<30), "aSf_L_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu31i(Test_aSf_L_BFu31i, "aSf_L_BFu31i", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu31ll()
{
  {
    init_simple_test("aSf_L_BFu31ll");
    static aSf_L_BFu31ll lv;
    check2(sizeof(lv), 13, "sizeof(aSf_L_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu31ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 31, 1, "aSf_L_BFu31ll");
    set_bf_and_test(lv, v3, 9, 0, 31, hide_ull(1LL<<30), "aSf_L_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu31ll(Test_aSf_L_BFu31ll, "aSf_L_BFu31ll", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu32i()
{
  {
    init_simple_test("aSf_L_BFu32i");
    static aSf_L_BFu32i lv;
    check2(sizeof(lv), 13, "sizeof(aSf_L_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu32i.v2");
    set_bf_and_test(lv, v3, 9, 0, 32, 1, "aSf_L_BFu32i");
    set_bf_and_test(lv, v3, 9, 0, 32, hide_ull(1LL<<31), "aSf_L_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu32i(Test_aSf_L_BFu32i, "aSf_L_BFu32i", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu32ll()
{
  {
    init_simple_test("aSf_L_BFu32ll");
    static aSf_L_BFu32ll lv;
    check2(sizeof(lv), 13, "sizeof(aSf_L_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu32ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 32, 1, "aSf_L_BFu32ll");
    set_bf_and_test(lv, v3, 9, 0, 32, hide_ull(1LL<<31), "aSf_L_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu32ll(Test_aSf_L_BFu32ll, "aSf_L_BFu32ll", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu33()
{
  {
    init_simple_test("aSf_L_BFu33");
    static aSf_L_BFu33 lv;
    check2(sizeof(lv), 14, "sizeof(aSf_L_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu33.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu33.v2");
    set_bf_and_test(lv, v3, 9, 0, 33, 1, "aSf_L_BFu33");
    set_bf_and_test(lv, v3, 9, 0, 33, hide_ull(1LL<<32), "aSf_L_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu33(Test_aSf_L_BFu33, "aSf_L_BFu33", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu7c()
{
  {
    init_simple_test("aSf_L_BFu7c");
    static aSf_L_BFu7c lv;
    check2(sizeof(lv), 10, "sizeof(aSf_L_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu7c.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aSf_L_BFu7c");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aSf_L_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu7c(Test_aSf_L_BFu7c, "aSf_L_BFu7c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu7i()
{
  {
    init_simple_test("aSf_L_BFu7i");
    static aSf_L_BFu7i lv;
    check2(sizeof(lv), 10, "sizeof(aSf_L_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu7i.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aSf_L_BFu7i");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aSf_L_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu7i(Test_aSf_L_BFu7i, "aSf_L_BFu7i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu7ll()
{
  {
    init_simple_test("aSf_L_BFu7ll");
    static aSf_L_BFu7ll lv;
    check2(sizeof(lv), 10, "sizeof(aSf_L_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu7ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aSf_L_BFu7ll");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aSf_L_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu7ll(Test_aSf_L_BFu7ll, "aSf_L_BFu7ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu7s()
{
  {
    init_simple_test("aSf_L_BFu7s");
    static aSf_L_BFu7s lv;
    check2(sizeof(lv), 10, "sizeof(aSf_L_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu7s.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aSf_L_BFu7s");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aSf_L_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu7s(Test_aSf_L_BFu7s, "aSf_L_BFu7s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu8c()
{
  {
    init_simple_test("aSf_L_BFu8c");
    static aSf_L_BFu8c lv;
    check2(sizeof(lv), 10, "sizeof(aSf_L_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu8c.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aSf_L_BFu8c");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aSf_L_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu8c(Test_aSf_L_BFu8c, "aSf_L_BFu8c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu8i()
{
  {
    init_simple_test("aSf_L_BFu8i");
    static aSf_L_BFu8i lv;
    check2(sizeof(lv), 10, "sizeof(aSf_L_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu8i.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aSf_L_BFu8i");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aSf_L_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu8i(Test_aSf_L_BFu8i, "aSf_L_BFu8i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu8ll()
{
  {
    init_simple_test("aSf_L_BFu8ll");
    static aSf_L_BFu8ll lv;
    check2(sizeof(lv), 10, "sizeof(aSf_L_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu8ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aSf_L_BFu8ll");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aSf_L_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu8ll(Test_aSf_L_BFu8ll, "aSf_L_BFu8ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu8s()
{
  {
    init_simple_test("aSf_L_BFu8s");
    static aSf_L_BFu8s lv;
    check2(sizeof(lv), 10, "sizeof(aSf_L_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu8s.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aSf_L_BFu8s");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aSf_L_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu8s(Test_aSf_L_BFu8s, "aSf_L_BFu8s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu9i()
{
  {
    init_simple_test("aSf_L_BFu9i");
    static aSf_L_BFu9i lv;
    check2(sizeof(lv), 11, "sizeof(aSf_L_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu9i.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aSf_L_BFu9i");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aSf_L_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu9i(Test_aSf_L_BFu9i, "aSf_L_BFu9i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu9ll()
{
  {
    init_simple_test("aSf_L_BFu9ll");
    static aSf_L_BFu9ll lv;
    check2(sizeof(lv), 11, "sizeof(aSf_L_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu9ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aSf_L_BFu9ll");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aSf_L_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu9ll(Test_aSf_L_BFu9ll, "aSf_L_BFu9ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_BFu9s()
{
  {
    init_simple_test("aSf_L_BFu9s");
    static aSf_L_BFu9s lv;
    check2(sizeof(lv), 11, "sizeof(aSf_L_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_L_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aSf_L_BFu9s.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aSf_L_BFu9s");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aSf_L_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_L_BFu9s(Test_aSf_L_BFu9s, "aSf_L_BFu9s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_C()
{
  {
    init_simple_test("aSf_L_C");
    aSf_L_C lv;
    check2(sizeof(lv), 10, "sizeof(aSf_L_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_C)");
    check_field_offset(lv, v1, 0, "aSf_L_C.v1");
    check_field_offset(lv, v2, 1, "aSf_L_C.v2");
    check_field_offset(lv, v3, 9, "aSf_L_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_L_C(Test_aSf_L_C, "aSf_L_C", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_D()
{
  {
    init_simple_test("aSf_L_D");
    aSf_L_D lv;
    check2(sizeof(lv), 17, "sizeof(aSf_L_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_D)");
    check_field_offset(lv, v1, 0, "aSf_L_D.v1");
    check_field_offset(lv, v2, 1, "aSf_L_D.v2");
    check_field_offset(lv, v3, 9, "aSf_L_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_L_D(Test_aSf_L_D, "aSf_L_D", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_F()
{
  {
    init_simple_test("aSf_L_F");
    aSf_L_F lv;
    check2(sizeof(lv), 13, "sizeof(aSf_L_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_F)");
    check_field_offset(lv, v1, 0, "aSf_L_F.v1");
    check_field_offset(lv, v2, 1, "aSf_L_F.v2");
    check_field_offset(lv, v3, 9, "aSf_L_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_L_F(Test_aSf_L_F, "aSf_L_F", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_I()
{
  {
    init_simple_test("aSf_L_I");
    aSf_L_I lv;
    check2(sizeof(lv), 13, "sizeof(aSf_L_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_I)");
    check_field_offset(lv, v1, 0, "aSf_L_I.v1");
    check_field_offset(lv, v2, 1, "aSf_L_I.v2");
    check_field_offset(lv, v3, 9, "aSf_L_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_L_I(Test_aSf_L_I, "aSf_L_I", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_Ip()
{
  {
    init_simple_test("aSf_L_Ip");
    aSf_L_Ip lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aSf_L_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_Ip)");
    check_field_offset(lv, v1, 0, "aSf_L_Ip.v1");
    check_field_offset(lv, v2, 1, "aSf_L_Ip.v2");
    check_field_offset(lv, v3, 9, "aSf_L_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_L_Ip(Test_aSf_L_Ip, "aSf_L_Ip", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_L()
{
  {
    init_simple_test("aSf_L_L");
    aSf_L_L lv;
    check2(sizeof(lv), 17, "sizeof(aSf_L_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_L)");
    check_field_offset(lv, v1, 0, "aSf_L_L.v1");
    check_field_offset(lv, v2, 1, "aSf_L_L.v2");
    check_field_offset(lv, v3, 9, "aSf_L_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_L_L(Test_aSf_L_L, "aSf_L_L", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_S()
{
  {
    init_simple_test("aSf_L_S");
    aSf_L_S lv;
    check2(sizeof(lv), 11, "sizeof(aSf_L_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_S)");
    check_field_offset(lv, v1, 0, "aSf_L_S.v1");
    check_field_offset(lv, v2, 1, "aSf_L_S.v2");
    check_field_offset(lv, v3, 9, "aSf_L_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_L_S(Test_aSf_L_S, "aSf_L_S", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_Sf()
{
  {
    init_simple_test("aSf_L_Sf");
    aSf_L_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aSf_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_Sf)");
    check_field_offset(lv, v1, 0, "aSf_L_Sf.v1");
    check_field_offset(lv, v2, 1, "aSf_L_Sf.v2");
    check_field_offset(lv, v3, 9, "aSf_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_L_Sf(Test_aSf_L_Sf, "aSf_L_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_Uc()
{
  {
    init_simple_test("aSf_L_Uc");
    aSf_L_Uc lv;
    check2(sizeof(lv), 10, "sizeof(aSf_L_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_Uc)");
    check_field_offset(lv, v1, 0, "aSf_L_Uc.v1");
    check_field_offset(lv, v2, 1, "aSf_L_Uc.v2");
    check_field_offset(lv, v3, 9, "aSf_L_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_L_Uc(Test_aSf_L_Uc, "aSf_L_Uc", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_Ui()
{
  {
    init_simple_test("aSf_L_Ui");
    aSf_L_Ui lv;
    check2(sizeof(lv), 13, "sizeof(aSf_L_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_Ui)");
    check_field_offset(lv, v1, 0, "aSf_L_Ui.v1");
    check_field_offset(lv, v2, 1, "aSf_L_Ui.v2");
    check_field_offset(lv, v3, 9, "aSf_L_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_L_Ui(Test_aSf_L_Ui, "aSf_L_Ui", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_Ul()
{
  {
    init_simple_test("aSf_L_Ul");
    aSf_L_Ul lv;
    check2(sizeof(lv), 17, "sizeof(aSf_L_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_Ul)");
    check_field_offset(lv, v1, 0, "aSf_L_Ul.v1");
    check_field_offset(lv, v2, 1, "aSf_L_Ul.v2");
    check_field_offset(lv, v3, 9, "aSf_L_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_L_Ul(Test_aSf_L_Ul, "aSf_L_Ul", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_Us()
{
  {
    init_simple_test("aSf_L_Us");
    aSf_L_Us lv;
    check2(sizeof(lv), 11, "sizeof(aSf_L_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_Us)");
    check_field_offset(lv, v1, 0, "aSf_L_Us.v1");
    check_field_offset(lv, v2, 1, "aSf_L_Us.v2");
    check_field_offset(lv, v3, 9, "aSf_L_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_L_Us(Test_aSf_L_Us, "aSf_L_Us", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_L_Vp()
{
  {
    init_simple_test("aSf_L_Vp");
    aSf_L_Vp lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aSf_L_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_L_Vp)");
    check_field_offset(lv, v1, 0, "aSf_L_Vp.v1");
    check_field_offset(lv, v2, 1, "aSf_L_Vp.v2");
    check_field_offset(lv, v3, 9, "aSf_L_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_L_Vp(Test_aSf_L_Vp, "aSf_L_Vp", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S()
{
  {
    init_simple_test("aSf_S");
    aSf_S lv;
    check2(sizeof(lv), 3, "sizeof(aSf_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S)");
    check_field_offset(lv, v1, 0, "aSf_S.v1");
    check_field_offset(lv, v2, 1, "aSf_S.v2");
  }
}
static Arrange_To_Call_Me vaSf_S(Test_aSf_S, "aSf_S", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu15i()
{
  {
    init_simple_test("aSf_S_BFu15i");
    static aSf_S_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_S_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu15i.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aSf_S_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aSf_S_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu15i(Test_aSf_S_BFu15i, "aSf_S_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu15ll()
{
  {
    init_simple_test("aSf_S_BFu15ll");
    static aSf_S_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_S_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu15ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aSf_S_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aSf_S_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu15ll(Test_aSf_S_BFu15ll, "aSf_S_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu15s()
{
  {
    init_simple_test("aSf_S_BFu15s");
    static aSf_S_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_S_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu15s.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aSf_S_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aSf_S_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu15s(Test_aSf_S_BFu15s, "aSf_S_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu16i()
{
  {
    init_simple_test("aSf_S_BFu16i");
    static aSf_S_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_S_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu16i.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aSf_S_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aSf_S_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu16i(Test_aSf_S_BFu16i, "aSf_S_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu16ll()
{
  {
    init_simple_test("aSf_S_BFu16ll");
    static aSf_S_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_S_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu16ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aSf_S_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aSf_S_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu16ll(Test_aSf_S_BFu16ll, "aSf_S_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu16s()
{
  {
    init_simple_test("aSf_S_BFu16s");
    static aSf_S_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_S_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu16s.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aSf_S_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aSf_S_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu16s(Test_aSf_S_BFu16s, "aSf_S_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu17i()
{
  {
    init_simple_test("aSf_S_BFu17i");
    static aSf_S_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_S_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu17i.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aSf_S_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aSf_S_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu17i(Test_aSf_S_BFu17i, "aSf_S_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu17ll()
{
  {
    init_simple_test("aSf_S_BFu17ll");
    static aSf_S_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_S_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu17ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aSf_S_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aSf_S_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu17ll(Test_aSf_S_BFu17ll, "aSf_S_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu1c()
{
  {
    init_simple_test("aSf_S_BFu1c");
    static aSf_S_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_S_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu1c.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_S_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu1c(Test_aSf_S_BFu1c, "aSf_S_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu1i()
{
  {
    init_simple_test("aSf_S_BFu1i");
    static aSf_S_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_S_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu1i.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_S_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu1i(Test_aSf_S_BFu1i, "aSf_S_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu1ll()
{
  {
    init_simple_test("aSf_S_BFu1ll");
    static aSf_S_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_S_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu1ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_S_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu1ll(Test_aSf_S_BFu1ll, "aSf_S_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu1s()
{
  {
    init_simple_test("aSf_S_BFu1s");
    static aSf_S_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_S_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu1s.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_S_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu1s(Test_aSf_S_BFu1s, "aSf_S_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu31i()
{
  {
    init_simple_test("aSf_S_BFu31i");
    static aSf_S_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_S_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu31i.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aSf_S_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aSf_S_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu31i(Test_aSf_S_BFu31i, "aSf_S_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu31ll()
{
  {
    init_simple_test("aSf_S_BFu31ll");
    static aSf_S_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_S_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu31ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aSf_S_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aSf_S_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu31ll(Test_aSf_S_BFu31ll, "aSf_S_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu32i()
{
  {
    init_simple_test("aSf_S_BFu32i");
    static aSf_S_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_S_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu32i.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aSf_S_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aSf_S_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu32i(Test_aSf_S_BFu32i, "aSf_S_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu32ll()
{
  {
    init_simple_test("aSf_S_BFu32ll");
    static aSf_S_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_S_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu32ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aSf_S_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aSf_S_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu32ll(Test_aSf_S_BFu32ll, "aSf_S_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu33()
{
  {
    init_simple_test("aSf_S_BFu33");
    static aSf_S_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aSf_S_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu33.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu33.v2");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aSf_S_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aSf_S_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu33(Test_aSf_S_BFu33, "aSf_S_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu7c()
{
  {
    init_simple_test("aSf_S_BFu7c");
    static aSf_S_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_S_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu7c.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_S_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_S_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu7c(Test_aSf_S_BFu7c, "aSf_S_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu7i()
{
  {
    init_simple_test("aSf_S_BFu7i");
    static aSf_S_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_S_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu7i.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_S_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_S_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu7i(Test_aSf_S_BFu7i, "aSf_S_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu7ll()
{
  {
    init_simple_test("aSf_S_BFu7ll");
    static aSf_S_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_S_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu7ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_S_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_S_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu7ll(Test_aSf_S_BFu7ll, "aSf_S_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu7s()
{
  {
    init_simple_test("aSf_S_BFu7s");
    static aSf_S_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_S_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu7s.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_S_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_S_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu7s(Test_aSf_S_BFu7s, "aSf_S_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu8c()
{
  {
    init_simple_test("aSf_S_BFu8c");
    static aSf_S_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_S_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu8c.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_S_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_S_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu8c(Test_aSf_S_BFu8c, "aSf_S_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu8i()
{
  {
    init_simple_test("aSf_S_BFu8i");
    static aSf_S_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_S_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu8i.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_S_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_S_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu8i(Test_aSf_S_BFu8i, "aSf_S_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu8ll()
{
  {
    init_simple_test("aSf_S_BFu8ll");
    static aSf_S_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_S_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu8ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_S_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_S_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu8ll(Test_aSf_S_BFu8ll, "aSf_S_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu8s()
{
  {
    init_simple_test("aSf_S_BFu8s");
    static aSf_S_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_S_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu8s.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_S_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_S_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu8s(Test_aSf_S_BFu8s, "aSf_S_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu9i()
{
  {
    init_simple_test("aSf_S_BFu9i");
    static aSf_S_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_S_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu9i.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aSf_S_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aSf_S_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu9i(Test_aSf_S_BFu9i, "aSf_S_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu9ll()
{
  {
    init_simple_test("aSf_S_BFu9ll");
    static aSf_S_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_S_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu9ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aSf_S_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aSf_S_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu9ll(Test_aSf_S_BFu9ll, "aSf_S_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_BFu9s()
{
  {
    init_simple_test("aSf_S_BFu9s");
    static aSf_S_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_S_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_S_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aSf_S_BFu9s.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aSf_S_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aSf_S_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_S_BFu9s(Test_aSf_S_BFu9s, "aSf_S_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_C()
{
  {
    init_simple_test("aSf_S_C");
    aSf_S_C lv;
    check2(sizeof(lv), 4, "sizeof(aSf_S_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_C)");
    check_field_offset(lv, v1, 0, "aSf_S_C.v1");
    check_field_offset(lv, v2, 1, "aSf_S_C.v2");
    check_field_offset(lv, v3, 3, "aSf_S_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_S_C(Test_aSf_S_C, "aSf_S_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_D()
{
  {
    init_simple_test("aSf_S_D");
    aSf_S_D lv;
    check2(sizeof(lv), 11, "sizeof(aSf_S_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_D)");
    check_field_offset(lv, v1, 0, "aSf_S_D.v1");
    check_field_offset(lv, v2, 1, "aSf_S_D.v2");
    check_field_offset(lv, v3, 3, "aSf_S_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_S_D(Test_aSf_S_D, "aSf_S_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_F()
{
  {
    init_simple_test("aSf_S_F");
    aSf_S_F lv;
    check2(sizeof(lv), 7, "sizeof(aSf_S_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_F)");
    check_field_offset(lv, v1, 0, "aSf_S_F.v1");
    check_field_offset(lv, v2, 1, "aSf_S_F.v2");
    check_field_offset(lv, v3, 3, "aSf_S_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_S_F(Test_aSf_S_F, "aSf_S_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_I()
{
  {
    init_simple_test("aSf_S_I");
    aSf_S_I lv;
    check2(sizeof(lv), 7, "sizeof(aSf_S_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_I)");
    check_field_offset(lv, v1, 0, "aSf_S_I.v1");
    check_field_offset(lv, v2, 1, "aSf_S_I.v2");
    check_field_offset(lv, v3, 3, "aSf_S_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_S_I(Test_aSf_S_I, "aSf_S_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_Ip()
{
  {
    init_simple_test("aSf_S_Ip");
    aSf_S_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_S_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_Ip)");
    check_field_offset(lv, v1, 0, "aSf_S_Ip.v1");
    check_field_offset(lv, v2, 1, "aSf_S_Ip.v2");
    check_field_offset(lv, v3, 3, "aSf_S_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_S_Ip(Test_aSf_S_Ip, "aSf_S_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_L()
{
  {
    init_simple_test("aSf_S_L");
    aSf_S_L lv;
    check2(sizeof(lv), 11, "sizeof(aSf_S_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_L)");
    check_field_offset(lv, v1, 0, "aSf_S_L.v1");
    check_field_offset(lv, v2, 1, "aSf_S_L.v2");
    check_field_offset(lv, v3, 3, "aSf_S_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_S_L(Test_aSf_S_L, "aSf_S_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_S()
{
  {
    init_simple_test("aSf_S_S");
    aSf_S_S lv;
    check2(sizeof(lv), 5, "sizeof(aSf_S_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_S)");
    check_field_offset(lv, v1, 0, "aSf_S_S.v1");
    check_field_offset(lv, v2, 1, "aSf_S_S.v2");
    check_field_offset(lv, v3, 3, "aSf_S_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_S_S(Test_aSf_S_S, "aSf_S_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_Sf()
{
  {
    init_simple_test("aSf_S_Sf");
    aSf_S_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aSf_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_Sf)");
    check_field_offset(lv, v1, 0, "aSf_S_Sf.v1");
    check_field_offset(lv, v2, 1, "aSf_S_Sf.v2");
    check_field_offset(lv, v3, 3, "aSf_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_S_Sf(Test_aSf_S_Sf, "aSf_S_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_Uc()
{
  {
    init_simple_test("aSf_S_Uc");
    aSf_S_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aSf_S_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_Uc)");
    check_field_offset(lv, v1, 0, "aSf_S_Uc.v1");
    check_field_offset(lv, v2, 1, "aSf_S_Uc.v2");
    check_field_offset(lv, v3, 3, "aSf_S_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_S_Uc(Test_aSf_S_Uc, "aSf_S_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_Ui()
{
  {
    init_simple_test("aSf_S_Ui");
    aSf_S_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aSf_S_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_Ui)");
    check_field_offset(lv, v1, 0, "aSf_S_Ui.v1");
    check_field_offset(lv, v2, 1, "aSf_S_Ui.v2");
    check_field_offset(lv, v3, 3, "aSf_S_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_S_Ui(Test_aSf_S_Ui, "aSf_S_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_Ul()
{
  {
    init_simple_test("aSf_S_Ul");
    aSf_S_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aSf_S_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_Ul)");
    check_field_offset(lv, v1, 0, "aSf_S_Ul.v1");
    check_field_offset(lv, v2, 1, "aSf_S_Ul.v2");
    check_field_offset(lv, v3, 3, "aSf_S_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_S_Ul(Test_aSf_S_Ul, "aSf_S_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_Us()
{
  {
    init_simple_test("aSf_S_Us");
    aSf_S_Us lv;
    check2(sizeof(lv), 5, "sizeof(aSf_S_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_Us)");
    check_field_offset(lv, v1, 0, "aSf_S_Us.v1");
    check_field_offset(lv, v2, 1, "aSf_S_Us.v2");
    check_field_offset(lv, v3, 3, "aSf_S_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_S_Us(Test_aSf_S_Us, "aSf_S_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_S_Vp()
{
  {
    init_simple_test("aSf_S_Vp");
    aSf_S_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_S_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_S_Vp)");
    check_field_offset(lv, v1, 0, "aSf_S_Vp.v1");
    check_field_offset(lv, v2, 1, "aSf_S_Vp.v2");
    check_field_offset(lv, v3, 3, "aSf_S_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_S_Vp(Test_aSf_S_Vp, "aSf_S_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf()
{
  {
    init_simple_test("aSf_Sf");
    aSf_Sf lv;
    check2(sizeof(lv), 2, "sizeof(aSf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf)");
    check_field_offset(lv, v1, 0, "aSf_Sf.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf.v2");
  }
}
static Arrange_To_Call_Me vaSf_Sf(Test_aSf_Sf, "aSf_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu15i()
{
  {
    init_simple_test("aSf_Sf_BFu15i");
    static aSf_Sf_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_Sf_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu15i(Test_aSf_Sf_BFu15i, "aSf_Sf_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu15ll()
{
  {
    init_simple_test("aSf_Sf_BFu15ll");
    static aSf_Sf_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu15ll(Test_aSf_Sf_BFu15ll, "aSf_Sf_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu15s()
{
  {
    init_simple_test("aSf_Sf_BFu15s");
    static aSf_Sf_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_Sf_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu15s(Test_aSf_Sf_BFu15s, "aSf_Sf_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu16i()
{
  {
    init_simple_test("aSf_Sf_BFu16i");
    static aSf_Sf_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_Sf_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu16i(Test_aSf_Sf_BFu16i, "aSf_Sf_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu16ll()
{
  {
    init_simple_test("aSf_Sf_BFu16ll");
    static aSf_Sf_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu16ll(Test_aSf_Sf_BFu16ll, "aSf_Sf_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu16s()
{
  {
    init_simple_test("aSf_Sf_BFu16s");
    static aSf_Sf_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_Sf_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu16s(Test_aSf_Sf_BFu16s, "aSf_Sf_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu17i()
{
  {
    init_simple_test("aSf_Sf_BFu17i");
    static aSf_Sf_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aSf_Sf_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aSf_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu17i(Test_aSf_Sf_BFu17i, "aSf_Sf_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu17ll()
{
  {
    init_simple_test("aSf_Sf_BFu17ll");
    static aSf_Sf_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aSf_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aSf_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu17ll(Test_aSf_Sf_BFu17ll, "aSf_Sf_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu1c()
{
  {
    init_simple_test("aSf_Sf_BFu1c");
    static aSf_Sf_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu1c(Test_aSf_Sf_BFu1c, "aSf_Sf_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu1i()
{
  {
    init_simple_test("aSf_Sf_BFu1i");
    static aSf_Sf_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu1i(Test_aSf_Sf_BFu1i, "aSf_Sf_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu1ll()
{
  {
    init_simple_test("aSf_Sf_BFu1ll");
    static aSf_Sf_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu1ll(Test_aSf_Sf_BFu1ll, "aSf_Sf_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu1s()
{
  {
    init_simple_test("aSf_Sf_BFu1s");
    static aSf_Sf_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu1s(Test_aSf_Sf_BFu1s, "aSf_Sf_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu31i()
{
  {
    init_simple_test("aSf_Sf_BFu31i");
    static aSf_Sf_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aSf_Sf_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aSf_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu31i(Test_aSf_Sf_BFu31i, "aSf_Sf_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu31ll()
{
  {
    init_simple_test("aSf_Sf_BFu31ll");
    static aSf_Sf_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aSf_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aSf_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu31ll(Test_aSf_Sf_BFu31ll, "aSf_Sf_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu32i()
{
  {
    init_simple_test("aSf_Sf_BFu32i");
    static aSf_Sf_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aSf_Sf_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aSf_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu32i(Test_aSf_Sf_BFu32i, "aSf_Sf_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu32ll()
{
  {
    init_simple_test("aSf_Sf_BFu32ll");
    static aSf_Sf_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aSf_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aSf_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu32ll(Test_aSf_Sf_BFu32ll, "aSf_Sf_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu33()
{
  {
    init_simple_test("aSf_Sf_BFu33");
    static aSf_Sf_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu33.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aSf_Sf_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aSf_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu33(Test_aSf_Sf_BFu33, "aSf_Sf_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu7c()
{
  {
    init_simple_test("aSf_Sf_BFu7c");
    static aSf_Sf_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_Sf_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu7c(Test_aSf_Sf_BFu7c, "aSf_Sf_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu7i()
{
  {
    init_simple_test("aSf_Sf_BFu7i");
    static aSf_Sf_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_Sf_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu7i(Test_aSf_Sf_BFu7i, "aSf_Sf_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu7ll()
{
  {
    init_simple_test("aSf_Sf_BFu7ll");
    static aSf_Sf_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu7ll(Test_aSf_Sf_BFu7ll, "aSf_Sf_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu7s()
{
  {
    init_simple_test("aSf_Sf_BFu7s");
    static aSf_Sf_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_Sf_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu7s(Test_aSf_Sf_BFu7s, "aSf_Sf_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu8c()
{
  {
    init_simple_test("aSf_Sf_BFu8c");
    static aSf_Sf_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_Sf_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu8c(Test_aSf_Sf_BFu8c, "aSf_Sf_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu8i()
{
  {
    init_simple_test("aSf_Sf_BFu8i");
    static aSf_Sf_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_Sf_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu8i(Test_aSf_Sf_BFu8i, "aSf_Sf_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu8ll()
{
  {
    init_simple_test("aSf_Sf_BFu8ll");
    static aSf_Sf_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu8ll(Test_aSf_Sf_BFu8ll, "aSf_Sf_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu8s()
{
  {
    init_simple_test("aSf_Sf_BFu8s");
    static aSf_Sf_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_Sf_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu8s(Test_aSf_Sf_BFu8s, "aSf_Sf_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu9i()
{
  {
    init_simple_test("aSf_Sf_BFu9i");
    static aSf_Sf_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_Sf_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu9i(Test_aSf_Sf_BFu9i, "aSf_Sf_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu9ll()
{
  {
    init_simple_test("aSf_Sf_BFu9ll");
    static aSf_Sf_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu9ll(Test_aSf_Sf_BFu9ll, "aSf_Sf_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_BFu9s()
{
  {
    init_simple_test("aSf_Sf_BFu9s");
    static aSf_Sf_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_Sf_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_Sf_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_Sf_BFu9s(Test_aSf_Sf_BFu9s, "aSf_Sf_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_C()
{
  {
    init_simple_test("aSf_Sf_C");
    aSf_Sf_C lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_C)");
    check_field_offset(lv, v1, 0, "aSf_Sf_C.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_C.v2");
    check_field_offset(lv, v3, 2, "aSf_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_Sf_C(Test_aSf_Sf_C, "aSf_Sf_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_D()
{
  {
    init_simple_test("aSf_Sf_D");
    aSf_Sf_D lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_D)");
    check_field_offset(lv, v1, 0, "aSf_Sf_D.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_D.v2");
    check_field_offset(lv, v3, 2, "aSf_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_Sf_D(Test_aSf_Sf_D, "aSf_Sf_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_F()
{
  {
    init_simple_test("aSf_Sf_F");
    aSf_Sf_F lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_F)");
    check_field_offset(lv, v1, 0, "aSf_Sf_F.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_F.v2");
    check_field_offset(lv, v3, 2, "aSf_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_Sf_F(Test_aSf_Sf_F, "aSf_Sf_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_I()
{
  {
    init_simple_test("aSf_Sf_I");
    aSf_Sf_I lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_I)");
    check_field_offset(lv, v1, 0, "aSf_Sf_I.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_I.v2");
    check_field_offset(lv, v3, 2, "aSf_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_Sf_I(Test_aSf_Sf_I, "aSf_Sf_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_Ip()
{
  {
    init_simple_test("aSf_Sf_Ip");
    aSf_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_Ip)");
    check_field_offset(lv, v1, 0, "aSf_Sf_Ip.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_Ip.v2");
    check_field_offset(lv, v3, 2, "aSf_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_Sf_Ip(Test_aSf_Sf_Ip, "aSf_Sf_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_L()
{
  {
    init_simple_test("aSf_Sf_L");
    aSf_Sf_L lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_L)");
    check_field_offset(lv, v1, 0, "aSf_Sf_L.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_L.v2");
    check_field_offset(lv, v3, 2, "aSf_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_Sf_L(Test_aSf_Sf_L, "aSf_Sf_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_S()
{
  {
    init_simple_test("aSf_Sf_S");
    aSf_Sf_S lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_S)");
    check_field_offset(lv, v1, 0, "aSf_Sf_S.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_S.v2");
    check_field_offset(lv, v3, 2, "aSf_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_Sf_S(Test_aSf_Sf_S, "aSf_Sf_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_Sf()
{
  {
    init_simple_test("aSf_Sf_Sf");
    aSf_Sf_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_Sf)");
    check_field_offset(lv, v1, 0, "aSf_Sf_Sf.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_Sf.v2");
    check_field_offset(lv, v3, 2, "aSf_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_Sf_Sf(Test_aSf_Sf_Sf, "aSf_Sf_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_Uc()
{
  {
    init_simple_test("aSf_Sf_Uc");
    aSf_Sf_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_Uc)");
    check_field_offset(lv, v1, 0, "aSf_Sf_Uc.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_Uc.v2");
    check_field_offset(lv, v3, 2, "aSf_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_Sf_Uc(Test_aSf_Sf_Uc, "aSf_Sf_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_Ui()
{
  {
    init_simple_test("aSf_Sf_Ui");
    aSf_Sf_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_Ui)");
    check_field_offset(lv, v1, 0, "aSf_Sf_Ui.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_Ui.v2");
    check_field_offset(lv, v3, 2, "aSf_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_Sf_Ui(Test_aSf_Sf_Ui, "aSf_Sf_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_Ul()
{
  {
    init_simple_test("aSf_Sf_Ul");
    aSf_Sf_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_Ul)");
    check_field_offset(lv, v1, 0, "aSf_Sf_Ul.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_Ul.v2");
    check_field_offset(lv, v3, 2, "aSf_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_Sf_Ul(Test_aSf_Sf_Ul, "aSf_Sf_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_Us()
{
  {
    init_simple_test("aSf_Sf_Us");
    aSf_Sf_Us lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_Us)");
    check_field_offset(lv, v1, 0, "aSf_Sf_Us.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_Us.v2");
    check_field_offset(lv, v3, 2, "aSf_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_Sf_Us(Test_aSf_Sf_Us, "aSf_Sf_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Sf_Vp()
{
  {
    init_simple_test("aSf_Sf_Vp");
    aSf_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Sf_Vp)");
    check_field_offset(lv, v1, 0, "aSf_Sf_Vp.v1");
    check_field_offset(lv, v2, 1, "aSf_Sf_Vp.v2");
    check_field_offset(lv, v3, 2, "aSf_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_Sf_Vp(Test_aSf_Sf_Vp, "aSf_Sf_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc()
{
  {
    init_simple_test("aSf_Uc");
    aSf_Uc lv;
    check2(sizeof(lv), 2, "sizeof(aSf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc)");
    check_field_offset(lv, v1, 0, "aSf_Uc.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc.v2");
  }
}
static Arrange_To_Call_Me vaSf_Uc(Test_aSf_Uc, "aSf_Uc", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu15i()
{
  {
    init_simple_test("aSf_Uc_BFu15i");
    static aSf_Uc_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Uc_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_Uc_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_Uc_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu15i(Test_aSf_Uc_BFu15i, "aSf_Uc_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu15ll()
{
  {
    init_simple_test("aSf_Uc_BFu15ll");
    static aSf_Uc_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Uc_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_Uc_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_Uc_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu15ll(Test_aSf_Uc_BFu15ll, "aSf_Uc_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu15s()
{
  {
    init_simple_test("aSf_Uc_BFu15s");
    static aSf_Uc_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Uc_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aSf_Uc_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aSf_Uc_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu15s(Test_aSf_Uc_BFu15s, "aSf_Uc_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu16i()
{
  {
    init_simple_test("aSf_Uc_BFu16i");
    static aSf_Uc_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Uc_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_Uc_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_Uc_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu16i(Test_aSf_Uc_BFu16i, "aSf_Uc_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu16ll()
{
  {
    init_simple_test("aSf_Uc_BFu16ll");
    static aSf_Uc_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Uc_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_Uc_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_Uc_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu16ll(Test_aSf_Uc_BFu16ll, "aSf_Uc_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu16s()
{
  {
    init_simple_test("aSf_Uc_BFu16s");
    static aSf_Uc_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Uc_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aSf_Uc_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aSf_Uc_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu16s(Test_aSf_Uc_BFu16s, "aSf_Uc_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu17i()
{
  {
    init_simple_test("aSf_Uc_BFu17i");
    static aSf_Uc_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_Uc_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aSf_Uc_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aSf_Uc_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu17i(Test_aSf_Uc_BFu17i, "aSf_Uc_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu17ll()
{
  {
    init_simple_test("aSf_Uc_BFu17ll");
    static aSf_Uc_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_Uc_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aSf_Uc_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aSf_Uc_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu17ll(Test_aSf_Uc_BFu17ll, "aSf_Uc_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu1c()
{
  {
    init_simple_test("aSf_Uc_BFu1c");
    static aSf_Uc_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Uc_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_Uc_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu1c(Test_aSf_Uc_BFu1c, "aSf_Uc_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu1i()
{
  {
    init_simple_test("aSf_Uc_BFu1i");
    static aSf_Uc_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Uc_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_Uc_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu1i(Test_aSf_Uc_BFu1i, "aSf_Uc_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu1ll()
{
  {
    init_simple_test("aSf_Uc_BFu1ll");
    static aSf_Uc_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Uc_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_Uc_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu1ll(Test_aSf_Uc_BFu1ll, "aSf_Uc_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu1s()
{
  {
    init_simple_test("aSf_Uc_BFu1s");
    static aSf_Uc_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Uc_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aSf_Uc_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu1s(Test_aSf_Uc_BFu1s, "aSf_Uc_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu31i()
{
  {
    init_simple_test("aSf_Uc_BFu31i");
    static aSf_Uc_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Uc_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aSf_Uc_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aSf_Uc_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu31i(Test_aSf_Uc_BFu31i, "aSf_Uc_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu31ll()
{
  {
    init_simple_test("aSf_Uc_BFu31ll");
    static aSf_Uc_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Uc_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aSf_Uc_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aSf_Uc_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu31ll(Test_aSf_Uc_BFu31ll, "aSf_Uc_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu32i()
{
  {
    init_simple_test("aSf_Uc_BFu32i");
    static aSf_Uc_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Uc_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aSf_Uc_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aSf_Uc_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu32i(Test_aSf_Uc_BFu32i, "aSf_Uc_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu32ll()
{
  {
    init_simple_test("aSf_Uc_BFu32ll");
    static aSf_Uc_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Uc_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aSf_Uc_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aSf_Uc_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu32ll(Test_aSf_Uc_BFu32ll, "aSf_Uc_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu33()
{
  {
    init_simple_test("aSf_Uc_BFu33");
    static aSf_Uc_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Uc_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu33.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aSf_Uc_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aSf_Uc_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu33(Test_aSf_Uc_BFu33, "aSf_Uc_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu7c()
{
  {
    init_simple_test("aSf_Uc_BFu7c");
    static aSf_Uc_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Uc_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_Uc_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_Uc_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu7c(Test_aSf_Uc_BFu7c, "aSf_Uc_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu7i()
{
  {
    init_simple_test("aSf_Uc_BFu7i");
    static aSf_Uc_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Uc_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_Uc_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_Uc_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu7i(Test_aSf_Uc_BFu7i, "aSf_Uc_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu7ll()
{
  {
    init_simple_test("aSf_Uc_BFu7ll");
    static aSf_Uc_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Uc_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_Uc_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_Uc_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu7ll(Test_aSf_Uc_BFu7ll, "aSf_Uc_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu7s()
{
  {
    init_simple_test("aSf_Uc_BFu7s");
    static aSf_Uc_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Uc_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aSf_Uc_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aSf_Uc_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu7s(Test_aSf_Uc_BFu7s, "aSf_Uc_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu8c()
{
  {
    init_simple_test("aSf_Uc_BFu8c");
    static aSf_Uc_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Uc_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_Uc_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_Uc_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu8c(Test_aSf_Uc_BFu8c, "aSf_Uc_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu8i()
{
  {
    init_simple_test("aSf_Uc_BFu8i");
    static aSf_Uc_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Uc_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_Uc_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_Uc_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu8i(Test_aSf_Uc_BFu8i, "aSf_Uc_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu8ll()
{
  {
    init_simple_test("aSf_Uc_BFu8ll");
    static aSf_Uc_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Uc_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_Uc_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_Uc_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu8ll(Test_aSf_Uc_BFu8ll, "aSf_Uc_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu8s()
{
  {
    init_simple_test("aSf_Uc_BFu8s");
    static aSf_Uc_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Uc_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aSf_Uc_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aSf_Uc_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu8s(Test_aSf_Uc_BFu8s, "aSf_Uc_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu9i()
{
  {
    init_simple_test("aSf_Uc_BFu9i");
    static aSf_Uc_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Uc_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_Uc_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_Uc_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu9i(Test_aSf_Uc_BFu9i, "aSf_Uc_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu9ll()
{
  {
    init_simple_test("aSf_Uc_BFu9ll");
    static aSf_Uc_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Uc_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_Uc_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_Uc_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu9ll(Test_aSf_Uc_BFu9ll, "aSf_Uc_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_BFu9s()
{
  {
    init_simple_test("aSf_Uc_BFu9s");
    static aSf_Uc_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Uc_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_Uc_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aSf_Uc_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aSf_Uc_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_Uc_BFu9s(Test_aSf_Uc_BFu9s, "aSf_Uc_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_C()
{
  {
    init_simple_test("aSf_Uc_C");
    aSf_Uc_C lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Uc_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_C)");
    check_field_offset(lv, v1, 0, "aSf_Uc_C.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_C.v2");
    check_field_offset(lv, v3, 2, "aSf_Uc_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_Uc_C(Test_aSf_Uc_C, "aSf_Uc_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_D()
{
  {
    init_simple_test("aSf_Uc_D");
    aSf_Uc_D lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Uc_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_D)");
    check_field_offset(lv, v1, 0, "aSf_Uc_D.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_D.v2");
    check_field_offset(lv, v3, 2, "aSf_Uc_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_Uc_D(Test_aSf_Uc_D, "aSf_Uc_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_F()
{
  {
    init_simple_test("aSf_Uc_F");
    aSf_Uc_F lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Uc_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_F)");
    check_field_offset(lv, v1, 0, "aSf_Uc_F.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_F.v2");
    check_field_offset(lv, v3, 2, "aSf_Uc_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_Uc_F(Test_aSf_Uc_F, "aSf_Uc_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_I()
{
  {
    init_simple_test("aSf_Uc_I");
    aSf_Uc_I lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Uc_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_I)");
    check_field_offset(lv, v1, 0, "aSf_Uc_I.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_I.v2");
    check_field_offset(lv, v3, 2, "aSf_Uc_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_Uc_I(Test_aSf_Uc_I, "aSf_Uc_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_Ip()
{
  {
    init_simple_test("aSf_Uc_Ip");
    aSf_Uc_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Uc_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_Ip)");
    check_field_offset(lv, v1, 0, "aSf_Uc_Ip.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_Ip.v2");
    check_field_offset(lv, v3, 2, "aSf_Uc_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_Uc_Ip(Test_aSf_Uc_Ip, "aSf_Uc_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_L()
{
  {
    init_simple_test("aSf_Uc_L");
    aSf_Uc_L lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Uc_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_L)");
    check_field_offset(lv, v1, 0, "aSf_Uc_L.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_L.v2");
    check_field_offset(lv, v3, 2, "aSf_Uc_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_Uc_L(Test_aSf_Uc_L, "aSf_Uc_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_S()
{
  {
    init_simple_test("aSf_Uc_S");
    aSf_Uc_S lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Uc_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_S)");
    check_field_offset(lv, v1, 0, "aSf_Uc_S.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_S.v2");
    check_field_offset(lv, v3, 2, "aSf_Uc_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_Uc_S(Test_aSf_Uc_S, "aSf_Uc_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_Sf()
{
  {
    init_simple_test("aSf_Uc_Sf");
    aSf_Uc_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_Sf)");
    check_field_offset(lv, v1, 0, "aSf_Uc_Sf.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_Sf.v2");
    check_field_offset(lv, v3, 2, "aSf_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_Uc_Sf(Test_aSf_Uc_Sf, "aSf_Uc_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_Uc()
{
  {
    init_simple_test("aSf_Uc_Uc");
    aSf_Uc_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Uc_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_Uc)");
    check_field_offset(lv, v1, 0, "aSf_Uc_Uc.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_Uc.v2");
    check_field_offset(lv, v3, 2, "aSf_Uc_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_Uc_Uc(Test_aSf_Uc_Uc, "aSf_Uc_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_Ui()
{
  {
    init_simple_test("aSf_Uc_Ui");
    aSf_Uc_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Uc_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_Ui)");
    check_field_offset(lv, v1, 0, "aSf_Uc_Ui.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_Ui.v2");
    check_field_offset(lv, v3, 2, "aSf_Uc_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_Uc_Ui(Test_aSf_Uc_Ui, "aSf_Uc_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_Ul()
{
  {
    init_simple_test("aSf_Uc_Ul");
    aSf_Uc_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Uc_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_Ul)");
    check_field_offset(lv, v1, 0, "aSf_Uc_Ul.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_Ul.v2");
    check_field_offset(lv, v3, 2, "aSf_Uc_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_Uc_Ul(Test_aSf_Uc_Ul, "aSf_Uc_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_Us()
{
  {
    init_simple_test("aSf_Uc_Us");
    aSf_Uc_Us lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Uc_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_Us)");
    check_field_offset(lv, v1, 0, "aSf_Uc_Us.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_Us.v2");
    check_field_offset(lv, v3, 2, "aSf_Uc_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_Uc_Us(Test_aSf_Uc_Us, "aSf_Uc_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Uc_Vp()
{
  {
    init_simple_test("aSf_Uc_Vp");
    aSf_Uc_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Uc_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Uc_Vp)");
    check_field_offset(lv, v1, 0, "aSf_Uc_Vp.v1");
    check_field_offset(lv, v2, 1, "aSf_Uc_Vp.v2");
    check_field_offset(lv, v3, 2, "aSf_Uc_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_Uc_Vp(Test_aSf_Uc_Vp, "aSf_Uc_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui()
{
  {
    init_simple_test("aSf_Ui");
    aSf_Ui lv;
    check2(sizeof(lv), 5, "sizeof(aSf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui)");
    check_field_offset(lv, v1, 0, "aSf_Ui.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui.v2");
  }
}
static Arrange_To_Call_Me vaSf_Ui(Test_aSf_Ui, "aSf_Ui", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu15i()
{
  {
    init_simple_test("aSf_Ui_BFu15i");
    static aSf_Ui_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Ui_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu15i.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aSf_Ui_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aSf_Ui_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu15i(Test_aSf_Ui_BFu15i, "aSf_Ui_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu15ll()
{
  {
    init_simple_test("aSf_Ui_BFu15ll");
    static aSf_Ui_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Ui_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu15ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aSf_Ui_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aSf_Ui_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu15ll(Test_aSf_Ui_BFu15ll, "aSf_Ui_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu15s()
{
  {
    init_simple_test("aSf_Ui_BFu15s");
    static aSf_Ui_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Ui_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu15s.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aSf_Ui_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aSf_Ui_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu15s(Test_aSf_Ui_BFu15s, "aSf_Ui_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu16i()
{
  {
    init_simple_test("aSf_Ui_BFu16i");
    static aSf_Ui_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Ui_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu16i.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aSf_Ui_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aSf_Ui_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu16i(Test_aSf_Ui_BFu16i, "aSf_Ui_BFu16i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu16ll()
{
  {
    init_simple_test("aSf_Ui_BFu16ll");
    static aSf_Ui_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Ui_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu16ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aSf_Ui_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aSf_Ui_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu16ll(Test_aSf_Ui_BFu16ll, "aSf_Ui_BFu16ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu16s()
{
  {
    init_simple_test("aSf_Ui_BFu16s");
    static aSf_Ui_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Ui_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu16s.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aSf_Ui_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aSf_Ui_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu16s(Test_aSf_Ui_BFu16s, "aSf_Ui_BFu16s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu17i()
{
  {
    init_simple_test("aSf_Ui_BFu17i");
    static aSf_Ui_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(aSf_Ui_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu17i.v2");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aSf_Ui_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aSf_Ui_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu17i(Test_aSf_Ui_BFu17i, "aSf_Ui_BFu17i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu17ll()
{
  {
    init_simple_test("aSf_Ui_BFu17ll");
    static aSf_Ui_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(aSf_Ui_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu17ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aSf_Ui_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aSf_Ui_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu17ll(Test_aSf_Ui_BFu17ll, "aSf_Ui_BFu17ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu1c()
{
  {
    init_simple_test("aSf_Ui_BFu1c");
    static aSf_Ui_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Ui_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu1c.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_Ui_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu1c(Test_aSf_Ui_BFu1c, "aSf_Ui_BFu1c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu1i()
{
  {
    init_simple_test("aSf_Ui_BFu1i");
    static aSf_Ui_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Ui_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu1i.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_Ui_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu1i(Test_aSf_Ui_BFu1i, "aSf_Ui_BFu1i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu1ll()
{
  {
    init_simple_test("aSf_Ui_BFu1ll");
    static aSf_Ui_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Ui_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu1ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_Ui_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu1ll(Test_aSf_Ui_BFu1ll, "aSf_Ui_BFu1ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu1s()
{
  {
    init_simple_test("aSf_Ui_BFu1s");
    static aSf_Ui_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Ui_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu1s.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aSf_Ui_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu1s(Test_aSf_Ui_BFu1s, "aSf_Ui_BFu1s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu31i()
{
  {
    init_simple_test("aSf_Ui_BFu31i");
    static aSf_Ui_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aSf_Ui_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu31i.v2");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aSf_Ui_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aSf_Ui_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu31i(Test_aSf_Ui_BFu31i, "aSf_Ui_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu31ll()
{
  {
    init_simple_test("aSf_Ui_BFu31ll");
    static aSf_Ui_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aSf_Ui_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu31ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aSf_Ui_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aSf_Ui_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu31ll(Test_aSf_Ui_BFu31ll, "aSf_Ui_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu32i()
{
  {
    init_simple_test("aSf_Ui_BFu32i");
    static aSf_Ui_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aSf_Ui_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu32i.v2");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aSf_Ui_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aSf_Ui_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu32i(Test_aSf_Ui_BFu32i, "aSf_Ui_BFu32i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu32ll()
{
  {
    init_simple_test("aSf_Ui_BFu32ll");
    static aSf_Ui_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aSf_Ui_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu32ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aSf_Ui_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aSf_Ui_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu32ll(Test_aSf_Ui_BFu32ll, "aSf_Ui_BFu32ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu33()
{
  {
    init_simple_test("aSf_Ui_BFu33");
    static aSf_Ui_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Ui_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu33.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu33.v2");
    set_bf_and_test(lv, v3, 5, 0, 33, 1, "aSf_Ui_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, hide_ull(1LL<<32), "aSf_Ui_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu33(Test_aSf_Ui_BFu33, "aSf_Ui_BFu33", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu7c()
{
  {
    init_simple_test("aSf_Ui_BFu7c");
    static aSf_Ui_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Ui_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu7c.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_Ui_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_Ui_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu7c(Test_aSf_Ui_BFu7c, "aSf_Ui_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu7i()
{
  {
    init_simple_test("aSf_Ui_BFu7i");
    static aSf_Ui_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Ui_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu7i.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_Ui_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_Ui_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu7i(Test_aSf_Ui_BFu7i, "aSf_Ui_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu7ll()
{
  {
    init_simple_test("aSf_Ui_BFu7ll");
    static aSf_Ui_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Ui_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu7ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_Ui_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_Ui_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu7ll(Test_aSf_Ui_BFu7ll, "aSf_Ui_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu7s()
{
  {
    init_simple_test("aSf_Ui_BFu7s");
    static aSf_Ui_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Ui_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu7s.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aSf_Ui_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aSf_Ui_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu7s(Test_aSf_Ui_BFu7s, "aSf_Ui_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu8c()
{
  {
    init_simple_test("aSf_Ui_BFu8c");
    static aSf_Ui_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Ui_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu8c.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_Ui_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_Ui_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu8c(Test_aSf_Ui_BFu8c, "aSf_Ui_BFu8c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu8i()
{
  {
    init_simple_test("aSf_Ui_BFu8i");
    static aSf_Ui_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Ui_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu8i.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_Ui_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_Ui_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu8i(Test_aSf_Ui_BFu8i, "aSf_Ui_BFu8i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu8ll()
{
  {
    init_simple_test("aSf_Ui_BFu8ll");
    static aSf_Ui_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Ui_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu8ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_Ui_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_Ui_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu8ll(Test_aSf_Ui_BFu8ll, "aSf_Ui_BFu8ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu8s()
{
  {
    init_simple_test("aSf_Ui_BFu8s");
    static aSf_Ui_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Ui_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu8s.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aSf_Ui_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aSf_Ui_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu8s(Test_aSf_Ui_BFu8s, "aSf_Ui_BFu8s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu9i()
{
  {
    init_simple_test("aSf_Ui_BFu9i");
    static aSf_Ui_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Ui_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu9i.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aSf_Ui_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aSf_Ui_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu9i(Test_aSf_Ui_BFu9i, "aSf_Ui_BFu9i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu9ll()
{
  {
    init_simple_test("aSf_Ui_BFu9ll");
    static aSf_Ui_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Ui_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu9ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aSf_Ui_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aSf_Ui_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu9ll(Test_aSf_Ui_BFu9ll, "aSf_Ui_BFu9ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_BFu9s()
{
  {
    init_simple_test("aSf_Ui_BFu9s");
    static aSf_Ui_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Ui_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_Ui_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_BFu9s.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aSf_Ui_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aSf_Ui_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_Ui_BFu9s(Test_aSf_Ui_BFu9s, "aSf_Ui_BFu9s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_C()
{
  {
    init_simple_test("aSf_Ui_C");
    aSf_Ui_C lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Ui_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_C)");
    check_field_offset(lv, v1, 0, "aSf_Ui_C.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_C.v2");
    check_field_offset(lv, v3, 5, "aSf_Ui_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ui_C(Test_aSf_Ui_C, "aSf_Ui_C", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_D()
{
  {
    init_simple_test("aSf_Ui_D");
    aSf_Ui_D lv;
    check2(sizeof(lv), 13, "sizeof(aSf_Ui_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_D)");
    check_field_offset(lv, v1, 0, "aSf_Ui_D.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_D.v2");
    check_field_offset(lv, v3, 5, "aSf_Ui_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ui_D(Test_aSf_Ui_D, "aSf_Ui_D", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_F()
{
  {
    init_simple_test("aSf_Ui_F");
    aSf_Ui_F lv;
    check2(sizeof(lv), 9, "sizeof(aSf_Ui_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_F)");
    check_field_offset(lv, v1, 0, "aSf_Ui_F.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_F.v2");
    check_field_offset(lv, v3, 5, "aSf_Ui_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ui_F(Test_aSf_Ui_F, "aSf_Ui_F", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_I()
{
  {
    init_simple_test("aSf_Ui_I");
    aSf_Ui_I lv;
    check2(sizeof(lv), 9, "sizeof(aSf_Ui_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_I)");
    check_field_offset(lv, v1, 0, "aSf_Ui_I.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_I.v2");
    check_field_offset(lv, v3, 5, "aSf_Ui_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ui_I(Test_aSf_Ui_I, "aSf_Ui_I", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_Ip()
{
  {
    init_simple_test("aSf_Ui_Ip");
    aSf_Ui_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_Ui_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_Ip)");
    check_field_offset(lv, v1, 0, "aSf_Ui_Ip.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_Ip.v2");
    check_field_offset(lv, v3, 5, "aSf_Ui_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ui_Ip(Test_aSf_Ui_Ip, "aSf_Ui_Ip", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_L()
{
  {
    init_simple_test("aSf_Ui_L");
    aSf_Ui_L lv;
    check2(sizeof(lv), 13, "sizeof(aSf_Ui_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_L)");
    check_field_offset(lv, v1, 0, "aSf_Ui_L.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_L.v2");
    check_field_offset(lv, v3, 5, "aSf_Ui_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ui_L(Test_aSf_Ui_L, "aSf_Ui_L", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_S()
{
  {
    init_simple_test("aSf_Ui_S");
    aSf_Ui_S lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Ui_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_S)");
    check_field_offset(lv, v1, 0, "aSf_Ui_S.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_S.v2");
    check_field_offset(lv, v3, 5, "aSf_Ui_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ui_S(Test_aSf_Ui_S, "aSf_Ui_S", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_Sf()
{
  {
    init_simple_test("aSf_Ui_Sf");
    aSf_Ui_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_Sf)");
    check_field_offset(lv, v1, 0, "aSf_Ui_Sf.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_Sf.v2");
    check_field_offset(lv, v3, 5, "aSf_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ui_Sf(Test_aSf_Ui_Sf, "aSf_Ui_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_Uc()
{
  {
    init_simple_test("aSf_Ui_Uc");
    aSf_Ui_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Ui_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_Uc)");
    check_field_offset(lv, v1, 0, "aSf_Ui_Uc.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_Uc.v2");
    check_field_offset(lv, v3, 5, "aSf_Ui_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ui_Uc(Test_aSf_Ui_Uc, "aSf_Ui_Uc", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_Ui()
{
  {
    init_simple_test("aSf_Ui_Ui");
    aSf_Ui_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aSf_Ui_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_Ui)");
    check_field_offset(lv, v1, 0, "aSf_Ui_Ui.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_Ui.v2");
    check_field_offset(lv, v3, 5, "aSf_Ui_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ui_Ui(Test_aSf_Ui_Ui, "aSf_Ui_Ui", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_Ul()
{
  {
    init_simple_test("aSf_Ui_Ul");
    aSf_Ui_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aSf_Ui_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_Ul)");
    check_field_offset(lv, v1, 0, "aSf_Ui_Ul.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_Ul.v2");
    check_field_offset(lv, v3, 5, "aSf_Ui_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ui_Ul(Test_aSf_Ui_Ul, "aSf_Ui_Ul", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_Us()
{
  {
    init_simple_test("aSf_Ui_Us");
    aSf_Ui_Us lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Ui_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_Us)");
    check_field_offset(lv, v1, 0, "aSf_Ui_Us.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_Us.v2");
    check_field_offset(lv, v3, 5, "aSf_Ui_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ui_Us(Test_aSf_Ui_Us, "aSf_Ui_Us", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ui_Vp()
{
  {
    init_simple_test("aSf_Ui_Vp");
    aSf_Ui_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_Ui_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ui_Vp)");
    check_field_offset(lv, v1, 0, "aSf_Ui_Vp.v1");
    check_field_offset(lv, v2, 1, "aSf_Ui_Vp.v2");
    check_field_offset(lv, v3, 5, "aSf_Ui_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ui_Vp(Test_aSf_Ui_Vp, "aSf_Ui_Vp", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul()
{
  {
    init_simple_test("aSf_Ul");
    aSf_Ul lv;
    check2(sizeof(lv), 9, "sizeof(aSf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul)");
    check_field_offset(lv, v1, 0, "aSf_Ul.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul.v2");
  }
}
static Arrange_To_Call_Me vaSf_Ul(Test_aSf_Ul, "aSf_Ul", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu15i()
{
  {
    init_simple_test("aSf_Ul_BFu15i");
    static aSf_Ul_BFu15i lv;
    check2(sizeof(lv), 11, "sizeof(aSf_Ul_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu15i.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aSf_Ul_BFu15i");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aSf_Ul_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu15i(Test_aSf_Ul_BFu15i, "aSf_Ul_BFu15i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu15ll()
{
  {
    init_simple_test("aSf_Ul_BFu15ll");
    static aSf_Ul_BFu15ll lv;
    check2(sizeof(lv), 11, "sizeof(aSf_Ul_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu15ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aSf_Ul_BFu15ll");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aSf_Ul_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu15ll(Test_aSf_Ul_BFu15ll, "aSf_Ul_BFu15ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu15s()
{
  {
    init_simple_test("aSf_Ul_BFu15s");
    static aSf_Ul_BFu15s lv;
    check2(sizeof(lv), 11, "sizeof(aSf_Ul_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu15s.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aSf_Ul_BFu15s");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aSf_Ul_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu15s(Test_aSf_Ul_BFu15s, "aSf_Ul_BFu15s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu16i()
{
  {
    init_simple_test("aSf_Ul_BFu16i");
    static aSf_Ul_BFu16i lv;
    check2(sizeof(lv), 11, "sizeof(aSf_Ul_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu16i.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aSf_Ul_BFu16i");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aSf_Ul_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu16i(Test_aSf_Ul_BFu16i, "aSf_Ul_BFu16i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu16ll()
{
  {
    init_simple_test("aSf_Ul_BFu16ll");
    static aSf_Ul_BFu16ll lv;
    check2(sizeof(lv), 11, "sizeof(aSf_Ul_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu16ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aSf_Ul_BFu16ll");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aSf_Ul_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu16ll(Test_aSf_Ul_BFu16ll, "aSf_Ul_BFu16ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu16s()
{
  {
    init_simple_test("aSf_Ul_BFu16s");
    static aSf_Ul_BFu16s lv;
    check2(sizeof(lv), 11, "sizeof(aSf_Ul_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu16s.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aSf_Ul_BFu16s");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aSf_Ul_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu16s(Test_aSf_Ul_BFu16s, "aSf_Ul_BFu16s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu17i()
{
  {
    init_simple_test("aSf_Ul_BFu17i");
    static aSf_Ul_BFu17i lv;
    check2(sizeof(lv), 12, "sizeof(aSf_Ul_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu17i.v2");
    set_bf_and_test(lv, v3, 9, 0, 17, 1, "aSf_Ul_BFu17i");
    set_bf_and_test(lv, v3, 9, 0, 17, hide_ull(1LL<<16), "aSf_Ul_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu17i(Test_aSf_Ul_BFu17i, "aSf_Ul_BFu17i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu17ll()
{
  {
    init_simple_test("aSf_Ul_BFu17ll");
    static aSf_Ul_BFu17ll lv;
    check2(sizeof(lv), 12, "sizeof(aSf_Ul_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu17ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 17, 1, "aSf_Ul_BFu17ll");
    set_bf_and_test(lv, v3, 9, 0, 17, hide_ull(1LL<<16), "aSf_Ul_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu17ll(Test_aSf_Ul_BFu17ll, "aSf_Ul_BFu17ll", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu1c()
{
  {
    init_simple_test("aSf_Ul_BFu1c");
    static aSf_Ul_BFu1c lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Ul_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu1c.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aSf_Ul_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu1c(Test_aSf_Ul_BFu1c, "aSf_Ul_BFu1c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu1i()
{
  {
    init_simple_test("aSf_Ul_BFu1i");
    static aSf_Ul_BFu1i lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Ul_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu1i.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aSf_Ul_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu1i(Test_aSf_Ul_BFu1i, "aSf_Ul_BFu1i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu1ll()
{
  {
    init_simple_test("aSf_Ul_BFu1ll");
    static aSf_Ul_BFu1ll lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Ul_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu1ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aSf_Ul_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu1ll(Test_aSf_Ul_BFu1ll, "aSf_Ul_BFu1ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu1s()
{
  {
    init_simple_test("aSf_Ul_BFu1s");
    static aSf_Ul_BFu1s lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Ul_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu1s.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aSf_Ul_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu1s(Test_aSf_Ul_BFu1s, "aSf_Ul_BFu1s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu31i()
{
  {
    init_simple_test("aSf_Ul_BFu31i");
    static aSf_Ul_BFu31i lv;
    check2(sizeof(lv), 13, "sizeof(aSf_Ul_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu31i.v2");
    set_bf_and_test(lv, v3, 9, 0, 31, 1, "aSf_Ul_BFu31i");
    set_bf_and_test(lv, v3, 9, 0, 31, hide_ull(1LL<<30), "aSf_Ul_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu31i(Test_aSf_Ul_BFu31i, "aSf_Ul_BFu31i", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu31ll()
{
  {
    init_simple_test("aSf_Ul_BFu31ll");
    static aSf_Ul_BFu31ll lv;
    check2(sizeof(lv), 13, "sizeof(aSf_Ul_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu31ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 31, 1, "aSf_Ul_BFu31ll");
    set_bf_and_test(lv, v3, 9, 0, 31, hide_ull(1LL<<30), "aSf_Ul_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu31ll(Test_aSf_Ul_BFu31ll, "aSf_Ul_BFu31ll", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu32i()
{
  {
    init_simple_test("aSf_Ul_BFu32i");
    static aSf_Ul_BFu32i lv;
    check2(sizeof(lv), 13, "sizeof(aSf_Ul_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu32i.v2");
    set_bf_and_test(lv, v3, 9, 0, 32, 1, "aSf_Ul_BFu32i");
    set_bf_and_test(lv, v3, 9, 0, 32, hide_ull(1LL<<31), "aSf_Ul_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu32i(Test_aSf_Ul_BFu32i, "aSf_Ul_BFu32i", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu32ll()
{
  {
    init_simple_test("aSf_Ul_BFu32ll");
    static aSf_Ul_BFu32ll lv;
    check2(sizeof(lv), 13, "sizeof(aSf_Ul_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu32ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 32, 1, "aSf_Ul_BFu32ll");
    set_bf_and_test(lv, v3, 9, 0, 32, hide_ull(1LL<<31), "aSf_Ul_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu32ll(Test_aSf_Ul_BFu32ll, "aSf_Ul_BFu32ll", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu33()
{
  {
    init_simple_test("aSf_Ul_BFu33");
    static aSf_Ul_BFu33 lv;
    check2(sizeof(lv), 14, "sizeof(aSf_Ul_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu33.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu33.v2");
    set_bf_and_test(lv, v3, 9, 0, 33, 1, "aSf_Ul_BFu33");
    set_bf_and_test(lv, v3, 9, 0, 33, hide_ull(1LL<<32), "aSf_Ul_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu33(Test_aSf_Ul_BFu33, "aSf_Ul_BFu33", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu7c()
{
  {
    init_simple_test("aSf_Ul_BFu7c");
    static aSf_Ul_BFu7c lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Ul_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu7c.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aSf_Ul_BFu7c");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aSf_Ul_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu7c(Test_aSf_Ul_BFu7c, "aSf_Ul_BFu7c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu7i()
{
  {
    init_simple_test("aSf_Ul_BFu7i");
    static aSf_Ul_BFu7i lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Ul_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu7i.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aSf_Ul_BFu7i");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aSf_Ul_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu7i(Test_aSf_Ul_BFu7i, "aSf_Ul_BFu7i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu7ll()
{
  {
    init_simple_test("aSf_Ul_BFu7ll");
    static aSf_Ul_BFu7ll lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Ul_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu7ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aSf_Ul_BFu7ll");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aSf_Ul_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu7ll(Test_aSf_Ul_BFu7ll, "aSf_Ul_BFu7ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu7s()
{
  {
    init_simple_test("aSf_Ul_BFu7s");
    static aSf_Ul_BFu7s lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Ul_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu7s.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aSf_Ul_BFu7s");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aSf_Ul_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu7s(Test_aSf_Ul_BFu7s, "aSf_Ul_BFu7s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu8c()
{
  {
    init_simple_test("aSf_Ul_BFu8c");
    static aSf_Ul_BFu8c lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Ul_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu8c.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aSf_Ul_BFu8c");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aSf_Ul_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu8c(Test_aSf_Ul_BFu8c, "aSf_Ul_BFu8c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu8i()
{
  {
    init_simple_test("aSf_Ul_BFu8i");
    static aSf_Ul_BFu8i lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Ul_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu8i.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aSf_Ul_BFu8i");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aSf_Ul_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu8i(Test_aSf_Ul_BFu8i, "aSf_Ul_BFu8i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu8ll()
{
  {
    init_simple_test("aSf_Ul_BFu8ll");
    static aSf_Ul_BFu8ll lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Ul_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu8ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aSf_Ul_BFu8ll");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aSf_Ul_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu8ll(Test_aSf_Ul_BFu8ll, "aSf_Ul_BFu8ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu8s()
{
  {
    init_simple_test("aSf_Ul_BFu8s");
    static aSf_Ul_BFu8s lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Ul_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu8s.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aSf_Ul_BFu8s");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aSf_Ul_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu8s(Test_aSf_Ul_BFu8s, "aSf_Ul_BFu8s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu9i()
{
  {
    init_simple_test("aSf_Ul_BFu9i");
    static aSf_Ul_BFu9i lv;
    check2(sizeof(lv), 11, "sizeof(aSf_Ul_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu9i.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aSf_Ul_BFu9i");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aSf_Ul_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu9i(Test_aSf_Ul_BFu9i, "aSf_Ul_BFu9i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu9ll()
{
  {
    init_simple_test("aSf_Ul_BFu9ll");
    static aSf_Ul_BFu9ll lv;
    check2(sizeof(lv), 11, "sizeof(aSf_Ul_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu9ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aSf_Ul_BFu9ll");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aSf_Ul_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu9ll(Test_aSf_Ul_BFu9ll, "aSf_Ul_BFu9ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_BFu9s()
{
  {
    init_simple_test("aSf_Ul_BFu9s");
    static aSf_Ul_BFu9s lv;
    check2(sizeof(lv), 11, "sizeof(aSf_Ul_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_Ul_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_BFu9s.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aSf_Ul_BFu9s");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aSf_Ul_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_Ul_BFu9s(Test_aSf_Ul_BFu9s, "aSf_Ul_BFu9s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_C()
{
  {
    init_simple_test("aSf_Ul_C");
    aSf_Ul_C lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Ul_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_C)");
    check_field_offset(lv, v1, 0, "aSf_Ul_C.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_C.v2");
    check_field_offset(lv, v3, 9, "aSf_Ul_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ul_C(Test_aSf_Ul_C, "aSf_Ul_C", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_D()
{
  {
    init_simple_test("aSf_Ul_D");
    aSf_Ul_D lv;
    check2(sizeof(lv), 17, "sizeof(aSf_Ul_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_D)");
    check_field_offset(lv, v1, 0, "aSf_Ul_D.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_D.v2");
    check_field_offset(lv, v3, 9, "aSf_Ul_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ul_D(Test_aSf_Ul_D, "aSf_Ul_D", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_F()
{
  {
    init_simple_test("aSf_Ul_F");
    aSf_Ul_F lv;
    check2(sizeof(lv), 13, "sizeof(aSf_Ul_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_F)");
    check_field_offset(lv, v1, 0, "aSf_Ul_F.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_F.v2");
    check_field_offset(lv, v3, 9, "aSf_Ul_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ul_F(Test_aSf_Ul_F, "aSf_Ul_F", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_I()
{
  {
    init_simple_test("aSf_Ul_I");
    aSf_Ul_I lv;
    check2(sizeof(lv), 13, "sizeof(aSf_Ul_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_I)");
    check_field_offset(lv, v1, 0, "aSf_Ul_I.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_I.v2");
    check_field_offset(lv, v3, 9, "aSf_Ul_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ul_I(Test_aSf_Ul_I, "aSf_Ul_I", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_Ip()
{
  {
    init_simple_test("aSf_Ul_Ip");
    aSf_Ul_Ip lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aSf_Ul_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_Ip)");
    check_field_offset(lv, v1, 0, "aSf_Ul_Ip.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_Ip.v2");
    check_field_offset(lv, v3, 9, "aSf_Ul_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ul_Ip(Test_aSf_Ul_Ip, "aSf_Ul_Ip", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_L()
{
  {
    init_simple_test("aSf_Ul_L");
    aSf_Ul_L lv;
    check2(sizeof(lv), 17, "sizeof(aSf_Ul_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_L)");
    check_field_offset(lv, v1, 0, "aSf_Ul_L.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_L.v2");
    check_field_offset(lv, v3, 9, "aSf_Ul_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ul_L(Test_aSf_Ul_L, "aSf_Ul_L", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_S()
{
  {
    init_simple_test("aSf_Ul_S");
    aSf_Ul_S lv;
    check2(sizeof(lv), 11, "sizeof(aSf_Ul_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_S)");
    check_field_offset(lv, v1, 0, "aSf_Ul_S.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_S.v2");
    check_field_offset(lv, v3, 9, "aSf_Ul_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ul_S(Test_aSf_Ul_S, "aSf_Ul_S", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_Sf()
{
  {
    init_simple_test("aSf_Ul_Sf");
    aSf_Ul_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_Sf)");
    check_field_offset(lv, v1, 0, "aSf_Ul_Sf.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_Sf.v2");
    check_field_offset(lv, v3, 9, "aSf_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ul_Sf(Test_aSf_Ul_Sf, "aSf_Ul_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_Uc()
{
  {
    init_simple_test("aSf_Ul_Uc");
    aSf_Ul_Uc lv;
    check2(sizeof(lv), 10, "sizeof(aSf_Ul_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_Uc)");
    check_field_offset(lv, v1, 0, "aSf_Ul_Uc.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_Uc.v2");
    check_field_offset(lv, v3, 9, "aSf_Ul_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ul_Uc(Test_aSf_Ul_Uc, "aSf_Ul_Uc", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_Ui()
{
  {
    init_simple_test("aSf_Ul_Ui");
    aSf_Ul_Ui lv;
    check2(sizeof(lv), 13, "sizeof(aSf_Ul_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_Ui)");
    check_field_offset(lv, v1, 0, "aSf_Ul_Ui.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_Ui.v2");
    check_field_offset(lv, v3, 9, "aSf_Ul_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ul_Ui(Test_aSf_Ul_Ui, "aSf_Ul_Ui", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_Ul()
{
  {
    init_simple_test("aSf_Ul_Ul");
    aSf_Ul_Ul lv;
    check2(sizeof(lv), 17, "sizeof(aSf_Ul_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_Ul)");
    check_field_offset(lv, v1, 0, "aSf_Ul_Ul.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_Ul.v2");
    check_field_offset(lv, v3, 9, "aSf_Ul_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ul_Ul(Test_aSf_Ul_Ul, "aSf_Ul_Ul", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_Us()
{
  {
    init_simple_test("aSf_Ul_Us");
    aSf_Ul_Us lv;
    check2(sizeof(lv), 11, "sizeof(aSf_Ul_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_Us)");
    check_field_offset(lv, v1, 0, "aSf_Ul_Us.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_Us.v2");
    check_field_offset(lv, v3, 9, "aSf_Ul_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ul_Us(Test_aSf_Ul_Us, "aSf_Ul_Us", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Ul_Vp()
{
  {
    init_simple_test("aSf_Ul_Vp");
    aSf_Ul_Vp lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aSf_Ul_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Ul_Vp)");
    check_field_offset(lv, v1, 0, "aSf_Ul_Vp.v1");
    check_field_offset(lv, v2, 1, "aSf_Ul_Vp.v2");
    check_field_offset(lv, v3, 9, "aSf_Ul_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_Ul_Vp(Test_aSf_Ul_Vp, "aSf_Ul_Vp", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us()
{
  {
    init_simple_test("aSf_Us");
    aSf_Us lv;
    check2(sizeof(lv), 3, "sizeof(aSf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us)");
    check_field_offset(lv, v1, 0, "aSf_Us.v1");
    check_field_offset(lv, v2, 1, "aSf_Us.v2");
  }
}
static Arrange_To_Call_Me vaSf_Us(Test_aSf_Us, "aSf_Us", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu15i()
{
  {
    init_simple_test("aSf_Us_BFu15i");
    static aSf_Us_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_Us_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu15i.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aSf_Us_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aSf_Us_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu15i(Test_aSf_Us_BFu15i, "aSf_Us_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu15ll()
{
  {
    init_simple_test("aSf_Us_BFu15ll");
    static aSf_Us_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_Us_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu15ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aSf_Us_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aSf_Us_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu15ll(Test_aSf_Us_BFu15ll, "aSf_Us_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu15s()
{
  {
    init_simple_test("aSf_Us_BFu15s");
    static aSf_Us_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_Us_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu15s.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aSf_Us_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aSf_Us_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu15s(Test_aSf_Us_BFu15s, "aSf_Us_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu16i()
{
  {
    init_simple_test("aSf_Us_BFu16i");
    static aSf_Us_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_Us_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu16i.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aSf_Us_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aSf_Us_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu16i(Test_aSf_Us_BFu16i, "aSf_Us_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu16ll()
{
  {
    init_simple_test("aSf_Us_BFu16ll");
    static aSf_Us_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_Us_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu16ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aSf_Us_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aSf_Us_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu16ll(Test_aSf_Us_BFu16ll, "aSf_Us_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu16s()
{
  {
    init_simple_test("aSf_Us_BFu16s");
    static aSf_Us_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_Us_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu16s.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aSf_Us_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aSf_Us_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu16s(Test_aSf_Us_BFu16s, "aSf_Us_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu17i()
{
  {
    init_simple_test("aSf_Us_BFu17i");
    static aSf_Us_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Us_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu17i.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aSf_Us_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aSf_Us_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu17i(Test_aSf_Us_BFu17i, "aSf_Us_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu17ll()
{
  {
    init_simple_test("aSf_Us_BFu17ll");
    static aSf_Us_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aSf_Us_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu17ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aSf_Us_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aSf_Us_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu17ll(Test_aSf_Us_BFu17ll, "aSf_Us_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu1c()
{
  {
    init_simple_test("aSf_Us_BFu1c");
    static aSf_Us_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Us_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu1c.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_Us_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu1c(Test_aSf_Us_BFu1c, "aSf_Us_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu1i()
{
  {
    init_simple_test("aSf_Us_BFu1i");
    static aSf_Us_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Us_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu1i.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_Us_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu1i(Test_aSf_Us_BFu1i, "aSf_Us_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu1ll()
{
  {
    init_simple_test("aSf_Us_BFu1ll");
    static aSf_Us_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Us_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu1ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_Us_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu1ll(Test_aSf_Us_BFu1ll, "aSf_Us_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu1s()
{
  {
    init_simple_test("aSf_Us_BFu1s");
    static aSf_Us_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Us_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu1s.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aSf_Us_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu1s(Test_aSf_Us_BFu1s, "aSf_Us_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu31i()
{
  {
    init_simple_test("aSf_Us_BFu31i");
    static aSf_Us_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Us_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu31i.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aSf_Us_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aSf_Us_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu31i(Test_aSf_Us_BFu31i, "aSf_Us_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu31ll()
{
  {
    init_simple_test("aSf_Us_BFu31ll");
    static aSf_Us_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Us_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu31ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aSf_Us_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aSf_Us_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu31ll(Test_aSf_Us_BFu31ll, "aSf_Us_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu32i()
{
  {
    init_simple_test("aSf_Us_BFu32i");
    static aSf_Us_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Us_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu32i.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aSf_Us_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aSf_Us_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu32i(Test_aSf_Us_BFu32i, "aSf_Us_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu32ll()
{
  {
    init_simple_test("aSf_Us_BFu32ll");
    static aSf_Us_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Us_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu32ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aSf_Us_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aSf_Us_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu32ll(Test_aSf_Us_BFu32ll, "aSf_Us_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu33()
{
  {
    init_simple_test("aSf_Us_BFu33");
    static aSf_Us_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aSf_Us_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu33.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu33.v2");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aSf_Us_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aSf_Us_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu33(Test_aSf_Us_BFu33, "aSf_Us_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu7c()
{
  {
    init_simple_test("aSf_Us_BFu7c");
    static aSf_Us_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Us_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu7c.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_Us_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_Us_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu7c(Test_aSf_Us_BFu7c, "aSf_Us_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu7i()
{
  {
    init_simple_test("aSf_Us_BFu7i");
    static aSf_Us_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Us_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu7i.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_Us_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_Us_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu7i(Test_aSf_Us_BFu7i, "aSf_Us_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu7ll()
{
  {
    init_simple_test("aSf_Us_BFu7ll");
    static aSf_Us_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Us_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu7ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_Us_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_Us_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu7ll(Test_aSf_Us_BFu7ll, "aSf_Us_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu7s()
{
  {
    init_simple_test("aSf_Us_BFu7s");
    static aSf_Us_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Us_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu7s.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aSf_Us_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aSf_Us_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu7s(Test_aSf_Us_BFu7s, "aSf_Us_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu8c()
{
  {
    init_simple_test("aSf_Us_BFu8c");
    static aSf_Us_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Us_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu8c.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_Us_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_Us_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu8c(Test_aSf_Us_BFu8c, "aSf_Us_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu8i()
{
  {
    init_simple_test("aSf_Us_BFu8i");
    static aSf_Us_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Us_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu8i.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_Us_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_Us_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu8i(Test_aSf_Us_BFu8i, "aSf_Us_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu8ll()
{
  {
    init_simple_test("aSf_Us_BFu8ll");
    static aSf_Us_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Us_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu8ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_Us_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_Us_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu8ll(Test_aSf_Us_BFu8ll, "aSf_Us_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu8s()
{
  {
    init_simple_test("aSf_Us_BFu8s");
    static aSf_Us_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Us_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu8s.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aSf_Us_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aSf_Us_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu8s(Test_aSf_Us_BFu8s, "aSf_Us_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu9i()
{
  {
    init_simple_test("aSf_Us_BFu9i");
    static aSf_Us_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aSf_Us_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu9i.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aSf_Us_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aSf_Us_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu9i(Test_aSf_Us_BFu9i, "aSf_Us_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu9ll()
{
  {
    init_simple_test("aSf_Us_BFu9ll");
    static aSf_Us_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aSf_Us_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu9ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aSf_Us_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aSf_Us_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu9ll(Test_aSf_Us_BFu9ll, "aSf_Us_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_BFu9s()
{
  {
    init_simple_test("aSf_Us_BFu9s");
    static aSf_Us_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aSf_Us_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_Us_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_BFu9s.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aSf_Us_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aSf_Us_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_Us_BFu9s(Test_aSf_Us_BFu9s, "aSf_Us_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_C()
{
  {
    init_simple_test("aSf_Us_C");
    aSf_Us_C lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Us_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_C)");
    check_field_offset(lv, v1, 0, "aSf_Us_C.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_C.v2");
    check_field_offset(lv, v3, 3, "aSf_Us_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_Us_C(Test_aSf_Us_C, "aSf_Us_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_D()
{
  {
    init_simple_test("aSf_Us_D");
    aSf_Us_D lv;
    check2(sizeof(lv), 11, "sizeof(aSf_Us_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_D)");
    check_field_offset(lv, v1, 0, "aSf_Us_D.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_D.v2");
    check_field_offset(lv, v3, 3, "aSf_Us_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_Us_D(Test_aSf_Us_D, "aSf_Us_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_F()
{
  {
    init_simple_test("aSf_Us_F");
    aSf_Us_F lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Us_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_F)");
    check_field_offset(lv, v1, 0, "aSf_Us_F.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_F.v2");
    check_field_offset(lv, v3, 3, "aSf_Us_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_Us_F(Test_aSf_Us_F, "aSf_Us_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_I()
{
  {
    init_simple_test("aSf_Us_I");
    aSf_Us_I lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Us_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_I)");
    check_field_offset(lv, v1, 0, "aSf_Us_I.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_I.v2");
    check_field_offset(lv, v3, 3, "aSf_Us_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_Us_I(Test_aSf_Us_I, "aSf_Us_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_Ip()
{
  {
    init_simple_test("aSf_Us_Ip");
    aSf_Us_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Us_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_Ip)");
    check_field_offset(lv, v1, 0, "aSf_Us_Ip.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_Ip.v2");
    check_field_offset(lv, v3, 3, "aSf_Us_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_Us_Ip(Test_aSf_Us_Ip, "aSf_Us_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_L()
{
  {
    init_simple_test("aSf_Us_L");
    aSf_Us_L lv;
    check2(sizeof(lv), 11, "sizeof(aSf_Us_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_L)");
    check_field_offset(lv, v1, 0, "aSf_Us_L.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_L.v2");
    check_field_offset(lv, v3, 3, "aSf_Us_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_Us_L(Test_aSf_Us_L, "aSf_Us_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_S()
{
  {
    init_simple_test("aSf_Us_S");
    aSf_Us_S lv;
    check2(sizeof(lv), 5, "sizeof(aSf_Us_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_S)");
    check_field_offset(lv, v1, 0, "aSf_Us_S.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_S.v2");
    check_field_offset(lv, v3, 3, "aSf_Us_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_Us_S(Test_aSf_Us_S, "aSf_Us_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_Sf()
{
  {
    init_simple_test("aSf_Us_Sf");
    aSf_Us_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_Sf)");
    check_field_offset(lv, v1, 0, "aSf_Us_Sf.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_Sf.v2");
    check_field_offset(lv, v3, 3, "aSf_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_Us_Sf(Test_aSf_Us_Sf, "aSf_Us_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_Uc()
{
  {
    init_simple_test("aSf_Us_Uc");
    aSf_Us_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aSf_Us_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_Uc)");
    check_field_offset(lv, v1, 0, "aSf_Us_Uc.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_Uc.v2");
    check_field_offset(lv, v3, 3, "aSf_Us_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_Us_Uc(Test_aSf_Us_Uc, "aSf_Us_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_Ui()
{
  {
    init_simple_test("aSf_Us_Ui");
    aSf_Us_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aSf_Us_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_Ui)");
    check_field_offset(lv, v1, 0, "aSf_Us_Ui.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_Ui.v2");
    check_field_offset(lv, v3, 3, "aSf_Us_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_Us_Ui(Test_aSf_Us_Ui, "aSf_Us_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_Ul()
{
  {
    init_simple_test("aSf_Us_Ul");
    aSf_Us_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aSf_Us_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_Ul)");
    check_field_offset(lv, v1, 0, "aSf_Us_Ul.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_Ul.v2");
    check_field_offset(lv, v3, 3, "aSf_Us_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_Us_Ul(Test_aSf_Us_Ul, "aSf_Us_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_Us()
{
  {
    init_simple_test("aSf_Us_Us");
    aSf_Us_Us lv;
    check2(sizeof(lv), 5, "sizeof(aSf_Us_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_Us)");
    check_field_offset(lv, v1, 0, "aSf_Us_Us.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_Us.v2");
    check_field_offset(lv, v3, 3, "aSf_Us_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_Us_Us(Test_aSf_Us_Us, "aSf_Us_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Us_Vp()
{
  {
    init_simple_test("aSf_Us_Vp");
    aSf_Us_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Us_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Us_Vp)");
    check_field_offset(lv, v1, 0, "aSf_Us_Vp.v1");
    check_field_offset(lv, v2, 1, "aSf_Us_Vp.v2");
    check_field_offset(lv, v3, 3, "aSf_Us_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_Us_Vp(Test_aSf_Us_Vp, "aSf_Us_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp()
{
  {
    init_simple_test("aSf_Vp");
    aSf_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aSf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp)");
    check_field_offset(lv, v1, 0, "aSf_Vp.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp.v2");
  }
}
static Arrange_To_Call_Me vaSf_Vp(Test_aSf_Vp, "aSf_Vp", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu15i()
{
  {
    init_simple_test("aSf_Vp_BFu15i");
    static aSf_Vp_BFu15i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Vp_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu15i)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu15i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, 1, "aSf_Vp_BFu15i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, hide_ull(1LL<<14), "aSf_Vp_BFu15i");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu15i(Test_aSf_Vp_BFu15i, "aSf_Vp_BFu15i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu15ll()
{
  {
    init_simple_test("aSf_Vp_BFu15ll");
    static aSf_Vp_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Vp_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu15ll)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu15ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, 1, "aSf_Vp_BFu15ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, hide_ull(1LL<<14), "aSf_Vp_BFu15ll");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu15ll(Test_aSf_Vp_BFu15ll, "aSf_Vp_BFu15ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu15s()
{
  {
    init_simple_test("aSf_Vp_BFu15s");
    static aSf_Vp_BFu15s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Vp_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu15s)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu15s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, 1, "aSf_Vp_BFu15s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, hide_ull(1LL<<14), "aSf_Vp_BFu15s");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu15s(Test_aSf_Vp_BFu15s, "aSf_Vp_BFu15s", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu16i()
{
  {
    init_simple_test("aSf_Vp_BFu16i");
    static aSf_Vp_BFu16i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Vp_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu16i)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu16i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, 1, "aSf_Vp_BFu16i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, hide_ull(1LL<<15), "aSf_Vp_BFu16i");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu16i(Test_aSf_Vp_BFu16i, "aSf_Vp_BFu16i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu16ll()
{
  {
    init_simple_test("aSf_Vp_BFu16ll");
    static aSf_Vp_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Vp_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu16ll)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu16ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, 1, "aSf_Vp_BFu16ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, hide_ull(1LL<<15), "aSf_Vp_BFu16ll");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu16ll(Test_aSf_Vp_BFu16ll, "aSf_Vp_BFu16ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu16s()
{
  {
    init_simple_test("aSf_Vp_BFu16s");
    static aSf_Vp_BFu16s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Vp_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu16s)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu16s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, 1, "aSf_Vp_BFu16s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, hide_ull(1LL<<15), "aSf_Vp_BFu16s");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu16s(Test_aSf_Vp_BFu16s, "aSf_Vp_BFu16s", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu17i()
{
  {
    init_simple_test("aSf_Vp_BFu17i");
    static aSf_Vp_BFu17i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aSf_Vp_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu17i)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu17i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, 1, "aSf_Vp_BFu17i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, hide_ull(1LL<<16), "aSf_Vp_BFu17i");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu17i(Test_aSf_Vp_BFu17i, "aSf_Vp_BFu17i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu17ll()
{
  {
    init_simple_test("aSf_Vp_BFu17ll");
    static aSf_Vp_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aSf_Vp_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu17ll)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu17ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, 1, "aSf_Vp_BFu17ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, hide_ull(1LL<<16), "aSf_Vp_BFu17ll");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu17ll(Test_aSf_Vp_BFu17ll, "aSf_Vp_BFu17ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu1c()
{
  {
    init_simple_test("aSf_Vp_BFu1c");
    static aSf_Vp_BFu1c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Vp_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu1c)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu1c.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aSf_Vp_BFu1c");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu1c(Test_aSf_Vp_BFu1c, "aSf_Vp_BFu1c", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu1i()
{
  {
    init_simple_test("aSf_Vp_BFu1i");
    static aSf_Vp_BFu1i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Vp_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu1i)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu1i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aSf_Vp_BFu1i");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu1i(Test_aSf_Vp_BFu1i, "aSf_Vp_BFu1i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu1ll()
{
  {
    init_simple_test("aSf_Vp_BFu1ll");
    static aSf_Vp_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Vp_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu1ll)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu1ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aSf_Vp_BFu1ll");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu1ll(Test_aSf_Vp_BFu1ll, "aSf_Vp_BFu1ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu1s()
{
  {
    init_simple_test("aSf_Vp_BFu1s");
    static aSf_Vp_BFu1s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Vp_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu1s)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu1s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aSf_Vp_BFu1s");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu1s(Test_aSf_Vp_BFu1s, "aSf_Vp_BFu1s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu31i()
{
  {
    init_simple_test("aSf_Vp_BFu31i");
    static aSf_Vp_BFu31i lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_Vp_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu31i)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu31i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, 1, "aSf_Vp_BFu31i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, hide_ull(1LL<<30), "aSf_Vp_BFu31i");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu31i(Test_aSf_Vp_BFu31i, "aSf_Vp_BFu31i", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu31ll()
{
  {
    init_simple_test("aSf_Vp_BFu31ll");
    static aSf_Vp_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_Vp_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu31ll)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu31ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, 1, "aSf_Vp_BFu31ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, hide_ull(1LL<<30), "aSf_Vp_BFu31ll");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu31ll(Test_aSf_Vp_BFu31ll, "aSf_Vp_BFu31ll", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu32i()
{
  {
    init_simple_test("aSf_Vp_BFu32i");
    static aSf_Vp_BFu32i lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_Vp_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu32i)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu32i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, 1, "aSf_Vp_BFu32i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, hide_ull(1LL<<31), "aSf_Vp_BFu32i");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu32i(Test_aSf_Vp_BFu32i, "aSf_Vp_BFu32i", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu32ll()
{
  {
    init_simple_test("aSf_Vp_BFu32ll");
    static aSf_Vp_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_Vp_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu32ll)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu32ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, 1, "aSf_Vp_BFu32ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, hide_ull(1LL<<31), "aSf_Vp_BFu32ll");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu32ll(Test_aSf_Vp_BFu32ll, "aSf_Vp_BFu32ll", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu33()
{
  {
    init_simple_test("aSf_Vp_BFu33");
    static aSf_Vp_BFu33 lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aSf_Vp_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu33)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu33.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu33.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 33, 1, "aSf_Vp_BFu33");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 33, hide_ull(1LL<<32), "aSf_Vp_BFu33");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu33(Test_aSf_Vp_BFu33, "aSf_Vp_BFu33", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu7c()
{
  {
    init_simple_test("aSf_Vp_BFu7c");
    static aSf_Vp_BFu7c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Vp_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu7c)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu7c.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aSf_Vp_BFu7c");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aSf_Vp_BFu7c");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu7c(Test_aSf_Vp_BFu7c, "aSf_Vp_BFu7c", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu7i()
{
  {
    init_simple_test("aSf_Vp_BFu7i");
    static aSf_Vp_BFu7i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Vp_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu7i)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu7i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aSf_Vp_BFu7i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aSf_Vp_BFu7i");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu7i(Test_aSf_Vp_BFu7i, "aSf_Vp_BFu7i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu7ll()
{
  {
    init_simple_test("aSf_Vp_BFu7ll");
    static aSf_Vp_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Vp_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu7ll)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu7ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aSf_Vp_BFu7ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aSf_Vp_BFu7ll");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu7ll(Test_aSf_Vp_BFu7ll, "aSf_Vp_BFu7ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu7s()
{
  {
    init_simple_test("aSf_Vp_BFu7s");
    static aSf_Vp_BFu7s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Vp_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu7s)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu7s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aSf_Vp_BFu7s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aSf_Vp_BFu7s");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu7s(Test_aSf_Vp_BFu7s, "aSf_Vp_BFu7s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu8c()
{
  {
    init_simple_test("aSf_Vp_BFu8c");
    static aSf_Vp_BFu8c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Vp_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu8c)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu8c.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aSf_Vp_BFu8c");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aSf_Vp_BFu8c");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu8c(Test_aSf_Vp_BFu8c, "aSf_Vp_BFu8c", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu8i()
{
  {
    init_simple_test("aSf_Vp_BFu8i");
    static aSf_Vp_BFu8i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Vp_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu8i)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu8i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aSf_Vp_BFu8i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aSf_Vp_BFu8i");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu8i(Test_aSf_Vp_BFu8i, "aSf_Vp_BFu8i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu8ll()
{
  {
    init_simple_test("aSf_Vp_BFu8ll");
    static aSf_Vp_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Vp_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu8ll)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu8ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aSf_Vp_BFu8ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aSf_Vp_BFu8ll");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu8ll(Test_aSf_Vp_BFu8ll, "aSf_Vp_BFu8ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu8s()
{
  {
    init_simple_test("aSf_Vp_BFu8s");
    static aSf_Vp_BFu8s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Vp_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu8s)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu8s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aSf_Vp_BFu8s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aSf_Vp_BFu8s");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu8s(Test_aSf_Vp_BFu8s, "aSf_Vp_BFu8s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu9i()
{
  {
    init_simple_test("aSf_Vp_BFu9i");
    static aSf_Vp_BFu9i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Vp_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu9i)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu9i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, 1, "aSf_Vp_BFu9i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, hide_ull(1LL<<8), "aSf_Vp_BFu9i");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu9i(Test_aSf_Vp_BFu9i, "aSf_Vp_BFu9i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu9ll()
{
  {
    init_simple_test("aSf_Vp_BFu9ll");
    static aSf_Vp_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Vp_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu9ll)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu9ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, 1, "aSf_Vp_BFu9ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, hide_ull(1LL<<8), "aSf_Vp_BFu9ll");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu9ll(Test_aSf_Vp_BFu9ll, "aSf_Vp_BFu9ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_BFu9s()
{
  {
    init_simple_test("aSf_Vp_BFu9s");
    static aSf_Vp_BFu9s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Vp_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_BFu9s)");
    check_field_offset(lv, v1, 0, "aSf_Vp_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_BFu9s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, 1, "aSf_Vp_BFu9s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, hide_ull(1LL<<8), "aSf_Vp_BFu9s");
  }
}
static Arrange_To_Call_Me vaSf_Vp_BFu9s(Test_aSf_Vp_BFu9s, "aSf_Vp_BFu9s", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_C()
{
  {
    init_simple_test("aSf_Vp_C");
    aSf_Vp_C lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Vp_C)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_C)");
    check_field_offset(lv, v1, 0, "aSf_Vp_C.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_C.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Vp_C.v3");
  }
}
static Arrange_To_Call_Me vaSf_Vp_C(Test_aSf_Vp_C, "aSf_Vp_C", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_D()
{
  {
    init_simple_test("aSf_Vp_D");
    aSf_Vp_D lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aSf_Vp_D)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_D)");
    check_field_offset(lv, v1, 0, "aSf_Vp_D.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_D.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Vp_D.v3");
  }
}
static Arrange_To_Call_Me vaSf_Vp_D(Test_aSf_Vp_D, "aSf_Vp_D", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_F()
{
  {
    init_simple_test("aSf_Vp_F");
    aSf_Vp_F lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_Vp_F)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_F)");
    check_field_offset(lv, v1, 0, "aSf_Vp_F.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_F.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Vp_F.v3");
  }
}
static Arrange_To_Call_Me vaSf_Vp_F(Test_aSf_Vp_F, "aSf_Vp_F", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_I()
{
  {
    init_simple_test("aSf_Vp_I");
    aSf_Vp_I lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_Vp_I)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_I)");
    check_field_offset(lv, v1, 0, "aSf_Vp_I.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_I.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Vp_I.v3");
  }
}
static Arrange_To_Call_Me vaSf_Vp_I(Test_aSf_Vp_I, "aSf_Vp_I", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_Ip()
{
  {
    init_simple_test("aSf_Vp_Ip");
    aSf_Vp_Ip lv;
    check2(sizeof(lv), ABISELECT(17,9), "sizeof(aSf_Vp_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_Ip)");
    check_field_offset(lv, v1, 0, "aSf_Vp_Ip.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_Ip.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Vp_Ip.v3");
  }
}
static Arrange_To_Call_Me vaSf_Vp_Ip(Test_aSf_Vp_Ip, "aSf_Vp_Ip", ABISELECT(17,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_L()
{
  {
    init_simple_test("aSf_Vp_L");
    aSf_Vp_L lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aSf_Vp_L)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_L)");
    check_field_offset(lv, v1, 0, "aSf_Vp_L.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_L.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Vp_L.v3");
  }
}
static Arrange_To_Call_Me vaSf_Vp_L(Test_aSf_Vp_L, "aSf_Vp_L", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_S()
{
  {
    init_simple_test("aSf_Vp_S");
    aSf_Vp_S lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Vp_S)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_S)");
    check_field_offset(lv, v1, 0, "aSf_Vp_S.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_S.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Vp_S.v3");
  }
}
static Arrange_To_Call_Me vaSf_Vp_S(Test_aSf_Vp_S, "aSf_Vp_S", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_Sf()
{
  {
    init_simple_test("aSf_Vp_Sf");
    aSf_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_Sf)");
    check_field_offset(lv, v1, 0, "aSf_Vp_Sf.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vaSf_Vp_Sf(Test_aSf_Vp_Sf, "aSf_Vp_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_Uc()
{
  {
    init_simple_test("aSf_Vp_Uc");
    aSf_Vp_Uc lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aSf_Vp_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_Uc)");
    check_field_offset(lv, v1, 0, "aSf_Vp_Uc.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_Uc.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Vp_Uc.v3");
  }
}
static Arrange_To_Call_Me vaSf_Vp_Uc(Test_aSf_Vp_Uc, "aSf_Vp_Uc", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_Ui()
{
  {
    init_simple_test("aSf_Vp_Ui");
    aSf_Vp_Ui lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aSf_Vp_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_Ui)");
    check_field_offset(lv, v1, 0, "aSf_Vp_Ui.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_Ui.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Vp_Ui.v3");
  }
}
static Arrange_To_Call_Me vaSf_Vp_Ui(Test_aSf_Vp_Ui, "aSf_Vp_Ui", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_Ul()
{
  {
    init_simple_test("aSf_Vp_Ul");
    aSf_Vp_Ul lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aSf_Vp_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_Ul)");
    check_field_offset(lv, v1, 0, "aSf_Vp_Ul.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_Ul.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Vp_Ul.v3");
  }
}
static Arrange_To_Call_Me vaSf_Vp_Ul(Test_aSf_Vp_Ul, "aSf_Vp_Ul", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_Us()
{
  {
    init_simple_test("aSf_Vp_Us");
    aSf_Vp_Us lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aSf_Vp_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_Us)");
    check_field_offset(lv, v1, 0, "aSf_Vp_Us.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_Us.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Vp_Us.v3");
  }
}
static Arrange_To_Call_Me vaSf_Vp_Us(Test_aSf_Vp_Us, "aSf_Vp_Us", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aSf_Vp_Vp()
{
  {
    init_simple_test("aSf_Vp_Vp");
    aSf_Vp_Vp lv;
    check2(sizeof(lv), ABISELECT(17,9), "sizeof(aSf_Vp_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aSf_Vp_Vp)");
    check_field_offset(lv, v1, 0, "aSf_Vp_Vp.v1");
    check_field_offset(lv, v2, 1, "aSf_Vp_Vp.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aSf_Vp_Vp.v3");
  }
}
static Arrange_To_Call_Me vaSf_Vp_Vp(Test_aSf_Vp_Vp, "aSf_Vp_Vp", ABISELECT(17,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu15i_Sf()
{
  {
    init_simple_test("aUc_BFu15i_Sf");
    static aUc_BFu15i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_Sf");
    check_field_offset(lv, v3, 3, "aUc_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu15i_Sf(Test_aUc_BFu15i_Sf, "aUc_BFu15i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu15ll_Sf()
{
  {
    init_simple_test("aUc_BFu15ll_Sf");
    static aUc_BFu15ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_Sf");
    check_field_offset(lv, v3, 3, "aUc_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu15ll_Sf(Test_aUc_BFu15ll_Sf, "aUc_BFu15ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu15s_Sf()
{
  {
    init_simple_test("aUc_BFu15s_Sf");
    static aUc_BFu15s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_Sf");
    check_field_offset(lv, v3, 3, "aUc_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu15s_Sf(Test_aUc_BFu15s_Sf, "aUc_BFu15s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu16i_Sf()
{
  {
    init_simple_test("aUc_BFu16i_Sf");
    static aUc_BFu16i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_Sf");
    check_field_offset(lv, v3, 3, "aUc_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu16i_Sf(Test_aUc_BFu16i_Sf, "aUc_BFu16i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu16ll_Sf()
{
  {
    init_simple_test("aUc_BFu16ll_Sf");
    static aUc_BFu16ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_Sf");
    check_field_offset(lv, v3, 3, "aUc_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu16ll_Sf(Test_aUc_BFu16ll_Sf, "aUc_BFu16ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu16s_Sf()
{
  {
    init_simple_test("aUc_BFu16s_Sf");
    static aUc_BFu16s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_Sf");
    check_field_offset(lv, v3, 3, "aUc_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu16s_Sf(Test_aUc_BFu16s_Sf, "aUc_BFu16s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu17i_Sf()
{
  {
    init_simple_test("aUc_BFu17i_Sf");
    static aUc_BFu17i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_Sf");
    check_field_offset(lv, v3, 4, "aUc_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu17i_Sf(Test_aUc_BFu17i_Sf, "aUc_BFu17i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu17ll_Sf()
{
  {
    init_simple_test("aUc_BFu17ll_Sf");
    static aUc_BFu17ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_Sf");
    check_field_offset(lv, v3, 4, "aUc_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu17ll_Sf(Test_aUc_BFu17ll_Sf, "aUc_BFu17ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu1c_Sf()
{
  {
    init_simple_test("aUc_BFu1c_Sf");
    static aUc_BFu1c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_Sf");
    check_field_offset(lv, v3, 2, "aUc_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu1c_Sf(Test_aUc_BFu1c_Sf, "aUc_BFu1c_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu1i_Sf()
{
  {
    init_simple_test("aUc_BFu1i_Sf");
    static aUc_BFu1i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_Sf");
    check_field_offset(lv, v3, 2, "aUc_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu1i_Sf(Test_aUc_BFu1i_Sf, "aUc_BFu1i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu1ll_Sf()
{
  {
    init_simple_test("aUc_BFu1ll_Sf");
    static aUc_BFu1ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_Sf");
    check_field_offset(lv, v3, 2, "aUc_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu1ll_Sf(Test_aUc_BFu1ll_Sf, "aUc_BFu1ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu1s_Sf()
{
  {
    init_simple_test("aUc_BFu1s_Sf");
    static aUc_BFu1s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_Sf");
    check_field_offset(lv, v3, 2, "aUc_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu1s_Sf(Test_aUc_BFu1s_Sf, "aUc_BFu1s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu31i_Sf()
{
  {
    init_simple_test("aUc_BFu31i_Sf");
    static aUc_BFu31i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_Sf");
    check_field_offset(lv, v3, 5, "aUc_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu31i_Sf(Test_aUc_BFu31i_Sf, "aUc_BFu31i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu31ll_Sf()
{
  {
    init_simple_test("aUc_BFu31ll_Sf");
    static aUc_BFu31ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_Sf");
    check_field_offset(lv, v3, 5, "aUc_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu31ll_Sf(Test_aUc_BFu31ll_Sf, "aUc_BFu31ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu32i_Sf()
{
  {
    init_simple_test("aUc_BFu32i_Sf");
    static aUc_BFu32i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_Sf");
    check_field_offset(lv, v3, 5, "aUc_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu32i_Sf(Test_aUc_BFu32i_Sf, "aUc_BFu32i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu32ll_Sf()
{
  {
    init_simple_test("aUc_BFu32ll_Sf");
    static aUc_BFu32ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_Sf");
    check_field_offset(lv, v3, 5, "aUc_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu32ll_Sf(Test_aUc_BFu32ll_Sf, "aUc_BFu32ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu33_Sf()
{
  {
    init_simple_test("aUc_BFu33_Sf");
    static aUc_BFu33_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_Sf");
    check_field_offset(lv, v3, 6, "aUc_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu33_Sf(Test_aUc_BFu33_Sf, "aUc_BFu33_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu7c_Sf()
{
  {
    init_simple_test("aUc_BFu7c_Sf");
    static aUc_BFu7c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_Sf");
    check_field_offset(lv, v3, 2, "aUc_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu7c_Sf(Test_aUc_BFu7c_Sf, "aUc_BFu7c_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu7i_Sf()
{
  {
    init_simple_test("aUc_BFu7i_Sf");
    static aUc_BFu7i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_Sf");
    check_field_offset(lv, v3, 2, "aUc_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu7i_Sf(Test_aUc_BFu7i_Sf, "aUc_BFu7i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu7ll_Sf()
{
  {
    init_simple_test("aUc_BFu7ll_Sf");
    static aUc_BFu7ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_Sf");
    check_field_offset(lv, v3, 2, "aUc_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu7ll_Sf(Test_aUc_BFu7ll_Sf, "aUc_BFu7ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu7s_Sf()
{
  {
    init_simple_test("aUc_BFu7s_Sf");
    static aUc_BFu7s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_Sf");
    check_field_offset(lv, v3, 2, "aUc_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu7s_Sf(Test_aUc_BFu7s_Sf, "aUc_BFu7s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu8c_Sf()
{
  {
    init_simple_test("aUc_BFu8c_Sf");
    static aUc_BFu8c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_Sf");
    check_field_offset(lv, v3, 2, "aUc_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu8c_Sf(Test_aUc_BFu8c_Sf, "aUc_BFu8c_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu8i_Sf()
{
  {
    init_simple_test("aUc_BFu8i_Sf");
    static aUc_BFu8i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_Sf");
    check_field_offset(lv, v3, 2, "aUc_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu8i_Sf(Test_aUc_BFu8i_Sf, "aUc_BFu8i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu8ll_Sf()
{
  {
    init_simple_test("aUc_BFu8ll_Sf");
    static aUc_BFu8ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_Sf");
    check_field_offset(lv, v3, 2, "aUc_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu8ll_Sf(Test_aUc_BFu8ll_Sf, "aUc_BFu8ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu8s_Sf()
{
  {
    init_simple_test("aUc_BFu8s_Sf");
    static aUc_BFu8s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_Sf");
    check_field_offset(lv, v3, 2, "aUc_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu8s_Sf(Test_aUc_BFu8s_Sf, "aUc_BFu8s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu9i_Sf()
{
  {
    init_simple_test("aUc_BFu9i_Sf");
    static aUc_BFu9i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_Sf");
    check_field_offset(lv, v3, 3, "aUc_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu9i_Sf(Test_aUc_BFu9i_Sf, "aUc_BFu9i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu9ll_Sf()
{
  {
    init_simple_test("aUc_BFu9ll_Sf");
    static aUc_BFu9ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_Sf");
    check_field_offset(lv, v3, 3, "aUc_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu9ll_Sf(Test_aUc_BFu9ll_Sf, "aUc_BFu9ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu9s_Sf()
{
  {
    init_simple_test("aUc_BFu9s_Sf");
    static aUc_BFu9s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_Sf)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_Sf");
    check_field_offset(lv, v3, 3, "aUc_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu9s_Sf(Test_aUc_BFu9s_Sf, "aUc_BFu9s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_C_Sf()
{
  {
    init_simple_test("aUc_C_Sf");
    aUc_C_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aUc_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_Sf)");
    check_field_offset(lv, v1, 0, "aUc_C_Sf.v1");
    check_field_offset(lv, v2, 1, "aUc_C_Sf.v2");
    check_field_offset(lv, v3, 2, "aUc_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_C_Sf(Test_aUc_C_Sf, "aUc_C_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_D_Sf()
{
  {
    init_simple_test("aUc_D_Sf");
    aUc_D_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUc_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_D_Sf)");
    check_field_offset(lv, v1, 0, "aUc_D_Sf.v1");
    check_field_offset(lv, v2, 1, "aUc_D_Sf.v2");
    check_field_offset(lv, v3, 9, "aUc_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_D_Sf(Test_aUc_D_Sf, "aUc_D_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_F_Sf()
{
  {
    init_simple_test("aUc_F_Sf");
    aUc_F_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUc_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_F_Sf)");
    check_field_offset(lv, v1, 0, "aUc_F_Sf.v1");
    check_field_offset(lv, v2, 1, "aUc_F_Sf.v2");
    check_field_offset(lv, v3, 5, "aUc_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_F_Sf(Test_aUc_F_Sf, "aUc_F_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_I_Sf()
{
  {
    init_simple_test("aUc_I_Sf");
    aUc_I_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUc_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_I_Sf)");
    check_field_offset(lv, v1, 0, "aUc_I_Sf.v1");
    check_field_offset(lv, v2, 1, "aUc_I_Sf.v2");
    check_field_offset(lv, v3, 5, "aUc_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_I_Sf(Test_aUc_I_Sf, "aUc_I_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Ip_Sf()
{
  {
    init_simple_test("aUc_Ip_Sf");
    aUc_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Ip_Sf)");
    check_field_offset(lv, v1, 0, "aUc_Ip_Sf.v1");
    check_field_offset(lv, v2, 1, "aUc_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aUc_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_Ip_Sf(Test_aUc_Ip_Sf, "aUc_Ip_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_L_Sf()
{
  {
    init_simple_test("aUc_L_Sf");
    aUc_L_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUc_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_L_Sf)");
    check_field_offset(lv, v1, 0, "aUc_L_Sf.v1");
    check_field_offset(lv, v2, 1, "aUc_L_Sf.v2");
    check_field_offset(lv, v3, 9, "aUc_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_L_Sf(Test_aUc_L_Sf, "aUc_L_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_S_Sf()
{
  {
    init_simple_test("aUc_S_Sf");
    aUc_S_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUc_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_S_Sf)");
    check_field_offset(lv, v1, 0, "aUc_S_Sf.v1");
    check_field_offset(lv, v2, 1, "aUc_S_Sf.v2");
    check_field_offset(lv, v3, 3, "aUc_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_S_Sf(Test_aUc_S_Sf, "aUc_S_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf()
{
  {
    init_simple_test("aUc_Sf");
    aUc_Sf lv;
    check2(sizeof(lv), 2, "sizeof(aUc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf)");
    check_field_offset(lv, v1, 0, "aUc_Sf.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf.v2");
  }
}
static Arrange_To_Call_Me vaUc_Sf(Test_aUc_Sf, "aUc_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu15i()
{
  {
    init_simple_test("aUc_Sf_BFu15i");
    static aUc_Sf_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_Sf_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu15i(Test_aUc_Sf_BFu15i, "aUc_Sf_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu15ll()
{
  {
    init_simple_test("aUc_Sf_BFu15ll");
    static aUc_Sf_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu15ll(Test_aUc_Sf_BFu15ll, "aUc_Sf_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu15s()
{
  {
    init_simple_test("aUc_Sf_BFu15s");
    static aUc_Sf_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_Sf_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu15s(Test_aUc_Sf_BFu15s, "aUc_Sf_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu16i()
{
  {
    init_simple_test("aUc_Sf_BFu16i");
    static aUc_Sf_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_Sf_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu16i(Test_aUc_Sf_BFu16i, "aUc_Sf_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu16ll()
{
  {
    init_simple_test("aUc_Sf_BFu16ll");
    static aUc_Sf_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu16ll(Test_aUc_Sf_BFu16ll, "aUc_Sf_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu16s()
{
  {
    init_simple_test("aUc_Sf_BFu16s");
    static aUc_Sf_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_Sf_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu16s(Test_aUc_Sf_BFu16s, "aUc_Sf_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu17i()
{
  {
    init_simple_test("aUc_Sf_BFu17i");
    static aUc_Sf_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aUc_Sf_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aUc_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu17i(Test_aUc_Sf_BFu17i, "aUc_Sf_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu17ll()
{
  {
    init_simple_test("aUc_Sf_BFu17ll");
    static aUc_Sf_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aUc_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aUc_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu17ll(Test_aUc_Sf_BFu17ll, "aUc_Sf_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu1c()
{
  {
    init_simple_test("aUc_Sf_BFu1c");
    static aUc_Sf_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu1c(Test_aUc_Sf_BFu1c, "aUc_Sf_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu1i()
{
  {
    init_simple_test("aUc_Sf_BFu1i");
    static aUc_Sf_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu1i(Test_aUc_Sf_BFu1i, "aUc_Sf_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu1ll()
{
  {
    init_simple_test("aUc_Sf_BFu1ll");
    static aUc_Sf_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu1ll(Test_aUc_Sf_BFu1ll, "aUc_Sf_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu1s()
{
  {
    init_simple_test("aUc_Sf_BFu1s");
    static aUc_Sf_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu1s(Test_aUc_Sf_BFu1s, "aUc_Sf_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu31i()
{
  {
    init_simple_test("aUc_Sf_BFu31i");
    static aUc_Sf_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aUc_Sf_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aUc_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu31i(Test_aUc_Sf_BFu31i, "aUc_Sf_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu31ll()
{
  {
    init_simple_test("aUc_Sf_BFu31ll");
    static aUc_Sf_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aUc_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aUc_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu31ll(Test_aUc_Sf_BFu31ll, "aUc_Sf_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu32i()
{
  {
    init_simple_test("aUc_Sf_BFu32i");
    static aUc_Sf_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aUc_Sf_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aUc_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu32i(Test_aUc_Sf_BFu32i, "aUc_Sf_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu32ll()
{
  {
    init_simple_test("aUc_Sf_BFu32ll");
    static aUc_Sf_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aUc_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aUc_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu32ll(Test_aUc_Sf_BFu32ll, "aUc_Sf_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu33()
{
  {
    init_simple_test("aUc_Sf_BFu33");
    static aUc_Sf_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aUc_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu33.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aUc_Sf_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aUc_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu33(Test_aUc_Sf_BFu33, "aUc_Sf_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu7c()
{
  {
    init_simple_test("aUc_Sf_BFu7c");
    static aUc_Sf_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_Sf_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu7c(Test_aUc_Sf_BFu7c, "aUc_Sf_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu7i()
{
  {
    init_simple_test("aUc_Sf_BFu7i");
    static aUc_Sf_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_Sf_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu7i(Test_aUc_Sf_BFu7i, "aUc_Sf_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu7ll()
{
  {
    init_simple_test("aUc_Sf_BFu7ll");
    static aUc_Sf_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu7ll(Test_aUc_Sf_BFu7ll, "aUc_Sf_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu7s()
{
  {
    init_simple_test("aUc_Sf_BFu7s");
    static aUc_Sf_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_Sf_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu7s(Test_aUc_Sf_BFu7s, "aUc_Sf_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu8c()
{
  {
    init_simple_test("aUc_Sf_BFu8c");
    static aUc_Sf_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_Sf_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu8c(Test_aUc_Sf_BFu8c, "aUc_Sf_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu8i()
{
  {
    init_simple_test("aUc_Sf_BFu8i");
    static aUc_Sf_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_Sf_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu8i(Test_aUc_Sf_BFu8i, "aUc_Sf_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu8ll()
{
  {
    init_simple_test("aUc_Sf_BFu8ll");
    static aUc_Sf_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu8ll(Test_aUc_Sf_BFu8ll, "aUc_Sf_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu8s()
{
  {
    init_simple_test("aUc_Sf_BFu8s");
    static aUc_Sf_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_Sf_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu8s(Test_aUc_Sf_BFu8s, "aUc_Sf_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu9i()
{
  {
    init_simple_test("aUc_Sf_BFu9i");
    static aUc_Sf_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_Sf_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu9i(Test_aUc_Sf_BFu9i, "aUc_Sf_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu9ll()
{
  {
    init_simple_test("aUc_Sf_BFu9ll");
    static aUc_Sf_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu9ll(Test_aUc_Sf_BFu9ll, "aUc_Sf_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_BFu9s()
{
  {
    init_simple_test("aUc_Sf_BFu9s");
    static aUc_Sf_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_Sf_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_Sf_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vaUc_Sf_BFu9s(Test_aUc_Sf_BFu9s, "aUc_Sf_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_C()
{
  {
    init_simple_test("aUc_Sf_C");
    aUc_Sf_C lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_C)");
    check_field_offset(lv, v1, 0, "aUc_Sf_C.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_C.v2");
    check_field_offset(lv, v3, 2, "aUc_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vaUc_Sf_C(Test_aUc_Sf_C, "aUc_Sf_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_D()
{
  {
    init_simple_test("aUc_Sf_D");
    aUc_Sf_D lv;
    check2(sizeof(lv), 10, "sizeof(aUc_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_D)");
    check_field_offset(lv, v1, 0, "aUc_Sf_D.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_D.v2");
    check_field_offset(lv, v3, 2, "aUc_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vaUc_Sf_D(Test_aUc_Sf_D, "aUc_Sf_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_F()
{
  {
    init_simple_test("aUc_Sf_F");
    aUc_Sf_F lv;
    check2(sizeof(lv), 6, "sizeof(aUc_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_F)");
    check_field_offset(lv, v1, 0, "aUc_Sf_F.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_F.v2");
    check_field_offset(lv, v3, 2, "aUc_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vaUc_Sf_F(Test_aUc_Sf_F, "aUc_Sf_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_I()
{
  {
    init_simple_test("aUc_Sf_I");
    aUc_Sf_I lv;
    check2(sizeof(lv), 6, "sizeof(aUc_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_I)");
    check_field_offset(lv, v1, 0, "aUc_Sf_I.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_I.v2");
    check_field_offset(lv, v3, 2, "aUc_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vaUc_Sf_I(Test_aUc_Sf_I, "aUc_Sf_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_Ip()
{
  {
    init_simple_test("aUc_Sf_Ip");
    aUc_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_Ip)");
    check_field_offset(lv, v1, 0, "aUc_Sf_Ip.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_Ip.v2");
    check_field_offset(lv, v3, 2, "aUc_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vaUc_Sf_Ip(Test_aUc_Sf_Ip, "aUc_Sf_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_L()
{
  {
    init_simple_test("aUc_Sf_L");
    aUc_Sf_L lv;
    check2(sizeof(lv), 10, "sizeof(aUc_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_L)");
    check_field_offset(lv, v1, 0, "aUc_Sf_L.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_L.v2");
    check_field_offset(lv, v3, 2, "aUc_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vaUc_Sf_L(Test_aUc_Sf_L, "aUc_Sf_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_S()
{
  {
    init_simple_test("aUc_Sf_S");
    aUc_Sf_S lv;
    check2(sizeof(lv), 4, "sizeof(aUc_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_S)");
    check_field_offset(lv, v1, 0, "aUc_Sf_S.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_S.v2");
    check_field_offset(lv, v3, 2, "aUc_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vaUc_Sf_S(Test_aUc_Sf_S, "aUc_Sf_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_Sf()
{
  {
    init_simple_test("aUc_Sf_Sf");
    aUc_Sf_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_Sf)");
    check_field_offset(lv, v1, 0, "aUc_Sf_Sf.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_Sf.v2");
    check_field_offset(lv, v3, 2, "aUc_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_Sf_Sf(Test_aUc_Sf_Sf, "aUc_Sf_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_Uc()
{
  {
    init_simple_test("aUc_Sf_Uc");
    aUc_Sf_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_Uc)");
    check_field_offset(lv, v1, 0, "aUc_Sf_Uc.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_Uc.v2");
    check_field_offset(lv, v3, 2, "aUc_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vaUc_Sf_Uc(Test_aUc_Sf_Uc, "aUc_Sf_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_Ui()
{
  {
    init_simple_test("aUc_Sf_Ui");
    aUc_Sf_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aUc_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_Ui)");
    check_field_offset(lv, v1, 0, "aUc_Sf_Ui.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_Ui.v2");
    check_field_offset(lv, v3, 2, "aUc_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vaUc_Sf_Ui(Test_aUc_Sf_Ui, "aUc_Sf_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_Ul()
{
  {
    init_simple_test("aUc_Sf_Ul");
    aUc_Sf_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aUc_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_Ul)");
    check_field_offset(lv, v1, 0, "aUc_Sf_Ul.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_Ul.v2");
    check_field_offset(lv, v3, 2, "aUc_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vaUc_Sf_Ul(Test_aUc_Sf_Ul, "aUc_Sf_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_Us()
{
  {
    init_simple_test("aUc_Sf_Us");
    aUc_Sf_Us lv;
    check2(sizeof(lv), 4, "sizeof(aUc_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_Us)");
    check_field_offset(lv, v1, 0, "aUc_Sf_Us.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_Us.v2");
    check_field_offset(lv, v3, 2, "aUc_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vaUc_Sf_Us(Test_aUc_Sf_Us, "aUc_Sf_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Sf_Vp()
{
  {
    init_simple_test("aUc_Sf_Vp");
    aUc_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Sf_Vp)");
    check_field_offset(lv, v1, 0, "aUc_Sf_Vp.v1");
    check_field_offset(lv, v2, 1, "aUc_Sf_Vp.v2");
    check_field_offset(lv, v3, 2, "aUc_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vaUc_Sf_Vp(Test_aUc_Sf_Vp, "aUc_Sf_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Uc_Sf()
{
  {
    init_simple_test("aUc_Uc_Sf");
    aUc_Uc_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Uc_Sf)");
    check_field_offset(lv, v1, 0, "aUc_Uc_Sf.v1");
    check_field_offset(lv, v2, 1, "aUc_Uc_Sf.v2");
    check_field_offset(lv, v3, 2, "aUc_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_Uc_Sf(Test_aUc_Uc_Sf, "aUc_Uc_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Ui_Sf()
{
  {
    init_simple_test("aUc_Ui_Sf");
    aUc_Ui_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUc_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Ui_Sf)");
    check_field_offset(lv, v1, 0, "aUc_Ui_Sf.v1");
    check_field_offset(lv, v2, 1, "aUc_Ui_Sf.v2");
    check_field_offset(lv, v3, 5, "aUc_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_Ui_Sf(Test_aUc_Ui_Sf, "aUc_Ui_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Ul_Sf()
{
  {
    init_simple_test("aUc_Ul_Sf");
    aUc_Ul_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUc_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Ul_Sf)");
    check_field_offset(lv, v1, 0, "aUc_Ul_Sf.v1");
    check_field_offset(lv, v2, 1, "aUc_Ul_Sf.v2");
    check_field_offset(lv, v3, 9, "aUc_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_Ul_Sf(Test_aUc_Ul_Sf, "aUc_Ul_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Us_Sf()
{
  {
    init_simple_test("aUc_Us_Sf");
    aUc_Us_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUc_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Us_Sf)");
    check_field_offset(lv, v1, 0, "aUc_Us_Sf.v1");
    check_field_offset(lv, v2, 1, "aUc_Us_Sf.v2");
    check_field_offset(lv, v3, 3, "aUc_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_Us_Sf(Test_aUc_Us_Sf, "aUc_Us_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Vp_Sf()
{
  {
    init_simple_test("aUc_Vp_Sf");
    aUc_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Vp_Sf)");
    check_field_offset(lv, v1, 0, "aUc_Vp_Sf.v1");
    check_field_offset(lv, v2, 1, "aUc_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aUc_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUc_Vp_Sf(Test_aUc_Vp_Sf, "aUc_Vp_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu15i_Sf()
{
  {
    init_simple_test("aUi_BFu15i_Sf");
    static aUi_BFu15i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu15i_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu15i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aUi_BFu15i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aUi_BFu15i_Sf");
    check_field_offset(lv, v3, 6, "aUi_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu15i_Sf(Test_aUi_BFu15i_Sf, "aUi_BFu15i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu15ll_Sf()
{
  {
    init_simple_test("aUi_BFu15ll_Sf");
    static aUi_BFu15ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu15ll_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu15ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aUi_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aUi_BFu15ll_Sf");
    check_field_offset(lv, v3, 6, "aUi_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu15ll_Sf(Test_aUi_BFu15ll_Sf, "aUi_BFu15ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu15s_Sf()
{
  {
    init_simple_test("aUi_BFu15s_Sf");
    static aUi_BFu15s_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu15s_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu15s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aUi_BFu15s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aUi_BFu15s_Sf");
    check_field_offset(lv, v3, 6, "aUi_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu15s_Sf(Test_aUi_BFu15s_Sf, "aUi_BFu15s_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu16i_Sf()
{
  {
    init_simple_test("aUi_BFu16i_Sf");
    static aUi_BFu16i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu16i_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu16i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aUi_BFu16i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aUi_BFu16i_Sf");
    check_field_offset(lv, v3, 6, "aUi_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu16i_Sf(Test_aUi_BFu16i_Sf, "aUi_BFu16i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu16ll_Sf()
{
  {
    init_simple_test("aUi_BFu16ll_Sf");
    static aUi_BFu16ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu16ll_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu16ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aUi_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aUi_BFu16ll_Sf");
    check_field_offset(lv, v3, 6, "aUi_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu16ll_Sf(Test_aUi_BFu16ll_Sf, "aUi_BFu16ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu16s_Sf()
{
  {
    init_simple_test("aUi_BFu16s_Sf");
    static aUi_BFu16s_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu16s_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu16s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aUi_BFu16s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aUi_BFu16s_Sf");
    check_field_offset(lv, v3, 6, "aUi_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu16s_Sf(Test_aUi_BFu16s_Sf, "aUi_BFu16s_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu17i_Sf()
{
  {
    init_simple_test("aUi_BFu17i_Sf");
    static aUi_BFu17i_Sf lv;
    check2(sizeof(lv), 8, "sizeof(aUi_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu17i_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu17i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aUi_BFu17i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aUi_BFu17i_Sf");
    check_field_offset(lv, v3, 7, "aUi_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu17i_Sf(Test_aUi_BFu17i_Sf, "aUi_BFu17i_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu17ll_Sf()
{
  {
    init_simple_test("aUi_BFu17ll_Sf");
    static aUi_BFu17ll_Sf lv;
    check2(sizeof(lv), 8, "sizeof(aUi_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu17ll_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu17ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aUi_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aUi_BFu17ll_Sf");
    check_field_offset(lv, v3, 7, "aUi_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu17ll_Sf(Test_aUi_BFu17ll_Sf, "aUi_BFu17ll_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu1c_Sf()
{
  {
    init_simple_test("aUi_BFu1c_Sf");
    static aUi_BFu1c_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu1c_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu1c_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aUi_BFu1c_Sf");
    check_field_offset(lv, v3, 5, "aUi_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu1c_Sf(Test_aUi_BFu1c_Sf, "aUi_BFu1c_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu1i_Sf()
{
  {
    init_simple_test("aUi_BFu1i_Sf");
    static aUi_BFu1i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu1i_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu1i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aUi_BFu1i_Sf");
    check_field_offset(lv, v3, 5, "aUi_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu1i_Sf(Test_aUi_BFu1i_Sf, "aUi_BFu1i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu1ll_Sf()
{
  {
    init_simple_test("aUi_BFu1ll_Sf");
    static aUi_BFu1ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu1ll_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu1ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aUi_BFu1ll_Sf");
    check_field_offset(lv, v3, 5, "aUi_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu1ll_Sf(Test_aUi_BFu1ll_Sf, "aUi_BFu1ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu1s_Sf()
{
  {
    init_simple_test("aUi_BFu1s_Sf");
    static aUi_BFu1s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu1s_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu1s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aUi_BFu1s_Sf");
    check_field_offset(lv, v3, 5, "aUi_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu1s_Sf(Test_aUi_BFu1s_Sf, "aUi_BFu1s_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu31i_Sf()
{
  {
    init_simple_test("aUi_BFu31i_Sf");
    static aUi_BFu31i_Sf lv;
    check2(sizeof(lv), 9, "sizeof(aUi_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu31i_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu31i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aUi_BFu31i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aUi_BFu31i_Sf");
    check_field_offset(lv, v3, 8, "aUi_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu31i_Sf(Test_aUi_BFu31i_Sf, "aUi_BFu31i_Sf", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu31ll_Sf()
{
  {
    init_simple_test("aUi_BFu31ll_Sf");
    static aUi_BFu31ll_Sf lv;
    check2(sizeof(lv), 9, "sizeof(aUi_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu31ll_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu31ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aUi_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aUi_BFu31ll_Sf");
    check_field_offset(lv, v3, 8, "aUi_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu31ll_Sf(Test_aUi_BFu31ll_Sf, "aUi_BFu31ll_Sf", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu32i_Sf()
{
  {
    init_simple_test("aUi_BFu32i_Sf");
    static aUi_BFu32i_Sf lv;
    check2(sizeof(lv), 9, "sizeof(aUi_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu32i_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu32i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aUi_BFu32i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aUi_BFu32i_Sf");
    check_field_offset(lv, v3, 8, "aUi_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu32i_Sf(Test_aUi_BFu32i_Sf, "aUi_BFu32i_Sf", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu32ll_Sf()
{
  {
    init_simple_test("aUi_BFu32ll_Sf");
    static aUi_BFu32ll_Sf lv;
    check2(sizeof(lv), 9, "sizeof(aUi_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu32ll_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu32ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aUi_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aUi_BFu32ll_Sf");
    check_field_offset(lv, v3, 8, "aUi_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu32ll_Sf(Test_aUi_BFu32ll_Sf, "aUi_BFu32ll_Sf", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu33_Sf()
{
  {
    init_simple_test("aUi_BFu33_Sf");
    static aUi_BFu33_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUi_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu33_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu33_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aUi_BFu33_Sf");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aUi_BFu33_Sf");
    check_field_offset(lv, v3, 9, "aUi_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu33_Sf(Test_aUi_BFu33_Sf, "aUi_BFu33_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu7c_Sf()
{
  {
    init_simple_test("aUi_BFu7c_Sf");
    static aUi_BFu7c_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu7c_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu7c_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aUi_BFu7c_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aUi_BFu7c_Sf");
    check_field_offset(lv, v3, 5, "aUi_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu7c_Sf(Test_aUi_BFu7c_Sf, "aUi_BFu7c_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu7i_Sf()
{
  {
    init_simple_test("aUi_BFu7i_Sf");
    static aUi_BFu7i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu7i_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu7i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aUi_BFu7i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aUi_BFu7i_Sf");
    check_field_offset(lv, v3, 5, "aUi_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu7i_Sf(Test_aUi_BFu7i_Sf, "aUi_BFu7i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu7ll_Sf()
{
  {
    init_simple_test("aUi_BFu7ll_Sf");
    static aUi_BFu7ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu7ll_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu7ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aUi_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aUi_BFu7ll_Sf");
    check_field_offset(lv, v3, 5, "aUi_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu7ll_Sf(Test_aUi_BFu7ll_Sf, "aUi_BFu7ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu7s_Sf()
{
  {
    init_simple_test("aUi_BFu7s_Sf");
    static aUi_BFu7s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu7s_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu7s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aUi_BFu7s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aUi_BFu7s_Sf");
    check_field_offset(lv, v3, 5, "aUi_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu7s_Sf(Test_aUi_BFu7s_Sf, "aUi_BFu7s_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu8c_Sf()
{
  {
    init_simple_test("aUi_BFu8c_Sf");
    static aUi_BFu8c_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu8c_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu8c_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aUi_BFu8c_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aUi_BFu8c_Sf");
    check_field_offset(lv, v3, 5, "aUi_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu8c_Sf(Test_aUi_BFu8c_Sf, "aUi_BFu8c_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu8i_Sf()
{
  {
    init_simple_test("aUi_BFu8i_Sf");
    static aUi_BFu8i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu8i_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu8i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aUi_BFu8i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aUi_BFu8i_Sf");
    check_field_offset(lv, v3, 5, "aUi_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu8i_Sf(Test_aUi_BFu8i_Sf, "aUi_BFu8i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu8ll_Sf()
{
  {
    init_simple_test("aUi_BFu8ll_Sf");
    static aUi_BFu8ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu8ll_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu8ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aUi_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aUi_BFu8ll_Sf");
    check_field_offset(lv, v3, 5, "aUi_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu8ll_Sf(Test_aUi_BFu8ll_Sf, "aUi_BFu8ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu8s_Sf()
{
  {
    init_simple_test("aUi_BFu8s_Sf");
    static aUi_BFu8s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu8s_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu8s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aUi_BFu8s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aUi_BFu8s_Sf");
    check_field_offset(lv, v3, 5, "aUi_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu8s_Sf(Test_aUi_BFu8s_Sf, "aUi_BFu8s_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu9i_Sf()
{
  {
    init_simple_test("aUi_BFu9i_Sf");
    static aUi_BFu9i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu9i_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu9i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aUi_BFu9i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aUi_BFu9i_Sf");
    check_field_offset(lv, v3, 6, "aUi_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu9i_Sf(Test_aUi_BFu9i_Sf, "aUi_BFu9i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu9ll_Sf()
{
  {
    init_simple_test("aUi_BFu9ll_Sf");
    static aUi_BFu9ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu9ll_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu9ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aUi_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aUi_BFu9ll_Sf");
    check_field_offset(lv, v3, 6, "aUi_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu9ll_Sf(Test_aUi_BFu9ll_Sf, "aUi_BFu9ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu9s_Sf()
{
  {
    init_simple_test("aUi_BFu9s_Sf");
    static aUi_BFu9s_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu9s_Sf)");
    check_field_offset(lv, v1, 0, "aUi_BFu9s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aUi_BFu9s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aUi_BFu9s_Sf");
    check_field_offset(lv, v3, 6, "aUi_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu9s_Sf(Test_aUi_BFu9s_Sf, "aUi_BFu9s_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_C_Sf()
{
  {
    init_simple_test("aUi_C_Sf");
    aUi_C_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUi_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_C_Sf)");
    check_field_offset(lv, v1, 0, "aUi_C_Sf.v1");
    check_field_offset(lv, v2, 4, "aUi_C_Sf.v2");
    check_field_offset(lv, v3, 5, "aUi_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_C_Sf(Test_aUi_C_Sf, "aUi_C_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_D_Sf()
{
  {
    init_simple_test("aUi_D_Sf");
    aUi_D_Sf lv;
    check2(sizeof(lv), 13, "sizeof(aUi_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_D_Sf)");
    check_field_offset(lv, v1, 0, "aUi_D_Sf.v1");
    check_field_offset(lv, v2, 4, "aUi_D_Sf.v2");
    check_field_offset(lv, v3, 12, "aUi_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_D_Sf(Test_aUi_D_Sf, "aUi_D_Sf", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_F_Sf()
{
  {
    init_simple_test("aUi_F_Sf");
    aUi_F_Sf lv;
    check2(sizeof(lv), 9, "sizeof(aUi_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_F_Sf)");
    check_field_offset(lv, v1, 0, "aUi_F_Sf.v1");
    check_field_offset(lv, v2, 4, "aUi_F_Sf.v2");
    check_field_offset(lv, v3, 8, "aUi_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_F_Sf(Test_aUi_F_Sf, "aUi_F_Sf", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_I_Sf()
{
  {
    init_simple_test("aUi_I_Sf");
    aUi_I_Sf lv;
    check2(sizeof(lv), 9, "sizeof(aUi_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_I_Sf)");
    check_field_offset(lv, v1, 0, "aUi_I_Sf.v1");
    check_field_offset(lv, v2, 4, "aUi_I_Sf.v2");
    check_field_offset(lv, v3, 8, "aUi_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_I_Sf(Test_aUi_I_Sf, "aUi_I_Sf", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Ip_Sf()
{
  {
    init_simple_test("aUi_Ip_Sf");
    aUi_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aUi_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Ip_Sf)");
    check_field_offset(lv, v1, 0, "aUi_Ip_Sf.v1");
    check_field_offset(lv, v2, 4, "aUi_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aUi_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_Ip_Sf(Test_aUi_Ip_Sf, "aUi_Ip_Sf", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_L_Sf()
{
  {
    init_simple_test("aUi_L_Sf");
    aUi_L_Sf lv;
    check2(sizeof(lv), 13, "sizeof(aUi_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_L_Sf)");
    check_field_offset(lv, v1, 0, "aUi_L_Sf.v1");
    check_field_offset(lv, v2, 4, "aUi_L_Sf.v2");
    check_field_offset(lv, v3, 12, "aUi_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_L_Sf(Test_aUi_L_Sf, "aUi_L_Sf", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_S_Sf()
{
  {
    init_simple_test("aUi_S_Sf");
    aUi_S_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUi_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_S_Sf)");
    check_field_offset(lv, v1, 0, "aUi_S_Sf.v1");
    check_field_offset(lv, v2, 4, "aUi_S_Sf.v2");
    check_field_offset(lv, v3, 6, "aUi_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_S_Sf(Test_aUi_S_Sf, "aUi_S_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf()
{
  {
    init_simple_test("aUi_Sf");
    aUi_Sf lv;
    check2(sizeof(lv), 5, "sizeof(aUi_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf)");
    check_field_offset(lv, v1, 0, "aUi_Sf.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf.v2");
  }
}
static Arrange_To_Call_Me vaUi_Sf(Test_aUi_Sf, "aUi_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu15i()
{
  {
    init_simple_test("aUi_Sf_BFu15i");
    static aUi_Sf_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aUi_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu15i)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu15i.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aUi_Sf_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aUi_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu15i(Test_aUi_Sf_BFu15i, "aUi_Sf_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu15ll()
{
  {
    init_simple_test("aUi_Sf_BFu15ll");
    static aUi_Sf_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aUi_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu15ll.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aUi_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aUi_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu15ll(Test_aUi_Sf_BFu15ll, "aUi_Sf_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu15s()
{
  {
    init_simple_test("aUi_Sf_BFu15s");
    static aUi_Sf_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aUi_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu15s)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu15s.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aUi_Sf_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aUi_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu15s(Test_aUi_Sf_BFu15s, "aUi_Sf_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu16i()
{
  {
    init_simple_test("aUi_Sf_BFu16i");
    static aUi_Sf_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aUi_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu16i)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu16i.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aUi_Sf_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aUi_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu16i(Test_aUi_Sf_BFu16i, "aUi_Sf_BFu16i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu16ll()
{
  {
    init_simple_test("aUi_Sf_BFu16ll");
    static aUi_Sf_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aUi_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu16ll.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aUi_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aUi_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu16ll(Test_aUi_Sf_BFu16ll, "aUi_Sf_BFu16ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu16s()
{
  {
    init_simple_test("aUi_Sf_BFu16s");
    static aUi_Sf_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aUi_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu16s)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu16s.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aUi_Sf_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aUi_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu16s(Test_aUi_Sf_BFu16s, "aUi_Sf_BFu16s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu17i()
{
  {
    init_simple_test("aUi_Sf_BFu17i");
    static aUi_Sf_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(aUi_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu17i)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu17i.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aUi_Sf_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aUi_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu17i(Test_aUi_Sf_BFu17i, "aUi_Sf_BFu17i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu17ll()
{
  {
    init_simple_test("aUi_Sf_BFu17ll");
    static aUi_Sf_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(aUi_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu17ll.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aUi_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aUi_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu17ll(Test_aUi_Sf_BFu17ll, "aUi_Sf_BFu17ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu1c()
{
  {
    init_simple_test("aUi_Sf_BFu1c");
    static aUi_Sf_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu1c)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu1c.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aUi_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu1c(Test_aUi_Sf_BFu1c, "aUi_Sf_BFu1c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu1i()
{
  {
    init_simple_test("aUi_Sf_BFu1i");
    static aUi_Sf_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu1i)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu1i.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aUi_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu1i(Test_aUi_Sf_BFu1i, "aUi_Sf_BFu1i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu1ll()
{
  {
    init_simple_test("aUi_Sf_BFu1ll");
    static aUi_Sf_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu1ll.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aUi_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu1ll(Test_aUi_Sf_BFu1ll, "aUi_Sf_BFu1ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu1s()
{
  {
    init_simple_test("aUi_Sf_BFu1s");
    static aUi_Sf_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu1s)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu1s.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aUi_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu1s(Test_aUi_Sf_BFu1s, "aUi_Sf_BFu1s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu31i()
{
  {
    init_simple_test("aUi_Sf_BFu31i");
    static aUi_Sf_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aUi_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu31i)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu31i.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aUi_Sf_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aUi_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu31i(Test_aUi_Sf_BFu31i, "aUi_Sf_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu31ll()
{
  {
    init_simple_test("aUi_Sf_BFu31ll");
    static aUi_Sf_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aUi_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu31ll.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aUi_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aUi_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu31ll(Test_aUi_Sf_BFu31ll, "aUi_Sf_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu32i()
{
  {
    init_simple_test("aUi_Sf_BFu32i");
    static aUi_Sf_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aUi_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu32i)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu32i.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aUi_Sf_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aUi_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu32i(Test_aUi_Sf_BFu32i, "aUi_Sf_BFu32i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu32ll()
{
  {
    init_simple_test("aUi_Sf_BFu32ll");
    static aUi_Sf_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aUi_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu32ll.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aUi_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aUi_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu32ll(Test_aUi_Sf_BFu32ll, "aUi_Sf_BFu32ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu33()
{
  {
    init_simple_test("aUi_Sf_BFu33");
    static aUi_Sf_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(aUi_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu33)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu33.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 5, 0, 33, 1, "aUi_Sf_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, hide_ull(1LL<<32), "aUi_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu33(Test_aUi_Sf_BFu33, "aUi_Sf_BFu33", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu7c()
{
  {
    init_simple_test("aUi_Sf_BFu7c");
    static aUi_Sf_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu7c)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu7c.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aUi_Sf_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aUi_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu7c(Test_aUi_Sf_BFu7c, "aUi_Sf_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu7i()
{
  {
    init_simple_test("aUi_Sf_BFu7i");
    static aUi_Sf_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu7i)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu7i.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aUi_Sf_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aUi_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu7i(Test_aUi_Sf_BFu7i, "aUi_Sf_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu7ll()
{
  {
    init_simple_test("aUi_Sf_BFu7ll");
    static aUi_Sf_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu7ll.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aUi_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aUi_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu7ll(Test_aUi_Sf_BFu7ll, "aUi_Sf_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu7s()
{
  {
    init_simple_test("aUi_Sf_BFu7s");
    static aUi_Sf_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu7s)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu7s.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aUi_Sf_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aUi_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu7s(Test_aUi_Sf_BFu7s, "aUi_Sf_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu8c()
{
  {
    init_simple_test("aUi_Sf_BFu8c");
    static aUi_Sf_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu8c)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu8c.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aUi_Sf_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aUi_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu8c(Test_aUi_Sf_BFu8c, "aUi_Sf_BFu8c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu8i()
{
  {
    init_simple_test("aUi_Sf_BFu8i");
    static aUi_Sf_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu8i)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu8i.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aUi_Sf_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aUi_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu8i(Test_aUi_Sf_BFu8i, "aUi_Sf_BFu8i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu8ll()
{
  {
    init_simple_test("aUi_Sf_BFu8ll");
    static aUi_Sf_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu8ll.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aUi_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aUi_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu8ll(Test_aUi_Sf_BFu8ll, "aUi_Sf_BFu8ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu8s()
{
  {
    init_simple_test("aUi_Sf_BFu8s");
    static aUi_Sf_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu8s)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu8s.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aUi_Sf_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aUi_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu8s(Test_aUi_Sf_BFu8s, "aUi_Sf_BFu8s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu9i()
{
  {
    init_simple_test("aUi_Sf_BFu9i");
    static aUi_Sf_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(aUi_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu9i)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu9i.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aUi_Sf_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aUi_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu9i(Test_aUi_Sf_BFu9i, "aUi_Sf_BFu9i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu9ll()
{
  {
    init_simple_test("aUi_Sf_BFu9ll");
    static aUi_Sf_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(aUi_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu9ll.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aUi_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aUi_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu9ll(Test_aUi_Sf_BFu9ll, "aUi_Sf_BFu9ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_BFu9s()
{
  {
    init_simple_test("aUi_Sf_BFu9s");
    static aUi_Sf_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(aUi_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_BFu9s)");
    check_field_offset(lv, v1, 0, "aUi_Sf_BFu9s.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aUi_Sf_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aUi_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vaUi_Sf_BFu9s(Test_aUi_Sf_BFu9s, "aUi_Sf_BFu9s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_C()
{
  {
    init_simple_test("aUi_Sf_C");
    aUi_Sf_C lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_C)");
    check_field_offset(lv, v1, 0, "aUi_Sf_C.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_C.v2");
    check_field_offset(lv, v3, 5, "aUi_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vaUi_Sf_C(Test_aUi_Sf_C, "aUi_Sf_C", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_D()
{
  {
    init_simple_test("aUi_Sf_D");
    aUi_Sf_D lv;
    check2(sizeof(lv), 13, "sizeof(aUi_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_D)");
    check_field_offset(lv, v1, 0, "aUi_Sf_D.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_D.v2");
    check_field_offset(lv, v3, 5, "aUi_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vaUi_Sf_D(Test_aUi_Sf_D, "aUi_Sf_D", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_F()
{
  {
    init_simple_test("aUi_Sf_F");
    aUi_Sf_F lv;
    check2(sizeof(lv), 9, "sizeof(aUi_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_F)");
    check_field_offset(lv, v1, 0, "aUi_Sf_F.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_F.v2");
    check_field_offset(lv, v3, 5, "aUi_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vaUi_Sf_F(Test_aUi_Sf_F, "aUi_Sf_F", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_I()
{
  {
    init_simple_test("aUi_Sf_I");
    aUi_Sf_I lv;
    check2(sizeof(lv), 9, "sizeof(aUi_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_I)");
    check_field_offset(lv, v1, 0, "aUi_Sf_I.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_I.v2");
    check_field_offset(lv, v3, 5, "aUi_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vaUi_Sf_I(Test_aUi_Sf_I, "aUi_Sf_I", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_Ip()
{
  {
    init_simple_test("aUi_Sf_Ip");
    aUi_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aUi_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_Ip)");
    check_field_offset(lv, v1, 0, "aUi_Sf_Ip.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_Ip.v2");
    check_field_offset(lv, v3, 5, "aUi_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vaUi_Sf_Ip(Test_aUi_Sf_Ip, "aUi_Sf_Ip", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_L()
{
  {
    init_simple_test("aUi_Sf_L");
    aUi_Sf_L lv;
    check2(sizeof(lv), 13, "sizeof(aUi_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_L)");
    check_field_offset(lv, v1, 0, "aUi_Sf_L.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_L.v2");
    check_field_offset(lv, v3, 5, "aUi_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vaUi_Sf_L(Test_aUi_Sf_L, "aUi_Sf_L", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_S()
{
  {
    init_simple_test("aUi_Sf_S");
    aUi_Sf_S lv;
    check2(sizeof(lv), 7, "sizeof(aUi_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_S)");
    check_field_offset(lv, v1, 0, "aUi_Sf_S.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_S.v2");
    check_field_offset(lv, v3, 5, "aUi_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vaUi_Sf_S(Test_aUi_Sf_S, "aUi_Sf_S", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_Sf()
{
  {
    init_simple_test("aUi_Sf_Sf");
    aUi_Sf_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_Sf)");
    check_field_offset(lv, v1, 0, "aUi_Sf_Sf.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_Sf.v2");
    check_field_offset(lv, v3, 5, "aUi_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_Sf_Sf(Test_aUi_Sf_Sf, "aUi_Sf_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_Uc()
{
  {
    init_simple_test("aUi_Sf_Uc");
    aUi_Sf_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_Uc)");
    check_field_offset(lv, v1, 0, "aUi_Sf_Uc.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_Uc.v2");
    check_field_offset(lv, v3, 5, "aUi_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vaUi_Sf_Uc(Test_aUi_Sf_Uc, "aUi_Sf_Uc", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_Ui()
{
  {
    init_simple_test("aUi_Sf_Ui");
    aUi_Sf_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aUi_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_Ui)");
    check_field_offset(lv, v1, 0, "aUi_Sf_Ui.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_Ui.v2");
    check_field_offset(lv, v3, 5, "aUi_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vaUi_Sf_Ui(Test_aUi_Sf_Ui, "aUi_Sf_Ui", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_Ul()
{
  {
    init_simple_test("aUi_Sf_Ul");
    aUi_Sf_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aUi_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_Ul)");
    check_field_offset(lv, v1, 0, "aUi_Sf_Ul.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_Ul.v2");
    check_field_offset(lv, v3, 5, "aUi_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vaUi_Sf_Ul(Test_aUi_Sf_Ul, "aUi_Sf_Ul", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_Us()
{
  {
    init_simple_test("aUi_Sf_Us");
    aUi_Sf_Us lv;
    check2(sizeof(lv), 7, "sizeof(aUi_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_Us)");
    check_field_offset(lv, v1, 0, "aUi_Sf_Us.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_Us.v2");
    check_field_offset(lv, v3, 5, "aUi_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vaUi_Sf_Us(Test_aUi_Sf_Us, "aUi_Sf_Us", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Sf_Vp()
{
  {
    init_simple_test("aUi_Sf_Vp");
    aUi_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aUi_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Sf_Vp)");
    check_field_offset(lv, v1, 0, "aUi_Sf_Vp.v1");
    check_field_offset(lv, v2, 4, "aUi_Sf_Vp.v2");
    check_field_offset(lv, v3, 5, "aUi_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vaUi_Sf_Vp(Test_aUi_Sf_Vp, "aUi_Sf_Vp", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Uc_Sf()
{
  {
    init_simple_test("aUi_Uc_Sf");
    aUi_Uc_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Uc_Sf)");
    check_field_offset(lv, v1, 0, "aUi_Uc_Sf.v1");
    check_field_offset(lv, v2, 4, "aUi_Uc_Sf.v2");
    check_field_offset(lv, v3, 5, "aUi_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_Uc_Sf(Test_aUi_Uc_Sf, "aUi_Uc_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Ui_Sf()
{
  {
    init_simple_test("aUi_Ui_Sf");
    aUi_Ui_Sf lv;
    check2(sizeof(lv), 9, "sizeof(aUi_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Ui_Sf)");
    check_field_offset(lv, v1, 0, "aUi_Ui_Sf.v1");
    check_field_offset(lv, v2, 4, "aUi_Ui_Sf.v2");
    check_field_offset(lv, v3, 8, "aUi_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_Ui_Sf(Test_aUi_Ui_Sf, "aUi_Ui_Sf", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Ul_Sf()
{
  {
    init_simple_test("aUi_Ul_Sf");
    aUi_Ul_Sf lv;
    check2(sizeof(lv), 13, "sizeof(aUi_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Ul_Sf)");
    check_field_offset(lv, v1, 0, "aUi_Ul_Sf.v1");
    check_field_offset(lv, v2, 4, "aUi_Ul_Sf.v2");
    check_field_offset(lv, v3, 12, "aUi_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_Ul_Sf(Test_aUi_Ul_Sf, "aUi_Ul_Sf", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Us_Sf()
{
  {
    init_simple_test("aUi_Us_Sf");
    aUi_Us_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUi_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Us_Sf)");
    check_field_offset(lv, v1, 0, "aUi_Us_Sf.v1");
    check_field_offset(lv, v2, 4, "aUi_Us_Sf.v2");
    check_field_offset(lv, v3, 6, "aUi_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_Us_Sf(Test_aUi_Us_Sf, "aUi_Us_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Vp_Sf()
{
  {
    init_simple_test("aUi_Vp_Sf");
    aUi_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aUi_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Vp_Sf)");
    check_field_offset(lv, v1, 0, "aUi_Vp_Sf.v1");
    check_field_offset(lv, v2, 4, "aUi_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aUi_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUi_Vp_Sf(Test_aUi_Vp_Sf, "aUi_Vp_Sf", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu15i_Sf()
{
  {
    init_simple_test("aUl_BFu15i_Sf");
    static aUl_BFu15i_Sf lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu15i_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu15i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "aUl_BFu15i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "aUl_BFu15i_Sf");
    check_field_offset(lv, v3, 10, "aUl_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu15i_Sf(Test_aUl_BFu15i_Sf, "aUl_BFu15i_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu15ll_Sf()
{
  {
    init_simple_test("aUl_BFu15ll_Sf");
    static aUl_BFu15ll_Sf lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu15ll_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu15ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "aUl_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "aUl_BFu15ll_Sf");
    check_field_offset(lv, v3, 10, "aUl_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu15ll_Sf(Test_aUl_BFu15ll_Sf, "aUl_BFu15ll_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu15s_Sf()
{
  {
    init_simple_test("aUl_BFu15s_Sf");
    static aUl_BFu15s_Sf lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu15s_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu15s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "aUl_BFu15s_Sf");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "aUl_BFu15s_Sf");
    check_field_offset(lv, v3, 10, "aUl_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu15s_Sf(Test_aUl_BFu15s_Sf, "aUl_BFu15s_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu16i_Sf()
{
  {
    init_simple_test("aUl_BFu16i_Sf");
    static aUl_BFu16i_Sf lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu16i_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu16i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "aUl_BFu16i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "aUl_BFu16i_Sf");
    check_field_offset(lv, v3, 10, "aUl_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu16i_Sf(Test_aUl_BFu16i_Sf, "aUl_BFu16i_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu16ll_Sf()
{
  {
    init_simple_test("aUl_BFu16ll_Sf");
    static aUl_BFu16ll_Sf lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu16ll_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu16ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "aUl_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "aUl_BFu16ll_Sf");
    check_field_offset(lv, v3, 10, "aUl_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu16ll_Sf(Test_aUl_BFu16ll_Sf, "aUl_BFu16ll_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu16s_Sf()
{
  {
    init_simple_test("aUl_BFu16s_Sf");
    static aUl_BFu16s_Sf lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu16s_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu16s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "aUl_BFu16s_Sf");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "aUl_BFu16s_Sf");
    check_field_offset(lv, v3, 10, "aUl_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu16s_Sf(Test_aUl_BFu16s_Sf, "aUl_BFu16s_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu17i_Sf()
{
  {
    init_simple_test("aUl_BFu17i_Sf");
    static aUl_BFu17i_Sf lv;
    check2(sizeof(lv), 12, "sizeof(aUl_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu17i_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu17i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "aUl_BFu17i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "aUl_BFu17i_Sf");
    check_field_offset(lv, v3, 11, "aUl_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu17i_Sf(Test_aUl_BFu17i_Sf, "aUl_BFu17i_Sf", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu17ll_Sf()
{
  {
    init_simple_test("aUl_BFu17ll_Sf");
    static aUl_BFu17ll_Sf lv;
    check2(sizeof(lv), 12, "sizeof(aUl_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu17ll_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu17ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "aUl_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "aUl_BFu17ll_Sf");
    check_field_offset(lv, v3, 11, "aUl_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu17ll_Sf(Test_aUl_BFu17ll_Sf, "aUl_BFu17ll_Sf", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu1c_Sf()
{
  {
    init_simple_test("aUl_BFu1c_Sf");
    static aUl_BFu1c_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu1c_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu1c_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "aUl_BFu1c_Sf");
    check_field_offset(lv, v3, 9, "aUl_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu1c_Sf(Test_aUl_BFu1c_Sf, "aUl_BFu1c_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu1i_Sf()
{
  {
    init_simple_test("aUl_BFu1i_Sf");
    static aUl_BFu1i_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu1i_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu1i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "aUl_BFu1i_Sf");
    check_field_offset(lv, v3, 9, "aUl_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu1i_Sf(Test_aUl_BFu1i_Sf, "aUl_BFu1i_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu1ll_Sf()
{
  {
    init_simple_test("aUl_BFu1ll_Sf");
    static aUl_BFu1ll_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu1ll_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu1ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "aUl_BFu1ll_Sf");
    check_field_offset(lv, v3, 9, "aUl_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu1ll_Sf(Test_aUl_BFu1ll_Sf, "aUl_BFu1ll_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu1s_Sf()
{
  {
    init_simple_test("aUl_BFu1s_Sf");
    static aUl_BFu1s_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu1s_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu1s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "aUl_BFu1s_Sf");
    check_field_offset(lv, v3, 9, "aUl_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu1s_Sf(Test_aUl_BFu1s_Sf, "aUl_BFu1s_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu31i_Sf()
{
  {
    init_simple_test("aUl_BFu31i_Sf");
    static aUl_BFu31i_Sf lv;
    check2(sizeof(lv), 13, "sizeof(aUl_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu31i_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu31i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "aUl_BFu31i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "aUl_BFu31i_Sf");
    check_field_offset(lv, v3, 12, "aUl_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu31i_Sf(Test_aUl_BFu31i_Sf, "aUl_BFu31i_Sf", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu31ll_Sf()
{
  {
    init_simple_test("aUl_BFu31ll_Sf");
    static aUl_BFu31ll_Sf lv;
    check2(sizeof(lv), 13, "sizeof(aUl_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu31ll_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu31ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "aUl_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "aUl_BFu31ll_Sf");
    check_field_offset(lv, v3, 12, "aUl_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu31ll_Sf(Test_aUl_BFu31ll_Sf, "aUl_BFu31ll_Sf", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu32i_Sf()
{
  {
    init_simple_test("aUl_BFu32i_Sf");
    static aUl_BFu32i_Sf lv;
    check2(sizeof(lv), 13, "sizeof(aUl_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu32i_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu32i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "aUl_BFu32i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "aUl_BFu32i_Sf");
    check_field_offset(lv, v3, 12, "aUl_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu32i_Sf(Test_aUl_BFu32i_Sf, "aUl_BFu32i_Sf", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu32ll_Sf()
{
  {
    init_simple_test("aUl_BFu32ll_Sf");
    static aUl_BFu32ll_Sf lv;
    check2(sizeof(lv), 13, "sizeof(aUl_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu32ll_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu32ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "aUl_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "aUl_BFu32ll_Sf");
    check_field_offset(lv, v3, 12, "aUl_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu32ll_Sf(Test_aUl_BFu32ll_Sf, "aUl_BFu32ll_Sf", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu33_Sf()
{
  {
    init_simple_test("aUl_BFu33_Sf");
    static aUl_BFu33_Sf lv;
    check2(sizeof(lv), 14, "sizeof(aUl_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu33_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu33_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "aUl_BFu33_Sf");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "aUl_BFu33_Sf");
    check_field_offset(lv, v3, 13, "aUl_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu33_Sf(Test_aUl_BFu33_Sf, "aUl_BFu33_Sf", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu7c_Sf()
{
  {
    init_simple_test("aUl_BFu7c_Sf");
    static aUl_BFu7c_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu7c_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu7c_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "aUl_BFu7c_Sf");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "aUl_BFu7c_Sf");
    check_field_offset(lv, v3, 9, "aUl_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu7c_Sf(Test_aUl_BFu7c_Sf, "aUl_BFu7c_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu7i_Sf()
{
  {
    init_simple_test("aUl_BFu7i_Sf");
    static aUl_BFu7i_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu7i_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu7i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "aUl_BFu7i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "aUl_BFu7i_Sf");
    check_field_offset(lv, v3, 9, "aUl_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu7i_Sf(Test_aUl_BFu7i_Sf, "aUl_BFu7i_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu7ll_Sf()
{
  {
    init_simple_test("aUl_BFu7ll_Sf");
    static aUl_BFu7ll_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu7ll_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu7ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "aUl_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "aUl_BFu7ll_Sf");
    check_field_offset(lv, v3, 9, "aUl_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu7ll_Sf(Test_aUl_BFu7ll_Sf, "aUl_BFu7ll_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu7s_Sf()
{
  {
    init_simple_test("aUl_BFu7s_Sf");
    static aUl_BFu7s_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu7s_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu7s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "aUl_BFu7s_Sf");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "aUl_BFu7s_Sf");
    check_field_offset(lv, v3, 9, "aUl_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu7s_Sf(Test_aUl_BFu7s_Sf, "aUl_BFu7s_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu8c_Sf()
{
  {
    init_simple_test("aUl_BFu8c_Sf");
    static aUl_BFu8c_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu8c_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu8c_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "aUl_BFu8c_Sf");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "aUl_BFu8c_Sf");
    check_field_offset(lv, v3, 9, "aUl_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu8c_Sf(Test_aUl_BFu8c_Sf, "aUl_BFu8c_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu8i_Sf()
{
  {
    init_simple_test("aUl_BFu8i_Sf");
    static aUl_BFu8i_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu8i_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu8i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "aUl_BFu8i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "aUl_BFu8i_Sf");
    check_field_offset(lv, v3, 9, "aUl_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu8i_Sf(Test_aUl_BFu8i_Sf, "aUl_BFu8i_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu8ll_Sf()
{
  {
    init_simple_test("aUl_BFu8ll_Sf");
    static aUl_BFu8ll_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu8ll_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu8ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "aUl_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "aUl_BFu8ll_Sf");
    check_field_offset(lv, v3, 9, "aUl_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu8ll_Sf(Test_aUl_BFu8ll_Sf, "aUl_BFu8ll_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu8s_Sf()
{
  {
    init_simple_test("aUl_BFu8s_Sf");
    static aUl_BFu8s_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu8s_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu8s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "aUl_BFu8s_Sf");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "aUl_BFu8s_Sf");
    check_field_offset(lv, v3, 9, "aUl_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu8s_Sf(Test_aUl_BFu8s_Sf, "aUl_BFu8s_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu9i_Sf()
{
  {
    init_simple_test("aUl_BFu9i_Sf");
    static aUl_BFu9i_Sf lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu9i_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu9i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "aUl_BFu9i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "aUl_BFu9i_Sf");
    check_field_offset(lv, v3, 10, "aUl_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu9i_Sf(Test_aUl_BFu9i_Sf, "aUl_BFu9i_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu9ll_Sf()
{
  {
    init_simple_test("aUl_BFu9ll_Sf");
    static aUl_BFu9ll_Sf lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu9ll_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu9ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "aUl_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "aUl_BFu9ll_Sf");
    check_field_offset(lv, v3, 10, "aUl_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu9ll_Sf(Test_aUl_BFu9ll_Sf, "aUl_BFu9ll_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu9s_Sf()
{
  {
    init_simple_test("aUl_BFu9s_Sf");
    static aUl_BFu9s_Sf lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu9s_Sf)");
    check_field_offset(lv, v1, 0, "aUl_BFu9s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "aUl_BFu9s_Sf");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "aUl_BFu9s_Sf");
    check_field_offset(lv, v3, 10, "aUl_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu9s_Sf(Test_aUl_BFu9s_Sf, "aUl_BFu9s_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_C_Sf()
{
  {
    init_simple_test("aUl_C_Sf");
    aUl_C_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUl_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_C_Sf)");
    check_field_offset(lv, v1, 0, "aUl_C_Sf.v1");
    check_field_offset(lv, v2, 8, "aUl_C_Sf.v2");
    check_field_offset(lv, v3, 9, "aUl_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_C_Sf(Test_aUl_C_Sf, "aUl_C_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_D_Sf()
{
  {
    init_simple_test("aUl_D_Sf");
    aUl_D_Sf lv;
    check2(sizeof(lv), 17, "sizeof(aUl_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_D_Sf)");
    check_field_offset(lv, v1, 0, "aUl_D_Sf.v1");
    check_field_offset(lv, v2, 8, "aUl_D_Sf.v2");
    check_field_offset(lv, v3, 16, "aUl_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_D_Sf(Test_aUl_D_Sf, "aUl_D_Sf", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_F_Sf()
{
  {
    init_simple_test("aUl_F_Sf");
    aUl_F_Sf lv;
    check2(sizeof(lv), 13, "sizeof(aUl_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_F_Sf)");
    check_field_offset(lv, v1, 0, "aUl_F_Sf.v1");
    check_field_offset(lv, v2, 8, "aUl_F_Sf.v2");
    check_field_offset(lv, v3, 12, "aUl_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_F_Sf(Test_aUl_F_Sf, "aUl_F_Sf", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_I_Sf()
{
  {
    init_simple_test("aUl_I_Sf");
    aUl_I_Sf lv;
    check2(sizeof(lv), 13, "sizeof(aUl_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_I_Sf)");
    check_field_offset(lv, v1, 0, "aUl_I_Sf.v1");
    check_field_offset(lv, v2, 8, "aUl_I_Sf.v2");
    check_field_offset(lv, v3, 12, "aUl_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_I_Sf(Test_aUl_I_Sf, "aUl_I_Sf", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Ip_Sf()
{
  {
    init_simple_test("aUl_Ip_Sf");
    aUl_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aUl_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Ip_Sf)");
    check_field_offset(lv, v1, 0, "aUl_Ip_Sf.v1");
    check_field_offset(lv, v2, 8, "aUl_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aUl_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_Ip_Sf(Test_aUl_Ip_Sf, "aUl_Ip_Sf", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_L_Sf()
{
  {
    init_simple_test("aUl_L_Sf");
    aUl_L_Sf lv;
    check2(sizeof(lv), 17, "sizeof(aUl_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_L_Sf)");
    check_field_offset(lv, v1, 0, "aUl_L_Sf.v1");
    check_field_offset(lv, v2, 8, "aUl_L_Sf.v2");
    check_field_offset(lv, v3, 16, "aUl_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_L_Sf(Test_aUl_L_Sf, "aUl_L_Sf", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_S_Sf()
{
  {
    init_simple_test("aUl_S_Sf");
    aUl_S_Sf lv;
    check2(sizeof(lv), 11, "sizeof(aUl_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_S_Sf)");
    check_field_offset(lv, v1, 0, "aUl_S_Sf.v1");
    check_field_offset(lv, v2, 8, "aUl_S_Sf.v2");
    check_field_offset(lv, v3, 10, "aUl_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_S_Sf(Test_aUl_S_Sf, "aUl_S_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf()
{
  {
    init_simple_test("aUl_Sf");
    aUl_Sf lv;
    check2(sizeof(lv), 9, "sizeof(aUl_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf)");
    check_field_offset(lv, v1, 0, "aUl_Sf.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf.v2");
  }
}
static Arrange_To_Call_Me vaUl_Sf(Test_aUl_Sf, "aUl_Sf", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu15i()
{
  {
    init_simple_test("aUl_Sf_BFu15i");
    static aUl_Sf_BFu15i lv;
    check2(sizeof(lv), 11, "sizeof(aUl_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu15i)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu15i.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aUl_Sf_BFu15i");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aUl_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu15i(Test_aUl_Sf_BFu15i, "aUl_Sf_BFu15i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu15ll()
{
  {
    init_simple_test("aUl_Sf_BFu15ll");
    static aUl_Sf_BFu15ll lv;
    check2(sizeof(lv), 11, "sizeof(aUl_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu15ll.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aUl_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aUl_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu15ll(Test_aUl_Sf_BFu15ll, "aUl_Sf_BFu15ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu15s()
{
  {
    init_simple_test("aUl_Sf_BFu15s");
    static aUl_Sf_BFu15s lv;
    check2(sizeof(lv), 11, "sizeof(aUl_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu15s)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu15s.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aUl_Sf_BFu15s");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aUl_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu15s(Test_aUl_Sf_BFu15s, "aUl_Sf_BFu15s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu16i()
{
  {
    init_simple_test("aUl_Sf_BFu16i");
    static aUl_Sf_BFu16i lv;
    check2(sizeof(lv), 11, "sizeof(aUl_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu16i)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu16i.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aUl_Sf_BFu16i");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aUl_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu16i(Test_aUl_Sf_BFu16i, "aUl_Sf_BFu16i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu16ll()
{
  {
    init_simple_test("aUl_Sf_BFu16ll");
    static aUl_Sf_BFu16ll lv;
    check2(sizeof(lv), 11, "sizeof(aUl_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu16ll.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aUl_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aUl_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu16ll(Test_aUl_Sf_BFu16ll, "aUl_Sf_BFu16ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu16s()
{
  {
    init_simple_test("aUl_Sf_BFu16s");
    static aUl_Sf_BFu16s lv;
    check2(sizeof(lv), 11, "sizeof(aUl_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu16s)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu16s.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aUl_Sf_BFu16s");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aUl_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu16s(Test_aUl_Sf_BFu16s, "aUl_Sf_BFu16s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu17i()
{
  {
    init_simple_test("aUl_Sf_BFu17i");
    static aUl_Sf_BFu17i lv;
    check2(sizeof(lv), 12, "sizeof(aUl_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu17i)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu17i.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 9, 0, 17, 1, "aUl_Sf_BFu17i");
    set_bf_and_test(lv, v3, 9, 0, 17, hide_ull(1LL<<16), "aUl_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu17i(Test_aUl_Sf_BFu17i, "aUl_Sf_BFu17i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu17ll()
{
  {
    init_simple_test("aUl_Sf_BFu17ll");
    static aUl_Sf_BFu17ll lv;
    check2(sizeof(lv), 12, "sizeof(aUl_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu17ll.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 17, 1, "aUl_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 9, 0, 17, hide_ull(1LL<<16), "aUl_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu17ll(Test_aUl_Sf_BFu17ll, "aUl_Sf_BFu17ll", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu1c()
{
  {
    init_simple_test("aUl_Sf_BFu1c");
    static aUl_Sf_BFu1c lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu1c)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu1c.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aUl_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu1c(Test_aUl_Sf_BFu1c, "aUl_Sf_BFu1c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu1i()
{
  {
    init_simple_test("aUl_Sf_BFu1i");
    static aUl_Sf_BFu1i lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu1i)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu1i.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aUl_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu1i(Test_aUl_Sf_BFu1i, "aUl_Sf_BFu1i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu1ll()
{
  {
    init_simple_test("aUl_Sf_BFu1ll");
    static aUl_Sf_BFu1ll lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu1ll.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aUl_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu1ll(Test_aUl_Sf_BFu1ll, "aUl_Sf_BFu1ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu1s()
{
  {
    init_simple_test("aUl_Sf_BFu1s");
    static aUl_Sf_BFu1s lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu1s)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu1s.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aUl_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu1s(Test_aUl_Sf_BFu1s, "aUl_Sf_BFu1s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu31i()
{
  {
    init_simple_test("aUl_Sf_BFu31i");
    static aUl_Sf_BFu31i lv;
    check2(sizeof(lv), 13, "sizeof(aUl_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu31i)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu31i.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 9, 0, 31, 1, "aUl_Sf_BFu31i");
    set_bf_and_test(lv, v3, 9, 0, 31, hide_ull(1LL<<30), "aUl_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu31i(Test_aUl_Sf_BFu31i, "aUl_Sf_BFu31i", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu31ll()
{
  {
    init_simple_test("aUl_Sf_BFu31ll");
    static aUl_Sf_BFu31ll lv;
    check2(sizeof(lv), 13, "sizeof(aUl_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu31ll.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 31, 1, "aUl_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 9, 0, 31, hide_ull(1LL<<30), "aUl_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu31ll(Test_aUl_Sf_BFu31ll, "aUl_Sf_BFu31ll", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu32i()
{
  {
    init_simple_test("aUl_Sf_BFu32i");
    static aUl_Sf_BFu32i lv;
    check2(sizeof(lv), 13, "sizeof(aUl_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu32i)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu32i.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 9, 0, 32, 1, "aUl_Sf_BFu32i");
    set_bf_and_test(lv, v3, 9, 0, 32, hide_ull(1LL<<31), "aUl_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu32i(Test_aUl_Sf_BFu32i, "aUl_Sf_BFu32i", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu32ll()
{
  {
    init_simple_test("aUl_Sf_BFu32ll");
    static aUl_Sf_BFu32ll lv;
    check2(sizeof(lv), 13, "sizeof(aUl_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu32ll.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 32, 1, "aUl_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 9, 0, 32, hide_ull(1LL<<31), "aUl_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu32ll(Test_aUl_Sf_BFu32ll, "aUl_Sf_BFu32ll", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu33()
{
  {
    init_simple_test("aUl_Sf_BFu33");
    static aUl_Sf_BFu33 lv;
    check2(sizeof(lv), 14, "sizeof(aUl_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu33)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu33.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 9, 0, 33, 1, "aUl_Sf_BFu33");
    set_bf_and_test(lv, v3, 9, 0, 33, hide_ull(1LL<<32), "aUl_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu33(Test_aUl_Sf_BFu33, "aUl_Sf_BFu33", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu7c()
{
  {
    init_simple_test("aUl_Sf_BFu7c");
    static aUl_Sf_BFu7c lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu7c)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu7c.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aUl_Sf_BFu7c");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aUl_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu7c(Test_aUl_Sf_BFu7c, "aUl_Sf_BFu7c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu7i()
{
  {
    init_simple_test("aUl_Sf_BFu7i");
    static aUl_Sf_BFu7i lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu7i)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu7i.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aUl_Sf_BFu7i");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aUl_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu7i(Test_aUl_Sf_BFu7i, "aUl_Sf_BFu7i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu7ll()
{
  {
    init_simple_test("aUl_Sf_BFu7ll");
    static aUl_Sf_BFu7ll lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu7ll.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aUl_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aUl_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu7ll(Test_aUl_Sf_BFu7ll, "aUl_Sf_BFu7ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu7s()
{
  {
    init_simple_test("aUl_Sf_BFu7s");
    static aUl_Sf_BFu7s lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu7s)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu7s.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aUl_Sf_BFu7s");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aUl_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu7s(Test_aUl_Sf_BFu7s, "aUl_Sf_BFu7s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu8c()
{
  {
    init_simple_test("aUl_Sf_BFu8c");
    static aUl_Sf_BFu8c lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu8c)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu8c.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aUl_Sf_BFu8c");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aUl_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu8c(Test_aUl_Sf_BFu8c, "aUl_Sf_BFu8c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu8i()
{
  {
    init_simple_test("aUl_Sf_BFu8i");
    static aUl_Sf_BFu8i lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu8i)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu8i.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aUl_Sf_BFu8i");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aUl_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu8i(Test_aUl_Sf_BFu8i, "aUl_Sf_BFu8i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu8ll()
{
  {
    init_simple_test("aUl_Sf_BFu8ll");
    static aUl_Sf_BFu8ll lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu8ll.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aUl_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aUl_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu8ll(Test_aUl_Sf_BFu8ll, "aUl_Sf_BFu8ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu8s()
{
  {
    init_simple_test("aUl_Sf_BFu8s");
    static aUl_Sf_BFu8s lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu8s)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu8s.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aUl_Sf_BFu8s");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aUl_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu8s(Test_aUl_Sf_BFu8s, "aUl_Sf_BFu8s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu9i()
{
  {
    init_simple_test("aUl_Sf_BFu9i");
    static aUl_Sf_BFu9i lv;
    check2(sizeof(lv), 11, "sizeof(aUl_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu9i)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu9i.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aUl_Sf_BFu9i");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aUl_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu9i(Test_aUl_Sf_BFu9i, "aUl_Sf_BFu9i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu9ll()
{
  {
    init_simple_test("aUl_Sf_BFu9ll");
    static aUl_Sf_BFu9ll lv;
    check2(sizeof(lv), 11, "sizeof(aUl_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu9ll.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aUl_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aUl_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu9ll(Test_aUl_Sf_BFu9ll, "aUl_Sf_BFu9ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_BFu9s()
{
  {
    init_simple_test("aUl_Sf_BFu9s");
    static aUl_Sf_BFu9s lv;
    check2(sizeof(lv), 11, "sizeof(aUl_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_BFu9s)");
    check_field_offset(lv, v1, 0, "aUl_Sf_BFu9s.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aUl_Sf_BFu9s");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aUl_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vaUl_Sf_BFu9s(Test_aUl_Sf_BFu9s, "aUl_Sf_BFu9s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_C()
{
  {
    init_simple_test("aUl_Sf_C");
    aUl_Sf_C lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_C)");
    check_field_offset(lv, v1, 0, "aUl_Sf_C.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_C.v2");
    check_field_offset(lv, v3, 9, "aUl_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vaUl_Sf_C(Test_aUl_Sf_C, "aUl_Sf_C", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_D()
{
  {
    init_simple_test("aUl_Sf_D");
    aUl_Sf_D lv;
    check2(sizeof(lv), 17, "sizeof(aUl_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_D)");
    check_field_offset(lv, v1, 0, "aUl_Sf_D.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_D.v2");
    check_field_offset(lv, v3, 9, "aUl_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vaUl_Sf_D(Test_aUl_Sf_D, "aUl_Sf_D", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_F()
{
  {
    init_simple_test("aUl_Sf_F");
    aUl_Sf_F lv;
    check2(sizeof(lv), 13, "sizeof(aUl_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_F)");
    check_field_offset(lv, v1, 0, "aUl_Sf_F.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_F.v2");
    check_field_offset(lv, v3, 9, "aUl_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vaUl_Sf_F(Test_aUl_Sf_F, "aUl_Sf_F", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_I()
{
  {
    init_simple_test("aUl_Sf_I");
    aUl_Sf_I lv;
    check2(sizeof(lv), 13, "sizeof(aUl_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_I)");
    check_field_offset(lv, v1, 0, "aUl_Sf_I.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_I.v2");
    check_field_offset(lv, v3, 9, "aUl_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vaUl_Sf_I(Test_aUl_Sf_I, "aUl_Sf_I", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_Ip()
{
  {
    init_simple_test("aUl_Sf_Ip");
    aUl_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aUl_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_Ip)");
    check_field_offset(lv, v1, 0, "aUl_Sf_Ip.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_Ip.v2");
    check_field_offset(lv, v3, 9, "aUl_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vaUl_Sf_Ip(Test_aUl_Sf_Ip, "aUl_Sf_Ip", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_L()
{
  {
    init_simple_test("aUl_Sf_L");
    aUl_Sf_L lv;
    check2(sizeof(lv), 17, "sizeof(aUl_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_L)");
    check_field_offset(lv, v1, 0, "aUl_Sf_L.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_L.v2");
    check_field_offset(lv, v3, 9, "aUl_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vaUl_Sf_L(Test_aUl_Sf_L, "aUl_Sf_L", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_S()
{
  {
    init_simple_test("aUl_Sf_S");
    aUl_Sf_S lv;
    check2(sizeof(lv), 11, "sizeof(aUl_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_S)");
    check_field_offset(lv, v1, 0, "aUl_Sf_S.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_S.v2");
    check_field_offset(lv, v3, 9, "aUl_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vaUl_Sf_S(Test_aUl_Sf_S, "aUl_Sf_S", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_Sf()
{
  {
    init_simple_test("aUl_Sf_Sf");
    aUl_Sf_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_Sf)");
    check_field_offset(lv, v1, 0, "aUl_Sf_Sf.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_Sf.v2");
    check_field_offset(lv, v3, 9, "aUl_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_Sf_Sf(Test_aUl_Sf_Sf, "aUl_Sf_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_Uc()
{
  {
    init_simple_test("aUl_Sf_Uc");
    aUl_Sf_Uc lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_Uc)");
    check_field_offset(lv, v1, 0, "aUl_Sf_Uc.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_Uc.v2");
    check_field_offset(lv, v3, 9, "aUl_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vaUl_Sf_Uc(Test_aUl_Sf_Uc, "aUl_Sf_Uc", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_Ui()
{
  {
    init_simple_test("aUl_Sf_Ui");
    aUl_Sf_Ui lv;
    check2(sizeof(lv), 13, "sizeof(aUl_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_Ui)");
    check_field_offset(lv, v1, 0, "aUl_Sf_Ui.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_Ui.v2");
    check_field_offset(lv, v3, 9, "aUl_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vaUl_Sf_Ui(Test_aUl_Sf_Ui, "aUl_Sf_Ui", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_Ul()
{
  {
    init_simple_test("aUl_Sf_Ul");
    aUl_Sf_Ul lv;
    check2(sizeof(lv), 17, "sizeof(aUl_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_Ul)");
    check_field_offset(lv, v1, 0, "aUl_Sf_Ul.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_Ul.v2");
    check_field_offset(lv, v3, 9, "aUl_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vaUl_Sf_Ul(Test_aUl_Sf_Ul, "aUl_Sf_Ul", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_Us()
{
  {
    init_simple_test("aUl_Sf_Us");
    aUl_Sf_Us lv;
    check2(sizeof(lv), 11, "sizeof(aUl_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_Us)");
    check_field_offset(lv, v1, 0, "aUl_Sf_Us.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_Us.v2");
    check_field_offset(lv, v3, 9, "aUl_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vaUl_Sf_Us(Test_aUl_Sf_Us, "aUl_Sf_Us", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Sf_Vp()
{
  {
    init_simple_test("aUl_Sf_Vp");
    aUl_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aUl_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Sf_Vp)");
    check_field_offset(lv, v1, 0, "aUl_Sf_Vp.v1");
    check_field_offset(lv, v2, 8, "aUl_Sf_Vp.v2");
    check_field_offset(lv, v3, 9, "aUl_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vaUl_Sf_Vp(Test_aUl_Sf_Vp, "aUl_Sf_Vp", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Uc_Sf()
{
  {
    init_simple_test("aUl_Uc_Sf");
    aUl_Uc_Sf lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Uc_Sf)");
    check_field_offset(lv, v1, 0, "aUl_Uc_Sf.v1");
    check_field_offset(lv, v2, 8, "aUl_Uc_Sf.v2");
    check_field_offset(lv, v3, 9, "aUl_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_Uc_Sf(Test_aUl_Uc_Sf, "aUl_Uc_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Ui_Sf()
{
  {
    init_simple_test("aUl_Ui_Sf");
    aUl_Ui_Sf lv;
    check2(sizeof(lv), 13, "sizeof(aUl_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Ui_Sf)");
    check_field_offset(lv, v1, 0, "aUl_Ui_Sf.v1");
    check_field_offset(lv, v2, 8, "aUl_Ui_Sf.v2");
    check_field_offset(lv, v3, 12, "aUl_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_Ui_Sf(Test_aUl_Ui_Sf, "aUl_Ui_Sf", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Ul_Sf()
{
  {
    init_simple_test("aUl_Ul_Sf");
    aUl_Ul_Sf lv;
    check2(sizeof(lv), 17, "sizeof(aUl_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Ul_Sf)");
    check_field_offset(lv, v1, 0, "aUl_Ul_Sf.v1");
    check_field_offset(lv, v2, 8, "aUl_Ul_Sf.v2");
    check_field_offset(lv, v3, 16, "aUl_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_Ul_Sf(Test_aUl_Ul_Sf, "aUl_Ul_Sf", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Us_Sf()
{
  {
    init_simple_test("aUl_Us_Sf");
    aUl_Us_Sf lv;
    check2(sizeof(lv), 11, "sizeof(aUl_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Us_Sf)");
    check_field_offset(lv, v1, 0, "aUl_Us_Sf.v1");
    check_field_offset(lv, v2, 8, "aUl_Us_Sf.v2");
    check_field_offset(lv, v3, 10, "aUl_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_Us_Sf(Test_aUl_Us_Sf, "aUl_Us_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Vp_Sf()
{
  {
    init_simple_test("aUl_Vp_Sf");
    aUl_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aUl_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Vp_Sf)");
    check_field_offset(lv, v1, 0, "aUl_Vp_Sf.v1");
    check_field_offset(lv, v2, 8, "aUl_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aUl_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUl_Vp_Sf(Test_aUl_Vp_Sf, "aUl_Vp_Sf", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu15i_Sf()
{
  {
    init_simple_test("aUs_BFu15i_Sf");
    static aUs_BFu15i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu15i_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu15i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aUs_BFu15i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aUs_BFu15i_Sf");
    check_field_offset(lv, v3, 4, "aUs_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu15i_Sf(Test_aUs_BFu15i_Sf, "aUs_BFu15i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu15ll_Sf()
{
  {
    init_simple_test("aUs_BFu15ll_Sf");
    static aUs_BFu15ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu15ll_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu15ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aUs_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aUs_BFu15ll_Sf");
    check_field_offset(lv, v3, 4, "aUs_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu15ll_Sf(Test_aUs_BFu15ll_Sf, "aUs_BFu15ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu15s_Sf()
{
  {
    init_simple_test("aUs_BFu15s_Sf");
    static aUs_BFu15s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu15s_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu15s_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aUs_BFu15s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aUs_BFu15s_Sf");
    check_field_offset(lv, v3, 4, "aUs_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu15s_Sf(Test_aUs_BFu15s_Sf, "aUs_BFu15s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu16i_Sf()
{
  {
    init_simple_test("aUs_BFu16i_Sf");
    static aUs_BFu16i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu16i_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu16i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aUs_BFu16i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aUs_BFu16i_Sf");
    check_field_offset(lv, v3, 4, "aUs_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu16i_Sf(Test_aUs_BFu16i_Sf, "aUs_BFu16i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu16ll_Sf()
{
  {
    init_simple_test("aUs_BFu16ll_Sf");
    static aUs_BFu16ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu16ll_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu16ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aUs_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aUs_BFu16ll_Sf");
    check_field_offset(lv, v3, 4, "aUs_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu16ll_Sf(Test_aUs_BFu16ll_Sf, "aUs_BFu16ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu16s_Sf()
{
  {
    init_simple_test("aUs_BFu16s_Sf");
    static aUs_BFu16s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu16s_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu16s_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aUs_BFu16s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aUs_BFu16s_Sf");
    check_field_offset(lv, v3, 4, "aUs_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu16s_Sf(Test_aUs_BFu16s_Sf, "aUs_BFu16s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu17i_Sf()
{
  {
    init_simple_test("aUs_BFu17i_Sf");
    static aUs_BFu17i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUs_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu17i_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu17i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aUs_BFu17i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aUs_BFu17i_Sf");
    check_field_offset(lv, v3, 5, "aUs_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu17i_Sf(Test_aUs_BFu17i_Sf, "aUs_BFu17i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu17ll_Sf()
{
  {
    init_simple_test("aUs_BFu17ll_Sf");
    static aUs_BFu17ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(aUs_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu17ll_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu17ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aUs_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aUs_BFu17ll_Sf");
    check_field_offset(lv, v3, 5, "aUs_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu17ll_Sf(Test_aUs_BFu17ll_Sf, "aUs_BFu17ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu1c_Sf()
{
  {
    init_simple_test("aUs_BFu1c_Sf");
    static aUs_BFu1c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu1c_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu1c_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aUs_BFu1c_Sf");
    check_field_offset(lv, v3, 3, "aUs_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu1c_Sf(Test_aUs_BFu1c_Sf, "aUs_BFu1c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu1i_Sf()
{
  {
    init_simple_test("aUs_BFu1i_Sf");
    static aUs_BFu1i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu1i_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu1i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aUs_BFu1i_Sf");
    check_field_offset(lv, v3, 3, "aUs_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu1i_Sf(Test_aUs_BFu1i_Sf, "aUs_BFu1i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu1ll_Sf()
{
  {
    init_simple_test("aUs_BFu1ll_Sf");
    static aUs_BFu1ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu1ll_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu1ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aUs_BFu1ll_Sf");
    check_field_offset(lv, v3, 3, "aUs_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu1ll_Sf(Test_aUs_BFu1ll_Sf, "aUs_BFu1ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu1s_Sf()
{
  {
    init_simple_test("aUs_BFu1s_Sf");
    static aUs_BFu1s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu1s_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu1s_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aUs_BFu1s_Sf");
    check_field_offset(lv, v3, 3, "aUs_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu1s_Sf(Test_aUs_BFu1s_Sf, "aUs_BFu1s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu31i_Sf()
{
  {
    init_simple_test("aUs_BFu31i_Sf");
    static aUs_BFu31i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUs_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu31i_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu31i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aUs_BFu31i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aUs_BFu31i_Sf");
    check_field_offset(lv, v3, 6, "aUs_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu31i_Sf(Test_aUs_BFu31i_Sf, "aUs_BFu31i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu31ll_Sf()
{
  {
    init_simple_test("aUs_BFu31ll_Sf");
    static aUs_BFu31ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUs_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu31ll_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu31ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aUs_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aUs_BFu31ll_Sf");
    check_field_offset(lv, v3, 6, "aUs_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu31ll_Sf(Test_aUs_BFu31ll_Sf, "aUs_BFu31ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu32i_Sf()
{
  {
    init_simple_test("aUs_BFu32i_Sf");
    static aUs_BFu32i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUs_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu32i_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu32i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aUs_BFu32i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aUs_BFu32i_Sf");
    check_field_offset(lv, v3, 6, "aUs_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu32i_Sf(Test_aUs_BFu32i_Sf, "aUs_BFu32i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu32ll_Sf()
{
  {
    init_simple_test("aUs_BFu32ll_Sf");
    static aUs_BFu32ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUs_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu32ll_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu32ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aUs_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aUs_BFu32ll_Sf");
    check_field_offset(lv, v3, 6, "aUs_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu32ll_Sf(Test_aUs_BFu32ll_Sf, "aUs_BFu32ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu33_Sf()
{
  {
    init_simple_test("aUs_BFu33_Sf");
    static aUs_BFu33_Sf lv;
    check2(sizeof(lv), 8, "sizeof(aUs_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu33_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu33_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aUs_BFu33_Sf");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aUs_BFu33_Sf");
    check_field_offset(lv, v3, 7, "aUs_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu33_Sf(Test_aUs_BFu33_Sf, "aUs_BFu33_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu7c_Sf()
{
  {
    init_simple_test("aUs_BFu7c_Sf");
    static aUs_BFu7c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu7c_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu7c_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aUs_BFu7c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aUs_BFu7c_Sf");
    check_field_offset(lv, v3, 3, "aUs_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu7c_Sf(Test_aUs_BFu7c_Sf, "aUs_BFu7c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu7i_Sf()
{
  {
    init_simple_test("aUs_BFu7i_Sf");
    static aUs_BFu7i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu7i_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu7i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aUs_BFu7i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aUs_BFu7i_Sf");
    check_field_offset(lv, v3, 3, "aUs_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu7i_Sf(Test_aUs_BFu7i_Sf, "aUs_BFu7i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu7ll_Sf()
{
  {
    init_simple_test("aUs_BFu7ll_Sf");
    static aUs_BFu7ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu7ll_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu7ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aUs_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aUs_BFu7ll_Sf");
    check_field_offset(lv, v3, 3, "aUs_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu7ll_Sf(Test_aUs_BFu7ll_Sf, "aUs_BFu7ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu7s_Sf()
{
  {
    init_simple_test("aUs_BFu7s_Sf");
    static aUs_BFu7s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu7s_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu7s_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aUs_BFu7s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aUs_BFu7s_Sf");
    check_field_offset(lv, v3, 3, "aUs_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu7s_Sf(Test_aUs_BFu7s_Sf, "aUs_BFu7s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu8c_Sf()
{
  {
    init_simple_test("aUs_BFu8c_Sf");
    static aUs_BFu8c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu8c_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu8c_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aUs_BFu8c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aUs_BFu8c_Sf");
    check_field_offset(lv, v3, 3, "aUs_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu8c_Sf(Test_aUs_BFu8c_Sf, "aUs_BFu8c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu8i_Sf()
{
  {
    init_simple_test("aUs_BFu8i_Sf");
    static aUs_BFu8i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu8i_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu8i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aUs_BFu8i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aUs_BFu8i_Sf");
    check_field_offset(lv, v3, 3, "aUs_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu8i_Sf(Test_aUs_BFu8i_Sf, "aUs_BFu8i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu8ll_Sf()
{
  {
    init_simple_test("aUs_BFu8ll_Sf");
    static aUs_BFu8ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu8ll_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu8ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aUs_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aUs_BFu8ll_Sf");
    check_field_offset(lv, v3, 3, "aUs_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu8ll_Sf(Test_aUs_BFu8ll_Sf, "aUs_BFu8ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu8s_Sf()
{
  {
    init_simple_test("aUs_BFu8s_Sf");
    static aUs_BFu8s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu8s_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu8s_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aUs_BFu8s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aUs_BFu8s_Sf");
    check_field_offset(lv, v3, 3, "aUs_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu8s_Sf(Test_aUs_BFu8s_Sf, "aUs_BFu8s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu9i_Sf()
{
  {
    init_simple_test("aUs_BFu9i_Sf");
    static aUs_BFu9i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu9i_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu9i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aUs_BFu9i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aUs_BFu9i_Sf");
    check_field_offset(lv, v3, 4, "aUs_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu9i_Sf(Test_aUs_BFu9i_Sf, "aUs_BFu9i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu9ll_Sf()
{
  {
    init_simple_test("aUs_BFu9ll_Sf");
    static aUs_BFu9ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu9ll_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu9ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aUs_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aUs_BFu9ll_Sf");
    check_field_offset(lv, v3, 4, "aUs_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu9ll_Sf(Test_aUs_BFu9ll_Sf, "aUs_BFu9ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu9s_Sf()
{
  {
    init_simple_test("aUs_BFu9s_Sf");
    static aUs_BFu9s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu9s_Sf)");
    check_field_offset(lv, v1, 0, "aUs_BFu9s_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aUs_BFu9s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aUs_BFu9s_Sf");
    check_field_offset(lv, v3, 4, "aUs_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu9s_Sf(Test_aUs_BFu9s_Sf, "aUs_BFu9s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_C_Sf()
{
  {
    init_simple_test("aUs_C_Sf");
    aUs_C_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUs_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_C_Sf)");
    check_field_offset(lv, v1, 0, "aUs_C_Sf.v1");
    check_field_offset(lv, v2, 2, "aUs_C_Sf.v2");
    check_field_offset(lv, v3, 3, "aUs_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_C_Sf(Test_aUs_C_Sf, "aUs_C_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_D_Sf()
{
  {
    init_simple_test("aUs_D_Sf");
    aUs_D_Sf lv;
    check2(sizeof(lv), 11, "sizeof(aUs_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_D_Sf)");
    check_field_offset(lv, v1, 0, "aUs_D_Sf.v1");
    check_field_offset(lv, v2, 2, "aUs_D_Sf.v2");
    check_field_offset(lv, v3, 10, "aUs_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_D_Sf(Test_aUs_D_Sf, "aUs_D_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_F_Sf()
{
  {
    init_simple_test("aUs_F_Sf");
    aUs_F_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUs_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_F_Sf)");
    check_field_offset(lv, v1, 0, "aUs_F_Sf.v1");
    check_field_offset(lv, v2, 2, "aUs_F_Sf.v2");
    check_field_offset(lv, v3, 6, "aUs_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_F_Sf(Test_aUs_F_Sf, "aUs_F_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_I_Sf()
{
  {
    init_simple_test("aUs_I_Sf");
    aUs_I_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUs_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_I_Sf)");
    check_field_offset(lv, v1, 0, "aUs_I_Sf.v1");
    check_field_offset(lv, v2, 2, "aUs_I_Sf.v2");
    check_field_offset(lv, v3, 6, "aUs_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_I_Sf(Test_aUs_I_Sf, "aUs_I_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Ip_Sf()
{
  {
    init_simple_test("aUs_Ip_Sf");
    aUs_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUs_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Ip_Sf)");
    check_field_offset(lv, v1, 0, "aUs_Ip_Sf.v1");
    check_field_offset(lv, v2, 2, "aUs_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aUs_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_Ip_Sf(Test_aUs_Ip_Sf, "aUs_Ip_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_L_Sf()
{
  {
    init_simple_test("aUs_L_Sf");
    aUs_L_Sf lv;
    check2(sizeof(lv), 11, "sizeof(aUs_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_L_Sf)");
    check_field_offset(lv, v1, 0, "aUs_L_Sf.v1");
    check_field_offset(lv, v2, 2, "aUs_L_Sf.v2");
    check_field_offset(lv, v3, 10, "aUs_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_L_Sf(Test_aUs_L_Sf, "aUs_L_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_S_Sf()
{
  {
    init_simple_test("aUs_S_Sf");
    aUs_S_Sf lv;
    check2(sizeof(lv), 5, "sizeof(aUs_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_S_Sf)");
    check_field_offset(lv, v1, 0, "aUs_S_Sf.v1");
    check_field_offset(lv, v2, 2, "aUs_S_Sf.v2");
    check_field_offset(lv, v3, 4, "aUs_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_S_Sf(Test_aUs_S_Sf, "aUs_S_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf()
{
  {
    init_simple_test("aUs_Sf");
    aUs_Sf lv;
    check2(sizeof(lv), 3, "sizeof(aUs_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf)");
    check_field_offset(lv, v1, 0, "aUs_Sf.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf.v2");
  }
}
static Arrange_To_Call_Me vaUs_Sf(Test_aUs_Sf, "aUs_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu15i()
{
  {
    init_simple_test("aUs_Sf_BFu15i");
    static aUs_Sf_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aUs_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu15i)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu15i.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aUs_Sf_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aUs_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu15i(Test_aUs_Sf_BFu15i, "aUs_Sf_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu15ll()
{
  {
    init_simple_test("aUs_Sf_BFu15ll");
    static aUs_Sf_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aUs_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu15ll.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aUs_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aUs_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu15ll(Test_aUs_Sf_BFu15ll, "aUs_Sf_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu15s()
{
  {
    init_simple_test("aUs_Sf_BFu15s");
    static aUs_Sf_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aUs_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu15s)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu15s.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aUs_Sf_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aUs_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu15s(Test_aUs_Sf_BFu15s, "aUs_Sf_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu16i()
{
  {
    init_simple_test("aUs_Sf_BFu16i");
    static aUs_Sf_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aUs_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu16i)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu16i.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aUs_Sf_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aUs_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu16i(Test_aUs_Sf_BFu16i, "aUs_Sf_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu16ll()
{
  {
    init_simple_test("aUs_Sf_BFu16ll");
    static aUs_Sf_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aUs_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu16ll.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aUs_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aUs_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu16ll(Test_aUs_Sf_BFu16ll, "aUs_Sf_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu16s()
{
  {
    init_simple_test("aUs_Sf_BFu16s");
    static aUs_Sf_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aUs_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu16s)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu16s.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aUs_Sf_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aUs_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu16s(Test_aUs_Sf_BFu16s, "aUs_Sf_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu17i()
{
  {
    init_simple_test("aUs_Sf_BFu17i");
    static aUs_Sf_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aUs_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu17i)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu17i.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aUs_Sf_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aUs_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu17i(Test_aUs_Sf_BFu17i, "aUs_Sf_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu17ll()
{
  {
    init_simple_test("aUs_Sf_BFu17ll");
    static aUs_Sf_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aUs_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu17ll.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aUs_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aUs_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu17ll(Test_aUs_Sf_BFu17ll, "aUs_Sf_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu1c()
{
  {
    init_simple_test("aUs_Sf_BFu1c");
    static aUs_Sf_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu1c)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu1c.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUs_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu1c(Test_aUs_Sf_BFu1c, "aUs_Sf_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu1i()
{
  {
    init_simple_test("aUs_Sf_BFu1i");
    static aUs_Sf_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu1i)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu1i.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUs_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu1i(Test_aUs_Sf_BFu1i, "aUs_Sf_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu1ll()
{
  {
    init_simple_test("aUs_Sf_BFu1ll");
    static aUs_Sf_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu1ll.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUs_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu1ll(Test_aUs_Sf_BFu1ll, "aUs_Sf_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu1s()
{
  {
    init_simple_test("aUs_Sf_BFu1s");
    static aUs_Sf_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu1s)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu1s.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUs_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu1s(Test_aUs_Sf_BFu1s, "aUs_Sf_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu31i()
{
  {
    init_simple_test("aUs_Sf_BFu31i");
    static aUs_Sf_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aUs_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu31i)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu31i.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aUs_Sf_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aUs_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu31i(Test_aUs_Sf_BFu31i, "aUs_Sf_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu31ll()
{
  {
    init_simple_test("aUs_Sf_BFu31ll");
    static aUs_Sf_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aUs_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu31ll.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aUs_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aUs_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu31ll(Test_aUs_Sf_BFu31ll, "aUs_Sf_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu32i()
{
  {
    init_simple_test("aUs_Sf_BFu32i");
    static aUs_Sf_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aUs_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu32i)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu32i.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aUs_Sf_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aUs_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu32i(Test_aUs_Sf_BFu32i, "aUs_Sf_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu32ll()
{
  {
    init_simple_test("aUs_Sf_BFu32ll");
    static aUs_Sf_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aUs_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu32ll.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aUs_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aUs_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu32ll(Test_aUs_Sf_BFu32ll, "aUs_Sf_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu33()
{
  {
    init_simple_test("aUs_Sf_BFu33");
    static aUs_Sf_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aUs_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu33)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu33.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aUs_Sf_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aUs_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu33(Test_aUs_Sf_BFu33, "aUs_Sf_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu7c()
{
  {
    init_simple_test("aUs_Sf_BFu7c");
    static aUs_Sf_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu7c)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu7c.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUs_Sf_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUs_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu7c(Test_aUs_Sf_BFu7c, "aUs_Sf_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu7i()
{
  {
    init_simple_test("aUs_Sf_BFu7i");
    static aUs_Sf_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu7i)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu7i.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUs_Sf_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUs_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu7i(Test_aUs_Sf_BFu7i, "aUs_Sf_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu7ll()
{
  {
    init_simple_test("aUs_Sf_BFu7ll");
    static aUs_Sf_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu7ll.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUs_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUs_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu7ll(Test_aUs_Sf_BFu7ll, "aUs_Sf_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu7s()
{
  {
    init_simple_test("aUs_Sf_BFu7s");
    static aUs_Sf_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu7s)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu7s.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUs_Sf_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUs_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu7s(Test_aUs_Sf_BFu7s, "aUs_Sf_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu8c()
{
  {
    init_simple_test("aUs_Sf_BFu8c");
    static aUs_Sf_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu8c)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu8c.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUs_Sf_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUs_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu8c(Test_aUs_Sf_BFu8c, "aUs_Sf_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu8i()
{
  {
    init_simple_test("aUs_Sf_BFu8i");
    static aUs_Sf_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu8i)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu8i.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUs_Sf_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUs_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu8i(Test_aUs_Sf_BFu8i, "aUs_Sf_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu8ll()
{
  {
    init_simple_test("aUs_Sf_BFu8ll");
    static aUs_Sf_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu8ll.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUs_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUs_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu8ll(Test_aUs_Sf_BFu8ll, "aUs_Sf_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu8s()
{
  {
    init_simple_test("aUs_Sf_BFu8s");
    static aUs_Sf_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu8s)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu8s.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUs_Sf_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUs_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu8s(Test_aUs_Sf_BFu8s, "aUs_Sf_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu9i()
{
  {
    init_simple_test("aUs_Sf_BFu9i");
    static aUs_Sf_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aUs_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu9i)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu9i.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aUs_Sf_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aUs_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu9i(Test_aUs_Sf_BFu9i, "aUs_Sf_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu9ll()
{
  {
    init_simple_test("aUs_Sf_BFu9ll");
    static aUs_Sf_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aUs_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu9ll.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aUs_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aUs_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu9ll(Test_aUs_Sf_BFu9ll, "aUs_Sf_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_BFu9s()
{
  {
    init_simple_test("aUs_Sf_BFu9s");
    static aUs_Sf_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aUs_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_BFu9s)");
    check_field_offset(lv, v1, 0, "aUs_Sf_BFu9s.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aUs_Sf_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aUs_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vaUs_Sf_BFu9s(Test_aUs_Sf_BFu9s, "aUs_Sf_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_C()
{
  {
    init_simple_test("aUs_Sf_C");
    aUs_Sf_C lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_C)");
    check_field_offset(lv, v1, 0, "aUs_Sf_C.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_C.v2");
    check_field_offset(lv, v3, 3, "aUs_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vaUs_Sf_C(Test_aUs_Sf_C, "aUs_Sf_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_D()
{
  {
    init_simple_test("aUs_Sf_D");
    aUs_Sf_D lv;
    check2(sizeof(lv), 11, "sizeof(aUs_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_D)");
    check_field_offset(lv, v1, 0, "aUs_Sf_D.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_D.v2");
    check_field_offset(lv, v3, 3, "aUs_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vaUs_Sf_D(Test_aUs_Sf_D, "aUs_Sf_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_F()
{
  {
    init_simple_test("aUs_Sf_F");
    aUs_Sf_F lv;
    check2(sizeof(lv), 7, "sizeof(aUs_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_F)");
    check_field_offset(lv, v1, 0, "aUs_Sf_F.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_F.v2");
    check_field_offset(lv, v3, 3, "aUs_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vaUs_Sf_F(Test_aUs_Sf_F, "aUs_Sf_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_I()
{
  {
    init_simple_test("aUs_Sf_I");
    aUs_Sf_I lv;
    check2(sizeof(lv), 7, "sizeof(aUs_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_I)");
    check_field_offset(lv, v1, 0, "aUs_Sf_I.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_I.v2");
    check_field_offset(lv, v3, 3, "aUs_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vaUs_Sf_I(Test_aUs_Sf_I, "aUs_Sf_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_Ip()
{
  {
    init_simple_test("aUs_Sf_Ip");
    aUs_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUs_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_Ip)");
    check_field_offset(lv, v1, 0, "aUs_Sf_Ip.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_Ip.v2");
    check_field_offset(lv, v3, 3, "aUs_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vaUs_Sf_Ip(Test_aUs_Sf_Ip, "aUs_Sf_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_L()
{
  {
    init_simple_test("aUs_Sf_L");
    aUs_Sf_L lv;
    check2(sizeof(lv), 11, "sizeof(aUs_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_L)");
    check_field_offset(lv, v1, 0, "aUs_Sf_L.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_L.v2");
    check_field_offset(lv, v3, 3, "aUs_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vaUs_Sf_L(Test_aUs_Sf_L, "aUs_Sf_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_S()
{
  {
    init_simple_test("aUs_Sf_S");
    aUs_Sf_S lv;
    check2(sizeof(lv), 5, "sizeof(aUs_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_S)");
    check_field_offset(lv, v1, 0, "aUs_Sf_S.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_S.v2");
    check_field_offset(lv, v3, 3, "aUs_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vaUs_Sf_S(Test_aUs_Sf_S, "aUs_Sf_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_Sf()
{
  {
    init_simple_test("aUs_Sf_Sf");
    aUs_Sf_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_Sf)");
    check_field_offset(lv, v1, 0, "aUs_Sf_Sf.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_Sf.v2");
    check_field_offset(lv, v3, 3, "aUs_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_Sf_Sf(Test_aUs_Sf_Sf, "aUs_Sf_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_Uc()
{
  {
    init_simple_test("aUs_Sf_Uc");
    aUs_Sf_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_Uc)");
    check_field_offset(lv, v1, 0, "aUs_Sf_Uc.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_Uc.v2");
    check_field_offset(lv, v3, 3, "aUs_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vaUs_Sf_Uc(Test_aUs_Sf_Uc, "aUs_Sf_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_Ui()
{
  {
    init_simple_test("aUs_Sf_Ui");
    aUs_Sf_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aUs_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_Ui)");
    check_field_offset(lv, v1, 0, "aUs_Sf_Ui.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_Ui.v2");
    check_field_offset(lv, v3, 3, "aUs_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vaUs_Sf_Ui(Test_aUs_Sf_Ui, "aUs_Sf_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_Ul()
{
  {
    init_simple_test("aUs_Sf_Ul");
    aUs_Sf_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aUs_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_Ul)");
    check_field_offset(lv, v1, 0, "aUs_Sf_Ul.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_Ul.v2");
    check_field_offset(lv, v3, 3, "aUs_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vaUs_Sf_Ul(Test_aUs_Sf_Ul, "aUs_Sf_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_Us()
{
  {
    init_simple_test("aUs_Sf_Us");
    aUs_Sf_Us lv;
    check2(sizeof(lv), 5, "sizeof(aUs_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_Us)");
    check_field_offset(lv, v1, 0, "aUs_Sf_Us.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_Us.v2");
    check_field_offset(lv, v3, 3, "aUs_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vaUs_Sf_Us(Test_aUs_Sf_Us, "aUs_Sf_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Sf_Vp()
{
  {
    init_simple_test("aUs_Sf_Vp");
    aUs_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUs_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Sf_Vp)");
    check_field_offset(lv, v1, 0, "aUs_Sf_Vp.v1");
    check_field_offset(lv, v2, 2, "aUs_Sf_Vp.v2");
    check_field_offset(lv, v3, 3, "aUs_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vaUs_Sf_Vp(Test_aUs_Sf_Vp, "aUs_Sf_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Uc_Sf()
{
  {
    init_simple_test("aUs_Uc_Sf");
    aUs_Uc_Sf lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Uc_Sf)");
    check_field_offset(lv, v1, 0, "aUs_Uc_Sf.v1");
    check_field_offset(lv, v2, 2, "aUs_Uc_Sf.v2");
    check_field_offset(lv, v3, 3, "aUs_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_Uc_Sf(Test_aUs_Uc_Sf, "aUs_Uc_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Ui_Sf()
{
  {
    init_simple_test("aUs_Ui_Sf");
    aUs_Ui_Sf lv;
    check2(sizeof(lv), 7, "sizeof(aUs_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Ui_Sf)");
    check_field_offset(lv, v1, 0, "aUs_Ui_Sf.v1");
    check_field_offset(lv, v2, 2, "aUs_Ui_Sf.v2");
    check_field_offset(lv, v3, 6, "aUs_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_Ui_Sf(Test_aUs_Ui_Sf, "aUs_Ui_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Ul_Sf()
{
  {
    init_simple_test("aUs_Ul_Sf");
    aUs_Ul_Sf lv;
    check2(sizeof(lv), 11, "sizeof(aUs_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Ul_Sf)");
    check_field_offset(lv, v1, 0, "aUs_Ul_Sf.v1");
    check_field_offset(lv, v2, 2, "aUs_Ul_Sf.v2");
    check_field_offset(lv, v3, 10, "aUs_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_Ul_Sf(Test_aUs_Ul_Sf, "aUs_Ul_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Us_Sf()
{
  {
    init_simple_test("aUs_Us_Sf");
    aUs_Us_Sf lv;
    check2(sizeof(lv), 5, "sizeof(aUs_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Us_Sf)");
    check_field_offset(lv, v1, 0, "aUs_Us_Sf.v1");
    check_field_offset(lv, v2, 2, "aUs_Us_Sf.v2");
    check_field_offset(lv, v3, 4, "aUs_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_Us_Sf(Test_aUs_Us_Sf, "aUs_Us_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Vp_Sf()
{
  {
    init_simple_test("aUs_Vp_Sf");
    aUs_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUs_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Vp_Sf)");
    check_field_offset(lv, v1, 0, "aUs_Vp_Sf.v1");
    check_field_offset(lv, v2, 2, "aUs_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aUs_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vaUs_Vp_Sf(Test_aUs_Vp_Sf, "aUs_Vp_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu15i_Sf()
{
  {
    init_simple_test("aVp_BFu15i_Sf");
    static aVp_BFu15i_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu15i_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu15i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "aVp_BFu15i_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "aVp_BFu15i_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu15i_Sf(Test_aVp_BFu15i_Sf, "aVp_BFu15i_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu15ll_Sf()
{
  {
    init_simple_test("aVp_BFu15ll_Sf");
    static aVp_BFu15ll_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu15ll_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu15ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "aVp_BFu15ll_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "aVp_BFu15ll_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu15ll_Sf(Test_aVp_BFu15ll_Sf, "aVp_BFu15ll_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu15s_Sf()
{
  {
    init_simple_test("aVp_BFu15s_Sf");
    static aVp_BFu15s_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu15s_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu15s_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "aVp_BFu15s_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "aVp_BFu15s_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu15s_Sf(Test_aVp_BFu15s_Sf, "aVp_BFu15s_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu16i_Sf()
{
  {
    init_simple_test("aVp_BFu16i_Sf");
    static aVp_BFu16i_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu16i_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu16i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "aVp_BFu16i_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "aVp_BFu16i_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu16i_Sf(Test_aVp_BFu16i_Sf, "aVp_BFu16i_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu16ll_Sf()
{
  {
    init_simple_test("aVp_BFu16ll_Sf");
    static aVp_BFu16ll_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu16ll_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu16ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "aVp_BFu16ll_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "aVp_BFu16ll_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu16ll_Sf(Test_aVp_BFu16ll_Sf, "aVp_BFu16ll_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu16s_Sf()
{
  {
    init_simple_test("aVp_BFu16s_Sf");
    static aVp_BFu16s_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu16s_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu16s_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "aVp_BFu16s_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "aVp_BFu16s_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu16s_Sf(Test_aVp_BFu16s_Sf, "aVp_BFu16s_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu17i_Sf()
{
  {
    init_simple_test("aVp_BFu17i_Sf");
    static aVp_BFu17i_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aVp_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu17i_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu17i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "aVp_BFu17i_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "aVp_BFu17i_Sf");
    check_field_offset(lv, v3, ABISELECT(11,7), "aVp_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu17i_Sf(Test_aVp_BFu17i_Sf, "aVp_BFu17i_Sf", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu17ll_Sf()
{
  {
    init_simple_test("aVp_BFu17ll_Sf");
    static aVp_BFu17ll_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aVp_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu17ll_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu17ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "aVp_BFu17ll_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "aVp_BFu17ll_Sf");
    check_field_offset(lv, v3, ABISELECT(11,7), "aVp_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu17ll_Sf(Test_aVp_BFu17ll_Sf, "aVp_BFu17ll_Sf", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu1c_Sf()
{
  {
    init_simple_test("aVp_BFu1c_Sf");
    static aVp_BFu1c_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu1c_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu1c_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aVp_BFu1c_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu1c_Sf(Test_aVp_BFu1c_Sf, "aVp_BFu1c_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu1i_Sf()
{
  {
    init_simple_test("aVp_BFu1i_Sf");
    static aVp_BFu1i_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu1i_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu1i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aVp_BFu1i_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu1i_Sf(Test_aVp_BFu1i_Sf, "aVp_BFu1i_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu1ll_Sf()
{
  {
    init_simple_test("aVp_BFu1ll_Sf");
    static aVp_BFu1ll_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu1ll_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu1ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aVp_BFu1ll_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu1ll_Sf(Test_aVp_BFu1ll_Sf, "aVp_BFu1ll_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu1s_Sf()
{
  {
    init_simple_test("aVp_BFu1s_Sf");
    static aVp_BFu1s_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu1s_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu1s_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aVp_BFu1s_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu1s_Sf(Test_aVp_BFu1s_Sf, "aVp_BFu1s_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu31i_Sf()
{
  {
    init_simple_test("aVp_BFu31i_Sf");
    static aVp_BFu31i_Sf lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu31i_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu31i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "aVp_BFu31i_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "aVp_BFu31i_Sf");
    check_field_offset(lv, v3, ABISELECT(12,8), "aVp_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu31i_Sf(Test_aVp_BFu31i_Sf, "aVp_BFu31i_Sf", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu31ll_Sf()
{
  {
    init_simple_test("aVp_BFu31ll_Sf");
    static aVp_BFu31ll_Sf lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu31ll_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu31ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "aVp_BFu31ll_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "aVp_BFu31ll_Sf");
    check_field_offset(lv, v3, ABISELECT(12,8), "aVp_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu31ll_Sf(Test_aVp_BFu31ll_Sf, "aVp_BFu31ll_Sf", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu32i_Sf()
{
  {
    init_simple_test("aVp_BFu32i_Sf");
    static aVp_BFu32i_Sf lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu32i_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu32i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "aVp_BFu32i_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "aVp_BFu32i_Sf");
    check_field_offset(lv, v3, ABISELECT(12,8), "aVp_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu32i_Sf(Test_aVp_BFu32i_Sf, "aVp_BFu32i_Sf", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu32ll_Sf()
{
  {
    init_simple_test("aVp_BFu32ll_Sf");
    static aVp_BFu32ll_Sf lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu32ll_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu32ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "aVp_BFu32ll_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "aVp_BFu32ll_Sf");
    check_field_offset(lv, v3, ABISELECT(12,8), "aVp_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu32ll_Sf(Test_aVp_BFu32ll_Sf, "aVp_BFu32ll_Sf", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu33_Sf()
{
  {
    init_simple_test("aVp_BFu33_Sf");
    static aVp_BFu33_Sf lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aVp_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu33_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu33_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "aVp_BFu33_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "aVp_BFu33_Sf");
    check_field_offset(lv, v3, ABISELECT(13,9), "aVp_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu33_Sf(Test_aVp_BFu33_Sf, "aVp_BFu33_Sf", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu7c_Sf()
{
  {
    init_simple_test("aVp_BFu7c_Sf");
    static aVp_BFu7c_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu7c_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu7c_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aVp_BFu7c_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aVp_BFu7c_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu7c_Sf(Test_aVp_BFu7c_Sf, "aVp_BFu7c_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu7i_Sf()
{
  {
    init_simple_test("aVp_BFu7i_Sf");
    static aVp_BFu7i_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu7i_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu7i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aVp_BFu7i_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aVp_BFu7i_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu7i_Sf(Test_aVp_BFu7i_Sf, "aVp_BFu7i_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu7ll_Sf()
{
  {
    init_simple_test("aVp_BFu7ll_Sf");
    static aVp_BFu7ll_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu7ll_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu7ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aVp_BFu7ll_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aVp_BFu7ll_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu7ll_Sf(Test_aVp_BFu7ll_Sf, "aVp_BFu7ll_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu7s_Sf()
{
  {
    init_simple_test("aVp_BFu7s_Sf");
    static aVp_BFu7s_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu7s_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu7s_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aVp_BFu7s_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aVp_BFu7s_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu7s_Sf(Test_aVp_BFu7s_Sf, "aVp_BFu7s_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu8c_Sf()
{
  {
    init_simple_test("aVp_BFu8c_Sf");
    static aVp_BFu8c_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu8c_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu8c_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aVp_BFu8c_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aVp_BFu8c_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu8c_Sf(Test_aVp_BFu8c_Sf, "aVp_BFu8c_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu8i_Sf()
{
  {
    init_simple_test("aVp_BFu8i_Sf");
    static aVp_BFu8i_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu8i_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu8i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aVp_BFu8i_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aVp_BFu8i_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu8i_Sf(Test_aVp_BFu8i_Sf, "aVp_BFu8i_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu8ll_Sf()
{
  {
    init_simple_test("aVp_BFu8ll_Sf");
    static aVp_BFu8ll_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu8ll_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu8ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aVp_BFu8ll_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aVp_BFu8ll_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu8ll_Sf(Test_aVp_BFu8ll_Sf, "aVp_BFu8ll_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu8s_Sf()
{
  {
    init_simple_test("aVp_BFu8s_Sf");
    static aVp_BFu8s_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu8s_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu8s_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aVp_BFu8s_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aVp_BFu8s_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu8s_Sf(Test_aVp_BFu8s_Sf, "aVp_BFu8s_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu9i_Sf()
{
  {
    init_simple_test("aVp_BFu9i_Sf");
    static aVp_BFu9i_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu9i_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu9i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "aVp_BFu9i_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "aVp_BFu9i_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu9i_Sf(Test_aVp_BFu9i_Sf, "aVp_BFu9i_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu9ll_Sf()
{
  {
    init_simple_test("aVp_BFu9ll_Sf");
    static aVp_BFu9ll_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu9ll_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu9ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "aVp_BFu9ll_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "aVp_BFu9ll_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu9ll_Sf(Test_aVp_BFu9ll_Sf, "aVp_BFu9ll_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu9s_Sf()
{
  {
    init_simple_test("aVp_BFu9s_Sf");
    static aVp_BFu9s_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu9s_Sf)");
    check_field_offset(lv, v1, 0, "aVp_BFu9s_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "aVp_BFu9s_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "aVp_BFu9s_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu9s_Sf(Test_aVp_BFu9s_Sf, "aVp_BFu9s_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_C_Sf()
{
  {
    init_simple_test("aVp_C_Sf");
    aVp_C_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_C_Sf)");
    check_field_offset(lv, v1, 0, "aVp_C_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_C_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_C_Sf(Test_aVp_C_Sf, "aVp_C_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_D_Sf()
{
  {
    init_simple_test("aVp_D_Sf");
    aVp_D_Sf lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aVp_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_D_Sf)");
    check_field_offset(lv, v1, 0, "aVp_D_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_D_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aVp_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_D_Sf(Test_aVp_D_Sf, "aVp_D_Sf", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_F_Sf()
{
  {
    init_simple_test("aVp_F_Sf");
    aVp_F_Sf lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_F_Sf)");
    check_field_offset(lv, v1, 0, "aVp_F_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_F_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aVp_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_F_Sf(Test_aVp_F_Sf, "aVp_F_Sf", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_I_Sf()
{
  {
    init_simple_test("aVp_I_Sf");
    aVp_I_Sf lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_I_Sf)");
    check_field_offset(lv, v1, 0, "aVp_I_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_I_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aVp_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_I_Sf(Test_aVp_I_Sf, "aVp_I_Sf", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Ip_Sf()
{
  {
    init_simple_test("aVp_Ip_Sf");
    aVp_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(17,9), "sizeof(aVp_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Ip_Sf)");
    check_field_offset(lv, v1, 0, "aVp_Ip_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(16,8), "aVp_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_Ip_Sf(Test_aVp_Ip_Sf, "aVp_Ip_Sf", ABISELECT(17,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_L_Sf()
{
  {
    init_simple_test("aVp_L_Sf");
    aVp_L_Sf lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aVp_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_L_Sf)");
    check_field_offset(lv, v1, 0, "aVp_L_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_L_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aVp_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_L_Sf(Test_aVp_L_Sf, "aVp_L_Sf", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_S_Sf()
{
  {
    init_simple_test("aVp_S_Sf");
    aVp_S_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_S_Sf)");
    check_field_offset(lv, v1, 0, "aVp_S_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_S_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_S_Sf(Test_aVp_S_Sf, "aVp_S_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf()
{
  {
    init_simple_test("aVp_Sf");
    aVp_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aVp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf)");
    check_field_offset(lv, v1, 0, "aVp_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf.v2");
  }
}
static Arrange_To_Call_Me vaVp_Sf(Test_aVp_Sf, "aVp_Sf", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu15i()
{
  {
    init_simple_test("aVp_Sf_BFu15i");
    static aVp_Sf_BFu15i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu15i)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu15i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, 1, "aVp_Sf_BFu15i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, hide_ull(1LL<<14), "aVp_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu15i(Test_aVp_Sf_BFu15i, "aVp_Sf_BFu15i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu15ll()
{
  {
    init_simple_test("aVp_Sf_BFu15ll");
    static aVp_Sf_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu15ll)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu15ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, 1, "aVp_Sf_BFu15ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, hide_ull(1LL<<14), "aVp_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu15ll(Test_aVp_Sf_BFu15ll, "aVp_Sf_BFu15ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu15s()
{
  {
    init_simple_test("aVp_Sf_BFu15s");
    static aVp_Sf_BFu15s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu15s)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu15s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, 1, "aVp_Sf_BFu15s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, hide_ull(1LL<<14), "aVp_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu15s(Test_aVp_Sf_BFu15s, "aVp_Sf_BFu15s", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu16i()
{
  {
    init_simple_test("aVp_Sf_BFu16i");
    static aVp_Sf_BFu16i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu16i)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu16i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, 1, "aVp_Sf_BFu16i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, hide_ull(1LL<<15), "aVp_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu16i(Test_aVp_Sf_BFu16i, "aVp_Sf_BFu16i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu16ll()
{
  {
    init_simple_test("aVp_Sf_BFu16ll");
    static aVp_Sf_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu16ll)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu16ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, 1, "aVp_Sf_BFu16ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, hide_ull(1LL<<15), "aVp_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu16ll(Test_aVp_Sf_BFu16ll, "aVp_Sf_BFu16ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu16s()
{
  {
    init_simple_test("aVp_Sf_BFu16s");
    static aVp_Sf_BFu16s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu16s)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu16s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, 1, "aVp_Sf_BFu16s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, hide_ull(1LL<<15), "aVp_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu16s(Test_aVp_Sf_BFu16s, "aVp_Sf_BFu16s", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu17i()
{
  {
    init_simple_test("aVp_Sf_BFu17i");
    static aVp_Sf_BFu17i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aVp_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu17i)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu17i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, 1, "aVp_Sf_BFu17i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, hide_ull(1LL<<16), "aVp_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu17i(Test_aVp_Sf_BFu17i, "aVp_Sf_BFu17i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu17ll()
{
  {
    init_simple_test("aVp_Sf_BFu17ll");
    static aVp_Sf_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aVp_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu17ll)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu17ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, 1, "aVp_Sf_BFu17ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, hide_ull(1LL<<16), "aVp_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu17ll(Test_aVp_Sf_BFu17ll, "aVp_Sf_BFu17ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu1c()
{
  {
    init_simple_test("aVp_Sf_BFu1c");
    static aVp_Sf_BFu1c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu1c)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu1c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aVp_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu1c(Test_aVp_Sf_BFu1c, "aVp_Sf_BFu1c", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu1i()
{
  {
    init_simple_test("aVp_Sf_BFu1i");
    static aVp_Sf_BFu1i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu1i)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu1i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aVp_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu1i(Test_aVp_Sf_BFu1i, "aVp_Sf_BFu1i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu1ll()
{
  {
    init_simple_test("aVp_Sf_BFu1ll");
    static aVp_Sf_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu1ll)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu1ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aVp_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu1ll(Test_aVp_Sf_BFu1ll, "aVp_Sf_BFu1ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu1s()
{
  {
    init_simple_test("aVp_Sf_BFu1s");
    static aVp_Sf_BFu1s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu1s)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu1s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aVp_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu1s(Test_aVp_Sf_BFu1s, "aVp_Sf_BFu1s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu31i()
{
  {
    init_simple_test("aVp_Sf_BFu31i");
    static aVp_Sf_BFu31i lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu31i)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu31i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, 1, "aVp_Sf_BFu31i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, hide_ull(1LL<<30), "aVp_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu31i(Test_aVp_Sf_BFu31i, "aVp_Sf_BFu31i", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu31ll()
{
  {
    init_simple_test("aVp_Sf_BFu31ll");
    static aVp_Sf_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu31ll)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu31ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, 1, "aVp_Sf_BFu31ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, hide_ull(1LL<<30), "aVp_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu31ll(Test_aVp_Sf_BFu31ll, "aVp_Sf_BFu31ll", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu32i()
{
  {
    init_simple_test("aVp_Sf_BFu32i");
    static aVp_Sf_BFu32i lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu32i)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu32i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, 1, "aVp_Sf_BFu32i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, hide_ull(1LL<<31), "aVp_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu32i(Test_aVp_Sf_BFu32i, "aVp_Sf_BFu32i", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu32ll()
{
  {
    init_simple_test("aVp_Sf_BFu32ll");
    static aVp_Sf_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu32ll)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu32ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, 1, "aVp_Sf_BFu32ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, hide_ull(1LL<<31), "aVp_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu32ll(Test_aVp_Sf_BFu32ll, "aVp_Sf_BFu32ll", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu33()
{
  {
    init_simple_test("aVp_Sf_BFu33");
    static aVp_Sf_BFu33 lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aVp_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu33)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu33.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 33, 1, "aVp_Sf_BFu33");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 33, hide_ull(1LL<<32), "aVp_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu33(Test_aVp_Sf_BFu33, "aVp_Sf_BFu33", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu7c()
{
  {
    init_simple_test("aVp_Sf_BFu7c");
    static aVp_Sf_BFu7c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu7c)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu7c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aVp_Sf_BFu7c");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aVp_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu7c(Test_aVp_Sf_BFu7c, "aVp_Sf_BFu7c", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu7i()
{
  {
    init_simple_test("aVp_Sf_BFu7i");
    static aVp_Sf_BFu7i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu7i)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu7i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aVp_Sf_BFu7i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aVp_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu7i(Test_aVp_Sf_BFu7i, "aVp_Sf_BFu7i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu7ll()
{
  {
    init_simple_test("aVp_Sf_BFu7ll");
    static aVp_Sf_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu7ll)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu7ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aVp_Sf_BFu7ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aVp_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu7ll(Test_aVp_Sf_BFu7ll, "aVp_Sf_BFu7ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu7s()
{
  {
    init_simple_test("aVp_Sf_BFu7s");
    static aVp_Sf_BFu7s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu7s)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu7s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aVp_Sf_BFu7s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aVp_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu7s(Test_aVp_Sf_BFu7s, "aVp_Sf_BFu7s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu8c()
{
  {
    init_simple_test("aVp_Sf_BFu8c");
    static aVp_Sf_BFu8c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu8c)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu8c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aVp_Sf_BFu8c");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aVp_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu8c(Test_aVp_Sf_BFu8c, "aVp_Sf_BFu8c", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu8i()
{
  {
    init_simple_test("aVp_Sf_BFu8i");
    static aVp_Sf_BFu8i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu8i)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu8i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aVp_Sf_BFu8i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aVp_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu8i(Test_aVp_Sf_BFu8i, "aVp_Sf_BFu8i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu8ll()
{
  {
    init_simple_test("aVp_Sf_BFu8ll");
    static aVp_Sf_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu8ll)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu8ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aVp_Sf_BFu8ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aVp_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu8ll(Test_aVp_Sf_BFu8ll, "aVp_Sf_BFu8ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu8s()
{
  {
    init_simple_test("aVp_Sf_BFu8s");
    static aVp_Sf_BFu8s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu8s)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu8s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aVp_Sf_BFu8s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aVp_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu8s(Test_aVp_Sf_BFu8s, "aVp_Sf_BFu8s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu9i()
{
  {
    init_simple_test("aVp_Sf_BFu9i");
    static aVp_Sf_BFu9i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu9i)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu9i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, 1, "aVp_Sf_BFu9i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, hide_ull(1LL<<8), "aVp_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu9i(Test_aVp_Sf_BFu9i, "aVp_Sf_BFu9i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu9ll()
{
  {
    init_simple_test("aVp_Sf_BFu9ll");
    static aVp_Sf_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu9ll)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu9ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, 1, "aVp_Sf_BFu9ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, hide_ull(1LL<<8), "aVp_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu9ll(Test_aVp_Sf_BFu9ll, "aVp_Sf_BFu9ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_BFu9s()
{
  {
    init_simple_test("aVp_Sf_BFu9s");
    static aVp_Sf_BFu9s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_BFu9s)");
    check_field_offset(lv, v1, 0, "aVp_Sf_BFu9s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, 1, "aVp_Sf_BFu9s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, hide_ull(1LL<<8), "aVp_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vaVp_Sf_BFu9s(Test_aVp_Sf_BFu9s, "aVp_Sf_BFu9s", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_C()
{
  {
    init_simple_test("aVp_Sf_C");
    aVp_Sf_C lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_C)");
    check_field_offset(lv, v1, 0, "aVp_Sf_C.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_C.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vaVp_Sf_C(Test_aVp_Sf_C, "aVp_Sf_C", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_D()
{
  {
    init_simple_test("aVp_Sf_D");
    aVp_Sf_D lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aVp_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_D)");
    check_field_offset(lv, v1, 0, "aVp_Sf_D.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_D.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vaVp_Sf_D(Test_aVp_Sf_D, "aVp_Sf_D", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_F()
{
  {
    init_simple_test("aVp_Sf_F");
    aVp_Sf_F lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_F)");
    check_field_offset(lv, v1, 0, "aVp_Sf_F.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_F.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vaVp_Sf_F(Test_aVp_Sf_F, "aVp_Sf_F", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_I()
{
  {
    init_simple_test("aVp_Sf_I");
    aVp_Sf_I lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_I)");
    check_field_offset(lv, v1, 0, "aVp_Sf_I.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_I.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vaVp_Sf_I(Test_aVp_Sf_I, "aVp_Sf_I", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_Ip()
{
  {
    init_simple_test("aVp_Sf_Ip");
    aVp_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(17,9), "sizeof(aVp_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_Ip)");
    check_field_offset(lv, v1, 0, "aVp_Sf_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_Ip.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vaVp_Sf_Ip(Test_aVp_Sf_Ip, "aVp_Sf_Ip", ABISELECT(17,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_L()
{
  {
    init_simple_test("aVp_Sf_L");
    aVp_Sf_L lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aVp_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_L)");
    check_field_offset(lv, v1, 0, "aVp_Sf_L.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_L.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vaVp_Sf_L(Test_aVp_Sf_L, "aVp_Sf_L", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_S()
{
  {
    init_simple_test("aVp_Sf_S");
    aVp_Sf_S lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_S)");
    check_field_offset(lv, v1, 0, "aVp_Sf_S.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_S.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vaVp_Sf_S(Test_aVp_Sf_S, "aVp_Sf_S", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_Sf()
{
  {
    init_simple_test("aVp_Sf_Sf");
    aVp_Sf_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_Sf)");
    check_field_offset(lv, v1, 0, "aVp_Sf_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_Sf_Sf(Test_aVp_Sf_Sf, "aVp_Sf_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_Uc()
{
  {
    init_simple_test("aVp_Sf_Uc");
    aVp_Sf_Uc lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_Uc)");
    check_field_offset(lv, v1, 0, "aVp_Sf_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_Uc.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vaVp_Sf_Uc(Test_aVp_Sf_Uc, "aVp_Sf_Uc", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_Ui()
{
  {
    init_simple_test("aVp_Sf_Ui");
    aVp_Sf_Ui lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_Ui)");
    check_field_offset(lv, v1, 0, "aVp_Sf_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_Ui.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vaVp_Sf_Ui(Test_aVp_Sf_Ui, "aVp_Sf_Ui", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_Ul()
{
  {
    init_simple_test("aVp_Sf_Ul");
    aVp_Sf_Ul lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aVp_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_Ul)");
    check_field_offset(lv, v1, 0, "aVp_Sf_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_Ul.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vaVp_Sf_Ul(Test_aVp_Sf_Ul, "aVp_Sf_Ul", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_Us()
{
  {
    init_simple_test("aVp_Sf_Us");
    aVp_Sf_Us lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_Us)");
    check_field_offset(lv, v1, 0, "aVp_Sf_Us.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_Us.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vaVp_Sf_Us(Test_aVp_Sf_Us, "aVp_Sf_Us", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Sf_Vp()
{
  {
    init_simple_test("aVp_Sf_Vp");
    aVp_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(17,9), "sizeof(aVp_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Sf_Vp)");
    check_field_offset(lv, v1, 0, "aVp_Sf_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Sf_Vp.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vaVp_Sf_Vp(Test_aVp_Sf_Vp, "aVp_Sf_Vp", ABISELECT(17,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Uc_Sf()
{
  {
    init_simple_test("aVp_Uc_Sf");
    aVp_Uc_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Uc_Sf)");
    check_field_offset(lv, v1, 0, "aVp_Uc_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Uc_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_Uc_Sf(Test_aVp_Uc_Sf, "aVp_Uc_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Ui_Sf()
{
  {
    init_simple_test("aVp_Ui_Sf");
    aVp_Ui_Sf lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Ui_Sf)");
    check_field_offset(lv, v1, 0, "aVp_Ui_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Ui_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aVp_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_Ui_Sf(Test_aVp_Ui_Sf, "aVp_Ui_Sf", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Ul_Sf()
{
  {
    init_simple_test("aVp_Ul_Sf");
    aVp_Ul_Sf lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aVp_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Ul_Sf)");
    check_field_offset(lv, v1, 0, "aVp_Ul_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Ul_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aVp_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_Ul_Sf(Test_aVp_Ul_Sf, "aVp_Ul_Sf", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Us_Sf()
{
  {
    init_simple_test("aVp_Us_Sf");
    aVp_Us_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Us_Sf)");
    check_field_offset(lv, v1, 0, "aVp_Us_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Us_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_Us_Sf(Test_aVp_Us_Sf, "aVp_Us_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Vp_Sf()
{
  {
    init_simple_test("aVp_Vp_Sf");
    aVp_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(17,9), "sizeof(aVp_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Vp_Sf)");
    check_field_offset(lv, v1, 0, "aVp_Vp_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(16,8), "aVp_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vaVp_Vp_Sf(Test_aVp_Vp_Sf, "aVp_Vp_Sf", ABISELECT(17,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu15i_Sf()
{
  {
    init_simple_test("BFu15i_BFu15i_Sf");
    static BFu15i_BFu15i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "BFu15i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "BFu15i_BFu15i_Sf");
    check_field_offset(lv, v3, 4, "BFu15i_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu15i_Sf(Test_BFu15i_BFu15i_Sf, "BFu15i_BFu15i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu15ll_Sf()
{
  {
    init_simple_test("BFu15i_BFu15ll_Sf");
    static BFu15i_BFu15ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "BFu15i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "BFu15i_BFu15ll_Sf");
    check_field_offset(lv, v3, 4, "BFu15i_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu15ll_Sf(Test_BFu15i_BFu15ll_Sf, "BFu15i_BFu15ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu15s_Sf()
{
  {
    init_simple_test("BFu15i_BFu15s_Sf");
    static BFu15i_BFu15s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "BFu15i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "BFu15i_BFu15s_Sf");
    check_field_offset(lv, v3, 4, "BFu15i_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu15s_Sf(Test_BFu15i_BFu15s_Sf, "BFu15i_BFu15s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu16i_Sf()
{
  {
    init_simple_test("BFu15i_BFu16i_Sf");
    static BFu15i_BFu16i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, 1, "BFu15i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, hide_ull(1LL<<15), "BFu15i_BFu16i_Sf");
    check_field_offset(lv, v3, 4, "BFu15i_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu16i_Sf(Test_BFu15i_BFu16i_Sf, "BFu15i_BFu16i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu16ll_Sf()
{
  {
    init_simple_test("BFu15i_BFu16ll_Sf");
    static BFu15i_BFu16ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, 1, "BFu15i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, hide_ull(1LL<<15), "BFu15i_BFu16ll_Sf");
    check_field_offset(lv, v3, 4, "BFu15i_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu16ll_Sf(Test_BFu15i_BFu16ll_Sf, "BFu15i_BFu16ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu16s_Sf()
{
  {
    init_simple_test("BFu15i_BFu16s_Sf");
    static BFu15i_BFu16s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, 1, "BFu15i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, hide_ull(1LL<<15), "BFu15i_BFu16s_Sf");
    check_field_offset(lv, v3, 4, "BFu15i_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu16s_Sf(Test_BFu15i_BFu16s_Sf, "BFu15i_BFu16s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu17i_Sf()
{
  {
    init_simple_test("BFu15i_BFu17i_Sf");
    static BFu15i_BFu17i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 17, 1, "BFu15i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 17, hide_ull(1LL<<16), "BFu15i_BFu17i_Sf");
    check_field_offset(lv, v3, 4, "BFu15i_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu17i_Sf(Test_BFu15i_BFu17i_Sf, "BFu15i_BFu17i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu17ll_Sf()
{
  {
    init_simple_test("BFu15i_BFu17ll_Sf");
    static BFu15i_BFu17ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 17, 1, "BFu15i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 17, hide_ull(1LL<<16), "BFu15i_BFu17ll_Sf");
    check_field_offset(lv, v3, 4, "BFu15i_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu17ll_Sf(Test_BFu15i_BFu17ll_Sf, "BFu15i_BFu17ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu1c_Sf()
{
  {
    init_simple_test("BFu15i_BFu1c_Sf");
    static BFu15i_BFu1c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu15i_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu1c_Sf");
    set_bf_and_test(lv, v2, 1, 7, 1, 1, "BFu15i_BFu1c_Sf");
    check_field_offset(lv, v3, 2, "BFu15i_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu1c_Sf(Test_BFu15i_BFu1c_Sf, "BFu15i_BFu1c_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu1i_Sf()
{
  {
    init_simple_test("BFu15i_BFu1i_Sf");
    static BFu15i_BFu1i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu15i_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu1i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 1, 1, "BFu15i_BFu1i_Sf");
    check_field_offset(lv, v3, 2, "BFu15i_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu1i_Sf(Test_BFu15i_BFu1i_Sf, "BFu15i_BFu1i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu1ll_Sf()
{
  {
    init_simple_test("BFu15i_BFu1ll_Sf");
    static BFu15i_BFu1ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu15i_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 1, 1, "BFu15i_BFu1ll_Sf");
    check_field_offset(lv, v3, 2, "BFu15i_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu1ll_Sf(Test_BFu15i_BFu1ll_Sf, "BFu15i_BFu1ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu1s_Sf()
{
  {
    init_simple_test("BFu15i_BFu1s_Sf");
    static BFu15i_BFu1s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu15i_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu1s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 1, 1, "BFu15i_BFu1s_Sf");
    check_field_offset(lv, v3, 2, "BFu15i_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu1s_Sf(Test_BFu15i_BFu1s_Sf, "BFu15i_BFu1s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu31i_Sf()
{
  {
    init_simple_test("BFu15i_BFu31i_Sf");
    static BFu15i_BFu31i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15i_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 31, 1, "BFu15i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 31, hide_ull(1LL<<30), "BFu15i_BFu31i_Sf");
    check_field_offset(lv, v3, 6, "BFu15i_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu31i_Sf(Test_BFu15i_BFu31i_Sf, "BFu15i_BFu31i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu31ll_Sf()
{
  {
    init_simple_test("BFu15i_BFu31ll_Sf");
    static BFu15i_BFu31ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15i_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 31, 1, "BFu15i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 31, hide_ull(1LL<<30), "BFu15i_BFu31ll_Sf");
    check_field_offset(lv, v3, 6, "BFu15i_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu31ll_Sf(Test_BFu15i_BFu31ll_Sf, "BFu15i_BFu31ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu32i_Sf()
{
  {
    init_simple_test("BFu15i_BFu32i_Sf");
    static BFu15i_BFu32i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15i_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 32, 1, "BFu15i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 32, hide_ull(1LL<<31), "BFu15i_BFu32i_Sf");
    check_field_offset(lv, v3, 6, "BFu15i_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu32i_Sf(Test_BFu15i_BFu32i_Sf, "BFu15i_BFu32i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu32ll_Sf()
{
  {
    init_simple_test("BFu15i_BFu32ll_Sf");
    static BFu15i_BFu32ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15i_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 32, 1, "BFu15i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 32, hide_ull(1LL<<31), "BFu15i_BFu32ll_Sf");
    check_field_offset(lv, v3, 6, "BFu15i_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu32ll_Sf(Test_BFu15i_BFu32ll_Sf, "BFu15i_BFu32ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu33_Sf()
{
  {
    init_simple_test("BFu15i_BFu33_Sf");
    static BFu15i_BFu33_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15i_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 7, 33, 1, "BFu15i_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 7, 33, hide_ull(1LL<<32), "BFu15i_BFu33_Sf");
    check_field_offset(lv, v3, 6, "BFu15i_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu33_Sf(Test_BFu15i_BFu33_Sf, "BFu15i_BFu33_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu7c_Sf()
{
  {
    init_simple_test("BFu15i_BFu7c_Sf");
    static BFu15i_BFu7c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, 1, "BFu15i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, hide_ull(1LL<<6), "BFu15i_BFu7c_Sf");
    check_field_offset(lv, v3, 3, "BFu15i_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu7c_Sf(Test_BFu15i_BFu7c_Sf, "BFu15i_BFu7c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu7i_Sf()
{
  {
    init_simple_test("BFu15i_BFu7i_Sf");
    static BFu15i_BFu7i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, 1, "BFu15i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, hide_ull(1LL<<6), "BFu15i_BFu7i_Sf");
    check_field_offset(lv, v3, 3, "BFu15i_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu7i_Sf(Test_BFu15i_BFu7i_Sf, "BFu15i_BFu7i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu7ll_Sf()
{
  {
    init_simple_test("BFu15i_BFu7ll_Sf");
    static BFu15i_BFu7ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, 1, "BFu15i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, hide_ull(1LL<<6), "BFu15i_BFu7ll_Sf");
    check_field_offset(lv, v3, 3, "BFu15i_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu7ll_Sf(Test_BFu15i_BFu7ll_Sf, "BFu15i_BFu7ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu7s_Sf()
{
  {
    init_simple_test("BFu15i_BFu7s_Sf");
    static BFu15i_BFu7s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, 1, "BFu15i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, hide_ull(1LL<<6), "BFu15i_BFu7s_Sf");
    check_field_offset(lv, v3, 3, "BFu15i_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu7s_Sf(Test_BFu15i_BFu7s_Sf, "BFu15i_BFu7s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu8c_Sf()
{
  {
    init_simple_test("BFu15i_BFu8c_Sf");
    static BFu15i_BFu8c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, 1, "BFu15i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, hide_ull(1LL<<7), "BFu15i_BFu8c_Sf");
    check_field_offset(lv, v3, 3, "BFu15i_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu8c_Sf(Test_BFu15i_BFu8c_Sf, "BFu15i_BFu8c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu8i_Sf()
{
  {
    init_simple_test("BFu15i_BFu8i_Sf");
    static BFu15i_BFu8i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, 1, "BFu15i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, hide_ull(1LL<<7), "BFu15i_BFu8i_Sf");
    check_field_offset(lv, v3, 3, "BFu15i_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu8i_Sf(Test_BFu15i_BFu8i_Sf, "BFu15i_BFu8i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu8ll_Sf()
{
  {
    init_simple_test("BFu15i_BFu8ll_Sf");
    static BFu15i_BFu8ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, 1, "BFu15i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, hide_ull(1LL<<7), "BFu15i_BFu8ll_Sf");
    check_field_offset(lv, v3, 3, "BFu15i_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu8ll_Sf(Test_BFu15i_BFu8ll_Sf, "BFu15i_BFu8ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu8s_Sf()
{
  {
    init_simple_test("BFu15i_BFu8s_Sf");
    static BFu15i_BFu8s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, 1, "BFu15i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, hide_ull(1LL<<7), "BFu15i_BFu8s_Sf");
    check_field_offset(lv, v3, 3, "BFu15i_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu8s_Sf(Test_BFu15i_BFu8s_Sf, "BFu15i_BFu8s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu9i_Sf()
{
  {
    init_simple_test("BFu15i_BFu9i_Sf");
    static BFu15i_BFu9i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, 1, "BFu15i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, hide_ull(1LL<<8), "BFu15i_BFu9i_Sf");
    check_field_offset(lv, v3, 3, "BFu15i_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu9i_Sf(Test_BFu15i_BFu9i_Sf, "BFu15i_BFu9i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu9ll_Sf()
{
  {
    init_simple_test("BFu15i_BFu9ll_Sf");
    static BFu15i_BFu9ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, 1, "BFu15i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, hide_ull(1LL<<8), "BFu15i_BFu9ll_Sf");
    check_field_offset(lv, v3, 3, "BFu15i_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu9ll_Sf(Test_BFu15i_BFu9ll_Sf, "BFu15i_BFu9ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_BFu9s_Sf()
{
  {
    init_simple_test("BFu15i_BFu9s_Sf");
    static BFu15i_BFu9s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, 1, "BFu15i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, hide_ull(1LL<<8), "BFu15i_BFu9s_Sf");
    check_field_offset(lv, v3, 3, "BFu15i_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_BFu9s_Sf(Test_BFu15i_BFu9s_Sf, "BFu15i_BFu9s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_C_Sf()
{
  {
    init_simple_test("BFu15i_C_Sf");
    static BFu15i_C_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_C_Sf");
    check_field_offset(lv, v2, 2, "BFu15i_C_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu15i_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_C_Sf(Test_BFu15i_C_Sf, "BFu15i_C_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_D_Sf()
{
  {
    init_simple_test("BFu15i_D_Sf");
    static BFu15i_D_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu15i_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_D_Sf");
    check_field_offset(lv, v2, 2, "BFu15i_D_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu15i_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_D_Sf(Test_BFu15i_D_Sf, "BFu15i_D_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_F_Sf()
{
  {
    init_simple_test("BFu15i_F_Sf");
    static BFu15i_F_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15i_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_F_Sf");
    check_field_offset(lv, v2, 2, "BFu15i_F_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu15i_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_F_Sf(Test_BFu15i_F_Sf, "BFu15i_F_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_I_Sf()
{
  {
    init_simple_test("BFu15i_I_Sf");
    static BFu15i_I_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15i_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_I_Sf");
    check_field_offset(lv, v2, 2, "BFu15i_I_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu15i_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_I_Sf(Test_BFu15i_I_Sf, "BFu15i_I_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Ip_Sf()
{
  {
    init_simple_test("BFu15i_Ip_Sf");
    static BFu15i_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu15i_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Ip_Sf");
    check_field_offset(lv, v2, 2, "BFu15i_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu15i_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Ip_Sf(Test_BFu15i_Ip_Sf, "BFu15i_Ip_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_L_Sf()
{
  {
    init_simple_test("BFu15i_L_Sf");
    static BFu15i_L_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu15i_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_L_Sf");
    check_field_offset(lv, v2, 2, "BFu15i_L_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu15i_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_L_Sf(Test_BFu15i_L_Sf, "BFu15i_L_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_S_Sf()
{
  {
    init_simple_test("BFu15i_S_Sf");
    static BFu15i_S_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_S_Sf");
    check_field_offset(lv, v2, 2, "BFu15i_S_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu15i_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_S_Sf(Test_BFu15i_S_Sf, "BFu15i_S_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf()
{
  {
    init_simple_test("BFu15i_Sf");
    static BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf");
    check_field_offset(lv, v2, 2, "BFu15i_Sf.v2");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf(Test_BFu15i_Sf, "BFu15i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu15i()
{
  {
    init_simple_test("BFu15i_Sf_BFu15i");
    static BFu15i_Sf_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu15i");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu15i_Sf_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu15i(Test_BFu15i_Sf_BFu15i, "BFu15i_Sf_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu15ll()
{
  {
    init_simple_test("BFu15i_Sf_BFu15ll");
    static BFu15i_Sf_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu15ll");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu15i_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu15ll(Test_BFu15i_Sf_BFu15ll, "BFu15i_Sf_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu15s()
{
  {
    init_simple_test("BFu15i_Sf_BFu15s");
    static BFu15i_Sf_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu15s");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu15i_Sf_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu15s(Test_BFu15i_Sf_BFu15s, "BFu15i_Sf_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu16i()
{
  {
    init_simple_test("BFu15i_Sf_BFu16i");
    static BFu15i_Sf_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu16i");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu15i_Sf_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu15i_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu16i(Test_BFu15i_Sf_BFu16i, "BFu15i_Sf_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu16ll()
{
  {
    init_simple_test("BFu15i_Sf_BFu16ll");
    static BFu15i_Sf_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu16ll");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu15i_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu15i_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu16ll(Test_BFu15i_Sf_BFu16ll, "BFu15i_Sf_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu16s()
{
  {
    init_simple_test("BFu15i_Sf_BFu16s");
    static BFu15i_Sf_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu16s");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu15i_Sf_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu15i_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu16s(Test_BFu15i_Sf_BFu16s, "BFu15i_Sf_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu17i()
{
  {
    init_simple_test("BFu15i_Sf_BFu17i");
    static BFu15i_Sf_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(BFu15i_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu17i");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "BFu15i_Sf_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "BFu15i_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu17i(Test_BFu15i_Sf_BFu17i, "BFu15i_Sf_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu17ll()
{
  {
    init_simple_test("BFu15i_Sf_BFu17ll");
    static BFu15i_Sf_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu15i_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu17ll");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "BFu15i_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "BFu15i_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu17ll(Test_BFu15i_Sf_BFu17ll, "BFu15i_Sf_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu1c()
{
  {
    init_simple_test("BFu15i_Sf_BFu1c");
    static BFu15i_Sf_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu1c");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu15i_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu1c(Test_BFu15i_Sf_BFu1c, "BFu15i_Sf_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu1i()
{
  {
    init_simple_test("BFu15i_Sf_BFu1i");
    static BFu15i_Sf_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu1i");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu15i_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu1i(Test_BFu15i_Sf_BFu1i, "BFu15i_Sf_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu1ll()
{
  {
    init_simple_test("BFu15i_Sf_BFu1ll");
    static BFu15i_Sf_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu1ll");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu15i_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu1ll(Test_BFu15i_Sf_BFu1ll, "BFu15i_Sf_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu1s()
{
  {
    init_simple_test("BFu15i_Sf_BFu1s");
    static BFu15i_Sf_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu1s");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu15i_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu1s(Test_BFu15i_Sf_BFu1s, "BFu15i_Sf_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu31i()
{
  {
    init_simple_test("BFu15i_Sf_BFu31i");
    static BFu15i_Sf_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(BFu15i_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu31i");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "BFu15i_Sf_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "BFu15i_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu31i(Test_BFu15i_Sf_BFu31i, "BFu15i_Sf_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu31ll()
{
  {
    init_simple_test("BFu15i_Sf_BFu31ll");
    static BFu15i_Sf_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu15i_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu31ll");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "BFu15i_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "BFu15i_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu31ll(Test_BFu15i_Sf_BFu31ll, "BFu15i_Sf_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu32i()
{
  {
    init_simple_test("BFu15i_Sf_BFu32i");
    static BFu15i_Sf_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(BFu15i_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu32i");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "BFu15i_Sf_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "BFu15i_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu32i(Test_BFu15i_Sf_BFu32i, "BFu15i_Sf_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu32ll()
{
  {
    init_simple_test("BFu15i_Sf_BFu32ll");
    static BFu15i_Sf_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu15i_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu32ll");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "BFu15i_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "BFu15i_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu32ll(Test_BFu15i_Sf_BFu32ll, "BFu15i_Sf_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu33()
{
  {
    init_simple_test("BFu15i_Sf_BFu33");
    static BFu15i_Sf_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(BFu15i_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu33");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "BFu15i_Sf_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "BFu15i_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu33(Test_BFu15i_Sf_BFu33, "BFu15i_Sf_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu7c()
{
  {
    init_simple_test("BFu15i_Sf_BFu7c");
    static BFu15i_Sf_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu7c");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu15i_Sf_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu15i_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu7c(Test_BFu15i_Sf_BFu7c, "BFu15i_Sf_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu7i()
{
  {
    init_simple_test("BFu15i_Sf_BFu7i");
    static BFu15i_Sf_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu7i");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu15i_Sf_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu15i_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu7i(Test_BFu15i_Sf_BFu7i, "BFu15i_Sf_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu7ll()
{
  {
    init_simple_test("BFu15i_Sf_BFu7ll");
    static BFu15i_Sf_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu7ll");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu15i_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu15i_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu7ll(Test_BFu15i_Sf_BFu7ll, "BFu15i_Sf_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu7s()
{
  {
    init_simple_test("BFu15i_Sf_BFu7s");
    static BFu15i_Sf_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu7s");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu15i_Sf_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu15i_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu7s(Test_BFu15i_Sf_BFu7s, "BFu15i_Sf_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu8c()
{
  {
    init_simple_test("BFu15i_Sf_BFu8c");
    static BFu15i_Sf_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu8c");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu15i_Sf_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu15i_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu8c(Test_BFu15i_Sf_BFu8c, "BFu15i_Sf_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu8i()
{
  {
    init_simple_test("BFu15i_Sf_BFu8i");
    static BFu15i_Sf_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu8i");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu15i_Sf_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu15i_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu8i(Test_BFu15i_Sf_BFu8i, "BFu15i_Sf_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu8ll()
{
  {
    init_simple_test("BFu15i_Sf_BFu8ll");
    static BFu15i_Sf_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu8ll");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu15i_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu15i_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu8ll(Test_BFu15i_Sf_BFu8ll, "BFu15i_Sf_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu8s()
{
  {
    init_simple_test("BFu15i_Sf_BFu8s");
    static BFu15i_Sf_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu8s");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu15i_Sf_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu15i_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu8s(Test_BFu15i_Sf_BFu8s, "BFu15i_Sf_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu9i()
{
  {
    init_simple_test("BFu15i_Sf_BFu9i");
    static BFu15i_Sf_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu9i");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu15i_Sf_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu15i_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu9i(Test_BFu15i_Sf_BFu9i, "BFu15i_Sf_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu9ll()
{
  {
    init_simple_test("BFu15i_Sf_BFu9ll");
    static BFu15i_Sf_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu9ll");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu15i_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu15i_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu9ll(Test_BFu15i_Sf_BFu9ll, "BFu15i_Sf_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_BFu9s()
{
  {
    init_simple_test("BFu15i_Sf_BFu9s");
    static BFu15i_Sf_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_BFu9s");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu15i_Sf_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu15i_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_BFu9s(Test_BFu15i_Sf_BFu9s, "BFu15i_Sf_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_C()
{
  {
    init_simple_test("BFu15i_Sf_C");
    static BFu15i_Sf_C lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_C");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_C.v2");
    check_field_offset(lv, v3, 3, "BFu15i_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_C(Test_BFu15i_Sf_C, "BFu15i_Sf_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_D()
{
  {
    init_simple_test("BFu15i_Sf_D");
    static BFu15i_Sf_D lv;
    check2(sizeof(lv), 11, "sizeof(BFu15i_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_D");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_D.v2");
    check_field_offset(lv, v3, 3, "BFu15i_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_D(Test_BFu15i_Sf_D, "BFu15i_Sf_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_F()
{
  {
    init_simple_test("BFu15i_Sf_F");
    static BFu15i_Sf_F lv;
    check2(sizeof(lv), 7, "sizeof(BFu15i_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_F");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_F.v2");
    check_field_offset(lv, v3, 3, "BFu15i_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_F(Test_BFu15i_Sf_F, "BFu15i_Sf_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_I()
{
  {
    init_simple_test("BFu15i_Sf_I");
    static BFu15i_Sf_I lv;
    check2(sizeof(lv), 7, "sizeof(BFu15i_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_I");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_I.v2");
    check_field_offset(lv, v3, 3, "BFu15i_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_I(Test_BFu15i_Sf_I, "BFu15i_Sf_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_Ip()
{
  {
    init_simple_test("BFu15i_Sf_Ip");
    static BFu15i_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu15i_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_Ip");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_Ip.v2");
    check_field_offset(lv, v3, 3, "BFu15i_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_Ip(Test_BFu15i_Sf_Ip, "BFu15i_Sf_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_L()
{
  {
    init_simple_test("BFu15i_Sf_L");
    static BFu15i_Sf_L lv;
    check2(sizeof(lv), 11, "sizeof(BFu15i_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_L");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_L.v2");
    check_field_offset(lv, v3, 3, "BFu15i_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_L(Test_BFu15i_Sf_L, "BFu15i_Sf_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_S()
{
  {
    init_simple_test("BFu15i_Sf_S");
    static BFu15i_Sf_S lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_S");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_S.v2");
    check_field_offset(lv, v3, 3, "BFu15i_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_S(Test_BFu15i_Sf_S, "BFu15i_Sf_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_Sf()
{
  {
    init_simple_test("BFu15i_Sf_Sf");
    static BFu15i_Sf_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_Sf");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu15i_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_Sf(Test_BFu15i_Sf_Sf, "BFu15i_Sf_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_Uc()
{
  {
    init_simple_test("BFu15i_Sf_Uc");
    static BFu15i_Sf_Uc lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_Uc");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_Uc.v2");
    check_field_offset(lv, v3, 3, "BFu15i_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_Uc(Test_BFu15i_Sf_Uc, "BFu15i_Sf_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_Ui()
{
  {
    init_simple_test("BFu15i_Sf_Ui");
    static BFu15i_Sf_Ui lv;
    check2(sizeof(lv), 7, "sizeof(BFu15i_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_Ui");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_Ui.v2");
    check_field_offset(lv, v3, 3, "BFu15i_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_Ui(Test_BFu15i_Sf_Ui, "BFu15i_Sf_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_Ul()
{
  {
    init_simple_test("BFu15i_Sf_Ul");
    static BFu15i_Sf_Ul lv;
    check2(sizeof(lv), 11, "sizeof(BFu15i_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_Ul");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_Ul.v2");
    check_field_offset(lv, v3, 3, "BFu15i_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_Ul(Test_BFu15i_Sf_Ul, "BFu15i_Sf_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_Us()
{
  {
    init_simple_test("BFu15i_Sf_Us");
    static BFu15i_Sf_Us lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_Us");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_Us.v2");
    check_field_offset(lv, v3, 3, "BFu15i_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_Us(Test_BFu15i_Sf_Us, "BFu15i_Sf_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Sf_Vp()
{
  {
    init_simple_test("BFu15i_Sf_Vp");
    static BFu15i_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu15i_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Sf_Vp");
    check_field_offset(lv, v2, 2, "BFu15i_Sf_Vp.v2");
    check_field_offset(lv, v3, 3, "BFu15i_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Sf_Vp(Test_BFu15i_Sf_Vp, "BFu15i_Sf_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Uc_Sf()
{
  {
    init_simple_test("BFu15i_Uc_Sf");
    static BFu15i_Uc_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15i_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Uc_Sf");
    check_field_offset(lv, v2, 2, "BFu15i_Uc_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu15i_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Uc_Sf(Test_BFu15i_Uc_Sf, "BFu15i_Uc_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Ui_Sf()
{
  {
    init_simple_test("BFu15i_Ui_Sf");
    static BFu15i_Ui_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15i_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Ui_Sf");
    check_field_offset(lv, v2, 2, "BFu15i_Ui_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu15i_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Ui_Sf(Test_BFu15i_Ui_Sf, "BFu15i_Ui_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Ul_Sf()
{
  {
    init_simple_test("BFu15i_Ul_Sf");
    static BFu15i_Ul_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu15i_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Ul_Sf");
    check_field_offset(lv, v2, 2, "BFu15i_Ul_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu15i_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Ul_Sf(Test_BFu15i_Ul_Sf, "BFu15i_Ul_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Us_Sf()
{
  {
    init_simple_test("BFu15i_Us_Sf");
    static BFu15i_Us_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15i_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Us_Sf");
    check_field_offset(lv, v2, 2, "BFu15i_Us_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu15i_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Us_Sf(Test_BFu15i_Us_Sf, "BFu15i_Us_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15i_Vp_Sf()
{
  {
    init_simple_test("BFu15i_Vp_Sf");
    static BFu15i_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu15i_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15i_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15i_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15i_Vp_Sf");
    check_field_offset(lv, v2, 2, "BFu15i_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu15i_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15i_Vp_Sf(Test_BFu15i_Vp_Sf, "BFu15i_Vp_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu15i_Sf()
{
  {
    init_simple_test("BFu15ll_BFu15i_Sf");
    static BFu15ll_BFu15i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "BFu15ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "BFu15ll_BFu15i_Sf");
    check_field_offset(lv, v3, 4, "BFu15ll_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu15i_Sf(Test_BFu15ll_BFu15i_Sf, "BFu15ll_BFu15i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu15ll_Sf()
{
  {
    init_simple_test("BFu15ll_BFu15ll_Sf");
    static BFu15ll_BFu15ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "BFu15ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "BFu15ll_BFu15ll_Sf");
    check_field_offset(lv, v3, 4, "BFu15ll_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu15ll_Sf(Test_BFu15ll_BFu15ll_Sf, "BFu15ll_BFu15ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu15s_Sf()
{
  {
    init_simple_test("BFu15ll_BFu15s_Sf");
    static BFu15ll_BFu15s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "BFu15ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "BFu15ll_BFu15s_Sf");
    check_field_offset(lv, v3, 4, "BFu15ll_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu15s_Sf(Test_BFu15ll_BFu15s_Sf, "BFu15ll_BFu15s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu16i_Sf()
{
  {
    init_simple_test("BFu15ll_BFu16i_Sf");
    static BFu15ll_BFu16i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, 1, "BFu15ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, hide_ull(1LL<<15), "BFu15ll_BFu16i_Sf");
    check_field_offset(lv, v3, 4, "BFu15ll_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu16i_Sf(Test_BFu15ll_BFu16i_Sf, "BFu15ll_BFu16i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu16ll_Sf()
{
  {
    init_simple_test("BFu15ll_BFu16ll_Sf");
    static BFu15ll_BFu16ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, 1, "BFu15ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, hide_ull(1LL<<15), "BFu15ll_BFu16ll_Sf");
    check_field_offset(lv, v3, 4, "BFu15ll_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu16ll_Sf(Test_BFu15ll_BFu16ll_Sf, "BFu15ll_BFu16ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu16s_Sf()
{
  {
    init_simple_test("BFu15ll_BFu16s_Sf");
    static BFu15ll_BFu16s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, 1, "BFu15ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, hide_ull(1LL<<15), "BFu15ll_BFu16s_Sf");
    check_field_offset(lv, v3, 4, "BFu15ll_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu16s_Sf(Test_BFu15ll_BFu16s_Sf, "BFu15ll_BFu16s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu17i_Sf()
{
  {
    init_simple_test("BFu15ll_BFu17i_Sf");
    static BFu15ll_BFu17i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 17, 1, "BFu15ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 17, hide_ull(1LL<<16), "BFu15ll_BFu17i_Sf");
    check_field_offset(lv, v3, 4, "BFu15ll_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu17i_Sf(Test_BFu15ll_BFu17i_Sf, "BFu15ll_BFu17i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu17ll_Sf()
{
  {
    init_simple_test("BFu15ll_BFu17ll_Sf");
    static BFu15ll_BFu17ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 17, 1, "BFu15ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 17, hide_ull(1LL<<16), "BFu15ll_BFu17ll_Sf");
    check_field_offset(lv, v3, 4, "BFu15ll_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu17ll_Sf(Test_BFu15ll_BFu17ll_Sf, "BFu15ll_BFu17ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu1c_Sf()
{
  {
    init_simple_test("BFu15ll_BFu1c_Sf");
    static BFu15ll_BFu1c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu15ll_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu1c_Sf");
    set_bf_and_test(lv, v2, 1, 7, 1, 1, "BFu15ll_BFu1c_Sf");
    check_field_offset(lv, v3, 2, "BFu15ll_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu1c_Sf(Test_BFu15ll_BFu1c_Sf, "BFu15ll_BFu1c_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu1i_Sf()
{
  {
    init_simple_test("BFu15ll_BFu1i_Sf");
    static BFu15ll_BFu1i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu15ll_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu1i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 1, 1, "BFu15ll_BFu1i_Sf");
    check_field_offset(lv, v3, 2, "BFu15ll_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu1i_Sf(Test_BFu15ll_BFu1i_Sf, "BFu15ll_BFu1i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu1ll_Sf()
{
  {
    init_simple_test("BFu15ll_BFu1ll_Sf");
    static BFu15ll_BFu1ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu15ll_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 1, 1, "BFu15ll_BFu1ll_Sf");
    check_field_offset(lv, v3, 2, "BFu15ll_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu1ll_Sf(Test_BFu15ll_BFu1ll_Sf, "BFu15ll_BFu1ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu1s_Sf()
{
  {
    init_simple_test("BFu15ll_BFu1s_Sf");
    static BFu15ll_BFu1s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu15ll_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu1s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 1, 1, "BFu15ll_BFu1s_Sf");
    check_field_offset(lv, v3, 2, "BFu15ll_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu1s_Sf(Test_BFu15ll_BFu1s_Sf, "BFu15ll_BFu1s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu31i_Sf()
{
  {
    init_simple_test("BFu15ll_BFu31i_Sf");
    static BFu15ll_BFu31i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15ll_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 31, 1, "BFu15ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 31, hide_ull(1LL<<30), "BFu15ll_BFu31i_Sf");
    check_field_offset(lv, v3, 6, "BFu15ll_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu31i_Sf(Test_BFu15ll_BFu31i_Sf, "BFu15ll_BFu31i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu31ll_Sf()
{
  {
    init_simple_test("BFu15ll_BFu31ll_Sf");
    static BFu15ll_BFu31ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15ll_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 31, 1, "BFu15ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 31, hide_ull(1LL<<30), "BFu15ll_BFu31ll_Sf");
    check_field_offset(lv, v3, 6, "BFu15ll_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu31ll_Sf(Test_BFu15ll_BFu31ll_Sf, "BFu15ll_BFu31ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu32i_Sf()
{
  {
    init_simple_test("BFu15ll_BFu32i_Sf");
    static BFu15ll_BFu32i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15ll_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 32, 1, "BFu15ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 32, hide_ull(1LL<<31), "BFu15ll_BFu32i_Sf");
    check_field_offset(lv, v3, 6, "BFu15ll_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu32i_Sf(Test_BFu15ll_BFu32i_Sf, "BFu15ll_BFu32i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu32ll_Sf()
{
  {
    init_simple_test("BFu15ll_BFu32ll_Sf");
    static BFu15ll_BFu32ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15ll_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 32, 1, "BFu15ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 32, hide_ull(1LL<<31), "BFu15ll_BFu32ll_Sf");
    check_field_offset(lv, v3, 6, "BFu15ll_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu32ll_Sf(Test_BFu15ll_BFu32ll_Sf, "BFu15ll_BFu32ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu33_Sf()
{
  {
    init_simple_test("BFu15ll_BFu33_Sf");
    static BFu15ll_BFu33_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15ll_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 7, 33, 1, "BFu15ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 7, 33, hide_ull(1LL<<32), "BFu15ll_BFu33_Sf");
    check_field_offset(lv, v3, 6, "BFu15ll_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu33_Sf(Test_BFu15ll_BFu33_Sf, "BFu15ll_BFu33_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu7c_Sf()
{
  {
    init_simple_test("BFu15ll_BFu7c_Sf");
    static BFu15ll_BFu7c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, 1, "BFu15ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, hide_ull(1LL<<6), "BFu15ll_BFu7c_Sf");
    check_field_offset(lv, v3, 3, "BFu15ll_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu7c_Sf(Test_BFu15ll_BFu7c_Sf, "BFu15ll_BFu7c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu7i_Sf()
{
  {
    init_simple_test("BFu15ll_BFu7i_Sf");
    static BFu15ll_BFu7i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, 1, "BFu15ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, hide_ull(1LL<<6), "BFu15ll_BFu7i_Sf");
    check_field_offset(lv, v3, 3, "BFu15ll_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu7i_Sf(Test_BFu15ll_BFu7i_Sf, "BFu15ll_BFu7i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu7ll_Sf()
{
  {
    init_simple_test("BFu15ll_BFu7ll_Sf");
    static BFu15ll_BFu7ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, 1, "BFu15ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, hide_ull(1LL<<6), "BFu15ll_BFu7ll_Sf");
    check_field_offset(lv, v3, 3, "BFu15ll_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu7ll_Sf(Test_BFu15ll_BFu7ll_Sf, "BFu15ll_BFu7ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu7s_Sf()
{
  {
    init_simple_test("BFu15ll_BFu7s_Sf");
    static BFu15ll_BFu7s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, 1, "BFu15ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, hide_ull(1LL<<6), "BFu15ll_BFu7s_Sf");
    check_field_offset(lv, v3, 3, "BFu15ll_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu7s_Sf(Test_BFu15ll_BFu7s_Sf, "BFu15ll_BFu7s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu8c_Sf()
{
  {
    init_simple_test("BFu15ll_BFu8c_Sf");
    static BFu15ll_BFu8c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, 1, "BFu15ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, hide_ull(1LL<<7), "BFu15ll_BFu8c_Sf");
    check_field_offset(lv, v3, 3, "BFu15ll_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu8c_Sf(Test_BFu15ll_BFu8c_Sf, "BFu15ll_BFu8c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu8i_Sf()
{
  {
    init_simple_test("BFu15ll_BFu8i_Sf");
    static BFu15ll_BFu8i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, 1, "BFu15ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, hide_ull(1LL<<7), "BFu15ll_BFu8i_Sf");
    check_field_offset(lv, v3, 3, "BFu15ll_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu8i_Sf(Test_BFu15ll_BFu8i_Sf, "BFu15ll_BFu8i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu8ll_Sf()
{
  {
    init_simple_test("BFu15ll_BFu8ll_Sf");
    static BFu15ll_BFu8ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, 1, "BFu15ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, hide_ull(1LL<<7), "BFu15ll_BFu8ll_Sf");
    check_field_offset(lv, v3, 3, "BFu15ll_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu8ll_Sf(Test_BFu15ll_BFu8ll_Sf, "BFu15ll_BFu8ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu8s_Sf()
{
  {
    init_simple_test("BFu15ll_BFu8s_Sf");
    static BFu15ll_BFu8s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, 1, "BFu15ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, hide_ull(1LL<<7), "BFu15ll_BFu8s_Sf");
    check_field_offset(lv, v3, 3, "BFu15ll_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu8s_Sf(Test_BFu15ll_BFu8s_Sf, "BFu15ll_BFu8s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu9i_Sf()
{
  {
    init_simple_test("BFu15ll_BFu9i_Sf");
    static BFu15ll_BFu9i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, 1, "BFu15ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, hide_ull(1LL<<8), "BFu15ll_BFu9i_Sf");
    check_field_offset(lv, v3, 3, "BFu15ll_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu9i_Sf(Test_BFu15ll_BFu9i_Sf, "BFu15ll_BFu9i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu9ll_Sf()
{
  {
    init_simple_test("BFu15ll_BFu9ll_Sf");
    static BFu15ll_BFu9ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, 1, "BFu15ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, hide_ull(1LL<<8), "BFu15ll_BFu9ll_Sf");
    check_field_offset(lv, v3, 3, "BFu15ll_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu9ll_Sf(Test_BFu15ll_BFu9ll_Sf, "BFu15ll_BFu9ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_BFu9s_Sf()
{
  {
    init_simple_test("BFu15ll_BFu9s_Sf");
    static BFu15ll_BFu9s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, 1, "BFu15ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, hide_ull(1LL<<8), "BFu15ll_BFu9s_Sf");
    check_field_offset(lv, v3, 3, "BFu15ll_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_BFu9s_Sf(Test_BFu15ll_BFu9s_Sf, "BFu15ll_BFu9s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_C_Sf()
{
  {
    init_simple_test("BFu15ll_C_Sf");
    static BFu15ll_C_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_C_Sf");
    check_field_offset(lv, v2, 2, "BFu15ll_C_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu15ll_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_C_Sf(Test_BFu15ll_C_Sf, "BFu15ll_C_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_D_Sf()
{
  {
    init_simple_test("BFu15ll_D_Sf");
    static BFu15ll_D_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu15ll_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_D_Sf");
    check_field_offset(lv, v2, 2, "BFu15ll_D_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu15ll_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_D_Sf(Test_BFu15ll_D_Sf, "BFu15ll_D_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_F_Sf()
{
  {
    init_simple_test("BFu15ll_F_Sf");
    static BFu15ll_F_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15ll_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_F_Sf");
    check_field_offset(lv, v2, 2, "BFu15ll_F_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu15ll_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_F_Sf(Test_BFu15ll_F_Sf, "BFu15ll_F_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_I_Sf()
{
  {
    init_simple_test("BFu15ll_I_Sf");
    static BFu15ll_I_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15ll_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_I_Sf");
    check_field_offset(lv, v2, 2, "BFu15ll_I_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu15ll_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_I_Sf(Test_BFu15ll_I_Sf, "BFu15ll_I_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Ip_Sf()
{
  {
    init_simple_test("BFu15ll_Ip_Sf");
    static BFu15ll_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu15ll_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Ip_Sf");
    check_field_offset(lv, v2, 2, "BFu15ll_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu15ll_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Ip_Sf(Test_BFu15ll_Ip_Sf, "BFu15ll_Ip_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_L_Sf()
{
  {
    init_simple_test("BFu15ll_L_Sf");
    static BFu15ll_L_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu15ll_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_L_Sf");
    check_field_offset(lv, v2, 2, "BFu15ll_L_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu15ll_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_L_Sf(Test_BFu15ll_L_Sf, "BFu15ll_L_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_S_Sf()
{
  {
    init_simple_test("BFu15ll_S_Sf");
    static BFu15ll_S_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_S_Sf");
    check_field_offset(lv, v2, 2, "BFu15ll_S_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu15ll_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_S_Sf(Test_BFu15ll_S_Sf, "BFu15ll_S_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf()
{
  {
    init_simple_test("BFu15ll_Sf");
    static BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf.v2");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf(Test_BFu15ll_Sf, "BFu15ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu15i()
{
  {
    init_simple_test("BFu15ll_Sf_BFu15i");
    static BFu15ll_Sf_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu15i");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu15ll_Sf_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu15i(Test_BFu15ll_Sf_BFu15i, "BFu15ll_Sf_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu15ll()
{
  {
    init_simple_test("BFu15ll_Sf_BFu15ll");
    static BFu15ll_Sf_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu15ll");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu15ll_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu15ll(Test_BFu15ll_Sf_BFu15ll, "BFu15ll_Sf_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu15s()
{
  {
    init_simple_test("BFu15ll_Sf_BFu15s");
    static BFu15ll_Sf_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu15s");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu15ll_Sf_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu15s(Test_BFu15ll_Sf_BFu15s, "BFu15ll_Sf_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu16i()
{
  {
    init_simple_test("BFu15ll_Sf_BFu16i");
    static BFu15ll_Sf_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu16i");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu15ll_Sf_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu15ll_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu16i(Test_BFu15ll_Sf_BFu16i, "BFu15ll_Sf_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu16ll()
{
  {
    init_simple_test("BFu15ll_Sf_BFu16ll");
    static BFu15ll_Sf_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu16ll");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu15ll_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu15ll_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu16ll(Test_BFu15ll_Sf_BFu16ll, "BFu15ll_Sf_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu16s()
{
  {
    init_simple_test("BFu15ll_Sf_BFu16s");
    static BFu15ll_Sf_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu16s");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu15ll_Sf_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu15ll_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu16s(Test_BFu15ll_Sf_BFu16s, "BFu15ll_Sf_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu17i()
{
  {
    init_simple_test("BFu15ll_Sf_BFu17i");
    static BFu15ll_Sf_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(BFu15ll_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu17i");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "BFu15ll_Sf_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "BFu15ll_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu17i(Test_BFu15ll_Sf_BFu17i, "BFu15ll_Sf_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu17ll()
{
  {
    init_simple_test("BFu15ll_Sf_BFu17ll");
    static BFu15ll_Sf_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu15ll_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu17ll");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "BFu15ll_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "BFu15ll_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu17ll(Test_BFu15ll_Sf_BFu17ll, "BFu15ll_Sf_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu1c()
{
  {
    init_simple_test("BFu15ll_Sf_BFu1c");
    static BFu15ll_Sf_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu1c");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu15ll_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu1c(Test_BFu15ll_Sf_BFu1c, "BFu15ll_Sf_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu1i()
{
  {
    init_simple_test("BFu15ll_Sf_BFu1i");
    static BFu15ll_Sf_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu1i");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu15ll_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu1i(Test_BFu15ll_Sf_BFu1i, "BFu15ll_Sf_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu1ll()
{
  {
    init_simple_test("BFu15ll_Sf_BFu1ll");
    static BFu15ll_Sf_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu1ll");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu15ll_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu1ll(Test_BFu15ll_Sf_BFu1ll, "BFu15ll_Sf_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu1s()
{
  {
    init_simple_test("BFu15ll_Sf_BFu1s");
    static BFu15ll_Sf_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu1s");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu15ll_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu1s(Test_BFu15ll_Sf_BFu1s, "BFu15ll_Sf_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu31i()
{
  {
    init_simple_test("BFu15ll_Sf_BFu31i");
    static BFu15ll_Sf_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(BFu15ll_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu31i");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "BFu15ll_Sf_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "BFu15ll_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu31i(Test_BFu15ll_Sf_BFu31i, "BFu15ll_Sf_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu31ll()
{
  {
    init_simple_test("BFu15ll_Sf_BFu31ll");
    static BFu15ll_Sf_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu15ll_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu31ll");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "BFu15ll_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "BFu15ll_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu31ll(Test_BFu15ll_Sf_BFu31ll, "BFu15ll_Sf_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu32i()
{
  {
    init_simple_test("BFu15ll_Sf_BFu32i");
    static BFu15ll_Sf_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(BFu15ll_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu32i");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "BFu15ll_Sf_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "BFu15ll_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu32i(Test_BFu15ll_Sf_BFu32i, "BFu15ll_Sf_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu32ll()
{
  {
    init_simple_test("BFu15ll_Sf_BFu32ll");
    static BFu15ll_Sf_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu15ll_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu32ll");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "BFu15ll_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "BFu15ll_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu32ll(Test_BFu15ll_Sf_BFu32ll, "BFu15ll_Sf_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu33()
{
  {
    init_simple_test("BFu15ll_Sf_BFu33");
    static BFu15ll_Sf_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(BFu15ll_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu33");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "BFu15ll_Sf_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "BFu15ll_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu33(Test_BFu15ll_Sf_BFu33, "BFu15ll_Sf_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu7c()
{
  {
    init_simple_test("BFu15ll_Sf_BFu7c");
    static BFu15ll_Sf_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu7c");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu15ll_Sf_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu15ll_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu7c(Test_BFu15ll_Sf_BFu7c, "BFu15ll_Sf_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu7i()
{
  {
    init_simple_test("BFu15ll_Sf_BFu7i");
    static BFu15ll_Sf_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu7i");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu15ll_Sf_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu15ll_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu7i(Test_BFu15ll_Sf_BFu7i, "BFu15ll_Sf_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu7ll()
{
  {
    init_simple_test("BFu15ll_Sf_BFu7ll");
    static BFu15ll_Sf_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu7ll");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu15ll_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu15ll_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu7ll(Test_BFu15ll_Sf_BFu7ll, "BFu15ll_Sf_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu7s()
{
  {
    init_simple_test("BFu15ll_Sf_BFu7s");
    static BFu15ll_Sf_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu7s");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu15ll_Sf_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu15ll_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu7s(Test_BFu15ll_Sf_BFu7s, "BFu15ll_Sf_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu8c()
{
  {
    init_simple_test("BFu15ll_Sf_BFu8c");
    static BFu15ll_Sf_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu8c");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu15ll_Sf_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu15ll_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu8c(Test_BFu15ll_Sf_BFu8c, "BFu15ll_Sf_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu8i()
{
  {
    init_simple_test("BFu15ll_Sf_BFu8i");
    static BFu15ll_Sf_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu8i");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu15ll_Sf_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu15ll_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu8i(Test_BFu15ll_Sf_BFu8i, "BFu15ll_Sf_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu8ll()
{
  {
    init_simple_test("BFu15ll_Sf_BFu8ll");
    static BFu15ll_Sf_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu8ll");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu15ll_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu15ll_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu8ll(Test_BFu15ll_Sf_BFu8ll, "BFu15ll_Sf_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu8s()
{
  {
    init_simple_test("BFu15ll_Sf_BFu8s");
    static BFu15ll_Sf_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu8s");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu15ll_Sf_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu15ll_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu8s(Test_BFu15ll_Sf_BFu8s, "BFu15ll_Sf_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu9i()
{
  {
    init_simple_test("BFu15ll_Sf_BFu9i");
    static BFu15ll_Sf_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu9i");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu15ll_Sf_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu15ll_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu9i(Test_BFu15ll_Sf_BFu9i, "BFu15ll_Sf_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu9ll()
{
  {
    init_simple_test("BFu15ll_Sf_BFu9ll");
    static BFu15ll_Sf_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu9ll");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu15ll_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu15ll_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu9ll(Test_BFu15ll_Sf_BFu9ll, "BFu15ll_Sf_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_BFu9s()
{
  {
    init_simple_test("BFu15ll_Sf_BFu9s");
    static BFu15ll_Sf_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_BFu9s");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu15ll_Sf_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu15ll_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_BFu9s(Test_BFu15ll_Sf_BFu9s, "BFu15ll_Sf_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_C()
{
  {
    init_simple_test("BFu15ll_Sf_C");
    static BFu15ll_Sf_C lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_C");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_C.v2");
    check_field_offset(lv, v3, 3, "BFu15ll_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_C(Test_BFu15ll_Sf_C, "BFu15ll_Sf_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_D()
{
  {
    init_simple_test("BFu15ll_Sf_D");
    static BFu15ll_Sf_D lv;
    check2(sizeof(lv), 11, "sizeof(BFu15ll_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_D");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_D.v2");
    check_field_offset(lv, v3, 3, "BFu15ll_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_D(Test_BFu15ll_Sf_D, "BFu15ll_Sf_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_F()
{
  {
    init_simple_test("BFu15ll_Sf_F");
    static BFu15ll_Sf_F lv;
    check2(sizeof(lv), 7, "sizeof(BFu15ll_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_F");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_F.v2");
    check_field_offset(lv, v3, 3, "BFu15ll_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_F(Test_BFu15ll_Sf_F, "BFu15ll_Sf_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_I()
{
  {
    init_simple_test("BFu15ll_Sf_I");
    static BFu15ll_Sf_I lv;
    check2(sizeof(lv), 7, "sizeof(BFu15ll_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_I");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_I.v2");
    check_field_offset(lv, v3, 3, "BFu15ll_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_I(Test_BFu15ll_Sf_I, "BFu15ll_Sf_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_Ip()
{
  {
    init_simple_test("BFu15ll_Sf_Ip");
    static BFu15ll_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu15ll_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_Ip");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_Ip.v2");
    check_field_offset(lv, v3, 3, "BFu15ll_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_Ip(Test_BFu15ll_Sf_Ip, "BFu15ll_Sf_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_L()
{
  {
    init_simple_test("BFu15ll_Sf_L");
    static BFu15ll_Sf_L lv;
    check2(sizeof(lv), 11, "sizeof(BFu15ll_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_L");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_L.v2");
    check_field_offset(lv, v3, 3, "BFu15ll_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_L(Test_BFu15ll_Sf_L, "BFu15ll_Sf_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_S()
{
  {
    init_simple_test("BFu15ll_Sf_S");
    static BFu15ll_Sf_S lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_S");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_S.v2");
    check_field_offset(lv, v3, 3, "BFu15ll_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_S(Test_BFu15ll_Sf_S, "BFu15ll_Sf_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_Sf()
{
  {
    init_simple_test("BFu15ll_Sf_Sf");
    static BFu15ll_Sf_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_Sf");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu15ll_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_Sf(Test_BFu15ll_Sf_Sf, "BFu15ll_Sf_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_Uc()
{
  {
    init_simple_test("BFu15ll_Sf_Uc");
    static BFu15ll_Sf_Uc lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_Uc");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_Uc.v2");
    check_field_offset(lv, v3, 3, "BFu15ll_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_Uc(Test_BFu15ll_Sf_Uc, "BFu15ll_Sf_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_Ui()
{
  {
    init_simple_test("BFu15ll_Sf_Ui");
    static BFu15ll_Sf_Ui lv;
    check2(sizeof(lv), 7, "sizeof(BFu15ll_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_Ui");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_Ui.v2");
    check_field_offset(lv, v3, 3, "BFu15ll_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_Ui(Test_BFu15ll_Sf_Ui, "BFu15ll_Sf_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_Ul()
{
  {
    init_simple_test("BFu15ll_Sf_Ul");
    static BFu15ll_Sf_Ul lv;
    check2(sizeof(lv), 11, "sizeof(BFu15ll_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_Ul");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_Ul.v2");
    check_field_offset(lv, v3, 3, "BFu15ll_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_Ul(Test_BFu15ll_Sf_Ul, "BFu15ll_Sf_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_Us()
{
  {
    init_simple_test("BFu15ll_Sf_Us");
    static BFu15ll_Sf_Us lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_Us");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_Us.v2");
    check_field_offset(lv, v3, 3, "BFu15ll_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_Us(Test_BFu15ll_Sf_Us, "BFu15ll_Sf_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Sf_Vp()
{
  {
    init_simple_test("BFu15ll_Sf_Vp");
    static BFu15ll_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu15ll_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Sf_Vp");
    check_field_offset(lv, v2, 2, "BFu15ll_Sf_Vp.v2");
    check_field_offset(lv, v3, 3, "BFu15ll_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Sf_Vp(Test_BFu15ll_Sf_Vp, "BFu15ll_Sf_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Uc_Sf()
{
  {
    init_simple_test("BFu15ll_Uc_Sf");
    static BFu15ll_Uc_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15ll_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Uc_Sf");
    check_field_offset(lv, v2, 2, "BFu15ll_Uc_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu15ll_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Uc_Sf(Test_BFu15ll_Uc_Sf, "BFu15ll_Uc_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Ui_Sf()
{
  {
    init_simple_test("BFu15ll_Ui_Sf");
    static BFu15ll_Ui_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15ll_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Ui_Sf");
    check_field_offset(lv, v2, 2, "BFu15ll_Ui_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu15ll_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Ui_Sf(Test_BFu15ll_Ui_Sf, "BFu15ll_Ui_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Ul_Sf()
{
  {
    init_simple_test("BFu15ll_Ul_Sf");
    static BFu15ll_Ul_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu15ll_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Ul_Sf");
    check_field_offset(lv, v2, 2, "BFu15ll_Ul_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu15ll_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Ul_Sf(Test_BFu15ll_Ul_Sf, "BFu15ll_Ul_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Us_Sf()
{
  {
    init_simple_test("BFu15ll_Us_Sf");
    static BFu15ll_Us_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15ll_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Us_Sf");
    check_field_offset(lv, v2, 2, "BFu15ll_Us_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu15ll_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Us_Sf(Test_BFu15ll_Us_Sf, "BFu15ll_Us_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15ll_Vp_Sf()
{
  {
    init_simple_test("BFu15ll_Vp_Sf");
    static BFu15ll_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu15ll_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15ll_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15ll_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15ll_Vp_Sf");
    check_field_offset(lv, v2, 2, "BFu15ll_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu15ll_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15ll_Vp_Sf(Test_BFu15ll_Vp_Sf, "BFu15ll_Vp_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu15i_Sf()
{
  {
    init_simple_test("BFu15s_BFu15i_Sf");
    static BFu15s_BFu15i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "BFu15s_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "BFu15s_BFu15i_Sf");
    check_field_offset(lv, v3, 4, "BFu15s_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu15i_Sf(Test_BFu15s_BFu15i_Sf, "BFu15s_BFu15i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu15ll_Sf()
{
  {
    init_simple_test("BFu15s_BFu15ll_Sf");
    static BFu15s_BFu15ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "BFu15s_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "BFu15s_BFu15ll_Sf");
    check_field_offset(lv, v3, 4, "BFu15s_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu15ll_Sf(Test_BFu15s_BFu15ll_Sf, "BFu15s_BFu15ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu15s_Sf()
{
  {
    init_simple_test("BFu15s_BFu15s_Sf");
    static BFu15s_BFu15s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, 1, "BFu15s_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 15, hide_ull(1LL<<14), "BFu15s_BFu15s_Sf");
    check_field_offset(lv, v3, 4, "BFu15s_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu15s_Sf(Test_BFu15s_BFu15s_Sf, "BFu15s_BFu15s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu16i_Sf()
{
  {
    init_simple_test("BFu15s_BFu16i_Sf");
    static BFu15s_BFu16i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, 1, "BFu15s_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, hide_ull(1LL<<15), "BFu15s_BFu16i_Sf");
    check_field_offset(lv, v3, 4, "BFu15s_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu16i_Sf(Test_BFu15s_BFu16i_Sf, "BFu15s_BFu16i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu16ll_Sf()
{
  {
    init_simple_test("BFu15s_BFu16ll_Sf");
    static BFu15s_BFu16ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, 1, "BFu15s_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, hide_ull(1LL<<15), "BFu15s_BFu16ll_Sf");
    check_field_offset(lv, v3, 4, "BFu15s_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu16ll_Sf(Test_BFu15s_BFu16ll_Sf, "BFu15s_BFu16ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu16s_Sf()
{
  {
    init_simple_test("BFu15s_BFu16s_Sf");
    static BFu15s_BFu16s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, 1, "BFu15s_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 16, hide_ull(1LL<<15), "BFu15s_BFu16s_Sf");
    check_field_offset(lv, v3, 4, "BFu15s_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu16s_Sf(Test_BFu15s_BFu16s_Sf, "BFu15s_BFu16s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu17i_Sf()
{
  {
    init_simple_test("BFu15s_BFu17i_Sf");
    static BFu15s_BFu17i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 17, 1, "BFu15s_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 17, hide_ull(1LL<<16), "BFu15s_BFu17i_Sf");
    check_field_offset(lv, v3, 4, "BFu15s_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu17i_Sf(Test_BFu15s_BFu17i_Sf, "BFu15s_BFu17i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu17ll_Sf()
{
  {
    init_simple_test("BFu15s_BFu17ll_Sf");
    static BFu15s_BFu17ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 17, 1, "BFu15s_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 17, hide_ull(1LL<<16), "BFu15s_BFu17ll_Sf");
    check_field_offset(lv, v3, 4, "BFu15s_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu17ll_Sf(Test_BFu15s_BFu17ll_Sf, "BFu15s_BFu17ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu1c_Sf()
{
  {
    init_simple_test("BFu15s_BFu1c_Sf");
    static BFu15s_BFu1c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu15s_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu1c_Sf");
    set_bf_and_test(lv, v2, 1, 7, 1, 1, "BFu15s_BFu1c_Sf");
    check_field_offset(lv, v3, 2, "BFu15s_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu1c_Sf(Test_BFu15s_BFu1c_Sf, "BFu15s_BFu1c_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu1i_Sf()
{
  {
    init_simple_test("BFu15s_BFu1i_Sf");
    static BFu15s_BFu1i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu15s_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu1i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 1, 1, "BFu15s_BFu1i_Sf");
    check_field_offset(lv, v3, 2, "BFu15s_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu1i_Sf(Test_BFu15s_BFu1i_Sf, "BFu15s_BFu1i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu1ll_Sf()
{
  {
    init_simple_test("BFu15s_BFu1ll_Sf");
    static BFu15s_BFu1ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu15s_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 1, 1, "BFu15s_BFu1ll_Sf");
    check_field_offset(lv, v3, 2, "BFu15s_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu1ll_Sf(Test_BFu15s_BFu1ll_Sf, "BFu15s_BFu1ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu1s_Sf()
{
  {
    init_simple_test("BFu15s_BFu1s_Sf");
    static BFu15s_BFu1s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu15s_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu1s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 1, 1, "BFu15s_BFu1s_Sf");
    check_field_offset(lv, v3, 2, "BFu15s_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu1s_Sf(Test_BFu15s_BFu1s_Sf, "BFu15s_BFu1s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu31i_Sf()
{
  {
    init_simple_test("BFu15s_BFu31i_Sf");
    static BFu15s_BFu31i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15s_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 31, 1, "BFu15s_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 31, hide_ull(1LL<<30), "BFu15s_BFu31i_Sf");
    check_field_offset(lv, v3, 6, "BFu15s_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu31i_Sf(Test_BFu15s_BFu31i_Sf, "BFu15s_BFu31i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu31ll_Sf()
{
  {
    init_simple_test("BFu15s_BFu31ll_Sf");
    static BFu15s_BFu31ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15s_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 31, 1, "BFu15s_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 31, hide_ull(1LL<<30), "BFu15s_BFu31ll_Sf");
    check_field_offset(lv, v3, 6, "BFu15s_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu31ll_Sf(Test_BFu15s_BFu31ll_Sf, "BFu15s_BFu31ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu32i_Sf()
{
  {
    init_simple_test("BFu15s_BFu32i_Sf");
    static BFu15s_BFu32i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15s_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 32, 1, "BFu15s_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 32, hide_ull(1LL<<31), "BFu15s_BFu32i_Sf");
    check_field_offset(lv, v3, 6, "BFu15s_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu32i_Sf(Test_BFu15s_BFu32i_Sf, "BFu15s_BFu32i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu32ll_Sf()
{
  {
    init_simple_test("BFu15s_BFu32ll_Sf");
    static BFu15s_BFu32ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15s_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 32, 1, "BFu15s_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 32, hide_ull(1LL<<31), "BFu15s_BFu32ll_Sf");
    check_field_offset(lv, v3, 6, "BFu15s_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu32ll_Sf(Test_BFu15s_BFu32ll_Sf, "BFu15s_BFu32ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu33_Sf()
{
  {
    init_simple_test("BFu15s_BFu33_Sf");
    static BFu15s_BFu33_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15s_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 7, 33, 1, "BFu15s_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 7, 33, hide_ull(1LL<<32), "BFu15s_BFu33_Sf");
    check_field_offset(lv, v3, 6, "BFu15s_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu33_Sf(Test_BFu15s_BFu33_Sf, "BFu15s_BFu33_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu7c_Sf()
{
  {
    init_simple_test("BFu15s_BFu7c_Sf");
    static BFu15s_BFu7c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, 1, "BFu15s_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, hide_ull(1LL<<6), "BFu15s_BFu7c_Sf");
    check_field_offset(lv, v3, 3, "BFu15s_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu7c_Sf(Test_BFu15s_BFu7c_Sf, "BFu15s_BFu7c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu7i_Sf()
{
  {
    init_simple_test("BFu15s_BFu7i_Sf");
    static BFu15s_BFu7i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, 1, "BFu15s_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, hide_ull(1LL<<6), "BFu15s_BFu7i_Sf");
    check_field_offset(lv, v3, 3, "BFu15s_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu7i_Sf(Test_BFu15s_BFu7i_Sf, "BFu15s_BFu7i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu7ll_Sf()
{
  {
    init_simple_test("BFu15s_BFu7ll_Sf");
    static BFu15s_BFu7ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, 1, "BFu15s_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, hide_ull(1LL<<6), "BFu15s_BFu7ll_Sf");
    check_field_offset(lv, v3, 3, "BFu15s_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu7ll_Sf(Test_BFu15s_BFu7ll_Sf, "BFu15s_BFu7ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu7s_Sf()
{
  {
    init_simple_test("BFu15s_BFu7s_Sf");
    static BFu15s_BFu7s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, 1, "BFu15s_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 7, hide_ull(1LL<<6), "BFu15s_BFu7s_Sf");
    check_field_offset(lv, v3, 3, "BFu15s_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu7s_Sf(Test_BFu15s_BFu7s_Sf, "BFu15s_BFu7s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu8c_Sf()
{
  {
    init_simple_test("BFu15s_BFu8c_Sf");
    static BFu15s_BFu8c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, 1, "BFu15s_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, hide_ull(1LL<<7), "BFu15s_BFu8c_Sf");
    check_field_offset(lv, v3, 3, "BFu15s_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu8c_Sf(Test_BFu15s_BFu8c_Sf, "BFu15s_BFu8c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu8i_Sf()
{
  {
    init_simple_test("BFu15s_BFu8i_Sf");
    static BFu15s_BFu8i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, 1, "BFu15s_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, hide_ull(1LL<<7), "BFu15s_BFu8i_Sf");
    check_field_offset(lv, v3, 3, "BFu15s_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu8i_Sf(Test_BFu15s_BFu8i_Sf, "BFu15s_BFu8i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu8ll_Sf()
{
  {
    init_simple_test("BFu15s_BFu8ll_Sf");
    static BFu15s_BFu8ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, 1, "BFu15s_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, hide_ull(1LL<<7), "BFu15s_BFu8ll_Sf");
    check_field_offset(lv, v3, 3, "BFu15s_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu8ll_Sf(Test_BFu15s_BFu8ll_Sf, "BFu15s_BFu8ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu8s_Sf()
{
  {
    init_simple_test("BFu15s_BFu8s_Sf");
    static BFu15s_BFu8s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, 1, "BFu15s_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 8, hide_ull(1LL<<7), "BFu15s_BFu8s_Sf");
    check_field_offset(lv, v3, 3, "BFu15s_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu8s_Sf(Test_BFu15s_BFu8s_Sf, "BFu15s_BFu8s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu9i_Sf()
{
  {
    init_simple_test("BFu15s_BFu9i_Sf");
    static BFu15s_BFu9i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, 1, "BFu15s_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, hide_ull(1LL<<8), "BFu15s_BFu9i_Sf");
    check_field_offset(lv, v3, 3, "BFu15s_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu9i_Sf(Test_BFu15s_BFu9i_Sf, "BFu15s_BFu9i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu9ll_Sf()
{
  {
    init_simple_test("BFu15s_BFu9ll_Sf");
    static BFu15s_BFu9ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, 1, "BFu15s_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, hide_ull(1LL<<8), "BFu15s_BFu9ll_Sf");
    check_field_offset(lv, v3, 3, "BFu15s_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu9ll_Sf(Test_BFu15s_BFu9ll_Sf, "BFu15s_BFu9ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_BFu9s_Sf()
{
  {
    init_simple_test("BFu15s_BFu9s_Sf");
    static BFu15s_BFu9s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, 1, "BFu15s_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 7, 9, hide_ull(1LL<<8), "BFu15s_BFu9s_Sf");
    check_field_offset(lv, v3, 3, "BFu15s_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_BFu9s_Sf(Test_BFu15s_BFu9s_Sf, "BFu15s_BFu9s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_C_Sf()
{
  {
    init_simple_test("BFu15s_C_Sf");
    static BFu15s_C_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_C_Sf");
    check_field_offset(lv, v2, 2, "BFu15s_C_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu15s_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_C_Sf(Test_BFu15s_C_Sf, "BFu15s_C_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_D_Sf()
{
  {
    init_simple_test("BFu15s_D_Sf");
    static BFu15s_D_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu15s_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_D_Sf");
    check_field_offset(lv, v2, 2, "BFu15s_D_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu15s_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_D_Sf(Test_BFu15s_D_Sf, "BFu15s_D_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_F_Sf()
{
  {
    init_simple_test("BFu15s_F_Sf");
    static BFu15s_F_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15s_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_F_Sf");
    check_field_offset(lv, v2, 2, "BFu15s_F_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu15s_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_F_Sf(Test_BFu15s_F_Sf, "BFu15s_F_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_I_Sf()
{
  {
    init_simple_test("BFu15s_I_Sf");
    static BFu15s_I_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15s_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_I_Sf");
    check_field_offset(lv, v2, 2, "BFu15s_I_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu15s_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_I_Sf(Test_BFu15s_I_Sf, "BFu15s_I_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Ip_Sf()
{
  {
    init_simple_test("BFu15s_Ip_Sf");
    static BFu15s_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu15s_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Ip_Sf");
    check_field_offset(lv, v2, 2, "BFu15s_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu15s_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Ip_Sf(Test_BFu15s_Ip_Sf, "BFu15s_Ip_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_L_Sf()
{
  {
    init_simple_test("BFu15s_L_Sf");
    static BFu15s_L_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu15s_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_L_Sf");
    check_field_offset(lv, v2, 2, "BFu15s_L_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu15s_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_L_Sf(Test_BFu15s_L_Sf, "BFu15s_L_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_S_Sf()
{
  {
    init_simple_test("BFu15s_S_Sf");
    static BFu15s_S_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_S_Sf");
    check_field_offset(lv, v2, 2, "BFu15s_S_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu15s_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_S_Sf(Test_BFu15s_S_Sf, "BFu15s_S_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf()
{
  {
    init_simple_test("BFu15s_Sf");
    static BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf");
    check_field_offset(lv, v2, 2, "BFu15s_Sf.v2");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf(Test_BFu15s_Sf, "BFu15s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu15i()
{
  {
    init_simple_test("BFu15s_Sf_BFu15i");
    static BFu15s_Sf_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu15i");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu15s_Sf_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu15i(Test_BFu15s_Sf_BFu15i, "BFu15s_Sf_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu15ll()
{
  {
    init_simple_test("BFu15s_Sf_BFu15ll");
    static BFu15s_Sf_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu15ll");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu15s_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu15ll(Test_BFu15s_Sf_BFu15ll, "BFu15s_Sf_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu15s()
{
  {
    init_simple_test("BFu15s_Sf_BFu15s");
    static BFu15s_Sf_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu15s");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu15s_Sf_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu15s(Test_BFu15s_Sf_BFu15s, "BFu15s_Sf_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu16i()
{
  {
    init_simple_test("BFu15s_Sf_BFu16i");
    static BFu15s_Sf_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu16i");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu15s_Sf_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu15s_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu16i(Test_BFu15s_Sf_BFu16i, "BFu15s_Sf_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu16ll()
{
  {
    init_simple_test("BFu15s_Sf_BFu16ll");
    static BFu15s_Sf_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu16ll");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu15s_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu15s_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu16ll(Test_BFu15s_Sf_BFu16ll, "BFu15s_Sf_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu16s()
{
  {
    init_simple_test("BFu15s_Sf_BFu16s");
    static BFu15s_Sf_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu16s");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu15s_Sf_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu15s_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu16s(Test_BFu15s_Sf_BFu16s, "BFu15s_Sf_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu17i()
{
  {
    init_simple_test("BFu15s_Sf_BFu17i");
    static BFu15s_Sf_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(BFu15s_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu17i");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "BFu15s_Sf_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "BFu15s_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu17i(Test_BFu15s_Sf_BFu17i, "BFu15s_Sf_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu17ll()
{
  {
    init_simple_test("BFu15s_Sf_BFu17ll");
    static BFu15s_Sf_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu15s_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu17ll");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "BFu15s_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "BFu15s_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu17ll(Test_BFu15s_Sf_BFu17ll, "BFu15s_Sf_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu1c()
{
  {
    init_simple_test("BFu15s_Sf_BFu1c");
    static BFu15s_Sf_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu1c");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu15s_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu1c(Test_BFu15s_Sf_BFu1c, "BFu15s_Sf_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu1i()
{
  {
    init_simple_test("BFu15s_Sf_BFu1i");
    static BFu15s_Sf_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu1i");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu15s_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu1i(Test_BFu15s_Sf_BFu1i, "BFu15s_Sf_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu1ll()
{
  {
    init_simple_test("BFu15s_Sf_BFu1ll");
    static BFu15s_Sf_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu1ll");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu15s_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu1ll(Test_BFu15s_Sf_BFu1ll, "BFu15s_Sf_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu1s()
{
  {
    init_simple_test("BFu15s_Sf_BFu1s");
    static BFu15s_Sf_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu1s");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu15s_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu1s(Test_BFu15s_Sf_BFu1s, "BFu15s_Sf_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu31i()
{
  {
    init_simple_test("BFu15s_Sf_BFu31i");
    static BFu15s_Sf_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(BFu15s_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu31i");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "BFu15s_Sf_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "BFu15s_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu31i(Test_BFu15s_Sf_BFu31i, "BFu15s_Sf_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu31ll()
{
  {
    init_simple_test("BFu15s_Sf_BFu31ll");
    static BFu15s_Sf_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu15s_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu31ll");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "BFu15s_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "BFu15s_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu31ll(Test_BFu15s_Sf_BFu31ll, "BFu15s_Sf_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu32i()
{
  {
    init_simple_test("BFu15s_Sf_BFu32i");
    static BFu15s_Sf_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(BFu15s_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu32i");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "BFu15s_Sf_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "BFu15s_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu32i(Test_BFu15s_Sf_BFu32i, "BFu15s_Sf_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu32ll()
{
  {
    init_simple_test("BFu15s_Sf_BFu32ll");
    static BFu15s_Sf_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu15s_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu32ll");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "BFu15s_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "BFu15s_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu32ll(Test_BFu15s_Sf_BFu32ll, "BFu15s_Sf_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu33()
{
  {
    init_simple_test("BFu15s_Sf_BFu33");
    static BFu15s_Sf_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(BFu15s_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu33");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "BFu15s_Sf_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "BFu15s_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu33(Test_BFu15s_Sf_BFu33, "BFu15s_Sf_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu7c()
{
  {
    init_simple_test("BFu15s_Sf_BFu7c");
    static BFu15s_Sf_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu7c");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu15s_Sf_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu15s_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu7c(Test_BFu15s_Sf_BFu7c, "BFu15s_Sf_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu7i()
{
  {
    init_simple_test("BFu15s_Sf_BFu7i");
    static BFu15s_Sf_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu7i");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu15s_Sf_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu15s_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu7i(Test_BFu15s_Sf_BFu7i, "BFu15s_Sf_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu7ll()
{
  {
    init_simple_test("BFu15s_Sf_BFu7ll");
    static BFu15s_Sf_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu7ll");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu15s_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu15s_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu7ll(Test_BFu15s_Sf_BFu7ll, "BFu15s_Sf_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu7s()
{
  {
    init_simple_test("BFu15s_Sf_BFu7s");
    static BFu15s_Sf_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu7s");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu15s_Sf_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu15s_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu7s(Test_BFu15s_Sf_BFu7s, "BFu15s_Sf_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu8c()
{
  {
    init_simple_test("BFu15s_Sf_BFu8c");
    static BFu15s_Sf_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu8c");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu15s_Sf_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu15s_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu8c(Test_BFu15s_Sf_BFu8c, "BFu15s_Sf_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu8i()
{
  {
    init_simple_test("BFu15s_Sf_BFu8i");
    static BFu15s_Sf_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu8i");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu15s_Sf_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu15s_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu8i(Test_BFu15s_Sf_BFu8i, "BFu15s_Sf_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu8ll()
{
  {
    init_simple_test("BFu15s_Sf_BFu8ll");
    static BFu15s_Sf_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu8ll");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu15s_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu15s_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu8ll(Test_BFu15s_Sf_BFu8ll, "BFu15s_Sf_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu8s()
{
  {
    init_simple_test("BFu15s_Sf_BFu8s");
    static BFu15s_Sf_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu8s");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu15s_Sf_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu15s_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu8s(Test_BFu15s_Sf_BFu8s, "BFu15s_Sf_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu9i()
{
  {
    init_simple_test("BFu15s_Sf_BFu9i");
    static BFu15s_Sf_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu9i");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu15s_Sf_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu15s_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu9i(Test_BFu15s_Sf_BFu9i, "BFu15s_Sf_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu9ll()
{
  {
    init_simple_test("BFu15s_Sf_BFu9ll");
    static BFu15s_Sf_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu9ll");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu15s_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu15s_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu9ll(Test_BFu15s_Sf_BFu9ll, "BFu15s_Sf_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_BFu9s()
{
  {
    init_simple_test("BFu15s_Sf_BFu9s");
    static BFu15s_Sf_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_BFu9s");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu15s_Sf_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu15s_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_BFu9s(Test_BFu15s_Sf_BFu9s, "BFu15s_Sf_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_C()
{
  {
    init_simple_test("BFu15s_Sf_C");
    static BFu15s_Sf_C lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_C");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_C.v2");
    check_field_offset(lv, v3, 3, "BFu15s_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_C(Test_BFu15s_Sf_C, "BFu15s_Sf_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_D()
{
  {
    init_simple_test("BFu15s_Sf_D");
    static BFu15s_Sf_D lv;
    check2(sizeof(lv), 11, "sizeof(BFu15s_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_D");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_D.v2");
    check_field_offset(lv, v3, 3, "BFu15s_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_D(Test_BFu15s_Sf_D, "BFu15s_Sf_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_F()
{
  {
    init_simple_test("BFu15s_Sf_F");
    static BFu15s_Sf_F lv;
    check2(sizeof(lv), 7, "sizeof(BFu15s_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_F");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_F.v2");
    check_field_offset(lv, v3, 3, "BFu15s_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_F(Test_BFu15s_Sf_F, "BFu15s_Sf_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_I()
{
  {
    init_simple_test("BFu15s_Sf_I");
    static BFu15s_Sf_I lv;
    check2(sizeof(lv), 7, "sizeof(BFu15s_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_I");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_I.v2");
    check_field_offset(lv, v3, 3, "BFu15s_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_I(Test_BFu15s_Sf_I, "BFu15s_Sf_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_Ip()
{
  {
    init_simple_test("BFu15s_Sf_Ip");
    static BFu15s_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu15s_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_Ip");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_Ip.v2");
    check_field_offset(lv, v3, 3, "BFu15s_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_Ip(Test_BFu15s_Sf_Ip, "BFu15s_Sf_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_L()
{
  {
    init_simple_test("BFu15s_Sf_L");
    static BFu15s_Sf_L lv;
    check2(sizeof(lv), 11, "sizeof(BFu15s_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_L");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_L.v2");
    check_field_offset(lv, v3, 3, "BFu15s_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_L(Test_BFu15s_Sf_L, "BFu15s_Sf_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_S()
{
  {
    init_simple_test("BFu15s_Sf_S");
    static BFu15s_Sf_S lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_S");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_S.v2");
    check_field_offset(lv, v3, 3, "BFu15s_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_S(Test_BFu15s_Sf_S, "BFu15s_Sf_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_Sf()
{
  {
    init_simple_test("BFu15s_Sf_Sf");
    static BFu15s_Sf_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_Sf");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu15s_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_Sf(Test_BFu15s_Sf_Sf, "BFu15s_Sf_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_Uc()
{
  {
    init_simple_test("BFu15s_Sf_Uc");
    static BFu15s_Sf_Uc lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_Uc");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_Uc.v2");
    check_field_offset(lv, v3, 3, "BFu15s_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_Uc(Test_BFu15s_Sf_Uc, "BFu15s_Sf_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_Ui()
{
  {
    init_simple_test("BFu15s_Sf_Ui");
    static BFu15s_Sf_Ui lv;
    check2(sizeof(lv), 7, "sizeof(BFu15s_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_Ui");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_Ui.v2");
    check_field_offset(lv, v3, 3, "BFu15s_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_Ui(Test_BFu15s_Sf_Ui, "BFu15s_Sf_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_Ul()
{
  {
    init_simple_test("BFu15s_Sf_Ul");
    static BFu15s_Sf_Ul lv;
    check2(sizeof(lv), 11, "sizeof(BFu15s_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_Ul");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_Ul.v2");
    check_field_offset(lv, v3, 3, "BFu15s_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_Ul(Test_BFu15s_Sf_Ul, "BFu15s_Sf_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_Us()
{
  {
    init_simple_test("BFu15s_Sf_Us");
    static BFu15s_Sf_Us lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_Us");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_Us.v2");
    check_field_offset(lv, v3, 3, "BFu15s_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_Us(Test_BFu15s_Sf_Us, "BFu15s_Sf_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Sf_Vp()
{
  {
    init_simple_test("BFu15s_Sf_Vp");
    static BFu15s_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu15s_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Sf_Vp");
    check_field_offset(lv, v2, 2, "BFu15s_Sf_Vp.v2");
    check_field_offset(lv, v3, 3, "BFu15s_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Sf_Vp(Test_BFu15s_Sf_Vp, "BFu15s_Sf_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Uc_Sf()
{
  {
    init_simple_test("BFu15s_Uc_Sf");
    static BFu15s_Uc_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu15s_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Uc_Sf");
    check_field_offset(lv, v2, 2, "BFu15s_Uc_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu15s_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Uc_Sf(Test_BFu15s_Uc_Sf, "BFu15s_Uc_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Ui_Sf()
{
  {
    init_simple_test("BFu15s_Ui_Sf");
    static BFu15s_Ui_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu15s_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Ui_Sf");
    check_field_offset(lv, v2, 2, "BFu15s_Ui_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu15s_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Ui_Sf(Test_BFu15s_Ui_Sf, "BFu15s_Ui_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Ul_Sf()
{
  {
    init_simple_test("BFu15s_Ul_Sf");
    static BFu15s_Ul_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu15s_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Ul_Sf");
    check_field_offset(lv, v2, 2, "BFu15s_Ul_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu15s_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Ul_Sf(Test_BFu15s_Ul_Sf, "BFu15s_Ul_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Us_Sf()
{
  {
    init_simple_test("BFu15s_Us_Sf");
    static BFu15s_Us_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu15s_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Us_Sf");
    check_field_offset(lv, v2, 2, "BFu15s_Us_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu15s_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Us_Sf(Test_BFu15s_Us_Sf, "BFu15s_Us_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu15s_Vp_Sf()
{
  {
    init_simple_test("BFu15s_Vp_Sf");
    static BFu15s_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu15s_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu15s_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 15, 1, "BFu15s_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 15, hide_ull(1LL<<14), "BFu15s_Vp_Sf");
    check_field_offset(lv, v2, 2, "BFu15s_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu15s_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu15s_Vp_Sf(Test_BFu15s_Vp_Sf, "BFu15s_Vp_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu15i_Sf()
{
  {
    init_simple_test("BFu16i_BFu15i_Sf");
    static BFu16i_BFu15i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "BFu16i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "BFu16i_BFu15i_Sf");
    check_field_offset(lv, v3, 4, "BFu16i_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu15i_Sf(Test_BFu16i_BFu15i_Sf, "BFu16i_BFu15i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu15ll_Sf()
{
  {
    init_simple_test("BFu16i_BFu15ll_Sf");
    static BFu16i_BFu15ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "BFu16i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "BFu16i_BFu15ll_Sf");
    check_field_offset(lv, v3, 4, "BFu16i_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu15ll_Sf(Test_BFu16i_BFu15ll_Sf, "BFu16i_BFu15ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu15s_Sf()
{
  {
    init_simple_test("BFu16i_BFu15s_Sf");
    static BFu16i_BFu15s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "BFu16i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "BFu16i_BFu15s_Sf");
    check_field_offset(lv, v3, 4, "BFu16i_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu15s_Sf(Test_BFu16i_BFu15s_Sf, "BFu16i_BFu15s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu16i_Sf()
{
  {
    init_simple_test("BFu16i_BFu16i_Sf");
    static BFu16i_BFu16i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "BFu16i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu16i_Sf");
    check_field_offset(lv, v3, 4, "BFu16i_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu16i_Sf(Test_BFu16i_BFu16i_Sf, "BFu16i_BFu16i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu16ll_Sf()
{
  {
    init_simple_test("BFu16i_BFu16ll_Sf");
    static BFu16i_BFu16ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "BFu16i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu16ll_Sf");
    check_field_offset(lv, v3, 4, "BFu16i_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu16ll_Sf(Test_BFu16i_BFu16ll_Sf, "BFu16i_BFu16ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu16s_Sf()
{
  {
    init_simple_test("BFu16i_BFu16s_Sf");
    static BFu16i_BFu16s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "BFu16i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu16s_Sf");
    check_field_offset(lv, v3, 4, "BFu16i_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu16s_Sf(Test_BFu16i_BFu16s_Sf, "BFu16i_BFu16s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu17i_Sf()
{
  {
    init_simple_test("BFu16i_BFu17i_Sf");
    static BFu16i_BFu17i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu16i_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "BFu16i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "BFu16i_BFu17i_Sf");
    check_field_offset(lv, v3, 5, "BFu16i_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu17i_Sf(Test_BFu16i_BFu17i_Sf, "BFu16i_BFu17i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu17ll_Sf()
{
  {
    init_simple_test("BFu16i_BFu17ll_Sf");
    static BFu16i_BFu17ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu16i_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "BFu16i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "BFu16i_BFu17ll_Sf");
    check_field_offset(lv, v3, 5, "BFu16i_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu17ll_Sf(Test_BFu16i_BFu17ll_Sf, "BFu16i_BFu17ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu1c_Sf()
{
  {
    init_simple_test("BFu16i_BFu1c_Sf");
    static BFu16i_BFu1c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu1c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "BFu16i_BFu1c_Sf");
    check_field_offset(lv, v3, 3, "BFu16i_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu1c_Sf(Test_BFu16i_BFu1c_Sf, "BFu16i_BFu1c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu1i_Sf()
{
  {
    init_simple_test("BFu16i_BFu1i_Sf");
    static BFu16i_BFu1i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu1i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "BFu16i_BFu1i_Sf");
    check_field_offset(lv, v3, 3, "BFu16i_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu1i_Sf(Test_BFu16i_BFu1i_Sf, "BFu16i_BFu1i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu1ll_Sf()
{
  {
    init_simple_test("BFu16i_BFu1ll_Sf");
    static BFu16i_BFu1ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "BFu16i_BFu1ll_Sf");
    check_field_offset(lv, v3, 3, "BFu16i_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu1ll_Sf(Test_BFu16i_BFu1ll_Sf, "BFu16i_BFu1ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu1s_Sf()
{
  {
    init_simple_test("BFu16i_BFu1s_Sf");
    static BFu16i_BFu1s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu1s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "BFu16i_BFu1s_Sf");
    check_field_offset(lv, v3, 3, "BFu16i_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu1s_Sf(Test_BFu16i_BFu1s_Sf, "BFu16i_BFu1s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu31i_Sf()
{
  {
    init_simple_test("BFu16i_BFu31i_Sf");
    static BFu16i_BFu31i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16i_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "BFu16i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "BFu16i_BFu31i_Sf");
    check_field_offset(lv, v3, 6, "BFu16i_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu31i_Sf(Test_BFu16i_BFu31i_Sf, "BFu16i_BFu31i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu31ll_Sf()
{
  {
    init_simple_test("BFu16i_BFu31ll_Sf");
    static BFu16i_BFu31ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16i_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "BFu16i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "BFu16i_BFu31ll_Sf");
    check_field_offset(lv, v3, 6, "BFu16i_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu31ll_Sf(Test_BFu16i_BFu31ll_Sf, "BFu16i_BFu31ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu32i_Sf()
{
  {
    init_simple_test("BFu16i_BFu32i_Sf");
    static BFu16i_BFu32i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16i_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "BFu16i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "BFu16i_BFu32i_Sf");
    check_field_offset(lv, v3, 6, "BFu16i_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu32i_Sf(Test_BFu16i_BFu32i_Sf, "BFu16i_BFu32i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu32ll_Sf()
{
  {
    init_simple_test("BFu16i_BFu32ll_Sf");
    static BFu16i_BFu32ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16i_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "BFu16i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "BFu16i_BFu32ll_Sf");
    check_field_offset(lv, v3, 6, "BFu16i_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu32ll_Sf(Test_BFu16i_BFu32ll_Sf, "BFu16i_BFu32ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu33_Sf()
{
  {
    init_simple_test("BFu16i_BFu33_Sf");
    static BFu16i_BFu33_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu16i_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu33_Sf");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "BFu16i_BFu33_Sf");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "BFu16i_BFu33_Sf");
    check_field_offset(lv, v3, 7, "BFu16i_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu33_Sf(Test_BFu16i_BFu33_Sf, "BFu16i_BFu33_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu7c_Sf()
{
  {
    init_simple_test("BFu16i_BFu7c_Sf");
    static BFu16i_BFu7c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "BFu16i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "BFu16i_BFu7c_Sf");
    check_field_offset(lv, v3, 3, "BFu16i_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu7c_Sf(Test_BFu16i_BFu7c_Sf, "BFu16i_BFu7c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu7i_Sf()
{
  {
    init_simple_test("BFu16i_BFu7i_Sf");
    static BFu16i_BFu7i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "BFu16i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "BFu16i_BFu7i_Sf");
    check_field_offset(lv, v3, 3, "BFu16i_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu7i_Sf(Test_BFu16i_BFu7i_Sf, "BFu16i_BFu7i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu7ll_Sf()
{
  {
    init_simple_test("BFu16i_BFu7ll_Sf");
    static BFu16i_BFu7ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "BFu16i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "BFu16i_BFu7ll_Sf");
    check_field_offset(lv, v3, 3, "BFu16i_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu7ll_Sf(Test_BFu16i_BFu7ll_Sf, "BFu16i_BFu7ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu7s_Sf()
{
  {
    init_simple_test("BFu16i_BFu7s_Sf");
    static BFu16i_BFu7s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "BFu16i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "BFu16i_BFu7s_Sf");
    check_field_offset(lv, v3, 3, "BFu16i_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu7s_Sf(Test_BFu16i_BFu7s_Sf, "BFu16i_BFu7s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu8c_Sf()
{
  {
    init_simple_test("BFu16i_BFu8c_Sf");
    static BFu16i_BFu8c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "BFu16i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "BFu16i_BFu8c_Sf");
    check_field_offset(lv, v3, 3, "BFu16i_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu8c_Sf(Test_BFu16i_BFu8c_Sf, "BFu16i_BFu8c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu8i_Sf()
{
  {
    init_simple_test("BFu16i_BFu8i_Sf");
    static BFu16i_BFu8i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "BFu16i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "BFu16i_BFu8i_Sf");
    check_field_offset(lv, v3, 3, "BFu16i_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu8i_Sf(Test_BFu16i_BFu8i_Sf, "BFu16i_BFu8i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu8ll_Sf()
{
  {
    init_simple_test("BFu16i_BFu8ll_Sf");
    static BFu16i_BFu8ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "BFu16i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "BFu16i_BFu8ll_Sf");
    check_field_offset(lv, v3, 3, "BFu16i_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu8ll_Sf(Test_BFu16i_BFu8ll_Sf, "BFu16i_BFu8ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu8s_Sf()
{
  {
    init_simple_test("BFu16i_BFu8s_Sf");
    static BFu16i_BFu8s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "BFu16i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "BFu16i_BFu8s_Sf");
    check_field_offset(lv, v3, 3, "BFu16i_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu8s_Sf(Test_BFu16i_BFu8s_Sf, "BFu16i_BFu8s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu9i_Sf()
{
  {
    init_simple_test("BFu16i_BFu9i_Sf");
    static BFu16i_BFu9i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "BFu16i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "BFu16i_BFu9i_Sf");
    check_field_offset(lv, v3, 4, "BFu16i_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu9i_Sf(Test_BFu16i_BFu9i_Sf, "BFu16i_BFu9i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu9ll_Sf()
{
  {
    init_simple_test("BFu16i_BFu9ll_Sf");
    static BFu16i_BFu9ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "BFu16i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "BFu16i_BFu9ll_Sf");
    check_field_offset(lv, v3, 4, "BFu16i_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu9ll_Sf(Test_BFu16i_BFu9ll_Sf, "BFu16i_BFu9ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_BFu9s_Sf()
{
  {
    init_simple_test("BFu16i_BFu9s_Sf");
    static BFu16i_BFu9s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "BFu16i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "BFu16i_BFu9s_Sf");
    check_field_offset(lv, v3, 4, "BFu16i_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_BFu9s_Sf(Test_BFu16i_BFu9s_Sf, "BFu16i_BFu9s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_C_Sf()
{
  {
    init_simple_test("BFu16i_C_Sf");
    static BFu16i_C_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_C_Sf");
    check_field_offset(lv, v2, 2, "BFu16i_C_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu16i_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_C_Sf(Test_BFu16i_C_Sf, "BFu16i_C_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_D_Sf()
{
  {
    init_simple_test("BFu16i_D_Sf");
    static BFu16i_D_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu16i_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_D_Sf");
    check_field_offset(lv, v2, 2, "BFu16i_D_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu16i_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_D_Sf(Test_BFu16i_D_Sf, "BFu16i_D_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_F_Sf()
{
  {
    init_simple_test("BFu16i_F_Sf");
    static BFu16i_F_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16i_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_F_Sf");
    check_field_offset(lv, v2, 2, "BFu16i_F_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu16i_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_F_Sf(Test_BFu16i_F_Sf, "BFu16i_F_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_I_Sf()
{
  {
    init_simple_test("BFu16i_I_Sf");
    static BFu16i_I_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16i_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_I_Sf");
    check_field_offset(lv, v2, 2, "BFu16i_I_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu16i_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_I_Sf(Test_BFu16i_I_Sf, "BFu16i_I_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Ip_Sf()
{
  {
    init_simple_test("BFu16i_Ip_Sf");
    static BFu16i_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu16i_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Ip_Sf");
    check_field_offset(lv, v2, 2, "BFu16i_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu16i_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Ip_Sf(Test_BFu16i_Ip_Sf, "BFu16i_Ip_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_L_Sf()
{
  {
    init_simple_test("BFu16i_L_Sf");
    static BFu16i_L_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu16i_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_L_Sf");
    check_field_offset(lv, v2, 2, "BFu16i_L_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu16i_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_L_Sf(Test_BFu16i_L_Sf, "BFu16i_L_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_S_Sf()
{
  {
    init_simple_test("BFu16i_S_Sf");
    static BFu16i_S_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_S_Sf");
    check_field_offset(lv, v2, 2, "BFu16i_S_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu16i_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_S_Sf(Test_BFu16i_S_Sf, "BFu16i_S_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf()
{
  {
    init_simple_test("BFu16i_Sf");
    static BFu16i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf");
    check_field_offset(lv, v2, 2, "BFu16i_Sf.v2");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf(Test_BFu16i_Sf, "BFu16i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu15i()
{
  {
    init_simple_test("BFu16i_Sf_BFu15i");
    static BFu16i_Sf_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu15i");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu16i_Sf_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu16i_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu15i(Test_BFu16i_Sf_BFu15i, "BFu16i_Sf_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu15ll()
{
  {
    init_simple_test("BFu16i_Sf_BFu15ll");
    static BFu16i_Sf_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu15ll");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu16i_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu16i_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu15ll(Test_BFu16i_Sf_BFu15ll, "BFu16i_Sf_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu15s()
{
  {
    init_simple_test("BFu16i_Sf_BFu15s");
    static BFu16i_Sf_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu15s");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu16i_Sf_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu16i_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu15s(Test_BFu16i_Sf_BFu15s, "BFu16i_Sf_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu16i()
{
  {
    init_simple_test("BFu16i_Sf_BFu16i");
    static BFu16i_Sf_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu16i");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu16i_Sf_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu16i(Test_BFu16i_Sf_BFu16i, "BFu16i_Sf_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu16ll()
{
  {
    init_simple_test("BFu16i_Sf_BFu16ll");
    static BFu16i_Sf_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu16ll");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu16i_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu16ll(Test_BFu16i_Sf_BFu16ll, "BFu16i_Sf_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu16s()
{
  {
    init_simple_test("BFu16i_Sf_BFu16s");
    static BFu16i_Sf_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu16s");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu16i_Sf_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu16s(Test_BFu16i_Sf_BFu16s, "BFu16i_Sf_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu17i()
{
  {
    init_simple_test("BFu16i_Sf_BFu17i");
    static BFu16i_Sf_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(BFu16i_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu17i");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "BFu16i_Sf_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "BFu16i_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu17i(Test_BFu16i_Sf_BFu17i, "BFu16i_Sf_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu17ll()
{
  {
    init_simple_test("BFu16i_Sf_BFu17ll");
    static BFu16i_Sf_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu16i_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu17ll");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "BFu16i_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "BFu16i_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu17ll(Test_BFu16i_Sf_BFu17ll, "BFu16i_Sf_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu1c()
{
  {
    init_simple_test("BFu16i_Sf_BFu1c");
    static BFu16i_Sf_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu1c");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu16i_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu1c(Test_BFu16i_Sf_BFu1c, "BFu16i_Sf_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu1i()
{
  {
    init_simple_test("BFu16i_Sf_BFu1i");
    static BFu16i_Sf_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu1i");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu16i_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu1i(Test_BFu16i_Sf_BFu1i, "BFu16i_Sf_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu1ll()
{
  {
    init_simple_test("BFu16i_Sf_BFu1ll");
    static BFu16i_Sf_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu1ll");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu16i_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu1ll(Test_BFu16i_Sf_BFu1ll, "BFu16i_Sf_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu1s()
{
  {
    init_simple_test("BFu16i_Sf_BFu1s");
    static BFu16i_Sf_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu1s");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu16i_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu1s(Test_BFu16i_Sf_BFu1s, "BFu16i_Sf_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu31i()
{
  {
    init_simple_test("BFu16i_Sf_BFu31i");
    static BFu16i_Sf_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(BFu16i_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu31i");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "BFu16i_Sf_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "BFu16i_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu31i(Test_BFu16i_Sf_BFu31i, "BFu16i_Sf_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu31ll()
{
  {
    init_simple_test("BFu16i_Sf_BFu31ll");
    static BFu16i_Sf_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu16i_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu31ll");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "BFu16i_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "BFu16i_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu31ll(Test_BFu16i_Sf_BFu31ll, "BFu16i_Sf_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu32i()
{
  {
    init_simple_test("BFu16i_Sf_BFu32i");
    static BFu16i_Sf_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(BFu16i_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu32i");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "BFu16i_Sf_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "BFu16i_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu32i(Test_BFu16i_Sf_BFu32i, "BFu16i_Sf_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu32ll()
{
  {
    init_simple_test("BFu16i_Sf_BFu32ll");
    static BFu16i_Sf_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu16i_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu32ll");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "BFu16i_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "BFu16i_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu32ll(Test_BFu16i_Sf_BFu32ll, "BFu16i_Sf_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu33()
{
  {
    init_simple_test("BFu16i_Sf_BFu33");
    static BFu16i_Sf_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(BFu16i_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu33");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "BFu16i_Sf_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "BFu16i_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu33(Test_BFu16i_Sf_BFu33, "BFu16i_Sf_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu7c()
{
  {
    init_simple_test("BFu16i_Sf_BFu7c");
    static BFu16i_Sf_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu7c");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu16i_Sf_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu16i_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu7c(Test_BFu16i_Sf_BFu7c, "BFu16i_Sf_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu7i()
{
  {
    init_simple_test("BFu16i_Sf_BFu7i");
    static BFu16i_Sf_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu7i");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu16i_Sf_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu16i_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu7i(Test_BFu16i_Sf_BFu7i, "BFu16i_Sf_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu7ll()
{
  {
    init_simple_test("BFu16i_Sf_BFu7ll");
    static BFu16i_Sf_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu7ll");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu16i_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu16i_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu7ll(Test_BFu16i_Sf_BFu7ll, "BFu16i_Sf_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu7s()
{
  {
    init_simple_test("BFu16i_Sf_BFu7s");
    static BFu16i_Sf_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu7s");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu16i_Sf_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu16i_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu7s(Test_BFu16i_Sf_BFu7s, "BFu16i_Sf_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu8c()
{
  {
    init_simple_test("BFu16i_Sf_BFu8c");
    static BFu16i_Sf_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu8c");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu16i_Sf_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu16i_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu8c(Test_BFu16i_Sf_BFu8c, "BFu16i_Sf_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu8i()
{
  {
    init_simple_test("BFu16i_Sf_BFu8i");
    static BFu16i_Sf_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu8i");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu16i_Sf_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu16i_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu8i(Test_BFu16i_Sf_BFu8i, "BFu16i_Sf_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu8ll()
{
  {
    init_simple_test("BFu16i_Sf_BFu8ll");
    static BFu16i_Sf_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu8ll");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu16i_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu16i_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu8ll(Test_BFu16i_Sf_BFu8ll, "BFu16i_Sf_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu8s()
{
  {
    init_simple_test("BFu16i_Sf_BFu8s");
    static BFu16i_Sf_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu8s");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu16i_Sf_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu16i_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu8s(Test_BFu16i_Sf_BFu8s, "BFu16i_Sf_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu9i()
{
  {
    init_simple_test("BFu16i_Sf_BFu9i");
    static BFu16i_Sf_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu9i");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu16i_Sf_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu16i_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu9i(Test_BFu16i_Sf_BFu9i, "BFu16i_Sf_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu9ll()
{
  {
    init_simple_test("BFu16i_Sf_BFu9ll");
    static BFu16i_Sf_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu9ll");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu16i_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu16i_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu9ll(Test_BFu16i_Sf_BFu9ll, "BFu16i_Sf_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_BFu9s()
{
  {
    init_simple_test("BFu16i_Sf_BFu9s");
    static BFu16i_Sf_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_BFu9s");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu16i_Sf_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu16i_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_BFu9s(Test_BFu16i_Sf_BFu9s, "BFu16i_Sf_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_C()
{
  {
    init_simple_test("BFu16i_Sf_C");
    static BFu16i_Sf_C lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_C");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_C.v2");
    check_field_offset(lv, v3, 3, "BFu16i_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_C(Test_BFu16i_Sf_C, "BFu16i_Sf_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_D()
{
  {
    init_simple_test("BFu16i_Sf_D");
    static BFu16i_Sf_D lv;
    check2(sizeof(lv), 11, "sizeof(BFu16i_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_D");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_D.v2");
    check_field_offset(lv, v3, 3, "BFu16i_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_D(Test_BFu16i_Sf_D, "BFu16i_Sf_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_F()
{
  {
    init_simple_test("BFu16i_Sf_F");
    static BFu16i_Sf_F lv;
    check2(sizeof(lv), 7, "sizeof(BFu16i_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_F");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_F.v2");
    check_field_offset(lv, v3, 3, "BFu16i_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_F(Test_BFu16i_Sf_F, "BFu16i_Sf_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_I()
{
  {
    init_simple_test("BFu16i_Sf_I");
    static BFu16i_Sf_I lv;
    check2(sizeof(lv), 7, "sizeof(BFu16i_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_I");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_I.v2");
    check_field_offset(lv, v3, 3, "BFu16i_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_I(Test_BFu16i_Sf_I, "BFu16i_Sf_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_Ip()
{
  {
    init_simple_test("BFu16i_Sf_Ip");
    static BFu16i_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu16i_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_Ip");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_Ip.v2");
    check_field_offset(lv, v3, 3, "BFu16i_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_Ip(Test_BFu16i_Sf_Ip, "BFu16i_Sf_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_L()
{
  {
    init_simple_test("BFu16i_Sf_L");
    static BFu16i_Sf_L lv;
    check2(sizeof(lv), 11, "sizeof(BFu16i_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_L");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_L.v2");
    check_field_offset(lv, v3, 3, "BFu16i_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_L(Test_BFu16i_Sf_L, "BFu16i_Sf_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_S()
{
  {
    init_simple_test("BFu16i_Sf_S");
    static BFu16i_Sf_S lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_S");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_S.v2");
    check_field_offset(lv, v3, 3, "BFu16i_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_S(Test_BFu16i_Sf_S, "BFu16i_Sf_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_Sf()
{
  {
    init_simple_test("BFu16i_Sf_Sf");
    static BFu16i_Sf_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_Sf");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu16i_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_Sf(Test_BFu16i_Sf_Sf, "BFu16i_Sf_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_Uc()
{
  {
    init_simple_test("BFu16i_Sf_Uc");
    static BFu16i_Sf_Uc lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_Uc");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_Uc.v2");
    check_field_offset(lv, v3, 3, "BFu16i_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_Uc(Test_BFu16i_Sf_Uc, "BFu16i_Sf_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_Ui()
{
  {
    init_simple_test("BFu16i_Sf_Ui");
    static BFu16i_Sf_Ui lv;
    check2(sizeof(lv), 7, "sizeof(BFu16i_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_Ui");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_Ui.v2");
    check_field_offset(lv, v3, 3, "BFu16i_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_Ui(Test_BFu16i_Sf_Ui, "BFu16i_Sf_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_Ul()
{
  {
    init_simple_test("BFu16i_Sf_Ul");
    static BFu16i_Sf_Ul lv;
    check2(sizeof(lv), 11, "sizeof(BFu16i_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_Ul");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_Ul.v2");
    check_field_offset(lv, v3, 3, "BFu16i_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_Ul(Test_BFu16i_Sf_Ul, "BFu16i_Sf_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_Us()
{
  {
    init_simple_test("BFu16i_Sf_Us");
    static BFu16i_Sf_Us lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_Us");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_Us.v2");
    check_field_offset(lv, v3, 3, "BFu16i_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_Us(Test_BFu16i_Sf_Us, "BFu16i_Sf_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Sf_Vp()
{
  {
    init_simple_test("BFu16i_Sf_Vp");
    static BFu16i_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu16i_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Sf_Vp");
    check_field_offset(lv, v2, 2, "BFu16i_Sf_Vp.v2");
    check_field_offset(lv, v3, 3, "BFu16i_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Sf_Vp(Test_BFu16i_Sf_Vp, "BFu16i_Sf_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Uc_Sf()
{
  {
    init_simple_test("BFu16i_Uc_Sf");
    static BFu16i_Uc_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16i_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Uc_Sf");
    check_field_offset(lv, v2, 2, "BFu16i_Uc_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu16i_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Uc_Sf(Test_BFu16i_Uc_Sf, "BFu16i_Uc_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Ui_Sf()
{
  {
    init_simple_test("BFu16i_Ui_Sf");
    static BFu16i_Ui_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16i_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Ui_Sf");
    check_field_offset(lv, v2, 2, "BFu16i_Ui_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu16i_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Ui_Sf(Test_BFu16i_Ui_Sf, "BFu16i_Ui_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Ul_Sf()
{
  {
    init_simple_test("BFu16i_Ul_Sf");
    static BFu16i_Ul_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu16i_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Ul_Sf");
    check_field_offset(lv, v2, 2, "BFu16i_Ul_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu16i_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Ul_Sf(Test_BFu16i_Ul_Sf, "BFu16i_Ul_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Us_Sf()
{
  {
    init_simple_test("BFu16i_Us_Sf");
    static BFu16i_Us_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16i_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Us_Sf");
    check_field_offset(lv, v2, 2, "BFu16i_Us_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu16i_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Us_Sf(Test_BFu16i_Us_Sf, "BFu16i_Us_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16i_Vp_Sf()
{
  {
    init_simple_test("BFu16i_Vp_Sf");
    static BFu16i_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu16i_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16i_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16i_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16i_Vp_Sf");
    check_field_offset(lv, v2, 2, "BFu16i_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu16i_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16i_Vp_Sf(Test_BFu16i_Vp_Sf, "BFu16i_Vp_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu15i_Sf()
{
  {
    init_simple_test("BFu16ll_BFu15i_Sf");
    static BFu16ll_BFu15i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "BFu16ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "BFu16ll_BFu15i_Sf");
    check_field_offset(lv, v3, 4, "BFu16ll_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu15i_Sf(Test_BFu16ll_BFu15i_Sf, "BFu16ll_BFu15i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu15ll_Sf()
{
  {
    init_simple_test("BFu16ll_BFu15ll_Sf");
    static BFu16ll_BFu15ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "BFu16ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "BFu16ll_BFu15ll_Sf");
    check_field_offset(lv, v3, 4, "BFu16ll_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu15ll_Sf(Test_BFu16ll_BFu15ll_Sf, "BFu16ll_BFu15ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu15s_Sf()
{
  {
    init_simple_test("BFu16ll_BFu15s_Sf");
    static BFu16ll_BFu15s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "BFu16ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "BFu16ll_BFu15s_Sf");
    check_field_offset(lv, v3, 4, "BFu16ll_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu15s_Sf(Test_BFu16ll_BFu15s_Sf, "BFu16ll_BFu15s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu16i_Sf()
{
  {
    init_simple_test("BFu16ll_BFu16i_Sf");
    static BFu16ll_BFu16i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "BFu16ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu16i_Sf");
    check_field_offset(lv, v3, 4, "BFu16ll_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu16i_Sf(Test_BFu16ll_BFu16i_Sf, "BFu16ll_BFu16i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu16ll_Sf()
{
  {
    init_simple_test("BFu16ll_BFu16ll_Sf");
    static BFu16ll_BFu16ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "BFu16ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu16ll_Sf");
    check_field_offset(lv, v3, 4, "BFu16ll_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu16ll_Sf(Test_BFu16ll_BFu16ll_Sf, "BFu16ll_BFu16ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu16s_Sf()
{
  {
    init_simple_test("BFu16ll_BFu16s_Sf");
    static BFu16ll_BFu16s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "BFu16ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu16s_Sf");
    check_field_offset(lv, v3, 4, "BFu16ll_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu16s_Sf(Test_BFu16ll_BFu16s_Sf, "BFu16ll_BFu16s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu17i_Sf()
{
  {
    init_simple_test("BFu16ll_BFu17i_Sf");
    static BFu16ll_BFu17i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu16ll_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "BFu16ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "BFu16ll_BFu17i_Sf");
    check_field_offset(lv, v3, 5, "BFu16ll_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu17i_Sf(Test_BFu16ll_BFu17i_Sf, "BFu16ll_BFu17i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu17ll_Sf()
{
  {
    init_simple_test("BFu16ll_BFu17ll_Sf");
    static BFu16ll_BFu17ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu16ll_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "BFu16ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "BFu16ll_BFu17ll_Sf");
    check_field_offset(lv, v3, 5, "BFu16ll_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu17ll_Sf(Test_BFu16ll_BFu17ll_Sf, "BFu16ll_BFu17ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu1c_Sf()
{
  {
    init_simple_test("BFu16ll_BFu1c_Sf");
    static BFu16ll_BFu1c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu1c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "BFu16ll_BFu1c_Sf");
    check_field_offset(lv, v3, 3, "BFu16ll_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu1c_Sf(Test_BFu16ll_BFu1c_Sf, "BFu16ll_BFu1c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu1i_Sf()
{
  {
    init_simple_test("BFu16ll_BFu1i_Sf");
    static BFu16ll_BFu1i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu1i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "BFu16ll_BFu1i_Sf");
    check_field_offset(lv, v3, 3, "BFu16ll_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu1i_Sf(Test_BFu16ll_BFu1i_Sf, "BFu16ll_BFu1i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu1ll_Sf()
{
  {
    init_simple_test("BFu16ll_BFu1ll_Sf");
    static BFu16ll_BFu1ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "BFu16ll_BFu1ll_Sf");
    check_field_offset(lv, v3, 3, "BFu16ll_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu1ll_Sf(Test_BFu16ll_BFu1ll_Sf, "BFu16ll_BFu1ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu1s_Sf()
{
  {
    init_simple_test("BFu16ll_BFu1s_Sf");
    static BFu16ll_BFu1s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu1s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "BFu16ll_BFu1s_Sf");
    check_field_offset(lv, v3, 3, "BFu16ll_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu1s_Sf(Test_BFu16ll_BFu1s_Sf, "BFu16ll_BFu1s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu31i_Sf()
{
  {
    init_simple_test("BFu16ll_BFu31i_Sf");
    static BFu16ll_BFu31i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16ll_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "BFu16ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "BFu16ll_BFu31i_Sf");
    check_field_offset(lv, v3, 6, "BFu16ll_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu31i_Sf(Test_BFu16ll_BFu31i_Sf, "BFu16ll_BFu31i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu31ll_Sf()
{
  {
    init_simple_test("BFu16ll_BFu31ll_Sf");
    static BFu16ll_BFu31ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16ll_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "BFu16ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "BFu16ll_BFu31ll_Sf");
    check_field_offset(lv, v3, 6, "BFu16ll_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu31ll_Sf(Test_BFu16ll_BFu31ll_Sf, "BFu16ll_BFu31ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu32i_Sf()
{
  {
    init_simple_test("BFu16ll_BFu32i_Sf");
    static BFu16ll_BFu32i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16ll_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "BFu16ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "BFu16ll_BFu32i_Sf");
    check_field_offset(lv, v3, 6, "BFu16ll_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu32i_Sf(Test_BFu16ll_BFu32i_Sf, "BFu16ll_BFu32i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu32ll_Sf()
{
  {
    init_simple_test("BFu16ll_BFu32ll_Sf");
    static BFu16ll_BFu32ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16ll_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "BFu16ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "BFu16ll_BFu32ll_Sf");
    check_field_offset(lv, v3, 6, "BFu16ll_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu32ll_Sf(Test_BFu16ll_BFu32ll_Sf, "BFu16ll_BFu32ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu33_Sf()
{
  {
    init_simple_test("BFu16ll_BFu33_Sf");
    static BFu16ll_BFu33_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu16ll_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "BFu16ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "BFu16ll_BFu33_Sf");
    check_field_offset(lv, v3, 7, "BFu16ll_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu33_Sf(Test_BFu16ll_BFu33_Sf, "BFu16ll_BFu33_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu7c_Sf()
{
  {
    init_simple_test("BFu16ll_BFu7c_Sf");
    static BFu16ll_BFu7c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "BFu16ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "BFu16ll_BFu7c_Sf");
    check_field_offset(lv, v3, 3, "BFu16ll_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu7c_Sf(Test_BFu16ll_BFu7c_Sf, "BFu16ll_BFu7c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu7i_Sf()
{
  {
    init_simple_test("BFu16ll_BFu7i_Sf");
    static BFu16ll_BFu7i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "BFu16ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "BFu16ll_BFu7i_Sf");
    check_field_offset(lv, v3, 3, "BFu16ll_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu7i_Sf(Test_BFu16ll_BFu7i_Sf, "BFu16ll_BFu7i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu7ll_Sf()
{
  {
    init_simple_test("BFu16ll_BFu7ll_Sf");
    static BFu16ll_BFu7ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "BFu16ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "BFu16ll_BFu7ll_Sf");
    check_field_offset(lv, v3, 3, "BFu16ll_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu7ll_Sf(Test_BFu16ll_BFu7ll_Sf, "BFu16ll_BFu7ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu7s_Sf()
{
  {
    init_simple_test("BFu16ll_BFu7s_Sf");
    static BFu16ll_BFu7s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "BFu16ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "BFu16ll_BFu7s_Sf");
    check_field_offset(lv, v3, 3, "BFu16ll_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu7s_Sf(Test_BFu16ll_BFu7s_Sf, "BFu16ll_BFu7s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu8c_Sf()
{
  {
    init_simple_test("BFu16ll_BFu8c_Sf");
    static BFu16ll_BFu8c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "BFu16ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "BFu16ll_BFu8c_Sf");
    check_field_offset(lv, v3, 3, "BFu16ll_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu8c_Sf(Test_BFu16ll_BFu8c_Sf, "BFu16ll_BFu8c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu8i_Sf()
{
  {
    init_simple_test("BFu16ll_BFu8i_Sf");
    static BFu16ll_BFu8i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "BFu16ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "BFu16ll_BFu8i_Sf");
    check_field_offset(lv, v3, 3, "BFu16ll_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu8i_Sf(Test_BFu16ll_BFu8i_Sf, "BFu16ll_BFu8i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu8ll_Sf()
{
  {
    init_simple_test("BFu16ll_BFu8ll_Sf");
    static BFu16ll_BFu8ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "BFu16ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "BFu16ll_BFu8ll_Sf");
    check_field_offset(lv, v3, 3, "BFu16ll_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu8ll_Sf(Test_BFu16ll_BFu8ll_Sf, "BFu16ll_BFu8ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu8s_Sf()
{
  {
    init_simple_test("BFu16ll_BFu8s_Sf");
    static BFu16ll_BFu8s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "BFu16ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "BFu16ll_BFu8s_Sf");
    check_field_offset(lv, v3, 3, "BFu16ll_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu8s_Sf(Test_BFu16ll_BFu8s_Sf, "BFu16ll_BFu8s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu9i_Sf()
{
  {
    init_simple_test("BFu16ll_BFu9i_Sf");
    static BFu16ll_BFu9i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "BFu16ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "BFu16ll_BFu9i_Sf");
    check_field_offset(lv, v3, 4, "BFu16ll_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu9i_Sf(Test_BFu16ll_BFu9i_Sf, "BFu16ll_BFu9i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu9ll_Sf()
{
  {
    init_simple_test("BFu16ll_BFu9ll_Sf");
    static BFu16ll_BFu9ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "BFu16ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "BFu16ll_BFu9ll_Sf");
    check_field_offset(lv, v3, 4, "BFu16ll_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu9ll_Sf(Test_BFu16ll_BFu9ll_Sf, "BFu16ll_BFu9ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_BFu9s_Sf()
{
  {
    init_simple_test("BFu16ll_BFu9s_Sf");
    static BFu16ll_BFu9s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "BFu16ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "BFu16ll_BFu9s_Sf");
    check_field_offset(lv, v3, 4, "BFu16ll_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_BFu9s_Sf(Test_BFu16ll_BFu9s_Sf, "BFu16ll_BFu9s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_C_Sf()
{
  {
    init_simple_test("BFu16ll_C_Sf");
    static BFu16ll_C_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_C_Sf");
    check_field_offset(lv, v2, 2, "BFu16ll_C_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu16ll_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_C_Sf(Test_BFu16ll_C_Sf, "BFu16ll_C_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_D_Sf()
{
  {
    init_simple_test("BFu16ll_D_Sf");
    static BFu16ll_D_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu16ll_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_D_Sf");
    check_field_offset(lv, v2, 2, "BFu16ll_D_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu16ll_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_D_Sf(Test_BFu16ll_D_Sf, "BFu16ll_D_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_F_Sf()
{
  {
    init_simple_test("BFu16ll_F_Sf");
    static BFu16ll_F_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16ll_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_F_Sf");
    check_field_offset(lv, v2, 2, "BFu16ll_F_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu16ll_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_F_Sf(Test_BFu16ll_F_Sf, "BFu16ll_F_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_I_Sf()
{
  {
    init_simple_test("BFu16ll_I_Sf");
    static BFu16ll_I_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16ll_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_I_Sf");
    check_field_offset(lv, v2, 2, "BFu16ll_I_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu16ll_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_I_Sf(Test_BFu16ll_I_Sf, "BFu16ll_I_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Ip_Sf()
{
  {
    init_simple_test("BFu16ll_Ip_Sf");
    static BFu16ll_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu16ll_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Ip_Sf");
    check_field_offset(lv, v2, 2, "BFu16ll_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu16ll_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Ip_Sf(Test_BFu16ll_Ip_Sf, "BFu16ll_Ip_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_L_Sf()
{
  {
    init_simple_test("BFu16ll_L_Sf");
    static BFu16ll_L_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu16ll_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_L_Sf");
    check_field_offset(lv, v2, 2, "BFu16ll_L_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu16ll_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_L_Sf(Test_BFu16ll_L_Sf, "BFu16ll_L_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_S_Sf()
{
  {
    init_simple_test("BFu16ll_S_Sf");
    static BFu16ll_S_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_S_Sf");
    check_field_offset(lv, v2, 2, "BFu16ll_S_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu16ll_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_S_Sf(Test_BFu16ll_S_Sf, "BFu16ll_S_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf()
{
  {
    init_simple_test("BFu16ll_Sf");
    static BFu16ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf.v2");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf(Test_BFu16ll_Sf, "BFu16ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu15i()
{
  {
    init_simple_test("BFu16ll_Sf_BFu15i");
    static BFu16ll_Sf_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu15i");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu16ll_Sf_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu16ll_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu15i(Test_BFu16ll_Sf_BFu15i, "BFu16ll_Sf_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu15ll()
{
  {
    init_simple_test("BFu16ll_Sf_BFu15ll");
    static BFu16ll_Sf_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu15ll");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu16ll_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu16ll_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu15ll(Test_BFu16ll_Sf_BFu15ll, "BFu16ll_Sf_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu15s()
{
  {
    init_simple_test("BFu16ll_Sf_BFu15s");
    static BFu16ll_Sf_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu15s");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu16ll_Sf_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu16ll_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu15s(Test_BFu16ll_Sf_BFu15s, "BFu16ll_Sf_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu16i()
{
  {
    init_simple_test("BFu16ll_Sf_BFu16i");
    static BFu16ll_Sf_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu16i");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu16ll_Sf_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu16i(Test_BFu16ll_Sf_BFu16i, "BFu16ll_Sf_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu16ll()
{
  {
    init_simple_test("BFu16ll_Sf_BFu16ll");
    static BFu16ll_Sf_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu16ll");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu16ll_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu16ll(Test_BFu16ll_Sf_BFu16ll, "BFu16ll_Sf_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu16s()
{
  {
    init_simple_test("BFu16ll_Sf_BFu16s");
    static BFu16ll_Sf_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu16s");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu16ll_Sf_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu16s(Test_BFu16ll_Sf_BFu16s, "BFu16ll_Sf_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu17i()
{
  {
    init_simple_test("BFu16ll_Sf_BFu17i");
    static BFu16ll_Sf_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(BFu16ll_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu17i");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "BFu16ll_Sf_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "BFu16ll_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu17i(Test_BFu16ll_Sf_BFu17i, "BFu16ll_Sf_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu17ll()
{
  {
    init_simple_test("BFu16ll_Sf_BFu17ll");
    static BFu16ll_Sf_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu16ll_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu17ll");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "BFu16ll_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "BFu16ll_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu17ll(Test_BFu16ll_Sf_BFu17ll, "BFu16ll_Sf_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu1c()
{
  {
    init_simple_test("BFu16ll_Sf_BFu1c");
    static BFu16ll_Sf_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu1c");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu16ll_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu1c(Test_BFu16ll_Sf_BFu1c, "BFu16ll_Sf_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu1i()
{
  {
    init_simple_test("BFu16ll_Sf_BFu1i");
    static BFu16ll_Sf_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu1i");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu16ll_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu1i(Test_BFu16ll_Sf_BFu1i, "BFu16ll_Sf_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu1ll()
{
  {
    init_simple_test("BFu16ll_Sf_BFu1ll");
    static BFu16ll_Sf_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu1ll");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu16ll_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu1ll(Test_BFu16ll_Sf_BFu1ll, "BFu16ll_Sf_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu1s()
{
  {
    init_simple_test("BFu16ll_Sf_BFu1s");
    static BFu16ll_Sf_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu1s");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu16ll_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu1s(Test_BFu16ll_Sf_BFu1s, "BFu16ll_Sf_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu31i()
{
  {
    init_simple_test("BFu16ll_Sf_BFu31i");
    static BFu16ll_Sf_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(BFu16ll_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu31i");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "BFu16ll_Sf_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "BFu16ll_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu31i(Test_BFu16ll_Sf_BFu31i, "BFu16ll_Sf_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu31ll()
{
  {
    init_simple_test("BFu16ll_Sf_BFu31ll");
    static BFu16ll_Sf_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu16ll_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu31ll");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "BFu16ll_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "BFu16ll_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu31ll(Test_BFu16ll_Sf_BFu31ll, "BFu16ll_Sf_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu32i()
{
  {
    init_simple_test("BFu16ll_Sf_BFu32i");
    static BFu16ll_Sf_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(BFu16ll_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu32i");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "BFu16ll_Sf_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "BFu16ll_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu32i(Test_BFu16ll_Sf_BFu32i, "BFu16ll_Sf_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu32ll()
{
  {
    init_simple_test("BFu16ll_Sf_BFu32ll");
    static BFu16ll_Sf_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu16ll_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu32ll");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "BFu16ll_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "BFu16ll_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu32ll(Test_BFu16ll_Sf_BFu32ll, "BFu16ll_Sf_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu33()
{
  {
    init_simple_test("BFu16ll_Sf_BFu33");
    static BFu16ll_Sf_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(BFu16ll_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu33");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "BFu16ll_Sf_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "BFu16ll_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu33(Test_BFu16ll_Sf_BFu33, "BFu16ll_Sf_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu7c()
{
  {
    init_simple_test("BFu16ll_Sf_BFu7c");
    static BFu16ll_Sf_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu7c");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu16ll_Sf_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu16ll_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu7c(Test_BFu16ll_Sf_BFu7c, "BFu16ll_Sf_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu7i()
{
  {
    init_simple_test("BFu16ll_Sf_BFu7i");
    static BFu16ll_Sf_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu7i");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu16ll_Sf_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu16ll_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu7i(Test_BFu16ll_Sf_BFu7i, "BFu16ll_Sf_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu7ll()
{
  {
    init_simple_test("BFu16ll_Sf_BFu7ll");
    static BFu16ll_Sf_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu7ll");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu16ll_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu16ll_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu7ll(Test_BFu16ll_Sf_BFu7ll, "BFu16ll_Sf_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu7s()
{
  {
    init_simple_test("BFu16ll_Sf_BFu7s");
    static BFu16ll_Sf_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu7s");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu16ll_Sf_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu16ll_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu7s(Test_BFu16ll_Sf_BFu7s, "BFu16ll_Sf_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu8c()
{
  {
    init_simple_test("BFu16ll_Sf_BFu8c");
    static BFu16ll_Sf_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu8c");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu16ll_Sf_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu16ll_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu8c(Test_BFu16ll_Sf_BFu8c, "BFu16ll_Sf_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu8i()
{
  {
    init_simple_test("BFu16ll_Sf_BFu8i");
    static BFu16ll_Sf_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu8i");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu16ll_Sf_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu16ll_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu8i(Test_BFu16ll_Sf_BFu8i, "BFu16ll_Sf_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu8ll()
{
  {
    init_simple_test("BFu16ll_Sf_BFu8ll");
    static BFu16ll_Sf_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu8ll");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu16ll_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu16ll_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu8ll(Test_BFu16ll_Sf_BFu8ll, "BFu16ll_Sf_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu8s()
{
  {
    init_simple_test("BFu16ll_Sf_BFu8s");
    static BFu16ll_Sf_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu8s");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu16ll_Sf_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu16ll_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu8s(Test_BFu16ll_Sf_BFu8s, "BFu16ll_Sf_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu9i()
{
  {
    init_simple_test("BFu16ll_Sf_BFu9i");
    static BFu16ll_Sf_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu9i");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu16ll_Sf_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu16ll_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu9i(Test_BFu16ll_Sf_BFu9i, "BFu16ll_Sf_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu9ll()
{
  {
    init_simple_test("BFu16ll_Sf_BFu9ll");
    static BFu16ll_Sf_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu9ll");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu16ll_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu16ll_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu9ll(Test_BFu16ll_Sf_BFu9ll, "BFu16ll_Sf_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_BFu9s()
{
  {
    init_simple_test("BFu16ll_Sf_BFu9s");
    static BFu16ll_Sf_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_BFu9s");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu16ll_Sf_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu16ll_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_BFu9s(Test_BFu16ll_Sf_BFu9s, "BFu16ll_Sf_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_C()
{
  {
    init_simple_test("BFu16ll_Sf_C");
    static BFu16ll_Sf_C lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_C");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_C.v2");
    check_field_offset(lv, v3, 3, "BFu16ll_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_C(Test_BFu16ll_Sf_C, "BFu16ll_Sf_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_D()
{
  {
    init_simple_test("BFu16ll_Sf_D");
    static BFu16ll_Sf_D lv;
    check2(sizeof(lv), 11, "sizeof(BFu16ll_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_D");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_D.v2");
    check_field_offset(lv, v3, 3, "BFu16ll_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_D(Test_BFu16ll_Sf_D, "BFu16ll_Sf_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_F()
{
  {
    init_simple_test("BFu16ll_Sf_F");
    static BFu16ll_Sf_F lv;
    check2(sizeof(lv), 7, "sizeof(BFu16ll_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_F");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_F.v2");
    check_field_offset(lv, v3, 3, "BFu16ll_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_F(Test_BFu16ll_Sf_F, "BFu16ll_Sf_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_I()
{
  {
    init_simple_test("BFu16ll_Sf_I");
    static BFu16ll_Sf_I lv;
    check2(sizeof(lv), 7, "sizeof(BFu16ll_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_I");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_I.v2");
    check_field_offset(lv, v3, 3, "BFu16ll_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_I(Test_BFu16ll_Sf_I, "BFu16ll_Sf_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_Ip()
{
  {
    init_simple_test("BFu16ll_Sf_Ip");
    static BFu16ll_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu16ll_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_Ip");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_Ip.v2");
    check_field_offset(lv, v3, 3, "BFu16ll_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_Ip(Test_BFu16ll_Sf_Ip, "BFu16ll_Sf_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_L()
{
  {
    init_simple_test("BFu16ll_Sf_L");
    static BFu16ll_Sf_L lv;
    check2(sizeof(lv), 11, "sizeof(BFu16ll_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_L");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_L.v2");
    check_field_offset(lv, v3, 3, "BFu16ll_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_L(Test_BFu16ll_Sf_L, "BFu16ll_Sf_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_S()
{
  {
    init_simple_test("BFu16ll_Sf_S");
    static BFu16ll_Sf_S lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_S");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_S.v2");
    check_field_offset(lv, v3, 3, "BFu16ll_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_S(Test_BFu16ll_Sf_S, "BFu16ll_Sf_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_Sf()
{
  {
    init_simple_test("BFu16ll_Sf_Sf");
    static BFu16ll_Sf_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_Sf");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu16ll_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_Sf(Test_BFu16ll_Sf_Sf, "BFu16ll_Sf_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_Uc()
{
  {
    init_simple_test("BFu16ll_Sf_Uc");
    static BFu16ll_Sf_Uc lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_Uc");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_Uc.v2");
    check_field_offset(lv, v3, 3, "BFu16ll_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_Uc(Test_BFu16ll_Sf_Uc, "BFu16ll_Sf_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_Ui()
{
  {
    init_simple_test("BFu16ll_Sf_Ui");
    static BFu16ll_Sf_Ui lv;
    check2(sizeof(lv), 7, "sizeof(BFu16ll_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_Ui");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_Ui.v2");
    check_field_offset(lv, v3, 3, "BFu16ll_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_Ui(Test_BFu16ll_Sf_Ui, "BFu16ll_Sf_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_Ul()
{
  {
    init_simple_test("BFu16ll_Sf_Ul");
    static BFu16ll_Sf_Ul lv;
    check2(sizeof(lv), 11, "sizeof(BFu16ll_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_Ul");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_Ul.v2");
    check_field_offset(lv, v3, 3, "BFu16ll_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_Ul(Test_BFu16ll_Sf_Ul, "BFu16ll_Sf_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_Us()
{
  {
    init_simple_test("BFu16ll_Sf_Us");
    static BFu16ll_Sf_Us lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_Us");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_Us.v2");
    check_field_offset(lv, v3, 3, "BFu16ll_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_Us(Test_BFu16ll_Sf_Us, "BFu16ll_Sf_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Sf_Vp()
{
  {
    init_simple_test("BFu16ll_Sf_Vp");
    static BFu16ll_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu16ll_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Sf_Vp");
    check_field_offset(lv, v2, 2, "BFu16ll_Sf_Vp.v2");
    check_field_offset(lv, v3, 3, "BFu16ll_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Sf_Vp(Test_BFu16ll_Sf_Vp, "BFu16ll_Sf_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Uc_Sf()
{
  {
    init_simple_test("BFu16ll_Uc_Sf");
    static BFu16ll_Uc_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16ll_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Uc_Sf");
    check_field_offset(lv, v2, 2, "BFu16ll_Uc_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu16ll_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Uc_Sf(Test_BFu16ll_Uc_Sf, "BFu16ll_Uc_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Ui_Sf()
{
  {
    init_simple_test("BFu16ll_Ui_Sf");
    static BFu16ll_Ui_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16ll_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Ui_Sf");
    check_field_offset(lv, v2, 2, "BFu16ll_Ui_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu16ll_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Ui_Sf(Test_BFu16ll_Ui_Sf, "BFu16ll_Ui_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Ul_Sf()
{
  {
    init_simple_test("BFu16ll_Ul_Sf");
    static BFu16ll_Ul_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu16ll_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Ul_Sf");
    check_field_offset(lv, v2, 2, "BFu16ll_Ul_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu16ll_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Ul_Sf(Test_BFu16ll_Ul_Sf, "BFu16ll_Ul_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Us_Sf()
{
  {
    init_simple_test("BFu16ll_Us_Sf");
    static BFu16ll_Us_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16ll_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Us_Sf");
    check_field_offset(lv, v2, 2, "BFu16ll_Us_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu16ll_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Us_Sf(Test_BFu16ll_Us_Sf, "BFu16ll_Us_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16ll_Vp_Sf()
{
  {
    init_simple_test("BFu16ll_Vp_Sf");
    static BFu16ll_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu16ll_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16ll_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16ll_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16ll_Vp_Sf");
    check_field_offset(lv, v2, 2, "BFu16ll_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu16ll_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16ll_Vp_Sf(Test_BFu16ll_Vp_Sf, "BFu16ll_Vp_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu15i_Sf()
{
  {
    init_simple_test("BFu16s_BFu15i_Sf");
    static BFu16s_BFu15i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu15i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "BFu16s_BFu15i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "BFu16s_BFu15i_Sf");
    check_field_offset(lv, v3, 4, "BFu16s_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu15i_Sf(Test_BFu16s_BFu15i_Sf, "BFu16s_BFu15i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu15ll_Sf()
{
  {
    init_simple_test("BFu16s_BFu15ll_Sf");
    static BFu16s_BFu15ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "BFu16s_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "BFu16s_BFu15ll_Sf");
    check_field_offset(lv, v3, 4, "BFu16s_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu15ll_Sf(Test_BFu16s_BFu15ll_Sf, "BFu16s_BFu15ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu15s_Sf()
{
  {
    init_simple_test("BFu16s_BFu15s_Sf");
    static BFu16s_BFu15s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu15s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "BFu16s_BFu15s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "BFu16s_BFu15s_Sf");
    check_field_offset(lv, v3, 4, "BFu16s_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu15s_Sf(Test_BFu16s_BFu15s_Sf, "BFu16s_BFu15s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu16i_Sf()
{
  {
    init_simple_test("BFu16s_BFu16i_Sf");
    static BFu16s_BFu16i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu16i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "BFu16s_BFu16i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu16i_Sf");
    check_field_offset(lv, v3, 4, "BFu16s_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu16i_Sf(Test_BFu16s_BFu16i_Sf, "BFu16s_BFu16i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu16ll_Sf()
{
  {
    init_simple_test("BFu16s_BFu16ll_Sf");
    static BFu16s_BFu16ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "BFu16s_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu16ll_Sf");
    check_field_offset(lv, v3, 4, "BFu16s_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu16ll_Sf(Test_BFu16s_BFu16ll_Sf, "BFu16s_BFu16ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu16s_Sf()
{
  {
    init_simple_test("BFu16s_BFu16s_Sf");
    static BFu16s_BFu16s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu16s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "BFu16s_BFu16s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu16s_Sf");
    check_field_offset(lv, v3, 4, "BFu16s_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu16s_Sf(Test_BFu16s_BFu16s_Sf, "BFu16s_BFu16s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu17i_Sf()
{
  {
    init_simple_test("BFu16s_BFu17i_Sf");
    static BFu16s_BFu17i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu16s_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu17i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "BFu16s_BFu17i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "BFu16s_BFu17i_Sf");
    check_field_offset(lv, v3, 5, "BFu16s_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu17i_Sf(Test_BFu16s_BFu17i_Sf, "BFu16s_BFu17i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu17ll_Sf()
{
  {
    init_simple_test("BFu16s_BFu17ll_Sf");
    static BFu16s_BFu17ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu16s_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "BFu16s_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "BFu16s_BFu17ll_Sf");
    check_field_offset(lv, v3, 5, "BFu16s_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu17ll_Sf(Test_BFu16s_BFu17ll_Sf, "BFu16s_BFu17ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu1c_Sf()
{
  {
    init_simple_test("BFu16s_BFu1c_Sf");
    static BFu16s_BFu1c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu1c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "BFu16s_BFu1c_Sf");
    check_field_offset(lv, v3, 3, "BFu16s_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu1c_Sf(Test_BFu16s_BFu1c_Sf, "BFu16s_BFu1c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu1i_Sf()
{
  {
    init_simple_test("BFu16s_BFu1i_Sf");
    static BFu16s_BFu1i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu1i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "BFu16s_BFu1i_Sf");
    check_field_offset(lv, v3, 3, "BFu16s_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu1i_Sf(Test_BFu16s_BFu1i_Sf, "BFu16s_BFu1i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu1ll_Sf()
{
  {
    init_simple_test("BFu16s_BFu1ll_Sf");
    static BFu16s_BFu1ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "BFu16s_BFu1ll_Sf");
    check_field_offset(lv, v3, 3, "BFu16s_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu1ll_Sf(Test_BFu16s_BFu1ll_Sf, "BFu16s_BFu1ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu1s_Sf()
{
  {
    init_simple_test("BFu16s_BFu1s_Sf");
    static BFu16s_BFu1s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu1s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "BFu16s_BFu1s_Sf");
    check_field_offset(lv, v3, 3, "BFu16s_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu1s_Sf(Test_BFu16s_BFu1s_Sf, "BFu16s_BFu1s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu31i_Sf()
{
  {
    init_simple_test("BFu16s_BFu31i_Sf");
    static BFu16s_BFu31i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16s_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu31i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "BFu16s_BFu31i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "BFu16s_BFu31i_Sf");
    check_field_offset(lv, v3, 6, "BFu16s_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu31i_Sf(Test_BFu16s_BFu31i_Sf, "BFu16s_BFu31i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu31ll_Sf()
{
  {
    init_simple_test("BFu16s_BFu31ll_Sf");
    static BFu16s_BFu31ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16s_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "BFu16s_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "BFu16s_BFu31ll_Sf");
    check_field_offset(lv, v3, 6, "BFu16s_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu31ll_Sf(Test_BFu16s_BFu31ll_Sf, "BFu16s_BFu31ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu32i_Sf()
{
  {
    init_simple_test("BFu16s_BFu32i_Sf");
    static BFu16s_BFu32i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16s_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu32i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "BFu16s_BFu32i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "BFu16s_BFu32i_Sf");
    check_field_offset(lv, v3, 6, "BFu16s_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu32i_Sf(Test_BFu16s_BFu32i_Sf, "BFu16s_BFu32i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu32ll_Sf()
{
  {
    init_simple_test("BFu16s_BFu32ll_Sf");
    static BFu16s_BFu32ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16s_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "BFu16s_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "BFu16s_BFu32ll_Sf");
    check_field_offset(lv, v3, 6, "BFu16s_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu32ll_Sf(Test_BFu16s_BFu32ll_Sf, "BFu16s_BFu32ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu33_Sf()
{
  {
    init_simple_test("BFu16s_BFu33_Sf");
    static BFu16s_BFu33_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu16s_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu33_Sf");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "BFu16s_BFu33_Sf");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "BFu16s_BFu33_Sf");
    check_field_offset(lv, v3, 7, "BFu16s_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu33_Sf(Test_BFu16s_BFu33_Sf, "BFu16s_BFu33_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu7c_Sf()
{
  {
    init_simple_test("BFu16s_BFu7c_Sf");
    static BFu16s_BFu7c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu7c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "BFu16s_BFu7c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "BFu16s_BFu7c_Sf");
    check_field_offset(lv, v3, 3, "BFu16s_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu7c_Sf(Test_BFu16s_BFu7c_Sf, "BFu16s_BFu7c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu7i_Sf()
{
  {
    init_simple_test("BFu16s_BFu7i_Sf");
    static BFu16s_BFu7i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu7i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "BFu16s_BFu7i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "BFu16s_BFu7i_Sf");
    check_field_offset(lv, v3, 3, "BFu16s_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu7i_Sf(Test_BFu16s_BFu7i_Sf, "BFu16s_BFu7i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu7ll_Sf()
{
  {
    init_simple_test("BFu16s_BFu7ll_Sf");
    static BFu16s_BFu7ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "BFu16s_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "BFu16s_BFu7ll_Sf");
    check_field_offset(lv, v3, 3, "BFu16s_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu7ll_Sf(Test_BFu16s_BFu7ll_Sf, "BFu16s_BFu7ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu7s_Sf()
{
  {
    init_simple_test("BFu16s_BFu7s_Sf");
    static BFu16s_BFu7s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu7s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "BFu16s_BFu7s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "BFu16s_BFu7s_Sf");
    check_field_offset(lv, v3, 3, "BFu16s_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu7s_Sf(Test_BFu16s_BFu7s_Sf, "BFu16s_BFu7s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu8c_Sf()
{
  {
    init_simple_test("BFu16s_BFu8c_Sf");
    static BFu16s_BFu8c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu8c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "BFu16s_BFu8c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "BFu16s_BFu8c_Sf");
    check_field_offset(lv, v3, 3, "BFu16s_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu8c_Sf(Test_BFu16s_BFu8c_Sf, "BFu16s_BFu8c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu8i_Sf()
{
  {
    init_simple_test("BFu16s_BFu8i_Sf");
    static BFu16s_BFu8i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu8i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "BFu16s_BFu8i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "BFu16s_BFu8i_Sf");
    check_field_offset(lv, v3, 3, "BFu16s_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu8i_Sf(Test_BFu16s_BFu8i_Sf, "BFu16s_BFu8i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu8ll_Sf()
{
  {
    init_simple_test("BFu16s_BFu8ll_Sf");
    static BFu16s_BFu8ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "BFu16s_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "BFu16s_BFu8ll_Sf");
    check_field_offset(lv, v3, 3, "BFu16s_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu8ll_Sf(Test_BFu16s_BFu8ll_Sf, "BFu16s_BFu8ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu8s_Sf()
{
  {
    init_simple_test("BFu16s_BFu8s_Sf");
    static BFu16s_BFu8s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu8s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "BFu16s_BFu8s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "BFu16s_BFu8s_Sf");
    check_field_offset(lv, v3, 3, "BFu16s_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu8s_Sf(Test_BFu16s_BFu8s_Sf, "BFu16s_BFu8s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu9i_Sf()
{
  {
    init_simple_test("BFu16s_BFu9i_Sf");
    static BFu16s_BFu9i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu9i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "BFu16s_BFu9i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "BFu16s_BFu9i_Sf");
    check_field_offset(lv, v3, 4, "BFu16s_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu9i_Sf(Test_BFu16s_BFu9i_Sf, "BFu16s_BFu9i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu9ll_Sf()
{
  {
    init_simple_test("BFu16s_BFu9ll_Sf");
    static BFu16s_BFu9ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "BFu16s_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "BFu16s_BFu9ll_Sf");
    check_field_offset(lv, v3, 4, "BFu16s_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu9ll_Sf(Test_BFu16s_BFu9ll_Sf, "BFu16s_BFu9ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_BFu9s_Sf()
{
  {
    init_simple_test("BFu16s_BFu9s_Sf");
    static BFu16s_BFu9s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_BFu9s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "BFu16s_BFu9s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "BFu16s_BFu9s_Sf");
    check_field_offset(lv, v3, 4, "BFu16s_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_BFu9s_Sf(Test_BFu16s_BFu9s_Sf, "BFu16s_BFu9s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_C_Sf()
{
  {
    init_simple_test("BFu16s_C_Sf");
    static BFu16s_C_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_C_Sf");
    check_field_offset(lv, v2, 2, "BFu16s_C_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu16s_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_C_Sf(Test_BFu16s_C_Sf, "BFu16s_C_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_D_Sf()
{
  {
    init_simple_test("BFu16s_D_Sf");
    static BFu16s_D_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu16s_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_D_Sf");
    check_field_offset(lv, v2, 2, "BFu16s_D_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu16s_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_D_Sf(Test_BFu16s_D_Sf, "BFu16s_D_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_F_Sf()
{
  {
    init_simple_test("BFu16s_F_Sf");
    static BFu16s_F_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16s_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_F_Sf");
    check_field_offset(lv, v2, 2, "BFu16s_F_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu16s_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_F_Sf(Test_BFu16s_F_Sf, "BFu16s_F_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_I_Sf()
{
  {
    init_simple_test("BFu16s_I_Sf");
    static BFu16s_I_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16s_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_I_Sf");
    check_field_offset(lv, v2, 2, "BFu16s_I_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu16s_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_I_Sf(Test_BFu16s_I_Sf, "BFu16s_I_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Ip_Sf()
{
  {
    init_simple_test("BFu16s_Ip_Sf");
    static BFu16s_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu16s_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Ip_Sf");
    check_field_offset(lv, v2, 2, "BFu16s_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu16s_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Ip_Sf(Test_BFu16s_Ip_Sf, "BFu16s_Ip_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_L_Sf()
{
  {
    init_simple_test("BFu16s_L_Sf");
    static BFu16s_L_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu16s_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_L_Sf");
    check_field_offset(lv, v2, 2, "BFu16s_L_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu16s_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_L_Sf(Test_BFu16s_L_Sf, "BFu16s_L_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_S_Sf()
{
  {
    init_simple_test("BFu16s_S_Sf");
    static BFu16s_S_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_S_Sf");
    check_field_offset(lv, v2, 2, "BFu16s_S_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu16s_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_S_Sf(Test_BFu16s_S_Sf, "BFu16s_S_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf()
{
  {
    init_simple_test("BFu16s_Sf");
    static BFu16s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf");
    check_field_offset(lv, v2, 2, "BFu16s_Sf.v2");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf(Test_BFu16s_Sf, "BFu16s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu15i()
{
  {
    init_simple_test("BFu16s_Sf_BFu15i");
    static BFu16s_Sf_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu15i");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu16s_Sf_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu16s_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu15i(Test_BFu16s_Sf_BFu15i, "BFu16s_Sf_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu15ll()
{
  {
    init_simple_test("BFu16s_Sf_BFu15ll");
    static BFu16s_Sf_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu15ll");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu16s_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu16s_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu15ll(Test_BFu16s_Sf_BFu15ll, "BFu16s_Sf_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu15s()
{
  {
    init_simple_test("BFu16s_Sf_BFu15s");
    static BFu16s_Sf_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu15s");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "BFu16s_Sf_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "BFu16s_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu15s(Test_BFu16s_Sf_BFu15s, "BFu16s_Sf_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu16i()
{
  {
    init_simple_test("BFu16s_Sf_BFu16i");
    static BFu16s_Sf_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu16i");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu16s_Sf_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu16i(Test_BFu16s_Sf_BFu16i, "BFu16s_Sf_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu16ll()
{
  {
    init_simple_test("BFu16s_Sf_BFu16ll");
    static BFu16s_Sf_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu16ll");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu16s_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu16ll(Test_BFu16s_Sf_BFu16ll, "BFu16s_Sf_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu16s()
{
  {
    init_simple_test("BFu16s_Sf_BFu16s");
    static BFu16s_Sf_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu16s");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "BFu16s_Sf_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu16s(Test_BFu16s_Sf_BFu16s, "BFu16s_Sf_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu17i()
{
  {
    init_simple_test("BFu16s_Sf_BFu17i");
    static BFu16s_Sf_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(BFu16s_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu17i");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "BFu16s_Sf_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "BFu16s_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu17i(Test_BFu16s_Sf_BFu17i, "BFu16s_Sf_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu17ll()
{
  {
    init_simple_test("BFu16s_Sf_BFu17ll");
    static BFu16s_Sf_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu16s_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu17ll");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "BFu16s_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "BFu16s_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu17ll(Test_BFu16s_Sf_BFu17ll, "BFu16s_Sf_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu1c()
{
  {
    init_simple_test("BFu16s_Sf_BFu1c");
    static BFu16s_Sf_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu1c");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu16s_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu1c(Test_BFu16s_Sf_BFu1c, "BFu16s_Sf_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu1i()
{
  {
    init_simple_test("BFu16s_Sf_BFu1i");
    static BFu16s_Sf_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu1i");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu16s_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu1i(Test_BFu16s_Sf_BFu1i, "BFu16s_Sf_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu1ll()
{
  {
    init_simple_test("BFu16s_Sf_BFu1ll");
    static BFu16s_Sf_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu1ll");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu16s_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu1ll(Test_BFu16s_Sf_BFu1ll, "BFu16s_Sf_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu1s()
{
  {
    init_simple_test("BFu16s_Sf_BFu1s");
    static BFu16s_Sf_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu1s");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "BFu16s_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu1s(Test_BFu16s_Sf_BFu1s, "BFu16s_Sf_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu31i()
{
  {
    init_simple_test("BFu16s_Sf_BFu31i");
    static BFu16s_Sf_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(BFu16s_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu31i");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "BFu16s_Sf_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "BFu16s_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu31i(Test_BFu16s_Sf_BFu31i, "BFu16s_Sf_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu31ll()
{
  {
    init_simple_test("BFu16s_Sf_BFu31ll");
    static BFu16s_Sf_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu16s_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu31ll");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "BFu16s_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "BFu16s_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu31ll(Test_BFu16s_Sf_BFu31ll, "BFu16s_Sf_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu32i()
{
  {
    init_simple_test("BFu16s_Sf_BFu32i");
    static BFu16s_Sf_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(BFu16s_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu32i");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "BFu16s_Sf_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "BFu16s_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu32i(Test_BFu16s_Sf_BFu32i, "BFu16s_Sf_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu32ll()
{
  {
    init_simple_test("BFu16s_Sf_BFu32ll");
    static BFu16s_Sf_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu16s_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu32ll");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "BFu16s_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "BFu16s_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu32ll(Test_BFu16s_Sf_BFu32ll, "BFu16s_Sf_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu33()
{
  {
    init_simple_test("BFu16s_Sf_BFu33");
    static BFu16s_Sf_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(BFu16s_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu33");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "BFu16s_Sf_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "BFu16s_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu33(Test_BFu16s_Sf_BFu33, "BFu16s_Sf_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu7c()
{
  {
    init_simple_test("BFu16s_Sf_BFu7c");
    static BFu16s_Sf_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu7c");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu16s_Sf_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu16s_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu7c(Test_BFu16s_Sf_BFu7c, "BFu16s_Sf_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu7i()
{
  {
    init_simple_test("BFu16s_Sf_BFu7i");
    static BFu16s_Sf_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu7i");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu16s_Sf_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu16s_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu7i(Test_BFu16s_Sf_BFu7i, "BFu16s_Sf_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu7ll()
{
  {
    init_simple_test("BFu16s_Sf_BFu7ll");
    static BFu16s_Sf_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu7ll");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu16s_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu16s_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu7ll(Test_BFu16s_Sf_BFu7ll, "BFu16s_Sf_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu7s()
{
  {
    init_simple_test("BFu16s_Sf_BFu7s");
    static BFu16s_Sf_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu7s");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "BFu16s_Sf_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "BFu16s_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu7s(Test_BFu16s_Sf_BFu7s, "BFu16s_Sf_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu8c()
{
  {
    init_simple_test("BFu16s_Sf_BFu8c");
    static BFu16s_Sf_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu8c");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu16s_Sf_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu16s_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu8c(Test_BFu16s_Sf_BFu8c, "BFu16s_Sf_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu8i()
{
  {
    init_simple_test("BFu16s_Sf_BFu8i");
    static BFu16s_Sf_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu8i");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu16s_Sf_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu16s_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu8i(Test_BFu16s_Sf_BFu8i, "BFu16s_Sf_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu8ll()
{
  {
    init_simple_test("BFu16s_Sf_BFu8ll");
    static BFu16s_Sf_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu8ll");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu16s_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu16s_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu8ll(Test_BFu16s_Sf_BFu8ll, "BFu16s_Sf_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu8s()
{
  {
    init_simple_test("BFu16s_Sf_BFu8s");
    static BFu16s_Sf_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu8s");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "BFu16s_Sf_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "BFu16s_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu8s(Test_BFu16s_Sf_BFu8s, "BFu16s_Sf_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu9i()
{
  {
    init_simple_test("BFu16s_Sf_BFu9i");
    static BFu16s_Sf_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu9i");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu16s_Sf_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu16s_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu9i(Test_BFu16s_Sf_BFu9i, "BFu16s_Sf_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu9ll()
{
  {
    init_simple_test("BFu16s_Sf_BFu9ll");
    static BFu16s_Sf_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu9ll");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu16s_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu16s_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu9ll(Test_BFu16s_Sf_BFu9ll, "BFu16s_Sf_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_BFu9s()
{
  {
    init_simple_test("BFu16s_Sf_BFu9s");
    static BFu16s_Sf_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_BFu9s");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "BFu16s_Sf_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "BFu16s_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_BFu9s(Test_BFu16s_Sf_BFu9s, "BFu16s_Sf_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_C()
{
  {
    init_simple_test("BFu16s_Sf_C");
    static BFu16s_Sf_C lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_C");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_C.v2");
    check_field_offset(lv, v3, 3, "BFu16s_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_C(Test_BFu16s_Sf_C, "BFu16s_Sf_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_D()
{
  {
    init_simple_test("BFu16s_Sf_D");
    static BFu16s_Sf_D lv;
    check2(sizeof(lv), 11, "sizeof(BFu16s_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_D");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_D.v2");
    check_field_offset(lv, v3, 3, "BFu16s_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_D(Test_BFu16s_Sf_D, "BFu16s_Sf_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_F()
{
  {
    init_simple_test("BFu16s_Sf_F");
    static BFu16s_Sf_F lv;
    check2(sizeof(lv), 7, "sizeof(BFu16s_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_F");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_F.v2");
    check_field_offset(lv, v3, 3, "BFu16s_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_F(Test_BFu16s_Sf_F, "BFu16s_Sf_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_I()
{
  {
    init_simple_test("BFu16s_Sf_I");
    static BFu16s_Sf_I lv;
    check2(sizeof(lv), 7, "sizeof(BFu16s_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_I");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_I.v2");
    check_field_offset(lv, v3, 3, "BFu16s_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_I(Test_BFu16s_Sf_I, "BFu16s_Sf_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_Ip()
{
  {
    init_simple_test("BFu16s_Sf_Ip");
    static BFu16s_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu16s_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_Ip");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_Ip.v2");
    check_field_offset(lv, v3, 3, "BFu16s_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_Ip(Test_BFu16s_Sf_Ip, "BFu16s_Sf_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_L()
{
  {
    init_simple_test("BFu16s_Sf_L");
    static BFu16s_Sf_L lv;
    check2(sizeof(lv), 11, "sizeof(BFu16s_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_L");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_L.v2");
    check_field_offset(lv, v3, 3, "BFu16s_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_L(Test_BFu16s_Sf_L, "BFu16s_Sf_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_S()
{
  {
    init_simple_test("BFu16s_Sf_S");
    static BFu16s_Sf_S lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_S");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_S.v2");
    check_field_offset(lv, v3, 3, "BFu16s_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_S(Test_BFu16s_Sf_S, "BFu16s_Sf_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_Sf()
{
  {
    init_simple_test("BFu16s_Sf_Sf");
    static BFu16s_Sf_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_Sf");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu16s_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_Sf(Test_BFu16s_Sf_Sf, "BFu16s_Sf_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_Uc()
{
  {
    init_simple_test("BFu16s_Sf_Uc");
    static BFu16s_Sf_Uc lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_Uc");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_Uc.v2");
    check_field_offset(lv, v3, 3, "BFu16s_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_Uc(Test_BFu16s_Sf_Uc, "BFu16s_Sf_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_Ui()
{
  {
    init_simple_test("BFu16s_Sf_Ui");
    static BFu16s_Sf_Ui lv;
    check2(sizeof(lv), 7, "sizeof(BFu16s_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_Ui");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_Ui.v2");
    check_field_offset(lv, v3, 3, "BFu16s_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_Ui(Test_BFu16s_Sf_Ui, "BFu16s_Sf_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_Ul()
{
  {
    init_simple_test("BFu16s_Sf_Ul");
    static BFu16s_Sf_Ul lv;
    check2(sizeof(lv), 11, "sizeof(BFu16s_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_Ul");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_Ul.v2");
    check_field_offset(lv, v3, 3, "BFu16s_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_Ul(Test_BFu16s_Sf_Ul, "BFu16s_Sf_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_Us()
{
  {
    init_simple_test("BFu16s_Sf_Us");
    static BFu16s_Sf_Us lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_Us");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_Us.v2");
    check_field_offset(lv, v3, 3, "BFu16s_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_Us(Test_BFu16s_Sf_Us, "BFu16s_Sf_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Sf_Vp()
{
  {
    init_simple_test("BFu16s_Sf_Vp");
    static BFu16s_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu16s_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Sf_Vp");
    check_field_offset(lv, v2, 2, "BFu16s_Sf_Vp.v2");
    check_field_offset(lv, v3, 3, "BFu16s_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Sf_Vp(Test_BFu16s_Sf_Vp, "BFu16s_Sf_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Uc_Sf()
{
  {
    init_simple_test("BFu16s_Uc_Sf");
    static BFu16s_Uc_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu16s_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Uc_Sf");
    check_field_offset(lv, v2, 2, "BFu16s_Uc_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu16s_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Uc_Sf(Test_BFu16s_Uc_Sf, "BFu16s_Uc_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Ui_Sf()
{
  {
    init_simple_test("BFu16s_Ui_Sf");
    static BFu16s_Ui_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu16s_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Ui_Sf");
    check_field_offset(lv, v2, 2, "BFu16s_Ui_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu16s_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Ui_Sf(Test_BFu16s_Ui_Sf, "BFu16s_Ui_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Ul_Sf()
{
  {
    init_simple_test("BFu16s_Ul_Sf");
    static BFu16s_Ul_Sf lv;
    check2(sizeof(lv), 11, "sizeof(BFu16s_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Ul_Sf");
    check_field_offset(lv, v2, 2, "BFu16s_Ul_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu16s_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Ul_Sf(Test_BFu16s_Ul_Sf, "BFu16s_Ul_Sf", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Us_Sf()
{
  {
    init_simple_test("BFu16s_Us_Sf");
    static BFu16s_Us_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu16s_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Us_Sf");
    check_field_offset(lv, v2, 2, "BFu16s_Us_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu16s_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Us_Sf(Test_BFu16s_Us_Sf, "BFu16s_Us_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu16s_Vp_Sf()
{
  {
    init_simple_test("BFu16s_Vp_Sf");
    static BFu16s_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu16s_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu16s_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 16, 1, "BFu16s_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 16, hide_ull(1LL<<15), "BFu16s_Vp_Sf");
    check_field_offset(lv, v2, 2, "BFu16s_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu16s_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu16s_Vp_Sf(Test_BFu16s_Vp_Sf, "BFu16s_Vp_Sf", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu15i_Sf()
{
  {
    init_simple_test("BFu17i_BFu15i_Sf");
    static BFu17i_BFu15i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "BFu17i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "BFu17i_BFu15i_Sf");
    check_field_offset(lv, v3, 4, "BFu17i_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu15i_Sf(Test_BFu17i_BFu15i_Sf, "BFu17i_BFu15i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu15ll_Sf()
{
  {
    init_simple_test("BFu17i_BFu15ll_Sf");
    static BFu17i_BFu15ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "BFu17i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "BFu17i_BFu15ll_Sf");
    check_field_offset(lv, v3, 4, "BFu17i_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu15ll_Sf(Test_BFu17i_BFu15ll_Sf, "BFu17i_BFu15ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu15s_Sf()
{
  {
    init_simple_test("BFu17i_BFu15s_Sf");
    static BFu17i_BFu15s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "BFu17i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "BFu17i_BFu15s_Sf");
    check_field_offset(lv, v3, 4, "BFu17i_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu15s_Sf(Test_BFu17i_BFu15s_Sf, "BFu17i_BFu15s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu16i_Sf()
{
  {
    init_simple_test("BFu17i_BFu16i_Sf");
    static BFu17i_BFu16i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "BFu17i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "BFu17i_BFu16i_Sf");
    check_field_offset(lv, v3, 5, "BFu17i_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu16i_Sf(Test_BFu17i_BFu16i_Sf, "BFu17i_BFu16i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu16ll_Sf()
{
  {
    init_simple_test("BFu17i_BFu16ll_Sf");
    static BFu17i_BFu16ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "BFu17i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "BFu17i_BFu16ll_Sf");
    check_field_offset(lv, v3, 5, "BFu17i_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu16ll_Sf(Test_BFu17i_BFu16ll_Sf, "BFu17i_BFu16ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu16s_Sf()
{
  {
    init_simple_test("BFu17i_BFu16s_Sf");
    static BFu17i_BFu16s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "BFu17i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "BFu17i_BFu16s_Sf");
    check_field_offset(lv, v3, 5, "BFu17i_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu16s_Sf(Test_BFu17i_BFu16s_Sf, "BFu17i_BFu16s_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu17i_Sf()
{
  {
    init_simple_test("BFu17i_BFu17i_Sf");
    static BFu17i_BFu17i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "BFu17i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "BFu17i_BFu17i_Sf");
    check_field_offset(lv, v3, 5, "BFu17i_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu17i_Sf(Test_BFu17i_BFu17i_Sf, "BFu17i_BFu17i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu17ll_Sf()
{
  {
    init_simple_test("BFu17i_BFu17ll_Sf");
    static BFu17i_BFu17ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "BFu17i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "BFu17i_BFu17ll_Sf");
    check_field_offset(lv, v3, 5, "BFu17i_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu17ll_Sf(Test_BFu17i_BFu17ll_Sf, "BFu17i_BFu17ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu1c_Sf()
{
  {
    init_simple_test("BFu17i_BFu1c_Sf");
    static BFu17i_BFu1c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17i_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu1c_Sf");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "BFu17i_BFu1c_Sf");
    check_field_offset(lv, v3, 3, "BFu17i_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu1c_Sf(Test_BFu17i_BFu1c_Sf, "BFu17i_BFu1c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu1i_Sf()
{
  {
    init_simple_test("BFu17i_BFu1i_Sf");
    static BFu17i_BFu1i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17i_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu1i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "BFu17i_BFu1i_Sf");
    check_field_offset(lv, v3, 3, "BFu17i_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu1i_Sf(Test_BFu17i_BFu1i_Sf, "BFu17i_BFu1i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu1ll_Sf()
{
  {
    init_simple_test("BFu17i_BFu1ll_Sf");
    static BFu17i_BFu1ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17i_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "BFu17i_BFu1ll_Sf");
    check_field_offset(lv, v3, 3, "BFu17i_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu1ll_Sf(Test_BFu17i_BFu1ll_Sf, "BFu17i_BFu1ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu1s_Sf()
{
  {
    init_simple_test("BFu17i_BFu1s_Sf");
    static BFu17i_BFu1s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17i_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu1s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "BFu17i_BFu1s_Sf");
    check_field_offset(lv, v3, 3, "BFu17i_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu1s_Sf(Test_BFu17i_BFu1s_Sf, "BFu17i_BFu1s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu31i_Sf()
{
  {
    init_simple_test("BFu17i_BFu31i_Sf");
    static BFu17i_BFu31i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu17i_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 31, 1, "BFu17i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 31, hide_ull(1LL<<30), "BFu17i_BFu31i_Sf");
    check_field_offset(lv, v3, 6, "BFu17i_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu31i_Sf(Test_BFu17i_BFu31i_Sf, "BFu17i_BFu31i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu31ll_Sf()
{
  {
    init_simple_test("BFu17i_BFu31ll_Sf");
    static BFu17i_BFu31ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu17i_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 31, 1, "BFu17i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 31, hide_ull(1LL<<30), "BFu17i_BFu31ll_Sf");
    check_field_offset(lv, v3, 6, "BFu17i_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu31ll_Sf(Test_BFu17i_BFu31ll_Sf, "BFu17i_BFu31ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu32i_Sf()
{
  {
    init_simple_test("BFu17i_BFu32i_Sf");
    static BFu17i_BFu32i_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu17i_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 32, 1, "BFu17i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 32, hide_ull(1LL<<31), "BFu17i_BFu32i_Sf");
    check_field_offset(lv, v3, 7, "BFu17i_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu32i_Sf(Test_BFu17i_BFu32i_Sf, "BFu17i_BFu32i_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu32ll_Sf()
{
  {
    init_simple_test("BFu17i_BFu32ll_Sf");
    static BFu17i_BFu32ll_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu17i_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 32, 1, "BFu17i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 32, hide_ull(1LL<<31), "BFu17i_BFu32ll_Sf");
    check_field_offset(lv, v3, 7, "BFu17i_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu32ll_Sf(Test_BFu17i_BFu32ll_Sf, "BFu17i_BFu32ll_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu33_Sf()
{
  {
    init_simple_test("BFu17i_BFu33_Sf");
    static BFu17i_BFu33_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu17i_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu33_Sf");
    set_bf_and_test(lv, v2, 2, 1, 33, 1, "BFu17i_BFu33_Sf");
    set_bf_and_test(lv, v2, 2, 1, 33, hide_ull(1LL<<32), "BFu17i_BFu33_Sf");
    check_field_offset(lv, v3, 7, "BFu17i_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu33_Sf(Test_BFu17i_BFu33_Sf, "BFu17i_BFu33_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu7c_Sf()
{
  {
    init_simple_test("BFu17i_BFu7c_Sf");
    static BFu17i_BFu7c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17i_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "BFu17i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "BFu17i_BFu7c_Sf");
    check_field_offset(lv, v3, 3, "BFu17i_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu7c_Sf(Test_BFu17i_BFu7c_Sf, "BFu17i_BFu7c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu7i_Sf()
{
  {
    init_simple_test("BFu17i_BFu7i_Sf");
    static BFu17i_BFu7i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17i_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "BFu17i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "BFu17i_BFu7i_Sf");
    check_field_offset(lv, v3, 3, "BFu17i_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu7i_Sf(Test_BFu17i_BFu7i_Sf, "BFu17i_BFu7i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu7ll_Sf()
{
  {
    init_simple_test("BFu17i_BFu7ll_Sf");
    static BFu17i_BFu7ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17i_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "BFu17i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "BFu17i_BFu7ll_Sf");
    check_field_offset(lv, v3, 3, "BFu17i_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu7ll_Sf(Test_BFu17i_BFu7ll_Sf, "BFu17i_BFu7ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu7s_Sf()
{
  {
    init_simple_test("BFu17i_BFu7s_Sf");
    static BFu17i_BFu7s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17i_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "BFu17i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "BFu17i_BFu7s_Sf");
    check_field_offset(lv, v3, 3, "BFu17i_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu7s_Sf(Test_BFu17i_BFu7s_Sf, "BFu17i_BFu7s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu8c_Sf()
{
  {
    init_simple_test("BFu17i_BFu8c_Sf");
    static BFu17i_BFu8c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "BFu17i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "BFu17i_BFu8c_Sf");
    check_field_offset(lv, v3, 4, "BFu17i_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu8c_Sf(Test_BFu17i_BFu8c_Sf, "BFu17i_BFu8c_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu8i_Sf()
{
  {
    init_simple_test("BFu17i_BFu8i_Sf");
    static BFu17i_BFu8i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "BFu17i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "BFu17i_BFu8i_Sf");
    check_field_offset(lv, v3, 4, "BFu17i_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu8i_Sf(Test_BFu17i_BFu8i_Sf, "BFu17i_BFu8i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu8ll_Sf()
{
  {
    init_simple_test("BFu17i_BFu8ll_Sf");
    static BFu17i_BFu8ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "BFu17i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "BFu17i_BFu8ll_Sf");
    check_field_offset(lv, v3, 4, "BFu17i_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu8ll_Sf(Test_BFu17i_BFu8ll_Sf, "BFu17i_BFu8ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu8s_Sf()
{
  {
    init_simple_test("BFu17i_BFu8s_Sf");
    static BFu17i_BFu8s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "BFu17i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "BFu17i_BFu8s_Sf");
    check_field_offset(lv, v3, 4, "BFu17i_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu8s_Sf(Test_BFu17i_BFu8s_Sf, "BFu17i_BFu8s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu9i_Sf()
{
  {
    init_simple_test("BFu17i_BFu9i_Sf");
    static BFu17i_BFu9i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "BFu17i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "BFu17i_BFu9i_Sf");
    check_field_offset(lv, v3, 4, "BFu17i_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu9i_Sf(Test_BFu17i_BFu9i_Sf, "BFu17i_BFu9i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu9ll_Sf()
{
  {
    init_simple_test("BFu17i_BFu9ll_Sf");
    static BFu17i_BFu9ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "BFu17i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "BFu17i_BFu9ll_Sf");
    check_field_offset(lv, v3, 4, "BFu17i_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu9ll_Sf(Test_BFu17i_BFu9ll_Sf, "BFu17i_BFu9ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_BFu9s_Sf()
{
  {
    init_simple_test("BFu17i_BFu9s_Sf");
    static BFu17i_BFu9s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "BFu17i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "BFu17i_BFu9s_Sf");
    check_field_offset(lv, v3, 4, "BFu17i_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_BFu9s_Sf(Test_BFu17i_BFu9s_Sf, "BFu17i_BFu9s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_C_Sf()
{
  {
    init_simple_test("BFu17i_C_Sf");
    static BFu17i_C_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_C_Sf");
    check_field_offset(lv, v2, 3, "BFu17i_C_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu17i_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_C_Sf(Test_BFu17i_C_Sf, "BFu17i_C_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_D_Sf()
{
  {
    init_simple_test("BFu17i_D_Sf");
    static BFu17i_D_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu17i_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_D_Sf");
    check_field_offset(lv, v2, 3, "BFu17i_D_Sf.v2");
    check_field_offset(lv, v3, 11, "BFu17i_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_D_Sf(Test_BFu17i_D_Sf, "BFu17i_D_Sf", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_F_Sf()
{
  {
    init_simple_test("BFu17i_F_Sf");
    static BFu17i_F_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu17i_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_F_Sf");
    check_field_offset(lv, v2, 3, "BFu17i_F_Sf.v2");
    check_field_offset(lv, v3, 7, "BFu17i_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_F_Sf(Test_BFu17i_F_Sf, "BFu17i_F_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_I_Sf()
{
  {
    init_simple_test("BFu17i_I_Sf");
    static BFu17i_I_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu17i_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_I_Sf");
    check_field_offset(lv, v2, 3, "BFu17i_I_Sf.v2");
    check_field_offset(lv, v3, 7, "BFu17i_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_I_Sf(Test_BFu17i_I_Sf, "BFu17i_I_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Ip_Sf()
{
  {
    init_simple_test("BFu17i_Ip_Sf");
    static BFu17i_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu17i_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Ip_Sf");
    check_field_offset(lv, v2, 3, "BFu17i_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(11,7), "BFu17i_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Ip_Sf(Test_BFu17i_Ip_Sf, "BFu17i_Ip_Sf", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_L_Sf()
{
  {
    init_simple_test("BFu17i_L_Sf");
    static BFu17i_L_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu17i_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_L_Sf");
    check_field_offset(lv, v2, 3, "BFu17i_L_Sf.v2");
    check_field_offset(lv, v3, 11, "BFu17i_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_L_Sf(Test_BFu17i_L_Sf, "BFu17i_L_Sf", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_S_Sf()
{
  {
    init_simple_test("BFu17i_S_Sf");
    static BFu17i_S_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_S_Sf");
    check_field_offset(lv, v2, 3, "BFu17i_S_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu17i_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_S_Sf(Test_BFu17i_S_Sf, "BFu17i_S_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf()
{
  {
    init_simple_test("BFu17i_Sf");
    static BFu17i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf");
    check_field_offset(lv, v2, 3, "BFu17i_Sf.v2");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf(Test_BFu17i_Sf, "BFu17i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu15i()
{
  {
    init_simple_test("BFu17i_Sf_BFu15i");
    static BFu17i_Sf_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu15i");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu17i_Sf_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu17i_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu15i(Test_BFu17i_Sf_BFu15i, "BFu17i_Sf_BFu15i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu15ll()
{
  {
    init_simple_test("BFu17i_Sf_BFu15ll");
    static BFu17i_Sf_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu15ll");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu17i_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu17i_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu15ll(Test_BFu17i_Sf_BFu15ll, "BFu17i_Sf_BFu15ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu15s()
{
  {
    init_simple_test("BFu17i_Sf_BFu15s");
    static BFu17i_Sf_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu15s");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu17i_Sf_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu17i_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu15s(Test_BFu17i_Sf_BFu15s, "BFu17i_Sf_BFu15s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu16i()
{
  {
    init_simple_test("BFu17i_Sf_BFu16i");
    static BFu17i_Sf_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu16i");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu17i_Sf_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu17i_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu16i(Test_BFu17i_Sf_BFu16i, "BFu17i_Sf_BFu16i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu16ll()
{
  {
    init_simple_test("BFu17i_Sf_BFu16ll");
    static BFu17i_Sf_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu16ll");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu17i_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu17i_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu16ll(Test_BFu17i_Sf_BFu16ll, "BFu17i_Sf_BFu16ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu16s()
{
  {
    init_simple_test("BFu17i_Sf_BFu16s");
    static BFu17i_Sf_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu16s");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu17i_Sf_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu17i_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu16s(Test_BFu17i_Sf_BFu16s, "BFu17i_Sf_BFu16s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu17i()
{
  {
    init_simple_test("BFu17i_Sf_BFu17i");
    static BFu17i_Sf_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(BFu17i_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu17i");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "BFu17i_Sf_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu17i(Test_BFu17i_Sf_BFu17i, "BFu17i_Sf_BFu17i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu17ll()
{
  {
    init_simple_test("BFu17i_Sf_BFu17ll");
    static BFu17i_Sf_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu17i_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu17ll");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "BFu17i_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu17ll(Test_BFu17i_Sf_BFu17ll, "BFu17i_Sf_BFu17ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu1c()
{
  {
    init_simple_test("BFu17i_Sf_BFu1c");
    static BFu17i_Sf_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu1c");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu17i_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu1c(Test_BFu17i_Sf_BFu1c, "BFu17i_Sf_BFu1c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu1i()
{
  {
    init_simple_test("BFu17i_Sf_BFu1i");
    static BFu17i_Sf_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu1i");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu17i_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu1i(Test_BFu17i_Sf_BFu1i, "BFu17i_Sf_BFu1i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu1ll()
{
  {
    init_simple_test("BFu17i_Sf_BFu1ll");
    static BFu17i_Sf_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu1ll");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu17i_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu1ll(Test_BFu17i_Sf_BFu1ll, "BFu17i_Sf_BFu1ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu1s()
{
  {
    init_simple_test("BFu17i_Sf_BFu1s");
    static BFu17i_Sf_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu1s");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu17i_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu1s(Test_BFu17i_Sf_BFu1s, "BFu17i_Sf_BFu1s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu31i()
{
  {
    init_simple_test("BFu17i_Sf_BFu31i");
    static BFu17i_Sf_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu17i_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu31i");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "BFu17i_Sf_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "BFu17i_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu31i(Test_BFu17i_Sf_BFu31i, "BFu17i_Sf_BFu31i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu31ll()
{
  {
    init_simple_test("BFu17i_Sf_BFu31ll");
    static BFu17i_Sf_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu17i_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu31ll");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "BFu17i_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "BFu17i_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu31ll(Test_BFu17i_Sf_BFu31ll, "BFu17i_Sf_BFu31ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu32i()
{
  {
    init_simple_test("BFu17i_Sf_BFu32i");
    static BFu17i_Sf_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu17i_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu32i");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "BFu17i_Sf_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "BFu17i_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu32i(Test_BFu17i_Sf_BFu32i, "BFu17i_Sf_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu32ll()
{
  {
    init_simple_test("BFu17i_Sf_BFu32ll");
    static BFu17i_Sf_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu17i_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu32ll");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "BFu17i_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "BFu17i_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu32ll(Test_BFu17i_Sf_BFu32ll, "BFu17i_Sf_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu33()
{
  {
    init_simple_test("BFu17i_Sf_BFu33");
    static BFu17i_Sf_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(BFu17i_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu33");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 4, 0, 33, 1, "BFu17i_Sf_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, hide_ull(1LL<<32), "BFu17i_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu33(Test_BFu17i_Sf_BFu33, "BFu17i_Sf_BFu33", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu7c()
{
  {
    init_simple_test("BFu17i_Sf_BFu7c");
    static BFu17i_Sf_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu7c");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu17i_Sf_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu17i_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu7c(Test_BFu17i_Sf_BFu7c, "BFu17i_Sf_BFu7c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu7i()
{
  {
    init_simple_test("BFu17i_Sf_BFu7i");
    static BFu17i_Sf_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu7i");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu17i_Sf_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu17i_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu7i(Test_BFu17i_Sf_BFu7i, "BFu17i_Sf_BFu7i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu7ll()
{
  {
    init_simple_test("BFu17i_Sf_BFu7ll");
    static BFu17i_Sf_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu7ll");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu17i_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu17i_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu7ll(Test_BFu17i_Sf_BFu7ll, "BFu17i_Sf_BFu7ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu7s()
{
  {
    init_simple_test("BFu17i_Sf_BFu7s");
    static BFu17i_Sf_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu7s");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu17i_Sf_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu17i_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu7s(Test_BFu17i_Sf_BFu7s, "BFu17i_Sf_BFu7s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu8c()
{
  {
    init_simple_test("BFu17i_Sf_BFu8c");
    static BFu17i_Sf_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu8c");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu17i_Sf_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu17i_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu8c(Test_BFu17i_Sf_BFu8c, "BFu17i_Sf_BFu8c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu8i()
{
  {
    init_simple_test("BFu17i_Sf_BFu8i");
    static BFu17i_Sf_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu8i");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu17i_Sf_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu17i_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu8i(Test_BFu17i_Sf_BFu8i, "BFu17i_Sf_BFu8i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu8ll()
{
  {
    init_simple_test("BFu17i_Sf_BFu8ll");
    static BFu17i_Sf_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu8ll");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu17i_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu17i_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu8ll(Test_BFu17i_Sf_BFu8ll, "BFu17i_Sf_BFu8ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu8s()
{
  {
    init_simple_test("BFu17i_Sf_BFu8s");
    static BFu17i_Sf_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu8s");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu17i_Sf_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu17i_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu8s(Test_BFu17i_Sf_BFu8s, "BFu17i_Sf_BFu8s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu9i()
{
  {
    init_simple_test("BFu17i_Sf_BFu9i");
    static BFu17i_Sf_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu9i");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu17i_Sf_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu17i_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu9i(Test_BFu17i_Sf_BFu9i, "BFu17i_Sf_BFu9i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu9ll()
{
  {
    init_simple_test("BFu17i_Sf_BFu9ll");
    static BFu17i_Sf_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu9ll");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu17i_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu17i_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu9ll(Test_BFu17i_Sf_BFu9ll, "BFu17i_Sf_BFu9ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_BFu9s()
{
  {
    init_simple_test("BFu17i_Sf_BFu9s");
    static BFu17i_Sf_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_BFu9s");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu17i_Sf_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu17i_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_BFu9s(Test_BFu17i_Sf_BFu9s, "BFu17i_Sf_BFu9s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_C()
{
  {
    init_simple_test("BFu17i_Sf_C");
    static BFu17i_Sf_C lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_C");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_C.v2");
    check_field_offset(lv, v3, 4, "BFu17i_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_C(Test_BFu17i_Sf_C, "BFu17i_Sf_C", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_D()
{
  {
    init_simple_test("BFu17i_Sf_D");
    static BFu17i_Sf_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu17i_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_D");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_D.v2");
    check_field_offset(lv, v3, 4, "BFu17i_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_D(Test_BFu17i_Sf_D, "BFu17i_Sf_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_F()
{
  {
    init_simple_test("BFu17i_Sf_F");
    static BFu17i_Sf_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu17i_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_F");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_F.v2");
    check_field_offset(lv, v3, 4, "BFu17i_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_F(Test_BFu17i_Sf_F, "BFu17i_Sf_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_I()
{
  {
    init_simple_test("BFu17i_Sf_I");
    static BFu17i_Sf_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu17i_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_I");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_I.v2");
    check_field_offset(lv, v3, 4, "BFu17i_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_I(Test_BFu17i_Sf_I, "BFu17i_Sf_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_Ip()
{
  {
    init_simple_test("BFu17i_Sf_Ip");
    static BFu17i_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu17i_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_Ip");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_Ip.v2");
    check_field_offset(lv, v3, 4, "BFu17i_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_Ip(Test_BFu17i_Sf_Ip, "BFu17i_Sf_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_L()
{
  {
    init_simple_test("BFu17i_Sf_L");
    static BFu17i_Sf_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu17i_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_L");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_L.v2");
    check_field_offset(lv, v3, 4, "BFu17i_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_L(Test_BFu17i_Sf_L, "BFu17i_Sf_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_S()
{
  {
    init_simple_test("BFu17i_Sf_S");
    static BFu17i_Sf_S lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_S");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_S.v2");
    check_field_offset(lv, v3, 4, "BFu17i_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_S(Test_BFu17i_Sf_S, "BFu17i_Sf_S", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_Sf()
{
  {
    init_simple_test("BFu17i_Sf_Sf");
    static BFu17i_Sf_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_Sf");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu17i_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_Sf(Test_BFu17i_Sf_Sf, "BFu17i_Sf_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_Uc()
{
  {
    init_simple_test("BFu17i_Sf_Uc");
    static BFu17i_Sf_Uc lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_Uc");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_Uc.v2");
    check_field_offset(lv, v3, 4, "BFu17i_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_Uc(Test_BFu17i_Sf_Uc, "BFu17i_Sf_Uc", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_Ui()
{
  {
    init_simple_test("BFu17i_Sf_Ui");
    static BFu17i_Sf_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu17i_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_Ui");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_Ui.v2");
    check_field_offset(lv, v3, 4, "BFu17i_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_Ui(Test_BFu17i_Sf_Ui, "BFu17i_Sf_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_Ul()
{
  {
    init_simple_test("BFu17i_Sf_Ul");
    static BFu17i_Sf_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu17i_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_Ul");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_Ul.v2");
    check_field_offset(lv, v3, 4, "BFu17i_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_Ul(Test_BFu17i_Sf_Ul, "BFu17i_Sf_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_Us()
{
  {
    init_simple_test("BFu17i_Sf_Us");
    static BFu17i_Sf_Us lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_Us");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_Us.v2");
    check_field_offset(lv, v3, 4, "BFu17i_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_Us(Test_BFu17i_Sf_Us, "BFu17i_Sf_Us", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Sf_Vp()
{
  {
    init_simple_test("BFu17i_Sf_Vp");
    static BFu17i_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu17i_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Sf_Vp");
    check_field_offset(lv, v2, 3, "BFu17i_Sf_Vp.v2");
    check_field_offset(lv, v3, 4, "BFu17i_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Sf_Vp(Test_BFu17i_Sf_Vp, "BFu17i_Sf_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Uc_Sf()
{
  {
    init_simple_test("BFu17i_Uc_Sf");
    static BFu17i_Uc_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17i_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Uc_Sf");
    check_field_offset(lv, v2, 3, "BFu17i_Uc_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu17i_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Uc_Sf(Test_BFu17i_Uc_Sf, "BFu17i_Uc_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Ui_Sf()
{
  {
    init_simple_test("BFu17i_Ui_Sf");
    static BFu17i_Ui_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu17i_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Ui_Sf");
    check_field_offset(lv, v2, 3, "BFu17i_Ui_Sf.v2");
    check_field_offset(lv, v3, 7, "BFu17i_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Ui_Sf(Test_BFu17i_Ui_Sf, "BFu17i_Ui_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Ul_Sf()
{
  {
    init_simple_test("BFu17i_Ul_Sf");
    static BFu17i_Ul_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu17i_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Ul_Sf");
    check_field_offset(lv, v2, 3, "BFu17i_Ul_Sf.v2");
    check_field_offset(lv, v3, 11, "BFu17i_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Ul_Sf(Test_BFu17i_Ul_Sf, "BFu17i_Ul_Sf", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Us_Sf()
{
  {
    init_simple_test("BFu17i_Us_Sf");
    static BFu17i_Us_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu17i_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Us_Sf");
    check_field_offset(lv, v2, 3, "BFu17i_Us_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu17i_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Us_Sf(Test_BFu17i_Us_Sf, "BFu17i_Us_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17i_Vp_Sf()
{
  {
    init_simple_test("BFu17i_Vp_Sf");
    static BFu17i_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu17i_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17i_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17i_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17i_Vp_Sf");
    check_field_offset(lv, v2, 3, "BFu17i_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(11,7), "BFu17i_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17i_Vp_Sf(Test_BFu17i_Vp_Sf, "BFu17i_Vp_Sf", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu15i_Sf()
{
  {
    init_simple_test("BFu17ll_BFu15i_Sf");
    static BFu17ll_BFu15i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "BFu17ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "BFu17ll_BFu15i_Sf");
    check_field_offset(lv, v3, 4, "BFu17ll_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu15i_Sf(Test_BFu17ll_BFu15i_Sf, "BFu17ll_BFu15i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu15ll_Sf()
{
  {
    init_simple_test("BFu17ll_BFu15ll_Sf");
    static BFu17ll_BFu15ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "BFu17ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "BFu17ll_BFu15ll_Sf");
    check_field_offset(lv, v3, 4, "BFu17ll_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu15ll_Sf(Test_BFu17ll_BFu15ll_Sf, "BFu17ll_BFu15ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu15s_Sf()
{
  {
    init_simple_test("BFu17ll_BFu15s_Sf");
    static BFu17ll_BFu15s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 15, 1, "BFu17ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 15, hide_ull(1LL<<14), "BFu17ll_BFu15s_Sf");
    check_field_offset(lv, v3, 4, "BFu17ll_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu15s_Sf(Test_BFu17ll_BFu15s_Sf, "BFu17ll_BFu15s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu16i_Sf()
{
  {
    init_simple_test("BFu17ll_BFu16i_Sf");
    static BFu17ll_BFu16i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "BFu17ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "BFu17ll_BFu16i_Sf");
    check_field_offset(lv, v3, 5, "BFu17ll_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu16i_Sf(Test_BFu17ll_BFu16i_Sf, "BFu17ll_BFu16i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu16ll_Sf()
{
  {
    init_simple_test("BFu17ll_BFu16ll_Sf");
    static BFu17ll_BFu16ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "BFu17ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "BFu17ll_BFu16ll_Sf");
    check_field_offset(lv, v3, 5, "BFu17ll_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu16ll_Sf(Test_BFu17ll_BFu16ll_Sf, "BFu17ll_BFu16ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu16s_Sf()
{
  {
    init_simple_test("BFu17ll_BFu16s_Sf");
    static BFu17ll_BFu16s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 16, 1, "BFu17ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 16, hide_ull(1LL<<15), "BFu17ll_BFu16s_Sf");
    check_field_offset(lv, v3, 5, "BFu17ll_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu16s_Sf(Test_BFu17ll_BFu16s_Sf, "BFu17ll_BFu16s_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu17i_Sf()
{
  {
    init_simple_test("BFu17ll_BFu17i_Sf");
    static BFu17ll_BFu17i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "BFu17ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "BFu17ll_BFu17i_Sf");
    check_field_offset(lv, v3, 5, "BFu17ll_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu17i_Sf(Test_BFu17ll_BFu17i_Sf, "BFu17ll_BFu17i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu17ll_Sf()
{
  {
    init_simple_test("BFu17ll_BFu17ll_Sf");
    static BFu17ll_BFu17ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 17, 1, "BFu17ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 17, hide_ull(1LL<<16), "BFu17ll_BFu17ll_Sf");
    check_field_offset(lv, v3, 5, "BFu17ll_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu17ll_Sf(Test_BFu17ll_BFu17ll_Sf, "BFu17ll_BFu17ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu1c_Sf()
{
  {
    init_simple_test("BFu17ll_BFu1c_Sf");
    static BFu17ll_BFu1c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17ll_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu1c_Sf");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "BFu17ll_BFu1c_Sf");
    check_field_offset(lv, v3, 3, "BFu17ll_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu1c_Sf(Test_BFu17ll_BFu1c_Sf, "BFu17ll_BFu1c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu1i_Sf()
{
  {
    init_simple_test("BFu17ll_BFu1i_Sf");
    static BFu17ll_BFu1i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17ll_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu1i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "BFu17ll_BFu1i_Sf");
    check_field_offset(lv, v3, 3, "BFu17ll_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu1i_Sf(Test_BFu17ll_BFu1i_Sf, "BFu17ll_BFu1i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu1ll_Sf()
{
  {
    init_simple_test("BFu17ll_BFu1ll_Sf");
    static BFu17ll_BFu1ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17ll_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "BFu17ll_BFu1ll_Sf");
    check_field_offset(lv, v3, 3, "BFu17ll_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu1ll_Sf(Test_BFu17ll_BFu1ll_Sf, "BFu17ll_BFu1ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu1s_Sf()
{
  {
    init_simple_test("BFu17ll_BFu1s_Sf");
    static BFu17ll_BFu1s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17ll_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu1s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 1, 1, "BFu17ll_BFu1s_Sf");
    check_field_offset(lv, v3, 3, "BFu17ll_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu1s_Sf(Test_BFu17ll_BFu1s_Sf, "BFu17ll_BFu1s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu31i_Sf()
{
  {
    init_simple_test("BFu17ll_BFu31i_Sf");
    static BFu17ll_BFu31i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu17ll_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 31, 1, "BFu17ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 31, hide_ull(1LL<<30), "BFu17ll_BFu31i_Sf");
    check_field_offset(lv, v3, 6, "BFu17ll_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu31i_Sf(Test_BFu17ll_BFu31i_Sf, "BFu17ll_BFu31i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu31ll_Sf()
{
  {
    init_simple_test("BFu17ll_BFu31ll_Sf");
    static BFu17ll_BFu31ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu17ll_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 31, 1, "BFu17ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 31, hide_ull(1LL<<30), "BFu17ll_BFu31ll_Sf");
    check_field_offset(lv, v3, 6, "BFu17ll_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu31ll_Sf(Test_BFu17ll_BFu31ll_Sf, "BFu17ll_BFu31ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu32i_Sf()
{
  {
    init_simple_test("BFu17ll_BFu32i_Sf");
    static BFu17ll_BFu32i_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu17ll_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 32, 1, "BFu17ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 32, hide_ull(1LL<<31), "BFu17ll_BFu32i_Sf");
    check_field_offset(lv, v3, 7, "BFu17ll_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu32i_Sf(Test_BFu17ll_BFu32i_Sf, "BFu17ll_BFu32i_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu32ll_Sf()
{
  {
    init_simple_test("BFu17ll_BFu32ll_Sf");
    static BFu17ll_BFu32ll_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu17ll_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 32, 1, "BFu17ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 32, hide_ull(1LL<<31), "BFu17ll_BFu32ll_Sf");
    check_field_offset(lv, v3, 7, "BFu17ll_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu32ll_Sf(Test_BFu17ll_BFu32ll_Sf, "BFu17ll_BFu32ll_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu33_Sf()
{
  {
    init_simple_test("BFu17ll_BFu33_Sf");
    static BFu17ll_BFu33_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu17ll_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 2, 1, 33, 1, "BFu17ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 2, 1, 33, hide_ull(1LL<<32), "BFu17ll_BFu33_Sf");
    check_field_offset(lv, v3, 7, "BFu17ll_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu33_Sf(Test_BFu17ll_BFu33_Sf, "BFu17ll_BFu33_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu7c_Sf()
{
  {
    init_simple_test("BFu17ll_BFu7c_Sf");
    static BFu17ll_BFu7c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17ll_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "BFu17ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "BFu17ll_BFu7c_Sf");
    check_field_offset(lv, v3, 3, "BFu17ll_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu7c_Sf(Test_BFu17ll_BFu7c_Sf, "BFu17ll_BFu7c_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu7i_Sf()
{
  {
    init_simple_test("BFu17ll_BFu7i_Sf");
    static BFu17ll_BFu7i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17ll_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "BFu17ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "BFu17ll_BFu7i_Sf");
    check_field_offset(lv, v3, 3, "BFu17ll_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu7i_Sf(Test_BFu17ll_BFu7i_Sf, "BFu17ll_BFu7i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu7ll_Sf()
{
  {
    init_simple_test("BFu17ll_BFu7ll_Sf");
    static BFu17ll_BFu7ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17ll_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "BFu17ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "BFu17ll_BFu7ll_Sf");
    check_field_offset(lv, v3, 3, "BFu17ll_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu7ll_Sf(Test_BFu17ll_BFu7ll_Sf, "BFu17ll_BFu7ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu7s_Sf()
{
  {
    init_simple_test("BFu17ll_BFu7s_Sf");
    static BFu17ll_BFu7s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17ll_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 7, 1, "BFu17ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 7, hide_ull(1LL<<6), "BFu17ll_BFu7s_Sf");
    check_field_offset(lv, v3, 3, "BFu17ll_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu7s_Sf(Test_BFu17ll_BFu7s_Sf, "BFu17ll_BFu7s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu8c_Sf()
{
  {
    init_simple_test("BFu17ll_BFu8c_Sf");
    static BFu17ll_BFu8c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "BFu17ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "BFu17ll_BFu8c_Sf");
    check_field_offset(lv, v3, 4, "BFu17ll_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu8c_Sf(Test_BFu17ll_BFu8c_Sf, "BFu17ll_BFu8c_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu8i_Sf()
{
  {
    init_simple_test("BFu17ll_BFu8i_Sf");
    static BFu17ll_BFu8i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "BFu17ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "BFu17ll_BFu8i_Sf");
    check_field_offset(lv, v3, 4, "BFu17ll_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu8i_Sf(Test_BFu17ll_BFu8i_Sf, "BFu17ll_BFu8i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu8ll_Sf()
{
  {
    init_simple_test("BFu17ll_BFu8ll_Sf");
    static BFu17ll_BFu8ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "BFu17ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "BFu17ll_BFu8ll_Sf");
    check_field_offset(lv, v3, 4, "BFu17ll_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu8ll_Sf(Test_BFu17ll_BFu8ll_Sf, "BFu17ll_BFu8ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu8s_Sf()
{
  {
    init_simple_test("BFu17ll_BFu8s_Sf");
    static BFu17ll_BFu8s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 8, 1, "BFu17ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 8, hide_ull(1LL<<7), "BFu17ll_BFu8s_Sf");
    check_field_offset(lv, v3, 4, "BFu17ll_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu8s_Sf(Test_BFu17ll_BFu8s_Sf, "BFu17ll_BFu8s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu9i_Sf()
{
  {
    init_simple_test("BFu17ll_BFu9i_Sf");
    static BFu17ll_BFu9i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "BFu17ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "BFu17ll_BFu9i_Sf");
    check_field_offset(lv, v3, 4, "BFu17ll_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu9i_Sf(Test_BFu17ll_BFu9i_Sf, "BFu17ll_BFu9i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu9ll_Sf()
{
  {
    init_simple_test("BFu17ll_BFu9ll_Sf");
    static BFu17ll_BFu9ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "BFu17ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "BFu17ll_BFu9ll_Sf");
    check_field_offset(lv, v3, 4, "BFu17ll_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu9ll_Sf(Test_BFu17ll_BFu9ll_Sf, "BFu17ll_BFu9ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_BFu9s_Sf()
{
  {
    init_simple_test("BFu17ll_BFu9s_Sf");
    static BFu17ll_BFu9s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 9, 1, "BFu17ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 2, 1, 9, hide_ull(1LL<<8), "BFu17ll_BFu9s_Sf");
    check_field_offset(lv, v3, 4, "BFu17ll_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_BFu9s_Sf(Test_BFu17ll_BFu9s_Sf, "BFu17ll_BFu9s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_C_Sf()
{
  {
    init_simple_test("BFu17ll_C_Sf");
    static BFu17ll_C_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_C_Sf");
    check_field_offset(lv, v2, 3, "BFu17ll_C_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu17ll_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_C_Sf(Test_BFu17ll_C_Sf, "BFu17ll_C_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_D_Sf()
{
  {
    init_simple_test("BFu17ll_D_Sf");
    static BFu17ll_D_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu17ll_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_D_Sf");
    check_field_offset(lv, v2, 3, "BFu17ll_D_Sf.v2");
    check_field_offset(lv, v3, 11, "BFu17ll_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_D_Sf(Test_BFu17ll_D_Sf, "BFu17ll_D_Sf", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_F_Sf()
{
  {
    init_simple_test("BFu17ll_F_Sf");
    static BFu17ll_F_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu17ll_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_F_Sf");
    check_field_offset(lv, v2, 3, "BFu17ll_F_Sf.v2");
    check_field_offset(lv, v3, 7, "BFu17ll_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_F_Sf(Test_BFu17ll_F_Sf, "BFu17ll_F_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_I_Sf()
{
  {
    init_simple_test("BFu17ll_I_Sf");
    static BFu17ll_I_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu17ll_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_I_Sf");
    check_field_offset(lv, v2, 3, "BFu17ll_I_Sf.v2");
    check_field_offset(lv, v3, 7, "BFu17ll_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_I_Sf(Test_BFu17ll_I_Sf, "BFu17ll_I_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Ip_Sf()
{
  {
    init_simple_test("BFu17ll_Ip_Sf");
    static BFu17ll_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu17ll_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Ip_Sf");
    check_field_offset(lv, v2, 3, "BFu17ll_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(11,7), "BFu17ll_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Ip_Sf(Test_BFu17ll_Ip_Sf, "BFu17ll_Ip_Sf", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_L_Sf()
{
  {
    init_simple_test("BFu17ll_L_Sf");
    static BFu17ll_L_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu17ll_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_L_Sf");
    check_field_offset(lv, v2, 3, "BFu17ll_L_Sf.v2");
    check_field_offset(lv, v3, 11, "BFu17ll_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_L_Sf(Test_BFu17ll_L_Sf, "BFu17ll_L_Sf", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_S_Sf()
{
  {
    init_simple_test("BFu17ll_S_Sf");
    static BFu17ll_S_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_S_Sf");
    check_field_offset(lv, v2, 3, "BFu17ll_S_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu17ll_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_S_Sf(Test_BFu17ll_S_Sf, "BFu17ll_S_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf()
{
  {
    init_simple_test("BFu17ll_Sf");
    static BFu17ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf.v2");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf(Test_BFu17ll_Sf, "BFu17ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu15i()
{
  {
    init_simple_test("BFu17ll_Sf_BFu15i");
    static BFu17ll_Sf_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu15i");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu17ll_Sf_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu17ll_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu15i(Test_BFu17ll_Sf_BFu15i, "BFu17ll_Sf_BFu15i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu15ll()
{
  {
    init_simple_test("BFu17ll_Sf_BFu15ll");
    static BFu17ll_Sf_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu15ll");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu17ll_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu17ll_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu15ll(Test_BFu17ll_Sf_BFu15ll, "BFu17ll_Sf_BFu15ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu15s()
{
  {
    init_simple_test("BFu17ll_Sf_BFu15s");
    static BFu17ll_Sf_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu15s");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu17ll_Sf_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu17ll_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu15s(Test_BFu17ll_Sf_BFu15s, "BFu17ll_Sf_BFu15s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu16i()
{
  {
    init_simple_test("BFu17ll_Sf_BFu16i");
    static BFu17ll_Sf_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu16i");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu17ll_Sf_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu17ll_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu16i(Test_BFu17ll_Sf_BFu16i, "BFu17ll_Sf_BFu16i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu16ll()
{
  {
    init_simple_test("BFu17ll_Sf_BFu16ll");
    static BFu17ll_Sf_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu16ll");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu17ll_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu17ll_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu16ll(Test_BFu17ll_Sf_BFu16ll, "BFu17ll_Sf_BFu16ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu16s()
{
  {
    init_simple_test("BFu17ll_Sf_BFu16s");
    static BFu17ll_Sf_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu16s");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu17ll_Sf_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu17ll_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu16s(Test_BFu17ll_Sf_BFu16s, "BFu17ll_Sf_BFu16s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu17i()
{
  {
    init_simple_test("BFu17ll_Sf_BFu17i");
    static BFu17ll_Sf_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(BFu17ll_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu17i");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "BFu17ll_Sf_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu17i(Test_BFu17ll_Sf_BFu17i, "BFu17ll_Sf_BFu17i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu17ll()
{
  {
    init_simple_test("BFu17ll_Sf_BFu17ll");
    static BFu17ll_Sf_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu17ll_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu17ll");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "BFu17ll_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu17ll(Test_BFu17ll_Sf_BFu17ll, "BFu17ll_Sf_BFu17ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu1c()
{
  {
    init_simple_test("BFu17ll_Sf_BFu1c");
    static BFu17ll_Sf_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu1c");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu17ll_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu1c(Test_BFu17ll_Sf_BFu1c, "BFu17ll_Sf_BFu1c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu1i()
{
  {
    init_simple_test("BFu17ll_Sf_BFu1i");
    static BFu17ll_Sf_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu1i");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu17ll_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu1i(Test_BFu17ll_Sf_BFu1i, "BFu17ll_Sf_BFu1i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu1ll()
{
  {
    init_simple_test("BFu17ll_Sf_BFu1ll");
    static BFu17ll_Sf_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu1ll");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu17ll_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu1ll(Test_BFu17ll_Sf_BFu1ll, "BFu17ll_Sf_BFu1ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu1s()
{
  {
    init_simple_test("BFu17ll_Sf_BFu1s");
    static BFu17ll_Sf_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu1s");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu17ll_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu1s(Test_BFu17ll_Sf_BFu1s, "BFu17ll_Sf_BFu1s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu31i()
{
  {
    init_simple_test("BFu17ll_Sf_BFu31i");
    static BFu17ll_Sf_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu17ll_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu31i");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "BFu17ll_Sf_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "BFu17ll_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu31i(Test_BFu17ll_Sf_BFu31i, "BFu17ll_Sf_BFu31i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu31ll()
{
  {
    init_simple_test("BFu17ll_Sf_BFu31ll");
    static BFu17ll_Sf_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu17ll_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu31ll");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "BFu17ll_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "BFu17ll_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu31ll(Test_BFu17ll_Sf_BFu31ll, "BFu17ll_Sf_BFu31ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu32i()
{
  {
    init_simple_test("BFu17ll_Sf_BFu32i");
    static BFu17ll_Sf_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu17ll_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu32i");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "BFu17ll_Sf_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "BFu17ll_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu32i(Test_BFu17ll_Sf_BFu32i, "BFu17ll_Sf_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu32ll()
{
  {
    init_simple_test("BFu17ll_Sf_BFu32ll");
    static BFu17ll_Sf_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu17ll_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu32ll");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "BFu17ll_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "BFu17ll_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu32ll(Test_BFu17ll_Sf_BFu32ll, "BFu17ll_Sf_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu33()
{
  {
    init_simple_test("BFu17ll_Sf_BFu33");
    static BFu17ll_Sf_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(BFu17ll_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu33");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 4, 0, 33, 1, "BFu17ll_Sf_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, hide_ull(1LL<<32), "BFu17ll_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu33(Test_BFu17ll_Sf_BFu33, "BFu17ll_Sf_BFu33", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu7c()
{
  {
    init_simple_test("BFu17ll_Sf_BFu7c");
    static BFu17ll_Sf_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu7c");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu17ll_Sf_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu17ll_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu7c(Test_BFu17ll_Sf_BFu7c, "BFu17ll_Sf_BFu7c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu7i()
{
  {
    init_simple_test("BFu17ll_Sf_BFu7i");
    static BFu17ll_Sf_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu7i");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu17ll_Sf_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu17ll_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu7i(Test_BFu17ll_Sf_BFu7i, "BFu17ll_Sf_BFu7i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu7ll()
{
  {
    init_simple_test("BFu17ll_Sf_BFu7ll");
    static BFu17ll_Sf_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu7ll");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu17ll_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu17ll_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu7ll(Test_BFu17ll_Sf_BFu7ll, "BFu17ll_Sf_BFu7ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu7s()
{
  {
    init_simple_test("BFu17ll_Sf_BFu7s");
    static BFu17ll_Sf_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu7s");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu17ll_Sf_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu17ll_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu7s(Test_BFu17ll_Sf_BFu7s, "BFu17ll_Sf_BFu7s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu8c()
{
  {
    init_simple_test("BFu17ll_Sf_BFu8c");
    static BFu17ll_Sf_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu8c");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu17ll_Sf_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu17ll_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu8c(Test_BFu17ll_Sf_BFu8c, "BFu17ll_Sf_BFu8c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu8i()
{
  {
    init_simple_test("BFu17ll_Sf_BFu8i");
    static BFu17ll_Sf_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu8i");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu17ll_Sf_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu17ll_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu8i(Test_BFu17ll_Sf_BFu8i, "BFu17ll_Sf_BFu8i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu8ll()
{
  {
    init_simple_test("BFu17ll_Sf_BFu8ll");
    static BFu17ll_Sf_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu8ll");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu17ll_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu17ll_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu8ll(Test_BFu17ll_Sf_BFu8ll, "BFu17ll_Sf_BFu8ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu8s()
{
  {
    init_simple_test("BFu17ll_Sf_BFu8s");
    static BFu17ll_Sf_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu8s");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu17ll_Sf_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu17ll_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu8s(Test_BFu17ll_Sf_BFu8s, "BFu17ll_Sf_BFu8s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu9i()
{
  {
    init_simple_test("BFu17ll_Sf_BFu9i");
    static BFu17ll_Sf_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu9i");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu17ll_Sf_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu17ll_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu9i(Test_BFu17ll_Sf_BFu9i, "BFu17ll_Sf_BFu9i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu9ll()
{
  {
    init_simple_test("BFu17ll_Sf_BFu9ll");
    static BFu17ll_Sf_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu9ll");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu17ll_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu17ll_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu9ll(Test_BFu17ll_Sf_BFu9ll, "BFu17ll_Sf_BFu9ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_BFu9s()
{
  {
    init_simple_test("BFu17ll_Sf_BFu9s");
    static BFu17ll_Sf_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_BFu9s");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu17ll_Sf_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu17ll_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_BFu9s(Test_BFu17ll_Sf_BFu9s, "BFu17ll_Sf_BFu9s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_C()
{
  {
    init_simple_test("BFu17ll_Sf_C");
    static BFu17ll_Sf_C lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_C");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_C.v2");
    check_field_offset(lv, v3, 4, "BFu17ll_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_C(Test_BFu17ll_Sf_C, "BFu17ll_Sf_C", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_D()
{
  {
    init_simple_test("BFu17ll_Sf_D");
    static BFu17ll_Sf_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu17ll_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_D");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_D.v2");
    check_field_offset(lv, v3, 4, "BFu17ll_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_D(Test_BFu17ll_Sf_D, "BFu17ll_Sf_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_F()
{
  {
    init_simple_test("BFu17ll_Sf_F");
    static BFu17ll_Sf_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu17ll_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_F");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_F.v2");
    check_field_offset(lv, v3, 4, "BFu17ll_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_F(Test_BFu17ll_Sf_F, "BFu17ll_Sf_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_I()
{
  {
    init_simple_test("BFu17ll_Sf_I");
    static BFu17ll_Sf_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu17ll_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_I");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_I.v2");
    check_field_offset(lv, v3, 4, "BFu17ll_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_I(Test_BFu17ll_Sf_I, "BFu17ll_Sf_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_Ip()
{
  {
    init_simple_test("BFu17ll_Sf_Ip");
    static BFu17ll_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu17ll_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_Ip");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_Ip.v2");
    check_field_offset(lv, v3, 4, "BFu17ll_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_Ip(Test_BFu17ll_Sf_Ip, "BFu17ll_Sf_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_L()
{
  {
    init_simple_test("BFu17ll_Sf_L");
    static BFu17ll_Sf_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu17ll_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_L");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_L.v2");
    check_field_offset(lv, v3, 4, "BFu17ll_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_L(Test_BFu17ll_Sf_L, "BFu17ll_Sf_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_S()
{
  {
    init_simple_test("BFu17ll_Sf_S");
    static BFu17ll_Sf_S lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_S");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_S.v2");
    check_field_offset(lv, v3, 4, "BFu17ll_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_S(Test_BFu17ll_Sf_S, "BFu17ll_Sf_S", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_Sf()
{
  {
    init_simple_test("BFu17ll_Sf_Sf");
    static BFu17ll_Sf_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_Sf");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu17ll_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_Sf(Test_BFu17ll_Sf_Sf, "BFu17ll_Sf_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_Uc()
{
  {
    init_simple_test("BFu17ll_Sf_Uc");
    static BFu17ll_Sf_Uc lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_Uc");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_Uc.v2");
    check_field_offset(lv, v3, 4, "BFu17ll_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_Uc(Test_BFu17ll_Sf_Uc, "BFu17ll_Sf_Uc", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_Ui()
{
  {
    init_simple_test("BFu17ll_Sf_Ui");
    static BFu17ll_Sf_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu17ll_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_Ui");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_Ui.v2");
    check_field_offset(lv, v3, 4, "BFu17ll_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_Ui(Test_BFu17ll_Sf_Ui, "BFu17ll_Sf_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_Ul()
{
  {
    init_simple_test("BFu17ll_Sf_Ul");
    static BFu17ll_Sf_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu17ll_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_Ul");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_Ul.v2");
    check_field_offset(lv, v3, 4, "BFu17ll_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_Ul(Test_BFu17ll_Sf_Ul, "BFu17ll_Sf_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_Us()
{
  {
    init_simple_test("BFu17ll_Sf_Us");
    static BFu17ll_Sf_Us lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_Us");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_Us.v2");
    check_field_offset(lv, v3, 4, "BFu17ll_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_Us(Test_BFu17ll_Sf_Us, "BFu17ll_Sf_Us", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Sf_Vp()
{
  {
    init_simple_test("BFu17ll_Sf_Vp");
    static BFu17ll_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu17ll_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Sf_Vp");
    check_field_offset(lv, v2, 3, "BFu17ll_Sf_Vp.v2");
    check_field_offset(lv, v3, 4, "BFu17ll_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Sf_Vp(Test_BFu17ll_Sf_Vp, "BFu17ll_Sf_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Uc_Sf()
{
  {
    init_simple_test("BFu17ll_Uc_Sf");
    static BFu17ll_Uc_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu17ll_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Uc_Sf");
    check_field_offset(lv, v2, 3, "BFu17ll_Uc_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu17ll_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Uc_Sf(Test_BFu17ll_Uc_Sf, "BFu17ll_Uc_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Ui_Sf()
{
  {
    init_simple_test("BFu17ll_Ui_Sf");
    static BFu17ll_Ui_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu17ll_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Ui_Sf");
    check_field_offset(lv, v2, 3, "BFu17ll_Ui_Sf.v2");
    check_field_offset(lv, v3, 7, "BFu17ll_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Ui_Sf(Test_BFu17ll_Ui_Sf, "BFu17ll_Ui_Sf", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Ul_Sf()
{
  {
    init_simple_test("BFu17ll_Ul_Sf");
    static BFu17ll_Ul_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu17ll_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Ul_Sf");
    check_field_offset(lv, v2, 3, "BFu17ll_Ul_Sf.v2");
    check_field_offset(lv, v3, 11, "BFu17ll_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Ul_Sf(Test_BFu17ll_Ul_Sf, "BFu17ll_Ul_Sf", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Us_Sf()
{
  {
    init_simple_test("BFu17ll_Us_Sf");
    static BFu17ll_Us_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu17ll_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Us_Sf");
    check_field_offset(lv, v2, 3, "BFu17ll_Us_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu17ll_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Us_Sf(Test_BFu17ll_Us_Sf, "BFu17ll_Us_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu17ll_Vp_Sf()
{
  {
    init_simple_test("BFu17ll_Vp_Sf");
    static BFu17ll_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu17ll_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu17ll_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 17, 1, "BFu17ll_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 17, hide_ull(1LL<<16), "BFu17ll_Vp_Sf");
    check_field_offset(lv, v2, 3, "BFu17ll_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(11,7), "BFu17ll_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu17ll_Vp_Sf(Test_BFu17ll_Vp_Sf, "BFu17ll_Vp_Sf", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu15i_Sf()
{
  {
    init_simple_test("BFu1c_BFu15i_Sf");
    static BFu1c_BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1c_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1c_BFu15i_Sf");
    check_field_offset(lv, v3, 2, "BFu1c_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu15i_Sf(Test_BFu1c_BFu15i_Sf, "BFu1c_BFu15i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu15ll_Sf()
{
  {
    init_simple_test("BFu1c_BFu15ll_Sf");
    static BFu1c_BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1c_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1c_BFu15ll_Sf");
    check_field_offset(lv, v3, 2, "BFu1c_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu15ll_Sf(Test_BFu1c_BFu15ll_Sf, "BFu1c_BFu15ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu15s_Sf()
{
  {
    init_simple_test("BFu1c_BFu15s_Sf");
    static BFu1c_BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1c_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1c_BFu15s_Sf");
    check_field_offset(lv, v3, 2, "BFu1c_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu15s_Sf(Test_BFu1c_BFu15s_Sf, "BFu1c_BFu15s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu16i_Sf()
{
  {
    init_simple_test("BFu1c_BFu16i_Sf");
    static BFu1c_BFu16i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1c_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1c_BFu16i_Sf");
    check_field_offset(lv, v3, 3, "BFu1c_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu16i_Sf(Test_BFu1c_BFu16i_Sf, "BFu1c_BFu16i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu16ll_Sf()
{
  {
    init_simple_test("BFu1c_BFu16ll_Sf");
    static BFu1c_BFu16ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1c_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1c_BFu16ll_Sf");
    check_field_offset(lv, v3, 3, "BFu1c_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu16ll_Sf(Test_BFu1c_BFu16ll_Sf, "BFu1c_BFu16ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu16s_Sf()
{
  {
    init_simple_test("BFu1c_BFu16s_Sf");
    static BFu1c_BFu16s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1c_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1c_BFu16s_Sf");
    check_field_offset(lv, v3, 3, "BFu1c_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu16s_Sf(Test_BFu1c_BFu16s_Sf, "BFu1c_BFu16s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu17i_Sf()
{
  {
    init_simple_test("BFu1c_BFu17i_Sf");
    static BFu1c_BFu17i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1c_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1c_BFu17i_Sf");
    check_field_offset(lv, v3, 3, "BFu1c_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu17i_Sf(Test_BFu1c_BFu17i_Sf, "BFu1c_BFu17i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu17ll_Sf()
{
  {
    init_simple_test("BFu1c_BFu17ll_Sf");
    static BFu1c_BFu17ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1c_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1c_BFu17ll_Sf");
    check_field_offset(lv, v3, 3, "BFu1c_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu17ll_Sf(Test_BFu1c_BFu17ll_Sf, "BFu1c_BFu17ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu1c_Sf()
{
  {
    init_simple_test("BFu1c_BFu1c_Sf");
    static BFu1c_BFu1c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1c_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu1c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1c_BFu1c_Sf");
    check_field_offset(lv, v3, 1, "BFu1c_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu1c_Sf(Test_BFu1c_BFu1c_Sf, "BFu1c_BFu1c_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu1i_Sf()
{
  {
    init_simple_test("BFu1c_BFu1i_Sf");
    static BFu1c_BFu1i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1c_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu1i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1c_BFu1i_Sf");
    check_field_offset(lv, v3, 1, "BFu1c_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu1i_Sf(Test_BFu1c_BFu1i_Sf, "BFu1c_BFu1i_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu1ll_Sf()
{
  {
    init_simple_test("BFu1c_BFu1ll_Sf");
    static BFu1c_BFu1ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1c_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1c_BFu1ll_Sf");
    check_field_offset(lv, v3, 1, "BFu1c_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu1ll_Sf(Test_BFu1c_BFu1ll_Sf, "BFu1c_BFu1ll_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu1s_Sf()
{
  {
    init_simple_test("BFu1c_BFu1s_Sf");
    static BFu1c_BFu1s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1c_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu1s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1c_BFu1s_Sf");
    check_field_offset(lv, v3, 1, "BFu1c_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu1s_Sf(Test_BFu1c_BFu1s_Sf, "BFu1c_BFu1s_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu31i_Sf()
{
  {
    init_simple_test("BFu1c_BFu31i_Sf");
    static BFu1c_BFu31i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu1c_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1c_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1c_BFu31i_Sf");
    check_field_offset(lv, v3, 4, "BFu1c_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu31i_Sf(Test_BFu1c_BFu31i_Sf, "BFu1c_BFu31i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu31ll_Sf()
{
  {
    init_simple_test("BFu1c_BFu31ll_Sf");
    static BFu1c_BFu31ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu1c_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1c_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1c_BFu31ll_Sf");
    check_field_offset(lv, v3, 4, "BFu1c_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu31ll_Sf(Test_BFu1c_BFu31ll_Sf, "BFu1c_BFu31ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu32i_Sf()
{
  {
    init_simple_test("BFu1c_BFu32i_Sf");
    static BFu1c_BFu32i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1c_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1c_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1c_BFu32i_Sf");
    check_field_offset(lv, v3, 5, "BFu1c_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu32i_Sf(Test_BFu1c_BFu32i_Sf, "BFu1c_BFu32i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu32ll_Sf()
{
  {
    init_simple_test("BFu1c_BFu32ll_Sf");
    static BFu1c_BFu32ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1c_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1c_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1c_BFu32ll_Sf");
    check_field_offset(lv, v3, 5, "BFu1c_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu32ll_Sf(Test_BFu1c_BFu32ll_Sf, "BFu1c_BFu32ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu33_Sf()
{
  {
    init_simple_test("BFu1c_BFu33_Sf");
    static BFu1c_BFu33_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1c_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "BFu1c_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "BFu1c_BFu33_Sf");
    check_field_offset(lv, v3, 5, "BFu1c_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu33_Sf(Test_BFu1c_BFu33_Sf, "BFu1c_BFu33_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu7c_Sf()
{
  {
    init_simple_test("BFu1c_BFu7c_Sf");
    static BFu1c_BFu7c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1c_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1c_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1c_BFu7c_Sf");
    check_field_offset(lv, v3, 1, "BFu1c_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu7c_Sf(Test_BFu1c_BFu7c_Sf, "BFu1c_BFu7c_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu7i_Sf()
{
  {
    init_simple_test("BFu1c_BFu7i_Sf");
    static BFu1c_BFu7i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1c_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1c_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1c_BFu7i_Sf");
    check_field_offset(lv, v3, 1, "BFu1c_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu7i_Sf(Test_BFu1c_BFu7i_Sf, "BFu1c_BFu7i_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu7ll_Sf()
{
  {
    init_simple_test("BFu1c_BFu7ll_Sf");
    static BFu1c_BFu7ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1c_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1c_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1c_BFu7ll_Sf");
    check_field_offset(lv, v3, 1, "BFu1c_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu7ll_Sf(Test_BFu1c_BFu7ll_Sf, "BFu1c_BFu7ll_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu7s_Sf()
{
  {
    init_simple_test("BFu1c_BFu7s_Sf");
    static BFu1c_BFu7s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1c_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1c_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1c_BFu7s_Sf");
    check_field_offset(lv, v3, 1, "BFu1c_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu7s_Sf(Test_BFu1c_BFu7s_Sf, "BFu1c_BFu7s_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu8c_Sf()
{
  {
    init_simple_test("BFu1c_BFu8c_Sf");
    static BFu1c_BFu8c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1c_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1c_BFu8c_Sf");
    check_field_offset(lv, v3, 2, "BFu1c_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu8c_Sf(Test_BFu1c_BFu8c_Sf, "BFu1c_BFu8c_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu8i_Sf()
{
  {
    init_simple_test("BFu1c_BFu8i_Sf");
    static BFu1c_BFu8i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1c_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1c_BFu8i_Sf");
    check_field_offset(lv, v3, 2, "BFu1c_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu8i_Sf(Test_BFu1c_BFu8i_Sf, "BFu1c_BFu8i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu8ll_Sf()
{
  {
    init_simple_test("BFu1c_BFu8ll_Sf");
    static BFu1c_BFu8ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1c_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1c_BFu8ll_Sf");
    check_field_offset(lv, v3, 2, "BFu1c_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu8ll_Sf(Test_BFu1c_BFu8ll_Sf, "BFu1c_BFu8ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu8s_Sf()
{
  {
    init_simple_test("BFu1c_BFu8s_Sf");
    static BFu1c_BFu8s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1c_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1c_BFu8s_Sf");
    check_field_offset(lv, v3, 2, "BFu1c_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu8s_Sf(Test_BFu1c_BFu8s_Sf, "BFu1c_BFu8s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu9i_Sf()
{
  {
    init_simple_test("BFu1c_BFu9i_Sf");
    static BFu1c_BFu9i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1c_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1c_BFu9i_Sf");
    check_field_offset(lv, v3, 2, "BFu1c_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu9i_Sf(Test_BFu1c_BFu9i_Sf, "BFu1c_BFu9i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu9ll_Sf()
{
  {
    init_simple_test("BFu1c_BFu9ll_Sf");
    static BFu1c_BFu9ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1c_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1c_BFu9ll_Sf");
    check_field_offset(lv, v3, 2, "BFu1c_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu9ll_Sf(Test_BFu1c_BFu9ll_Sf, "BFu1c_BFu9ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_BFu9s_Sf()
{
  {
    init_simple_test("BFu1c_BFu9s_Sf");
    static BFu1c_BFu9s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_BFu9s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1c_BFu9s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1c_BFu9s_Sf");
    check_field_offset(lv, v3, 2, "BFu1c_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_BFu9s_Sf(Test_BFu1c_BFu9s_Sf, "BFu1c_BFu9s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_C_Sf()
{
  {
    init_simple_test("BFu1c_C_Sf");
    static BFu1c_C_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_C_Sf");
    check_field_offset(lv, v2, 1, "BFu1c_C_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu1c_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_C_Sf(Test_BFu1c_C_Sf, "BFu1c_C_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_D_Sf()
{
  {
    init_simple_test("BFu1c_D_Sf");
    static BFu1c_D_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu1c_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_D_Sf");
    check_field_offset(lv, v2, 1, "BFu1c_D_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu1c_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_D_Sf(Test_BFu1c_D_Sf, "BFu1c_D_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_F_Sf()
{
  {
    init_simple_test("BFu1c_F_Sf");
    static BFu1c_F_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1c_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_F_Sf");
    check_field_offset(lv, v2, 1, "BFu1c_F_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu1c_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_F_Sf(Test_BFu1c_F_Sf, "BFu1c_F_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_I_Sf()
{
  {
    init_simple_test("BFu1c_I_Sf");
    static BFu1c_I_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1c_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_I_Sf");
    check_field_offset(lv, v2, 1, "BFu1c_I_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu1c_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_I_Sf(Test_BFu1c_I_Sf, "BFu1c_I_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Ip_Sf()
{
  {
    init_simple_test("BFu1c_Ip_Sf");
    static BFu1c_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1c_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Ip_Sf");
    check_field_offset(lv, v2, 1, "BFu1c_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu1c_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Ip_Sf(Test_BFu1c_Ip_Sf, "BFu1c_Ip_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_L_Sf()
{
  {
    init_simple_test("BFu1c_L_Sf");
    static BFu1c_L_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu1c_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_L_Sf");
    check_field_offset(lv, v2, 1, "BFu1c_L_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu1c_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_L_Sf(Test_BFu1c_L_Sf, "BFu1c_L_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_S_Sf()
{
  {
    init_simple_test("BFu1c_S_Sf");
    static BFu1c_S_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_S_Sf");
    check_field_offset(lv, v2, 1, "BFu1c_S_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu1c_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_S_Sf(Test_BFu1c_S_Sf, "BFu1c_S_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf()
{
  {
    init_simple_test("BFu1c_Sf");
    static BFu1c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf");
    check_field_offset(lv, v2, 1, "BFu1c_Sf.v2");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf(Test_BFu1c_Sf, "BFu1c_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu15i()
{
  {
    init_simple_test("BFu1c_Sf_BFu15i");
    static BFu1c_Sf_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu15i");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu1c_Sf_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu1c_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu15i(Test_BFu1c_Sf_BFu15i, "BFu1c_Sf_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu15ll()
{
  {
    init_simple_test("BFu1c_Sf_BFu15ll");
    static BFu1c_Sf_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu15ll");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu1c_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu1c_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu15ll(Test_BFu1c_Sf_BFu15ll, "BFu1c_Sf_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu15s()
{
  {
    init_simple_test("BFu1c_Sf_BFu15s");
    static BFu1c_Sf_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu15s");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu1c_Sf_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu1c_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu15s(Test_BFu1c_Sf_BFu15s, "BFu1c_Sf_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu16i()
{
  {
    init_simple_test("BFu1c_Sf_BFu16i");
    static BFu1c_Sf_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu16i");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu1c_Sf_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu1c_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu16i(Test_BFu1c_Sf_BFu16i, "BFu1c_Sf_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu16ll()
{
  {
    init_simple_test("BFu1c_Sf_BFu16ll");
    static BFu1c_Sf_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu16ll");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu1c_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu1c_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu16ll(Test_BFu1c_Sf_BFu16ll, "BFu1c_Sf_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu16s()
{
  {
    init_simple_test("BFu1c_Sf_BFu16s");
    static BFu1c_Sf_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu16s");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu1c_Sf_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu1c_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu16s(Test_BFu1c_Sf_BFu16s, "BFu1c_Sf_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu17i()
{
  {
    init_simple_test("BFu1c_Sf_BFu17i");
    static BFu1c_Sf_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(BFu1c_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu17i");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "BFu1c_Sf_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "BFu1c_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu17i(Test_BFu1c_Sf_BFu17i, "BFu1c_Sf_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu17ll()
{
  {
    init_simple_test("BFu1c_Sf_BFu17ll");
    static BFu1c_Sf_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu1c_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu17ll");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "BFu1c_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "BFu1c_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu17ll(Test_BFu1c_Sf_BFu17ll, "BFu1c_Sf_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu1c()
{
  {
    init_simple_test("BFu1c_Sf_BFu1c");
    static BFu1c_Sf_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu1c");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu1c_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu1c(Test_BFu1c_Sf_BFu1c, "BFu1c_Sf_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu1i()
{
  {
    init_simple_test("BFu1c_Sf_BFu1i");
    static BFu1c_Sf_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu1i");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu1c_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu1i(Test_BFu1c_Sf_BFu1i, "BFu1c_Sf_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu1ll()
{
  {
    init_simple_test("BFu1c_Sf_BFu1ll");
    static BFu1c_Sf_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu1ll");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu1c_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu1ll(Test_BFu1c_Sf_BFu1ll, "BFu1c_Sf_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu1s()
{
  {
    init_simple_test("BFu1c_Sf_BFu1s");
    static BFu1c_Sf_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu1s");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu1c_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu1s(Test_BFu1c_Sf_BFu1s, "BFu1c_Sf_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu31i()
{
  {
    init_simple_test("BFu1c_Sf_BFu31i");
    static BFu1c_Sf_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(BFu1c_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu31i");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "BFu1c_Sf_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "BFu1c_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu31i(Test_BFu1c_Sf_BFu31i, "BFu1c_Sf_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu31ll()
{
  {
    init_simple_test("BFu1c_Sf_BFu31ll");
    static BFu1c_Sf_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu1c_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu31ll");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "BFu1c_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "BFu1c_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu31ll(Test_BFu1c_Sf_BFu31ll, "BFu1c_Sf_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu32i()
{
  {
    init_simple_test("BFu1c_Sf_BFu32i");
    static BFu1c_Sf_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(BFu1c_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu32i");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "BFu1c_Sf_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "BFu1c_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu32i(Test_BFu1c_Sf_BFu32i, "BFu1c_Sf_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu32ll()
{
  {
    init_simple_test("BFu1c_Sf_BFu32ll");
    static BFu1c_Sf_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu1c_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu32ll");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "BFu1c_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "BFu1c_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu32ll(Test_BFu1c_Sf_BFu32ll, "BFu1c_Sf_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu33()
{
  {
    init_simple_test("BFu1c_Sf_BFu33");
    static BFu1c_Sf_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(BFu1c_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu33");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "BFu1c_Sf_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "BFu1c_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu33(Test_BFu1c_Sf_BFu33, "BFu1c_Sf_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu7c()
{
  {
    init_simple_test("BFu1c_Sf_BFu7c");
    static BFu1c_Sf_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu7c");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu1c_Sf_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu1c_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu7c(Test_BFu1c_Sf_BFu7c, "BFu1c_Sf_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu7i()
{
  {
    init_simple_test("BFu1c_Sf_BFu7i");
    static BFu1c_Sf_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu7i");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu1c_Sf_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu1c_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu7i(Test_BFu1c_Sf_BFu7i, "BFu1c_Sf_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu7ll()
{
  {
    init_simple_test("BFu1c_Sf_BFu7ll");
    static BFu1c_Sf_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu7ll");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu1c_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu1c_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu7ll(Test_BFu1c_Sf_BFu7ll, "BFu1c_Sf_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu7s()
{
  {
    init_simple_test("BFu1c_Sf_BFu7s");
    static BFu1c_Sf_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu7s");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu1c_Sf_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu1c_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu7s(Test_BFu1c_Sf_BFu7s, "BFu1c_Sf_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu8c()
{
  {
    init_simple_test("BFu1c_Sf_BFu8c");
    static BFu1c_Sf_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu8c");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu1c_Sf_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu1c_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu8c(Test_BFu1c_Sf_BFu8c, "BFu1c_Sf_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu8i()
{
  {
    init_simple_test("BFu1c_Sf_BFu8i");
    static BFu1c_Sf_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu8i");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu1c_Sf_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu1c_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu8i(Test_BFu1c_Sf_BFu8i, "BFu1c_Sf_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu8ll()
{
  {
    init_simple_test("BFu1c_Sf_BFu8ll");
    static BFu1c_Sf_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu8ll");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu1c_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu1c_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu8ll(Test_BFu1c_Sf_BFu8ll, "BFu1c_Sf_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu8s()
{
  {
    init_simple_test("BFu1c_Sf_BFu8s");
    static BFu1c_Sf_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu8s");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu1c_Sf_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu1c_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu8s(Test_BFu1c_Sf_BFu8s, "BFu1c_Sf_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu9i()
{
  {
    init_simple_test("BFu1c_Sf_BFu9i");
    static BFu1c_Sf_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu9i");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu1c_Sf_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu1c_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu9i(Test_BFu1c_Sf_BFu9i, "BFu1c_Sf_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu9ll()
{
  {
    init_simple_test("BFu1c_Sf_BFu9ll");
    static BFu1c_Sf_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu9ll");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu1c_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu1c_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu9ll(Test_BFu1c_Sf_BFu9ll, "BFu1c_Sf_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_BFu9s()
{
  {
    init_simple_test("BFu1c_Sf_BFu9s");
    static BFu1c_Sf_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_BFu9s");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu1c_Sf_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu1c_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_BFu9s(Test_BFu1c_Sf_BFu9s, "BFu1c_Sf_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_C()
{
  {
    init_simple_test("BFu1c_Sf_C");
    static BFu1c_Sf_C lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_C");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_C.v2");
    check_field_offset(lv, v3, 2, "BFu1c_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_C(Test_BFu1c_Sf_C, "BFu1c_Sf_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_D()
{
  {
    init_simple_test("BFu1c_Sf_D");
    static BFu1c_Sf_D lv;
    check2(sizeof(lv), 10, "sizeof(BFu1c_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_D");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_D.v2");
    check_field_offset(lv, v3, 2, "BFu1c_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_D(Test_BFu1c_Sf_D, "BFu1c_Sf_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_F()
{
  {
    init_simple_test("BFu1c_Sf_F");
    static BFu1c_Sf_F lv;
    check2(sizeof(lv), 6, "sizeof(BFu1c_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_F");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_F.v2");
    check_field_offset(lv, v3, 2, "BFu1c_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_F(Test_BFu1c_Sf_F, "BFu1c_Sf_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_I()
{
  {
    init_simple_test("BFu1c_Sf_I");
    static BFu1c_Sf_I lv;
    check2(sizeof(lv), 6, "sizeof(BFu1c_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_I");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_I.v2");
    check_field_offset(lv, v3, 2, "BFu1c_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_I(Test_BFu1c_Sf_I, "BFu1c_Sf_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_Ip()
{
  {
    init_simple_test("BFu1c_Sf_Ip");
    static BFu1c_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1c_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_Ip");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_Ip.v2");
    check_field_offset(lv, v3, 2, "BFu1c_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_Ip(Test_BFu1c_Sf_Ip, "BFu1c_Sf_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_L()
{
  {
    init_simple_test("BFu1c_Sf_L");
    static BFu1c_Sf_L lv;
    check2(sizeof(lv), 10, "sizeof(BFu1c_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_L");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_L.v2");
    check_field_offset(lv, v3, 2, "BFu1c_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_L(Test_BFu1c_Sf_L, "BFu1c_Sf_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_S()
{
  {
    init_simple_test("BFu1c_Sf_S");
    static BFu1c_Sf_S lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_S");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_S.v2");
    check_field_offset(lv, v3, 2, "BFu1c_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_S(Test_BFu1c_Sf_S, "BFu1c_Sf_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_Sf()
{
  {
    init_simple_test("BFu1c_Sf_Sf");
    static BFu1c_Sf_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_Sf");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu1c_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_Sf(Test_BFu1c_Sf_Sf, "BFu1c_Sf_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_Uc()
{
  {
    init_simple_test("BFu1c_Sf_Uc");
    static BFu1c_Sf_Uc lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_Uc");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_Uc.v2");
    check_field_offset(lv, v3, 2, "BFu1c_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_Uc(Test_BFu1c_Sf_Uc, "BFu1c_Sf_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_Ui()
{
  {
    init_simple_test("BFu1c_Sf_Ui");
    static BFu1c_Sf_Ui lv;
    check2(sizeof(lv), 6, "sizeof(BFu1c_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_Ui");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_Ui.v2");
    check_field_offset(lv, v3, 2, "BFu1c_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_Ui(Test_BFu1c_Sf_Ui, "BFu1c_Sf_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_Ul()
{
  {
    init_simple_test("BFu1c_Sf_Ul");
    static BFu1c_Sf_Ul lv;
    check2(sizeof(lv), 10, "sizeof(BFu1c_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_Ul");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_Ul.v2");
    check_field_offset(lv, v3, 2, "BFu1c_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_Ul(Test_BFu1c_Sf_Ul, "BFu1c_Sf_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_Us()
{
  {
    init_simple_test("BFu1c_Sf_Us");
    static BFu1c_Sf_Us lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_Us");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_Us.v2");
    check_field_offset(lv, v3, 2, "BFu1c_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_Us(Test_BFu1c_Sf_Us, "BFu1c_Sf_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Sf_Vp()
{
  {
    init_simple_test("BFu1c_Sf_Vp");
    static BFu1c_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1c_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Sf_Vp");
    check_field_offset(lv, v2, 1, "BFu1c_Sf_Vp.v2");
    check_field_offset(lv, v3, 2, "BFu1c_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Sf_Vp(Test_BFu1c_Sf_Vp, "BFu1c_Sf_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Uc_Sf()
{
  {
    init_simple_test("BFu1c_Uc_Sf");
    static BFu1c_Uc_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1c_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Uc_Sf");
    check_field_offset(lv, v2, 1, "BFu1c_Uc_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu1c_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Uc_Sf(Test_BFu1c_Uc_Sf, "BFu1c_Uc_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Ui_Sf()
{
  {
    init_simple_test("BFu1c_Ui_Sf");
    static BFu1c_Ui_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1c_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Ui_Sf");
    check_field_offset(lv, v2, 1, "BFu1c_Ui_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu1c_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Ui_Sf(Test_BFu1c_Ui_Sf, "BFu1c_Ui_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Ul_Sf()
{
  {
    init_simple_test("BFu1c_Ul_Sf");
    static BFu1c_Ul_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu1c_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Ul_Sf");
    check_field_offset(lv, v2, 1, "BFu1c_Ul_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu1c_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Ul_Sf(Test_BFu1c_Ul_Sf, "BFu1c_Ul_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Us_Sf()
{
  {
    init_simple_test("BFu1c_Us_Sf");
    static BFu1c_Us_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1c_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Us_Sf");
    check_field_offset(lv, v2, 1, "BFu1c_Us_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu1c_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Us_Sf(Test_BFu1c_Us_Sf, "BFu1c_Us_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1c_Vp_Sf()
{
  {
    init_simple_test("BFu1c_Vp_Sf");
    static BFu1c_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1c_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1c_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1c_Vp_Sf");
    check_field_offset(lv, v2, 1, "BFu1c_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu1c_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1c_Vp_Sf(Test_BFu1c_Vp_Sf, "BFu1c_Vp_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu15i_Sf()
{
  {
    init_simple_test("BFu1i_BFu15i_Sf");
    static BFu1i_BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1i_BFu15i_Sf");
    check_field_offset(lv, v3, 2, "BFu1i_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu15i_Sf(Test_BFu1i_BFu15i_Sf, "BFu1i_BFu15i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu15ll_Sf()
{
  {
    init_simple_test("BFu1i_BFu15ll_Sf");
    static BFu1i_BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1i_BFu15ll_Sf");
    check_field_offset(lv, v3, 2, "BFu1i_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu15ll_Sf(Test_BFu1i_BFu15ll_Sf, "BFu1i_BFu15ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu15s_Sf()
{
  {
    init_simple_test("BFu1i_BFu15s_Sf");
    static BFu1i_BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1i_BFu15s_Sf");
    check_field_offset(lv, v3, 2, "BFu1i_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu15s_Sf(Test_BFu1i_BFu15s_Sf, "BFu1i_BFu15s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu16i_Sf()
{
  {
    init_simple_test("BFu1i_BFu16i_Sf");
    static BFu1i_BFu16i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1i_BFu16i_Sf");
    check_field_offset(lv, v3, 3, "BFu1i_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu16i_Sf(Test_BFu1i_BFu16i_Sf, "BFu1i_BFu16i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu16ll_Sf()
{
  {
    init_simple_test("BFu1i_BFu16ll_Sf");
    static BFu1i_BFu16ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1i_BFu16ll_Sf");
    check_field_offset(lv, v3, 3, "BFu1i_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu16ll_Sf(Test_BFu1i_BFu16ll_Sf, "BFu1i_BFu16ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu16s_Sf()
{
  {
    init_simple_test("BFu1i_BFu16s_Sf");
    static BFu1i_BFu16s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1i_BFu16s_Sf");
    check_field_offset(lv, v3, 3, "BFu1i_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu16s_Sf(Test_BFu1i_BFu16s_Sf, "BFu1i_BFu16s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu17i_Sf()
{
  {
    init_simple_test("BFu1i_BFu17i_Sf");
    static BFu1i_BFu17i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1i_BFu17i_Sf");
    check_field_offset(lv, v3, 3, "BFu1i_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu17i_Sf(Test_BFu1i_BFu17i_Sf, "BFu1i_BFu17i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu17ll_Sf()
{
  {
    init_simple_test("BFu1i_BFu17ll_Sf");
    static BFu1i_BFu17ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1i_BFu17ll_Sf");
    check_field_offset(lv, v3, 3, "BFu1i_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu17ll_Sf(Test_BFu1i_BFu17ll_Sf, "BFu1i_BFu17ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu1c_Sf()
{
  {
    init_simple_test("BFu1i_BFu1c_Sf");
    static BFu1i_BFu1c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1i_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu1c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1i_BFu1c_Sf");
    check_field_offset(lv, v3, 1, "BFu1i_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu1c_Sf(Test_BFu1i_BFu1c_Sf, "BFu1i_BFu1c_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu1i_Sf()
{
  {
    init_simple_test("BFu1i_BFu1i_Sf");
    static BFu1i_BFu1i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1i_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu1i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1i_BFu1i_Sf");
    check_field_offset(lv, v3, 1, "BFu1i_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu1i_Sf(Test_BFu1i_BFu1i_Sf, "BFu1i_BFu1i_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu1ll_Sf()
{
  {
    init_simple_test("BFu1i_BFu1ll_Sf");
    static BFu1i_BFu1ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1i_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1i_BFu1ll_Sf");
    check_field_offset(lv, v3, 1, "BFu1i_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu1ll_Sf(Test_BFu1i_BFu1ll_Sf, "BFu1i_BFu1ll_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu1s_Sf()
{
  {
    init_simple_test("BFu1i_BFu1s_Sf");
    static BFu1i_BFu1s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1i_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu1s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1i_BFu1s_Sf");
    check_field_offset(lv, v3, 1, "BFu1i_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu1s_Sf(Test_BFu1i_BFu1s_Sf, "BFu1i_BFu1s_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu31i_Sf()
{
  {
    init_simple_test("BFu1i_BFu31i_Sf");
    static BFu1i_BFu31i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu1i_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1i_BFu31i_Sf");
    check_field_offset(lv, v3, 4, "BFu1i_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu31i_Sf(Test_BFu1i_BFu31i_Sf, "BFu1i_BFu31i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu31ll_Sf()
{
  {
    init_simple_test("BFu1i_BFu31ll_Sf");
    static BFu1i_BFu31ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu1i_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1i_BFu31ll_Sf");
    check_field_offset(lv, v3, 4, "BFu1i_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu31ll_Sf(Test_BFu1i_BFu31ll_Sf, "BFu1i_BFu31ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu32i_Sf()
{
  {
    init_simple_test("BFu1i_BFu32i_Sf");
    static BFu1i_BFu32i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1i_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1i_BFu32i_Sf");
    check_field_offset(lv, v3, 5, "BFu1i_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu32i_Sf(Test_BFu1i_BFu32i_Sf, "BFu1i_BFu32i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu32ll_Sf()
{
  {
    init_simple_test("BFu1i_BFu32ll_Sf");
    static BFu1i_BFu32ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1i_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1i_BFu32ll_Sf");
    check_field_offset(lv, v3, 5, "BFu1i_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu32ll_Sf(Test_BFu1i_BFu32ll_Sf, "BFu1i_BFu32ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu33_Sf()
{
  {
    init_simple_test("BFu1i_BFu33_Sf");
    static BFu1i_BFu33_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1i_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "BFu1i_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "BFu1i_BFu33_Sf");
    check_field_offset(lv, v3, 5, "BFu1i_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu33_Sf(Test_BFu1i_BFu33_Sf, "BFu1i_BFu33_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu7c_Sf()
{
  {
    init_simple_test("BFu1i_BFu7c_Sf");
    static BFu1i_BFu7c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1i_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1i_BFu7c_Sf");
    check_field_offset(lv, v3, 1, "BFu1i_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu7c_Sf(Test_BFu1i_BFu7c_Sf, "BFu1i_BFu7c_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu7i_Sf()
{
  {
    init_simple_test("BFu1i_BFu7i_Sf");
    static BFu1i_BFu7i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1i_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1i_BFu7i_Sf");
    check_field_offset(lv, v3, 1, "BFu1i_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu7i_Sf(Test_BFu1i_BFu7i_Sf, "BFu1i_BFu7i_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu7ll_Sf()
{
  {
    init_simple_test("BFu1i_BFu7ll_Sf");
    static BFu1i_BFu7ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1i_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1i_BFu7ll_Sf");
    check_field_offset(lv, v3, 1, "BFu1i_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu7ll_Sf(Test_BFu1i_BFu7ll_Sf, "BFu1i_BFu7ll_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu7s_Sf()
{
  {
    init_simple_test("BFu1i_BFu7s_Sf");
    static BFu1i_BFu7s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1i_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1i_BFu7s_Sf");
    check_field_offset(lv, v3, 1, "BFu1i_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu7s_Sf(Test_BFu1i_BFu7s_Sf, "BFu1i_BFu7s_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu8c_Sf()
{
  {
    init_simple_test("BFu1i_BFu8c_Sf");
    static BFu1i_BFu8c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1i_BFu8c_Sf");
    check_field_offset(lv, v3, 2, "BFu1i_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu8c_Sf(Test_BFu1i_BFu8c_Sf, "BFu1i_BFu8c_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu8i_Sf()
{
  {
    init_simple_test("BFu1i_BFu8i_Sf");
    static BFu1i_BFu8i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1i_BFu8i_Sf");
    check_field_offset(lv, v3, 2, "BFu1i_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu8i_Sf(Test_BFu1i_BFu8i_Sf, "BFu1i_BFu8i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu8ll_Sf()
{
  {
    init_simple_test("BFu1i_BFu8ll_Sf");
    static BFu1i_BFu8ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1i_BFu8ll_Sf");
    check_field_offset(lv, v3, 2, "BFu1i_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu8ll_Sf(Test_BFu1i_BFu8ll_Sf, "BFu1i_BFu8ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu8s_Sf()
{
  {
    init_simple_test("BFu1i_BFu8s_Sf");
    static BFu1i_BFu8s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1i_BFu8s_Sf");
    check_field_offset(lv, v3, 2, "BFu1i_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu8s_Sf(Test_BFu1i_BFu8s_Sf, "BFu1i_BFu8s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu9i_Sf()
{
  {
    init_simple_test("BFu1i_BFu9i_Sf");
    static BFu1i_BFu9i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1i_BFu9i_Sf");
    check_field_offset(lv, v3, 2, "BFu1i_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu9i_Sf(Test_BFu1i_BFu9i_Sf, "BFu1i_BFu9i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu9ll_Sf()
{
  {
    init_simple_test("BFu1i_BFu9ll_Sf");
    static BFu1i_BFu9ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1i_BFu9ll_Sf");
    check_field_offset(lv, v3, 2, "BFu1i_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu9ll_Sf(Test_BFu1i_BFu9ll_Sf, "BFu1i_BFu9ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_BFu9s_Sf()
{
  {
    init_simple_test("BFu1i_BFu9s_Sf");
    static BFu1i_BFu9s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1i_BFu9s_Sf");
    check_field_offset(lv, v3, 2, "BFu1i_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_BFu9s_Sf(Test_BFu1i_BFu9s_Sf, "BFu1i_BFu9s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_C_Sf()
{
  {
    init_simple_test("BFu1i_C_Sf");
    static BFu1i_C_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_C_Sf");
    check_field_offset(lv, v2, 1, "BFu1i_C_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu1i_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_C_Sf(Test_BFu1i_C_Sf, "BFu1i_C_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_D_Sf()
{
  {
    init_simple_test("BFu1i_D_Sf");
    static BFu1i_D_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu1i_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_D_Sf");
    check_field_offset(lv, v2, 1, "BFu1i_D_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu1i_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_D_Sf(Test_BFu1i_D_Sf, "BFu1i_D_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_F_Sf()
{
  {
    init_simple_test("BFu1i_F_Sf");
    static BFu1i_F_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1i_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_F_Sf");
    check_field_offset(lv, v2, 1, "BFu1i_F_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu1i_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_F_Sf(Test_BFu1i_F_Sf, "BFu1i_F_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_I_Sf()
{
  {
    init_simple_test("BFu1i_I_Sf");
    static BFu1i_I_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1i_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_I_Sf");
    check_field_offset(lv, v2, 1, "BFu1i_I_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu1i_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_I_Sf(Test_BFu1i_I_Sf, "BFu1i_I_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Ip_Sf()
{
  {
    init_simple_test("BFu1i_Ip_Sf");
    static BFu1i_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1i_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Ip_Sf");
    check_field_offset(lv, v2, 1, "BFu1i_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu1i_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Ip_Sf(Test_BFu1i_Ip_Sf, "BFu1i_Ip_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_L_Sf()
{
  {
    init_simple_test("BFu1i_L_Sf");
    static BFu1i_L_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu1i_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_L_Sf");
    check_field_offset(lv, v2, 1, "BFu1i_L_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu1i_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_L_Sf(Test_BFu1i_L_Sf, "BFu1i_L_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_S_Sf()
{
  {
    init_simple_test("BFu1i_S_Sf");
    static BFu1i_S_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_S_Sf");
    check_field_offset(lv, v2, 1, "BFu1i_S_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu1i_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_S_Sf(Test_BFu1i_S_Sf, "BFu1i_S_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf()
{
  {
    init_simple_test("BFu1i_Sf");
    static BFu1i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf");
    check_field_offset(lv, v2, 1, "BFu1i_Sf.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf(Test_BFu1i_Sf, "BFu1i_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu15i()
{
  {
    init_simple_test("BFu1i_Sf_BFu15i");
    static BFu1i_Sf_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu15i");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu1i_Sf_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu1i_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu15i(Test_BFu1i_Sf_BFu15i, "BFu1i_Sf_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu15ll()
{
  {
    init_simple_test("BFu1i_Sf_BFu15ll");
    static BFu1i_Sf_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu15ll");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu1i_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu1i_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu15ll(Test_BFu1i_Sf_BFu15ll, "BFu1i_Sf_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu15s()
{
  {
    init_simple_test("BFu1i_Sf_BFu15s");
    static BFu1i_Sf_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu15s");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu1i_Sf_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu1i_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu15s(Test_BFu1i_Sf_BFu15s, "BFu1i_Sf_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu16i()
{
  {
    init_simple_test("BFu1i_Sf_BFu16i");
    static BFu1i_Sf_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu16i");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu1i_Sf_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu1i_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu16i(Test_BFu1i_Sf_BFu16i, "BFu1i_Sf_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu16ll()
{
  {
    init_simple_test("BFu1i_Sf_BFu16ll");
    static BFu1i_Sf_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu16ll");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu1i_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu1i_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu16ll(Test_BFu1i_Sf_BFu16ll, "BFu1i_Sf_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu16s()
{
  {
    init_simple_test("BFu1i_Sf_BFu16s");
    static BFu1i_Sf_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu16s");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu1i_Sf_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu1i_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu16s(Test_BFu1i_Sf_BFu16s, "BFu1i_Sf_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu17i()
{
  {
    init_simple_test("BFu1i_Sf_BFu17i");
    static BFu1i_Sf_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(BFu1i_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu17i");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "BFu1i_Sf_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "BFu1i_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu17i(Test_BFu1i_Sf_BFu17i, "BFu1i_Sf_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu17ll()
{
  {
    init_simple_test("BFu1i_Sf_BFu17ll");
    static BFu1i_Sf_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu1i_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu17ll");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "BFu1i_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "BFu1i_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu17ll(Test_BFu1i_Sf_BFu17ll, "BFu1i_Sf_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu1c()
{
  {
    init_simple_test("BFu1i_Sf_BFu1c");
    static BFu1i_Sf_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu1c");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu1i_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu1c(Test_BFu1i_Sf_BFu1c, "BFu1i_Sf_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu1i()
{
  {
    init_simple_test("BFu1i_Sf_BFu1i");
    static BFu1i_Sf_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu1i");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu1i_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu1i(Test_BFu1i_Sf_BFu1i, "BFu1i_Sf_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu1ll()
{
  {
    init_simple_test("BFu1i_Sf_BFu1ll");
    static BFu1i_Sf_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu1ll");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu1i_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu1ll(Test_BFu1i_Sf_BFu1ll, "BFu1i_Sf_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu1s()
{
  {
    init_simple_test("BFu1i_Sf_BFu1s");
    static BFu1i_Sf_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu1s");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu1i_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu1s(Test_BFu1i_Sf_BFu1s, "BFu1i_Sf_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu31i()
{
  {
    init_simple_test("BFu1i_Sf_BFu31i");
    static BFu1i_Sf_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(BFu1i_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu31i");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "BFu1i_Sf_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "BFu1i_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu31i(Test_BFu1i_Sf_BFu31i, "BFu1i_Sf_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu31ll()
{
  {
    init_simple_test("BFu1i_Sf_BFu31ll");
    static BFu1i_Sf_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu1i_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu31ll");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "BFu1i_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "BFu1i_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu31ll(Test_BFu1i_Sf_BFu31ll, "BFu1i_Sf_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu32i()
{
  {
    init_simple_test("BFu1i_Sf_BFu32i");
    static BFu1i_Sf_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(BFu1i_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu32i");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "BFu1i_Sf_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "BFu1i_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu32i(Test_BFu1i_Sf_BFu32i, "BFu1i_Sf_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu32ll()
{
  {
    init_simple_test("BFu1i_Sf_BFu32ll");
    static BFu1i_Sf_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu1i_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu32ll");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "BFu1i_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "BFu1i_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu32ll(Test_BFu1i_Sf_BFu32ll, "BFu1i_Sf_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu33()
{
  {
    init_simple_test("BFu1i_Sf_BFu33");
    static BFu1i_Sf_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(BFu1i_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu33");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "BFu1i_Sf_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "BFu1i_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu33(Test_BFu1i_Sf_BFu33, "BFu1i_Sf_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu7c()
{
  {
    init_simple_test("BFu1i_Sf_BFu7c");
    static BFu1i_Sf_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu7c");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu1i_Sf_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu1i_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu7c(Test_BFu1i_Sf_BFu7c, "BFu1i_Sf_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu7i()
{
  {
    init_simple_test("BFu1i_Sf_BFu7i");
    static BFu1i_Sf_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu7i");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu1i_Sf_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu1i_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu7i(Test_BFu1i_Sf_BFu7i, "BFu1i_Sf_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu7ll()
{
  {
    init_simple_test("BFu1i_Sf_BFu7ll");
    static BFu1i_Sf_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu7ll");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu1i_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu1i_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu7ll(Test_BFu1i_Sf_BFu7ll, "BFu1i_Sf_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu7s()
{
  {
    init_simple_test("BFu1i_Sf_BFu7s");
    static BFu1i_Sf_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu7s");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu1i_Sf_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu1i_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu7s(Test_BFu1i_Sf_BFu7s, "BFu1i_Sf_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu8c()
{
  {
    init_simple_test("BFu1i_Sf_BFu8c");
    static BFu1i_Sf_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu8c");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu1i_Sf_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu1i_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu8c(Test_BFu1i_Sf_BFu8c, "BFu1i_Sf_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu8i()
{
  {
    init_simple_test("BFu1i_Sf_BFu8i");
    static BFu1i_Sf_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu8i");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu1i_Sf_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu1i_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu8i(Test_BFu1i_Sf_BFu8i, "BFu1i_Sf_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu8ll()
{
  {
    init_simple_test("BFu1i_Sf_BFu8ll");
    static BFu1i_Sf_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu8ll");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu1i_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu1i_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu8ll(Test_BFu1i_Sf_BFu8ll, "BFu1i_Sf_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu8s()
{
  {
    init_simple_test("BFu1i_Sf_BFu8s");
    static BFu1i_Sf_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu8s");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu1i_Sf_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu1i_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu8s(Test_BFu1i_Sf_BFu8s, "BFu1i_Sf_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu9i()
{
  {
    init_simple_test("BFu1i_Sf_BFu9i");
    static BFu1i_Sf_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu9i");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu1i_Sf_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu1i_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu9i(Test_BFu1i_Sf_BFu9i, "BFu1i_Sf_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu9ll()
{
  {
    init_simple_test("BFu1i_Sf_BFu9ll");
    static BFu1i_Sf_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu9ll");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu1i_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu1i_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu9ll(Test_BFu1i_Sf_BFu9ll, "BFu1i_Sf_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_BFu9s()
{
  {
    init_simple_test("BFu1i_Sf_BFu9s");
    static BFu1i_Sf_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_BFu9s");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu1i_Sf_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu1i_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_BFu9s(Test_BFu1i_Sf_BFu9s, "BFu1i_Sf_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_C()
{
  {
    init_simple_test("BFu1i_Sf_C");
    static BFu1i_Sf_C lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_C");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_C.v2");
    check_field_offset(lv, v3, 2, "BFu1i_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_C(Test_BFu1i_Sf_C, "BFu1i_Sf_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_D()
{
  {
    init_simple_test("BFu1i_Sf_D");
    static BFu1i_Sf_D lv;
    check2(sizeof(lv), 10, "sizeof(BFu1i_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_D");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_D.v2");
    check_field_offset(lv, v3, 2, "BFu1i_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_D(Test_BFu1i_Sf_D, "BFu1i_Sf_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_F()
{
  {
    init_simple_test("BFu1i_Sf_F");
    static BFu1i_Sf_F lv;
    check2(sizeof(lv), 6, "sizeof(BFu1i_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_F");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_F.v2");
    check_field_offset(lv, v3, 2, "BFu1i_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_F(Test_BFu1i_Sf_F, "BFu1i_Sf_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_I()
{
  {
    init_simple_test("BFu1i_Sf_I");
    static BFu1i_Sf_I lv;
    check2(sizeof(lv), 6, "sizeof(BFu1i_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_I");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_I.v2");
    check_field_offset(lv, v3, 2, "BFu1i_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_I(Test_BFu1i_Sf_I, "BFu1i_Sf_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_Ip()
{
  {
    init_simple_test("BFu1i_Sf_Ip");
    static BFu1i_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1i_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_Ip");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_Ip.v2");
    check_field_offset(lv, v3, 2, "BFu1i_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_Ip(Test_BFu1i_Sf_Ip, "BFu1i_Sf_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_L()
{
  {
    init_simple_test("BFu1i_Sf_L");
    static BFu1i_Sf_L lv;
    check2(sizeof(lv), 10, "sizeof(BFu1i_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_L");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_L.v2");
    check_field_offset(lv, v3, 2, "BFu1i_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_L(Test_BFu1i_Sf_L, "BFu1i_Sf_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_S()
{
  {
    init_simple_test("BFu1i_Sf_S");
    static BFu1i_Sf_S lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_S");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_S.v2");
    check_field_offset(lv, v3, 2, "BFu1i_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_S(Test_BFu1i_Sf_S, "BFu1i_Sf_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_Sf()
{
  {
    init_simple_test("BFu1i_Sf_Sf");
    static BFu1i_Sf_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_Sf");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu1i_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_Sf(Test_BFu1i_Sf_Sf, "BFu1i_Sf_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_Uc()
{
  {
    init_simple_test("BFu1i_Sf_Uc");
    static BFu1i_Sf_Uc lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_Uc");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_Uc.v2");
    check_field_offset(lv, v3, 2, "BFu1i_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_Uc(Test_BFu1i_Sf_Uc, "BFu1i_Sf_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_Ui()
{
  {
    init_simple_test("BFu1i_Sf_Ui");
    static BFu1i_Sf_Ui lv;
    check2(sizeof(lv), 6, "sizeof(BFu1i_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_Ui");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_Ui.v2");
    check_field_offset(lv, v3, 2, "BFu1i_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_Ui(Test_BFu1i_Sf_Ui, "BFu1i_Sf_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_Ul()
{
  {
    init_simple_test("BFu1i_Sf_Ul");
    static BFu1i_Sf_Ul lv;
    check2(sizeof(lv), 10, "sizeof(BFu1i_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_Ul");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_Ul.v2");
    check_field_offset(lv, v3, 2, "BFu1i_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_Ul(Test_BFu1i_Sf_Ul, "BFu1i_Sf_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_Us()
{
  {
    init_simple_test("BFu1i_Sf_Us");
    static BFu1i_Sf_Us lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_Us");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_Us.v2");
    check_field_offset(lv, v3, 2, "BFu1i_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_Us(Test_BFu1i_Sf_Us, "BFu1i_Sf_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Sf_Vp()
{
  {
    init_simple_test("BFu1i_Sf_Vp");
    static BFu1i_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1i_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Sf_Vp");
    check_field_offset(lv, v2, 1, "BFu1i_Sf_Vp.v2");
    check_field_offset(lv, v3, 2, "BFu1i_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Sf_Vp(Test_BFu1i_Sf_Vp, "BFu1i_Sf_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Uc_Sf()
{
  {
    init_simple_test("BFu1i_Uc_Sf");
    static BFu1i_Uc_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Uc_Sf");
    check_field_offset(lv, v2, 1, "BFu1i_Uc_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu1i_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Uc_Sf(Test_BFu1i_Uc_Sf, "BFu1i_Uc_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Ui_Sf()
{
  {
    init_simple_test("BFu1i_Ui_Sf");
    static BFu1i_Ui_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1i_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Ui_Sf");
    check_field_offset(lv, v2, 1, "BFu1i_Ui_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu1i_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Ui_Sf(Test_BFu1i_Ui_Sf, "BFu1i_Ui_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Ul_Sf()
{
  {
    init_simple_test("BFu1i_Ul_Sf");
    static BFu1i_Ul_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu1i_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Ul_Sf");
    check_field_offset(lv, v2, 1, "BFu1i_Ul_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu1i_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Ul_Sf(Test_BFu1i_Ul_Sf, "BFu1i_Ul_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Us_Sf()
{
  {
    init_simple_test("BFu1i_Us_Sf");
    static BFu1i_Us_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1i_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Us_Sf");
    check_field_offset(lv, v2, 1, "BFu1i_Us_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu1i_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Us_Sf(Test_BFu1i_Us_Sf, "BFu1i_Us_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Vp_Sf()
{
  {
    init_simple_test("BFu1i_Vp_Sf");
    static BFu1i_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1i_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Vp_Sf");
    check_field_offset(lv, v2, 1, "BFu1i_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu1i_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1i_Vp_Sf(Test_BFu1i_Vp_Sf, "BFu1i_Vp_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu15i_Sf()
{
  {
    init_simple_test("BFu1ll_BFu15i_Sf");
    static BFu1ll_BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1ll_BFu15i_Sf");
    check_field_offset(lv, v3, 2, "BFu1ll_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu15i_Sf(Test_BFu1ll_BFu15i_Sf, "BFu1ll_BFu15i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu15ll_Sf()
{
  {
    init_simple_test("BFu1ll_BFu15ll_Sf");
    static BFu1ll_BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1ll_BFu15ll_Sf");
    check_field_offset(lv, v3, 2, "BFu1ll_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu15ll_Sf(Test_BFu1ll_BFu15ll_Sf, "BFu1ll_BFu15ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu15s_Sf()
{
  {
    init_simple_test("BFu1ll_BFu15s_Sf");
    static BFu1ll_BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1ll_BFu15s_Sf");
    check_field_offset(lv, v3, 2, "BFu1ll_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu15s_Sf(Test_BFu1ll_BFu15s_Sf, "BFu1ll_BFu15s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu16i_Sf()
{
  {
    init_simple_test("BFu1ll_BFu16i_Sf");
    static BFu1ll_BFu16i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1ll_BFu16i_Sf");
    check_field_offset(lv, v3, 3, "BFu1ll_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu16i_Sf(Test_BFu1ll_BFu16i_Sf, "BFu1ll_BFu16i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu16ll_Sf()
{
  {
    init_simple_test("BFu1ll_BFu16ll_Sf");
    static BFu1ll_BFu16ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1ll_BFu16ll_Sf");
    check_field_offset(lv, v3, 3, "BFu1ll_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu16ll_Sf(Test_BFu1ll_BFu16ll_Sf, "BFu1ll_BFu16ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu16s_Sf()
{
  {
    init_simple_test("BFu1ll_BFu16s_Sf");
    static BFu1ll_BFu16s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1ll_BFu16s_Sf");
    check_field_offset(lv, v3, 3, "BFu1ll_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu16s_Sf(Test_BFu1ll_BFu16s_Sf, "BFu1ll_BFu16s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu17i_Sf()
{
  {
    init_simple_test("BFu1ll_BFu17i_Sf");
    static BFu1ll_BFu17i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1ll_BFu17i_Sf");
    check_field_offset(lv, v3, 3, "BFu1ll_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu17i_Sf(Test_BFu1ll_BFu17i_Sf, "BFu1ll_BFu17i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu17ll_Sf()
{
  {
    init_simple_test("BFu1ll_BFu17ll_Sf");
    static BFu1ll_BFu17ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1ll_BFu17ll_Sf");
    check_field_offset(lv, v3, 3, "BFu1ll_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu17ll_Sf(Test_BFu1ll_BFu17ll_Sf, "BFu1ll_BFu17ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1c_Sf()
{
  {
    init_simple_test("BFu1ll_BFu1c_Sf");
    static BFu1ll_BFu1c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1c_Sf");
    check_field_offset(lv, v3, 1, "BFu1ll_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1c_Sf(Test_BFu1ll_BFu1c_Sf, "BFu1ll_BFu1c_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1i_Sf()
{
  {
    init_simple_test("BFu1ll_BFu1i_Sf");
    static BFu1ll_BFu1i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1i_Sf");
    check_field_offset(lv, v3, 1, "BFu1ll_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1i_Sf(Test_BFu1ll_BFu1i_Sf, "BFu1ll_BFu1i_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1ll_Sf()
{
  {
    init_simple_test("BFu1ll_BFu1ll_Sf");
    static BFu1ll_BFu1ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1ll_Sf");
    check_field_offset(lv, v3, 1, "BFu1ll_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1ll_Sf(Test_BFu1ll_BFu1ll_Sf, "BFu1ll_BFu1ll_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1s_Sf()
{
  {
    init_simple_test("BFu1ll_BFu1s_Sf");
    static BFu1ll_BFu1s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1s_Sf");
    check_field_offset(lv, v3, 1, "BFu1ll_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1s_Sf(Test_BFu1ll_BFu1s_Sf, "BFu1ll_BFu1s_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu31i_Sf()
{
  {
    init_simple_test("BFu1ll_BFu31i_Sf");
    static BFu1ll_BFu31i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1ll_BFu31i_Sf");
    check_field_offset(lv, v3, 4, "BFu1ll_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu31i_Sf(Test_BFu1ll_BFu31i_Sf, "BFu1ll_BFu31i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu31ll_Sf()
{
  {
    init_simple_test("BFu1ll_BFu31ll_Sf");
    static BFu1ll_BFu31ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1ll_BFu31ll_Sf");
    check_field_offset(lv, v3, 4, "BFu1ll_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu31ll_Sf(Test_BFu1ll_BFu31ll_Sf, "BFu1ll_BFu31ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu32i_Sf()
{
  {
    init_simple_test("BFu1ll_BFu32i_Sf");
    static BFu1ll_BFu32i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1ll_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1ll_BFu32i_Sf");
    check_field_offset(lv, v3, 5, "BFu1ll_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu32i_Sf(Test_BFu1ll_BFu32i_Sf, "BFu1ll_BFu32i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu32ll_Sf()
{
  {
    init_simple_test("BFu1ll_BFu32ll_Sf");
    static BFu1ll_BFu32ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1ll_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1ll_BFu32ll_Sf");
    check_field_offset(lv, v3, 5, "BFu1ll_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu32ll_Sf(Test_BFu1ll_BFu32ll_Sf, "BFu1ll_BFu32ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu33_Sf()
{
  {
    init_simple_test("BFu1ll_BFu33_Sf");
    static BFu1ll_BFu33_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1ll_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "BFu1ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "BFu1ll_BFu33_Sf");
    check_field_offset(lv, v3, 5, "BFu1ll_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu33_Sf(Test_BFu1ll_BFu33_Sf, "BFu1ll_BFu33_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7c_Sf()
{
  {
    init_simple_test("BFu1ll_BFu7c_Sf");
    static BFu1ll_BFu7c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7c_Sf");
    check_field_offset(lv, v3, 1, "BFu1ll_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7c_Sf(Test_BFu1ll_BFu7c_Sf, "BFu1ll_BFu7c_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7i_Sf()
{
  {
    init_simple_test("BFu1ll_BFu7i_Sf");
    static BFu1ll_BFu7i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7i_Sf");
    check_field_offset(lv, v3, 1, "BFu1ll_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7i_Sf(Test_BFu1ll_BFu7i_Sf, "BFu1ll_BFu7i_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7ll_Sf()
{
  {
    init_simple_test("BFu1ll_BFu7ll_Sf");
    static BFu1ll_BFu7ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7ll_Sf");
    check_field_offset(lv, v3, 1, "BFu1ll_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7ll_Sf(Test_BFu1ll_BFu7ll_Sf, "BFu1ll_BFu7ll_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7s_Sf()
{
  {
    init_simple_test("BFu1ll_BFu7s_Sf");
    static BFu1ll_BFu7s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7s_Sf");
    check_field_offset(lv, v3, 1, "BFu1ll_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7s_Sf(Test_BFu1ll_BFu7s_Sf, "BFu1ll_BFu7s_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8c_Sf()
{
  {
    init_simple_test("BFu1ll_BFu8c_Sf");
    static BFu1ll_BFu8c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8c_Sf");
    check_field_offset(lv, v3, 2, "BFu1ll_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8c_Sf(Test_BFu1ll_BFu8c_Sf, "BFu1ll_BFu8c_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8i_Sf()
{
  {
    init_simple_test("BFu1ll_BFu8i_Sf");
    static BFu1ll_BFu8i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8i_Sf");
    check_field_offset(lv, v3, 2, "BFu1ll_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8i_Sf(Test_BFu1ll_BFu8i_Sf, "BFu1ll_BFu8i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8ll_Sf()
{
  {
    init_simple_test("BFu1ll_BFu8ll_Sf");
    static BFu1ll_BFu8ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8ll_Sf");
    check_field_offset(lv, v3, 2, "BFu1ll_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8ll_Sf(Test_BFu1ll_BFu8ll_Sf, "BFu1ll_BFu8ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8s_Sf()
{
  {
    init_simple_test("BFu1ll_BFu8s_Sf");
    static BFu1ll_BFu8s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8s_Sf");
    check_field_offset(lv, v3, 2, "BFu1ll_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8s_Sf(Test_BFu1ll_BFu8s_Sf, "BFu1ll_BFu8s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu9i_Sf()
{
  {
    init_simple_test("BFu1ll_BFu9i_Sf");
    static BFu1ll_BFu9i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1ll_BFu9i_Sf");
    check_field_offset(lv, v3, 2, "BFu1ll_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu9i_Sf(Test_BFu1ll_BFu9i_Sf, "BFu1ll_BFu9i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu9ll_Sf()
{
  {
    init_simple_test("BFu1ll_BFu9ll_Sf");
    static BFu1ll_BFu9ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1ll_BFu9ll_Sf");
    check_field_offset(lv, v3, 2, "BFu1ll_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu9ll_Sf(Test_BFu1ll_BFu9ll_Sf, "BFu1ll_BFu9ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu9s_Sf()
{
  {
    init_simple_test("BFu1ll_BFu9s_Sf");
    static BFu1ll_BFu9s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1ll_BFu9s_Sf");
    check_field_offset(lv, v3, 2, "BFu1ll_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu9s_Sf(Test_BFu1ll_BFu9s_Sf, "BFu1ll_BFu9s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_C_Sf()
{
  {
    init_simple_test("BFu1ll_C_Sf");
    static BFu1ll_C_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_C_Sf");
    check_field_offset(lv, v2, 1, "BFu1ll_C_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu1ll_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_C_Sf(Test_BFu1ll_C_Sf, "BFu1ll_C_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_D_Sf()
{
  {
    init_simple_test("BFu1ll_D_Sf");
    static BFu1ll_D_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu1ll_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_D_Sf");
    check_field_offset(lv, v2, 1, "BFu1ll_D_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu1ll_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_D_Sf(Test_BFu1ll_D_Sf, "BFu1ll_D_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_F_Sf()
{
  {
    init_simple_test("BFu1ll_F_Sf");
    static BFu1ll_F_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1ll_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_F_Sf");
    check_field_offset(lv, v2, 1, "BFu1ll_F_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu1ll_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_F_Sf(Test_BFu1ll_F_Sf, "BFu1ll_F_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_I_Sf()
{
  {
    init_simple_test("BFu1ll_I_Sf");
    static BFu1ll_I_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1ll_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_I_Sf");
    check_field_offset(lv, v2, 1, "BFu1ll_I_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu1ll_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_I_Sf(Test_BFu1ll_I_Sf, "BFu1ll_I_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Ip_Sf()
{
  {
    init_simple_test("BFu1ll_Ip_Sf");
    static BFu1ll_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Ip_Sf");
    check_field_offset(lv, v2, 1, "BFu1ll_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu1ll_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Ip_Sf(Test_BFu1ll_Ip_Sf, "BFu1ll_Ip_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_L_Sf()
{
  {
    init_simple_test("BFu1ll_L_Sf");
    static BFu1ll_L_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu1ll_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_L_Sf");
    check_field_offset(lv, v2, 1, "BFu1ll_L_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu1ll_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_L_Sf(Test_BFu1ll_L_Sf, "BFu1ll_L_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_S_Sf()
{
  {
    init_simple_test("BFu1ll_S_Sf");
    static BFu1ll_S_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_S_Sf");
    check_field_offset(lv, v2, 1, "BFu1ll_S_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu1ll_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_S_Sf(Test_BFu1ll_S_Sf, "BFu1ll_S_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf()
{
  {
    init_simple_test("BFu1ll_Sf");
    static BFu1ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf(Test_BFu1ll_Sf, "BFu1ll_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu15i()
{
  {
    init_simple_test("BFu1ll_Sf_BFu15i");
    static BFu1ll_Sf_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu15i");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu1ll_Sf_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu1ll_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu15i(Test_BFu1ll_Sf_BFu15i, "BFu1ll_Sf_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu15ll()
{
  {
    init_simple_test("BFu1ll_Sf_BFu15ll");
    static BFu1ll_Sf_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu15ll");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu1ll_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu1ll_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu15ll(Test_BFu1ll_Sf_BFu15ll, "BFu1ll_Sf_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu15s()
{
  {
    init_simple_test("BFu1ll_Sf_BFu15s");
    static BFu1ll_Sf_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu15s");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu1ll_Sf_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu1ll_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu15s(Test_BFu1ll_Sf_BFu15s, "BFu1ll_Sf_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu16i()
{
  {
    init_simple_test("BFu1ll_Sf_BFu16i");
    static BFu1ll_Sf_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu16i");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu1ll_Sf_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu1ll_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu16i(Test_BFu1ll_Sf_BFu16i, "BFu1ll_Sf_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu16ll()
{
  {
    init_simple_test("BFu1ll_Sf_BFu16ll");
    static BFu1ll_Sf_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu16ll");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu1ll_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu1ll_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu16ll(Test_BFu1ll_Sf_BFu16ll, "BFu1ll_Sf_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu16s()
{
  {
    init_simple_test("BFu1ll_Sf_BFu16s");
    static BFu1ll_Sf_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu16s");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu1ll_Sf_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu1ll_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu16s(Test_BFu1ll_Sf_BFu16s, "BFu1ll_Sf_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu17i()
{
  {
    init_simple_test("BFu1ll_Sf_BFu17i");
    static BFu1ll_Sf_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu17i");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "BFu1ll_Sf_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "BFu1ll_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu17i(Test_BFu1ll_Sf_BFu17i, "BFu1ll_Sf_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu17ll()
{
  {
    init_simple_test("BFu1ll_Sf_BFu17ll");
    static BFu1ll_Sf_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu17ll");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "BFu1ll_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "BFu1ll_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu17ll(Test_BFu1ll_Sf_BFu17ll, "BFu1ll_Sf_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu1c()
{
  {
    init_simple_test("BFu1ll_Sf_BFu1c");
    static BFu1ll_Sf_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu1c");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu1ll_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu1c(Test_BFu1ll_Sf_BFu1c, "BFu1ll_Sf_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu1i()
{
  {
    init_simple_test("BFu1ll_Sf_BFu1i");
    static BFu1ll_Sf_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu1i");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu1ll_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu1i(Test_BFu1ll_Sf_BFu1i, "BFu1ll_Sf_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu1ll()
{
  {
    init_simple_test("BFu1ll_Sf_BFu1ll");
    static BFu1ll_Sf_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu1ll");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu1ll_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu1ll(Test_BFu1ll_Sf_BFu1ll, "BFu1ll_Sf_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu1s()
{
  {
    init_simple_test("BFu1ll_Sf_BFu1s");
    static BFu1ll_Sf_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu1s");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu1ll_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu1s(Test_BFu1ll_Sf_BFu1s, "BFu1ll_Sf_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu31i()
{
  {
    init_simple_test("BFu1ll_Sf_BFu31i");
    static BFu1ll_Sf_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(BFu1ll_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu31i");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "BFu1ll_Sf_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "BFu1ll_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu31i(Test_BFu1ll_Sf_BFu31i, "BFu1ll_Sf_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu31ll()
{
  {
    init_simple_test("BFu1ll_Sf_BFu31ll");
    static BFu1ll_Sf_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu1ll_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu31ll");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "BFu1ll_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "BFu1ll_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu31ll(Test_BFu1ll_Sf_BFu31ll, "BFu1ll_Sf_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu32i()
{
  {
    init_simple_test("BFu1ll_Sf_BFu32i");
    static BFu1ll_Sf_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(BFu1ll_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu32i");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "BFu1ll_Sf_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "BFu1ll_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu32i(Test_BFu1ll_Sf_BFu32i, "BFu1ll_Sf_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu32ll()
{
  {
    init_simple_test("BFu1ll_Sf_BFu32ll");
    static BFu1ll_Sf_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu1ll_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu32ll");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "BFu1ll_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "BFu1ll_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu32ll(Test_BFu1ll_Sf_BFu32ll, "BFu1ll_Sf_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu33()
{
  {
    init_simple_test("BFu1ll_Sf_BFu33");
    static BFu1ll_Sf_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(BFu1ll_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu33");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "BFu1ll_Sf_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "BFu1ll_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu33(Test_BFu1ll_Sf_BFu33, "BFu1ll_Sf_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu7c()
{
  {
    init_simple_test("BFu1ll_Sf_BFu7c");
    static BFu1ll_Sf_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu7c");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu1ll_Sf_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu1ll_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu7c(Test_BFu1ll_Sf_BFu7c, "BFu1ll_Sf_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu7i()
{
  {
    init_simple_test("BFu1ll_Sf_BFu7i");
    static BFu1ll_Sf_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu7i");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu1ll_Sf_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu1ll_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu7i(Test_BFu1ll_Sf_BFu7i, "BFu1ll_Sf_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu7ll()
{
  {
    init_simple_test("BFu1ll_Sf_BFu7ll");
    static BFu1ll_Sf_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu7ll");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu1ll_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu1ll_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu7ll(Test_BFu1ll_Sf_BFu7ll, "BFu1ll_Sf_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu7s()
{
  {
    init_simple_test("BFu1ll_Sf_BFu7s");
    static BFu1ll_Sf_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu7s");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu1ll_Sf_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu1ll_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu7s(Test_BFu1ll_Sf_BFu7s, "BFu1ll_Sf_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu8c()
{
  {
    init_simple_test("BFu1ll_Sf_BFu8c");
    static BFu1ll_Sf_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu8c");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu1ll_Sf_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu1ll_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu8c(Test_BFu1ll_Sf_BFu8c, "BFu1ll_Sf_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu8i()
{
  {
    init_simple_test("BFu1ll_Sf_BFu8i");
    static BFu1ll_Sf_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu8i");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu1ll_Sf_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu1ll_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu8i(Test_BFu1ll_Sf_BFu8i, "BFu1ll_Sf_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu8ll()
{
  {
    init_simple_test("BFu1ll_Sf_BFu8ll");
    static BFu1ll_Sf_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu8ll");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu1ll_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu1ll_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu8ll(Test_BFu1ll_Sf_BFu8ll, "BFu1ll_Sf_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu8s()
{
  {
    init_simple_test("BFu1ll_Sf_BFu8s");
    static BFu1ll_Sf_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu8s");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu1ll_Sf_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu1ll_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu8s(Test_BFu1ll_Sf_BFu8s, "BFu1ll_Sf_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu9i()
{
  {
    init_simple_test("BFu1ll_Sf_BFu9i");
    static BFu1ll_Sf_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu9i");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu1ll_Sf_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu1ll_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu9i(Test_BFu1ll_Sf_BFu9i, "BFu1ll_Sf_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu9ll()
{
  {
    init_simple_test("BFu1ll_Sf_BFu9ll");
    static BFu1ll_Sf_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu9ll");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu1ll_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu1ll_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu9ll(Test_BFu1ll_Sf_BFu9ll, "BFu1ll_Sf_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_BFu9s()
{
  {
    init_simple_test("BFu1ll_Sf_BFu9s");
    static BFu1ll_Sf_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_BFu9s");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu1ll_Sf_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu1ll_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_BFu9s(Test_BFu1ll_Sf_BFu9s, "BFu1ll_Sf_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_C()
{
  {
    init_simple_test("BFu1ll_Sf_C");
    static BFu1ll_Sf_C lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_C");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_C.v2");
    check_field_offset(lv, v3, 2, "BFu1ll_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_C(Test_BFu1ll_Sf_C, "BFu1ll_Sf_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_D()
{
  {
    init_simple_test("BFu1ll_Sf_D");
    static BFu1ll_Sf_D lv;
    check2(sizeof(lv), 10, "sizeof(BFu1ll_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_D");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_D.v2");
    check_field_offset(lv, v3, 2, "BFu1ll_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_D(Test_BFu1ll_Sf_D, "BFu1ll_Sf_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_F()
{
  {
    init_simple_test("BFu1ll_Sf_F");
    static BFu1ll_Sf_F lv;
    check2(sizeof(lv), 6, "sizeof(BFu1ll_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_F");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_F.v2");
    check_field_offset(lv, v3, 2, "BFu1ll_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_F(Test_BFu1ll_Sf_F, "BFu1ll_Sf_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_I()
{
  {
    init_simple_test("BFu1ll_Sf_I");
    static BFu1ll_Sf_I lv;
    check2(sizeof(lv), 6, "sizeof(BFu1ll_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_I");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_I.v2");
    check_field_offset(lv, v3, 2, "BFu1ll_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_I(Test_BFu1ll_Sf_I, "BFu1ll_Sf_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_Ip()
{
  {
    init_simple_test("BFu1ll_Sf_Ip");
    static BFu1ll_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_Ip");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_Ip.v2");
    check_field_offset(lv, v3, 2, "BFu1ll_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_Ip(Test_BFu1ll_Sf_Ip, "BFu1ll_Sf_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_L()
{
  {
    init_simple_test("BFu1ll_Sf_L");
    static BFu1ll_Sf_L lv;
    check2(sizeof(lv), 10, "sizeof(BFu1ll_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_L");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_L.v2");
    check_field_offset(lv, v3, 2, "BFu1ll_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_L(Test_BFu1ll_Sf_L, "BFu1ll_Sf_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_S()
{
  {
    init_simple_test("BFu1ll_Sf_S");
    static BFu1ll_Sf_S lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_S");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_S.v2");
    check_field_offset(lv, v3, 2, "BFu1ll_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_S(Test_BFu1ll_Sf_S, "BFu1ll_Sf_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_Sf()
{
  {
    init_simple_test("BFu1ll_Sf_Sf");
    static BFu1ll_Sf_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_Sf");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu1ll_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_Sf(Test_BFu1ll_Sf_Sf, "BFu1ll_Sf_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_Uc()
{
  {
    init_simple_test("BFu1ll_Sf_Uc");
    static BFu1ll_Sf_Uc lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_Uc");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_Uc.v2");
    check_field_offset(lv, v3, 2, "BFu1ll_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_Uc(Test_BFu1ll_Sf_Uc, "BFu1ll_Sf_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_Ui()
{
  {
    init_simple_test("BFu1ll_Sf_Ui");
    static BFu1ll_Sf_Ui lv;
    check2(sizeof(lv), 6, "sizeof(BFu1ll_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_Ui");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_Ui.v2");
    check_field_offset(lv, v3, 2, "BFu1ll_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_Ui(Test_BFu1ll_Sf_Ui, "BFu1ll_Sf_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_Ul()
{
  {
    init_simple_test("BFu1ll_Sf_Ul");
    static BFu1ll_Sf_Ul lv;
    check2(sizeof(lv), 10, "sizeof(BFu1ll_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_Ul");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_Ul.v2");
    check_field_offset(lv, v3, 2, "BFu1ll_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_Ul(Test_BFu1ll_Sf_Ul, "BFu1ll_Sf_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_Us()
{
  {
    init_simple_test("BFu1ll_Sf_Us");
    static BFu1ll_Sf_Us lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_Us");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_Us.v2");
    check_field_offset(lv, v3, 2, "BFu1ll_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_Us(Test_BFu1ll_Sf_Us, "BFu1ll_Sf_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Sf_Vp()
{
  {
    init_simple_test("BFu1ll_Sf_Vp");
    static BFu1ll_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Sf_Vp");
    check_field_offset(lv, v2, 1, "BFu1ll_Sf_Vp.v2");
    check_field_offset(lv, v3, 2, "BFu1ll_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Sf_Vp(Test_BFu1ll_Sf_Vp, "BFu1ll_Sf_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Uc_Sf()
{
  {
    init_simple_test("BFu1ll_Uc_Sf");
    static BFu1ll_Uc_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Uc_Sf");
    check_field_offset(lv, v2, 1, "BFu1ll_Uc_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu1ll_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Uc_Sf(Test_BFu1ll_Uc_Sf, "BFu1ll_Uc_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Ui_Sf()
{
  {
    init_simple_test("BFu1ll_Ui_Sf");
    static BFu1ll_Ui_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1ll_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Ui_Sf");
    check_field_offset(lv, v2, 1, "BFu1ll_Ui_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu1ll_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Ui_Sf(Test_BFu1ll_Ui_Sf, "BFu1ll_Ui_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Ul_Sf()
{
  {
    init_simple_test("BFu1ll_Ul_Sf");
    static BFu1ll_Ul_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu1ll_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Ul_Sf");
    check_field_offset(lv, v2, 1, "BFu1ll_Ul_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu1ll_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Ul_Sf(Test_BFu1ll_Ul_Sf, "BFu1ll_Ul_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Us_Sf()
{
  {
    init_simple_test("BFu1ll_Us_Sf");
    static BFu1ll_Us_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Us_Sf");
    check_field_offset(lv, v2, 1, "BFu1ll_Us_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu1ll_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Us_Sf(Test_BFu1ll_Us_Sf, "BFu1ll_Us_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Vp_Sf()
{
  {
    init_simple_test("BFu1ll_Vp_Sf");
    static BFu1ll_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Vp_Sf");
    check_field_offset(lv, v2, 1, "BFu1ll_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu1ll_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1ll_Vp_Sf(Test_BFu1ll_Vp_Sf, "BFu1ll_Vp_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu15i_Sf()
{
  {
    init_simple_test("BFu1s_BFu15i_Sf");
    static BFu1s_BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1s_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1s_BFu15i_Sf");
    check_field_offset(lv, v3, 2, "BFu1s_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu15i_Sf(Test_BFu1s_BFu15i_Sf, "BFu1s_BFu15i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu15ll_Sf()
{
  {
    init_simple_test("BFu1s_BFu15ll_Sf");
    static BFu1s_BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1s_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1s_BFu15ll_Sf");
    check_field_offset(lv, v3, 2, "BFu1s_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu15ll_Sf(Test_BFu1s_BFu15ll_Sf, "BFu1s_BFu15ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu15s_Sf()
{
  {
    init_simple_test("BFu1s_BFu15s_Sf");
    static BFu1s_BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1s_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1s_BFu15s_Sf");
    check_field_offset(lv, v3, 2, "BFu1s_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu15s_Sf(Test_BFu1s_BFu15s_Sf, "BFu1s_BFu15s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu16i_Sf()
{
  {
    init_simple_test("BFu1s_BFu16i_Sf");
    static BFu1s_BFu16i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1s_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1s_BFu16i_Sf");
    check_field_offset(lv, v3, 3, "BFu1s_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu16i_Sf(Test_BFu1s_BFu16i_Sf, "BFu1s_BFu16i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu16ll_Sf()
{
  {
    init_simple_test("BFu1s_BFu16ll_Sf");
    static BFu1s_BFu16ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1s_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1s_BFu16ll_Sf");
    check_field_offset(lv, v3, 3, "BFu1s_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu16ll_Sf(Test_BFu1s_BFu16ll_Sf, "BFu1s_BFu16ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu16s_Sf()
{
  {
    init_simple_test("BFu1s_BFu16s_Sf");
    static BFu1s_BFu16s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1s_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1s_BFu16s_Sf");
    check_field_offset(lv, v3, 3, "BFu1s_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu16s_Sf(Test_BFu1s_BFu16s_Sf, "BFu1s_BFu16s_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu17i_Sf()
{
  {
    init_simple_test("BFu1s_BFu17i_Sf");
    static BFu1s_BFu17i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1s_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1s_BFu17i_Sf");
    check_field_offset(lv, v3, 3, "BFu1s_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu17i_Sf(Test_BFu1s_BFu17i_Sf, "BFu1s_BFu17i_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu17ll_Sf()
{
  {
    init_simple_test("BFu1s_BFu17ll_Sf");
    static BFu1s_BFu17ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1s_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1s_BFu17ll_Sf");
    check_field_offset(lv, v3, 3, "BFu1s_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu17ll_Sf(Test_BFu1s_BFu17ll_Sf, "BFu1s_BFu17ll_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1c_Sf()
{
  {
    init_simple_test("BFu1s_BFu1c_Sf");
    static BFu1s_BFu1c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1c_Sf");
    check_field_offset(lv, v3, 1, "BFu1s_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1c_Sf(Test_BFu1s_BFu1c_Sf, "BFu1s_BFu1c_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1i_Sf()
{
  {
    init_simple_test("BFu1s_BFu1i_Sf");
    static BFu1s_BFu1i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1i_Sf");
    check_field_offset(lv, v3, 1, "BFu1s_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1i_Sf(Test_BFu1s_BFu1i_Sf, "BFu1s_BFu1i_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1ll_Sf()
{
  {
    init_simple_test("BFu1s_BFu1ll_Sf");
    static BFu1s_BFu1ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1ll_Sf");
    check_field_offset(lv, v3, 1, "BFu1s_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1ll_Sf(Test_BFu1s_BFu1ll_Sf, "BFu1s_BFu1ll_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1s_Sf()
{
  {
    init_simple_test("BFu1s_BFu1s_Sf");
    static BFu1s_BFu1s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1s_Sf");
    check_field_offset(lv, v3, 1, "BFu1s_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1s_Sf(Test_BFu1s_BFu1s_Sf, "BFu1s_BFu1s_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu31i_Sf()
{
  {
    init_simple_test("BFu1s_BFu31i_Sf");
    static BFu1s_BFu31i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1s_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1s_BFu31i_Sf");
    check_field_offset(lv, v3, 4, "BFu1s_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu31i_Sf(Test_BFu1s_BFu31i_Sf, "BFu1s_BFu31i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu31ll_Sf()
{
  {
    init_simple_test("BFu1s_BFu31ll_Sf");
    static BFu1s_BFu31ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1s_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1s_BFu31ll_Sf");
    check_field_offset(lv, v3, 4, "BFu1s_BFu31ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu31ll_Sf(Test_BFu1s_BFu31ll_Sf, "BFu1s_BFu31ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu32i_Sf()
{
  {
    init_simple_test("BFu1s_BFu32i_Sf");
    static BFu1s_BFu32i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1s_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1s_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1s_BFu32i_Sf");
    check_field_offset(lv, v3, 5, "BFu1s_BFu32i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu32i_Sf(Test_BFu1s_BFu32i_Sf, "BFu1s_BFu32i_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu32ll_Sf()
{
  {
    init_simple_test("BFu1s_BFu32ll_Sf");
    static BFu1s_BFu32ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1s_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1s_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1s_BFu32ll_Sf");
    check_field_offset(lv, v3, 5, "BFu1s_BFu32ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu32ll_Sf(Test_BFu1s_BFu32ll_Sf, "BFu1s_BFu32ll_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu33_Sf()
{
  {
    init_simple_test("BFu1s_BFu33_Sf");
    static BFu1s_BFu33_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1s_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "BFu1s_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "BFu1s_BFu33_Sf");
    check_field_offset(lv, v3, 5, "BFu1s_BFu33_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu33_Sf(Test_BFu1s_BFu33_Sf, "BFu1s_BFu33_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7c_Sf()
{
  {
    init_simple_test("BFu1s_BFu7c_Sf");
    static BFu1s_BFu7c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7c_Sf");
    check_field_offset(lv, v3, 1, "BFu1s_BFu7c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7c_Sf(Test_BFu1s_BFu7c_Sf, "BFu1s_BFu7c_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7i_Sf()
{
  {
    init_simple_test("BFu1s_BFu7i_Sf");
    static BFu1s_BFu7i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7i_Sf");
    check_field_offset(lv, v3, 1, "BFu1s_BFu7i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7i_Sf(Test_BFu1s_BFu7i_Sf, "BFu1s_BFu7i_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7ll_Sf()
{
  {
    init_simple_test("BFu1s_BFu7ll_Sf");
    static BFu1s_BFu7ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7ll_Sf");
    check_field_offset(lv, v3, 1, "BFu1s_BFu7ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7ll_Sf(Test_BFu1s_BFu7ll_Sf, "BFu1s_BFu7ll_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7s_Sf()
{
  {
    init_simple_test("BFu1s_BFu7s_Sf");
    static BFu1s_BFu7s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7s_Sf");
    check_field_offset(lv, v3, 1, "BFu1s_BFu7s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7s_Sf(Test_BFu1s_BFu7s_Sf, "BFu1s_BFu7s_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8c_Sf()
{
  {
    init_simple_test("BFu1s_BFu8c_Sf");
    static BFu1s_BFu8c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8c_Sf");
    check_field_offset(lv, v3, 2, "BFu1s_BFu8c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8c_Sf(Test_BFu1s_BFu8c_Sf, "BFu1s_BFu8c_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8i_Sf()
{
  {
    init_simple_test("BFu1s_BFu8i_Sf");
    static BFu1s_BFu8i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8i_Sf");
    check_field_offset(lv, v3, 2, "BFu1s_BFu8i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8i_Sf(Test_BFu1s_BFu8i_Sf, "BFu1s_BFu8i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8ll_Sf()
{
  {
    init_simple_test("BFu1s_BFu8ll_Sf");
    static BFu1s_BFu8ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8ll_Sf");
    check_field_offset(lv, v3, 2, "BFu1s_BFu8ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8ll_Sf(Test_BFu1s_BFu8ll_Sf, "BFu1s_BFu8ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8s_Sf()
{
  {
    init_simple_test("BFu1s_BFu8s_Sf");
    static BFu1s_BFu8s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8s_Sf");
    check_field_offset(lv, v3, 2, "BFu1s_BFu8s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8s_Sf(Test_BFu1s_BFu8s_Sf, "BFu1s_BFu8s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu9i_Sf()
{
  {
    init_simple_test("BFu1s_BFu9i_Sf");
    static BFu1s_BFu9i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1s_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1s_BFu9i_Sf");
    check_field_offset(lv, v3, 2, "BFu1s_BFu9i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu9i_Sf(Test_BFu1s_BFu9i_Sf, "BFu1s_BFu9i_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu9ll_Sf()
{
  {
    init_simple_test("BFu1s_BFu9ll_Sf");
    static BFu1s_BFu9ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1s_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1s_BFu9ll_Sf");
    check_field_offset(lv, v3, 2, "BFu1s_BFu9ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu9ll_Sf(Test_BFu1s_BFu9ll_Sf, "BFu1s_BFu9ll_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu9s_Sf()
{
  {
    init_simple_test("BFu1s_BFu9s_Sf");
    static BFu1s_BFu9s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu9s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1s_BFu9s_Sf");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1s_BFu9s_Sf");
    check_field_offset(lv, v3, 2, "BFu1s_BFu9s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu9s_Sf(Test_BFu1s_BFu9s_Sf, "BFu1s_BFu9s_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_C_Sf()
{
  {
    init_simple_test("BFu1s_C_Sf");
    static BFu1s_C_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_C_Sf");
    check_field_offset(lv, v2, 1, "BFu1s_C_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu1s_C_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_C_Sf(Test_BFu1s_C_Sf, "BFu1s_C_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_D_Sf()
{
  {
    init_simple_test("BFu1s_D_Sf");
    static BFu1s_D_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu1s_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_D_Sf");
    check_field_offset(lv, v2, 1, "BFu1s_D_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu1s_D_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_D_Sf(Test_BFu1s_D_Sf, "BFu1s_D_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_F_Sf()
{
  {
    init_simple_test("BFu1s_F_Sf");
    static BFu1s_F_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1s_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_F_Sf");
    check_field_offset(lv, v2, 1, "BFu1s_F_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu1s_F_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_F_Sf(Test_BFu1s_F_Sf, "BFu1s_F_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_I_Sf()
{
  {
    init_simple_test("BFu1s_I_Sf");
    static BFu1s_I_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1s_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_I_Sf");
    check_field_offset(lv, v2, 1, "BFu1s_I_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu1s_I_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_I_Sf(Test_BFu1s_I_Sf, "BFu1s_I_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Ip_Sf()
{
  {
    init_simple_test("BFu1s_Ip_Sf");
    static BFu1s_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Ip_Sf");
    check_field_offset(lv, v2, 1, "BFu1s_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu1s_Ip_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Ip_Sf(Test_BFu1s_Ip_Sf, "BFu1s_Ip_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_L_Sf()
{
  {
    init_simple_test("BFu1s_L_Sf");
    static BFu1s_L_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu1s_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_L_Sf");
    check_field_offset(lv, v2, 1, "BFu1s_L_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu1s_L_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_L_Sf(Test_BFu1s_L_Sf, "BFu1s_L_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_S_Sf()
{
  {
    init_simple_test("BFu1s_S_Sf");
    static BFu1s_S_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_S_Sf");
    check_field_offset(lv, v2, 1, "BFu1s_S_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu1s_S_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_S_Sf(Test_BFu1s_S_Sf, "BFu1s_S_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf()
{
  {
    init_simple_test("BFu1s_Sf");
    static BFu1s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf");
    check_field_offset(lv, v2, 1, "BFu1s_Sf.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf(Test_BFu1s_Sf, "BFu1s_Sf", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu15i()
{
  {
    init_simple_test("BFu1s_Sf_BFu15i");
    static BFu1s_Sf_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu15i");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu1s_Sf_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu1s_Sf_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu15i(Test_BFu1s_Sf_BFu15i, "BFu1s_Sf_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu15ll()
{
  {
    init_simple_test("BFu1s_Sf_BFu15ll");
    static BFu1s_Sf_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu15ll");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu1s_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu1s_Sf_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu15ll(Test_BFu1s_Sf_BFu15ll, "BFu1s_Sf_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu15s()
{
  {
    init_simple_test("BFu1s_Sf_BFu15s");
    static BFu1s_Sf_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu15s");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu1s_Sf_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu1s_Sf_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu15s(Test_BFu1s_Sf_BFu15s, "BFu1s_Sf_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu16i()
{
  {
    init_simple_test("BFu1s_Sf_BFu16i");
    static BFu1s_Sf_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu16i");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu1s_Sf_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu1s_Sf_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu16i(Test_BFu1s_Sf_BFu16i, "BFu1s_Sf_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu16ll()
{
  {
    init_simple_test("BFu1s_Sf_BFu16ll");
    static BFu1s_Sf_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu16ll");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu1s_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu1s_Sf_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu16ll(Test_BFu1s_Sf_BFu16ll, "BFu1s_Sf_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu16s()
{
  {
    init_simple_test("BFu1s_Sf_BFu16s");
    static BFu1s_Sf_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu16s");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu1s_Sf_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu1s_Sf_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu16s(Test_BFu1s_Sf_BFu16s, "BFu1s_Sf_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu17i()
{
  {
    init_simple_test("BFu1s_Sf_BFu17i");
    static BFu1s_Sf_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu17i");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "BFu1s_Sf_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "BFu1s_Sf_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu17i(Test_BFu1s_Sf_BFu17i, "BFu1s_Sf_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu17ll()
{
  {
    init_simple_test("BFu1s_Sf_BFu17ll");
    static BFu1s_Sf_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu17ll");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "BFu1s_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "BFu1s_Sf_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu17ll(Test_BFu1s_Sf_BFu17ll, "BFu1s_Sf_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu1c()
{
  {
    init_simple_test("BFu1s_Sf_BFu1c");
    static BFu1s_Sf_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu1c");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu1s_Sf_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu1c(Test_BFu1s_Sf_BFu1c, "BFu1s_Sf_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu1i()
{
  {
    init_simple_test("BFu1s_Sf_BFu1i");
    static BFu1s_Sf_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu1i");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu1s_Sf_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu1i(Test_BFu1s_Sf_BFu1i, "BFu1s_Sf_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu1ll()
{
  {
    init_simple_test("BFu1s_Sf_BFu1ll");
    static BFu1s_Sf_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu1ll");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu1s_Sf_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu1ll(Test_BFu1s_Sf_BFu1ll, "BFu1s_Sf_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu1s()
{
  {
    init_simple_test("BFu1s_Sf_BFu1s");
    static BFu1s_Sf_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu1s");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu1s_Sf_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu1s(Test_BFu1s_Sf_BFu1s, "BFu1s_Sf_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu31i()
{
  {
    init_simple_test("BFu1s_Sf_BFu31i");
    static BFu1s_Sf_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(BFu1s_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu31i");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "BFu1s_Sf_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "BFu1s_Sf_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu31i(Test_BFu1s_Sf_BFu31i, "BFu1s_Sf_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu31ll()
{
  {
    init_simple_test("BFu1s_Sf_BFu31ll");
    static BFu1s_Sf_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu1s_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu31ll");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "BFu1s_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "BFu1s_Sf_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu31ll(Test_BFu1s_Sf_BFu31ll, "BFu1s_Sf_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu32i()
{
  {
    init_simple_test("BFu1s_Sf_BFu32i");
    static BFu1s_Sf_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(BFu1s_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu32i");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "BFu1s_Sf_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "BFu1s_Sf_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu32i(Test_BFu1s_Sf_BFu32i, "BFu1s_Sf_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu32ll()
{
  {
    init_simple_test("BFu1s_Sf_BFu32ll");
    static BFu1s_Sf_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu1s_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu32ll");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "BFu1s_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "BFu1s_Sf_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu32ll(Test_BFu1s_Sf_BFu32ll, "BFu1s_Sf_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu33()
{
  {
    init_simple_test("BFu1s_Sf_BFu33");
    static BFu1s_Sf_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(BFu1s_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu33");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "BFu1s_Sf_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "BFu1s_Sf_BFu33");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu33(Test_BFu1s_Sf_BFu33, "BFu1s_Sf_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu7c()
{
  {
    init_simple_test("BFu1s_Sf_BFu7c");
    static BFu1s_Sf_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu7c");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu1s_Sf_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu1s_Sf_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu7c(Test_BFu1s_Sf_BFu7c, "BFu1s_Sf_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu7i()
{
  {
    init_simple_test("BFu1s_Sf_BFu7i");
    static BFu1s_Sf_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu7i");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu1s_Sf_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu1s_Sf_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu7i(Test_BFu1s_Sf_BFu7i, "BFu1s_Sf_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu7ll()
{
  {
    init_simple_test("BFu1s_Sf_BFu7ll");
    static BFu1s_Sf_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu7ll");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu1s_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu1s_Sf_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu7ll(Test_BFu1s_Sf_BFu7ll, "BFu1s_Sf_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu7s()
{
  {
    init_simple_test("BFu1s_Sf_BFu7s");
    static BFu1s_Sf_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu7s");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu1s_Sf_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu1s_Sf_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu7s(Test_BFu1s_Sf_BFu7s, "BFu1s_Sf_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu8c()
{
  {
    init_simple_test("BFu1s_Sf_BFu8c");
    static BFu1s_Sf_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu8c");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu1s_Sf_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu1s_Sf_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu8c(Test_BFu1s_Sf_BFu8c, "BFu1s_Sf_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu8i()
{
  {
    init_simple_test("BFu1s_Sf_BFu8i");
    static BFu1s_Sf_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu8i");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu1s_Sf_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu1s_Sf_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu8i(Test_BFu1s_Sf_BFu8i, "BFu1s_Sf_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu8ll()
{
  {
    init_simple_test("BFu1s_Sf_BFu8ll");
    static BFu1s_Sf_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu8ll");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu1s_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu1s_Sf_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu8ll(Test_BFu1s_Sf_BFu8ll, "BFu1s_Sf_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu8s()
{
  {
    init_simple_test("BFu1s_Sf_BFu8s");
    static BFu1s_Sf_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu8s");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu1s_Sf_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu1s_Sf_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu8s(Test_BFu1s_Sf_BFu8s, "BFu1s_Sf_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu9i()
{
  {
    init_simple_test("BFu1s_Sf_BFu9i");
    static BFu1s_Sf_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu9i");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu1s_Sf_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu1s_Sf_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu9i(Test_BFu1s_Sf_BFu9i, "BFu1s_Sf_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu9ll()
{
  {
    init_simple_test("BFu1s_Sf_BFu9ll");
    static BFu1s_Sf_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu9ll");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu1s_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu1s_Sf_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu9ll(Test_BFu1s_Sf_BFu9ll, "BFu1s_Sf_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_BFu9s()
{
  {
    init_simple_test("BFu1s_Sf_BFu9s");
    static BFu1s_Sf_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_BFu9s");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu1s_Sf_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu1s_Sf_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_BFu9s(Test_BFu1s_Sf_BFu9s, "BFu1s_Sf_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_C()
{
  {
    init_simple_test("BFu1s_Sf_C");
    static BFu1s_Sf_C lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_C");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_C.v2");
    check_field_offset(lv, v3, 2, "BFu1s_Sf_C.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_C(Test_BFu1s_Sf_C, "BFu1s_Sf_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_D()
{
  {
    init_simple_test("BFu1s_Sf_D");
    static BFu1s_Sf_D lv;
    check2(sizeof(lv), 10, "sizeof(BFu1s_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_D");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_D.v2");
    check_field_offset(lv, v3, 2, "BFu1s_Sf_D.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_D(Test_BFu1s_Sf_D, "BFu1s_Sf_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_F()
{
  {
    init_simple_test("BFu1s_Sf_F");
    static BFu1s_Sf_F lv;
    check2(sizeof(lv), 6, "sizeof(BFu1s_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_F");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_F.v2");
    check_field_offset(lv, v3, 2, "BFu1s_Sf_F.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_F(Test_BFu1s_Sf_F, "BFu1s_Sf_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_I()
{
  {
    init_simple_test("BFu1s_Sf_I");
    static BFu1s_Sf_I lv;
    check2(sizeof(lv), 6, "sizeof(BFu1s_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_I");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_I.v2");
    check_field_offset(lv, v3, 2, "BFu1s_Sf_I.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_I(Test_BFu1s_Sf_I, "BFu1s_Sf_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_Ip()
{
  {
    init_simple_test("BFu1s_Sf_Ip");
    static BFu1s_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_Ip");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_Ip.v2");
    check_field_offset(lv, v3, 2, "BFu1s_Sf_Ip.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_Ip(Test_BFu1s_Sf_Ip, "BFu1s_Sf_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_L()
{
  {
    init_simple_test("BFu1s_Sf_L");
    static BFu1s_Sf_L lv;
    check2(sizeof(lv), 10, "sizeof(BFu1s_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_L");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_L.v2");
    check_field_offset(lv, v3, 2, "BFu1s_Sf_L.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_L(Test_BFu1s_Sf_L, "BFu1s_Sf_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_S()
{
  {
    init_simple_test("BFu1s_Sf_S");
    static BFu1s_Sf_S lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_S");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_S.v2");
    check_field_offset(lv, v3, 2, "BFu1s_Sf_S.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_S(Test_BFu1s_Sf_S, "BFu1s_Sf_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_Sf()
{
  {
    init_simple_test("BFu1s_Sf_Sf");
    static BFu1s_Sf_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_Sf");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu1s_Sf_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_Sf(Test_BFu1s_Sf_Sf, "BFu1s_Sf_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_Uc()
{
  {
    init_simple_test("BFu1s_Sf_Uc");
    static BFu1s_Sf_Uc lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_Uc");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_Uc.v2");
    check_field_offset(lv, v3, 2, "BFu1s_Sf_Uc.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_Uc(Test_BFu1s_Sf_Uc, "BFu1s_Sf_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_Ui()
{
  {
    init_simple_test("BFu1s_Sf_Ui");
    static BFu1s_Sf_Ui lv;
    check2(sizeof(lv), 6, "sizeof(BFu1s_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_Ui");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_Ui.v2");
    check_field_offset(lv, v3, 2, "BFu1s_Sf_Ui.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_Ui(Test_BFu1s_Sf_Ui, "BFu1s_Sf_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_Ul()
{
  {
    init_simple_test("BFu1s_Sf_Ul");
    static BFu1s_Sf_Ul lv;
    check2(sizeof(lv), 10, "sizeof(BFu1s_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_Ul");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_Ul.v2");
    check_field_offset(lv, v3, 2, "BFu1s_Sf_Ul.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_Ul(Test_BFu1s_Sf_Ul, "BFu1s_Sf_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_Us()
{
  {
    init_simple_test("BFu1s_Sf_Us");
    static BFu1s_Sf_Us lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_Us");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_Us.v2");
    check_field_offset(lv, v3, 2, "BFu1s_Sf_Us.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_Us(Test_BFu1s_Sf_Us, "BFu1s_Sf_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Sf_Vp()
{
  {
    init_simple_test("BFu1s_Sf_Vp");
    static BFu1s_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Sf_Vp");
    check_field_offset(lv, v2, 1, "BFu1s_Sf_Vp.v2");
    check_field_offset(lv, v3, 2, "BFu1s_Sf_Vp.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Sf_Vp(Test_BFu1s_Sf_Vp, "BFu1s_Sf_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Uc_Sf()
{
  {
    init_simple_test("BFu1s_Uc_Sf");
    static BFu1s_Uc_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Uc_Sf");
    check_field_offset(lv, v2, 1, "BFu1s_Uc_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu1s_Uc_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Uc_Sf(Test_BFu1s_Uc_Sf, "BFu1s_Uc_Sf", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Ui_Sf()
{
  {
    init_simple_test("BFu1s_Ui_Sf");
    static BFu1s_Ui_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu1s_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Ui_Sf");
    check_field_offset(lv, v2, 1, "BFu1s_Ui_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu1s_Ui_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Ui_Sf(Test_BFu1s_Ui_Sf, "BFu1s_Ui_Sf", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Ul_Sf()
{
  {
    init_simple_test("BFu1s_Ul_Sf");
    static BFu1s_Ul_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu1s_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Ul_Sf");
    check_field_offset(lv, v2, 1, "BFu1s_Ul_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu1s_Ul_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Ul_Sf(Test_BFu1s_Ul_Sf, "BFu1s_Ul_Sf", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Us_Sf()
{
  {
    init_simple_test("BFu1s_Us_Sf");
    static BFu1s_Us_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Us_Sf");
    check_field_offset(lv, v2, 1, "BFu1s_Us_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu1s_Us_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Us_Sf(Test_BFu1s_Us_Sf, "BFu1s_Us_Sf", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Vp_Sf()
{
  {
    init_simple_test("BFu1s_Vp_Sf");
    static BFu1s_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Vp_Sf");
    check_field_offset(lv, v2, 1, "BFu1s_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu1s_Vp_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu1s_Vp_Sf(Test_BFu1s_Vp_Sf, "BFu1s_Vp_Sf", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu15i_Sf()
{
  {
    init_simple_test("BFu31i_BFu15i_Sf");
    static BFu31i_BFu15i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu31i_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31i_BFu15i_Sf");
    check_field_offset(lv, v3, 6, "BFu31i_BFu15i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu15i_Sf(Test_BFu31i_BFu15i_Sf, "BFu31i_BFu15i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu15ll_Sf()
{
  {
    init_simple_test("BFu31i_BFu15ll_Sf");
    static BFu31i_BFu15ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu31i_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31i_BFu15ll_Sf");
    check_field_offset(lv, v3, 6, "BFu31i_BFu15ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu15ll_Sf(Test_BFu31i_BFu15ll_Sf, "BFu31i_BFu15ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu15s_Sf()
{
  {
    init_simple_test("BFu31i_BFu15s_Sf");
    static BFu31i_BFu15s_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu31i_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31i_BFu15s_Sf");
    check_field_offset(lv, v3, 6, "BFu31i_BFu15s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu15s_Sf(Test_BFu31i_BFu15s_Sf, "BFu31i_BFu15s_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu16i_Sf()
{
  {
    init_simple_test("BFu31i_BFu16i_Sf");
    static BFu31i_BFu16i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu31i_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31i_BFu16i_Sf");
    check_field_offset(lv, v3, 6, "BFu31i_BFu16i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu16i_Sf(Test_BFu31i_BFu16i_Sf, "BFu31i_BFu16i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu16ll_Sf()
{
  {
    init_simple_test("BFu31i_BFu16ll_Sf");
    static BFu31i_BFu16ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu31i_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31i_BFu16ll_Sf");
    check_field_offset(lv, v3, 6, "BFu31i_BFu16ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu16ll_Sf(Test_BFu31i_BFu16ll_Sf, "BFu31i_BFu16ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu16s_Sf()
{
  {
    init_simple_test("BFu31i_BFu16s_Sf");
    static BFu31i_BFu16s_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu31i_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31i_BFu16s_Sf");
    check_field_offset(lv, v3, 6, "BFu31i_BFu16s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu16s_Sf(Test_BFu31i_BFu16s_Sf, "BFu31i_BFu16s_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu17i_Sf()
{
  {
    init_simple_test("BFu31i_BFu17i_Sf");
    static BFu31i_BFu17i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu31i_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31i_BFu17i_Sf");
    check_field_offset(lv, v3, 6, "BFu31i_BFu17i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu17i_Sf(Test_BFu31i_BFu17i_Sf, "BFu31i_BFu17i_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu17ll_Sf()
{
  {
    init_simple_test("BFu31i_BFu17ll_Sf");
    static BFu31i_BFu17ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu31i_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31i_BFu17ll_Sf");
    check_field_offset(lv, v3, 6, "BFu31i_BFu17ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu17ll_Sf(Test_BFu31i_BFu17ll_Sf, "BFu31i_BFu17ll_Sf", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1c_Sf()
{
  {
    init_simple_test("BFu31i_BFu1c_Sf");
    static BFu31i_BFu1c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1c_Sf");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1c_Sf");
    check_field_offset(lv, v3, 4, "BFu31i_BFu1c_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1c_Sf(Test_BFu31i_BFu1c_Sf, "BFu31i_BFu1c_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1i_Sf()
{
  {
    init_simple_test("BFu31i_BFu1i_Sf");
    static BFu31i_BFu1i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1i_Sf");
    check_field_offset(lv, v3, 4, "BFu31i_BFu1i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1i_Sf(Test_BFu31i_BFu1i_Sf, "BFu31i_BFu1i_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1ll_Sf()
{
  {
    init_simple_test("BFu31i_BFu1ll_Sf");
    static BFu31i_BFu1ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1ll_Sf");
    check_field_offset(lv, v3, 4, "BFu31i_BFu1ll_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1ll_Sf(Test_BFu31i_BFu1ll_Sf, "BFu31i_BFu1ll_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1s_Sf()
{
  {
    init_simple_test("BFu31i_BFu1s_Sf");
    static BFu31i_BFu1s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1s_Sf");
    check_field_offset(lv, v3, 4, "BFu31i_BFu1s_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1s_Sf(Test_BFu31i_BFu1s_Sf, "BFu31i_BFu1s_Sf", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu31i_Sf()
{
  {
    init_simple_test("BFu31i_BFu31i_Sf");
    static BFu31i_BFu31i_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu31i_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31i_BFu31i_Sf");
    check_field_offset(lv, v3, 8, "BFu31i_BFu31i_Sf.v3");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu31i_Sf(Test_BFu31i_BFu31i_Sf, "BFu31i_BFu31i_Sf", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

