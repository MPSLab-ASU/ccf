// This file is distributed under the University of Illinois Open Source License.
// See LICENSE.TXT for details.
// RUN: c_compiler -c -o %t1.o -I "common" "common/testsuite.c"
// RUN: c_compiler -c %s -I "common" -o %t2.o
// RUN: linker -o %t1%exeext  %t1.o %t2.o
// RUN: runtool %t1%exeext | checker "TEST PASSED"
#include "testsuite.h"
#pragma pack(1)
struct BFu9s_BFu15s_BFu0c { unsigned short v1:9; unsigned short v2:15; unsigned char :0; };
struct BFu9s_BFu15s_BFu0i { unsigned short v1:9; unsigned short v2:15; unsigned int :0; };
struct BFu9s_BFu15s_BFu0ll { unsigned short v1:9; unsigned short v2:15; unsigned long long :0; };
struct BFu9s_BFu15s_BFu0s { unsigned short v1:9; unsigned short v2:15; unsigned short :0; };
struct BFu9s_BFu16i_BFu0c { unsigned short v1:9; unsigned int v2:16; unsigned char :0; };
struct BFu9s_BFu16i_BFu0i { unsigned short v1:9; unsigned int v2:16; unsigned int :0; };
struct BFu9s_BFu16i_BFu0ll { unsigned short v1:9; unsigned int v2:16; unsigned long long :0; };
struct BFu9s_BFu16i_BFu0s { unsigned short v1:9; unsigned int v2:16; unsigned short :0; };
struct BFu9s_BFu16ll_BFu0c { unsigned short v1:9; unsigned long long v2:16; unsigned char :0; };
struct BFu9s_BFu16ll_BFu0i { unsigned short v1:9; unsigned long long v2:16; unsigned int :0; };
struct BFu9s_BFu16ll_BFu0ll { unsigned short v1:9; unsigned long long v2:16; unsigned long long :0; };
struct BFu9s_BFu16ll_BFu0s { unsigned short v1:9; unsigned long long v2:16; unsigned short :0; };
struct BFu9s_BFu16s_BFu0c { unsigned short v1:9; unsigned short v2:16; unsigned char :0; };
struct BFu9s_BFu16s_BFu0i { unsigned short v1:9; unsigned short v2:16; unsigned int :0; };
struct BFu9s_BFu16s_BFu0ll { unsigned short v1:9; unsigned short v2:16; unsigned long long :0; };
struct BFu9s_BFu16s_BFu0s { unsigned short v1:9; unsigned short v2:16; unsigned short :0; };
struct BFu9s_BFu17i_BFu0c { unsigned short v1:9; unsigned int v2:17; unsigned char :0; };
struct BFu9s_BFu17i_BFu0i { unsigned short v1:9; unsigned int v2:17; unsigned int :0; };
struct BFu9s_BFu17i_BFu0ll { unsigned short v1:9; unsigned int v2:17; unsigned long long :0; };
struct BFu9s_BFu17i_BFu0s { unsigned short v1:9; unsigned int v2:17; unsigned short :0; };
struct BFu9s_BFu17ll_BFu0c { unsigned short v1:9; unsigned long long v2:17; unsigned char :0; };
struct BFu9s_BFu17ll_BFu0i { unsigned short v1:9; unsigned long long v2:17; unsigned int :0; };
struct BFu9s_BFu17ll_BFu0ll { unsigned short v1:9; unsigned long long v2:17; unsigned long long :0; };
struct BFu9s_BFu17ll_BFu0s { unsigned short v1:9; unsigned long long v2:17; unsigned short :0; };
struct BFu9s_BFu1c_BFu0c { unsigned short v1:9; unsigned char v2:1; unsigned char :0; };
struct BFu9s_BFu1c_BFu0i { unsigned short v1:9; unsigned char v2:1; unsigned int :0; };
struct BFu9s_BFu1c_BFu0ll { unsigned short v1:9; unsigned char v2:1; unsigned long long :0; };
struct BFu9s_BFu1c_BFu0s { unsigned short v1:9; unsigned char v2:1; unsigned short :0; };
struct BFu9s_BFu1i_BFu0c { unsigned short v1:9; unsigned int v2:1; unsigned char :0; };
struct BFu9s_BFu1i_BFu0i { unsigned short v1:9; unsigned int v2:1; unsigned int :0; };
struct BFu9s_BFu1i_BFu0ll { unsigned short v1:9; unsigned int v2:1; unsigned long long :0; };
struct BFu9s_BFu1i_BFu0s { unsigned short v1:9; unsigned int v2:1; unsigned short :0; };
struct BFu9s_BFu1ll_BFu0c { unsigned short v1:9; unsigned long long v2:1; unsigned char :0; };
struct BFu9s_BFu1ll_BFu0i { unsigned short v1:9; unsigned long long v2:1; unsigned int :0; };
struct BFu9s_BFu1ll_BFu0ll { unsigned short v1:9; unsigned long long v2:1; unsigned long long :0; };
struct BFu9s_BFu1ll_BFu0s { unsigned short v1:9; unsigned long long v2:1; unsigned short :0; };
struct BFu9s_BFu1s_BFu0c { unsigned short v1:9; unsigned short v2:1; unsigned char :0; };
struct BFu9s_BFu1s_BFu0i { unsigned short v1:9; unsigned short v2:1; unsigned int :0; };
struct BFu9s_BFu1s_BFu0ll { unsigned short v1:9; unsigned short v2:1; unsigned long long :0; };
struct BFu9s_BFu1s_BFu0s { unsigned short v1:9; unsigned short v2:1; unsigned short :0; };
struct BFu9s_BFu31i_BFu0c { unsigned short v1:9; unsigned int v2:31; unsigned char :0; };
struct BFu9s_BFu31i_BFu0i { unsigned short v1:9; unsigned int v2:31; unsigned int :0; };
struct BFu9s_BFu31i_BFu0ll { unsigned short v1:9; unsigned int v2:31; unsigned long long :0; };
struct BFu9s_BFu31i_BFu0s { unsigned short v1:9; unsigned int v2:31; unsigned short :0; };
struct BFu9s_BFu31ll_BFu0c { unsigned short v1:9; unsigned long long v2:31; unsigned char :0; };
struct BFu9s_BFu31ll_BFu0i { unsigned short v1:9; unsigned long long v2:31; unsigned int :0; };
struct BFu9s_BFu31ll_BFu0ll { unsigned short v1:9; unsigned long long v2:31; unsigned long long :0; };
struct BFu9s_BFu31ll_BFu0s { unsigned short v1:9; unsigned long long v2:31; unsigned short :0; };
struct BFu9s_BFu32i_BFu0c { unsigned short v1:9; unsigned int v2:32; unsigned char :0; };
struct BFu9s_BFu32i_BFu0i { unsigned short v1:9; unsigned int v2:32; unsigned int :0; };
struct BFu9s_BFu32i_BFu0ll { unsigned short v1:9; unsigned int v2:32; unsigned long long :0; };
struct BFu9s_BFu32i_BFu0s { unsigned short v1:9; unsigned int v2:32; unsigned short :0; };
struct BFu9s_BFu32ll_BFu0c { unsigned short v1:9; unsigned long long v2:32; unsigned char :0; };
struct BFu9s_BFu32ll_BFu0i { unsigned short v1:9; unsigned long long v2:32; unsigned int :0; };
struct BFu9s_BFu32ll_BFu0ll { unsigned short v1:9; unsigned long long v2:32; unsigned long long :0; };
struct BFu9s_BFu32ll_BFu0s { unsigned short v1:9; unsigned long long v2:32; unsigned short :0; };
struct BFu9s_BFu33_BFu0c { unsigned short v1:9; unsigned long long v2:33; unsigned char :0; };
struct BFu9s_BFu33_BFu0i { unsigned short v1:9; unsigned long long v2:33; unsigned int :0; };
struct BFu9s_BFu33_BFu0ll { unsigned short v1:9; unsigned long long v2:33; unsigned long long :0; };
struct BFu9s_BFu33_BFu0s { unsigned short v1:9; unsigned long long v2:33; unsigned short :0; };
struct BFu9s_BFu7c_BFu0c { unsigned short v1:9; unsigned char v2:7; unsigned char :0; };
struct BFu9s_BFu7c_BFu0i { unsigned short v1:9; unsigned char v2:7; unsigned int :0; };
struct BFu9s_BFu7c_BFu0ll { unsigned short v1:9; unsigned char v2:7; unsigned long long :0; };
struct BFu9s_BFu7c_BFu0s { unsigned short v1:9; unsigned char v2:7; unsigned short :0; };
struct BFu9s_BFu7i_BFu0c { unsigned short v1:9; unsigned int v2:7; unsigned char :0; };
struct BFu9s_BFu7i_BFu0i { unsigned short v1:9; unsigned int v2:7; unsigned int :0; };
struct BFu9s_BFu7i_BFu0ll { unsigned short v1:9; unsigned int v2:7; unsigned long long :0; };
struct BFu9s_BFu7i_BFu0s { unsigned short v1:9; unsigned int v2:7; unsigned short :0; };
struct BFu9s_BFu7ll_BFu0c { unsigned short v1:9; unsigned long long v2:7; unsigned char :0; };
struct BFu9s_BFu7ll_BFu0i { unsigned short v1:9; unsigned long long v2:7; unsigned int :0; };
struct BFu9s_BFu7ll_BFu0ll { unsigned short v1:9; unsigned long long v2:7; unsigned long long :0; };
struct BFu9s_BFu7ll_BFu0s { unsigned short v1:9; unsigned long long v2:7; unsigned short :0; };
struct BFu9s_BFu7s_BFu0c { unsigned short v1:9; unsigned short v2:7; unsigned char :0; };
struct BFu9s_BFu7s_BFu0i { unsigned short v1:9; unsigned short v2:7; unsigned int :0; };
struct BFu9s_BFu7s_BFu0ll { unsigned short v1:9; unsigned short v2:7; unsigned long long :0; };
struct BFu9s_BFu7s_BFu0s { unsigned short v1:9; unsigned short v2:7; unsigned short :0; };
struct BFu9s_BFu8c_BFu0c { unsigned short v1:9; unsigned char v2:8; unsigned char :0; };
struct BFu9s_BFu8c_BFu0i { unsigned short v1:9; unsigned char v2:8; unsigned int :0; };
struct BFu9s_BFu8c_BFu0ll { unsigned short v1:9; unsigned char v2:8; unsigned long long :0; };
struct BFu9s_BFu8c_BFu0s { unsigned short v1:9; unsigned char v2:8; unsigned short :0; };
struct BFu9s_BFu8i_BFu0c { unsigned short v1:9; unsigned int v2:8; unsigned char :0; };
struct BFu9s_BFu8i_BFu0i { unsigned short v1:9; unsigned int v2:8; unsigned int :0; };
struct BFu9s_BFu8i_BFu0ll { unsigned short v1:9; unsigned int v2:8; unsigned long long :0; };
struct BFu9s_BFu8i_BFu0s { unsigned short v1:9; unsigned int v2:8; unsigned short :0; };
struct BFu9s_BFu8ll_BFu0c { unsigned short v1:9; unsigned long long v2:8; unsigned char :0; };
struct BFu9s_BFu8ll_BFu0i { unsigned short v1:9; unsigned long long v2:8; unsigned int :0; };
struct BFu9s_BFu8ll_BFu0ll { unsigned short v1:9; unsigned long long v2:8; unsigned long long :0; };
struct BFu9s_BFu8ll_BFu0s { unsigned short v1:9; unsigned long long v2:8; unsigned short :0; };
struct BFu9s_BFu8s_BFu0c { unsigned short v1:9; unsigned short v2:8; unsigned char :0; };
struct BFu9s_BFu8s_BFu0i { unsigned short v1:9; unsigned short v2:8; unsigned int :0; };
struct BFu9s_BFu8s_BFu0ll { unsigned short v1:9; unsigned short v2:8; unsigned long long :0; };
struct BFu9s_BFu8s_BFu0s { unsigned short v1:9; unsigned short v2:8; unsigned short :0; };
struct BFu9s_BFu9i_BFu0c { unsigned short v1:9; unsigned int v2:9; unsigned char :0; };
struct BFu9s_BFu9i_BFu0i { unsigned short v1:9; unsigned int v2:9; unsigned int :0; };
struct BFu9s_BFu9i_BFu0ll { unsigned short v1:9; unsigned int v2:9; unsigned long long :0; };
struct BFu9s_BFu9i_BFu0s { unsigned short v1:9; unsigned int v2:9; unsigned short :0; };
struct BFu9s_BFu9ll_BFu0c { unsigned short v1:9; unsigned long long v2:9; unsigned char :0; };
struct BFu9s_BFu9ll_BFu0i { unsigned short v1:9; unsigned long long v2:9; unsigned int :0; };
struct BFu9s_BFu9ll_BFu0ll { unsigned short v1:9; unsigned long long v2:9; unsigned long long :0; };
struct BFu9s_BFu9ll_BFu0s { unsigned short v1:9; unsigned long long v2:9; unsigned short :0; };
struct BFu9s_BFu9s_BFu0c { unsigned short v1:9; unsigned short v2:9; unsigned char :0; };
struct BFu9s_BFu9s_BFu0i { unsigned short v1:9; unsigned short v2:9; unsigned int :0; };
struct BFu9s_BFu9s_BFu0ll { unsigned short v1:9; unsigned short v2:9; unsigned long long :0; };
struct BFu9s_BFu9s_BFu0s { unsigned short v1:9; unsigned short v2:9; unsigned short :0; };
struct BFu9s_C_BFu0c { unsigned short v1:9; char v2; unsigned char :0; };
struct BFu9s_C_BFu0i { unsigned short v1:9; char v2; unsigned int :0; };
struct BFu9s_C_BFu0ll { unsigned short v1:9; char v2; unsigned long long :0; };
struct BFu9s_C_BFu0s { unsigned short v1:9; char v2; unsigned short :0; };
struct BFu9s_D_BFu0c { unsigned short v1:9; double v2; unsigned char :0; };
struct BFu9s_D_BFu0i { unsigned short v1:9; double v2; unsigned int :0; };
struct BFu9s_D_BFu0ll { unsigned short v1:9; double v2; unsigned long long :0; };
struct BFu9s_D_BFu0s { unsigned short v1:9; double v2; unsigned short :0; };
struct BFu9s_F_BFu0c { unsigned short v1:9; float v2; unsigned char :0; };
struct BFu9s_F_BFu0i { unsigned short v1:9; float v2; unsigned int :0; };
struct BFu9s_F_BFu0ll { unsigned short v1:9; float v2; unsigned long long :0; };
struct BFu9s_F_BFu0s { unsigned short v1:9; float v2; unsigned short :0; };
struct BFu9s_I_BFu0c { unsigned short v1:9; int v2; unsigned char :0; };
struct BFu9s_I_BFu0i { unsigned short v1:9; int v2; unsigned int :0; };
struct BFu9s_I_BFu0ll { unsigned short v1:9; int v2; unsigned long long :0; };
struct BFu9s_I_BFu0s { unsigned short v1:9; int v2; unsigned short :0; };
struct BFu9s_Ip_BFu0c { unsigned short v1:9; int * v2; unsigned char :0; };
struct BFu9s_Ip_BFu0i { unsigned short v1:9; int * v2; unsigned int :0; };
struct BFu9s_Ip_BFu0ll { unsigned short v1:9; int * v2; unsigned long long :0; };
struct BFu9s_Ip_BFu0s { unsigned short v1:9; int * v2; unsigned short :0; };
struct BFu9s_L_BFu0c { unsigned short v1:9; long long v2; unsigned char :0; };
struct BFu9s_L_BFu0i { unsigned short v1:9; long long v2; unsigned int :0; };
struct BFu9s_L_BFu0ll { unsigned short v1:9; long long v2; unsigned long long :0; };
struct BFu9s_L_BFu0s { unsigned short v1:9; long long v2; unsigned short :0; };
struct BFu9s_S_BFu0c { unsigned short v1:9; short v2; unsigned char :0; };
struct BFu9s_S_BFu0i { unsigned short v1:9; short v2; unsigned int :0; };
struct BFu9s_S_BFu0ll { unsigned short v1:9; short v2; unsigned long long :0; };
struct BFu9s_S_BFu0s { unsigned short v1:9; short v2; unsigned short :0; };
struct BFu9s_Uc_BFu0c { unsigned short v1:9; unsigned char v2; unsigned char :0; };
struct BFu9s_Uc_BFu0i { unsigned short v1:9; unsigned char v2; unsigned int :0; };
struct BFu9s_Uc_BFu0ll { unsigned short v1:9; unsigned char v2; unsigned long long :0; };
struct BFu9s_Uc_BFu0s { unsigned short v1:9; unsigned char v2; unsigned short :0; };
struct BFu9s_Ui_BFu0c { unsigned short v1:9; unsigned int v2; unsigned char :0; };
struct BFu9s_Ui_BFu0i { unsigned short v1:9; unsigned int v2; unsigned int :0; };
struct BFu9s_Ui_BFu0ll { unsigned short v1:9; unsigned int v2; unsigned long long :0; };
struct BFu9s_Ui_BFu0s { unsigned short v1:9; unsigned int v2; unsigned short :0; };
struct BFu9s_Ul_BFu0c { unsigned short v1:9; unsigned long long v2; unsigned char :0; };
struct BFu9s_Ul_BFu0i { unsigned short v1:9; unsigned long long v2; unsigned int :0; };
struct BFu9s_Ul_BFu0ll { unsigned short v1:9; unsigned long long v2; unsigned long long :0; };
struct BFu9s_Ul_BFu0s { unsigned short v1:9; unsigned long long v2; unsigned short :0; };
struct BFu9s_Us_BFu0c { unsigned short v1:9; unsigned short v2; unsigned char :0; };
struct BFu9s_Us_BFu0i { unsigned short v1:9; unsigned short v2; unsigned int :0; };
struct BFu9s_Us_BFu0ll { unsigned short v1:9; unsigned short v2; unsigned long long :0; };
struct BFu9s_Us_BFu0s { unsigned short v1:9; unsigned short v2; unsigned short :0; };
struct BFu9s_Vp_BFu0c { unsigned short v1:9; void * v2; unsigned char :0; };
struct BFu9s_Vp_BFu0i { unsigned short v1:9; void * v2; unsigned int :0; };
struct BFu9s_Vp_BFu0ll { unsigned short v1:9; void * v2; unsigned long long :0; };
struct BFu9s_Vp_BFu0s { unsigned short v1:9; void * v2; unsigned short :0; };
struct C_BFu0c { char v1; unsigned char :0; };
struct C_BFu0c_BFu0c { char v1; unsigned char :0; unsigned char :0; };
struct C_BFu0c_BFu0i { char v1; unsigned char :0; unsigned int :0; };
struct C_BFu0c_BFu0ll { char v1; unsigned char :0; unsigned long long :0; };
struct C_BFu0c_BFu0s { char v1; unsigned char :0; unsigned short :0; };
struct C_BFu0c_BFu15i { char v1; unsigned char :0; unsigned int v2:15; };
struct C_BFu0c_BFu15ll { char v1; unsigned char :0; unsigned long long v2:15; };
struct C_BFu0c_BFu15s { char v1; unsigned char :0; unsigned short v2:15; };
struct C_BFu0c_BFu16i { char v1; unsigned char :0; unsigned int v2:16; };
struct C_BFu0c_BFu16ll { char v1; unsigned char :0; unsigned long long v2:16; };
struct C_BFu0c_BFu16s { char v1; unsigned char :0; unsigned short v2:16; };
struct C_BFu0c_BFu17i { char v1; unsigned char :0; unsigned int v2:17; };
struct C_BFu0c_BFu17ll { char v1; unsigned char :0; unsigned long long v2:17; };
struct C_BFu0c_BFu1c { char v1; unsigned char :0; unsigned char v2:1; };
struct C_BFu0c_BFu1i { char v1; unsigned char :0; unsigned int v2:1; };
struct C_BFu0c_BFu1ll { char v1; unsigned char :0; unsigned long long v2:1; };
struct C_BFu0c_BFu1s { char v1; unsigned char :0; unsigned short v2:1; };
struct C_BFu0c_BFu31i { char v1; unsigned char :0; unsigned int v2:31; };
struct C_BFu0c_BFu31ll { char v1; unsigned char :0; unsigned long long v2:31; };
struct C_BFu0c_BFu32i { char v1; unsigned char :0; unsigned int v2:32; };
struct C_BFu0c_BFu32ll { char v1; unsigned char :0; unsigned long long v2:32; };
struct C_BFu0c_BFu33 { char v1; unsigned char :0; unsigned long long v2:33; };
struct C_BFu0c_BFu7c { char v1; unsigned char :0; unsigned char v2:7; };
struct C_BFu0c_BFu7i { char v1; unsigned char :0; unsigned int v2:7; };
struct C_BFu0c_BFu7ll { char v1; unsigned char :0; unsigned long long v2:7; };
struct C_BFu0c_BFu7s { char v1; unsigned char :0; unsigned short v2:7; };
struct C_BFu0c_BFu8c { char v1; unsigned char :0; unsigned char v2:8; };
struct C_BFu0c_BFu8i { char v1; unsigned char :0; unsigned int v2:8; };
struct C_BFu0c_BFu8ll { char v1; unsigned char :0; unsigned long long v2:8; };
struct C_BFu0c_BFu8s { char v1; unsigned char :0; unsigned short v2:8; };
struct C_BFu0c_BFu9i { char v1; unsigned char :0; unsigned int v2:9; };
struct C_BFu0c_BFu9ll { char v1; unsigned char :0; unsigned long long v2:9; };
struct C_BFu0c_BFu9s { char v1; unsigned char :0; unsigned short v2:9; };
struct C_BFu0c_C { char v1; unsigned char :0; char v2; };
struct C_BFu0c_D { char v1; unsigned char :0; double v2; };
struct C_BFu0c_F { char v1; unsigned char :0; float v2; };
struct C_BFu0c_I { char v1; unsigned char :0; int v2; };
struct C_BFu0c_Ip { char v1; unsigned char :0; int * v2; };
struct C_BFu0c_L { char v1; unsigned char :0; long long v2; };
struct C_BFu0c_S { char v1; unsigned char :0; short v2; };
struct C_BFu0c_Uc { char v1; unsigned char :0; unsigned char v2; };
struct C_BFu0c_Ui { char v1; unsigned char :0; unsigned int v2; };
struct C_BFu0c_Ul { char v1; unsigned char :0; unsigned long long v2; };
struct C_BFu0c_Us { char v1; unsigned char :0; unsigned short v2; };
struct C_BFu0c_Vp { char v1; unsigned char :0; void * v2; };
struct C_BFu0i { char v1; unsigned int :0; };
struct C_BFu0i_BFu0c { char v1; unsigned int :0; unsigned char :0; };
struct C_BFu0i_BFu0i { char v1; unsigned int :0; unsigned int :0; };
struct C_BFu0i_BFu0ll { char v1; unsigned int :0; unsigned long long :0; };
struct C_BFu0i_BFu0s { char v1; unsigned int :0; unsigned short :0; };
struct C_BFu0i_BFu15i { char v1; unsigned int :0; unsigned int v2:15; };
struct C_BFu0i_BFu15ll { char v1; unsigned int :0; unsigned long long v2:15; };
struct C_BFu0i_BFu15s { char v1; unsigned int :0; unsigned short v2:15; };
struct C_BFu0i_BFu16i { char v1; unsigned int :0; unsigned int v2:16; };
struct C_BFu0i_BFu16ll { char v1; unsigned int :0; unsigned long long v2:16; };
struct C_BFu0i_BFu16s { char v1; unsigned int :0; unsigned short v2:16; };
struct C_BFu0i_BFu17i { char v1; unsigned int :0; unsigned int v2:17; };
struct C_BFu0i_BFu17ll { char v1; unsigned int :0; unsigned long long v2:17; };
struct C_BFu0i_BFu1c { char v1; unsigned int :0; unsigned char v2:1; };
struct C_BFu0i_BFu1i { char v1; unsigned int :0; unsigned int v2:1; };
struct C_BFu0i_BFu1ll { char v1; unsigned int :0; unsigned long long v2:1; };
struct C_BFu0i_BFu1s { char v1; unsigned int :0; unsigned short v2:1; };
struct C_BFu0i_BFu31i { char v1; unsigned int :0; unsigned int v2:31; };
struct C_BFu0i_BFu31ll { char v1; unsigned int :0; unsigned long long v2:31; };
struct C_BFu0i_BFu32i { char v1; unsigned int :0; unsigned int v2:32; };
struct C_BFu0i_BFu32ll { char v1; unsigned int :0; unsigned long long v2:32; };
struct C_BFu0i_BFu33 { char v1; unsigned int :0; unsigned long long v2:33; };
struct C_BFu0i_BFu7c { char v1; unsigned int :0; unsigned char v2:7; };
struct C_BFu0i_BFu7i { char v1; unsigned int :0; unsigned int v2:7; };
struct C_BFu0i_BFu7ll { char v1; unsigned int :0; unsigned long long v2:7; };
struct C_BFu0i_BFu7s { char v1; unsigned int :0; unsigned short v2:7; };
struct C_BFu0i_BFu8c { char v1; unsigned int :0; unsigned char v2:8; };
struct C_BFu0i_BFu8i { char v1; unsigned int :0; unsigned int v2:8; };
struct C_BFu0i_BFu8ll { char v1; unsigned int :0; unsigned long long v2:8; };
struct C_BFu0i_BFu8s { char v1; unsigned int :0; unsigned short v2:8; };
struct C_BFu0i_BFu9i { char v1; unsigned int :0; unsigned int v2:9; };
struct C_BFu0i_BFu9ll { char v1; unsigned int :0; unsigned long long v2:9; };
struct C_BFu0i_BFu9s { char v1; unsigned int :0; unsigned short v2:9; };
struct C_BFu0i_C { char v1; unsigned int :0; char v2; };
struct C_BFu0i_D { char v1; unsigned int :0; double v2; };
struct C_BFu0i_F { char v1; unsigned int :0; float v2; };
struct C_BFu0i_I { char v1; unsigned int :0; int v2; };
struct C_BFu0i_Ip { char v1; unsigned int :0; int * v2; };
struct C_BFu0i_L { char v1; unsigned int :0; long long v2; };
struct C_BFu0i_S { char v1; unsigned int :0; short v2; };
struct C_BFu0i_Uc { char v1; unsigned int :0; unsigned char v2; };
struct C_BFu0i_Ui { char v1; unsigned int :0; unsigned int v2; };
struct C_BFu0i_Ul { char v1; unsigned int :0; unsigned long long v2; };
struct C_BFu0i_Us { char v1; unsigned int :0; unsigned short v2; };
struct C_BFu0i_Vp { char v1; unsigned int :0; void * v2; };
struct C_BFu0ll { char v1; unsigned long long :0; };
struct C_BFu0ll_BFu0c { char v1; unsigned long long :0; unsigned char :0; };
struct C_BFu0ll_BFu0i { char v1; unsigned long long :0; unsigned int :0; };
struct C_BFu0ll_BFu0ll { char v1; unsigned long long :0; unsigned long long :0; };
struct C_BFu0ll_BFu0s { char v1; unsigned long long :0; unsigned short :0; };
struct C_BFu0ll_BFu15i { char v1; unsigned long long :0; unsigned int v2:15; };
struct C_BFu0ll_BFu15ll { char v1; unsigned long long :0; unsigned long long v2:15; };
struct C_BFu0ll_BFu15s { char v1; unsigned long long :0; unsigned short v2:15; };
struct C_BFu0ll_BFu16i { char v1; unsigned long long :0; unsigned int v2:16; };
struct C_BFu0ll_BFu16ll { char v1; unsigned long long :0; unsigned long long v2:16; };
struct C_BFu0ll_BFu16s { char v1; unsigned long long :0; unsigned short v2:16; };
struct C_BFu0ll_BFu17i { char v1; unsigned long long :0; unsigned int v2:17; };
struct C_BFu0ll_BFu17ll { char v1; unsigned long long :0; unsigned long long v2:17; };
struct C_BFu0ll_BFu1c { char v1; unsigned long long :0; unsigned char v2:1; };
struct C_BFu0ll_BFu1i { char v1; unsigned long long :0; unsigned int v2:1; };
struct C_BFu0ll_BFu1ll { char v1; unsigned long long :0; unsigned long long v2:1; };
struct C_BFu0ll_BFu1s { char v1; unsigned long long :0; unsigned short v2:1; };
struct C_BFu0ll_BFu31i { char v1; unsigned long long :0; unsigned int v2:31; };
struct C_BFu0ll_BFu31ll { char v1; unsigned long long :0; unsigned long long v2:31; };
struct C_BFu0ll_BFu32i { char v1; unsigned long long :0; unsigned int v2:32; };
struct C_BFu0ll_BFu32ll { char v1; unsigned long long :0; unsigned long long v2:32; };
struct C_BFu0ll_BFu33 { char v1; unsigned long long :0; unsigned long long v2:33; };
struct C_BFu0ll_BFu7c { char v1; unsigned long long :0; unsigned char v2:7; };
struct C_BFu0ll_BFu7i { char v1; unsigned long long :0; unsigned int v2:7; };
struct C_BFu0ll_BFu7ll { char v1; unsigned long long :0; unsigned long long v2:7; };
struct C_BFu0ll_BFu7s { char v1; unsigned long long :0; unsigned short v2:7; };
struct C_BFu0ll_BFu8c { char v1; unsigned long long :0; unsigned char v2:8; };
struct C_BFu0ll_BFu8i { char v1; unsigned long long :0; unsigned int v2:8; };
struct C_BFu0ll_BFu8ll { char v1; unsigned long long :0; unsigned long long v2:8; };
struct C_BFu0ll_BFu8s { char v1; unsigned long long :0; unsigned short v2:8; };
struct C_BFu0ll_BFu9i { char v1; unsigned long long :0; unsigned int v2:9; };
struct C_BFu0ll_BFu9ll { char v1; unsigned long long :0; unsigned long long v2:9; };
struct C_BFu0ll_BFu9s { char v1; unsigned long long :0; unsigned short v2:9; };
struct C_BFu0ll_C { char v1; unsigned long long :0; char v2; };
struct C_BFu0ll_D { char v1; unsigned long long :0; double v2; };
struct C_BFu0ll_F { char v1; unsigned long long :0; float v2; };
struct C_BFu0ll_I { char v1; unsigned long long :0; int v2; };
struct C_BFu0ll_Ip { char v1; unsigned long long :0; int * v2; };
struct C_BFu0ll_L { char v1; unsigned long long :0; long long v2; };
struct C_BFu0ll_S { char v1; unsigned long long :0; short v2; };
struct C_BFu0ll_Uc { char v1; unsigned long long :0; unsigned char v2; };
struct C_BFu0ll_Ui { char v1; unsigned long long :0; unsigned int v2; };
struct C_BFu0ll_Ul { char v1; unsigned long long :0; unsigned long long v2; };
struct C_BFu0ll_Us { char v1; unsigned long long :0; unsigned short v2; };
struct C_BFu0ll_Vp { char v1; unsigned long long :0; void * v2; };
struct C_BFu0s { char v1; unsigned short :0; };
struct C_BFu0s_BFu0c { char v1; unsigned short :0; unsigned char :0; };
struct C_BFu0s_BFu0i { char v1; unsigned short :0; unsigned int :0; };
struct C_BFu0s_BFu0ll { char v1; unsigned short :0; unsigned long long :0; };
struct C_BFu0s_BFu0s { char v1; unsigned short :0; unsigned short :0; };
struct C_BFu0s_BFu15i { char v1; unsigned short :0; unsigned int v2:15; };
struct C_BFu0s_BFu15ll { char v1; unsigned short :0; unsigned long long v2:15; };
struct C_BFu0s_BFu15s { char v1; unsigned short :0; unsigned short v2:15; };
struct C_BFu0s_BFu16i { char v1; unsigned short :0; unsigned int v2:16; };
struct C_BFu0s_BFu16ll { char v1; unsigned short :0; unsigned long long v2:16; };
struct C_BFu0s_BFu16s { char v1; unsigned short :0; unsigned short v2:16; };
struct C_BFu0s_BFu17i { char v1; unsigned short :0; unsigned int v2:17; };
struct C_BFu0s_BFu17ll { char v1; unsigned short :0; unsigned long long v2:17; };
struct C_BFu0s_BFu1c { char v1; unsigned short :0; unsigned char v2:1; };
struct C_BFu0s_BFu1i { char v1; unsigned short :0; unsigned int v2:1; };
struct C_BFu0s_BFu1ll { char v1; unsigned short :0; unsigned long long v2:1; };
struct C_BFu0s_BFu1s { char v1; unsigned short :0; unsigned short v2:1; };
struct C_BFu0s_BFu31i { char v1; unsigned short :0; unsigned int v2:31; };
struct C_BFu0s_BFu31ll { char v1; unsigned short :0; unsigned long long v2:31; };
struct C_BFu0s_BFu32i { char v1; unsigned short :0; unsigned int v2:32; };
struct C_BFu0s_BFu32ll { char v1; unsigned short :0; unsigned long long v2:32; };
struct C_BFu0s_BFu33 { char v1; unsigned short :0; unsigned long long v2:33; };
struct C_BFu0s_BFu7c { char v1; unsigned short :0; unsigned char v2:7; };
struct C_BFu0s_BFu7i { char v1; unsigned short :0; unsigned int v2:7; };
struct C_BFu0s_BFu7ll { char v1; unsigned short :0; unsigned long long v2:7; };
struct C_BFu0s_BFu7s { char v1; unsigned short :0; unsigned short v2:7; };
struct C_BFu0s_BFu8c { char v1; unsigned short :0; unsigned char v2:8; };
struct C_BFu0s_BFu8i { char v1; unsigned short :0; unsigned int v2:8; };
struct C_BFu0s_BFu8ll { char v1; unsigned short :0; unsigned long long v2:8; };
struct C_BFu0s_BFu8s { char v1; unsigned short :0; unsigned short v2:8; };
struct C_BFu0s_BFu9i { char v1; unsigned short :0; unsigned int v2:9; };
struct C_BFu0s_BFu9ll { char v1; unsigned short :0; unsigned long long v2:9; };
struct C_BFu0s_BFu9s { char v1; unsigned short :0; unsigned short v2:9; };
struct C_BFu0s_C { char v1; unsigned short :0; char v2; };
struct C_BFu0s_D { char v1; unsigned short :0; double v2; };
struct C_BFu0s_F { char v1; unsigned short :0; float v2; };
struct C_BFu0s_I { char v1; unsigned short :0; int v2; };
struct C_BFu0s_Ip { char v1; unsigned short :0; int * v2; };
struct C_BFu0s_L { char v1; unsigned short :0; long long v2; };
struct C_BFu0s_S { char v1; unsigned short :0; short v2; };
struct C_BFu0s_Uc { char v1; unsigned short :0; unsigned char v2; };
struct C_BFu0s_Ui { char v1; unsigned short :0; unsigned int v2; };
struct C_BFu0s_Ul { char v1; unsigned short :0; unsigned long long v2; };
struct C_BFu0s_Us { char v1; unsigned short :0; unsigned short v2; };
struct C_BFu0s_Vp { char v1; unsigned short :0; void * v2; };
struct C_BFu15i_BFu0c { char v1; unsigned int v2:15; unsigned char :0; };
struct C_BFu15i_BFu0i { char v1; unsigned int v2:15; unsigned int :0; };
struct C_BFu15i_BFu0ll { char v1; unsigned int v2:15; unsigned long long :0; };
struct C_BFu15i_BFu0s { char v1; unsigned int v2:15; unsigned short :0; };
struct C_BFu15ll_BFu0c { char v1; unsigned long long v2:15; unsigned char :0; };
struct C_BFu15ll_BFu0i { char v1; unsigned long long v2:15; unsigned int :0; };
struct C_BFu15ll_BFu0ll { char v1; unsigned long long v2:15; unsigned long long :0; };
struct C_BFu15ll_BFu0s { char v1; unsigned long long v2:15; unsigned short :0; };
struct C_BFu15s_BFu0c { char v1; unsigned short v2:15; unsigned char :0; };
struct C_BFu15s_BFu0i { char v1; unsigned short v2:15; unsigned int :0; };
struct C_BFu15s_BFu0ll { char v1; unsigned short v2:15; unsigned long long :0; };
struct C_BFu15s_BFu0s { char v1; unsigned short v2:15; unsigned short :0; };
struct C_BFu16i_BFu0c { char v1; unsigned int v2:16; unsigned char :0; };
struct C_BFu16i_BFu0i { char v1; unsigned int v2:16; unsigned int :0; };
struct C_BFu16i_BFu0ll { char v1; unsigned int v2:16; unsigned long long :0; };
struct C_BFu16i_BFu0s { char v1; unsigned int v2:16; unsigned short :0; };
struct C_BFu16ll_BFu0c { char v1; unsigned long long v2:16; unsigned char :0; };
struct C_BFu16ll_BFu0i { char v1; unsigned long long v2:16; unsigned int :0; };
struct C_BFu16ll_BFu0ll { char v1; unsigned long long v2:16; unsigned long long :0; };
struct C_BFu16ll_BFu0s { char v1; unsigned long long v2:16; unsigned short :0; };
struct C_BFu16s_BFu0c { char v1; unsigned short v2:16; unsigned char :0; };
struct C_BFu16s_BFu0i { char v1; unsigned short v2:16; unsigned int :0; };
struct C_BFu16s_BFu0ll { char v1; unsigned short v2:16; unsigned long long :0; };
struct C_BFu16s_BFu0s { char v1; unsigned short v2:16; unsigned short :0; };
struct C_BFu17i_BFu0c { char v1; unsigned int v2:17; unsigned char :0; };
struct C_BFu17i_BFu0i { char v1; unsigned int v2:17; unsigned int :0; };
struct C_BFu17i_BFu0ll { char v1; unsigned int v2:17; unsigned long long :0; };
struct C_BFu17i_BFu0s { char v1; unsigned int v2:17; unsigned short :0; };
struct C_BFu17ll_BFu0c { char v1; unsigned long long v2:17; unsigned char :0; };
struct C_BFu17ll_BFu0i { char v1; unsigned long long v2:17; unsigned int :0; };
struct C_BFu17ll_BFu0ll { char v1; unsigned long long v2:17; unsigned long long :0; };
struct C_BFu17ll_BFu0s { char v1; unsigned long long v2:17; unsigned short :0; };
struct C_BFu1c_BFu0c { char v1; unsigned char v2:1; unsigned char :0; };
struct C_BFu1c_BFu0i { char v1; unsigned char v2:1; unsigned int :0; };
struct C_BFu1c_BFu0ll { char v1; unsigned char v2:1; unsigned long long :0; };
struct C_BFu1c_BFu0s { char v1; unsigned char v2:1; unsigned short :0; };
struct C_BFu1i_BFu0c { char v1; unsigned int v2:1; unsigned char :0; };
struct C_BFu1i_BFu0i { char v1; unsigned int v2:1; unsigned int :0; };
struct C_BFu1i_BFu0ll { char v1; unsigned int v2:1; unsigned long long :0; };
struct C_BFu1i_BFu0s { char v1; unsigned int v2:1; unsigned short :0; };
struct C_BFu1ll_BFu0c { char v1; unsigned long long v2:1; unsigned char :0; };
struct C_BFu1ll_BFu0i { char v1; unsigned long long v2:1; unsigned int :0; };
struct C_BFu1ll_BFu0ll { char v1; unsigned long long v2:1; unsigned long long :0; };
struct C_BFu1ll_BFu0s { char v1; unsigned long long v2:1; unsigned short :0; };
struct C_BFu1s_BFu0c { char v1; unsigned short v2:1; unsigned char :0; };
struct C_BFu1s_BFu0i { char v1; unsigned short v2:1; unsigned int :0; };
struct C_BFu1s_BFu0ll { char v1; unsigned short v2:1; unsigned long long :0; };
struct C_BFu1s_BFu0s { char v1; unsigned short v2:1; unsigned short :0; };
struct C_BFu31i_BFu0c { char v1; unsigned int v2:31; unsigned char :0; };
struct C_BFu31i_BFu0i { char v1; unsigned int v2:31; unsigned int :0; };
struct C_BFu31i_BFu0ll { char v1; unsigned int v2:31; unsigned long long :0; };
struct C_BFu31i_BFu0s { char v1; unsigned int v2:31; unsigned short :0; };
struct C_BFu31ll_BFu0c { char v1; unsigned long long v2:31; unsigned char :0; };
struct C_BFu31ll_BFu0i { char v1; unsigned long long v2:31; unsigned int :0; };
struct C_BFu31ll_BFu0ll { char v1; unsigned long long v2:31; unsigned long long :0; };
struct C_BFu31ll_BFu0s { char v1; unsigned long long v2:31; unsigned short :0; };
struct C_BFu32i_BFu0c { char v1; unsigned int v2:32; unsigned char :0; };
struct C_BFu32i_BFu0i { char v1; unsigned int v2:32; unsigned int :0; };
struct C_BFu32i_BFu0ll { char v1; unsigned int v2:32; unsigned long long :0; };
struct C_BFu32i_BFu0s { char v1; unsigned int v2:32; unsigned short :0; };
struct C_BFu32ll_BFu0c { char v1; unsigned long long v2:32; unsigned char :0; };
struct C_BFu32ll_BFu0i { char v1; unsigned long long v2:32; unsigned int :0; };
struct C_BFu32ll_BFu0ll { char v1; unsigned long long v2:32; unsigned long long :0; };
struct C_BFu32ll_BFu0s { char v1; unsigned long long v2:32; unsigned short :0; };
struct C_BFu33_BFu0c { char v1; unsigned long long v2:33; unsigned char :0; };
struct C_BFu33_BFu0i { char v1; unsigned long long v2:33; unsigned int :0; };
struct C_BFu33_BFu0ll { char v1; unsigned long long v2:33; unsigned long long :0; };
struct C_BFu33_BFu0s { char v1; unsigned long long v2:33; unsigned short :0; };
struct C_BFu7c_BFu0c { char v1; unsigned char v2:7; unsigned char :0; };
struct C_BFu7c_BFu0i { char v1; unsigned char v2:7; unsigned int :0; };
struct C_BFu7c_BFu0ll { char v1; unsigned char v2:7; unsigned long long :0; };
struct C_BFu7c_BFu0s { char v1; unsigned char v2:7; unsigned short :0; };
struct C_BFu7i_BFu0c { char v1; unsigned int v2:7; unsigned char :0; };
struct C_BFu7i_BFu0i { char v1; unsigned int v2:7; unsigned int :0; };
struct C_BFu7i_BFu0ll { char v1; unsigned int v2:7; unsigned long long :0; };
struct C_BFu7i_BFu0s { char v1; unsigned int v2:7; unsigned short :0; };
struct C_BFu7ll_BFu0c { char v1; unsigned long long v2:7; unsigned char :0; };
struct C_BFu7ll_BFu0i { char v1; unsigned long long v2:7; unsigned int :0; };
struct C_BFu7ll_BFu0ll { char v1; unsigned long long v2:7; unsigned long long :0; };
struct C_BFu7ll_BFu0s { char v1; unsigned long long v2:7; unsigned short :0; };
struct C_BFu7s_BFu0c { char v1; unsigned short v2:7; unsigned char :0; };
struct C_BFu7s_BFu0i { char v1; unsigned short v2:7; unsigned int :0; };
struct C_BFu7s_BFu0ll { char v1; unsigned short v2:7; unsigned long long :0; };
struct C_BFu7s_BFu0s { char v1; unsigned short v2:7; unsigned short :0; };
struct C_BFu8c_BFu0c { char v1; unsigned char v2:8; unsigned char :0; };
struct C_BFu8c_BFu0i { char v1; unsigned char v2:8; unsigned int :0; };
struct C_BFu8c_BFu0ll { char v1; unsigned char v2:8; unsigned long long :0; };
struct C_BFu8c_BFu0s { char v1; unsigned char v2:8; unsigned short :0; };
struct C_BFu8i_BFu0c { char v1; unsigned int v2:8; unsigned char :0; };
struct C_BFu8i_BFu0i { char v1; unsigned int v2:8; unsigned int :0; };
struct C_BFu8i_BFu0ll { char v1; unsigned int v2:8; unsigned long long :0; };
struct C_BFu8i_BFu0s { char v1; unsigned int v2:8; unsigned short :0; };
struct C_BFu8ll_BFu0c { char v1; unsigned long long v2:8; unsigned char :0; };
struct C_BFu8ll_BFu0i { char v1; unsigned long long v2:8; unsigned int :0; };
struct C_BFu8ll_BFu0ll { char v1; unsigned long long v2:8; unsigned long long :0; };
struct C_BFu8ll_BFu0s { char v1; unsigned long long v2:8; unsigned short :0; };
struct C_BFu8s_BFu0c { char v1; unsigned short v2:8; unsigned char :0; };
struct C_BFu8s_BFu0i { char v1; unsigned short v2:8; unsigned int :0; };
struct C_BFu8s_BFu0ll { char v1; unsigned short v2:8; unsigned long long :0; };
struct C_BFu8s_BFu0s { char v1; unsigned short v2:8; unsigned short :0; };
struct C_BFu9i_BFu0c { char v1; unsigned int v2:9; unsigned char :0; };
struct C_BFu9i_BFu0i { char v1; unsigned int v2:9; unsigned int :0; };
struct C_BFu9i_BFu0ll { char v1; unsigned int v2:9; unsigned long long :0; };
struct C_BFu9i_BFu0s { char v1; unsigned int v2:9; unsigned short :0; };
struct C_BFu9ll_BFu0c { char v1; unsigned long long v2:9; unsigned char :0; };
struct C_BFu9ll_BFu0i { char v1; unsigned long long v2:9; unsigned int :0; };
struct C_BFu9ll_BFu0ll { char v1; unsigned long long v2:9; unsigned long long :0; };
struct C_BFu9ll_BFu0s { char v1; unsigned long long v2:9; unsigned short :0; };
struct C_BFu9s_BFu0c { char v1; unsigned short v2:9; unsigned char :0; };
struct C_BFu9s_BFu0i { char v1; unsigned short v2:9; unsigned int :0; };
struct C_BFu9s_BFu0ll { char v1; unsigned short v2:9; unsigned long long :0; };
struct C_BFu9s_BFu0s { char v1; unsigned short v2:9; unsigned short :0; };
struct C_C_BFu0c { char v1; char v2; unsigned char :0; };
struct C_C_BFu0i { char v1; char v2; unsigned int :0; };
struct C_C_BFu0ll { char v1; char v2; unsigned long long :0; };
struct C_C_BFu0s { char v1; char v2; unsigned short :0; };
struct C_D_BFu0c { char v1; double v2; unsigned char :0; };
struct C_D_BFu0i { char v1; double v2; unsigned int :0; };
struct C_D_BFu0ll { char v1; double v2; unsigned long long :0; };
struct C_D_BFu0s { char v1; double v2; unsigned short :0; };
struct C_F_BFu0c { char v1; float v2; unsigned char :0; };
struct C_F_BFu0i { char v1; float v2; unsigned int :0; };
struct C_F_BFu0ll { char v1; float v2; unsigned long long :0; };
struct C_F_BFu0s { char v1; float v2; unsigned short :0; };
struct C_I_BFu0c { char v1; int v2; unsigned char :0; };
struct C_I_BFu0i { char v1; int v2; unsigned int :0; };
struct C_I_BFu0ll { char v1; int v2; unsigned long long :0; };
struct C_I_BFu0s { char v1; int v2; unsigned short :0; };
struct C_Ip_BFu0c { char v1; int * v2; unsigned char :0; };
struct C_Ip_BFu0i { char v1; int * v2; unsigned int :0; };
struct C_Ip_BFu0ll { char v1; int * v2; unsigned long long :0; };
struct C_Ip_BFu0s { char v1; int * v2; unsigned short :0; };
struct C_L_BFu0c { char v1; long long v2; unsigned char :0; };
struct C_L_BFu0i { char v1; long long v2; unsigned int :0; };
struct C_L_BFu0ll { char v1; long long v2; unsigned long long :0; };
struct C_L_BFu0s { char v1; long long v2; unsigned short :0; };
struct C_S_BFu0c { char v1; short v2; unsigned char :0; };
struct C_S_BFu0i { char v1; short v2; unsigned int :0; };
struct C_S_BFu0ll { char v1; short v2; unsigned long long :0; };
struct C_S_BFu0s { char v1; short v2; unsigned short :0; };
struct C_Uc_BFu0c { char v1; unsigned char v2; unsigned char :0; };
struct C_Uc_BFu0i { char v1; unsigned char v2; unsigned int :0; };
struct C_Uc_BFu0ll { char v1; unsigned char v2; unsigned long long :0; };
struct C_Uc_BFu0s { char v1; unsigned char v2; unsigned short :0; };
struct C_Ui_BFu0c { char v1; unsigned int v2; unsigned char :0; };
struct C_Ui_BFu0i { char v1; unsigned int v2; unsigned int :0; };
struct C_Ui_BFu0ll { char v1; unsigned int v2; unsigned long long :0; };
struct C_Ui_BFu0s { char v1; unsigned int v2; unsigned short :0; };
struct C_Ul_BFu0c { char v1; unsigned long long v2; unsigned char :0; };
struct C_Ul_BFu0i { char v1; unsigned long long v2; unsigned int :0; };
struct C_Ul_BFu0ll { char v1; unsigned long long v2; unsigned long long :0; };
struct C_Ul_BFu0s { char v1; unsigned long long v2; unsigned short :0; };
struct C_Us_BFu0c { char v1; unsigned short v2; unsigned char :0; };
struct C_Us_BFu0i { char v1; unsigned short v2; unsigned int :0; };
struct C_Us_BFu0ll { char v1; unsigned short v2; unsigned long long :0; };
struct C_Us_BFu0s { char v1; unsigned short v2; unsigned short :0; };
struct C_Vp_BFu0c { char v1; void * v2; unsigned char :0; };
struct C_Vp_BFu0i { char v1; void * v2; unsigned int :0; };
struct C_Vp_BFu0ll { char v1; void * v2; unsigned long long :0; };
struct C_Vp_BFu0s { char v1; void * v2; unsigned short :0; };
struct D_BFu0c { double v1; unsigned char :0; };
struct D_BFu0c_BFu0c { double v1; unsigned char :0; unsigned char :0; };
struct D_BFu0c_BFu0i { double v1; unsigned char :0; unsigned int :0; };
struct D_BFu0c_BFu0ll { double v1; unsigned char :0; unsigned long long :0; };
struct D_BFu0c_BFu0s { double v1; unsigned char :0; unsigned short :0; };
struct D_BFu0c_BFu15i { double v1; unsigned char :0; unsigned int v2:15; };
struct D_BFu0c_BFu15ll { double v1; unsigned char :0; unsigned long long v2:15; };
struct D_BFu0c_BFu15s { double v1; unsigned char :0; unsigned short v2:15; };
struct D_BFu0c_BFu16i { double v1; unsigned char :0; unsigned int v2:16; };
struct D_BFu0c_BFu16ll { double v1; unsigned char :0; unsigned long long v2:16; };
struct D_BFu0c_BFu16s { double v1; unsigned char :0; unsigned short v2:16; };
struct D_BFu0c_BFu17i { double v1; unsigned char :0; unsigned int v2:17; };
struct D_BFu0c_BFu17ll { double v1; unsigned char :0; unsigned long long v2:17; };
struct D_BFu0c_BFu1c { double v1; unsigned char :0; unsigned char v2:1; };
struct D_BFu0c_BFu1i { double v1; unsigned char :0; unsigned int v2:1; };
struct D_BFu0c_BFu1ll { double v1; unsigned char :0; unsigned long long v2:1; };
struct D_BFu0c_BFu1s { double v1; unsigned char :0; unsigned short v2:1; };
struct D_BFu0c_BFu31i { double v1; unsigned char :0; unsigned int v2:31; };
struct D_BFu0c_BFu31ll { double v1; unsigned char :0; unsigned long long v2:31; };
struct D_BFu0c_BFu32i { double v1; unsigned char :0; unsigned int v2:32; };
struct D_BFu0c_BFu32ll { double v1; unsigned char :0; unsigned long long v2:32; };
struct D_BFu0c_BFu33 { double v1; unsigned char :0; unsigned long long v2:33; };
struct D_BFu0c_BFu7c { double v1; unsigned char :0; unsigned char v2:7; };
struct D_BFu0c_BFu7i { double v1; unsigned char :0; unsigned int v2:7; };
struct D_BFu0c_BFu7ll { double v1; unsigned char :0; unsigned long long v2:7; };
struct D_BFu0c_BFu7s { double v1; unsigned char :0; unsigned short v2:7; };
struct D_BFu0c_BFu8c { double v1; unsigned char :0; unsigned char v2:8; };
struct D_BFu0c_BFu8i { double v1; unsigned char :0; unsigned int v2:8; };
struct D_BFu0c_BFu8ll { double v1; unsigned char :0; unsigned long long v2:8; };
struct D_BFu0c_BFu8s { double v1; unsigned char :0; unsigned short v2:8; };
struct D_BFu0c_BFu9i { double v1; unsigned char :0; unsigned int v2:9; };
struct D_BFu0c_BFu9ll { double v1; unsigned char :0; unsigned long long v2:9; };
struct D_BFu0c_BFu9s { double v1; unsigned char :0; unsigned short v2:9; };
struct D_BFu0c_C { double v1; unsigned char :0; char v2; };
struct D_BFu0c_D { double v1; unsigned char :0; double v2; };
struct D_BFu0c_F { double v1; unsigned char :0; float v2; };
struct D_BFu0c_I { double v1; unsigned char :0; int v2; };
struct D_BFu0c_Ip { double v1; unsigned char :0; int * v2; };
struct D_BFu0c_L { double v1; unsigned char :0; long long v2; };
struct D_BFu0c_S { double v1; unsigned char :0; short v2; };
struct D_BFu0c_Uc { double v1; unsigned char :0; unsigned char v2; };
struct D_BFu0c_Ui { double v1; unsigned char :0; unsigned int v2; };
struct D_BFu0c_Ul { double v1; unsigned char :0; unsigned long long v2; };
struct D_BFu0c_Us { double v1; unsigned char :0; unsigned short v2; };
struct D_BFu0c_Vp { double v1; unsigned char :0; void * v2; };
struct D_BFu0i { double v1; unsigned int :0; };
struct D_BFu0i_BFu0c { double v1; unsigned int :0; unsigned char :0; };
struct D_BFu0i_BFu0i { double v1; unsigned int :0; unsigned int :0; };
struct D_BFu0i_BFu0ll { double v1; unsigned int :0; unsigned long long :0; };
struct D_BFu0i_BFu0s { double v1; unsigned int :0; unsigned short :0; };
struct D_BFu0i_BFu15i { double v1; unsigned int :0; unsigned int v2:15; };
struct D_BFu0i_BFu15ll { double v1; unsigned int :0; unsigned long long v2:15; };
struct D_BFu0i_BFu15s { double v1; unsigned int :0; unsigned short v2:15; };
struct D_BFu0i_BFu16i { double v1; unsigned int :0; unsigned int v2:16; };
struct D_BFu0i_BFu16ll { double v1; unsigned int :0; unsigned long long v2:16; };
struct D_BFu0i_BFu16s { double v1; unsigned int :0; unsigned short v2:16; };
struct D_BFu0i_BFu17i { double v1; unsigned int :0; unsigned int v2:17; };
struct D_BFu0i_BFu17ll { double v1; unsigned int :0; unsigned long long v2:17; };
struct D_BFu0i_BFu1c { double v1; unsigned int :0; unsigned char v2:1; };
struct D_BFu0i_BFu1i { double v1; unsigned int :0; unsigned int v2:1; };
struct D_BFu0i_BFu1ll { double v1; unsigned int :0; unsigned long long v2:1; };
struct D_BFu0i_BFu1s { double v1; unsigned int :0; unsigned short v2:1; };
struct D_BFu0i_BFu31i { double v1; unsigned int :0; unsigned int v2:31; };
struct D_BFu0i_BFu31ll { double v1; unsigned int :0; unsigned long long v2:31; };
struct D_BFu0i_BFu32i { double v1; unsigned int :0; unsigned int v2:32; };
struct D_BFu0i_BFu32ll { double v1; unsigned int :0; unsigned long long v2:32; };
struct D_BFu0i_BFu33 { double v1; unsigned int :0; unsigned long long v2:33; };
struct D_BFu0i_BFu7c { double v1; unsigned int :0; unsigned char v2:7; };
struct D_BFu0i_BFu7i { double v1; unsigned int :0; unsigned int v2:7; };
struct D_BFu0i_BFu7ll { double v1; unsigned int :0; unsigned long long v2:7; };
struct D_BFu0i_BFu7s { double v1; unsigned int :0; unsigned short v2:7; };
struct D_BFu0i_BFu8c { double v1; unsigned int :0; unsigned char v2:8; };
struct D_BFu0i_BFu8i { double v1; unsigned int :0; unsigned int v2:8; };
struct D_BFu0i_BFu8ll { double v1; unsigned int :0; unsigned long long v2:8; };
struct D_BFu0i_BFu8s { double v1; unsigned int :0; unsigned short v2:8; };
struct D_BFu0i_BFu9i { double v1; unsigned int :0; unsigned int v2:9; };
struct D_BFu0i_BFu9ll { double v1; unsigned int :0; unsigned long long v2:9; };
struct D_BFu0i_BFu9s { double v1; unsigned int :0; unsigned short v2:9; };
struct D_BFu0i_C { double v1; unsigned int :0; char v2; };
struct D_BFu0i_D { double v1; unsigned int :0; double v2; };
struct D_BFu0i_F { double v1; unsigned int :0; float v2; };
struct D_BFu0i_I { double v1; unsigned int :0; int v2; };
struct D_BFu0i_Ip { double v1; unsigned int :0; int * v2; };
struct D_BFu0i_L { double v1; unsigned int :0; long long v2; };
struct D_BFu0i_S { double v1; unsigned int :0; short v2; };
struct D_BFu0i_Uc { double v1; unsigned int :0; unsigned char v2; };
struct D_BFu0i_Ui { double v1; unsigned int :0; unsigned int v2; };
struct D_BFu0i_Ul { double v1; unsigned int :0; unsigned long long v2; };
struct D_BFu0i_Us { double v1; unsigned int :0; unsigned short v2; };
struct D_BFu0i_Vp { double v1; unsigned int :0; void * v2; };
struct D_BFu0ll { double v1; unsigned long long :0; };
struct D_BFu0ll_BFu0c { double v1; unsigned long long :0; unsigned char :0; };
struct D_BFu0ll_BFu0i { double v1; unsigned long long :0; unsigned int :0; };
struct D_BFu0ll_BFu0ll { double v1; unsigned long long :0; unsigned long long :0; };
struct D_BFu0ll_BFu0s { double v1; unsigned long long :0; unsigned short :0; };
struct D_BFu0ll_BFu15i { double v1; unsigned long long :0; unsigned int v2:15; };
struct D_BFu0ll_BFu15ll { double v1; unsigned long long :0; unsigned long long v2:15; };
struct D_BFu0ll_BFu15s { double v1; unsigned long long :0; unsigned short v2:15; };
struct D_BFu0ll_BFu16i { double v1; unsigned long long :0; unsigned int v2:16; };
struct D_BFu0ll_BFu16ll { double v1; unsigned long long :0; unsigned long long v2:16; };
struct D_BFu0ll_BFu16s { double v1; unsigned long long :0; unsigned short v2:16; };
struct D_BFu0ll_BFu17i { double v1; unsigned long long :0; unsigned int v2:17; };
struct D_BFu0ll_BFu17ll { double v1; unsigned long long :0; unsigned long long v2:17; };
struct D_BFu0ll_BFu1c { double v1; unsigned long long :0; unsigned char v2:1; };
struct D_BFu0ll_BFu1i { double v1; unsigned long long :0; unsigned int v2:1; };
struct D_BFu0ll_BFu1ll { double v1; unsigned long long :0; unsigned long long v2:1; };
struct D_BFu0ll_BFu1s { double v1; unsigned long long :0; unsigned short v2:1; };
struct D_BFu0ll_BFu31i { double v1; unsigned long long :0; unsigned int v2:31; };
struct D_BFu0ll_BFu31ll { double v1; unsigned long long :0; unsigned long long v2:31; };
struct D_BFu0ll_BFu32i { double v1; unsigned long long :0; unsigned int v2:32; };
struct D_BFu0ll_BFu32ll { double v1; unsigned long long :0; unsigned long long v2:32; };
struct D_BFu0ll_BFu33 { double v1; unsigned long long :0; unsigned long long v2:33; };
struct D_BFu0ll_BFu7c { double v1; unsigned long long :0; unsigned char v2:7; };
struct D_BFu0ll_BFu7i { double v1; unsigned long long :0; unsigned int v2:7; };
struct D_BFu0ll_BFu7ll { double v1; unsigned long long :0; unsigned long long v2:7; };
struct D_BFu0ll_BFu7s { double v1; unsigned long long :0; unsigned short v2:7; };
struct D_BFu0ll_BFu8c { double v1; unsigned long long :0; unsigned char v2:8; };
struct D_BFu0ll_BFu8i { double v1; unsigned long long :0; unsigned int v2:8; };
struct D_BFu0ll_BFu8ll { double v1; unsigned long long :0; unsigned long long v2:8; };
struct D_BFu0ll_BFu8s { double v1; unsigned long long :0; unsigned short v2:8; };
struct D_BFu0ll_BFu9i { double v1; unsigned long long :0; unsigned int v2:9; };
struct D_BFu0ll_BFu9ll { double v1; unsigned long long :0; unsigned long long v2:9; };
struct D_BFu0ll_BFu9s { double v1; unsigned long long :0; unsigned short v2:9; };
struct D_BFu0ll_C { double v1; unsigned long long :0; char v2; };
struct D_BFu0ll_D { double v1; unsigned long long :0; double v2; };
struct D_BFu0ll_F { double v1; unsigned long long :0; float v2; };
struct D_BFu0ll_I { double v1; unsigned long long :0; int v2; };
struct D_BFu0ll_Ip { double v1; unsigned long long :0; int * v2; };
struct D_BFu0ll_L { double v1; unsigned long long :0; long long v2; };
struct D_BFu0ll_S { double v1; unsigned long long :0; short v2; };
struct D_BFu0ll_Uc { double v1; unsigned long long :0; unsigned char v2; };
struct D_BFu0ll_Ui { double v1; unsigned long long :0; unsigned int v2; };
struct D_BFu0ll_Ul { double v1; unsigned long long :0; unsigned long long v2; };
struct D_BFu0ll_Us { double v1; unsigned long long :0; unsigned short v2; };
struct D_BFu0ll_Vp { double v1; unsigned long long :0; void * v2; };
struct D_BFu0s { double v1; unsigned short :0; };
struct D_BFu0s_BFu0c { double v1; unsigned short :0; unsigned char :0; };
struct D_BFu0s_BFu0i { double v1; unsigned short :0; unsigned int :0; };
struct D_BFu0s_BFu0ll { double v1; unsigned short :0; unsigned long long :0; };
struct D_BFu0s_BFu0s { double v1; unsigned short :0; unsigned short :0; };
struct D_BFu0s_BFu15i { double v1; unsigned short :0; unsigned int v2:15; };
struct D_BFu0s_BFu15ll { double v1; unsigned short :0; unsigned long long v2:15; };
struct D_BFu0s_BFu15s { double v1; unsigned short :0; unsigned short v2:15; };
struct D_BFu0s_BFu16i { double v1; unsigned short :0; unsigned int v2:16; };
struct D_BFu0s_BFu16ll { double v1; unsigned short :0; unsigned long long v2:16; };
struct D_BFu0s_BFu16s { double v1; unsigned short :0; unsigned short v2:16; };
struct D_BFu0s_BFu17i { double v1; unsigned short :0; unsigned int v2:17; };
struct D_BFu0s_BFu17ll { double v1; unsigned short :0; unsigned long long v2:17; };
struct D_BFu0s_BFu1c { double v1; unsigned short :0; unsigned char v2:1; };
struct D_BFu0s_BFu1i { double v1; unsigned short :0; unsigned int v2:1; };
struct D_BFu0s_BFu1ll { double v1; unsigned short :0; unsigned long long v2:1; };
struct D_BFu0s_BFu1s { double v1; unsigned short :0; unsigned short v2:1; };
struct D_BFu0s_BFu31i { double v1; unsigned short :0; unsigned int v2:31; };
struct D_BFu0s_BFu31ll { double v1; unsigned short :0; unsigned long long v2:31; };
struct D_BFu0s_BFu32i { double v1; unsigned short :0; unsigned int v2:32; };
struct D_BFu0s_BFu32ll { double v1; unsigned short :0; unsigned long long v2:32; };
struct D_BFu0s_BFu33 { double v1; unsigned short :0; unsigned long long v2:33; };
struct D_BFu0s_BFu7c { double v1; unsigned short :0; unsigned char v2:7; };
struct D_BFu0s_BFu7i { double v1; unsigned short :0; unsigned int v2:7; };
struct D_BFu0s_BFu7ll { double v1; unsigned short :0; unsigned long long v2:7; };
struct D_BFu0s_BFu7s { double v1; unsigned short :0; unsigned short v2:7; };
struct D_BFu0s_BFu8c { double v1; unsigned short :0; unsigned char v2:8; };
struct D_BFu0s_BFu8i { double v1; unsigned short :0; unsigned int v2:8; };
struct D_BFu0s_BFu8ll { double v1; unsigned short :0; unsigned long long v2:8; };
struct D_BFu0s_BFu8s { double v1; unsigned short :0; unsigned short v2:8; };
struct D_BFu0s_BFu9i { double v1; unsigned short :0; unsigned int v2:9; };
struct D_BFu0s_BFu9ll { double v1; unsigned short :0; unsigned long long v2:9; };
struct D_BFu0s_BFu9s { double v1; unsigned short :0; unsigned short v2:9; };
struct D_BFu0s_C { double v1; unsigned short :0; char v2; };
struct D_BFu0s_D { double v1; unsigned short :0; double v2; };
struct D_BFu0s_F { double v1; unsigned short :0; float v2; };
struct D_BFu0s_I { double v1; unsigned short :0; int v2; };
struct D_BFu0s_Ip { double v1; unsigned short :0; int * v2; };
struct D_BFu0s_L { double v1; unsigned short :0; long long v2; };
struct D_BFu0s_S { double v1; unsigned short :0; short v2; };
struct D_BFu0s_Uc { double v1; unsigned short :0; unsigned char v2; };
struct D_BFu0s_Ui { double v1; unsigned short :0; unsigned int v2; };
struct D_BFu0s_Ul { double v1; unsigned short :0; unsigned long long v2; };
struct D_BFu0s_Us { double v1; unsigned short :0; unsigned short v2; };
struct D_BFu0s_Vp { double v1; unsigned short :0; void * v2; };
struct D_BFu15i_BFu0c { double v1; unsigned int v2:15; unsigned char :0; };
struct D_BFu15i_BFu0i { double v1; unsigned int v2:15; unsigned int :0; };
struct D_BFu15i_BFu0ll { double v1; unsigned int v2:15; unsigned long long :0; };
struct D_BFu15i_BFu0s { double v1; unsigned int v2:15; unsigned short :0; };
struct D_BFu15ll_BFu0c { double v1; unsigned long long v2:15; unsigned char :0; };
struct D_BFu15ll_BFu0i { double v1; unsigned long long v2:15; unsigned int :0; };
struct D_BFu15ll_BFu0ll { double v1; unsigned long long v2:15; unsigned long long :0; };
struct D_BFu15ll_BFu0s { double v1; unsigned long long v2:15; unsigned short :0; };
struct D_BFu15s_BFu0c { double v1; unsigned short v2:15; unsigned char :0; };
struct D_BFu15s_BFu0i { double v1; unsigned short v2:15; unsigned int :0; };
struct D_BFu15s_BFu0ll { double v1; unsigned short v2:15; unsigned long long :0; };
struct D_BFu15s_BFu0s { double v1; unsigned short v2:15; unsigned short :0; };
struct D_BFu16i_BFu0c { double v1; unsigned int v2:16; unsigned char :0; };
struct D_BFu16i_BFu0i { double v1; unsigned int v2:16; unsigned int :0; };
struct D_BFu16i_BFu0ll { double v1; unsigned int v2:16; unsigned long long :0; };
struct D_BFu16i_BFu0s { double v1; unsigned int v2:16; unsigned short :0; };
struct D_BFu16ll_BFu0c { double v1; unsigned long long v2:16; unsigned char :0; };
struct D_BFu16ll_BFu0i { double v1; unsigned long long v2:16; unsigned int :0; };
struct D_BFu16ll_BFu0ll { double v1; unsigned long long v2:16; unsigned long long :0; };
struct D_BFu16ll_BFu0s { double v1; unsigned long long v2:16; unsigned short :0; };
struct D_BFu16s_BFu0c { double v1; unsigned short v2:16; unsigned char :0; };
struct D_BFu16s_BFu0i { double v1; unsigned short v2:16; unsigned int :0; };
struct D_BFu16s_BFu0ll { double v1; unsigned short v2:16; unsigned long long :0; };
struct D_BFu16s_BFu0s { double v1; unsigned short v2:16; unsigned short :0; };
struct D_BFu17i_BFu0c { double v1; unsigned int v2:17; unsigned char :0; };
struct D_BFu17i_BFu0i { double v1; unsigned int v2:17; unsigned int :0; };
struct D_BFu17i_BFu0ll { double v1; unsigned int v2:17; unsigned long long :0; };
struct D_BFu17i_BFu0s { double v1; unsigned int v2:17; unsigned short :0; };
struct D_BFu17ll_BFu0c { double v1; unsigned long long v2:17; unsigned char :0; };
struct D_BFu17ll_BFu0i { double v1; unsigned long long v2:17; unsigned int :0; };
struct D_BFu17ll_BFu0ll { double v1; unsigned long long v2:17; unsigned long long :0; };
struct D_BFu17ll_BFu0s { double v1; unsigned long long v2:17; unsigned short :0; };
struct D_BFu1c_BFu0c { double v1; unsigned char v2:1; unsigned char :0; };
struct D_BFu1c_BFu0i { double v1; unsigned char v2:1; unsigned int :0; };
struct D_BFu1c_BFu0ll { double v1; unsigned char v2:1; unsigned long long :0; };
struct D_BFu1c_BFu0s { double v1; unsigned char v2:1; unsigned short :0; };
struct D_BFu1i_BFu0c { double v1; unsigned int v2:1; unsigned char :0; };
struct D_BFu1i_BFu0i { double v1; unsigned int v2:1; unsigned int :0; };
struct D_BFu1i_BFu0ll { double v1; unsigned int v2:1; unsigned long long :0; };
struct D_BFu1i_BFu0s { double v1; unsigned int v2:1; unsigned short :0; };
struct D_BFu1ll_BFu0c { double v1; unsigned long long v2:1; unsigned char :0; };
struct D_BFu1ll_BFu0i { double v1; unsigned long long v2:1; unsigned int :0; };
struct D_BFu1ll_BFu0ll { double v1; unsigned long long v2:1; unsigned long long :0; };
struct D_BFu1ll_BFu0s { double v1; unsigned long long v2:1; unsigned short :0; };
struct D_BFu1s_BFu0c { double v1; unsigned short v2:1; unsigned char :0; };
struct D_BFu1s_BFu0i { double v1; unsigned short v2:1; unsigned int :0; };
struct D_BFu1s_BFu0ll { double v1; unsigned short v2:1; unsigned long long :0; };
struct D_BFu1s_BFu0s { double v1; unsigned short v2:1; unsigned short :0; };
struct D_BFu31i_BFu0c { double v1; unsigned int v2:31; unsigned char :0; };
struct D_BFu31i_BFu0i { double v1; unsigned int v2:31; unsigned int :0; };
struct D_BFu31i_BFu0ll { double v1; unsigned int v2:31; unsigned long long :0; };
struct D_BFu31i_BFu0s { double v1; unsigned int v2:31; unsigned short :0; };
struct D_BFu31ll_BFu0c { double v1; unsigned long long v2:31; unsigned char :0; };
struct D_BFu31ll_BFu0i { double v1; unsigned long long v2:31; unsigned int :0; };
struct D_BFu31ll_BFu0ll { double v1; unsigned long long v2:31; unsigned long long :0; };
struct D_BFu31ll_BFu0s { double v1; unsigned long long v2:31; unsigned short :0; };
struct D_BFu32i_BFu0c { double v1; unsigned int v2:32; unsigned char :0; };
struct D_BFu32i_BFu0i { double v1; unsigned int v2:32; unsigned int :0; };
struct D_BFu32i_BFu0ll { double v1; unsigned int v2:32; unsigned long long :0; };
struct D_BFu32i_BFu0s { double v1; unsigned int v2:32; unsigned short :0; };
struct D_BFu32ll_BFu0c { double v1; unsigned long long v2:32; unsigned char :0; };
struct D_BFu32ll_BFu0i { double v1; unsigned long long v2:32; unsigned int :0; };
struct D_BFu32ll_BFu0ll { double v1; unsigned long long v2:32; unsigned long long :0; };
struct D_BFu32ll_BFu0s { double v1; unsigned long long v2:32; unsigned short :0; };
struct D_BFu33_BFu0c { double v1; unsigned long long v2:33; unsigned char :0; };
struct D_BFu33_BFu0i { double v1; unsigned long long v2:33; unsigned int :0; };
struct D_BFu33_BFu0ll { double v1; unsigned long long v2:33; unsigned long long :0; };
struct D_BFu33_BFu0s { double v1; unsigned long long v2:33; unsigned short :0; };
struct D_BFu7c_BFu0c { double v1; unsigned char v2:7; unsigned char :0; };
struct D_BFu7c_BFu0i { double v1; unsigned char v2:7; unsigned int :0; };
struct D_BFu7c_BFu0ll { double v1; unsigned char v2:7; unsigned long long :0; };
struct D_BFu7c_BFu0s { double v1; unsigned char v2:7; unsigned short :0; };
struct D_BFu7i_BFu0c { double v1; unsigned int v2:7; unsigned char :0; };
struct D_BFu7i_BFu0i { double v1; unsigned int v2:7; unsigned int :0; };
struct D_BFu7i_BFu0ll { double v1; unsigned int v2:7; unsigned long long :0; };
struct D_BFu7i_BFu0s { double v1; unsigned int v2:7; unsigned short :0; };
struct D_BFu7ll_BFu0c { double v1; unsigned long long v2:7; unsigned char :0; };
struct D_BFu7ll_BFu0i { double v1; unsigned long long v2:7; unsigned int :0; };
struct D_BFu7ll_BFu0ll { double v1; unsigned long long v2:7; unsigned long long :0; };
struct D_BFu7ll_BFu0s { double v1; unsigned long long v2:7; unsigned short :0; };
struct D_BFu7s_BFu0c { double v1; unsigned short v2:7; unsigned char :0; };
struct D_BFu7s_BFu0i { double v1; unsigned short v2:7; unsigned int :0; };
struct D_BFu7s_BFu0ll { double v1; unsigned short v2:7; unsigned long long :0; };
struct D_BFu7s_BFu0s { double v1; unsigned short v2:7; unsigned short :0; };
struct D_BFu8c_BFu0c { double v1; unsigned char v2:8; unsigned char :0; };
struct D_BFu8c_BFu0i { double v1; unsigned char v2:8; unsigned int :0; };
struct D_BFu8c_BFu0ll { double v1; unsigned char v2:8; unsigned long long :0; };
struct D_BFu8c_BFu0s { double v1; unsigned char v2:8; unsigned short :0; };
struct D_BFu8i_BFu0c { double v1; unsigned int v2:8; unsigned char :0; };
struct D_BFu8i_BFu0i { double v1; unsigned int v2:8; unsigned int :0; };
struct D_BFu8i_BFu0ll { double v1; unsigned int v2:8; unsigned long long :0; };
struct D_BFu8i_BFu0s { double v1; unsigned int v2:8; unsigned short :0; };
struct D_BFu8ll_BFu0c { double v1; unsigned long long v2:8; unsigned char :0; };
struct D_BFu8ll_BFu0i { double v1; unsigned long long v2:8; unsigned int :0; };
struct D_BFu8ll_BFu0ll { double v1; unsigned long long v2:8; unsigned long long :0; };
struct D_BFu8ll_BFu0s { double v1; unsigned long long v2:8; unsigned short :0; };
struct D_BFu8s_BFu0c { double v1; unsigned short v2:8; unsigned char :0; };
struct D_BFu8s_BFu0i { double v1; unsigned short v2:8; unsigned int :0; };
struct D_BFu8s_BFu0ll { double v1; unsigned short v2:8; unsigned long long :0; };
struct D_BFu8s_BFu0s { double v1; unsigned short v2:8; unsigned short :0; };
struct D_BFu9i_BFu0c { double v1; unsigned int v2:9; unsigned char :0; };
struct D_BFu9i_BFu0i { double v1; unsigned int v2:9; unsigned int :0; };
struct D_BFu9i_BFu0ll { double v1; unsigned int v2:9; unsigned long long :0; };
struct D_BFu9i_BFu0s { double v1; unsigned int v2:9; unsigned short :0; };
struct D_BFu9ll_BFu0c { double v1; unsigned long long v2:9; unsigned char :0; };
struct D_BFu9ll_BFu0i { double v1; unsigned long long v2:9; unsigned int :0; };
struct D_BFu9ll_BFu0ll { double v1; unsigned long long v2:9; unsigned long long :0; };
struct D_BFu9ll_BFu0s { double v1; unsigned long long v2:9; unsigned short :0; };
struct D_BFu9s_BFu0c { double v1; unsigned short v2:9; unsigned char :0; };
struct D_BFu9s_BFu0i { double v1; unsigned short v2:9; unsigned int :0; };
struct D_BFu9s_BFu0ll { double v1; unsigned short v2:9; unsigned long long :0; };
struct D_BFu9s_BFu0s { double v1; unsigned short v2:9; unsigned short :0; };
struct D_C_BFu0c { double v1; char v2; unsigned char :0; };
struct D_C_BFu0i { double v1; char v2; unsigned int :0; };
struct D_C_BFu0ll { double v1; char v2; unsigned long long :0; };
struct D_C_BFu0s { double v1; char v2; unsigned short :0; };
struct D_D_BFu0c { double v1; double v2; unsigned char :0; };
struct D_D_BFu0i { double v1; double v2; unsigned int :0; };
struct D_D_BFu0ll { double v1; double v2; unsigned long long :0; };
struct D_D_BFu0s { double v1; double v2; unsigned short :0; };
struct D_F_BFu0c { double v1; float v2; unsigned char :0; };
struct D_F_BFu0i { double v1; float v2; unsigned int :0; };
struct D_F_BFu0ll { double v1; float v2; unsigned long long :0; };
struct D_F_BFu0s { double v1; float v2; unsigned short :0; };
struct D_I_BFu0c { double v1; int v2; unsigned char :0; };
struct D_I_BFu0i { double v1; int v2; unsigned int :0; };
struct D_I_BFu0ll { double v1; int v2; unsigned long long :0; };
struct D_I_BFu0s { double v1; int v2; unsigned short :0; };
struct D_Ip_BFu0c { double v1; int * v2; unsigned char :0; };
struct D_Ip_BFu0i { double v1; int * v2; unsigned int :0; };
struct D_Ip_BFu0ll { double v1; int * v2; unsigned long long :0; };
struct D_Ip_BFu0s { double v1; int * v2; unsigned short :0; };
struct D_L_BFu0c { double v1; long long v2; unsigned char :0; };
struct D_L_BFu0i { double v1; long long v2; unsigned int :0; };
struct D_L_BFu0ll { double v1; long long v2; unsigned long long :0; };
struct D_L_BFu0s { double v1; long long v2; unsigned short :0; };
struct D_S_BFu0c { double v1; short v2; unsigned char :0; };
struct D_S_BFu0i { double v1; short v2; unsigned int :0; };
struct D_S_BFu0ll { double v1; short v2; unsigned long long :0; };
struct D_S_BFu0s { double v1; short v2; unsigned short :0; };
struct D_Uc_BFu0c { double v1; unsigned char v2; unsigned char :0; };
struct D_Uc_BFu0i { double v1; unsigned char v2; unsigned int :0; };
struct D_Uc_BFu0ll { double v1; unsigned char v2; unsigned long long :0; };
struct D_Uc_BFu0s { double v1; unsigned char v2; unsigned short :0; };
struct D_Ui_BFu0c { double v1; unsigned int v2; unsigned char :0; };
struct D_Ui_BFu0i { double v1; unsigned int v2; unsigned int :0; };
struct D_Ui_BFu0ll { double v1; unsigned int v2; unsigned long long :0; };
struct D_Ui_BFu0s { double v1; unsigned int v2; unsigned short :0; };
struct D_Ul_BFu0c { double v1; unsigned long long v2; unsigned char :0; };
struct D_Ul_BFu0i { double v1; unsigned long long v2; unsigned int :0; };
struct D_Ul_BFu0ll { double v1; unsigned long long v2; unsigned long long :0; };
struct D_Ul_BFu0s { double v1; unsigned long long v2; unsigned short :0; };
struct D_Us_BFu0c { double v1; unsigned short v2; unsigned char :0; };
struct D_Us_BFu0i { double v1; unsigned short v2; unsigned int :0; };
struct D_Us_BFu0ll { double v1; unsigned short v2; unsigned long long :0; };
struct D_Us_BFu0s { double v1; unsigned short v2; unsigned short :0; };
struct D_Vp_BFu0c { double v1; void * v2; unsigned char :0; };
struct D_Vp_BFu0i { double v1; void * v2; unsigned int :0; };
struct D_Vp_BFu0ll { double v1; void * v2; unsigned long long :0; };
struct D_Vp_BFu0s { double v1; void * v2; unsigned short :0; };
struct F_BFu0c { float v1; unsigned char :0; };
struct F_BFu0c_BFu0c { float v1; unsigned char :0; unsigned char :0; };
struct F_BFu0c_BFu0i { float v1; unsigned char :0; unsigned int :0; };
struct F_BFu0c_BFu0ll { float v1; unsigned char :0; unsigned long long :0; };
struct F_BFu0c_BFu0s { float v1; unsigned char :0; unsigned short :0; };
struct F_BFu0c_BFu15i { float v1; unsigned char :0; unsigned int v2:15; };
struct F_BFu0c_BFu15ll { float v1; unsigned char :0; unsigned long long v2:15; };
struct F_BFu0c_BFu15s { float v1; unsigned char :0; unsigned short v2:15; };
struct F_BFu0c_BFu16i { float v1; unsigned char :0; unsigned int v2:16; };
struct F_BFu0c_BFu16ll { float v1; unsigned char :0; unsigned long long v2:16; };
struct F_BFu0c_BFu16s { float v1; unsigned char :0; unsigned short v2:16; };
struct F_BFu0c_BFu17i { float v1; unsigned char :0; unsigned int v2:17; };
struct F_BFu0c_BFu17ll { float v1; unsigned char :0; unsigned long long v2:17; };
struct F_BFu0c_BFu1c { float v1; unsigned char :0; unsigned char v2:1; };
struct F_BFu0c_BFu1i { float v1; unsigned char :0; unsigned int v2:1; };
struct F_BFu0c_BFu1ll { float v1; unsigned char :0; unsigned long long v2:1; };
struct F_BFu0c_BFu1s { float v1; unsigned char :0; unsigned short v2:1; };
struct F_BFu0c_BFu31i { float v1; unsigned char :0; unsigned int v2:31; };
struct F_BFu0c_BFu31ll { float v1; unsigned char :0; unsigned long long v2:31; };
struct F_BFu0c_BFu32i { float v1; unsigned char :0; unsigned int v2:32; };
struct F_BFu0c_BFu32ll { float v1; unsigned char :0; unsigned long long v2:32; };
struct F_BFu0c_BFu33 { float v1; unsigned char :0; unsigned long long v2:33; };
struct F_BFu0c_BFu7c { float v1; unsigned char :0; unsigned char v2:7; };
struct F_BFu0c_BFu7i { float v1; unsigned char :0; unsigned int v2:7; };
struct F_BFu0c_BFu7ll { float v1; unsigned char :0; unsigned long long v2:7; };
struct F_BFu0c_BFu7s { float v1; unsigned char :0; unsigned short v2:7; };
struct F_BFu0c_BFu8c { float v1; unsigned char :0; unsigned char v2:8; };
struct F_BFu0c_BFu8i { float v1; unsigned char :0; unsigned int v2:8; };
struct F_BFu0c_BFu8ll { float v1; unsigned char :0; unsigned long long v2:8; };
struct F_BFu0c_BFu8s { float v1; unsigned char :0; unsigned short v2:8; };
struct F_BFu0c_BFu9i { float v1; unsigned char :0; unsigned int v2:9; };
struct F_BFu0c_BFu9ll { float v1; unsigned char :0; unsigned long long v2:9; };
struct F_BFu0c_BFu9s { float v1; unsigned char :0; unsigned short v2:9; };
struct F_BFu0c_C { float v1; unsigned char :0; char v2; };
struct F_BFu0c_D { float v1; unsigned char :0; double v2; };
struct F_BFu0c_F { float v1; unsigned char :0; float v2; };
struct F_BFu0c_I { float v1; unsigned char :0; int v2; };
struct F_BFu0c_Ip { float v1; unsigned char :0; int * v2; };
struct F_BFu0c_L { float v1; unsigned char :0; long long v2; };
struct F_BFu0c_S { float v1; unsigned char :0; short v2; };
struct F_BFu0c_Uc { float v1; unsigned char :0; unsigned char v2; };
struct F_BFu0c_Ui { float v1; unsigned char :0; unsigned int v2; };
struct F_BFu0c_Ul { float v1; unsigned char :0; unsigned long long v2; };
struct F_BFu0c_Us { float v1; unsigned char :0; unsigned short v2; };
struct F_BFu0c_Vp { float v1; unsigned char :0; void * v2; };
struct F_BFu0i { float v1; unsigned int :0; };
struct F_BFu0i_BFu0c { float v1; unsigned int :0; unsigned char :0; };
struct F_BFu0i_BFu0i { float v1; unsigned int :0; unsigned int :0; };
struct F_BFu0i_BFu0ll { float v1; unsigned int :0; unsigned long long :0; };
struct F_BFu0i_BFu0s { float v1; unsigned int :0; unsigned short :0; };
struct F_BFu0i_BFu15i { float v1; unsigned int :0; unsigned int v2:15; };
struct F_BFu0i_BFu15ll { float v1; unsigned int :0; unsigned long long v2:15; };
struct F_BFu0i_BFu15s { float v1; unsigned int :0; unsigned short v2:15; };
struct F_BFu0i_BFu16i { float v1; unsigned int :0; unsigned int v2:16; };
struct F_BFu0i_BFu16ll { float v1; unsigned int :0; unsigned long long v2:16; };
struct F_BFu0i_BFu16s { float v1; unsigned int :0; unsigned short v2:16; };
struct F_BFu0i_BFu17i { float v1; unsigned int :0; unsigned int v2:17; };
struct F_BFu0i_BFu17ll { float v1; unsigned int :0; unsigned long long v2:17; };
struct F_BFu0i_BFu1c { float v1; unsigned int :0; unsigned char v2:1; };
struct F_BFu0i_BFu1i { float v1; unsigned int :0; unsigned int v2:1; };
struct F_BFu0i_BFu1ll { float v1; unsigned int :0; unsigned long long v2:1; };
struct F_BFu0i_BFu1s { float v1; unsigned int :0; unsigned short v2:1; };
struct F_BFu0i_BFu31i { float v1; unsigned int :0; unsigned int v2:31; };
struct F_BFu0i_BFu31ll { float v1; unsigned int :0; unsigned long long v2:31; };
struct F_BFu0i_BFu32i { float v1; unsigned int :0; unsigned int v2:32; };
struct F_BFu0i_BFu32ll { float v1; unsigned int :0; unsigned long long v2:32; };
struct F_BFu0i_BFu33 { float v1; unsigned int :0; unsigned long long v2:33; };
struct F_BFu0i_BFu7c { float v1; unsigned int :0; unsigned char v2:7; };
struct F_BFu0i_BFu7i { float v1; unsigned int :0; unsigned int v2:7; };
struct F_BFu0i_BFu7ll { float v1; unsigned int :0; unsigned long long v2:7; };
struct F_BFu0i_BFu7s { float v1; unsigned int :0; unsigned short v2:7; };
struct F_BFu0i_BFu8c { float v1; unsigned int :0; unsigned char v2:8; };
struct F_BFu0i_BFu8i { float v1; unsigned int :0; unsigned int v2:8; };
struct F_BFu0i_BFu8ll { float v1; unsigned int :0; unsigned long long v2:8; };
struct F_BFu0i_BFu8s { float v1; unsigned int :0; unsigned short v2:8; };
struct F_BFu0i_BFu9i { float v1; unsigned int :0; unsigned int v2:9; };
struct F_BFu0i_BFu9ll { float v1; unsigned int :0; unsigned long long v2:9; };
struct F_BFu0i_BFu9s { float v1; unsigned int :0; unsigned short v2:9; };
struct F_BFu0i_C { float v1; unsigned int :0; char v2; };
struct F_BFu0i_D { float v1; unsigned int :0; double v2; };
struct F_BFu0i_F { float v1; unsigned int :0; float v2; };
struct F_BFu0i_I { float v1; unsigned int :0; int v2; };
struct F_BFu0i_Ip { float v1; unsigned int :0; int * v2; };
struct F_BFu0i_L { float v1; unsigned int :0; long long v2; };
struct F_BFu0i_S { float v1; unsigned int :0; short v2; };
struct F_BFu0i_Uc { float v1; unsigned int :0; unsigned char v2; };
struct F_BFu0i_Ui { float v1; unsigned int :0; unsigned int v2; };
struct F_BFu0i_Ul { float v1; unsigned int :0; unsigned long long v2; };
struct F_BFu0i_Us { float v1; unsigned int :0; unsigned short v2; };
struct F_BFu0i_Vp { float v1; unsigned int :0; void * v2; };
struct F_BFu0ll { float v1; unsigned long long :0; };
struct F_BFu0ll_BFu0c { float v1; unsigned long long :0; unsigned char :0; };
struct F_BFu0ll_BFu0i { float v1; unsigned long long :0; unsigned int :0; };
struct F_BFu0ll_BFu0ll { float v1; unsigned long long :0; unsigned long long :0; };
struct F_BFu0ll_BFu0s { float v1; unsigned long long :0; unsigned short :0; };
struct F_BFu0ll_BFu15i { float v1; unsigned long long :0; unsigned int v2:15; };
struct F_BFu0ll_BFu15ll { float v1; unsigned long long :0; unsigned long long v2:15; };
struct F_BFu0ll_BFu15s { float v1; unsigned long long :0; unsigned short v2:15; };
struct F_BFu0ll_BFu16i { float v1; unsigned long long :0; unsigned int v2:16; };
struct F_BFu0ll_BFu16ll { float v1; unsigned long long :0; unsigned long long v2:16; };
struct F_BFu0ll_BFu16s { float v1; unsigned long long :0; unsigned short v2:16; };
struct F_BFu0ll_BFu17i { float v1; unsigned long long :0; unsigned int v2:17; };
struct F_BFu0ll_BFu17ll { float v1; unsigned long long :0; unsigned long long v2:17; };
struct F_BFu0ll_BFu1c { float v1; unsigned long long :0; unsigned char v2:1; };
struct F_BFu0ll_BFu1i { float v1; unsigned long long :0; unsigned int v2:1; };
struct F_BFu0ll_BFu1ll { float v1; unsigned long long :0; unsigned long long v2:1; };
struct F_BFu0ll_BFu1s { float v1; unsigned long long :0; unsigned short v2:1; };
struct F_BFu0ll_BFu31i { float v1; unsigned long long :0; unsigned int v2:31; };
struct F_BFu0ll_BFu31ll { float v1; unsigned long long :0; unsigned long long v2:31; };
struct F_BFu0ll_BFu32i { float v1; unsigned long long :0; unsigned int v2:32; };
struct F_BFu0ll_BFu32ll { float v1; unsigned long long :0; unsigned long long v2:32; };
struct F_BFu0ll_BFu33 { float v1; unsigned long long :0; unsigned long long v2:33; };
struct F_BFu0ll_BFu7c { float v1; unsigned long long :0; unsigned char v2:7; };
struct F_BFu0ll_BFu7i { float v1; unsigned long long :0; unsigned int v2:7; };
struct F_BFu0ll_BFu7ll { float v1; unsigned long long :0; unsigned long long v2:7; };
struct F_BFu0ll_BFu7s { float v1; unsigned long long :0; unsigned short v2:7; };
struct F_BFu0ll_BFu8c { float v1; unsigned long long :0; unsigned char v2:8; };
struct F_BFu0ll_BFu8i { float v1; unsigned long long :0; unsigned int v2:8; };
struct F_BFu0ll_BFu8ll { float v1; unsigned long long :0; unsigned long long v2:8; };
struct F_BFu0ll_BFu8s { float v1; unsigned long long :0; unsigned short v2:8; };
struct F_BFu0ll_BFu9i { float v1; unsigned long long :0; unsigned int v2:9; };
struct F_BFu0ll_BFu9ll { float v1; unsigned long long :0; unsigned long long v2:9; };
struct F_BFu0ll_BFu9s { float v1; unsigned long long :0; unsigned short v2:9; };
struct F_BFu0ll_C { float v1; unsigned long long :0; char v2; };
struct F_BFu0ll_D { float v1; unsigned long long :0; double v2; };
struct F_BFu0ll_F { float v1; unsigned long long :0; float v2; };
struct F_BFu0ll_I { float v1; unsigned long long :0; int v2; };
struct F_BFu0ll_Ip { float v1; unsigned long long :0; int * v2; };
struct F_BFu0ll_L { float v1; unsigned long long :0; long long v2; };
struct F_BFu0ll_S { float v1; unsigned long long :0; short v2; };
struct F_BFu0ll_Uc { float v1; unsigned long long :0; unsigned char v2; };
struct F_BFu0ll_Ui { float v1; unsigned long long :0; unsigned int v2; };
struct F_BFu0ll_Ul { float v1; unsigned long long :0; unsigned long long v2; };
struct F_BFu0ll_Us { float v1; unsigned long long :0; unsigned short v2; };
struct F_BFu0ll_Vp { float v1; unsigned long long :0; void * v2; };
struct F_BFu0s { float v1; unsigned short :0; };
struct F_BFu0s_BFu0c { float v1; unsigned short :0; unsigned char :0; };
struct F_BFu0s_BFu0i { float v1; unsigned short :0; unsigned int :0; };
struct F_BFu0s_BFu0ll { float v1; unsigned short :0; unsigned long long :0; };
struct F_BFu0s_BFu0s { float v1; unsigned short :0; unsigned short :0; };
struct F_BFu0s_BFu15i { float v1; unsigned short :0; unsigned int v2:15; };
struct F_BFu0s_BFu15ll { float v1; unsigned short :0; unsigned long long v2:15; };
struct F_BFu0s_BFu15s { float v1; unsigned short :0; unsigned short v2:15; };
struct F_BFu0s_BFu16i { float v1; unsigned short :0; unsigned int v2:16; };
struct F_BFu0s_BFu16ll { float v1; unsigned short :0; unsigned long long v2:16; };
struct F_BFu0s_BFu16s { float v1; unsigned short :0; unsigned short v2:16; };
struct F_BFu0s_BFu17i { float v1; unsigned short :0; unsigned int v2:17; };
struct F_BFu0s_BFu17ll { float v1; unsigned short :0; unsigned long long v2:17; };
struct F_BFu0s_BFu1c { float v1; unsigned short :0; unsigned char v2:1; };
struct F_BFu0s_BFu1i { float v1; unsigned short :0; unsigned int v2:1; };
struct F_BFu0s_BFu1ll { float v1; unsigned short :0; unsigned long long v2:1; };
struct F_BFu0s_BFu1s { float v1; unsigned short :0; unsigned short v2:1; };
struct F_BFu0s_BFu31i { float v1; unsigned short :0; unsigned int v2:31; };
struct F_BFu0s_BFu31ll { float v1; unsigned short :0; unsigned long long v2:31; };
struct F_BFu0s_BFu32i { float v1; unsigned short :0; unsigned int v2:32; };
struct F_BFu0s_BFu32ll { float v1; unsigned short :0; unsigned long long v2:32; };
struct F_BFu0s_BFu33 { float v1; unsigned short :0; unsigned long long v2:33; };
struct F_BFu0s_BFu7c { float v1; unsigned short :0; unsigned char v2:7; };
struct F_BFu0s_BFu7i { float v1; unsigned short :0; unsigned int v2:7; };
struct F_BFu0s_BFu7ll { float v1; unsigned short :0; unsigned long long v2:7; };
struct F_BFu0s_BFu7s { float v1; unsigned short :0; unsigned short v2:7; };
struct F_BFu0s_BFu8c { float v1; unsigned short :0; unsigned char v2:8; };
struct F_BFu0s_BFu8i { float v1; unsigned short :0; unsigned int v2:8; };
struct F_BFu0s_BFu8ll { float v1; unsigned short :0; unsigned long long v2:8; };
struct F_BFu0s_BFu8s { float v1; unsigned short :0; unsigned short v2:8; };
struct F_BFu0s_BFu9i { float v1; unsigned short :0; unsigned int v2:9; };
struct F_BFu0s_BFu9ll { float v1; unsigned short :0; unsigned long long v2:9; };
struct F_BFu0s_BFu9s { float v1; unsigned short :0; unsigned short v2:9; };
struct F_BFu0s_C { float v1; unsigned short :0; char v2; };
struct F_BFu0s_D { float v1; unsigned short :0; double v2; };
struct F_BFu0s_F { float v1; unsigned short :0; float v2; };
struct F_BFu0s_I { float v1; unsigned short :0; int v2; };
struct F_BFu0s_Ip { float v1; unsigned short :0; int * v2; };
struct F_BFu0s_L { float v1; unsigned short :0; long long v2; };
struct F_BFu0s_S { float v1; unsigned short :0; short v2; };
struct F_BFu0s_Uc { float v1; unsigned short :0; unsigned char v2; };
struct F_BFu0s_Ui { float v1; unsigned short :0; unsigned int v2; };
struct F_BFu0s_Ul { float v1; unsigned short :0; unsigned long long v2; };
struct F_BFu0s_Us { float v1; unsigned short :0; unsigned short v2; };
struct F_BFu0s_Vp { float v1; unsigned short :0; void * v2; };
struct F_BFu15i_BFu0c { float v1; unsigned int v2:15; unsigned char :0; };
struct F_BFu15i_BFu0i { float v1; unsigned int v2:15; unsigned int :0; };
struct F_BFu15i_BFu0ll { float v1; unsigned int v2:15; unsigned long long :0; };
struct F_BFu15i_BFu0s { float v1; unsigned int v2:15; unsigned short :0; };
struct F_BFu15ll_BFu0c { float v1; unsigned long long v2:15; unsigned char :0; };
struct F_BFu15ll_BFu0i { float v1; unsigned long long v2:15; unsigned int :0; };
struct F_BFu15ll_BFu0ll { float v1; unsigned long long v2:15; unsigned long long :0; };
struct F_BFu15ll_BFu0s { float v1; unsigned long long v2:15; unsigned short :0; };
struct F_BFu15s_BFu0c { float v1; unsigned short v2:15; unsigned char :0; };
struct F_BFu15s_BFu0i { float v1; unsigned short v2:15; unsigned int :0; };
struct F_BFu15s_BFu0ll { float v1; unsigned short v2:15; unsigned long long :0; };
struct F_BFu15s_BFu0s { float v1; unsigned short v2:15; unsigned short :0; };
struct F_BFu16i_BFu0c { float v1; unsigned int v2:16; unsigned char :0; };
struct F_BFu16i_BFu0i { float v1; unsigned int v2:16; unsigned int :0; };
struct F_BFu16i_BFu0ll { float v1; unsigned int v2:16; unsigned long long :0; };
struct F_BFu16i_BFu0s { float v1; unsigned int v2:16; unsigned short :0; };
struct F_BFu16ll_BFu0c { float v1; unsigned long long v2:16; unsigned char :0; };
struct F_BFu16ll_BFu0i { float v1; unsigned long long v2:16; unsigned int :0; };
struct F_BFu16ll_BFu0ll { float v1; unsigned long long v2:16; unsigned long long :0; };
struct F_BFu16ll_BFu0s { float v1; unsigned long long v2:16; unsigned short :0; };
struct F_BFu16s_BFu0c { float v1; unsigned short v2:16; unsigned char :0; };
struct F_BFu16s_BFu0i { float v1; unsigned short v2:16; unsigned int :0; };
struct F_BFu16s_BFu0ll { float v1; unsigned short v2:16; unsigned long long :0; };
struct F_BFu16s_BFu0s { float v1; unsigned short v2:16; unsigned short :0; };
struct F_BFu17i_BFu0c { float v1; unsigned int v2:17; unsigned char :0; };
struct F_BFu17i_BFu0i { float v1; unsigned int v2:17; unsigned int :0; };
struct F_BFu17i_BFu0ll { float v1; unsigned int v2:17; unsigned long long :0; };
struct F_BFu17i_BFu0s { float v1; unsigned int v2:17; unsigned short :0; };
struct F_BFu17ll_BFu0c { float v1; unsigned long long v2:17; unsigned char :0; };
struct F_BFu17ll_BFu0i { float v1; unsigned long long v2:17; unsigned int :0; };
struct F_BFu17ll_BFu0ll { float v1; unsigned long long v2:17; unsigned long long :0; };
struct F_BFu17ll_BFu0s { float v1; unsigned long long v2:17; unsigned short :0; };
struct F_BFu1c_BFu0c { float v1; unsigned char v2:1; unsigned char :0; };
struct F_BFu1c_BFu0i { float v1; unsigned char v2:1; unsigned int :0; };
struct F_BFu1c_BFu0ll { float v1; unsigned char v2:1; unsigned long long :0; };
struct F_BFu1c_BFu0s { float v1; unsigned char v2:1; unsigned short :0; };
struct F_BFu1i_BFu0c { float v1; unsigned int v2:1; unsigned char :0; };
struct F_BFu1i_BFu0i { float v1; unsigned int v2:1; unsigned int :0; };
struct F_BFu1i_BFu0ll { float v1; unsigned int v2:1; unsigned long long :0; };
struct F_BFu1i_BFu0s { float v1; unsigned int v2:1; unsigned short :0; };
struct F_BFu1ll_BFu0c { float v1; unsigned long long v2:1; unsigned char :0; };
struct F_BFu1ll_BFu0i { float v1; unsigned long long v2:1; unsigned int :0; };
struct F_BFu1ll_BFu0ll { float v1; unsigned long long v2:1; unsigned long long :0; };
struct F_BFu1ll_BFu0s { float v1; unsigned long long v2:1; unsigned short :0; };
struct F_BFu1s_BFu0c { float v1; unsigned short v2:1; unsigned char :0; };
struct F_BFu1s_BFu0i { float v1; unsigned short v2:1; unsigned int :0; };
struct F_BFu1s_BFu0ll { float v1; unsigned short v2:1; unsigned long long :0; };
struct F_BFu1s_BFu0s { float v1; unsigned short v2:1; unsigned short :0; };
struct F_BFu31i_BFu0c { float v1; unsigned int v2:31; unsigned char :0; };
struct F_BFu31i_BFu0i { float v1; unsigned int v2:31; unsigned int :0; };
struct F_BFu31i_BFu0ll { float v1; unsigned int v2:31; unsigned long long :0; };
struct F_BFu31i_BFu0s { float v1; unsigned int v2:31; unsigned short :0; };
struct F_BFu31ll_BFu0c { float v1; unsigned long long v2:31; unsigned char :0; };
struct F_BFu31ll_BFu0i { float v1; unsigned long long v2:31; unsigned int :0; };
struct F_BFu31ll_BFu0ll { float v1; unsigned long long v2:31; unsigned long long :0; };
struct F_BFu31ll_BFu0s { float v1; unsigned long long v2:31; unsigned short :0; };
struct F_BFu32i_BFu0c { float v1; unsigned int v2:32; unsigned char :0; };
struct F_BFu32i_BFu0i { float v1; unsigned int v2:32; unsigned int :0; };
struct F_BFu32i_BFu0ll { float v1; unsigned int v2:32; unsigned long long :0; };
struct F_BFu32i_BFu0s { float v1; unsigned int v2:32; unsigned short :0; };
struct F_BFu32ll_BFu0c { float v1; unsigned long long v2:32; unsigned char :0; };
struct F_BFu32ll_BFu0i { float v1; unsigned long long v2:32; unsigned int :0; };
struct F_BFu32ll_BFu0ll { float v1; unsigned long long v2:32; unsigned long long :0; };
struct F_BFu32ll_BFu0s { float v1; unsigned long long v2:32; unsigned short :0; };
struct F_BFu33_BFu0c { float v1; unsigned long long v2:33; unsigned char :0; };
struct F_BFu33_BFu0i { float v1; unsigned long long v2:33; unsigned int :0; };
struct F_BFu33_BFu0ll { float v1; unsigned long long v2:33; unsigned long long :0; };
struct F_BFu33_BFu0s { float v1; unsigned long long v2:33; unsigned short :0; };
struct F_BFu7c_BFu0c { float v1; unsigned char v2:7; unsigned char :0; };
struct F_BFu7c_BFu0i { float v1; unsigned char v2:7; unsigned int :0; };
struct F_BFu7c_BFu0ll { float v1; unsigned char v2:7; unsigned long long :0; };
struct F_BFu7c_BFu0s { float v1; unsigned char v2:7; unsigned short :0; };
struct F_BFu7i_BFu0c { float v1; unsigned int v2:7; unsigned char :0; };
struct F_BFu7i_BFu0i { float v1; unsigned int v2:7; unsigned int :0; };
struct F_BFu7i_BFu0ll { float v1; unsigned int v2:7; unsigned long long :0; };
struct F_BFu7i_BFu0s { float v1; unsigned int v2:7; unsigned short :0; };
struct F_BFu7ll_BFu0c { float v1; unsigned long long v2:7; unsigned char :0; };
struct F_BFu7ll_BFu0i { float v1; unsigned long long v2:7; unsigned int :0; };
struct F_BFu7ll_BFu0ll { float v1; unsigned long long v2:7; unsigned long long :0; };
struct F_BFu7ll_BFu0s { float v1; unsigned long long v2:7; unsigned short :0; };
struct F_BFu7s_BFu0c { float v1; unsigned short v2:7; unsigned char :0; };
struct F_BFu7s_BFu0i { float v1; unsigned short v2:7; unsigned int :0; };
struct F_BFu7s_BFu0ll { float v1; unsigned short v2:7; unsigned long long :0; };
struct F_BFu7s_BFu0s { float v1; unsigned short v2:7; unsigned short :0; };
struct F_BFu8c_BFu0c { float v1; unsigned char v2:8; unsigned char :0; };
struct F_BFu8c_BFu0i { float v1; unsigned char v2:8; unsigned int :0; };
struct F_BFu8c_BFu0ll { float v1; unsigned char v2:8; unsigned long long :0; };
struct F_BFu8c_BFu0s { float v1; unsigned char v2:8; unsigned short :0; };
struct F_BFu8i_BFu0c { float v1; unsigned int v2:8; unsigned char :0; };
struct F_BFu8i_BFu0i { float v1; unsigned int v2:8; unsigned int :0; };
struct F_BFu8i_BFu0ll { float v1; unsigned int v2:8; unsigned long long :0; };
struct F_BFu8i_BFu0s { float v1; unsigned int v2:8; unsigned short :0; };
struct F_BFu8ll_BFu0c { float v1; unsigned long long v2:8; unsigned char :0; };
struct F_BFu8ll_BFu0i { float v1; unsigned long long v2:8; unsigned int :0; };
struct F_BFu8ll_BFu0ll { float v1; unsigned long long v2:8; unsigned long long :0; };
struct F_BFu8ll_BFu0s { float v1; unsigned long long v2:8; unsigned short :0; };
struct F_BFu8s_BFu0c { float v1; unsigned short v2:8; unsigned char :0; };
struct F_BFu8s_BFu0i { float v1; unsigned short v2:8; unsigned int :0; };
struct F_BFu8s_BFu0ll { float v1; unsigned short v2:8; unsigned long long :0; };
struct F_BFu8s_BFu0s { float v1; unsigned short v2:8; unsigned short :0; };
struct F_BFu9i_BFu0c { float v1; unsigned int v2:9; unsigned char :0; };
struct F_BFu9i_BFu0i { float v1; unsigned int v2:9; unsigned int :0; };
struct F_BFu9i_BFu0ll { float v1; unsigned int v2:9; unsigned long long :0; };
struct F_BFu9i_BFu0s { float v1; unsigned int v2:9; unsigned short :0; };
struct F_BFu9ll_BFu0c { float v1; unsigned long long v2:9; unsigned char :0; };
struct F_BFu9ll_BFu0i { float v1; unsigned long long v2:9; unsigned int :0; };
struct F_BFu9ll_BFu0ll { float v1; unsigned long long v2:9; unsigned long long :0; };
struct F_BFu9ll_BFu0s { float v1; unsigned long long v2:9; unsigned short :0; };
struct F_BFu9s_BFu0c { float v1; unsigned short v2:9; unsigned char :0; };
struct F_BFu9s_BFu0i { float v1; unsigned short v2:9; unsigned int :0; };
struct F_BFu9s_BFu0ll { float v1; unsigned short v2:9; unsigned long long :0; };
struct F_BFu9s_BFu0s { float v1; unsigned short v2:9; unsigned short :0; };
struct F_C_BFu0c { float v1; char v2; unsigned char :0; };
struct F_C_BFu0i { float v1; char v2; unsigned int :0; };
struct F_C_BFu0ll { float v1; char v2; unsigned long long :0; };
struct F_C_BFu0s { float v1; char v2; unsigned short :0; };
struct F_D_BFu0c { float v1; double v2; unsigned char :0; };
struct F_D_BFu0i { float v1; double v2; unsigned int :0; };
struct F_D_BFu0ll { float v1; double v2; unsigned long long :0; };
struct F_D_BFu0s { float v1; double v2; unsigned short :0; };
struct F_F_BFu0c { float v1; float v2; unsigned char :0; };
struct F_F_BFu0i { float v1; float v2; unsigned int :0; };
struct F_F_BFu0ll { float v1; float v2; unsigned long long :0; };
struct F_F_BFu0s { float v1; float v2; unsigned short :0; };
struct F_I_BFu0c { float v1; int v2; unsigned char :0; };
struct F_I_BFu0i { float v1; int v2; unsigned int :0; };
struct F_I_BFu0ll { float v1; int v2; unsigned long long :0; };
struct F_I_BFu0s { float v1; int v2; unsigned short :0; };
struct F_Ip_BFu0c { float v1; int * v2; unsigned char :0; };
struct F_Ip_BFu0i { float v1; int * v2; unsigned int :0; };
struct F_Ip_BFu0ll { float v1; int * v2; unsigned long long :0; };
struct F_Ip_BFu0s { float v1; int * v2; unsigned short :0; };
struct F_L_BFu0c { float v1; long long v2; unsigned char :0; };
struct F_L_BFu0i { float v1; long long v2; unsigned int :0; };
struct F_L_BFu0ll { float v1; long long v2; unsigned long long :0; };
struct F_L_BFu0s { float v1; long long v2; unsigned short :0; };
struct F_S_BFu0c { float v1; short v2; unsigned char :0; };
struct F_S_BFu0i { float v1; short v2; unsigned int :0; };
struct F_S_BFu0ll { float v1; short v2; unsigned long long :0; };
struct F_S_BFu0s { float v1; short v2; unsigned short :0; };
struct F_Uc_BFu0c { float v1; unsigned char v2; unsigned char :0; };
struct F_Uc_BFu0i { float v1; unsigned char v2; unsigned int :0; };
struct F_Uc_BFu0ll { float v1; unsigned char v2; unsigned long long :0; };
struct F_Uc_BFu0s { float v1; unsigned char v2; unsigned short :0; };
struct F_Ui_BFu0c { float v1; unsigned int v2; unsigned char :0; };
struct F_Ui_BFu0i { float v1; unsigned int v2; unsigned int :0; };
struct F_Ui_BFu0ll { float v1; unsigned int v2; unsigned long long :0; };
struct F_Ui_BFu0s { float v1; unsigned int v2; unsigned short :0; };
struct F_Ul_BFu0c { float v1; unsigned long long v2; unsigned char :0; };
struct F_Ul_BFu0i { float v1; unsigned long long v2; unsigned int :0; };
struct F_Ul_BFu0ll { float v1; unsigned long long v2; unsigned long long :0; };
struct F_Ul_BFu0s { float v1; unsigned long long v2; unsigned short :0; };
struct F_Us_BFu0c { float v1; unsigned short v2; unsigned char :0; };
struct F_Us_BFu0i { float v1; unsigned short v2; unsigned int :0; };
struct F_Us_BFu0ll { float v1; unsigned short v2; unsigned long long :0; };
struct F_Us_BFu0s { float v1; unsigned short v2; unsigned short :0; };
struct F_Vp_BFu0c { float v1; void * v2; unsigned char :0; };
struct F_Vp_BFu0i { float v1; void * v2; unsigned int :0; };
struct F_Vp_BFu0ll { float v1; void * v2; unsigned long long :0; };
struct F_Vp_BFu0s { float v1; void * v2; unsigned short :0; };
struct I_BFu0c { int v1; unsigned char :0; };
struct I_BFu0c_BFu0c { int v1; unsigned char :0; unsigned char :0; };
struct I_BFu0c_BFu0i { int v1; unsigned char :0; unsigned int :0; };
struct I_BFu0c_BFu0ll { int v1; unsigned char :0; unsigned long long :0; };
struct I_BFu0c_BFu0s { int v1; unsigned char :0; unsigned short :0; };
struct I_BFu0c_BFu15i { int v1; unsigned char :0; unsigned int v2:15; };
struct I_BFu0c_BFu15ll { int v1; unsigned char :0; unsigned long long v2:15; };
struct I_BFu0c_BFu15s { int v1; unsigned char :0; unsigned short v2:15; };
struct I_BFu0c_BFu16i { int v1; unsigned char :0; unsigned int v2:16; };
struct I_BFu0c_BFu16ll { int v1; unsigned char :0; unsigned long long v2:16; };
struct I_BFu0c_BFu16s { int v1; unsigned char :0; unsigned short v2:16; };
struct I_BFu0c_BFu17i { int v1; unsigned char :0; unsigned int v2:17; };
struct I_BFu0c_BFu17ll { int v1; unsigned char :0; unsigned long long v2:17; };
struct I_BFu0c_BFu1c { int v1; unsigned char :0; unsigned char v2:1; };
struct I_BFu0c_BFu1i { int v1; unsigned char :0; unsigned int v2:1; };
struct I_BFu0c_BFu1ll { int v1; unsigned char :0; unsigned long long v2:1; };
struct I_BFu0c_BFu1s { int v1; unsigned char :0; unsigned short v2:1; };
struct I_BFu0c_BFu31i { int v1; unsigned char :0; unsigned int v2:31; };
struct I_BFu0c_BFu31ll { int v1; unsigned char :0; unsigned long long v2:31; };
struct I_BFu0c_BFu32i { int v1; unsigned char :0; unsigned int v2:32; };
struct I_BFu0c_BFu32ll { int v1; unsigned char :0; unsigned long long v2:32; };
struct I_BFu0c_BFu33 { int v1; unsigned char :0; unsigned long long v2:33; };
struct I_BFu0c_BFu7c { int v1; unsigned char :0; unsigned char v2:7; };
struct I_BFu0c_BFu7i { int v1; unsigned char :0; unsigned int v2:7; };
struct I_BFu0c_BFu7ll { int v1; unsigned char :0; unsigned long long v2:7; };
struct I_BFu0c_BFu7s { int v1; unsigned char :0; unsigned short v2:7; };
struct I_BFu0c_BFu8c { int v1; unsigned char :0; unsigned char v2:8; };
struct I_BFu0c_BFu8i { int v1; unsigned char :0; unsigned int v2:8; };
struct I_BFu0c_BFu8ll { int v1; unsigned char :0; unsigned long long v2:8; };
struct I_BFu0c_BFu8s { int v1; unsigned char :0; unsigned short v2:8; };
struct I_BFu0c_BFu9i { int v1; unsigned char :0; unsigned int v2:9; };
struct I_BFu0c_BFu9ll { int v1; unsigned char :0; unsigned long long v2:9; };
struct I_BFu0c_BFu9s { int v1; unsigned char :0; unsigned short v2:9; };
struct I_BFu0c_C { int v1; unsigned char :0; char v2; };
struct I_BFu0c_D { int v1; unsigned char :0; double v2; };
struct I_BFu0c_F { int v1; unsigned char :0; float v2; };
struct I_BFu0c_I { int v1; unsigned char :0; int v2; };
struct I_BFu0c_Ip { int v1; unsigned char :0; int * v2; };
struct I_BFu0c_L { int v1; unsigned char :0; long long v2; };
struct I_BFu0c_S { int v1; unsigned char :0; short v2; };
struct I_BFu0c_Uc { int v1; unsigned char :0; unsigned char v2; };
struct I_BFu0c_Ui { int v1; unsigned char :0; unsigned int v2; };
struct I_BFu0c_Ul { int v1; unsigned char :0; unsigned long long v2; };
struct I_BFu0c_Us { int v1; unsigned char :0; unsigned short v2; };
struct I_BFu0c_Vp { int v1; unsigned char :0; void * v2; };
struct I_BFu0i { int v1; unsigned int :0; };
struct I_BFu0i_BFu0c { int v1; unsigned int :0; unsigned char :0; };
struct I_BFu0i_BFu0i { int v1; unsigned int :0; unsigned int :0; };
struct I_BFu0i_BFu0ll { int v1; unsigned int :0; unsigned long long :0; };
struct I_BFu0i_BFu0s { int v1; unsigned int :0; unsigned short :0; };
struct I_BFu0i_BFu15i { int v1; unsigned int :0; unsigned int v2:15; };
struct I_BFu0i_BFu15ll { int v1; unsigned int :0; unsigned long long v2:15; };
struct I_BFu0i_BFu15s { int v1; unsigned int :0; unsigned short v2:15; };
struct I_BFu0i_BFu16i { int v1; unsigned int :0; unsigned int v2:16; };
struct I_BFu0i_BFu16ll { int v1; unsigned int :0; unsigned long long v2:16; };
struct I_BFu0i_BFu16s { int v1; unsigned int :0; unsigned short v2:16; };
struct I_BFu0i_BFu17i { int v1; unsigned int :0; unsigned int v2:17; };
struct I_BFu0i_BFu17ll { int v1; unsigned int :0; unsigned long long v2:17; };
struct I_BFu0i_BFu1c { int v1; unsigned int :0; unsigned char v2:1; };
struct I_BFu0i_BFu1i { int v1; unsigned int :0; unsigned int v2:1; };
struct I_BFu0i_BFu1ll { int v1; unsigned int :0; unsigned long long v2:1; };
struct I_BFu0i_BFu1s { int v1; unsigned int :0; unsigned short v2:1; };
struct I_BFu0i_BFu31i { int v1; unsigned int :0; unsigned int v2:31; };
struct I_BFu0i_BFu31ll { int v1; unsigned int :0; unsigned long long v2:31; };
struct I_BFu0i_BFu32i { int v1; unsigned int :0; unsigned int v2:32; };
struct I_BFu0i_BFu32ll { int v1; unsigned int :0; unsigned long long v2:32; };
struct I_BFu0i_BFu33 { int v1; unsigned int :0; unsigned long long v2:33; };
struct I_BFu0i_BFu7c { int v1; unsigned int :0; unsigned char v2:7; };
struct I_BFu0i_BFu7i { int v1; unsigned int :0; unsigned int v2:7; };
struct I_BFu0i_BFu7ll { int v1; unsigned int :0; unsigned long long v2:7; };
struct I_BFu0i_BFu7s { int v1; unsigned int :0; unsigned short v2:7; };
struct I_BFu0i_BFu8c { int v1; unsigned int :0; unsigned char v2:8; };
struct I_BFu0i_BFu8i { int v1; unsigned int :0; unsigned int v2:8; };
struct I_BFu0i_BFu8ll { int v1; unsigned int :0; unsigned long long v2:8; };
struct I_BFu0i_BFu8s { int v1; unsigned int :0; unsigned short v2:8; };
struct I_BFu0i_BFu9i { int v1; unsigned int :0; unsigned int v2:9; };
struct I_BFu0i_BFu9ll { int v1; unsigned int :0; unsigned long long v2:9; };
struct I_BFu0i_BFu9s { int v1; unsigned int :0; unsigned short v2:9; };
struct I_BFu0i_C { int v1; unsigned int :0; char v2; };
struct I_BFu0i_D { int v1; unsigned int :0; double v2; };
struct I_BFu0i_F { int v1; unsigned int :0; float v2; };
struct I_BFu0i_I { int v1; unsigned int :0; int v2; };
struct I_BFu0i_Ip { int v1; unsigned int :0; int * v2; };
struct I_BFu0i_L { int v1; unsigned int :0; long long v2; };
struct I_BFu0i_S { int v1; unsigned int :0; short v2; };
struct I_BFu0i_Uc { int v1; unsigned int :0; unsigned char v2; };
struct I_BFu0i_Ui { int v1; unsigned int :0; unsigned int v2; };
struct I_BFu0i_Ul { int v1; unsigned int :0; unsigned long long v2; };
struct I_BFu0i_Us { int v1; unsigned int :0; unsigned short v2; };
struct I_BFu0i_Vp { int v1; unsigned int :0; void * v2; };
struct I_BFu0ll { int v1; unsigned long long :0; };
struct I_BFu0ll_BFu0c { int v1; unsigned long long :0; unsigned char :0; };
struct I_BFu0ll_BFu0i { int v1; unsigned long long :0; unsigned int :0; };
struct I_BFu0ll_BFu0ll { int v1; unsigned long long :0; unsigned long long :0; };
struct I_BFu0ll_BFu0s { int v1; unsigned long long :0; unsigned short :0; };
struct I_BFu0ll_BFu15i { int v1; unsigned long long :0; unsigned int v2:15; };
struct I_BFu0ll_BFu15ll { int v1; unsigned long long :0; unsigned long long v2:15; };
struct I_BFu0ll_BFu15s { int v1; unsigned long long :0; unsigned short v2:15; };
struct I_BFu0ll_BFu16i { int v1; unsigned long long :0; unsigned int v2:16; };
struct I_BFu0ll_BFu16ll { int v1; unsigned long long :0; unsigned long long v2:16; };
struct I_BFu0ll_BFu16s { int v1; unsigned long long :0; unsigned short v2:16; };
struct I_BFu0ll_BFu17i { int v1; unsigned long long :0; unsigned int v2:17; };
struct I_BFu0ll_BFu17ll { int v1; unsigned long long :0; unsigned long long v2:17; };
struct I_BFu0ll_BFu1c { int v1; unsigned long long :0; unsigned char v2:1; };
struct I_BFu0ll_BFu1i { int v1; unsigned long long :0; unsigned int v2:1; };
struct I_BFu0ll_BFu1ll { int v1; unsigned long long :0; unsigned long long v2:1; };
struct I_BFu0ll_BFu1s { int v1; unsigned long long :0; unsigned short v2:1; };
struct I_BFu0ll_BFu31i { int v1; unsigned long long :0; unsigned int v2:31; };
struct I_BFu0ll_BFu31ll { int v1; unsigned long long :0; unsigned long long v2:31; };
struct I_BFu0ll_BFu32i { int v1; unsigned long long :0; unsigned int v2:32; };
struct I_BFu0ll_BFu32ll { int v1; unsigned long long :0; unsigned long long v2:32; };
struct I_BFu0ll_BFu33 { int v1; unsigned long long :0; unsigned long long v2:33; };
struct I_BFu0ll_BFu7c { int v1; unsigned long long :0; unsigned char v2:7; };
struct I_BFu0ll_BFu7i { int v1; unsigned long long :0; unsigned int v2:7; };
struct I_BFu0ll_BFu7ll { int v1; unsigned long long :0; unsigned long long v2:7; };
struct I_BFu0ll_BFu7s { int v1; unsigned long long :0; unsigned short v2:7; };
struct I_BFu0ll_BFu8c { int v1; unsigned long long :0; unsigned char v2:8; };
struct I_BFu0ll_BFu8i { int v1; unsigned long long :0; unsigned int v2:8; };
struct I_BFu0ll_BFu8ll { int v1; unsigned long long :0; unsigned long long v2:8; };
struct I_BFu0ll_BFu8s { int v1; unsigned long long :0; unsigned short v2:8; };
struct I_BFu0ll_BFu9i { int v1; unsigned long long :0; unsigned int v2:9; };
struct I_BFu0ll_BFu9ll { int v1; unsigned long long :0; unsigned long long v2:9; };
struct I_BFu0ll_BFu9s { int v1; unsigned long long :0; unsigned short v2:9; };
struct I_BFu0ll_C { int v1; unsigned long long :0; char v2; };
struct I_BFu0ll_D { int v1; unsigned long long :0; double v2; };
struct I_BFu0ll_F { int v1; unsigned long long :0; float v2; };
struct I_BFu0ll_I { int v1; unsigned long long :0; int v2; };
struct I_BFu0ll_Ip { int v1; unsigned long long :0; int * v2; };
struct I_BFu0ll_L { int v1; unsigned long long :0; long long v2; };
struct I_BFu0ll_S { int v1; unsigned long long :0; short v2; };
struct I_BFu0ll_Uc { int v1; unsigned long long :0; unsigned char v2; };
struct I_BFu0ll_Ui { int v1; unsigned long long :0; unsigned int v2; };
struct I_BFu0ll_Ul { int v1; unsigned long long :0; unsigned long long v2; };
struct I_BFu0ll_Us { int v1; unsigned long long :0; unsigned short v2; };
struct I_BFu0ll_Vp { int v1; unsigned long long :0; void * v2; };
struct I_BFu0s { int v1; unsigned short :0; };
struct I_BFu0s_BFu0c { int v1; unsigned short :0; unsigned char :0; };
struct I_BFu0s_BFu0i { int v1; unsigned short :0; unsigned int :0; };
struct I_BFu0s_BFu0ll { int v1; unsigned short :0; unsigned long long :0; };
struct I_BFu0s_BFu0s { int v1; unsigned short :0; unsigned short :0; };
struct I_BFu0s_BFu15i { int v1; unsigned short :0; unsigned int v2:15; };
struct I_BFu0s_BFu15ll { int v1; unsigned short :0; unsigned long long v2:15; };
struct I_BFu0s_BFu15s { int v1; unsigned short :0; unsigned short v2:15; };
struct I_BFu0s_BFu16i { int v1; unsigned short :0; unsigned int v2:16; };
struct I_BFu0s_BFu16ll { int v1; unsigned short :0; unsigned long long v2:16; };
struct I_BFu0s_BFu16s { int v1; unsigned short :0; unsigned short v2:16; };
struct I_BFu0s_BFu17i { int v1; unsigned short :0; unsigned int v2:17; };
struct I_BFu0s_BFu17ll { int v1; unsigned short :0; unsigned long long v2:17; };
struct I_BFu0s_BFu1c { int v1; unsigned short :0; unsigned char v2:1; };
struct I_BFu0s_BFu1i { int v1; unsigned short :0; unsigned int v2:1; };
struct I_BFu0s_BFu1ll { int v1; unsigned short :0; unsigned long long v2:1; };
struct I_BFu0s_BFu1s { int v1; unsigned short :0; unsigned short v2:1; };
struct I_BFu0s_BFu31i { int v1; unsigned short :0; unsigned int v2:31; };
struct I_BFu0s_BFu31ll { int v1; unsigned short :0; unsigned long long v2:31; };
struct I_BFu0s_BFu32i { int v1; unsigned short :0; unsigned int v2:32; };
struct I_BFu0s_BFu32ll { int v1; unsigned short :0; unsigned long long v2:32; };
struct I_BFu0s_BFu33 { int v1; unsigned short :0; unsigned long long v2:33; };
struct I_BFu0s_BFu7c { int v1; unsigned short :0; unsigned char v2:7; };
struct I_BFu0s_BFu7i { int v1; unsigned short :0; unsigned int v2:7; };
struct I_BFu0s_BFu7ll { int v1; unsigned short :0; unsigned long long v2:7; };
struct I_BFu0s_BFu7s { int v1; unsigned short :0; unsigned short v2:7; };
struct I_BFu0s_BFu8c { int v1; unsigned short :0; unsigned char v2:8; };
struct I_BFu0s_BFu8i { int v1; unsigned short :0; unsigned int v2:8; };
struct I_BFu0s_BFu8ll { int v1; unsigned short :0; unsigned long long v2:8; };
struct I_BFu0s_BFu8s { int v1; unsigned short :0; unsigned short v2:8; };
struct I_BFu0s_BFu9i { int v1; unsigned short :0; unsigned int v2:9; };
struct I_BFu0s_BFu9ll { int v1; unsigned short :0; unsigned long long v2:9; };
struct I_BFu0s_BFu9s { int v1; unsigned short :0; unsigned short v2:9; };
struct I_BFu0s_C { int v1; unsigned short :0; char v2; };
struct I_BFu0s_D { int v1; unsigned short :0; double v2; };
struct I_BFu0s_F { int v1; unsigned short :0; float v2; };
struct I_BFu0s_I { int v1; unsigned short :0; int v2; };
struct I_BFu0s_Ip { int v1; unsigned short :0; int * v2; };
struct I_BFu0s_L { int v1; unsigned short :0; long long v2; };
struct I_BFu0s_S { int v1; unsigned short :0; short v2; };
struct I_BFu0s_Uc { int v1; unsigned short :0; unsigned char v2; };
struct I_BFu0s_Ui { int v1; unsigned short :0; unsigned int v2; };
struct I_BFu0s_Ul { int v1; unsigned short :0; unsigned long long v2; };
struct I_BFu0s_Us { int v1; unsigned short :0; unsigned short v2; };
struct I_BFu0s_Vp { int v1; unsigned short :0; void * v2; };
struct I_BFu15i_BFu0c { int v1; unsigned int v2:15; unsigned char :0; };
struct I_BFu15i_BFu0i { int v1; unsigned int v2:15; unsigned int :0; };
struct I_BFu15i_BFu0ll { int v1; unsigned int v2:15; unsigned long long :0; };
struct I_BFu15i_BFu0s { int v1; unsigned int v2:15; unsigned short :0; };
struct I_BFu15ll_BFu0c { int v1; unsigned long long v2:15; unsigned char :0; };
struct I_BFu15ll_BFu0i { int v1; unsigned long long v2:15; unsigned int :0; };
struct I_BFu15ll_BFu0ll { int v1; unsigned long long v2:15; unsigned long long :0; };
struct I_BFu15ll_BFu0s { int v1; unsigned long long v2:15; unsigned short :0; };
struct I_BFu15s_BFu0c { int v1; unsigned short v2:15; unsigned char :0; };
struct I_BFu15s_BFu0i { int v1; unsigned short v2:15; unsigned int :0; };
struct I_BFu15s_BFu0ll { int v1; unsigned short v2:15; unsigned long long :0; };
struct I_BFu15s_BFu0s { int v1; unsigned short v2:15; unsigned short :0; };
struct I_BFu16i_BFu0c { int v1; unsigned int v2:16; unsigned char :0; };
struct I_BFu16i_BFu0i { int v1; unsigned int v2:16; unsigned int :0; };
struct I_BFu16i_BFu0ll { int v1; unsigned int v2:16; unsigned long long :0; };
struct I_BFu16i_BFu0s { int v1; unsigned int v2:16; unsigned short :0; };
struct I_BFu16ll_BFu0c { int v1; unsigned long long v2:16; unsigned char :0; };
struct I_BFu16ll_BFu0i { int v1; unsigned long long v2:16; unsigned int :0; };
struct I_BFu16ll_BFu0ll { int v1; unsigned long long v2:16; unsigned long long :0; };
struct I_BFu16ll_BFu0s { int v1; unsigned long long v2:16; unsigned short :0; };
struct I_BFu16s_BFu0c { int v1; unsigned short v2:16; unsigned char :0; };
struct I_BFu16s_BFu0i { int v1; unsigned short v2:16; unsigned int :0; };
struct I_BFu16s_BFu0ll { int v1; unsigned short v2:16; unsigned long long :0; };
struct I_BFu16s_BFu0s { int v1; unsigned short v2:16; unsigned short :0; };
struct I_BFu17i_BFu0c { int v1; unsigned int v2:17; unsigned char :0; };
struct I_BFu17i_BFu0i { int v1; unsigned int v2:17; unsigned int :0; };
struct I_BFu17i_BFu0ll { int v1; unsigned int v2:17; unsigned long long :0; };
struct I_BFu17i_BFu0s { int v1; unsigned int v2:17; unsigned short :0; };
struct I_BFu17ll_BFu0c { int v1; unsigned long long v2:17; unsigned char :0; };
struct I_BFu17ll_BFu0i { int v1; unsigned long long v2:17; unsigned int :0; };
struct I_BFu17ll_BFu0ll { int v1; unsigned long long v2:17; unsigned long long :0; };
struct I_BFu17ll_BFu0s { int v1; unsigned long long v2:17; unsigned short :0; };
struct I_BFu1c_BFu0c { int v1; unsigned char v2:1; unsigned char :0; };
struct I_BFu1c_BFu0i { int v1; unsigned char v2:1; unsigned int :0; };
struct I_BFu1c_BFu0ll { int v1; unsigned char v2:1; unsigned long long :0; };
struct I_BFu1c_BFu0s { int v1; unsigned char v2:1; unsigned short :0; };
struct I_BFu1i_BFu0c { int v1; unsigned int v2:1; unsigned char :0; };
struct I_BFu1i_BFu0i { int v1; unsigned int v2:1; unsigned int :0; };
struct I_BFu1i_BFu0ll { int v1; unsigned int v2:1; unsigned long long :0; };
struct I_BFu1i_BFu0s { int v1; unsigned int v2:1; unsigned short :0; };
struct I_BFu1ll_BFu0c { int v1; unsigned long long v2:1; unsigned char :0; };
struct I_BFu1ll_BFu0i { int v1; unsigned long long v2:1; unsigned int :0; };
struct I_BFu1ll_BFu0ll { int v1; unsigned long long v2:1; unsigned long long :0; };
struct I_BFu1ll_BFu0s { int v1; unsigned long long v2:1; unsigned short :0; };
struct I_BFu1s_BFu0c { int v1; unsigned short v2:1; unsigned char :0; };
struct I_BFu1s_BFu0i { int v1; unsigned short v2:1; unsigned int :0; };
struct I_BFu1s_BFu0ll { int v1; unsigned short v2:1; unsigned long long :0; };
struct I_BFu1s_BFu0s { int v1; unsigned short v2:1; unsigned short :0; };
struct I_BFu31i_BFu0c { int v1; unsigned int v2:31; unsigned char :0; };
struct I_BFu31i_BFu0i { int v1; unsigned int v2:31; unsigned int :0; };
struct I_BFu31i_BFu0ll { int v1; unsigned int v2:31; unsigned long long :0; };
struct I_BFu31i_BFu0s { int v1; unsigned int v2:31; unsigned short :0; };
struct I_BFu31ll_BFu0c { int v1; unsigned long long v2:31; unsigned char :0; };
struct I_BFu31ll_BFu0i { int v1; unsigned long long v2:31; unsigned int :0; };
struct I_BFu31ll_BFu0ll { int v1; unsigned long long v2:31; unsigned long long :0; };
struct I_BFu31ll_BFu0s { int v1; unsigned long long v2:31; unsigned short :0; };
struct I_BFu32i_BFu0c { int v1; unsigned int v2:32; unsigned char :0; };
struct I_BFu32i_BFu0i { int v1; unsigned int v2:32; unsigned int :0; };
struct I_BFu32i_BFu0ll { int v1; unsigned int v2:32; unsigned long long :0; };
struct I_BFu32i_BFu0s { int v1; unsigned int v2:32; unsigned short :0; };
struct I_BFu32ll_BFu0c { int v1; unsigned long long v2:32; unsigned char :0; };
struct I_BFu32ll_BFu0i { int v1; unsigned long long v2:32; unsigned int :0; };
struct I_BFu32ll_BFu0ll { int v1; unsigned long long v2:32; unsigned long long :0; };
struct I_BFu32ll_BFu0s { int v1; unsigned long long v2:32; unsigned short :0; };
struct I_BFu33_BFu0c { int v1; unsigned long long v2:33; unsigned char :0; };
struct I_BFu33_BFu0i { int v1; unsigned long long v2:33; unsigned int :0; };
struct I_BFu33_BFu0ll { int v1; unsigned long long v2:33; unsigned long long :0; };
struct I_BFu33_BFu0s { int v1; unsigned long long v2:33; unsigned short :0; };
struct I_BFu7c_BFu0c { int v1; unsigned char v2:7; unsigned char :0; };
struct I_BFu7c_BFu0i { int v1; unsigned char v2:7; unsigned int :0; };
struct I_BFu7c_BFu0ll { int v1; unsigned char v2:7; unsigned long long :0; };
struct I_BFu7c_BFu0s { int v1; unsigned char v2:7; unsigned short :0; };
struct I_BFu7i_BFu0c { int v1; unsigned int v2:7; unsigned char :0; };
struct I_BFu7i_BFu0i { int v1; unsigned int v2:7; unsigned int :0; };
struct I_BFu7i_BFu0ll { int v1; unsigned int v2:7; unsigned long long :0; };
struct I_BFu7i_BFu0s { int v1; unsigned int v2:7; unsigned short :0; };
struct I_BFu7ll_BFu0c { int v1; unsigned long long v2:7; unsigned char :0; };
struct I_BFu7ll_BFu0i { int v1; unsigned long long v2:7; unsigned int :0; };
struct I_BFu7ll_BFu0ll { int v1; unsigned long long v2:7; unsigned long long :0; };
struct I_BFu7ll_BFu0s { int v1; unsigned long long v2:7; unsigned short :0; };
struct I_BFu7s_BFu0c { int v1; unsigned short v2:7; unsigned char :0; };
struct I_BFu7s_BFu0i { int v1; unsigned short v2:7; unsigned int :0; };
struct I_BFu7s_BFu0ll { int v1; unsigned short v2:7; unsigned long long :0; };
struct I_BFu7s_BFu0s { int v1; unsigned short v2:7; unsigned short :0; };
struct I_BFu8c_BFu0c { int v1; unsigned char v2:8; unsigned char :0; };
struct I_BFu8c_BFu0i { int v1; unsigned char v2:8; unsigned int :0; };
struct I_BFu8c_BFu0ll { int v1; unsigned char v2:8; unsigned long long :0; };
struct I_BFu8c_BFu0s { int v1; unsigned char v2:8; unsigned short :0; };
struct I_BFu8i_BFu0c { int v1; unsigned int v2:8; unsigned char :0; };
struct I_BFu8i_BFu0i { int v1; unsigned int v2:8; unsigned int :0; };
struct I_BFu8i_BFu0ll { int v1; unsigned int v2:8; unsigned long long :0; };
struct I_BFu8i_BFu0s { int v1; unsigned int v2:8; unsigned short :0; };
struct I_BFu8ll_BFu0c { int v1; unsigned long long v2:8; unsigned char :0; };
struct I_BFu8ll_BFu0i { int v1; unsigned long long v2:8; unsigned int :0; };
struct I_BFu8ll_BFu0ll { int v1; unsigned long long v2:8; unsigned long long :0; };
struct I_BFu8ll_BFu0s { int v1; unsigned long long v2:8; unsigned short :0; };
struct I_BFu8s_BFu0c { int v1; unsigned short v2:8; unsigned char :0; };
struct I_BFu8s_BFu0i { int v1; unsigned short v2:8; unsigned int :0; };
struct I_BFu8s_BFu0ll { int v1; unsigned short v2:8; unsigned long long :0; };
struct I_BFu8s_BFu0s { int v1; unsigned short v2:8; unsigned short :0; };
struct I_BFu9i_BFu0c { int v1; unsigned int v2:9; unsigned char :0; };
struct I_BFu9i_BFu0i { int v1; unsigned int v2:9; unsigned int :0; };
struct I_BFu9i_BFu0ll { int v1; unsigned int v2:9; unsigned long long :0; };
struct I_BFu9i_BFu0s { int v1; unsigned int v2:9; unsigned short :0; };
struct I_BFu9ll_BFu0c { int v1; unsigned long long v2:9; unsigned char :0; };
struct I_BFu9ll_BFu0i { int v1; unsigned long long v2:9; unsigned int :0; };
struct I_BFu9ll_BFu0ll { int v1; unsigned long long v2:9; unsigned long long :0; };
struct I_BFu9ll_BFu0s { int v1; unsigned long long v2:9; unsigned short :0; };
struct I_BFu9s_BFu0c { int v1; unsigned short v2:9; unsigned char :0; };
struct I_BFu9s_BFu0i { int v1; unsigned short v2:9; unsigned int :0; };
struct I_BFu9s_BFu0ll { int v1; unsigned short v2:9; unsigned long long :0; };
struct I_BFu9s_BFu0s { int v1; unsigned short v2:9; unsigned short :0; };
struct I_C_BFu0c { int v1; char v2; unsigned char :0; };
struct I_C_BFu0i { int v1; char v2; unsigned int :0; };
struct I_C_BFu0ll { int v1; char v2; unsigned long long :0; };
struct I_C_BFu0s { int v1; char v2; unsigned short :0; };
struct I_D_BFu0c { int v1; double v2; unsigned char :0; };
struct I_D_BFu0i { int v1; double v2; unsigned int :0; };
struct I_D_BFu0ll { int v1; double v2; unsigned long long :0; };
struct I_D_BFu0s { int v1; double v2; unsigned short :0; };
struct I_F_BFu0c { int v1; float v2; unsigned char :0; };
struct I_F_BFu0i { int v1; float v2; unsigned int :0; };
struct I_F_BFu0ll { int v1; float v2; unsigned long long :0; };
struct I_F_BFu0s { int v1; float v2; unsigned short :0; };
struct I_I_BFu0c { int v1; int v2; unsigned char :0; };
struct I_I_BFu0i { int v1; int v2; unsigned int :0; };
struct I_I_BFu0ll { int v1; int v2; unsigned long long :0; };
struct I_I_BFu0s { int v1; int v2; unsigned short :0; };
struct I_Ip_BFu0c { int v1; int * v2; unsigned char :0; };
struct I_Ip_BFu0i { int v1; int * v2; unsigned int :0; };
struct I_Ip_BFu0ll { int v1; int * v2; unsigned long long :0; };
struct I_Ip_BFu0s { int v1; int * v2; unsigned short :0; };
struct I_L_BFu0c { int v1; long long v2; unsigned char :0; };
struct I_L_BFu0i { int v1; long long v2; unsigned int :0; };
struct I_L_BFu0ll { int v1; long long v2; unsigned long long :0; };
struct I_L_BFu0s { int v1; long long v2; unsigned short :0; };
struct I_S_BFu0c { int v1; short v2; unsigned char :0; };
struct I_S_BFu0i { int v1; short v2; unsigned int :0; };
struct I_S_BFu0ll { int v1; short v2; unsigned long long :0; };
struct I_S_BFu0s { int v1; short v2; unsigned short :0; };
struct I_Uc_BFu0c { int v1; unsigned char v2; unsigned char :0; };
struct I_Uc_BFu0i { int v1; unsigned char v2; unsigned int :0; };
struct I_Uc_BFu0ll { int v1; unsigned char v2; unsigned long long :0; };
struct I_Uc_BFu0s { int v1; unsigned char v2; unsigned short :0; };
struct I_Ui_BFu0c { int v1; unsigned int v2; unsigned char :0; };
struct I_Ui_BFu0i { int v1; unsigned int v2; unsigned int :0; };
struct I_Ui_BFu0ll { int v1; unsigned int v2; unsigned long long :0; };
struct I_Ui_BFu0s { int v1; unsigned int v2; unsigned short :0; };
struct I_Ul_BFu0c { int v1; unsigned long long v2; unsigned char :0; };
struct I_Ul_BFu0i { int v1; unsigned long long v2; unsigned int :0; };
struct I_Ul_BFu0ll { int v1; unsigned long long v2; unsigned long long :0; };
struct I_Ul_BFu0s { int v1; unsigned long long v2; unsigned short :0; };
struct I_Us_BFu0c { int v1; unsigned short v2; unsigned char :0; };
struct I_Us_BFu0i { int v1; unsigned short v2; unsigned int :0; };
struct I_Us_BFu0ll { int v1; unsigned short v2; unsigned long long :0; };
struct I_Us_BFu0s { int v1; unsigned short v2; unsigned short :0; };
struct I_Vp_BFu0c { int v1; void * v2; unsigned char :0; };
struct I_Vp_BFu0i { int v1; void * v2; unsigned int :0; };
struct I_Vp_BFu0ll { int v1; void * v2; unsigned long long :0; };
struct I_Vp_BFu0s { int v1; void * v2; unsigned short :0; };
struct Ip_BFu0c { int * v1; unsigned char :0; };
struct Ip_BFu0c_BFu0c { int * v1; unsigned char :0; unsigned char :0; };
struct Ip_BFu0c_BFu0i { int * v1; unsigned char :0; unsigned int :0; };
struct Ip_BFu0c_BFu0ll { int * v1; unsigned char :0; unsigned long long :0; };
struct Ip_BFu0c_BFu0s { int * v1; unsigned char :0; unsigned short :0; };
struct Ip_BFu0c_BFu15i { int * v1; unsigned char :0; unsigned int v2:15; };
struct Ip_BFu0c_BFu15ll { int * v1; unsigned char :0; unsigned long long v2:15; };
struct Ip_BFu0c_BFu15s { int * v1; unsigned char :0; unsigned short v2:15; };
struct Ip_BFu0c_BFu16i { int * v1; unsigned char :0; unsigned int v2:16; };
struct Ip_BFu0c_BFu16ll { int * v1; unsigned char :0; unsigned long long v2:16; };
struct Ip_BFu0c_BFu16s { int * v1; unsigned char :0; unsigned short v2:16; };
struct Ip_BFu0c_BFu17i { int * v1; unsigned char :0; unsigned int v2:17; };
struct Ip_BFu0c_BFu17ll { int * v1; unsigned char :0; unsigned long long v2:17; };
struct Ip_BFu0c_BFu1c { int * v1; unsigned char :0; unsigned char v2:1; };
struct Ip_BFu0c_BFu1i { int * v1; unsigned char :0; unsigned int v2:1; };
struct Ip_BFu0c_BFu1ll { int * v1; unsigned char :0; unsigned long long v2:1; };
struct Ip_BFu0c_BFu1s { int * v1; unsigned char :0; unsigned short v2:1; };
struct Ip_BFu0c_BFu31i { int * v1; unsigned char :0; unsigned int v2:31; };
struct Ip_BFu0c_BFu31ll { int * v1; unsigned char :0; unsigned long long v2:31; };
struct Ip_BFu0c_BFu32i { int * v1; unsigned char :0; unsigned int v2:32; };
struct Ip_BFu0c_BFu32ll { int * v1; unsigned char :0; unsigned long long v2:32; };
struct Ip_BFu0c_BFu33 { int * v1; unsigned char :0; unsigned long long v2:33; };
struct Ip_BFu0c_BFu7c { int * v1; unsigned char :0; unsigned char v2:7; };
struct Ip_BFu0c_BFu7i { int * v1; unsigned char :0; unsigned int v2:7; };
struct Ip_BFu0c_BFu7ll { int * v1; unsigned char :0; unsigned long long v2:7; };
struct Ip_BFu0c_BFu7s { int * v1; unsigned char :0; unsigned short v2:7; };
struct Ip_BFu0c_BFu8c { int * v1; unsigned char :0; unsigned char v2:8; };
struct Ip_BFu0c_BFu8i { int * v1; unsigned char :0; unsigned int v2:8; };
struct Ip_BFu0c_BFu8ll { int * v1; unsigned char :0; unsigned long long v2:8; };
struct Ip_BFu0c_BFu8s { int * v1; unsigned char :0; unsigned short v2:8; };
struct Ip_BFu0c_BFu9i { int * v1; unsigned char :0; unsigned int v2:9; };
struct Ip_BFu0c_BFu9ll { int * v1; unsigned char :0; unsigned long long v2:9; };
struct Ip_BFu0c_BFu9s { int * v1; unsigned char :0; unsigned short v2:9; };
struct Ip_BFu0c_C { int * v1; unsigned char :0; char v2; };
struct Ip_BFu0c_D { int * v1; unsigned char :0; double v2; };
struct Ip_BFu0c_F { int * v1; unsigned char :0; float v2; };
struct Ip_BFu0c_I { int * v1; unsigned char :0; int v2; };
struct Ip_BFu0c_Ip { int * v1; unsigned char :0; int * v2; };
struct Ip_BFu0c_L { int * v1; unsigned char :0; long long v2; };
struct Ip_BFu0c_S { int * v1; unsigned char :0; short v2; };
struct Ip_BFu0c_Uc { int * v1; unsigned char :0; unsigned char v2; };
struct Ip_BFu0c_Ui { int * v1; unsigned char :0; unsigned int v2; };
struct Ip_BFu0c_Ul { int * v1; unsigned char :0; unsigned long long v2; };
struct Ip_BFu0c_Us { int * v1; unsigned char :0; unsigned short v2; };
struct Ip_BFu0c_Vp { int * v1; unsigned char :0; void * v2; };
struct Ip_BFu0i { int * v1; unsigned int :0; };
struct Ip_BFu0i_BFu0c { int * v1; unsigned int :0; unsigned char :0; };
struct Ip_BFu0i_BFu0i { int * v1; unsigned int :0; unsigned int :0; };
struct Ip_BFu0i_BFu0ll { int * v1; unsigned int :0; unsigned long long :0; };
struct Ip_BFu0i_BFu0s { int * v1; unsigned int :0; unsigned short :0; };
struct Ip_BFu0i_BFu15i { int * v1; unsigned int :0; unsigned int v2:15; };
struct Ip_BFu0i_BFu15ll { int * v1; unsigned int :0; unsigned long long v2:15; };
struct Ip_BFu0i_BFu15s { int * v1; unsigned int :0; unsigned short v2:15; };
struct Ip_BFu0i_BFu16i { int * v1; unsigned int :0; unsigned int v2:16; };
struct Ip_BFu0i_BFu16ll { int * v1; unsigned int :0; unsigned long long v2:16; };
struct Ip_BFu0i_BFu16s { int * v1; unsigned int :0; unsigned short v2:16; };
struct Ip_BFu0i_BFu17i { int * v1; unsigned int :0; unsigned int v2:17; };
struct Ip_BFu0i_BFu17ll { int * v1; unsigned int :0; unsigned long long v2:17; };
struct Ip_BFu0i_BFu1c { int * v1; unsigned int :0; unsigned char v2:1; };
struct Ip_BFu0i_BFu1i { int * v1; unsigned int :0; unsigned int v2:1; };
struct Ip_BFu0i_BFu1ll { int * v1; unsigned int :0; unsigned long long v2:1; };
struct Ip_BFu0i_BFu1s { int * v1; unsigned int :0; unsigned short v2:1; };
struct Ip_BFu0i_BFu31i { int * v1; unsigned int :0; unsigned int v2:31; };
struct Ip_BFu0i_BFu31ll { int * v1; unsigned int :0; unsigned long long v2:31; };
struct Ip_BFu0i_BFu32i { int * v1; unsigned int :0; unsigned int v2:32; };
struct Ip_BFu0i_BFu32ll { int * v1; unsigned int :0; unsigned long long v2:32; };
struct Ip_BFu0i_BFu33 { int * v1; unsigned int :0; unsigned long long v2:33; };
struct Ip_BFu0i_BFu7c { int * v1; unsigned int :0; unsigned char v2:7; };
struct Ip_BFu0i_BFu7i { int * v1; unsigned int :0; unsigned int v2:7; };
struct Ip_BFu0i_BFu7ll { int * v1; unsigned int :0; unsigned long long v2:7; };
struct Ip_BFu0i_BFu7s { int * v1; unsigned int :0; unsigned short v2:7; };
struct Ip_BFu0i_BFu8c { int * v1; unsigned int :0; unsigned char v2:8; };
struct Ip_BFu0i_BFu8i { int * v1; unsigned int :0; unsigned int v2:8; };
struct Ip_BFu0i_BFu8ll { int * v1; unsigned int :0; unsigned long long v2:8; };
struct Ip_BFu0i_BFu8s { int * v1; unsigned int :0; unsigned short v2:8; };
struct Ip_BFu0i_BFu9i { int * v1; unsigned int :0; unsigned int v2:9; };
struct Ip_BFu0i_BFu9ll { int * v1; unsigned int :0; unsigned long long v2:9; };
struct Ip_BFu0i_BFu9s { int * v1; unsigned int :0; unsigned short v2:9; };
struct Ip_BFu0i_C { int * v1; unsigned int :0; char v2; };
struct Ip_BFu0i_D { int * v1; unsigned int :0; double v2; };
struct Ip_BFu0i_F { int * v1; unsigned int :0; float v2; };
struct Ip_BFu0i_I { int * v1; unsigned int :0; int v2; };
struct Ip_BFu0i_Ip { int * v1; unsigned int :0; int * v2; };
struct Ip_BFu0i_L { int * v1; unsigned int :0; long long v2; };
struct Ip_BFu0i_S { int * v1; unsigned int :0; short v2; };
struct Ip_BFu0i_Uc { int * v1; unsigned int :0; unsigned char v2; };
struct Ip_BFu0i_Ui { int * v1; unsigned int :0; unsigned int v2; };
struct Ip_BFu0i_Ul { int * v1; unsigned int :0; unsigned long long v2; };
struct Ip_BFu0i_Us { int * v1; unsigned int :0; unsigned short v2; };
struct Ip_BFu0i_Vp { int * v1; unsigned int :0; void * v2; };
struct Ip_BFu0ll { int * v1; unsigned long long :0; };
struct Ip_BFu0ll_BFu0c { int * v1; unsigned long long :0; unsigned char :0; };
struct Ip_BFu0ll_BFu0i { int * v1; unsigned long long :0; unsigned int :0; };
struct Ip_BFu0ll_BFu0ll { int * v1; unsigned long long :0; unsigned long long :0; };
struct Ip_BFu0ll_BFu0s { int * v1; unsigned long long :0; unsigned short :0; };
struct Ip_BFu0ll_BFu15i { int * v1; unsigned long long :0; unsigned int v2:15; };
struct Ip_BFu0ll_BFu15ll { int * v1; unsigned long long :0; unsigned long long v2:15; };
struct Ip_BFu0ll_BFu15s { int * v1; unsigned long long :0; unsigned short v2:15; };
struct Ip_BFu0ll_BFu16i { int * v1; unsigned long long :0; unsigned int v2:16; };
struct Ip_BFu0ll_BFu16ll { int * v1; unsigned long long :0; unsigned long long v2:16; };
struct Ip_BFu0ll_BFu16s { int * v1; unsigned long long :0; unsigned short v2:16; };
struct Ip_BFu0ll_BFu17i { int * v1; unsigned long long :0; unsigned int v2:17; };
struct Ip_BFu0ll_BFu17ll { int * v1; unsigned long long :0; unsigned long long v2:17; };
struct Ip_BFu0ll_BFu1c { int * v1; unsigned long long :0; unsigned char v2:1; };
struct Ip_BFu0ll_BFu1i { int * v1; unsigned long long :0; unsigned int v2:1; };
struct Ip_BFu0ll_BFu1ll { int * v1; unsigned long long :0; unsigned long long v2:1; };
struct Ip_BFu0ll_BFu1s { int * v1; unsigned long long :0; unsigned short v2:1; };
struct Ip_BFu0ll_BFu31i { int * v1; unsigned long long :0; unsigned int v2:31; };
struct Ip_BFu0ll_BFu31ll { int * v1; unsigned long long :0; unsigned long long v2:31; };
struct Ip_BFu0ll_BFu32i { int * v1; unsigned long long :0; unsigned int v2:32; };
struct Ip_BFu0ll_BFu32ll { int * v1; unsigned long long :0; unsigned long long v2:32; };
struct Ip_BFu0ll_BFu33 { int * v1; unsigned long long :0; unsigned long long v2:33; };
struct Ip_BFu0ll_BFu7c { int * v1; unsigned long long :0; unsigned char v2:7; };
struct Ip_BFu0ll_BFu7i { int * v1; unsigned long long :0; unsigned int v2:7; };
struct Ip_BFu0ll_BFu7ll { int * v1; unsigned long long :0; unsigned long long v2:7; };
struct Ip_BFu0ll_BFu7s { int * v1; unsigned long long :0; unsigned short v2:7; };
struct Ip_BFu0ll_BFu8c { int * v1; unsigned long long :0; unsigned char v2:8; };
struct Ip_BFu0ll_BFu8i { int * v1; unsigned long long :0; unsigned int v2:8; };
struct Ip_BFu0ll_BFu8ll { int * v1; unsigned long long :0; unsigned long long v2:8; };
struct Ip_BFu0ll_BFu8s { int * v1; unsigned long long :0; unsigned short v2:8; };
struct Ip_BFu0ll_BFu9i { int * v1; unsigned long long :0; unsigned int v2:9; };
struct Ip_BFu0ll_BFu9ll { int * v1; unsigned long long :0; unsigned long long v2:9; };
struct Ip_BFu0ll_BFu9s { int * v1; unsigned long long :0; unsigned short v2:9; };
struct Ip_BFu0ll_C { int * v1; unsigned long long :0; char v2; };
struct Ip_BFu0ll_D { int * v1; unsigned long long :0; double v2; };
struct Ip_BFu0ll_F { int * v1; unsigned long long :0; float v2; };
struct Ip_BFu0ll_I { int * v1; unsigned long long :0; int v2; };
struct Ip_BFu0ll_Ip { int * v1; unsigned long long :0; int * v2; };
struct Ip_BFu0ll_L { int * v1; unsigned long long :0; long long v2; };
struct Ip_BFu0ll_S { int * v1; unsigned long long :0; short v2; };
struct Ip_BFu0ll_Uc { int * v1; unsigned long long :0; unsigned char v2; };
struct Ip_BFu0ll_Ui { int * v1; unsigned long long :0; unsigned int v2; };
struct Ip_BFu0ll_Ul { int * v1; unsigned long long :0; unsigned long long v2; };
struct Ip_BFu0ll_Us { int * v1; unsigned long long :0; unsigned short v2; };
struct Ip_BFu0ll_Vp { int * v1; unsigned long long :0; void * v2; };
struct Ip_BFu0s { int * v1; unsigned short :0; };
struct Ip_BFu0s_BFu0c { int * v1; unsigned short :0; unsigned char :0; };
struct Ip_BFu0s_BFu0i { int * v1; unsigned short :0; unsigned int :0; };
struct Ip_BFu0s_BFu0ll { int * v1; unsigned short :0; unsigned long long :0; };
struct Ip_BFu0s_BFu0s { int * v1; unsigned short :0; unsigned short :0; };
struct Ip_BFu0s_BFu15i { int * v1; unsigned short :0; unsigned int v2:15; };
struct Ip_BFu0s_BFu15ll { int * v1; unsigned short :0; unsigned long long v2:15; };
struct Ip_BFu0s_BFu15s { int * v1; unsigned short :0; unsigned short v2:15; };
struct Ip_BFu0s_BFu16i { int * v1; unsigned short :0; unsigned int v2:16; };
struct Ip_BFu0s_BFu16ll { int * v1; unsigned short :0; unsigned long long v2:16; };
struct Ip_BFu0s_BFu16s { int * v1; unsigned short :0; unsigned short v2:16; };
struct Ip_BFu0s_BFu17i { int * v1; unsigned short :0; unsigned int v2:17; };
struct Ip_BFu0s_BFu17ll { int * v1; unsigned short :0; unsigned long long v2:17; };
struct Ip_BFu0s_BFu1c { int * v1; unsigned short :0; unsigned char v2:1; };
struct Ip_BFu0s_BFu1i { int * v1; unsigned short :0; unsigned int v2:1; };
struct Ip_BFu0s_BFu1ll { int * v1; unsigned short :0; unsigned long long v2:1; };
struct Ip_BFu0s_BFu1s { int * v1; unsigned short :0; unsigned short v2:1; };
struct Ip_BFu0s_BFu31i { int * v1; unsigned short :0; unsigned int v2:31; };
struct Ip_BFu0s_BFu31ll { int * v1; unsigned short :0; unsigned long long v2:31; };
struct Ip_BFu0s_BFu32i { int * v1; unsigned short :0; unsigned int v2:32; };
struct Ip_BFu0s_BFu32ll { int * v1; unsigned short :0; unsigned long long v2:32; };
struct Ip_BFu0s_BFu33 { int * v1; unsigned short :0; unsigned long long v2:33; };
struct Ip_BFu0s_BFu7c { int * v1; unsigned short :0; unsigned char v2:7; };
struct Ip_BFu0s_BFu7i { int * v1; unsigned short :0; unsigned int v2:7; };
struct Ip_BFu0s_BFu7ll { int * v1; unsigned short :0; unsigned long long v2:7; };
struct Ip_BFu0s_BFu7s { int * v1; unsigned short :0; unsigned short v2:7; };
struct Ip_BFu0s_BFu8c { int * v1; unsigned short :0; unsigned char v2:8; };
struct Ip_BFu0s_BFu8i { int * v1; unsigned short :0; unsigned int v2:8; };
struct Ip_BFu0s_BFu8ll { int * v1; unsigned short :0; unsigned long long v2:8; };
struct Ip_BFu0s_BFu8s { int * v1; unsigned short :0; unsigned short v2:8; };
struct Ip_BFu0s_BFu9i { int * v1; unsigned short :0; unsigned int v2:9; };
struct Ip_BFu0s_BFu9ll { int * v1; unsigned short :0; unsigned long long v2:9; };
struct Ip_BFu0s_BFu9s { int * v1; unsigned short :0; unsigned short v2:9; };
struct Ip_BFu0s_C { int * v1; unsigned short :0; char v2; };
struct Ip_BFu0s_D { int * v1; unsigned short :0; double v2; };
struct Ip_BFu0s_F { int * v1; unsigned short :0; float v2; };
struct Ip_BFu0s_I { int * v1; unsigned short :0; int v2; };
struct Ip_BFu0s_Ip { int * v1; unsigned short :0; int * v2; };
struct Ip_BFu0s_L { int * v1; unsigned short :0; long long v2; };
struct Ip_BFu0s_S { int * v1; unsigned short :0; short v2; };
struct Ip_BFu0s_Uc { int * v1; unsigned short :0; unsigned char v2; };
struct Ip_BFu0s_Ui { int * v1; unsigned short :0; unsigned int v2; };
struct Ip_BFu0s_Ul { int * v1; unsigned short :0; unsigned long long v2; };
struct Ip_BFu0s_Us { int * v1; unsigned short :0; unsigned short v2; };
struct Ip_BFu0s_Vp { int * v1; unsigned short :0; void * v2; };
struct Ip_BFu15i_BFu0c { int * v1; unsigned int v2:15; unsigned char :0; };
struct Ip_BFu15i_BFu0i { int * v1; unsigned int v2:15; unsigned int :0; };
struct Ip_BFu15i_BFu0ll { int * v1; unsigned int v2:15; unsigned long long :0; };
struct Ip_BFu15i_BFu0s { int * v1; unsigned int v2:15; unsigned short :0; };
struct Ip_BFu15ll_BFu0c { int * v1; unsigned long long v2:15; unsigned char :0; };
struct Ip_BFu15ll_BFu0i { int * v1; unsigned long long v2:15; unsigned int :0; };
struct Ip_BFu15ll_BFu0ll { int * v1; unsigned long long v2:15; unsigned long long :0; };
struct Ip_BFu15ll_BFu0s { int * v1; unsigned long long v2:15; unsigned short :0; };
struct Ip_BFu15s_BFu0c { int * v1; unsigned short v2:15; unsigned char :0; };
struct Ip_BFu15s_BFu0i { int * v1; unsigned short v2:15; unsigned int :0; };
struct Ip_BFu15s_BFu0ll { int * v1; unsigned short v2:15; unsigned long long :0; };
struct Ip_BFu15s_BFu0s { int * v1; unsigned short v2:15; unsigned short :0; };
struct Ip_BFu16i_BFu0c { int * v1; unsigned int v2:16; unsigned char :0; };
struct Ip_BFu16i_BFu0i { int * v1; unsigned int v2:16; unsigned int :0; };
struct Ip_BFu16i_BFu0ll { int * v1; unsigned int v2:16; unsigned long long :0; };
struct Ip_BFu16i_BFu0s { int * v1; unsigned int v2:16; unsigned short :0; };
struct Ip_BFu16ll_BFu0c { int * v1; unsigned long long v2:16; unsigned char :0; };
struct Ip_BFu16ll_BFu0i { int * v1; unsigned long long v2:16; unsigned int :0; };
struct Ip_BFu16ll_BFu0ll { int * v1; unsigned long long v2:16; unsigned long long :0; };
struct Ip_BFu16ll_BFu0s { int * v1; unsigned long long v2:16; unsigned short :0; };
struct Ip_BFu16s_BFu0c { int * v1; unsigned short v2:16; unsigned char :0; };
struct Ip_BFu16s_BFu0i { int * v1; unsigned short v2:16; unsigned int :0; };
struct Ip_BFu16s_BFu0ll { int * v1; unsigned short v2:16; unsigned long long :0; };
struct Ip_BFu16s_BFu0s { int * v1; unsigned short v2:16; unsigned short :0; };
struct Ip_BFu17i_BFu0c { int * v1; unsigned int v2:17; unsigned char :0; };
struct Ip_BFu17i_BFu0i { int * v1; unsigned int v2:17; unsigned int :0; };
struct Ip_BFu17i_BFu0ll { int * v1; unsigned int v2:17; unsigned long long :0; };
struct Ip_BFu17i_BFu0s { int * v1; unsigned int v2:17; unsigned short :0; };
struct Ip_BFu17ll_BFu0c { int * v1; unsigned long long v2:17; unsigned char :0; };
struct Ip_BFu17ll_BFu0i { int * v1; unsigned long long v2:17; unsigned int :0; };
struct Ip_BFu17ll_BFu0ll { int * v1; unsigned long long v2:17; unsigned long long :0; };
struct Ip_BFu17ll_BFu0s { int * v1; unsigned long long v2:17; unsigned short :0; };
struct Ip_BFu1c_BFu0c { int * v1; unsigned char v2:1; unsigned char :0; };
struct Ip_BFu1c_BFu0i { int * v1; unsigned char v2:1; unsigned int :0; };
struct Ip_BFu1c_BFu0ll { int * v1; unsigned char v2:1; unsigned long long :0; };
struct Ip_BFu1c_BFu0s { int * v1; unsigned char v2:1; unsigned short :0; };
struct Ip_BFu1i_BFu0c { int * v1; unsigned int v2:1; unsigned char :0; };
struct Ip_BFu1i_BFu0i { int * v1; unsigned int v2:1; unsigned int :0; };
struct Ip_BFu1i_BFu0ll { int * v1; unsigned int v2:1; unsigned long long :0; };
struct Ip_BFu1i_BFu0s { int * v1; unsigned int v2:1; unsigned short :0; };
struct Ip_BFu1ll_BFu0c { int * v1; unsigned long long v2:1; unsigned char :0; };
struct Ip_BFu1ll_BFu0i { int * v1; unsigned long long v2:1; unsigned int :0; };
struct Ip_BFu1ll_BFu0ll { int * v1; unsigned long long v2:1; unsigned long long :0; };
struct Ip_BFu1ll_BFu0s { int * v1; unsigned long long v2:1; unsigned short :0; };
struct Ip_BFu1s_BFu0c { int * v1; unsigned short v2:1; unsigned char :0; };
struct Ip_BFu1s_BFu0i { int * v1; unsigned short v2:1; unsigned int :0; };
struct Ip_BFu1s_BFu0ll { int * v1; unsigned short v2:1; unsigned long long :0; };
struct Ip_BFu1s_BFu0s { int * v1; unsigned short v2:1; unsigned short :0; };
struct Ip_BFu31i_BFu0c { int * v1; unsigned int v2:31; unsigned char :0; };
struct Ip_BFu31i_BFu0i { int * v1; unsigned int v2:31; unsigned int :0; };
struct Ip_BFu31i_BFu0ll { int * v1; unsigned int v2:31; unsigned long long :0; };
struct Ip_BFu31i_BFu0s { int * v1; unsigned int v2:31; unsigned short :0; };
struct Ip_BFu31ll_BFu0c { int * v1; unsigned long long v2:31; unsigned char :0; };
struct Ip_BFu31ll_BFu0i { int * v1; unsigned long long v2:31; unsigned int :0; };
struct Ip_BFu31ll_BFu0ll { int * v1; unsigned long long v2:31; unsigned long long :0; };
struct Ip_BFu31ll_BFu0s { int * v1; unsigned long long v2:31; unsigned short :0; };
struct Ip_BFu32i_BFu0c { int * v1; unsigned int v2:32; unsigned char :0; };
struct Ip_BFu32i_BFu0i { int * v1; unsigned int v2:32; unsigned int :0; };
struct Ip_BFu32i_BFu0ll { int * v1; unsigned int v2:32; unsigned long long :0; };
struct Ip_BFu32i_BFu0s { int * v1; unsigned int v2:32; unsigned short :0; };
struct Ip_BFu32ll_BFu0c { int * v1; unsigned long long v2:32; unsigned char :0; };
struct Ip_BFu32ll_BFu0i { int * v1; unsigned long long v2:32; unsigned int :0; };
struct Ip_BFu32ll_BFu0ll { int * v1; unsigned long long v2:32; unsigned long long :0; };
struct Ip_BFu32ll_BFu0s { int * v1; unsigned long long v2:32; unsigned short :0; };
struct Ip_BFu33_BFu0c { int * v1; unsigned long long v2:33; unsigned char :0; };
struct Ip_BFu33_BFu0i { int * v1; unsigned long long v2:33; unsigned int :0; };
struct Ip_BFu33_BFu0ll { int * v1; unsigned long long v2:33; unsigned long long :0; };
struct Ip_BFu33_BFu0s { int * v1; unsigned long long v2:33; unsigned short :0; };
struct Ip_BFu7c_BFu0c { int * v1; unsigned char v2:7; unsigned char :0; };
struct Ip_BFu7c_BFu0i { int * v1; unsigned char v2:7; unsigned int :0; };
struct Ip_BFu7c_BFu0ll { int * v1; unsigned char v2:7; unsigned long long :0; };
struct Ip_BFu7c_BFu0s { int * v1; unsigned char v2:7; unsigned short :0; };
struct Ip_BFu7i_BFu0c { int * v1; unsigned int v2:7; unsigned char :0; };
struct Ip_BFu7i_BFu0i { int * v1; unsigned int v2:7; unsigned int :0; };
struct Ip_BFu7i_BFu0ll { int * v1; unsigned int v2:7; unsigned long long :0; };
struct Ip_BFu7i_BFu0s { int * v1; unsigned int v2:7; unsigned short :0; };
struct Ip_BFu7ll_BFu0c { int * v1; unsigned long long v2:7; unsigned char :0; };
struct Ip_BFu7ll_BFu0i { int * v1; unsigned long long v2:7; unsigned int :0; };
struct Ip_BFu7ll_BFu0ll { int * v1; unsigned long long v2:7; unsigned long long :0; };
struct Ip_BFu7ll_BFu0s { int * v1; unsigned long long v2:7; unsigned short :0; };
struct Ip_BFu7s_BFu0c { int * v1; unsigned short v2:7; unsigned char :0; };
struct Ip_BFu7s_BFu0i { int * v1; unsigned short v2:7; unsigned int :0; };
struct Ip_BFu7s_BFu0ll { int * v1; unsigned short v2:7; unsigned long long :0; };
struct Ip_BFu7s_BFu0s { int * v1; unsigned short v2:7; unsigned short :0; };
struct Ip_BFu8c_BFu0c { int * v1; unsigned char v2:8; unsigned char :0; };
struct Ip_BFu8c_BFu0i { int * v1; unsigned char v2:8; unsigned int :0; };
struct Ip_BFu8c_BFu0ll { int * v1; unsigned char v2:8; unsigned long long :0; };
struct Ip_BFu8c_BFu0s { int * v1; unsigned char v2:8; unsigned short :0; };
struct Ip_BFu8i_BFu0c { int * v1; unsigned int v2:8; unsigned char :0; };
struct Ip_BFu8i_BFu0i { int * v1; unsigned int v2:8; unsigned int :0; };
struct Ip_BFu8i_BFu0ll { int * v1; unsigned int v2:8; unsigned long long :0; };
struct Ip_BFu8i_BFu0s { int * v1; unsigned int v2:8; unsigned short :0; };
struct Ip_BFu8ll_BFu0c { int * v1; unsigned long long v2:8; unsigned char :0; };
struct Ip_BFu8ll_BFu0i { int * v1; unsigned long long v2:8; unsigned int :0; };
struct Ip_BFu8ll_BFu0ll { int * v1; unsigned long long v2:8; unsigned long long :0; };
struct Ip_BFu8ll_BFu0s { int * v1; unsigned long long v2:8; unsigned short :0; };
struct Ip_BFu8s_BFu0c { int * v1; unsigned short v2:8; unsigned char :0; };
struct Ip_BFu8s_BFu0i { int * v1; unsigned short v2:8; unsigned int :0; };
struct Ip_BFu8s_BFu0ll { int * v1; unsigned short v2:8; unsigned long long :0; };
struct Ip_BFu8s_BFu0s { int * v1; unsigned short v2:8; unsigned short :0; };
struct Ip_BFu9i_BFu0c { int * v1; unsigned int v2:9; unsigned char :0; };
struct Ip_BFu9i_BFu0i { int * v1; unsigned int v2:9; unsigned int :0; };
struct Ip_BFu9i_BFu0ll { int * v1; unsigned int v2:9; unsigned long long :0; };
struct Ip_BFu9i_BFu0s { int * v1; unsigned int v2:9; unsigned short :0; };
struct Ip_BFu9ll_BFu0c { int * v1; unsigned long long v2:9; unsigned char :0; };
struct Ip_BFu9ll_BFu0i { int * v1; unsigned long long v2:9; unsigned int :0; };
struct Ip_BFu9ll_BFu0ll { int * v1; unsigned long long v2:9; unsigned long long :0; };
struct Ip_BFu9ll_BFu0s { int * v1; unsigned long long v2:9; unsigned short :0; };
struct Ip_BFu9s_BFu0c { int * v1; unsigned short v2:9; unsigned char :0; };
struct Ip_BFu9s_BFu0i { int * v1; unsigned short v2:9; unsigned int :0; };
struct Ip_BFu9s_BFu0ll { int * v1; unsigned short v2:9; unsigned long long :0; };
struct Ip_BFu9s_BFu0s { int * v1; unsigned short v2:9; unsigned short :0; };
struct Ip_C_BFu0c { int * v1; char v2; unsigned char :0; };
struct Ip_C_BFu0i { int * v1; char v2; unsigned int :0; };
struct Ip_C_BFu0ll { int * v1; char v2; unsigned long long :0; };
struct Ip_C_BFu0s { int * v1; char v2; unsigned short :0; };
struct Ip_D_BFu0c { int * v1; double v2; unsigned char :0; };
struct Ip_D_BFu0i { int * v1; double v2; unsigned int :0; };
struct Ip_D_BFu0ll { int * v1; double v2; unsigned long long :0; };
struct Ip_D_BFu0s { int * v1; double v2; unsigned short :0; };
struct Ip_F_BFu0c { int * v1; float v2; unsigned char :0; };
struct Ip_F_BFu0i { int * v1; float v2; unsigned int :0; };
struct Ip_F_BFu0ll { int * v1; float v2; unsigned long long :0; };
struct Ip_F_BFu0s { int * v1; float v2; unsigned short :0; };
struct Ip_I_BFu0c { int * v1; int v2; unsigned char :0; };
struct Ip_I_BFu0i { int * v1; int v2; unsigned int :0; };
struct Ip_I_BFu0ll { int * v1; int v2; unsigned long long :0; };
struct Ip_I_BFu0s { int * v1; int v2; unsigned short :0; };
struct Ip_Ip_BFu0c { int * v1; int * v2; unsigned char :0; };
struct Ip_Ip_BFu0i { int * v1; int * v2; unsigned int :0; };
struct Ip_Ip_BFu0ll { int * v1; int * v2; unsigned long long :0; };
struct Ip_Ip_BFu0s { int * v1; int * v2; unsigned short :0; };
struct Ip_L_BFu0c { int * v1; long long v2; unsigned char :0; };
struct Ip_L_BFu0i { int * v1; long long v2; unsigned int :0; };
struct Ip_L_BFu0ll { int * v1; long long v2; unsigned long long :0; };
struct Ip_L_BFu0s { int * v1; long long v2; unsigned short :0; };
struct Ip_S_BFu0c { int * v1; short v2; unsigned char :0; };
struct Ip_S_BFu0i { int * v1; short v2; unsigned int :0; };
struct Ip_S_BFu0ll { int * v1; short v2; unsigned long long :0; };
struct Ip_S_BFu0s { int * v1; short v2; unsigned short :0; };
struct Ip_Uc_BFu0c { int * v1; unsigned char v2; unsigned char :0; };
struct Ip_Uc_BFu0i { int * v1; unsigned char v2; unsigned int :0; };
struct Ip_Uc_BFu0ll { int * v1; unsigned char v2; unsigned long long :0; };
struct Ip_Uc_BFu0s { int * v1; unsigned char v2; unsigned short :0; };
struct Ip_Ui_BFu0c { int * v1; unsigned int v2; unsigned char :0; };
struct Ip_Ui_BFu0i { int * v1; unsigned int v2; unsigned int :0; };
struct Ip_Ui_BFu0ll { int * v1; unsigned int v2; unsigned long long :0; };
struct Ip_Ui_BFu0s { int * v1; unsigned int v2; unsigned short :0; };
struct Ip_Ul_BFu0c { int * v1; unsigned long long v2; unsigned char :0; };
struct Ip_Ul_BFu0i { int * v1; unsigned long long v2; unsigned int :0; };
struct Ip_Ul_BFu0ll { int * v1; unsigned long long v2; unsigned long long :0; };
struct Ip_Ul_BFu0s { int * v1; unsigned long long v2; unsigned short :0; };
struct Ip_Us_BFu0c { int * v1; unsigned short v2; unsigned char :0; };
struct Ip_Us_BFu0i { int * v1; unsigned short v2; unsigned int :0; };
struct Ip_Us_BFu0ll { int * v1; unsigned short v2; unsigned long long :0; };
struct Ip_Us_BFu0s { int * v1; unsigned short v2; unsigned short :0; };
struct Ip_Vp_BFu0c { int * v1; void * v2; unsigned char :0; };
struct Ip_Vp_BFu0i { int * v1; void * v2; unsigned int :0; };
struct Ip_Vp_BFu0ll { int * v1; void * v2; unsigned long long :0; };
struct Ip_Vp_BFu0s { int * v1; void * v2; unsigned short :0; };
struct L_BFu0c { long long v1; unsigned char :0; };
struct L_BFu0c_BFu0c { long long v1; unsigned char :0; unsigned char :0; };
struct L_BFu0c_BFu0i { long long v1; unsigned char :0; unsigned int :0; };
struct L_BFu0c_BFu0ll { long long v1; unsigned char :0; unsigned long long :0; };
struct L_BFu0c_BFu0s { long long v1; unsigned char :0; unsigned short :0; };
struct L_BFu0c_BFu15i { long long v1; unsigned char :0; unsigned int v2:15; };
struct L_BFu0c_BFu15ll { long long v1; unsigned char :0; unsigned long long v2:15; };
struct L_BFu0c_BFu15s { long long v1; unsigned char :0; unsigned short v2:15; };
struct L_BFu0c_BFu16i { long long v1; unsigned char :0; unsigned int v2:16; };
struct L_BFu0c_BFu16ll { long long v1; unsigned char :0; unsigned long long v2:16; };
struct L_BFu0c_BFu16s { long long v1; unsigned char :0; unsigned short v2:16; };
struct L_BFu0c_BFu17i { long long v1; unsigned char :0; unsigned int v2:17; };
struct L_BFu0c_BFu17ll { long long v1; unsigned char :0; unsigned long long v2:17; };
struct L_BFu0c_BFu1c { long long v1; unsigned char :0; unsigned char v2:1; };
struct L_BFu0c_BFu1i { long long v1; unsigned char :0; unsigned int v2:1; };
struct L_BFu0c_BFu1ll { long long v1; unsigned char :0; unsigned long long v2:1; };
struct L_BFu0c_BFu1s { long long v1; unsigned char :0; unsigned short v2:1; };
struct L_BFu0c_BFu31i { long long v1; unsigned char :0; unsigned int v2:31; };
struct L_BFu0c_BFu31ll { long long v1; unsigned char :0; unsigned long long v2:31; };
struct L_BFu0c_BFu32i { long long v1; unsigned char :0; unsigned int v2:32; };
struct L_BFu0c_BFu32ll { long long v1; unsigned char :0; unsigned long long v2:32; };
struct L_BFu0c_BFu33 { long long v1; unsigned char :0; unsigned long long v2:33; };
struct L_BFu0c_BFu7c { long long v1; unsigned char :0; unsigned char v2:7; };
struct L_BFu0c_BFu7i { long long v1; unsigned char :0; unsigned int v2:7; };
struct L_BFu0c_BFu7ll { long long v1; unsigned char :0; unsigned long long v2:7; };
struct L_BFu0c_BFu7s { long long v1; unsigned char :0; unsigned short v2:7; };
struct L_BFu0c_BFu8c { long long v1; unsigned char :0; unsigned char v2:8; };
struct L_BFu0c_BFu8i { long long v1; unsigned char :0; unsigned int v2:8; };
struct L_BFu0c_BFu8ll { long long v1; unsigned char :0; unsigned long long v2:8; };
struct L_BFu0c_BFu8s { long long v1; unsigned char :0; unsigned short v2:8; };
struct L_BFu0c_BFu9i { long long v1; unsigned char :0; unsigned int v2:9; };
struct L_BFu0c_BFu9ll { long long v1; unsigned char :0; unsigned long long v2:9; };
struct L_BFu0c_BFu9s { long long v1; unsigned char :0; unsigned short v2:9; };
struct L_BFu0c_C { long long v1; unsigned char :0; char v2; };
struct L_BFu0c_D { long long v1; unsigned char :0; double v2; };
struct L_BFu0c_F { long long v1; unsigned char :0; float v2; };
struct L_BFu0c_I { long long v1; unsigned char :0; int v2; };
struct L_BFu0c_Ip { long long v1; unsigned char :0; int * v2; };
struct L_BFu0c_L { long long v1; unsigned char :0; long long v2; };
struct L_BFu0c_S { long long v1; unsigned char :0; short v2; };
struct L_BFu0c_Uc { long long v1; unsigned char :0; unsigned char v2; };
struct L_BFu0c_Ui { long long v1; unsigned char :0; unsigned int v2; };
struct L_BFu0c_Ul { long long v1; unsigned char :0; unsigned long long v2; };
struct L_BFu0c_Us { long long v1; unsigned char :0; unsigned short v2; };
struct L_BFu0c_Vp { long long v1; unsigned char :0; void * v2; };
struct L_BFu0i { long long v1; unsigned int :0; };
struct L_BFu0i_BFu0c { long long v1; unsigned int :0; unsigned char :0; };
struct L_BFu0i_BFu0i { long long v1; unsigned int :0; unsigned int :0; };
struct L_BFu0i_BFu0ll { long long v1; unsigned int :0; unsigned long long :0; };
struct L_BFu0i_BFu0s { long long v1; unsigned int :0; unsigned short :0; };
struct L_BFu0i_BFu15i { long long v1; unsigned int :0; unsigned int v2:15; };
struct L_BFu0i_BFu15ll { long long v1; unsigned int :0; unsigned long long v2:15; };
struct L_BFu0i_BFu15s { long long v1; unsigned int :0; unsigned short v2:15; };
struct L_BFu0i_BFu16i { long long v1; unsigned int :0; unsigned int v2:16; };
struct L_BFu0i_BFu16ll { long long v1; unsigned int :0; unsigned long long v2:16; };
struct L_BFu0i_BFu16s { long long v1; unsigned int :0; unsigned short v2:16; };
struct L_BFu0i_BFu17i { long long v1; unsigned int :0; unsigned int v2:17; };
struct L_BFu0i_BFu17ll { long long v1; unsigned int :0; unsigned long long v2:17; };
struct L_BFu0i_BFu1c { long long v1; unsigned int :0; unsigned char v2:1; };
struct L_BFu0i_BFu1i { long long v1; unsigned int :0; unsigned int v2:1; };
struct L_BFu0i_BFu1ll { long long v1; unsigned int :0; unsigned long long v2:1; };
struct L_BFu0i_BFu1s { long long v1; unsigned int :0; unsigned short v2:1; };
struct L_BFu0i_BFu31i { long long v1; unsigned int :0; unsigned int v2:31; };
struct L_BFu0i_BFu31ll { long long v1; unsigned int :0; unsigned long long v2:31; };
struct L_BFu0i_BFu32i { long long v1; unsigned int :0; unsigned int v2:32; };
struct L_BFu0i_BFu32ll { long long v1; unsigned int :0; unsigned long long v2:32; };
struct L_BFu0i_BFu33 { long long v1; unsigned int :0; unsigned long long v2:33; };
struct L_BFu0i_BFu7c { long long v1; unsigned int :0; unsigned char v2:7; };
struct L_BFu0i_BFu7i { long long v1; unsigned int :0; unsigned int v2:7; };
struct L_BFu0i_BFu7ll { long long v1; unsigned int :0; unsigned long long v2:7; };
struct L_BFu0i_BFu7s { long long v1; unsigned int :0; unsigned short v2:7; };
struct L_BFu0i_BFu8c { long long v1; unsigned int :0; unsigned char v2:8; };
struct L_BFu0i_BFu8i { long long v1; unsigned int :0; unsigned int v2:8; };
struct L_BFu0i_BFu8ll { long long v1; unsigned int :0; unsigned long long v2:8; };
struct L_BFu0i_BFu8s { long long v1; unsigned int :0; unsigned short v2:8; };
struct L_BFu0i_BFu9i { long long v1; unsigned int :0; unsigned int v2:9; };
struct L_BFu0i_BFu9ll { long long v1; unsigned int :0; unsigned long long v2:9; };
struct L_BFu0i_BFu9s { long long v1; unsigned int :0; unsigned short v2:9; };
struct L_BFu0i_C { long long v1; unsigned int :0; char v2; };
struct L_BFu0i_D { long long v1; unsigned int :0; double v2; };
struct L_BFu0i_F { long long v1; unsigned int :0; float v2; };
struct L_BFu0i_I { long long v1; unsigned int :0; int v2; };
struct L_BFu0i_Ip { long long v1; unsigned int :0; int * v2; };
struct L_BFu0i_L { long long v1; unsigned int :0; long long v2; };
struct L_BFu0i_S { long long v1; unsigned int :0; short v2; };
struct L_BFu0i_Uc { long long v1; unsigned int :0; unsigned char v2; };
struct L_BFu0i_Ui { long long v1; unsigned int :0; unsigned int v2; };
struct L_BFu0i_Ul { long long v1; unsigned int :0; unsigned long long v2; };
struct L_BFu0i_Us { long long v1; unsigned int :0; unsigned short v2; };
struct L_BFu0i_Vp { long long v1; unsigned int :0; void * v2; };
struct L_BFu0ll { long long v1; unsigned long long :0; };
struct L_BFu0ll_BFu0c { long long v1; unsigned long long :0; unsigned char :0; };
struct L_BFu0ll_BFu0i { long long v1; unsigned long long :0; unsigned int :0; };
struct L_BFu0ll_BFu0ll { long long v1; unsigned long long :0; unsigned long long :0; };
struct L_BFu0ll_BFu0s { long long v1; unsigned long long :0; unsigned short :0; };
struct L_BFu0ll_BFu15i { long long v1; unsigned long long :0; unsigned int v2:15; };
struct L_BFu0ll_BFu15ll { long long v1; unsigned long long :0; unsigned long long v2:15; };
struct L_BFu0ll_BFu15s { long long v1; unsigned long long :0; unsigned short v2:15; };
struct L_BFu0ll_BFu16i { long long v1; unsigned long long :0; unsigned int v2:16; };
struct L_BFu0ll_BFu16ll { long long v1; unsigned long long :0; unsigned long long v2:16; };
struct L_BFu0ll_BFu16s { long long v1; unsigned long long :0; unsigned short v2:16; };
struct L_BFu0ll_BFu17i { long long v1; unsigned long long :0; unsigned int v2:17; };
struct L_BFu0ll_BFu17ll { long long v1; unsigned long long :0; unsigned long long v2:17; };
struct L_BFu0ll_BFu1c { long long v1; unsigned long long :0; unsigned char v2:1; };
struct L_BFu0ll_BFu1i { long long v1; unsigned long long :0; unsigned int v2:1; };
struct L_BFu0ll_BFu1ll { long long v1; unsigned long long :0; unsigned long long v2:1; };
struct L_BFu0ll_BFu1s { long long v1; unsigned long long :0; unsigned short v2:1; };
struct L_BFu0ll_BFu31i { long long v1; unsigned long long :0; unsigned int v2:31; };
struct L_BFu0ll_BFu31ll { long long v1; unsigned long long :0; unsigned long long v2:31; };
struct L_BFu0ll_BFu32i { long long v1; unsigned long long :0; unsigned int v2:32; };
struct L_BFu0ll_BFu32ll { long long v1; unsigned long long :0; unsigned long long v2:32; };
struct L_BFu0ll_BFu33 { long long v1; unsigned long long :0; unsigned long long v2:33; };
struct L_BFu0ll_BFu7c { long long v1; unsigned long long :0; unsigned char v2:7; };
struct L_BFu0ll_BFu7i { long long v1; unsigned long long :0; unsigned int v2:7; };
struct L_BFu0ll_BFu7ll { long long v1; unsigned long long :0; unsigned long long v2:7; };
struct L_BFu0ll_BFu7s { long long v1; unsigned long long :0; unsigned short v2:7; };
struct L_BFu0ll_BFu8c { long long v1; unsigned long long :0; unsigned char v2:8; };
struct L_BFu0ll_BFu8i { long long v1; unsigned long long :0; unsigned int v2:8; };
struct L_BFu0ll_BFu8ll { long long v1; unsigned long long :0; unsigned long long v2:8; };
struct L_BFu0ll_BFu8s { long long v1; unsigned long long :0; unsigned short v2:8; };
struct L_BFu0ll_BFu9i { long long v1; unsigned long long :0; unsigned int v2:9; };
struct L_BFu0ll_BFu9ll { long long v1; unsigned long long :0; unsigned long long v2:9; };
struct L_BFu0ll_BFu9s { long long v1; unsigned long long :0; unsigned short v2:9; };
struct L_BFu0ll_C { long long v1; unsigned long long :0; char v2; };
struct L_BFu0ll_D { long long v1; unsigned long long :0; double v2; };
struct L_BFu0ll_F { long long v1; unsigned long long :0; float v2; };
struct L_BFu0ll_I { long long v1; unsigned long long :0; int v2; };
struct L_BFu0ll_Ip { long long v1; unsigned long long :0; int * v2; };
struct L_BFu0ll_L { long long v1; unsigned long long :0; long long v2; };
struct L_BFu0ll_S { long long v1; unsigned long long :0; short v2; };
struct L_BFu0ll_Uc { long long v1; unsigned long long :0; unsigned char v2; };
struct L_BFu0ll_Ui { long long v1; unsigned long long :0; unsigned int v2; };
struct L_BFu0ll_Ul { long long v1; unsigned long long :0; unsigned long long v2; };
struct L_BFu0ll_Us { long long v1; unsigned long long :0; unsigned short v2; };
struct L_BFu0ll_Vp { long long v1; unsigned long long :0; void * v2; };
struct L_BFu0s { long long v1; unsigned short :0; };
struct L_BFu0s_BFu0c { long long v1; unsigned short :0; unsigned char :0; };
struct L_BFu0s_BFu0i { long long v1; unsigned short :0; unsigned int :0; };
struct L_BFu0s_BFu0ll { long long v1; unsigned short :0; unsigned long long :0; };
struct L_BFu0s_BFu0s { long long v1; unsigned short :0; unsigned short :0; };
struct L_BFu0s_BFu15i { long long v1; unsigned short :0; unsigned int v2:15; };
struct L_BFu0s_BFu15ll { long long v1; unsigned short :0; unsigned long long v2:15; };
struct L_BFu0s_BFu15s { long long v1; unsigned short :0; unsigned short v2:15; };
struct L_BFu0s_BFu16i { long long v1; unsigned short :0; unsigned int v2:16; };
struct L_BFu0s_BFu16ll { long long v1; unsigned short :0; unsigned long long v2:16; };
struct L_BFu0s_BFu16s { long long v1; unsigned short :0; unsigned short v2:16; };
struct L_BFu0s_BFu17i { long long v1; unsigned short :0; unsigned int v2:17; };
struct L_BFu0s_BFu17ll { long long v1; unsigned short :0; unsigned long long v2:17; };
struct L_BFu0s_BFu1c { long long v1; unsigned short :0; unsigned char v2:1; };
struct L_BFu0s_BFu1i { long long v1; unsigned short :0; unsigned int v2:1; };
struct L_BFu0s_BFu1ll { long long v1; unsigned short :0; unsigned long long v2:1; };
struct L_BFu0s_BFu1s { long long v1; unsigned short :0; unsigned short v2:1; };
struct L_BFu0s_BFu31i { long long v1; unsigned short :0; unsigned int v2:31; };
struct L_BFu0s_BFu31ll { long long v1; unsigned short :0; unsigned long long v2:31; };
struct L_BFu0s_BFu32i { long long v1; unsigned short :0; unsigned int v2:32; };
struct L_BFu0s_BFu32ll { long long v1; unsigned short :0; unsigned long long v2:32; };
struct L_BFu0s_BFu33 { long long v1; unsigned short :0; unsigned long long v2:33; };
struct L_BFu0s_BFu7c { long long v1; unsigned short :0; unsigned char v2:7; };
struct L_BFu0s_BFu7i { long long v1; unsigned short :0; unsigned int v2:7; };
struct L_BFu0s_BFu7ll { long long v1; unsigned short :0; unsigned long long v2:7; };
struct L_BFu0s_BFu7s { long long v1; unsigned short :0; unsigned short v2:7; };
struct L_BFu0s_BFu8c { long long v1; unsigned short :0; unsigned char v2:8; };
struct L_BFu0s_BFu8i { long long v1; unsigned short :0; unsigned int v2:8; };
struct L_BFu0s_BFu8ll { long long v1; unsigned short :0; unsigned long long v2:8; };
struct L_BFu0s_BFu8s { long long v1; unsigned short :0; unsigned short v2:8; };
struct L_BFu0s_BFu9i { long long v1; unsigned short :0; unsigned int v2:9; };
struct L_BFu0s_BFu9ll { long long v1; unsigned short :0; unsigned long long v2:9; };
struct L_BFu0s_BFu9s { long long v1; unsigned short :0; unsigned short v2:9; };
struct L_BFu0s_C { long long v1; unsigned short :0; char v2; };
struct L_BFu0s_D { long long v1; unsigned short :0; double v2; };
struct L_BFu0s_F { long long v1; unsigned short :0; float v2; };
struct L_BFu0s_I { long long v1; unsigned short :0; int v2; };
struct L_BFu0s_Ip { long long v1; unsigned short :0; int * v2; };
struct L_BFu0s_L { long long v1; unsigned short :0; long long v2; };
struct L_BFu0s_S { long long v1; unsigned short :0; short v2; };
struct L_BFu0s_Uc { long long v1; unsigned short :0; unsigned char v2; };
struct L_BFu0s_Ui { long long v1; unsigned short :0; unsigned int v2; };
struct L_BFu0s_Ul { long long v1; unsigned short :0; unsigned long long v2; };
struct L_BFu0s_Us { long long v1; unsigned short :0; unsigned short v2; };
struct L_BFu0s_Vp { long long v1; unsigned short :0; void * v2; };
struct L_BFu15i_BFu0c { long long v1; unsigned int v2:15; unsigned char :0; };
struct L_BFu15i_BFu0i { long long v1; unsigned int v2:15; unsigned int :0; };
struct L_BFu15i_BFu0ll { long long v1; unsigned int v2:15; unsigned long long :0; };
struct L_BFu15i_BFu0s { long long v1; unsigned int v2:15; unsigned short :0; };
struct L_BFu15ll_BFu0c { long long v1; unsigned long long v2:15; unsigned char :0; };
struct L_BFu15ll_BFu0i { long long v1; unsigned long long v2:15; unsigned int :0; };
struct L_BFu15ll_BFu0ll { long long v1; unsigned long long v2:15; unsigned long long :0; };
struct L_BFu15ll_BFu0s { long long v1; unsigned long long v2:15; unsigned short :0; };
struct L_BFu15s_BFu0c { long long v1; unsigned short v2:15; unsigned char :0; };
struct L_BFu15s_BFu0i { long long v1; unsigned short v2:15; unsigned int :0; };
struct L_BFu15s_BFu0ll { long long v1; unsigned short v2:15; unsigned long long :0; };
struct L_BFu15s_BFu0s { long long v1; unsigned short v2:15; unsigned short :0; };
struct L_BFu16i_BFu0c { long long v1; unsigned int v2:16; unsigned char :0; };
struct L_BFu16i_BFu0i { long long v1; unsigned int v2:16; unsigned int :0; };
struct L_BFu16i_BFu0ll { long long v1; unsigned int v2:16; unsigned long long :0; };
struct L_BFu16i_BFu0s { long long v1; unsigned int v2:16; unsigned short :0; };
struct L_BFu16ll_BFu0c { long long v1; unsigned long long v2:16; unsigned char :0; };
struct L_BFu16ll_BFu0i { long long v1; unsigned long long v2:16; unsigned int :0; };
struct L_BFu16ll_BFu0ll { long long v1; unsigned long long v2:16; unsigned long long :0; };
struct L_BFu16ll_BFu0s { long long v1; unsigned long long v2:16; unsigned short :0; };
struct L_BFu16s_BFu0c { long long v1; unsigned short v2:16; unsigned char :0; };
struct L_BFu16s_BFu0i { long long v1; unsigned short v2:16; unsigned int :0; };
struct L_BFu16s_BFu0ll { long long v1; unsigned short v2:16; unsigned long long :0; };
struct L_BFu16s_BFu0s { long long v1; unsigned short v2:16; unsigned short :0; };
struct L_BFu17i_BFu0c { long long v1; unsigned int v2:17; unsigned char :0; };
struct L_BFu17i_BFu0i { long long v1; unsigned int v2:17; unsigned int :0; };
struct L_BFu17i_BFu0ll { long long v1; unsigned int v2:17; unsigned long long :0; };
struct L_BFu17i_BFu0s { long long v1; unsigned int v2:17; unsigned short :0; };
struct L_BFu17ll_BFu0c { long long v1; unsigned long long v2:17; unsigned char :0; };
struct L_BFu17ll_BFu0i { long long v1; unsigned long long v2:17; unsigned int :0; };
struct L_BFu17ll_BFu0ll { long long v1; unsigned long long v2:17; unsigned long long :0; };
struct L_BFu17ll_BFu0s { long long v1; unsigned long long v2:17; unsigned short :0; };
struct L_BFu1c_BFu0c { long long v1; unsigned char v2:1; unsigned char :0; };
struct L_BFu1c_BFu0i { long long v1; unsigned char v2:1; unsigned int :0; };
struct L_BFu1c_BFu0ll { long long v1; unsigned char v2:1; unsigned long long :0; };
struct L_BFu1c_BFu0s { long long v1; unsigned char v2:1; unsigned short :0; };
struct L_BFu1i_BFu0c { long long v1; unsigned int v2:1; unsigned char :0; };
struct L_BFu1i_BFu0i { long long v1; unsigned int v2:1; unsigned int :0; };
struct L_BFu1i_BFu0ll { long long v1; unsigned int v2:1; unsigned long long :0; };
struct L_BFu1i_BFu0s { long long v1; unsigned int v2:1; unsigned short :0; };
struct L_BFu1ll_BFu0c { long long v1; unsigned long long v2:1; unsigned char :0; };
struct L_BFu1ll_BFu0i { long long v1; unsigned long long v2:1; unsigned int :0; };
struct L_BFu1ll_BFu0ll { long long v1; unsigned long long v2:1; unsigned long long :0; };
struct L_BFu1ll_BFu0s { long long v1; unsigned long long v2:1; unsigned short :0; };
struct L_BFu1s_BFu0c { long long v1; unsigned short v2:1; unsigned char :0; };
struct L_BFu1s_BFu0i { long long v1; unsigned short v2:1; unsigned int :0; };
struct L_BFu1s_BFu0ll { long long v1; unsigned short v2:1; unsigned long long :0; };
struct L_BFu1s_BFu0s { long long v1; unsigned short v2:1; unsigned short :0; };
struct L_BFu31i_BFu0c { long long v1; unsigned int v2:31; unsigned char :0; };
struct L_BFu31i_BFu0i { long long v1; unsigned int v2:31; unsigned int :0; };
struct L_BFu31i_BFu0ll { long long v1; unsigned int v2:31; unsigned long long :0; };
struct L_BFu31i_BFu0s { long long v1; unsigned int v2:31; unsigned short :0; };
struct L_BFu31ll_BFu0c { long long v1; unsigned long long v2:31; unsigned char :0; };
struct L_BFu31ll_BFu0i { long long v1; unsigned long long v2:31; unsigned int :0; };
struct L_BFu31ll_BFu0ll { long long v1; unsigned long long v2:31; unsigned long long :0; };
struct L_BFu31ll_BFu0s { long long v1; unsigned long long v2:31; unsigned short :0; };
struct L_BFu32i_BFu0c { long long v1; unsigned int v2:32; unsigned char :0; };
struct L_BFu32i_BFu0i { long long v1; unsigned int v2:32; unsigned int :0; };
struct L_BFu32i_BFu0ll { long long v1; unsigned int v2:32; unsigned long long :0; };
struct L_BFu32i_BFu0s { long long v1; unsigned int v2:32; unsigned short :0; };
struct L_BFu32ll_BFu0c { long long v1; unsigned long long v2:32; unsigned char :0; };
struct L_BFu32ll_BFu0i { long long v1; unsigned long long v2:32; unsigned int :0; };
struct L_BFu32ll_BFu0ll { long long v1; unsigned long long v2:32; unsigned long long :0; };
struct L_BFu32ll_BFu0s { long long v1; unsigned long long v2:32; unsigned short :0; };
struct L_BFu33_BFu0c { long long v1; unsigned long long v2:33; unsigned char :0; };
struct L_BFu33_BFu0i { long long v1; unsigned long long v2:33; unsigned int :0; };
struct L_BFu33_BFu0ll { long long v1; unsigned long long v2:33; unsigned long long :0; };
struct L_BFu33_BFu0s { long long v1; unsigned long long v2:33; unsigned short :0; };
struct L_BFu7c_BFu0c { long long v1; unsigned char v2:7; unsigned char :0; };
struct L_BFu7c_BFu0i { long long v1; unsigned char v2:7; unsigned int :0; };
struct L_BFu7c_BFu0ll { long long v1; unsigned char v2:7; unsigned long long :0; };
struct L_BFu7c_BFu0s { long long v1; unsigned char v2:7; unsigned short :0; };
struct L_BFu7i_BFu0c { long long v1; unsigned int v2:7; unsigned char :0; };
struct L_BFu7i_BFu0i { long long v1; unsigned int v2:7; unsigned int :0; };
struct L_BFu7i_BFu0ll { long long v1; unsigned int v2:7; unsigned long long :0; };
struct L_BFu7i_BFu0s { long long v1; unsigned int v2:7; unsigned short :0; };
struct L_BFu7ll_BFu0c { long long v1; unsigned long long v2:7; unsigned char :0; };
struct L_BFu7ll_BFu0i { long long v1; unsigned long long v2:7; unsigned int :0; };
struct L_BFu7ll_BFu0ll { long long v1; unsigned long long v2:7; unsigned long long :0; };
struct L_BFu7ll_BFu0s { long long v1; unsigned long long v2:7; unsigned short :0; };
struct L_BFu7s_BFu0c { long long v1; unsigned short v2:7; unsigned char :0; };
struct L_BFu7s_BFu0i { long long v1; unsigned short v2:7; unsigned int :0; };
struct L_BFu7s_BFu0ll { long long v1; unsigned short v2:7; unsigned long long :0; };
struct L_BFu7s_BFu0s { long long v1; unsigned short v2:7; unsigned short :0; };
struct L_BFu8c_BFu0c { long long v1; unsigned char v2:8; unsigned char :0; };
struct L_BFu8c_BFu0i { long long v1; unsigned char v2:8; unsigned int :0; };
struct L_BFu8c_BFu0ll { long long v1; unsigned char v2:8; unsigned long long :0; };
struct L_BFu8c_BFu0s { long long v1; unsigned char v2:8; unsigned short :0; };
struct L_BFu8i_BFu0c { long long v1; unsigned int v2:8; unsigned char :0; };
struct L_BFu8i_BFu0i { long long v1; unsigned int v2:8; unsigned int :0; };
struct L_BFu8i_BFu0ll { long long v1; unsigned int v2:8; unsigned long long :0; };
struct L_BFu8i_BFu0s { long long v1; unsigned int v2:8; unsigned short :0; };
struct L_BFu8ll_BFu0c { long long v1; unsigned long long v2:8; unsigned char :0; };
struct L_BFu8ll_BFu0i { long long v1; unsigned long long v2:8; unsigned int :0; };
struct L_BFu8ll_BFu0ll { long long v1; unsigned long long v2:8; unsigned long long :0; };
struct L_BFu8ll_BFu0s { long long v1; unsigned long long v2:8; unsigned short :0; };
struct L_BFu8s_BFu0c { long long v1; unsigned short v2:8; unsigned char :0; };
struct L_BFu8s_BFu0i { long long v1; unsigned short v2:8; unsigned int :0; };
struct L_BFu8s_BFu0ll { long long v1; unsigned short v2:8; unsigned long long :0; };
struct L_BFu8s_BFu0s { long long v1; unsigned short v2:8; unsigned short :0; };
struct L_BFu9i_BFu0c { long long v1; unsigned int v2:9; unsigned char :0; };
struct L_BFu9i_BFu0i { long long v1; unsigned int v2:9; unsigned int :0; };
struct L_BFu9i_BFu0ll { long long v1; unsigned int v2:9; unsigned long long :0; };
struct L_BFu9i_BFu0s { long long v1; unsigned int v2:9; unsigned short :0; };
struct L_BFu9ll_BFu0c { long long v1; unsigned long long v2:9; unsigned char :0; };
struct L_BFu9ll_BFu0i { long long v1; unsigned long long v2:9; unsigned int :0; };
struct L_BFu9ll_BFu0ll { long long v1; unsigned long long v2:9; unsigned long long :0; };
struct L_BFu9ll_BFu0s { long long v1; unsigned long long v2:9; unsigned short :0; };
struct L_BFu9s_BFu0c { long long v1; unsigned short v2:9; unsigned char :0; };
struct L_BFu9s_BFu0i { long long v1; unsigned short v2:9; unsigned int :0; };
struct L_BFu9s_BFu0ll { long long v1; unsigned short v2:9; unsigned long long :0; };
struct L_BFu9s_BFu0s { long long v1; unsigned short v2:9; unsigned short :0; };
struct L_C_BFu0c { long long v1; char v2; unsigned char :0; };
struct L_C_BFu0i { long long v1; char v2; unsigned int :0; };
struct L_C_BFu0ll { long long v1; char v2; unsigned long long :0; };
struct L_C_BFu0s { long long v1; char v2; unsigned short :0; };
struct L_D_BFu0c { long long v1; double v2; unsigned char :0; };
struct L_D_BFu0i { long long v1; double v2; unsigned int :0; };
struct L_D_BFu0ll { long long v1; double v2; unsigned long long :0; };
struct L_D_BFu0s { long long v1; double v2; unsigned short :0; };
struct L_F_BFu0c { long long v1; float v2; unsigned char :0; };
struct L_F_BFu0i { long long v1; float v2; unsigned int :0; };
struct L_F_BFu0ll { long long v1; float v2; unsigned long long :0; };
struct L_F_BFu0s { long long v1; float v2; unsigned short :0; };
struct L_I_BFu0c { long long v1; int v2; unsigned char :0; };
struct L_I_BFu0i { long long v1; int v2; unsigned int :0; };
struct L_I_BFu0ll { long long v1; int v2; unsigned long long :0; };
struct L_I_BFu0s { long long v1; int v2; unsigned short :0; };
struct L_Ip_BFu0c { long long v1; int * v2; unsigned char :0; };
struct L_Ip_BFu0i { long long v1; int * v2; unsigned int :0; };
struct L_Ip_BFu0ll { long long v1; int * v2; unsigned long long :0; };
struct L_Ip_BFu0s { long long v1; int * v2; unsigned short :0; };
struct L_L_BFu0c { long long v1; long long v2; unsigned char :0; };
struct L_L_BFu0i { long long v1; long long v2; unsigned int :0; };
struct L_L_BFu0ll { long long v1; long long v2; unsigned long long :0; };
struct L_L_BFu0s { long long v1; long long v2; unsigned short :0; };
struct L_S_BFu0c { long long v1; short v2; unsigned char :0; };
struct L_S_BFu0i { long long v1; short v2; unsigned int :0; };
struct L_S_BFu0ll { long long v1; short v2; unsigned long long :0; };
struct L_S_BFu0s { long long v1; short v2; unsigned short :0; };
struct L_Uc_BFu0c { long long v1; unsigned char v2; unsigned char :0; };
struct L_Uc_BFu0i { long long v1; unsigned char v2; unsigned int :0; };
struct L_Uc_BFu0ll { long long v1; unsigned char v2; unsigned long long :0; };
struct L_Uc_BFu0s { long long v1; unsigned char v2; unsigned short :0; };
struct L_Ui_BFu0c { long long v1; unsigned int v2; unsigned char :0; };
struct L_Ui_BFu0i { long long v1; unsigned int v2; unsigned int :0; };
struct L_Ui_BFu0ll { long long v1; unsigned int v2; unsigned long long :0; };
struct L_Ui_BFu0s { long long v1; unsigned int v2; unsigned short :0; };
struct L_Ul_BFu0c { long long v1; unsigned long long v2; unsigned char :0; };
struct L_Ul_BFu0i { long long v1; unsigned long long v2; unsigned int :0; };
struct L_Ul_BFu0ll { long long v1; unsigned long long v2; unsigned long long :0; };
struct L_Ul_BFu0s { long long v1; unsigned long long v2; unsigned short :0; };
struct L_Us_BFu0c { long long v1; unsigned short v2; unsigned char :0; };
struct L_Us_BFu0i { long long v1; unsigned short v2; unsigned int :0; };
struct L_Us_BFu0ll { long long v1; unsigned short v2; unsigned long long :0; };
struct L_Us_BFu0s { long long v1; unsigned short v2; unsigned short :0; };
struct L_Vp_BFu0c { long long v1; void * v2; unsigned char :0; };
struct L_Vp_BFu0i { long long v1; void * v2; unsigned int :0; };
struct L_Vp_BFu0ll { long long v1; void * v2; unsigned long long :0; };
struct L_Vp_BFu0s { long long v1; void * v2; unsigned short :0; };
struct S_BFu0c { short v1; unsigned char :0; };
struct S_BFu0c_BFu0c { short v1; unsigned char :0; unsigned char :0; };
struct S_BFu0c_BFu0i { short v1; unsigned char :0; unsigned int :0; };
struct S_BFu0c_BFu0ll { short v1; unsigned char :0; unsigned long long :0; };
struct S_BFu0c_BFu0s { short v1; unsigned char :0; unsigned short :0; };
struct S_BFu0c_BFu15i { short v1; unsigned char :0; unsigned int v2:15; };
struct S_BFu0c_BFu15ll { short v1; unsigned char :0; unsigned long long v2:15; };
struct S_BFu0c_BFu15s { short v1; unsigned char :0; unsigned short v2:15; };
struct S_BFu0c_BFu16i { short v1; unsigned char :0; unsigned int v2:16; };
struct S_BFu0c_BFu16ll { short v1; unsigned char :0; unsigned long long v2:16; };
struct S_BFu0c_BFu16s { short v1; unsigned char :0; unsigned short v2:16; };
struct S_BFu0c_BFu17i { short v1; unsigned char :0; unsigned int v2:17; };
struct S_BFu0c_BFu17ll { short v1; unsigned char :0; unsigned long long v2:17; };
struct S_BFu0c_BFu1c { short v1; unsigned char :0; unsigned char v2:1; };
struct S_BFu0c_BFu1i { short v1; unsigned char :0; unsigned int v2:1; };
struct S_BFu0c_BFu1ll { short v1; unsigned char :0; unsigned long long v2:1; };
struct S_BFu0c_BFu1s { short v1; unsigned char :0; unsigned short v2:1; };
struct S_BFu0c_BFu31i { short v1; unsigned char :0; unsigned int v2:31; };
struct S_BFu0c_BFu31ll { short v1; unsigned char :0; unsigned long long v2:31; };
struct S_BFu0c_BFu32i { short v1; unsigned char :0; unsigned int v2:32; };
struct S_BFu0c_BFu32ll { short v1; unsigned char :0; unsigned long long v2:32; };
struct S_BFu0c_BFu33 { short v1; unsigned char :0; unsigned long long v2:33; };
struct S_BFu0c_BFu7c { short v1; unsigned char :0; unsigned char v2:7; };
struct S_BFu0c_BFu7i { short v1; unsigned char :0; unsigned int v2:7; };
struct S_BFu0c_BFu7ll { short v1; unsigned char :0; unsigned long long v2:7; };
struct S_BFu0c_BFu7s { short v1; unsigned char :0; unsigned short v2:7; };
struct S_BFu0c_BFu8c { short v1; unsigned char :0; unsigned char v2:8; };
struct S_BFu0c_BFu8i { short v1; unsigned char :0; unsigned int v2:8; };
struct S_BFu0c_BFu8ll { short v1; unsigned char :0; unsigned long long v2:8; };
struct S_BFu0c_BFu8s { short v1; unsigned char :0; unsigned short v2:8; };
struct S_BFu0c_BFu9i { short v1; unsigned char :0; unsigned int v2:9; };
struct S_BFu0c_BFu9ll { short v1; unsigned char :0; unsigned long long v2:9; };
struct S_BFu0c_BFu9s { short v1; unsigned char :0; unsigned short v2:9; };
struct S_BFu0c_C { short v1; unsigned char :0; char v2; };
struct S_BFu0c_D { short v1; unsigned char :0; double v2; };
struct S_BFu0c_F { short v1; unsigned char :0; float v2; };
struct S_BFu0c_I { short v1; unsigned char :0; int v2; };
struct S_BFu0c_Ip { short v1; unsigned char :0; int * v2; };
struct S_BFu0c_L { short v1; unsigned char :0; long long v2; };
struct S_BFu0c_S { short v1; unsigned char :0; short v2; };
struct S_BFu0c_Uc { short v1; unsigned char :0; unsigned char v2; };
struct S_BFu0c_Ui { short v1; unsigned char :0; unsigned int v2; };
struct S_BFu0c_Ul { short v1; unsigned char :0; unsigned long long v2; };
struct S_BFu0c_Us { short v1; unsigned char :0; unsigned short v2; };
struct S_BFu0c_Vp { short v1; unsigned char :0; void * v2; };
struct S_BFu0i { short v1; unsigned int :0; };
struct S_BFu0i_BFu0c { short v1; unsigned int :0; unsigned char :0; };
struct S_BFu0i_BFu0i { short v1; unsigned int :0; unsigned int :0; };
struct S_BFu0i_BFu0ll { short v1; unsigned int :0; unsigned long long :0; };
struct S_BFu0i_BFu0s { short v1; unsigned int :0; unsigned short :0; };
struct S_BFu0i_BFu15i { short v1; unsigned int :0; unsigned int v2:15; };
struct S_BFu0i_BFu15ll { short v1; unsigned int :0; unsigned long long v2:15; };
struct S_BFu0i_BFu15s { short v1; unsigned int :0; unsigned short v2:15; };
struct S_BFu0i_BFu16i { short v1; unsigned int :0; unsigned int v2:16; };
struct S_BFu0i_BFu16ll { short v1; unsigned int :0; unsigned long long v2:16; };
struct S_BFu0i_BFu16s { short v1; unsigned int :0; unsigned short v2:16; };
struct S_BFu0i_BFu17i { short v1; unsigned int :0; unsigned int v2:17; };
struct S_BFu0i_BFu17ll { short v1; unsigned int :0; unsigned long long v2:17; };
struct S_BFu0i_BFu1c { short v1; unsigned int :0; unsigned char v2:1; };
struct S_BFu0i_BFu1i { short v1; unsigned int :0; unsigned int v2:1; };
struct S_BFu0i_BFu1ll { short v1; unsigned int :0; unsigned long long v2:1; };
struct S_BFu0i_BFu1s { short v1; unsigned int :0; unsigned short v2:1; };
struct S_BFu0i_BFu31i { short v1; unsigned int :0; unsigned int v2:31; };
struct S_BFu0i_BFu31ll { short v1; unsigned int :0; unsigned long long v2:31; };
struct S_BFu0i_BFu32i { short v1; unsigned int :0; unsigned int v2:32; };
struct S_BFu0i_BFu32ll { short v1; unsigned int :0; unsigned long long v2:32; };
struct S_BFu0i_BFu33 { short v1; unsigned int :0; unsigned long long v2:33; };
struct S_BFu0i_BFu7c { short v1; unsigned int :0; unsigned char v2:7; };
struct S_BFu0i_BFu7i { short v1; unsigned int :0; unsigned int v2:7; };
struct S_BFu0i_BFu7ll { short v1; unsigned int :0; unsigned long long v2:7; };
struct S_BFu0i_BFu7s { short v1; unsigned int :0; unsigned short v2:7; };
struct S_BFu0i_BFu8c { short v1; unsigned int :0; unsigned char v2:8; };
struct S_BFu0i_BFu8i { short v1; unsigned int :0; unsigned int v2:8; };
struct S_BFu0i_BFu8ll { short v1; unsigned int :0; unsigned long long v2:8; };
struct S_BFu0i_BFu8s { short v1; unsigned int :0; unsigned short v2:8; };
struct S_BFu0i_BFu9i { short v1; unsigned int :0; unsigned int v2:9; };
struct S_BFu0i_BFu9ll { short v1; unsigned int :0; unsigned long long v2:9; };
struct S_BFu0i_BFu9s { short v1; unsigned int :0; unsigned short v2:9; };
struct S_BFu0i_C { short v1; unsigned int :0; char v2; };
struct S_BFu0i_D { short v1; unsigned int :0; double v2; };
struct S_BFu0i_F { short v1; unsigned int :0; float v2; };
struct S_BFu0i_I { short v1; unsigned int :0; int v2; };
struct S_BFu0i_Ip { short v1; unsigned int :0; int * v2; };
struct S_BFu0i_L { short v1; unsigned int :0; long long v2; };
struct S_BFu0i_S { short v1; unsigned int :0; short v2; };
struct S_BFu0i_Uc { short v1; unsigned int :0; unsigned char v2; };
struct S_BFu0i_Ui { short v1; unsigned int :0; unsigned int v2; };
struct S_BFu0i_Ul { short v1; unsigned int :0; unsigned long long v2; };
struct S_BFu0i_Us { short v1; unsigned int :0; unsigned short v2; };
struct S_BFu0i_Vp { short v1; unsigned int :0; void * v2; };
struct S_BFu0ll { short v1; unsigned long long :0; };
struct S_BFu0ll_BFu0c { short v1; unsigned long long :0; unsigned char :0; };
struct S_BFu0ll_BFu0i { short v1; unsigned long long :0; unsigned int :0; };
struct S_BFu0ll_BFu0ll { short v1; unsigned long long :0; unsigned long long :0; };
struct S_BFu0ll_BFu0s { short v1; unsigned long long :0; unsigned short :0; };
struct S_BFu0ll_BFu15i { short v1; unsigned long long :0; unsigned int v2:15; };
struct S_BFu0ll_BFu15ll { short v1; unsigned long long :0; unsigned long long v2:15; };
struct S_BFu0ll_BFu15s { short v1; unsigned long long :0; unsigned short v2:15; };
struct S_BFu0ll_BFu16i { short v1; unsigned long long :0; unsigned int v2:16; };
struct S_BFu0ll_BFu16ll { short v1; unsigned long long :0; unsigned long long v2:16; };
struct S_BFu0ll_BFu16s { short v1; unsigned long long :0; unsigned short v2:16; };
struct S_BFu0ll_BFu17i { short v1; unsigned long long :0; unsigned int v2:17; };
struct S_BFu0ll_BFu17ll { short v1; unsigned long long :0; unsigned long long v2:17; };
struct S_BFu0ll_BFu1c { short v1; unsigned long long :0; unsigned char v2:1; };
struct S_BFu0ll_BFu1i { short v1; unsigned long long :0; unsigned int v2:1; };
struct S_BFu0ll_BFu1ll { short v1; unsigned long long :0; unsigned long long v2:1; };
struct S_BFu0ll_BFu1s { short v1; unsigned long long :0; unsigned short v2:1; };
struct S_BFu0ll_BFu31i { short v1; unsigned long long :0; unsigned int v2:31; };
struct S_BFu0ll_BFu31ll { short v1; unsigned long long :0; unsigned long long v2:31; };
struct S_BFu0ll_BFu32i { short v1; unsigned long long :0; unsigned int v2:32; };
struct S_BFu0ll_BFu32ll { short v1; unsigned long long :0; unsigned long long v2:32; };
struct S_BFu0ll_BFu33 { short v1; unsigned long long :0; unsigned long long v2:33; };
struct S_BFu0ll_BFu7c { short v1; unsigned long long :0; unsigned char v2:7; };
struct S_BFu0ll_BFu7i { short v1; unsigned long long :0; unsigned int v2:7; };
struct S_BFu0ll_BFu7ll { short v1; unsigned long long :0; unsigned long long v2:7; };
struct S_BFu0ll_BFu7s { short v1; unsigned long long :0; unsigned short v2:7; };
struct S_BFu0ll_BFu8c { short v1; unsigned long long :0; unsigned char v2:8; };
struct S_BFu0ll_BFu8i { short v1; unsigned long long :0; unsigned int v2:8; };
struct S_BFu0ll_BFu8ll { short v1; unsigned long long :0; unsigned long long v2:8; };
struct S_BFu0ll_BFu8s { short v1; unsigned long long :0; unsigned short v2:8; };
struct S_BFu0ll_BFu9i { short v1; unsigned long long :0; unsigned int v2:9; };
struct S_BFu0ll_BFu9ll { short v1; unsigned long long :0; unsigned long long v2:9; };
struct S_BFu0ll_BFu9s { short v1; unsigned long long :0; unsigned short v2:9; };
struct S_BFu0ll_C { short v1; unsigned long long :0; char v2; };
struct S_BFu0ll_D { short v1; unsigned long long :0; double v2; };
struct S_BFu0ll_F { short v1; unsigned long long :0; float v2; };
struct S_BFu0ll_I { short v1; unsigned long long :0; int v2; };
struct S_BFu0ll_Ip { short v1; unsigned long long :0; int * v2; };
struct S_BFu0ll_L { short v1; unsigned long long :0; long long v2; };
struct S_BFu0ll_S { short v1; unsigned long long :0; short v2; };
struct S_BFu0ll_Uc { short v1; unsigned long long :0; unsigned char v2; };
struct S_BFu0ll_Ui { short v1; unsigned long long :0; unsigned int v2; };
struct S_BFu0ll_Ul { short v1; unsigned long long :0; unsigned long long v2; };
struct S_BFu0ll_Us { short v1; unsigned long long :0; unsigned short v2; };
struct S_BFu0ll_Vp { short v1; unsigned long long :0; void * v2; };
struct S_BFu0s { short v1; unsigned short :0; };
struct S_BFu0s_BFu0c { short v1; unsigned short :0; unsigned char :0; };
struct S_BFu0s_BFu0i { short v1; unsigned short :0; unsigned int :0; };
struct S_BFu0s_BFu0ll { short v1; unsigned short :0; unsigned long long :0; };
struct S_BFu0s_BFu0s { short v1; unsigned short :0; unsigned short :0; };
struct S_BFu0s_BFu15i { short v1; unsigned short :0; unsigned int v2:15; };
struct S_BFu0s_BFu15ll { short v1; unsigned short :0; unsigned long long v2:15; };
struct S_BFu0s_BFu15s { short v1; unsigned short :0; unsigned short v2:15; };
struct S_BFu0s_BFu16i { short v1; unsigned short :0; unsigned int v2:16; };
struct S_BFu0s_BFu16ll { short v1; unsigned short :0; unsigned long long v2:16; };
struct S_BFu0s_BFu16s { short v1; unsigned short :0; unsigned short v2:16; };
struct S_BFu0s_BFu17i { short v1; unsigned short :0; unsigned int v2:17; };
struct S_BFu0s_BFu17ll { short v1; unsigned short :0; unsigned long long v2:17; };
struct S_BFu0s_BFu1c { short v1; unsigned short :0; unsigned char v2:1; };
struct S_BFu0s_BFu1i { short v1; unsigned short :0; unsigned int v2:1; };
struct S_BFu0s_BFu1ll { short v1; unsigned short :0; unsigned long long v2:1; };
struct S_BFu0s_BFu1s { short v1; unsigned short :0; unsigned short v2:1; };
struct S_BFu0s_BFu31i { short v1; unsigned short :0; unsigned int v2:31; };
struct S_BFu0s_BFu31ll { short v1; unsigned short :0; unsigned long long v2:31; };
struct S_BFu0s_BFu32i { short v1; unsigned short :0; unsigned int v2:32; };
struct S_BFu0s_BFu32ll { short v1; unsigned short :0; unsigned long long v2:32; };
struct S_BFu0s_BFu33 { short v1; unsigned short :0; unsigned long long v2:33; };
struct S_BFu0s_BFu7c { short v1; unsigned short :0; unsigned char v2:7; };
struct S_BFu0s_BFu7i { short v1; unsigned short :0; unsigned int v2:7; };
struct S_BFu0s_BFu7ll { short v1; unsigned short :0; unsigned long long v2:7; };
struct S_BFu0s_BFu7s { short v1; unsigned short :0; unsigned short v2:7; };
struct S_BFu0s_BFu8c { short v1; unsigned short :0; unsigned char v2:8; };
struct S_BFu0s_BFu8i { short v1; unsigned short :0; unsigned int v2:8; };
struct S_BFu0s_BFu8ll { short v1; unsigned short :0; unsigned long long v2:8; };
struct S_BFu0s_BFu8s { short v1; unsigned short :0; unsigned short v2:8; };
struct S_BFu0s_BFu9i { short v1; unsigned short :0; unsigned int v2:9; };
struct S_BFu0s_BFu9ll { short v1; unsigned short :0; unsigned long long v2:9; };
struct S_BFu0s_BFu9s { short v1; unsigned short :0; unsigned short v2:9; };
struct S_BFu0s_C { short v1; unsigned short :0; char v2; };
struct S_BFu0s_D { short v1; unsigned short :0; double v2; };
struct S_BFu0s_F { short v1; unsigned short :0; float v2; };
struct S_BFu0s_I { short v1; unsigned short :0; int v2; };
struct S_BFu0s_Ip { short v1; unsigned short :0; int * v2; };
struct S_BFu0s_L { short v1; unsigned short :0; long long v2; };
struct S_BFu0s_S { short v1; unsigned short :0; short v2; };
struct S_BFu0s_Uc { short v1; unsigned short :0; unsigned char v2; };
struct S_BFu0s_Ui { short v1; unsigned short :0; unsigned int v2; };
struct S_BFu0s_Ul { short v1; unsigned short :0; unsigned long long v2; };
struct S_BFu0s_Us { short v1; unsigned short :0; unsigned short v2; };
struct S_BFu0s_Vp { short v1; unsigned short :0; void * v2; };
struct S_BFu15i_BFu0c { short v1; unsigned int v2:15; unsigned char :0; };
struct S_BFu15i_BFu0i { short v1; unsigned int v2:15; unsigned int :0; };
struct S_BFu15i_BFu0ll { short v1; unsigned int v2:15; unsigned long long :0; };
struct S_BFu15i_BFu0s { short v1; unsigned int v2:15; unsigned short :0; };
struct S_BFu15ll_BFu0c { short v1; unsigned long long v2:15; unsigned char :0; };
struct S_BFu15ll_BFu0i { short v1; unsigned long long v2:15; unsigned int :0; };
struct S_BFu15ll_BFu0ll { short v1; unsigned long long v2:15; unsigned long long :0; };
struct S_BFu15ll_BFu0s { short v1; unsigned long long v2:15; unsigned short :0; };
struct S_BFu15s_BFu0c { short v1; unsigned short v2:15; unsigned char :0; };
struct S_BFu15s_BFu0i { short v1; unsigned short v2:15; unsigned int :0; };
struct S_BFu15s_BFu0ll { short v1; unsigned short v2:15; unsigned long long :0; };
struct S_BFu15s_BFu0s { short v1; unsigned short v2:15; unsigned short :0; };
struct S_BFu16i_BFu0c { short v1; unsigned int v2:16; unsigned char :0; };
struct S_BFu16i_BFu0i { short v1; unsigned int v2:16; unsigned int :0; };
struct S_BFu16i_BFu0ll { short v1; unsigned int v2:16; unsigned long long :0; };
struct S_BFu16i_BFu0s { short v1; unsigned int v2:16; unsigned short :0; };
struct S_BFu16ll_BFu0c { short v1; unsigned long long v2:16; unsigned char :0; };
struct S_BFu16ll_BFu0i { short v1; unsigned long long v2:16; unsigned int :0; };
struct S_BFu16ll_BFu0ll { short v1; unsigned long long v2:16; unsigned long long :0; };
struct S_BFu16ll_BFu0s { short v1; unsigned long long v2:16; unsigned short :0; };
struct S_BFu16s_BFu0c { short v1; unsigned short v2:16; unsigned char :0; };
struct S_BFu16s_BFu0i { short v1; unsigned short v2:16; unsigned int :0; };
struct S_BFu16s_BFu0ll { short v1; unsigned short v2:16; unsigned long long :0; };
struct S_BFu16s_BFu0s { short v1; unsigned short v2:16; unsigned short :0; };
struct S_BFu17i_BFu0c { short v1; unsigned int v2:17; unsigned char :0; };
struct S_BFu17i_BFu0i { short v1; unsigned int v2:17; unsigned int :0; };
struct S_BFu17i_BFu0ll { short v1; unsigned int v2:17; unsigned long long :0; };
struct S_BFu17i_BFu0s { short v1; unsigned int v2:17; unsigned short :0; };
struct S_BFu17ll_BFu0c { short v1; unsigned long long v2:17; unsigned char :0; };
struct S_BFu17ll_BFu0i { short v1; unsigned long long v2:17; unsigned int :0; };
struct S_BFu17ll_BFu0ll { short v1; unsigned long long v2:17; unsigned long long :0; };
struct S_BFu17ll_BFu0s { short v1; unsigned long long v2:17; unsigned short :0; };
struct S_BFu1c_BFu0c { short v1; unsigned char v2:1; unsigned char :0; };
struct S_BFu1c_BFu0i { short v1; unsigned char v2:1; unsigned int :0; };
struct S_BFu1c_BFu0ll { short v1; unsigned char v2:1; unsigned long long :0; };
struct S_BFu1c_BFu0s { short v1; unsigned char v2:1; unsigned short :0; };
struct S_BFu1i_BFu0c { short v1; unsigned int v2:1; unsigned char :0; };
struct S_BFu1i_BFu0i { short v1; unsigned int v2:1; unsigned int :0; };
struct S_BFu1i_BFu0ll { short v1; unsigned int v2:1; unsigned long long :0; };
struct S_BFu1i_BFu0s { short v1; unsigned int v2:1; unsigned short :0; };
struct S_BFu1ll_BFu0c { short v1; unsigned long long v2:1; unsigned char :0; };
struct S_BFu1ll_BFu0i { short v1; unsigned long long v2:1; unsigned int :0; };
struct S_BFu1ll_BFu0ll { short v1; unsigned long long v2:1; unsigned long long :0; };
struct S_BFu1ll_BFu0s { short v1; unsigned long long v2:1; unsigned short :0; };
struct S_BFu1s_BFu0c { short v1; unsigned short v2:1; unsigned char :0; };
struct S_BFu1s_BFu0i { short v1; unsigned short v2:1; unsigned int :0; };
struct S_BFu1s_BFu0ll { short v1; unsigned short v2:1; unsigned long long :0; };
struct S_BFu1s_BFu0s { short v1; unsigned short v2:1; unsigned short :0; };
struct S_BFu31i_BFu0c { short v1; unsigned int v2:31; unsigned char :0; };
struct S_BFu31i_BFu0i { short v1; unsigned int v2:31; unsigned int :0; };
struct S_BFu31i_BFu0ll { short v1; unsigned int v2:31; unsigned long long :0; };
struct S_BFu31i_BFu0s { short v1; unsigned int v2:31; unsigned short :0; };
struct S_BFu31ll_BFu0c { short v1; unsigned long long v2:31; unsigned char :0; };
struct S_BFu31ll_BFu0i { short v1; unsigned long long v2:31; unsigned int :0; };
struct S_BFu31ll_BFu0ll { short v1; unsigned long long v2:31; unsigned long long :0; };
struct S_BFu31ll_BFu0s { short v1; unsigned long long v2:31; unsigned short :0; };
struct S_BFu32i_BFu0c { short v1; unsigned int v2:32; unsigned char :0; };
struct S_BFu32i_BFu0i { short v1; unsigned int v2:32; unsigned int :0; };
struct S_BFu32i_BFu0ll { short v1; unsigned int v2:32; unsigned long long :0; };
struct S_BFu32i_BFu0s { short v1; unsigned int v2:32; unsigned short :0; };
struct S_BFu32ll_BFu0c { short v1; unsigned long long v2:32; unsigned char :0; };
struct S_BFu32ll_BFu0i { short v1; unsigned long long v2:32; unsigned int :0; };
struct S_BFu32ll_BFu0ll { short v1; unsigned long long v2:32; unsigned long long :0; };
struct S_BFu32ll_BFu0s { short v1; unsigned long long v2:32; unsigned short :0; };
struct S_BFu33_BFu0c { short v1; unsigned long long v2:33; unsigned char :0; };
struct S_BFu33_BFu0i { short v1; unsigned long long v2:33; unsigned int :0; };
struct S_BFu33_BFu0ll { short v1; unsigned long long v2:33; unsigned long long :0; };
struct S_BFu33_BFu0s { short v1; unsigned long long v2:33; unsigned short :0; };
struct S_BFu7c_BFu0c { short v1; unsigned char v2:7; unsigned char :0; };
struct S_BFu7c_BFu0i { short v1; unsigned char v2:7; unsigned int :0; };
struct S_BFu7c_BFu0ll { short v1; unsigned char v2:7; unsigned long long :0; };
struct S_BFu7c_BFu0s { short v1; unsigned char v2:7; unsigned short :0; };
struct S_BFu7i_BFu0c { short v1; unsigned int v2:7; unsigned char :0; };
struct S_BFu7i_BFu0i { short v1; unsigned int v2:7; unsigned int :0; };
struct S_BFu7i_BFu0ll { short v1; unsigned int v2:7; unsigned long long :0; };
struct S_BFu7i_BFu0s { short v1; unsigned int v2:7; unsigned short :0; };
struct S_BFu7ll_BFu0c { short v1; unsigned long long v2:7; unsigned char :0; };
struct S_BFu7ll_BFu0i { short v1; unsigned long long v2:7; unsigned int :0; };
struct S_BFu7ll_BFu0ll { short v1; unsigned long long v2:7; unsigned long long :0; };
struct S_BFu7ll_BFu0s { short v1; unsigned long long v2:7; unsigned short :0; };
struct S_BFu7s_BFu0c { short v1; unsigned short v2:7; unsigned char :0; };
struct S_BFu7s_BFu0i { short v1; unsigned short v2:7; unsigned int :0; };
struct S_BFu7s_BFu0ll { short v1; unsigned short v2:7; unsigned long long :0; };
struct S_BFu7s_BFu0s { short v1; unsigned short v2:7; unsigned short :0; };
struct S_BFu8c_BFu0c { short v1; unsigned char v2:8; unsigned char :0; };
struct S_BFu8c_BFu0i { short v1; unsigned char v2:8; unsigned int :0; };
struct S_BFu8c_BFu0ll { short v1; unsigned char v2:8; unsigned long long :0; };
struct S_BFu8c_BFu0s { short v1; unsigned char v2:8; unsigned short :0; };
struct S_BFu8i_BFu0c { short v1; unsigned int v2:8; unsigned char :0; };
struct S_BFu8i_BFu0i { short v1; unsigned int v2:8; unsigned int :0; };
struct S_BFu8i_BFu0ll { short v1; unsigned int v2:8; unsigned long long :0; };
struct S_BFu8i_BFu0s { short v1; unsigned int v2:8; unsigned short :0; };
struct S_BFu8ll_BFu0c { short v1; unsigned long long v2:8; unsigned char :0; };
struct S_BFu8ll_BFu0i { short v1; unsigned long long v2:8; unsigned int :0; };
struct S_BFu8ll_BFu0ll { short v1; unsigned long long v2:8; unsigned long long :0; };
struct S_BFu8ll_BFu0s { short v1; unsigned long long v2:8; unsigned short :0; };
struct S_BFu8s_BFu0c { short v1; unsigned short v2:8; unsigned char :0; };
struct S_BFu8s_BFu0i { short v1; unsigned short v2:8; unsigned int :0; };
struct S_BFu8s_BFu0ll { short v1; unsigned short v2:8; unsigned long long :0; };
struct S_BFu8s_BFu0s { short v1; unsigned short v2:8; unsigned short :0; };
struct S_BFu9i_BFu0c { short v1; unsigned int v2:9; unsigned char :0; };
struct S_BFu9i_BFu0i { short v1; unsigned int v2:9; unsigned int :0; };
struct S_BFu9i_BFu0ll { short v1; unsigned int v2:9; unsigned long long :0; };
struct S_BFu9i_BFu0s { short v1; unsigned int v2:9; unsigned short :0; };
struct S_BFu9ll_BFu0c { short v1; unsigned long long v2:9; unsigned char :0; };
struct S_BFu9ll_BFu0i { short v1; unsigned long long v2:9; unsigned int :0; };
struct S_BFu9ll_BFu0ll { short v1; unsigned long long v2:9; unsigned long long :0; };
struct S_BFu9ll_BFu0s { short v1; unsigned long long v2:9; unsigned short :0; };
struct S_BFu9s_BFu0c { short v1; unsigned short v2:9; unsigned char :0; };
struct S_BFu9s_BFu0i { short v1; unsigned short v2:9; unsigned int :0; };
struct S_BFu9s_BFu0ll { short v1; unsigned short v2:9; unsigned long long :0; };
struct S_BFu9s_BFu0s { short v1; unsigned short v2:9; unsigned short :0; };
struct S_C_BFu0c { short v1; char v2; unsigned char :0; };
struct S_C_BFu0i { short v1; char v2; unsigned int :0; };
struct S_C_BFu0ll { short v1; char v2; unsigned long long :0; };
struct S_C_BFu0s { short v1; char v2; unsigned short :0; };
struct S_D_BFu0c { short v1; double v2; unsigned char :0; };
struct S_D_BFu0i { short v1; double v2; unsigned int :0; };
struct S_D_BFu0ll { short v1; double v2; unsigned long long :0; };
struct S_D_BFu0s { short v1; double v2; unsigned short :0; };
struct S_F_BFu0c { short v1; float v2; unsigned char :0; };
struct S_F_BFu0i { short v1; float v2; unsigned int :0; };
struct S_F_BFu0ll { short v1; float v2; unsigned long long :0; };
struct S_F_BFu0s { short v1; float v2; unsigned short :0; };
struct S_I_BFu0c { short v1; int v2; unsigned char :0; };
struct S_I_BFu0i { short v1; int v2; unsigned int :0; };
struct S_I_BFu0ll { short v1; int v2; unsigned long long :0; };
struct S_I_BFu0s { short v1; int v2; unsigned short :0; };
struct S_Ip_BFu0c { short v1; int * v2; unsigned char :0; };
struct S_Ip_BFu0i { short v1; int * v2; unsigned int :0; };
struct S_Ip_BFu0ll { short v1; int * v2; unsigned long long :0; };
struct S_Ip_BFu0s { short v1; int * v2; unsigned short :0; };
struct S_L_BFu0c { short v1; long long v2; unsigned char :0; };
struct S_L_BFu0i { short v1; long long v2; unsigned int :0; };
struct S_L_BFu0ll { short v1; long long v2; unsigned long long :0; };
struct S_L_BFu0s { short v1; long long v2; unsigned short :0; };
struct S_S_BFu0c { short v1; short v2; unsigned char :0; };
struct S_S_BFu0i { short v1; short v2; unsigned int :0; };
struct S_S_BFu0ll { short v1; short v2; unsigned long long :0; };
struct S_S_BFu0s { short v1; short v2; unsigned short :0; };
struct S_Uc_BFu0c { short v1; unsigned char v2; unsigned char :0; };
struct S_Uc_BFu0i { short v1; unsigned char v2; unsigned int :0; };
struct S_Uc_BFu0ll { short v1; unsigned char v2; unsigned long long :0; };
struct S_Uc_BFu0s { short v1; unsigned char v2; unsigned short :0; };
struct S_Ui_BFu0c { short v1; unsigned int v2; unsigned char :0; };
struct S_Ui_BFu0i { short v1; unsigned int v2; unsigned int :0; };
struct S_Ui_BFu0ll { short v1; unsigned int v2; unsigned long long :0; };
struct S_Ui_BFu0s { short v1; unsigned int v2; unsigned short :0; };
struct S_Ul_BFu0c { short v1; unsigned long long v2; unsigned char :0; };
struct S_Ul_BFu0i { short v1; unsigned long long v2; unsigned int :0; };
struct S_Ul_BFu0ll { short v1; unsigned long long v2; unsigned long long :0; };
struct S_Ul_BFu0s { short v1; unsigned long long v2; unsigned short :0; };
struct S_Us_BFu0c { short v1; unsigned short v2; unsigned char :0; };
struct S_Us_BFu0i { short v1; unsigned short v2; unsigned int :0; };
struct S_Us_BFu0ll { short v1; unsigned short v2; unsigned long long :0; };
struct S_Us_BFu0s { short v1; unsigned short v2; unsigned short :0; };
struct S_Vp_BFu0c { short v1; void * v2; unsigned char :0; };
struct S_Vp_BFu0i { short v1; void * v2; unsigned int :0; };
struct S_Vp_BFu0ll { short v1; void * v2; unsigned long long :0; };
struct S_Vp_BFu0s { short v1; void * v2; unsigned short :0; };
struct Uc_BFu0c { unsigned char v1; unsigned char :0; };
struct Uc_BFu0c_BFu0c { unsigned char v1; unsigned char :0; unsigned char :0; };
struct Uc_BFu0c_BFu0i { unsigned char v1; unsigned char :0; unsigned int :0; };
struct Uc_BFu0c_BFu0ll { unsigned char v1; unsigned char :0; unsigned long long :0; };
struct Uc_BFu0c_BFu0s { unsigned char v1; unsigned char :0; unsigned short :0; };
struct Uc_BFu0c_BFu15i { unsigned char v1; unsigned char :0; unsigned int v2:15; };
struct Uc_BFu0c_BFu15ll { unsigned char v1; unsigned char :0; unsigned long long v2:15; };
struct Uc_BFu0c_BFu15s { unsigned char v1; unsigned char :0; unsigned short v2:15; };
struct Uc_BFu0c_BFu16i { unsigned char v1; unsigned char :0; unsigned int v2:16; };
struct Uc_BFu0c_BFu16ll { unsigned char v1; unsigned char :0; unsigned long long v2:16; };
struct Uc_BFu0c_BFu16s { unsigned char v1; unsigned char :0; unsigned short v2:16; };
struct Uc_BFu0c_BFu17i { unsigned char v1; unsigned char :0; unsigned int v2:17; };
struct Uc_BFu0c_BFu17ll { unsigned char v1; unsigned char :0; unsigned long long v2:17; };
struct Uc_BFu0c_BFu1c { unsigned char v1; unsigned char :0; unsigned char v2:1; };
struct Uc_BFu0c_BFu1i { unsigned char v1; unsigned char :0; unsigned int v2:1; };
struct Uc_BFu0c_BFu1ll { unsigned char v1; unsigned char :0; unsigned long long v2:1; };
struct Uc_BFu0c_BFu1s { unsigned char v1; unsigned char :0; unsigned short v2:1; };
struct Uc_BFu0c_BFu31i { unsigned char v1; unsigned char :0; unsigned int v2:31; };
struct Uc_BFu0c_BFu31ll { unsigned char v1; unsigned char :0; unsigned long long v2:31; };
struct Uc_BFu0c_BFu32i { unsigned char v1; unsigned char :0; unsigned int v2:32; };
struct Uc_BFu0c_BFu32ll { unsigned char v1; unsigned char :0; unsigned long long v2:32; };
struct Uc_BFu0c_BFu33 { unsigned char v1; unsigned char :0; unsigned long long v2:33; };
struct Uc_BFu0c_BFu7c { unsigned char v1; unsigned char :0; unsigned char v2:7; };
struct Uc_BFu0c_BFu7i { unsigned char v1; unsigned char :0; unsigned int v2:7; };
struct Uc_BFu0c_BFu7ll { unsigned char v1; unsigned char :0; unsigned long long v2:7; };
struct Uc_BFu0c_BFu7s { unsigned char v1; unsigned char :0; unsigned short v2:7; };
struct Uc_BFu0c_BFu8c { unsigned char v1; unsigned char :0; unsigned char v2:8; };
struct Uc_BFu0c_BFu8i { unsigned char v1; unsigned char :0; unsigned int v2:8; };
struct Uc_BFu0c_BFu8ll { unsigned char v1; unsigned char :0; unsigned long long v2:8; };
struct Uc_BFu0c_BFu8s { unsigned char v1; unsigned char :0; unsigned short v2:8; };
struct Uc_BFu0c_BFu9i { unsigned char v1; unsigned char :0; unsigned int v2:9; };
struct Uc_BFu0c_BFu9ll { unsigned char v1; unsigned char :0; unsigned long long v2:9; };
struct Uc_BFu0c_BFu9s { unsigned char v1; unsigned char :0; unsigned short v2:9; };
struct Uc_BFu0c_C { unsigned char v1; unsigned char :0; char v2; };
struct Uc_BFu0c_D { unsigned char v1; unsigned char :0; double v2; };
struct Uc_BFu0c_F { unsigned char v1; unsigned char :0; float v2; };
struct Uc_BFu0c_I { unsigned char v1; unsigned char :0; int v2; };
struct Uc_BFu0c_Ip { unsigned char v1; unsigned char :0; int * v2; };
struct Uc_BFu0c_L { unsigned char v1; unsigned char :0; long long v2; };
struct Uc_BFu0c_S { unsigned char v1; unsigned char :0; short v2; };
struct Uc_BFu0c_Uc { unsigned char v1; unsigned char :0; unsigned char v2; };
struct Uc_BFu0c_Ui { unsigned char v1; unsigned char :0; unsigned int v2; };
struct Uc_BFu0c_Ul { unsigned char v1; unsigned char :0; unsigned long long v2; };
struct Uc_BFu0c_Us { unsigned char v1; unsigned char :0; unsigned short v2; };
struct Uc_BFu0c_Vp { unsigned char v1; unsigned char :0; void * v2; };
struct Uc_BFu0i { unsigned char v1; unsigned int :0; };
struct Uc_BFu0i_BFu0c { unsigned char v1; unsigned int :0; unsigned char :0; };
struct Uc_BFu0i_BFu0i { unsigned char v1; unsigned int :0; unsigned int :0; };
struct Uc_BFu0i_BFu0ll { unsigned char v1; unsigned int :0; unsigned long long :0; };
struct Uc_BFu0i_BFu0s { unsigned char v1; unsigned int :0; unsigned short :0; };
struct Uc_BFu0i_BFu15i { unsigned char v1; unsigned int :0; unsigned int v2:15; };
struct Uc_BFu0i_BFu15ll { unsigned char v1; unsigned int :0; unsigned long long v2:15; };
struct Uc_BFu0i_BFu15s { unsigned char v1; unsigned int :0; unsigned short v2:15; };
struct Uc_BFu0i_BFu16i { unsigned char v1; unsigned int :0; unsigned int v2:16; };
struct Uc_BFu0i_BFu16ll { unsigned char v1; unsigned int :0; unsigned long long v2:16; };
struct Uc_BFu0i_BFu16s { unsigned char v1; unsigned int :0; unsigned short v2:16; };
struct Uc_BFu0i_BFu17i { unsigned char v1; unsigned int :0; unsigned int v2:17; };
struct Uc_BFu0i_BFu17ll { unsigned char v1; unsigned int :0; unsigned long long v2:17; };
struct Uc_BFu0i_BFu1c { unsigned char v1; unsigned int :0; unsigned char v2:1; };
struct Uc_BFu0i_BFu1i { unsigned char v1; unsigned int :0; unsigned int v2:1; };
struct Uc_BFu0i_BFu1ll { unsigned char v1; unsigned int :0; unsigned long long v2:1; };
struct Uc_BFu0i_BFu1s { unsigned char v1; unsigned int :0; unsigned short v2:1; };
struct Uc_BFu0i_BFu31i { unsigned char v1; unsigned int :0; unsigned int v2:31; };
struct Uc_BFu0i_BFu31ll { unsigned char v1; unsigned int :0; unsigned long long v2:31; };
struct Uc_BFu0i_BFu32i { unsigned char v1; unsigned int :0; unsigned int v2:32; };
struct Uc_BFu0i_BFu32ll { unsigned char v1; unsigned int :0; unsigned long long v2:32; };
struct Uc_BFu0i_BFu33 { unsigned char v1; unsigned int :0; unsigned long long v2:33; };
struct Uc_BFu0i_BFu7c { unsigned char v1; unsigned int :0; unsigned char v2:7; };
struct Uc_BFu0i_BFu7i { unsigned char v1; unsigned int :0; unsigned int v2:7; };
struct Uc_BFu0i_BFu7ll { unsigned char v1; unsigned int :0; unsigned long long v2:7; };
struct Uc_BFu0i_BFu7s { unsigned char v1; unsigned int :0; unsigned short v2:7; };
struct Uc_BFu0i_BFu8c { unsigned char v1; unsigned int :0; unsigned char v2:8; };
struct Uc_BFu0i_BFu8i { unsigned char v1; unsigned int :0; unsigned int v2:8; };
struct Uc_BFu0i_BFu8ll { unsigned char v1; unsigned int :0; unsigned long long v2:8; };
struct Uc_BFu0i_BFu8s { unsigned char v1; unsigned int :0; unsigned short v2:8; };
struct Uc_BFu0i_BFu9i { unsigned char v1; unsigned int :0; unsigned int v2:9; };
struct Uc_BFu0i_BFu9ll { unsigned char v1; unsigned int :0; unsigned long long v2:9; };
struct Uc_BFu0i_BFu9s { unsigned char v1; unsigned int :0; unsigned short v2:9; };
struct Uc_BFu0i_C { unsigned char v1; unsigned int :0; char v2; };
struct Uc_BFu0i_D { unsigned char v1; unsigned int :0; double v2; };
struct Uc_BFu0i_F { unsigned char v1; unsigned int :0; float v2; };
struct Uc_BFu0i_I { unsigned char v1; unsigned int :0; int v2; };
struct Uc_BFu0i_Ip { unsigned char v1; unsigned int :0; int * v2; };
struct Uc_BFu0i_L { unsigned char v1; unsigned int :0; long long v2; };
struct Uc_BFu0i_S { unsigned char v1; unsigned int :0; short v2; };
struct Uc_BFu0i_Uc { unsigned char v1; unsigned int :0; unsigned char v2; };
struct Uc_BFu0i_Ui { unsigned char v1; unsigned int :0; unsigned int v2; };
struct Uc_BFu0i_Ul { unsigned char v1; unsigned int :0; unsigned long long v2; };
struct Uc_BFu0i_Us { unsigned char v1; unsigned int :0; unsigned short v2; };
struct Uc_BFu0i_Vp { unsigned char v1; unsigned int :0; void * v2; };
struct Uc_BFu0ll { unsigned char v1; unsigned long long :0; };
struct Uc_BFu0ll_BFu0c { unsigned char v1; unsigned long long :0; unsigned char :0; };
struct Uc_BFu0ll_BFu0i { unsigned char v1; unsigned long long :0; unsigned int :0; };
struct Uc_BFu0ll_BFu0ll { unsigned char v1; unsigned long long :0; unsigned long long :0; };
struct Uc_BFu0ll_BFu0s { unsigned char v1; unsigned long long :0; unsigned short :0; };
struct Uc_BFu0ll_BFu15i { unsigned char v1; unsigned long long :0; unsigned int v2:15; };
struct Uc_BFu0ll_BFu15ll { unsigned char v1; unsigned long long :0; unsigned long long v2:15; };
struct Uc_BFu0ll_BFu15s { unsigned char v1; unsigned long long :0; unsigned short v2:15; };
struct Uc_BFu0ll_BFu16i { unsigned char v1; unsigned long long :0; unsigned int v2:16; };
struct Uc_BFu0ll_BFu16ll { unsigned char v1; unsigned long long :0; unsigned long long v2:16; };
struct Uc_BFu0ll_BFu16s { unsigned char v1; unsigned long long :0; unsigned short v2:16; };
struct Uc_BFu0ll_BFu17i { unsigned char v1; unsigned long long :0; unsigned int v2:17; };
struct Uc_BFu0ll_BFu17ll { unsigned char v1; unsigned long long :0; unsigned long long v2:17; };
struct Uc_BFu0ll_BFu1c { unsigned char v1; unsigned long long :0; unsigned char v2:1; };
struct Uc_BFu0ll_BFu1i { unsigned char v1; unsigned long long :0; unsigned int v2:1; };
struct Uc_BFu0ll_BFu1ll { unsigned char v1; unsigned long long :0; unsigned long long v2:1; };
struct Uc_BFu0ll_BFu1s { unsigned char v1; unsigned long long :0; unsigned short v2:1; };
struct Uc_BFu0ll_BFu31i { unsigned char v1; unsigned long long :0; unsigned int v2:31; };
struct Uc_BFu0ll_BFu31ll { unsigned char v1; unsigned long long :0; unsigned long long v2:31; };
struct Uc_BFu0ll_BFu32i { unsigned char v1; unsigned long long :0; unsigned int v2:32; };
struct Uc_BFu0ll_BFu32ll { unsigned char v1; unsigned long long :0; unsigned long long v2:32; };
struct Uc_BFu0ll_BFu33 { unsigned char v1; unsigned long long :0; unsigned long long v2:33; };
struct Uc_BFu0ll_BFu7c { unsigned char v1; unsigned long long :0; unsigned char v2:7; };
struct Uc_BFu0ll_BFu7i { unsigned char v1; unsigned long long :0; unsigned int v2:7; };
struct Uc_BFu0ll_BFu7ll { unsigned char v1; unsigned long long :0; unsigned long long v2:7; };
struct Uc_BFu0ll_BFu7s { unsigned char v1; unsigned long long :0; unsigned short v2:7; };
struct Uc_BFu0ll_BFu8c { unsigned char v1; unsigned long long :0; unsigned char v2:8; };
struct Uc_BFu0ll_BFu8i { unsigned char v1; unsigned long long :0; unsigned int v2:8; };
struct Uc_BFu0ll_BFu8ll { unsigned char v1; unsigned long long :0; unsigned long long v2:8; };
struct Uc_BFu0ll_BFu8s { unsigned char v1; unsigned long long :0; unsigned short v2:8; };
struct Uc_BFu0ll_BFu9i { unsigned char v1; unsigned long long :0; unsigned int v2:9; };
struct Uc_BFu0ll_BFu9ll { unsigned char v1; unsigned long long :0; unsigned long long v2:9; };
struct Uc_BFu0ll_BFu9s { unsigned char v1; unsigned long long :0; unsigned short v2:9; };
struct Uc_BFu0ll_C { unsigned char v1; unsigned long long :0; char v2; };
struct Uc_BFu0ll_D { unsigned char v1; unsigned long long :0; double v2; };
struct Uc_BFu0ll_F { unsigned char v1; unsigned long long :0; float v2; };
struct Uc_BFu0ll_I { unsigned char v1; unsigned long long :0; int v2; };
struct Uc_BFu0ll_Ip { unsigned char v1; unsigned long long :0; int * v2; };
struct Uc_BFu0ll_L { unsigned char v1; unsigned long long :0; long long v2; };
struct Uc_BFu0ll_S { unsigned char v1; unsigned long long :0; short v2; };
struct Uc_BFu0ll_Uc { unsigned char v1; unsigned long long :0; unsigned char v2; };
struct Uc_BFu0ll_Ui { unsigned char v1; unsigned long long :0; unsigned int v2; };
struct Uc_BFu0ll_Ul { unsigned char v1; unsigned long long :0; unsigned long long v2; };
struct Uc_BFu0ll_Us { unsigned char v1; unsigned long long :0; unsigned short v2; };
struct Uc_BFu0ll_Vp { unsigned char v1; unsigned long long :0; void * v2; };
struct Uc_BFu0s { unsigned char v1; unsigned short :0; };
struct Uc_BFu0s_BFu0c { unsigned char v1; unsigned short :0; unsigned char :0; };
struct Uc_BFu0s_BFu0i { unsigned char v1; unsigned short :0; unsigned int :0; };
struct Uc_BFu0s_BFu0ll { unsigned char v1; unsigned short :0; unsigned long long :0; };
struct Uc_BFu0s_BFu0s { unsigned char v1; unsigned short :0; unsigned short :0; };
struct Uc_BFu0s_BFu15i { unsigned char v1; unsigned short :0; unsigned int v2:15; };
struct Uc_BFu0s_BFu15ll { unsigned char v1; unsigned short :0; unsigned long long v2:15; };
struct Uc_BFu0s_BFu15s { unsigned char v1; unsigned short :0; unsigned short v2:15; };
struct Uc_BFu0s_BFu16i { unsigned char v1; unsigned short :0; unsigned int v2:16; };
struct Uc_BFu0s_BFu16ll { unsigned char v1; unsigned short :0; unsigned long long v2:16; };
struct Uc_BFu0s_BFu16s { unsigned char v1; unsigned short :0; unsigned short v2:16; };
struct Uc_BFu0s_BFu17i { unsigned char v1; unsigned short :0; unsigned int v2:17; };
struct Uc_BFu0s_BFu17ll { unsigned char v1; unsigned short :0; unsigned long long v2:17; };
struct Uc_BFu0s_BFu1c { unsigned char v1; unsigned short :0; unsigned char v2:1; };
struct Uc_BFu0s_BFu1i { unsigned char v1; unsigned short :0; unsigned int v2:1; };
struct Uc_BFu0s_BFu1ll { unsigned char v1; unsigned short :0; unsigned long long v2:1; };
struct Uc_BFu0s_BFu1s { unsigned char v1; unsigned short :0; unsigned short v2:1; };
struct Uc_BFu0s_BFu31i { unsigned char v1; unsigned short :0; unsigned int v2:31; };
struct Uc_BFu0s_BFu31ll { unsigned char v1; unsigned short :0; unsigned long long v2:31; };
struct Uc_BFu0s_BFu32i { unsigned char v1; unsigned short :0; unsigned int v2:32; };
struct Uc_BFu0s_BFu32ll { unsigned char v1; unsigned short :0; unsigned long long v2:32; };
struct Uc_BFu0s_BFu33 { unsigned char v1; unsigned short :0; unsigned long long v2:33; };
struct Uc_BFu0s_BFu7c { unsigned char v1; unsigned short :0; unsigned char v2:7; };
struct Uc_BFu0s_BFu7i { unsigned char v1; unsigned short :0; unsigned int v2:7; };
struct Uc_BFu0s_BFu7ll { unsigned char v1; unsigned short :0; unsigned long long v2:7; };
struct Uc_BFu0s_BFu7s { unsigned char v1; unsigned short :0; unsigned short v2:7; };
struct Uc_BFu0s_BFu8c { unsigned char v1; unsigned short :0; unsigned char v2:8; };
struct Uc_BFu0s_BFu8i { unsigned char v1; unsigned short :0; unsigned int v2:8; };
struct Uc_BFu0s_BFu8ll { unsigned char v1; unsigned short :0; unsigned long long v2:8; };
struct Uc_BFu0s_BFu8s { unsigned char v1; unsigned short :0; unsigned short v2:8; };
struct Uc_BFu0s_BFu9i { unsigned char v1; unsigned short :0; unsigned int v2:9; };
struct Uc_BFu0s_BFu9ll { unsigned char v1; unsigned short :0; unsigned long long v2:9; };
struct Uc_BFu0s_BFu9s { unsigned char v1; unsigned short :0; unsigned short v2:9; };
struct Uc_BFu0s_C { unsigned char v1; unsigned short :0; char v2; };
struct Uc_BFu0s_D { unsigned char v1; unsigned short :0; double v2; };
struct Uc_BFu0s_F { unsigned char v1; unsigned short :0; float v2; };
struct Uc_BFu0s_I { unsigned char v1; unsigned short :0; int v2; };
struct Uc_BFu0s_Ip { unsigned char v1; unsigned short :0; int * v2; };
struct Uc_BFu0s_L { unsigned char v1; unsigned short :0; long long v2; };
struct Uc_BFu0s_S { unsigned char v1; unsigned short :0; short v2; };
struct Uc_BFu0s_Uc { unsigned char v1; unsigned short :0; unsigned char v2; };
struct Uc_BFu0s_Ui { unsigned char v1; unsigned short :0; unsigned int v2; };
struct Uc_BFu0s_Ul { unsigned char v1; unsigned short :0; unsigned long long v2; };
struct Uc_BFu0s_Us { unsigned char v1; unsigned short :0; unsigned short v2; };
struct Uc_BFu0s_Vp { unsigned char v1; unsigned short :0; void * v2; };
struct Uc_BFu15i_BFu0c { unsigned char v1; unsigned int v2:15; unsigned char :0; };
struct Uc_BFu15i_BFu0i { unsigned char v1; unsigned int v2:15; unsigned int :0; };
struct Uc_BFu15i_BFu0ll { unsigned char v1; unsigned int v2:15; unsigned long long :0; };
struct Uc_BFu15i_BFu0s { unsigned char v1; unsigned int v2:15; unsigned short :0; };
struct Uc_BFu15ll_BFu0c { unsigned char v1; unsigned long long v2:15; unsigned char :0; };
struct Uc_BFu15ll_BFu0i { unsigned char v1; unsigned long long v2:15; unsigned int :0; };
struct Uc_BFu15ll_BFu0ll { unsigned char v1; unsigned long long v2:15; unsigned long long :0; };
struct Uc_BFu15ll_BFu0s { unsigned char v1; unsigned long long v2:15; unsigned short :0; };
struct Uc_BFu15s_BFu0c { unsigned char v1; unsigned short v2:15; unsigned char :0; };
struct Uc_BFu15s_BFu0i { unsigned char v1; unsigned short v2:15; unsigned int :0; };
struct Uc_BFu15s_BFu0ll { unsigned char v1; unsigned short v2:15; unsigned long long :0; };
struct Uc_BFu15s_BFu0s { unsigned char v1; unsigned short v2:15; unsigned short :0; };
struct Uc_BFu16i_BFu0c { unsigned char v1; unsigned int v2:16; unsigned char :0; };
struct Uc_BFu16i_BFu0i { unsigned char v1; unsigned int v2:16; unsigned int :0; };
struct Uc_BFu16i_BFu0ll { unsigned char v1; unsigned int v2:16; unsigned long long :0; };
struct Uc_BFu16i_BFu0s { unsigned char v1; unsigned int v2:16; unsigned short :0; };
struct Uc_BFu16ll_BFu0c { unsigned char v1; unsigned long long v2:16; unsigned char :0; };
struct Uc_BFu16ll_BFu0i { unsigned char v1; unsigned long long v2:16; unsigned int :0; };
struct Uc_BFu16ll_BFu0ll { unsigned char v1; unsigned long long v2:16; unsigned long long :0; };
struct Uc_BFu16ll_BFu0s { unsigned char v1; unsigned long long v2:16; unsigned short :0; };
struct Uc_BFu16s_BFu0c { unsigned char v1; unsigned short v2:16; unsigned char :0; };
struct Uc_BFu16s_BFu0i { unsigned char v1; unsigned short v2:16; unsigned int :0; };
struct Uc_BFu16s_BFu0ll { unsigned char v1; unsigned short v2:16; unsigned long long :0; };
struct Uc_BFu16s_BFu0s { unsigned char v1; unsigned short v2:16; unsigned short :0; };
struct Uc_BFu17i_BFu0c { unsigned char v1; unsigned int v2:17; unsigned char :0; };
struct Uc_BFu17i_BFu0i { unsigned char v1; unsigned int v2:17; unsigned int :0; };
struct Uc_BFu17i_BFu0ll { unsigned char v1; unsigned int v2:17; unsigned long long :0; };
struct Uc_BFu17i_BFu0s { unsigned char v1; unsigned int v2:17; unsigned short :0; };
struct Uc_BFu17ll_BFu0c { unsigned char v1; unsigned long long v2:17; unsigned char :0; };
struct Uc_BFu17ll_BFu0i { unsigned char v1; unsigned long long v2:17; unsigned int :0; };
struct Uc_BFu17ll_BFu0ll { unsigned char v1; unsigned long long v2:17; unsigned long long :0; };
struct Uc_BFu17ll_BFu0s { unsigned char v1; unsigned long long v2:17; unsigned short :0; };
struct Uc_BFu1c_BFu0c { unsigned char v1; unsigned char v2:1; unsigned char :0; };
struct Uc_BFu1c_BFu0i { unsigned char v1; unsigned char v2:1; unsigned int :0; };
struct Uc_BFu1c_BFu0ll { unsigned char v1; unsigned char v2:1; unsigned long long :0; };
struct Uc_BFu1c_BFu0s { unsigned char v1; unsigned char v2:1; unsigned short :0; };
struct Uc_BFu1i_BFu0c { unsigned char v1; unsigned int v2:1; unsigned char :0; };
struct Uc_BFu1i_BFu0i { unsigned char v1; unsigned int v2:1; unsigned int :0; };
struct Uc_BFu1i_BFu0ll { unsigned char v1; unsigned int v2:1; unsigned long long :0; };
struct Uc_BFu1i_BFu0s { unsigned char v1; unsigned int v2:1; unsigned short :0; };
struct Uc_BFu1ll_BFu0c { unsigned char v1; unsigned long long v2:1; unsigned char :0; };
struct Uc_BFu1ll_BFu0i { unsigned char v1; unsigned long long v2:1; unsigned int :0; };
struct Uc_BFu1ll_BFu0ll { unsigned char v1; unsigned long long v2:1; unsigned long long :0; };
struct Uc_BFu1ll_BFu0s { unsigned char v1; unsigned long long v2:1; unsigned short :0; };
struct Uc_BFu1s_BFu0c { unsigned char v1; unsigned short v2:1; unsigned char :0; };
struct Uc_BFu1s_BFu0i { unsigned char v1; unsigned short v2:1; unsigned int :0; };
struct Uc_BFu1s_BFu0ll { unsigned char v1; unsigned short v2:1; unsigned long long :0; };
struct Uc_BFu1s_BFu0s { unsigned char v1; unsigned short v2:1; unsigned short :0; };
struct Uc_BFu31i_BFu0c { unsigned char v1; unsigned int v2:31; unsigned char :0; };
struct Uc_BFu31i_BFu0i { unsigned char v1; unsigned int v2:31; unsigned int :0; };
struct Uc_BFu31i_BFu0ll { unsigned char v1; unsigned int v2:31; unsigned long long :0; };
struct Uc_BFu31i_BFu0s { unsigned char v1; unsigned int v2:31; unsigned short :0; };
struct Uc_BFu31ll_BFu0c { unsigned char v1; unsigned long long v2:31; unsigned char :0; };
struct Uc_BFu31ll_BFu0i { unsigned char v1; unsigned long long v2:31; unsigned int :0; };
struct Uc_BFu31ll_BFu0ll { unsigned char v1; unsigned long long v2:31; unsigned long long :0; };
struct Uc_BFu31ll_BFu0s { unsigned char v1; unsigned long long v2:31; unsigned short :0; };
struct Uc_BFu32i_BFu0c { unsigned char v1; unsigned int v2:32; unsigned char :0; };
struct Uc_BFu32i_BFu0i { unsigned char v1; unsigned int v2:32; unsigned int :0; };
struct Uc_BFu32i_BFu0ll { unsigned char v1; unsigned int v2:32; unsigned long long :0; };
struct Uc_BFu32i_BFu0s { unsigned char v1; unsigned int v2:32; unsigned short :0; };
struct Uc_BFu32ll_BFu0c { unsigned char v1; unsigned long long v2:32; unsigned char :0; };
struct Uc_BFu32ll_BFu0i { unsigned char v1; unsigned long long v2:32; unsigned int :0; };
struct Uc_BFu32ll_BFu0ll { unsigned char v1; unsigned long long v2:32; unsigned long long :0; };
struct Uc_BFu32ll_BFu0s { unsigned char v1; unsigned long long v2:32; unsigned short :0; };
struct Uc_BFu33_BFu0c { unsigned char v1; unsigned long long v2:33; unsigned char :0; };
struct Uc_BFu33_BFu0i { unsigned char v1; unsigned long long v2:33; unsigned int :0; };
struct Uc_BFu33_BFu0ll { unsigned char v1; unsigned long long v2:33; unsigned long long :0; };
struct Uc_BFu33_BFu0s { unsigned char v1; unsigned long long v2:33; unsigned short :0; };
struct Uc_BFu7c_BFu0c { unsigned char v1; unsigned char v2:7; unsigned char :0; };
struct Uc_BFu7c_BFu0i { unsigned char v1; unsigned char v2:7; unsigned int :0; };
struct Uc_BFu7c_BFu0ll { unsigned char v1; unsigned char v2:7; unsigned long long :0; };
struct Uc_BFu7c_BFu0s { unsigned char v1; unsigned char v2:7; unsigned short :0; };
struct Uc_BFu7i_BFu0c { unsigned char v1; unsigned int v2:7; unsigned char :0; };
struct Uc_BFu7i_BFu0i { unsigned char v1; unsigned int v2:7; unsigned int :0; };
struct Uc_BFu7i_BFu0ll { unsigned char v1; unsigned int v2:7; unsigned long long :0; };
struct Uc_BFu7i_BFu0s { unsigned char v1; unsigned int v2:7; unsigned short :0; };
struct Uc_BFu7ll_BFu0c { unsigned char v1; unsigned long long v2:7; unsigned char :0; };
struct Uc_BFu7ll_BFu0i { unsigned char v1; unsigned long long v2:7; unsigned int :0; };
struct Uc_BFu7ll_BFu0ll { unsigned char v1; unsigned long long v2:7; unsigned long long :0; };
struct Uc_BFu7ll_BFu0s { unsigned char v1; unsigned long long v2:7; unsigned short :0; };
struct Uc_BFu7s_BFu0c { unsigned char v1; unsigned short v2:7; unsigned char :0; };
struct Uc_BFu7s_BFu0i { unsigned char v1; unsigned short v2:7; unsigned int :0; };
struct Uc_BFu7s_BFu0ll { unsigned char v1; unsigned short v2:7; unsigned long long :0; };
struct Uc_BFu7s_BFu0s { unsigned char v1; unsigned short v2:7; unsigned short :0; };
struct Uc_BFu8c_BFu0c { unsigned char v1; unsigned char v2:8; unsigned char :0; };
struct Uc_BFu8c_BFu0i { unsigned char v1; unsigned char v2:8; unsigned int :0; };
struct Uc_BFu8c_BFu0ll { unsigned char v1; unsigned char v2:8; unsigned long long :0; };
struct Uc_BFu8c_BFu0s { unsigned char v1; unsigned char v2:8; unsigned short :0; };
struct Uc_BFu8i_BFu0c { unsigned char v1; unsigned int v2:8; unsigned char :0; };
struct Uc_BFu8i_BFu0i { unsigned char v1; unsigned int v2:8; unsigned int :0; };
struct Uc_BFu8i_BFu0ll { unsigned char v1; unsigned int v2:8; unsigned long long :0; };
struct Uc_BFu8i_BFu0s { unsigned char v1; unsigned int v2:8; unsigned short :0; };
struct Uc_BFu8ll_BFu0c { unsigned char v1; unsigned long long v2:8; unsigned char :0; };
struct Uc_BFu8ll_BFu0i { unsigned char v1; unsigned long long v2:8; unsigned int :0; };
struct Uc_BFu8ll_BFu0ll { unsigned char v1; unsigned long long v2:8; unsigned long long :0; };
struct Uc_BFu8ll_BFu0s { unsigned char v1; unsigned long long v2:8; unsigned short :0; };
struct Uc_BFu8s_BFu0c { unsigned char v1; unsigned short v2:8; unsigned char :0; };
struct Uc_BFu8s_BFu0i { unsigned char v1; unsigned short v2:8; unsigned int :0; };
struct Uc_BFu8s_BFu0ll { unsigned char v1; unsigned short v2:8; unsigned long long :0; };
struct Uc_BFu8s_BFu0s { unsigned char v1; unsigned short v2:8; unsigned short :0; };
struct Uc_BFu9i_BFu0c { unsigned char v1; unsigned int v2:9; unsigned char :0; };
struct Uc_BFu9i_BFu0i { unsigned char v1; unsigned int v2:9; unsigned int :0; };
struct Uc_BFu9i_BFu0ll { unsigned char v1; unsigned int v2:9; unsigned long long :0; };
struct Uc_BFu9i_BFu0s { unsigned char v1; unsigned int v2:9; unsigned short :0; };
struct Uc_BFu9ll_BFu0c { unsigned char v1; unsigned long long v2:9; unsigned char :0; };
struct Uc_BFu9ll_BFu0i { unsigned char v1; unsigned long long v2:9; unsigned int :0; };
struct Uc_BFu9ll_BFu0ll { unsigned char v1; unsigned long long v2:9; unsigned long long :0; };
struct Uc_BFu9ll_BFu0s { unsigned char v1; unsigned long long v2:9; unsigned short :0; };
struct Uc_BFu9s_BFu0c { unsigned char v1; unsigned short v2:9; unsigned char :0; };
struct Uc_BFu9s_BFu0i { unsigned char v1; unsigned short v2:9; unsigned int :0; };
struct Uc_BFu9s_BFu0ll { unsigned char v1; unsigned short v2:9; unsigned long long :0; };
struct Uc_BFu9s_BFu0s { unsigned char v1; unsigned short v2:9; unsigned short :0; };
struct Uc_C_BFu0c { unsigned char v1; char v2; unsigned char :0; };
struct Uc_C_BFu0i { unsigned char v1; char v2; unsigned int :0; };
struct Uc_C_BFu0ll { unsigned char v1; char v2; unsigned long long :0; };
struct Uc_C_BFu0s { unsigned char v1; char v2; unsigned short :0; };
struct Uc_D_BFu0c { unsigned char v1; double v2; unsigned char :0; };
struct Uc_D_BFu0i { unsigned char v1; double v2; unsigned int :0; };
struct Uc_D_BFu0ll { unsigned char v1; double v2; unsigned long long :0; };
struct Uc_D_BFu0s { unsigned char v1; double v2; unsigned short :0; };
struct Uc_F_BFu0c { unsigned char v1; float v2; unsigned char :0; };
struct Uc_F_BFu0i { unsigned char v1; float v2; unsigned int :0; };
struct Uc_F_BFu0ll { unsigned char v1; float v2; unsigned long long :0; };
struct Uc_F_BFu0s { unsigned char v1; float v2; unsigned short :0; };
struct Uc_I_BFu0c { unsigned char v1; int v2; unsigned char :0; };
struct Uc_I_BFu0i { unsigned char v1; int v2; unsigned int :0; };
struct Uc_I_BFu0ll { unsigned char v1; int v2; unsigned long long :0; };
struct Uc_I_BFu0s { unsigned char v1; int v2; unsigned short :0; };
struct Uc_Ip_BFu0c { unsigned char v1; int * v2; unsigned char :0; };
struct Uc_Ip_BFu0i { unsigned char v1; int * v2; unsigned int :0; };
struct Uc_Ip_BFu0ll { unsigned char v1; int * v2; unsigned long long :0; };
struct Uc_Ip_BFu0s { unsigned char v1; int * v2; unsigned short :0; };
struct Uc_L_BFu0c { unsigned char v1; long long v2; unsigned char :0; };
struct Uc_L_BFu0i { unsigned char v1; long long v2; unsigned int :0; };
struct Uc_L_BFu0ll { unsigned char v1; long long v2; unsigned long long :0; };
struct Uc_L_BFu0s { unsigned char v1; long long v2; unsigned short :0; };
struct Uc_S_BFu0c { unsigned char v1; short v2; unsigned char :0; };
struct Uc_S_BFu0i { unsigned char v1; short v2; unsigned int :0; };
struct Uc_S_BFu0ll { unsigned char v1; short v2; unsigned long long :0; };
struct Uc_S_BFu0s { unsigned char v1; short v2; unsigned short :0; };
struct Uc_Uc_BFu0c { unsigned char v1; unsigned char v2; unsigned char :0; };
struct Uc_Uc_BFu0i { unsigned char v1; unsigned char v2; unsigned int :0; };
struct Uc_Uc_BFu0ll { unsigned char v1; unsigned char v2; unsigned long long :0; };
struct Uc_Uc_BFu0s { unsigned char v1; unsigned char v2; unsigned short :0; };
struct Uc_Ui_BFu0c { unsigned char v1; unsigned int v2; unsigned char :0; };
struct Uc_Ui_BFu0i { unsigned char v1; unsigned int v2; unsigned int :0; };
struct Uc_Ui_BFu0ll { unsigned char v1; unsigned int v2; unsigned long long :0; };
struct Uc_Ui_BFu0s { unsigned char v1; unsigned int v2; unsigned short :0; };
struct Uc_Ul_BFu0c { unsigned char v1; unsigned long long v2; unsigned char :0; };
struct Uc_Ul_BFu0i { unsigned char v1; unsigned long long v2; unsigned int :0; };
struct Uc_Ul_BFu0ll { unsigned char v1; unsigned long long v2; unsigned long long :0; };
struct Uc_Ul_BFu0s { unsigned char v1; unsigned long long v2; unsigned short :0; };
struct Uc_Us_BFu0c { unsigned char v1; unsigned short v2; unsigned char :0; };
struct Uc_Us_BFu0i { unsigned char v1; unsigned short v2; unsigned int :0; };
struct Uc_Us_BFu0ll { unsigned char v1; unsigned short v2; unsigned long long :0; };
struct Uc_Us_BFu0s { unsigned char v1; unsigned short v2; unsigned short :0; };
struct Uc_Vp_BFu0c { unsigned char v1; void * v2; unsigned char :0; };
struct Uc_Vp_BFu0i { unsigned char v1; void * v2; unsigned int :0; };
struct Uc_Vp_BFu0ll { unsigned char v1; void * v2; unsigned long long :0; };
struct Uc_Vp_BFu0s { unsigned char v1; void * v2; unsigned short :0; };
struct Ui_BFu0c { unsigned int v1; unsigned char :0; };
struct Ui_BFu0c_BFu0c { unsigned int v1; unsigned char :0; unsigned char :0; };
struct Ui_BFu0c_BFu0i { unsigned int v1; unsigned char :0; unsigned int :0; };
struct Ui_BFu0c_BFu0ll { unsigned int v1; unsigned char :0; unsigned long long :0; };
struct Ui_BFu0c_BFu0s { unsigned int v1; unsigned char :0; unsigned short :0; };
struct Ui_BFu0c_BFu15i { unsigned int v1; unsigned char :0; unsigned int v2:15; };
struct Ui_BFu0c_BFu15ll { unsigned int v1; unsigned char :0; unsigned long long v2:15; };
struct Ui_BFu0c_BFu15s { unsigned int v1; unsigned char :0; unsigned short v2:15; };
struct Ui_BFu0c_BFu16i { unsigned int v1; unsigned char :0; unsigned int v2:16; };
struct Ui_BFu0c_BFu16ll { unsigned int v1; unsigned char :0; unsigned long long v2:16; };
struct Ui_BFu0c_BFu16s { unsigned int v1; unsigned char :0; unsigned short v2:16; };
struct Ui_BFu0c_BFu17i { unsigned int v1; unsigned char :0; unsigned int v2:17; };
struct Ui_BFu0c_BFu17ll { unsigned int v1; unsigned char :0; unsigned long long v2:17; };
struct Ui_BFu0c_BFu1c { unsigned int v1; unsigned char :0; unsigned char v2:1; };
struct Ui_BFu0c_BFu1i { unsigned int v1; unsigned char :0; unsigned int v2:1; };
struct Ui_BFu0c_BFu1ll { unsigned int v1; unsigned char :0; unsigned long long v2:1; };
struct Ui_BFu0c_BFu1s { unsigned int v1; unsigned char :0; unsigned short v2:1; };
struct Ui_BFu0c_BFu31i { unsigned int v1; unsigned char :0; unsigned int v2:31; };
struct Ui_BFu0c_BFu31ll { unsigned int v1; unsigned char :0; unsigned long long v2:31; };
struct Ui_BFu0c_BFu32i { unsigned int v1; unsigned char :0; unsigned int v2:32; };
struct Ui_BFu0c_BFu32ll { unsigned int v1; unsigned char :0; unsigned long long v2:32; };
struct Ui_BFu0c_BFu33 { unsigned int v1; unsigned char :0; unsigned long long v2:33; };
struct Ui_BFu0c_BFu7c { unsigned int v1; unsigned char :0; unsigned char v2:7; };
struct Ui_BFu0c_BFu7i { unsigned int v1; unsigned char :0; unsigned int v2:7; };
struct Ui_BFu0c_BFu7ll { unsigned int v1; unsigned char :0; unsigned long long v2:7; };
struct Ui_BFu0c_BFu7s { unsigned int v1; unsigned char :0; unsigned short v2:7; };
struct Ui_BFu0c_BFu8c { unsigned int v1; unsigned char :0; unsigned char v2:8; };
struct Ui_BFu0c_BFu8i { unsigned int v1; unsigned char :0; unsigned int v2:8; };
struct Ui_BFu0c_BFu8ll { unsigned int v1; unsigned char :0; unsigned long long v2:8; };
struct Ui_BFu0c_BFu8s { unsigned int v1; unsigned char :0; unsigned short v2:8; };
struct Ui_BFu0c_BFu9i { unsigned int v1; unsigned char :0; unsigned int v2:9; };
struct Ui_BFu0c_BFu9ll { unsigned int v1; unsigned char :0; unsigned long long v2:9; };
struct Ui_BFu0c_BFu9s { unsigned int v1; unsigned char :0; unsigned short v2:9; };
struct Ui_BFu0c_C { unsigned int v1; unsigned char :0; char v2; };
struct Ui_BFu0c_D { unsigned int v1; unsigned char :0; double v2; };
struct Ui_BFu0c_F { unsigned int v1; unsigned char :0; float v2; };
struct Ui_BFu0c_I { unsigned int v1; unsigned char :0; int v2; };
struct Ui_BFu0c_Ip { unsigned int v1; unsigned char :0; int * v2; };
struct Ui_BFu0c_L { unsigned int v1; unsigned char :0; long long v2; };
struct Ui_BFu0c_S { unsigned int v1; unsigned char :0; short v2; };
struct Ui_BFu0c_Uc { unsigned int v1; unsigned char :0; unsigned char v2; };
struct Ui_BFu0c_Ui { unsigned int v1; unsigned char :0; unsigned int v2; };
struct Ui_BFu0c_Ul { unsigned int v1; unsigned char :0; unsigned long long v2; };
struct Ui_BFu0c_Us { unsigned int v1; unsigned char :0; unsigned short v2; };
struct Ui_BFu0c_Vp { unsigned int v1; unsigned char :0; void * v2; };
struct Ui_BFu0i { unsigned int v1; unsigned int :0; };
struct Ui_BFu0i_BFu0c { unsigned int v1; unsigned int :0; unsigned char :0; };
struct Ui_BFu0i_BFu0i { unsigned int v1; unsigned int :0; unsigned int :0; };
struct Ui_BFu0i_BFu0ll { unsigned int v1; unsigned int :0; unsigned long long :0; };
struct Ui_BFu0i_BFu0s { unsigned int v1; unsigned int :0; unsigned short :0; };
struct Ui_BFu0i_BFu15i { unsigned int v1; unsigned int :0; unsigned int v2:15; };
struct Ui_BFu0i_BFu15ll { unsigned int v1; unsigned int :0; unsigned long long v2:15; };
struct Ui_BFu0i_BFu15s { unsigned int v1; unsigned int :0; unsigned short v2:15; };
struct Ui_BFu0i_BFu16i { unsigned int v1; unsigned int :0; unsigned int v2:16; };
struct Ui_BFu0i_BFu16ll { unsigned int v1; unsigned int :0; unsigned long long v2:16; };
struct Ui_BFu0i_BFu16s { unsigned int v1; unsigned int :0; unsigned short v2:16; };
struct Ui_BFu0i_BFu17i { unsigned int v1; unsigned int :0; unsigned int v2:17; };
struct Ui_BFu0i_BFu17ll { unsigned int v1; unsigned int :0; unsigned long long v2:17; };
struct Ui_BFu0i_BFu1c { unsigned int v1; unsigned int :0; unsigned char v2:1; };
struct Ui_BFu0i_BFu1i { unsigned int v1; unsigned int :0; unsigned int v2:1; };
struct Ui_BFu0i_BFu1ll { unsigned int v1; unsigned int :0; unsigned long long v2:1; };
struct Ui_BFu0i_BFu1s { unsigned int v1; unsigned int :0; unsigned short v2:1; };
struct Ui_BFu0i_BFu31i { unsigned int v1; unsigned int :0; unsigned int v2:31; };
struct Ui_BFu0i_BFu31ll { unsigned int v1; unsigned int :0; unsigned long long v2:31; };
struct Ui_BFu0i_BFu32i { unsigned int v1; unsigned int :0; unsigned int v2:32; };
struct Ui_BFu0i_BFu32ll { unsigned int v1; unsigned int :0; unsigned long long v2:32; };
struct Ui_BFu0i_BFu33 { unsigned int v1; unsigned int :0; unsigned long long v2:33; };
struct Ui_BFu0i_BFu7c { unsigned int v1; unsigned int :0; unsigned char v2:7; };
struct Ui_BFu0i_BFu7i { unsigned int v1; unsigned int :0; unsigned int v2:7; };
struct Ui_BFu0i_BFu7ll { unsigned int v1; unsigned int :0; unsigned long long v2:7; };
struct Ui_BFu0i_BFu7s { unsigned int v1; unsigned int :0; unsigned short v2:7; };
struct Ui_BFu0i_BFu8c { unsigned int v1; unsigned int :0; unsigned char v2:8; };
struct Ui_BFu0i_BFu8i { unsigned int v1; unsigned int :0; unsigned int v2:8; };
struct Ui_BFu0i_BFu8ll { unsigned int v1; unsigned int :0; unsigned long long v2:8; };
struct Ui_BFu0i_BFu8s { unsigned int v1; unsigned int :0; unsigned short v2:8; };
struct Ui_BFu0i_BFu9i { unsigned int v1; unsigned int :0; unsigned int v2:9; };
struct Ui_BFu0i_BFu9ll { unsigned int v1; unsigned int :0; unsigned long long v2:9; };
struct Ui_BFu0i_BFu9s { unsigned int v1; unsigned int :0; unsigned short v2:9; };
struct Ui_BFu0i_C { unsigned int v1; unsigned int :0; char v2; };
struct Ui_BFu0i_D { unsigned int v1; unsigned int :0; double v2; };
struct Ui_BFu0i_F { unsigned int v1; unsigned int :0; float v2; };
struct Ui_BFu0i_I { unsigned int v1; unsigned int :0; int v2; };
struct Ui_BFu0i_Ip { unsigned int v1; unsigned int :0; int * v2; };
struct Ui_BFu0i_L { unsigned int v1; unsigned int :0; long long v2; };
struct Ui_BFu0i_S { unsigned int v1; unsigned int :0; short v2; };
struct Ui_BFu0i_Uc { unsigned int v1; unsigned int :0; unsigned char v2; };
struct Ui_BFu0i_Ui { unsigned int v1; unsigned int :0; unsigned int v2; };
struct Ui_BFu0i_Ul { unsigned int v1; unsigned int :0; unsigned long long v2; };
struct Ui_BFu0i_Us { unsigned int v1; unsigned int :0; unsigned short v2; };
struct Ui_BFu0i_Vp { unsigned int v1; unsigned int :0; void * v2; };
struct Ui_BFu0ll { unsigned int v1; unsigned long long :0; };
struct Ui_BFu0ll_BFu0c { unsigned int v1; unsigned long long :0; unsigned char :0; };
struct Ui_BFu0ll_BFu0i { unsigned int v1; unsigned long long :0; unsigned int :0; };
struct Ui_BFu0ll_BFu0ll { unsigned int v1; unsigned long long :0; unsigned long long :0; };
struct Ui_BFu0ll_BFu0s { unsigned int v1; unsigned long long :0; unsigned short :0; };
struct Ui_BFu0ll_BFu15i { unsigned int v1; unsigned long long :0; unsigned int v2:15; };
struct Ui_BFu0ll_BFu15ll { unsigned int v1; unsigned long long :0; unsigned long long v2:15; };
struct Ui_BFu0ll_BFu15s { unsigned int v1; unsigned long long :0; unsigned short v2:15; };
struct Ui_BFu0ll_BFu16i { unsigned int v1; unsigned long long :0; unsigned int v2:16; };
struct Ui_BFu0ll_BFu16ll { unsigned int v1; unsigned long long :0; unsigned long long v2:16; };
struct Ui_BFu0ll_BFu16s { unsigned int v1; unsigned long long :0; unsigned short v2:16; };
struct Ui_BFu0ll_BFu17i { unsigned int v1; unsigned long long :0; unsigned int v2:17; };
struct Ui_BFu0ll_BFu17ll { unsigned int v1; unsigned long long :0; unsigned long long v2:17; };
struct Ui_BFu0ll_BFu1c { unsigned int v1; unsigned long long :0; unsigned char v2:1; };
struct Ui_BFu0ll_BFu1i { unsigned int v1; unsigned long long :0; unsigned int v2:1; };
struct Ui_BFu0ll_BFu1ll { unsigned int v1; unsigned long long :0; unsigned long long v2:1; };
struct Ui_BFu0ll_BFu1s { unsigned int v1; unsigned long long :0; unsigned short v2:1; };
struct Ui_BFu0ll_BFu31i { unsigned int v1; unsigned long long :0; unsigned int v2:31; };
struct Ui_BFu0ll_BFu31ll { unsigned int v1; unsigned long long :0; unsigned long long v2:31; };
struct Ui_BFu0ll_BFu32i { unsigned int v1; unsigned long long :0; unsigned int v2:32; };
struct Ui_BFu0ll_BFu32ll { unsigned int v1; unsigned long long :0; unsigned long long v2:32; };
struct Ui_BFu0ll_BFu33 { unsigned int v1; unsigned long long :0; unsigned long long v2:33; };
struct Ui_BFu0ll_BFu7c { unsigned int v1; unsigned long long :0; unsigned char v2:7; };
struct Ui_BFu0ll_BFu7i { unsigned int v1; unsigned long long :0; unsigned int v2:7; };
struct Ui_BFu0ll_BFu7ll { unsigned int v1; unsigned long long :0; unsigned long long v2:7; };
struct Ui_BFu0ll_BFu7s { unsigned int v1; unsigned long long :0; unsigned short v2:7; };
struct Ui_BFu0ll_BFu8c { unsigned int v1; unsigned long long :0; unsigned char v2:8; };
struct Ui_BFu0ll_BFu8i { unsigned int v1; unsigned long long :0; unsigned int v2:8; };
struct Ui_BFu0ll_BFu8ll { unsigned int v1; unsigned long long :0; unsigned long long v2:8; };
struct Ui_BFu0ll_BFu8s { unsigned int v1; unsigned long long :0; unsigned short v2:8; };
struct Ui_BFu0ll_BFu9i { unsigned int v1; unsigned long long :0; unsigned int v2:9; };
struct Ui_BFu0ll_BFu9ll { unsigned int v1; unsigned long long :0; unsigned long long v2:9; };
struct Ui_BFu0ll_BFu9s { unsigned int v1; unsigned long long :0; unsigned short v2:9; };
struct Ui_BFu0ll_C { unsigned int v1; unsigned long long :0; char v2; };
struct Ui_BFu0ll_D { unsigned int v1; unsigned long long :0; double v2; };
struct Ui_BFu0ll_F { unsigned int v1; unsigned long long :0; float v2; };
struct Ui_BFu0ll_I { unsigned int v1; unsigned long long :0; int v2; };
struct Ui_BFu0ll_Ip { unsigned int v1; unsigned long long :0; int * v2; };


static void Test_BFu9s_BFu15s_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu15s_BFu0c");
    static STRUCT_IF_C BFu9s_BFu15s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu15s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "BFu9s_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "BFu9s_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu15s_BFu0c, BFu9s_BFu15s_BFu0c)
//============================================================================



static void Test_BFu9s_BFu15s_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu15s_BFu0i");
    static STRUCT_IF_C BFu9s_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu15s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "BFu9s_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "BFu9s_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu15s_BFu0i, BFu9s_BFu15s_BFu0i)
//============================================================================



static void Test_BFu9s_BFu15s_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu15s_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu15s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "BFu9s_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "BFu9s_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu15s_BFu0ll, BFu9s_BFu15s_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu15s_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu15s_BFu0s");
    static STRUCT_IF_C BFu9s_BFu15s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu15s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "BFu9s_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "BFu9s_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu15s_BFu0s, BFu9s_BFu15s_BFu0s)
//============================================================================



static void Test_BFu9s_BFu16i_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu16i_BFu0c");
    static STRUCT_IF_C BFu9s_BFu16i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu16i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9s_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9s_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu16i_BFu0c, BFu9s_BFu16i_BFu0c)
//============================================================================



static void Test_BFu9s_BFu16i_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu16i_BFu0i");
    static STRUCT_IF_C BFu9s_BFu16i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu16i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9s_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9s_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu16i_BFu0i, BFu9s_BFu16i_BFu0i)
//============================================================================



static void Test_BFu9s_BFu16i_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu16i_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu16i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9s_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9s_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu16i_BFu0ll, BFu9s_BFu16i_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu16i_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu16i_BFu0s");
    static STRUCT_IF_C BFu9s_BFu16i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu16i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9s_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9s_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu16i_BFu0s, BFu9s_BFu16i_BFu0s)
//============================================================================



static void Test_BFu9s_BFu16ll_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu16ll_BFu0c");
    static STRUCT_IF_C BFu9s_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu16ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9s_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9s_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu16ll_BFu0c, BFu9s_BFu16ll_BFu0c)
//============================================================================



static void Test_BFu9s_BFu16ll_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu16ll_BFu0i");
    static STRUCT_IF_C BFu9s_BFu16ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu16ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9s_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9s_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu16ll_BFu0i, BFu9s_BFu16ll_BFu0i)
//============================================================================



static void Test_BFu9s_BFu16ll_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu16ll_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9s_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9s_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu16ll_BFu0ll, BFu9s_BFu16ll_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu16ll_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu16ll_BFu0s");
    static STRUCT_IF_C BFu9s_BFu16ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu16ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9s_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9s_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu16ll_BFu0s, BFu9s_BFu16ll_BFu0s)
//============================================================================



static void Test_BFu9s_BFu16s_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu16s_BFu0c");
    static STRUCT_IF_C BFu9s_BFu16s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu16s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9s_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9s_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu16s_BFu0c, BFu9s_BFu16s_BFu0c)
//============================================================================



static void Test_BFu9s_BFu16s_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu16s_BFu0i");
    static STRUCT_IF_C BFu9s_BFu16s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu16s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9s_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9s_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu16s_BFu0i, BFu9s_BFu16s_BFu0i)
//============================================================================



static void Test_BFu9s_BFu16s_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu16s_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu16s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9s_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9s_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu16s_BFu0ll, BFu9s_BFu16s_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu16s_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu16s_BFu0s");
    static STRUCT_IF_C BFu9s_BFu16s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu16s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9s_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9s_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu16s_BFu0s, BFu9s_BFu16s_BFu0s)
//============================================================================



static void Test_BFu9s_BFu17i_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu17i_BFu0c");
    static STRUCT_IF_C BFu9s_BFu17i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu17i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "BFu9s_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "BFu9s_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu17i_BFu0c, BFu9s_BFu17i_BFu0c)
//============================================================================



static void Test_BFu9s_BFu17i_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu17i_BFu0i");
    static STRUCT_IF_C BFu9s_BFu17i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu17i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "BFu9s_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "BFu9s_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu17i_BFu0i, BFu9s_BFu17i_BFu0i)
//============================================================================



static void Test_BFu9s_BFu17i_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu17i_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu17i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "BFu9s_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "BFu9s_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu17i_BFu0ll, BFu9s_BFu17i_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu17i_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu17i_BFu0s");
    static STRUCT_IF_C BFu9s_BFu17i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu17i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "BFu9s_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "BFu9s_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu17i_BFu0s, BFu9s_BFu17i_BFu0s)
//============================================================================



static void Test_BFu9s_BFu17ll_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu17ll_BFu0c");
    static STRUCT_IF_C BFu9s_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu17ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "BFu9s_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "BFu9s_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu17ll_BFu0c, BFu9s_BFu17ll_BFu0c)
//============================================================================



static void Test_BFu9s_BFu17ll_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu17ll_BFu0i");
    static STRUCT_IF_C BFu9s_BFu17ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu17ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "BFu9s_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "BFu9s_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu17ll_BFu0i, BFu9s_BFu17ll_BFu0i)
//============================================================================



static void Test_BFu9s_BFu17ll_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu17ll_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "BFu9s_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "BFu9s_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu17ll_BFu0ll, BFu9s_BFu17ll_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu17ll_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu17ll_BFu0s");
    static STRUCT_IF_C BFu9s_BFu17ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu17ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "BFu9s_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "BFu9s_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu17ll_BFu0s, BFu9s_BFu17ll_BFu0s)
//============================================================================



static void Test_BFu9s_BFu1c_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu1c_BFu0c");
    static STRUCT_IF_C BFu9s_BFu1c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1c_BFu0c, BFu9s_BFu1c_BFu0c)
//============================================================================



static void Test_BFu9s_BFu1c_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu1c_BFu0i");
    static STRUCT_IF_C BFu9s_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1c_BFu0i, BFu9s_BFu1c_BFu0i)
//============================================================================



static void Test_BFu9s_BFu1c_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu1c_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1c_BFu0ll, BFu9s_BFu1c_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu1c_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu1c_BFu0s");
    static STRUCT_IF_C BFu9s_BFu1c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1c_BFu0s, BFu9s_BFu1c_BFu0s)
//============================================================================



static void Test_BFu9s_BFu1i_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu1i_BFu0c");
    static STRUCT_IF_C BFu9s_BFu1i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1i_BFu0c, BFu9s_BFu1i_BFu0c)
//============================================================================



static void Test_BFu9s_BFu1i_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu1i_BFu0i");
    static STRUCT_IF_C BFu9s_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1i_BFu0i, BFu9s_BFu1i_BFu0i)
//============================================================================



static void Test_BFu9s_BFu1i_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu1i_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1i_BFu0ll, BFu9s_BFu1i_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu1i_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu1i_BFu0s");
    static STRUCT_IF_C BFu9s_BFu1i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1i_BFu0s, BFu9s_BFu1i_BFu0s)
//============================================================================



static void Test_BFu9s_BFu1ll_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu1ll_BFu0c");
    static STRUCT_IF_C BFu9s_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1ll_BFu0c, BFu9s_BFu1ll_BFu0c)
//============================================================================



static void Test_BFu9s_BFu1ll_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu1ll_BFu0i");
    static STRUCT_IF_C BFu9s_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1ll_BFu0i, BFu9s_BFu1ll_BFu0i)
//============================================================================



static void Test_BFu9s_BFu1ll_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu1ll_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1ll_BFu0ll, BFu9s_BFu1ll_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu1ll_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu1ll_BFu0s");
    static STRUCT_IF_C BFu9s_BFu1ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1ll_BFu0s, BFu9s_BFu1ll_BFu0s)
//============================================================================



static void Test_BFu9s_BFu1s_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu1s_BFu0c");
    static STRUCT_IF_C BFu9s_BFu1s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1s_BFu0c, BFu9s_BFu1s_BFu0c)
//============================================================================



static void Test_BFu9s_BFu1s_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu1s_BFu0i");
    static STRUCT_IF_C BFu9s_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1s_BFu0i, BFu9s_BFu1s_BFu0i)
//============================================================================



static void Test_BFu9s_BFu1s_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu1s_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1s_BFu0ll, BFu9s_BFu1s_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu1s_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu1s_BFu0s");
    static STRUCT_IF_C BFu9s_BFu1s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1s_BFu0s, BFu9s_BFu1s_BFu0s)
//============================================================================



static void Test_BFu9s_BFu31i_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu31i_BFu0c");
    static STRUCT_IF_C BFu9s_BFu31i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu9s_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu31i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "BFu9s_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "BFu9s_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu31i_BFu0c, BFu9s_BFu31i_BFu0c)
//============================================================================



static void Test_BFu9s_BFu31i_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu31i_BFu0i");
    static STRUCT_IF_C BFu9s_BFu31i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu9s_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu31i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "BFu9s_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "BFu9s_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu31i_BFu0i, BFu9s_BFu31i_BFu0i)
//============================================================================



static void Test_BFu9s_BFu31i_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu31i_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu9s_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu31i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "BFu9s_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "BFu9s_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu31i_BFu0ll, BFu9s_BFu31i_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu31i_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu31i_BFu0s");
    static STRUCT_IF_C BFu9s_BFu31i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu9s_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu31i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "BFu9s_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "BFu9s_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu31i_BFu0s, BFu9s_BFu31i_BFu0s)
//============================================================================



static void Test_BFu9s_BFu31ll_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu31ll_BFu0c");
    static STRUCT_IF_C BFu9s_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu9s_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu31ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "BFu9s_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "BFu9s_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu31ll_BFu0c, BFu9s_BFu31ll_BFu0c)
//============================================================================



static void Test_BFu9s_BFu31ll_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu31ll_BFu0i");
    static STRUCT_IF_C BFu9s_BFu31ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu9s_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu31ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "BFu9s_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "BFu9s_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu31ll_BFu0i, BFu9s_BFu31ll_BFu0i)
//============================================================================



static void Test_BFu9s_BFu31ll_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu31ll_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu9s_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "BFu9s_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "BFu9s_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu31ll_BFu0ll, BFu9s_BFu31ll_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu31ll_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu31ll_BFu0s");
    static STRUCT_IF_C BFu9s_BFu31ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu9s_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu31ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "BFu9s_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "BFu9s_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu31ll_BFu0s, BFu9s_BFu31ll_BFu0s)
//============================================================================



static void Test_BFu9s_BFu32i_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu32i_BFu0c");
    static STRUCT_IF_C BFu9s_BFu32i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu32i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "BFu9s_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "BFu9s_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu32i_BFu0c, BFu9s_BFu32i_BFu0c)
//============================================================================



static void Test_BFu9s_BFu32i_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu32i_BFu0i");
    static STRUCT_IF_C BFu9s_BFu32i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu9s_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu32i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "BFu9s_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "BFu9s_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu32i_BFu0i, BFu9s_BFu32i_BFu0i)
//============================================================================



static void Test_BFu9s_BFu32i_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu32i_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu9s_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu32i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "BFu9s_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "BFu9s_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu32i_BFu0ll, BFu9s_BFu32i_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu32i_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu32i_BFu0s");
    static STRUCT_IF_C BFu9s_BFu32i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu32i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "BFu9s_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "BFu9s_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu32i_BFu0s, BFu9s_BFu32i_BFu0s)
//============================================================================



static void Test_BFu9s_BFu32ll_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu32ll_BFu0c");
    static STRUCT_IF_C BFu9s_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu32ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "BFu9s_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "BFu9s_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu32ll_BFu0c, BFu9s_BFu32ll_BFu0c)
//============================================================================



static void Test_BFu9s_BFu32ll_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu32ll_BFu0i");
    static STRUCT_IF_C BFu9s_BFu32ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu9s_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu32ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "BFu9s_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "BFu9s_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu32ll_BFu0i, BFu9s_BFu32ll_BFu0i)
//============================================================================



static void Test_BFu9s_BFu32ll_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu32ll_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu9s_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "BFu9s_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "BFu9s_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu32ll_BFu0ll, BFu9s_BFu32ll_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu32ll_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu32ll_BFu0s");
    static STRUCT_IF_C BFu9s_BFu32ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu32ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "BFu9s_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "BFu9s_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu32ll_BFu0s, BFu9s_BFu32ll_BFu0s)
//============================================================================



static void Test_BFu9s_BFu33_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu33_BFu0c");
    static STRUCT_IF_C BFu9s_BFu33_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu33_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 33, 1, "BFu9s_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 33, hide_ull(1LL<<32), "BFu9s_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu33_BFu0c, BFu9s_BFu33_BFu0c)
//============================================================================



static void Test_BFu9s_BFu33_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu33_BFu0i");
    static STRUCT_IF_C BFu9s_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu9s_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu33_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 33, 1, "BFu9s_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 33, hide_ull(1LL<<32), "BFu9s_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu33_BFu0i, BFu9s_BFu33_BFu0i)
//============================================================================



static void Test_BFu9s_BFu33_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu33_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu9s_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu33_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 33, 1, "BFu9s_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 33, hide_ull(1LL<<32), "BFu9s_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu33_BFu0ll, BFu9s_BFu33_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu33_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu33_BFu0s");
    static STRUCT_IF_C BFu9s_BFu33_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu33_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 33, 1, "BFu9s_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 33, hide_ull(1LL<<32), "BFu9s_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu33_BFu0s, BFu9s_BFu33_BFu0s)
//============================================================================



static void Test_BFu9s_BFu7c_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu7c_BFu0c");
    static STRUCT_IF_C BFu9s_BFu7c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7c_BFu0c, BFu9s_BFu7c_BFu0c)
//============================================================================



static void Test_BFu9s_BFu7c_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu7c_BFu0i");
    static STRUCT_IF_C BFu9s_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7c_BFu0i, BFu9s_BFu7c_BFu0i)
//============================================================================



static void Test_BFu9s_BFu7c_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu7c_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7c_BFu0ll, BFu9s_BFu7c_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu7c_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu7c_BFu0s");
    static STRUCT_IF_C BFu9s_BFu7c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7c_BFu0s, BFu9s_BFu7c_BFu0s)
//============================================================================



static void Test_BFu9s_BFu7i_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu7i_BFu0c");
    static STRUCT_IF_C BFu9s_BFu7i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7i_BFu0c, BFu9s_BFu7i_BFu0c)
//============================================================================



static void Test_BFu9s_BFu7i_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu7i_BFu0i");
    static STRUCT_IF_C BFu9s_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7i_BFu0i, BFu9s_BFu7i_BFu0i)
//============================================================================



static void Test_BFu9s_BFu7i_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu7i_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7i_BFu0ll, BFu9s_BFu7i_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu7i_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu7i_BFu0s");
    static STRUCT_IF_C BFu9s_BFu7i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7i_BFu0s, BFu9s_BFu7i_BFu0s)
//============================================================================



static void Test_BFu9s_BFu7ll_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu7ll_BFu0c");
    static STRUCT_IF_C BFu9s_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7ll_BFu0c, BFu9s_BFu7ll_BFu0c)
//============================================================================



static void Test_BFu9s_BFu7ll_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu7ll_BFu0i");
    static STRUCT_IF_C BFu9s_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7ll_BFu0i, BFu9s_BFu7ll_BFu0i)
//============================================================================



static void Test_BFu9s_BFu7ll_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu7ll_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7ll_BFu0ll, BFu9s_BFu7ll_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu7ll_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu7ll_BFu0s");
    static STRUCT_IF_C BFu9s_BFu7ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7ll_BFu0s, BFu9s_BFu7ll_BFu0s)
//============================================================================



static void Test_BFu9s_BFu7s_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu7s_BFu0c");
    static STRUCT_IF_C BFu9s_BFu7s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7s_BFu0c, BFu9s_BFu7s_BFu0c)
//============================================================================



static void Test_BFu9s_BFu7s_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu7s_BFu0i");
    static STRUCT_IF_C BFu9s_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7s_BFu0i, BFu9s_BFu7s_BFu0i)
//============================================================================



static void Test_BFu9s_BFu7s_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu7s_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7s_BFu0ll, BFu9s_BFu7s_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu7s_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu7s_BFu0s");
    static STRUCT_IF_C BFu9s_BFu7s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7s_BFu0s, BFu9s_BFu7s_BFu0s)
//============================================================================



static void Test_BFu9s_BFu8c_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu8c_BFu0c");
    static STRUCT_IF_C BFu9s_BFu8c_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8c_BFu0c, BFu9s_BFu8c_BFu0c)
//============================================================================



static void Test_BFu9s_BFu8c_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu8c_BFu0i");
    static STRUCT_IF_C BFu9s_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8c_BFu0i, BFu9s_BFu8c_BFu0i)
//============================================================================



static void Test_BFu9s_BFu8c_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu8c_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8c_BFu0ll, BFu9s_BFu8c_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu8c_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu8c_BFu0s");
    static STRUCT_IF_C BFu9s_BFu8c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8c_BFu0s, BFu9s_BFu8c_BFu0s)
//============================================================================



static void Test_BFu9s_BFu8i_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu8i_BFu0c");
    static STRUCT_IF_C BFu9s_BFu8i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8i_BFu0c, BFu9s_BFu8i_BFu0c)
//============================================================================



static void Test_BFu9s_BFu8i_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu8i_BFu0i");
    static STRUCT_IF_C BFu9s_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8i_BFu0i, BFu9s_BFu8i_BFu0i)
//============================================================================



static void Test_BFu9s_BFu8i_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu8i_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8i_BFu0ll, BFu9s_BFu8i_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu8i_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu8i_BFu0s");
    static STRUCT_IF_C BFu9s_BFu8i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8i_BFu0s, BFu9s_BFu8i_BFu0s)
//============================================================================



static void Test_BFu9s_BFu8ll_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu8ll_BFu0c");
    static STRUCT_IF_C BFu9s_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8ll_BFu0c, BFu9s_BFu8ll_BFu0c)
//============================================================================



static void Test_BFu9s_BFu8ll_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu8ll_BFu0i");
    static STRUCT_IF_C BFu9s_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8ll_BFu0i, BFu9s_BFu8ll_BFu0i)
//============================================================================



static void Test_BFu9s_BFu8ll_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu8ll_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8ll_BFu0ll, BFu9s_BFu8ll_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu8ll_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu8ll_BFu0s");
    static STRUCT_IF_C BFu9s_BFu8ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8ll_BFu0s, BFu9s_BFu8ll_BFu0s)
//============================================================================



static void Test_BFu9s_BFu8s_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu8s_BFu0c");
    static STRUCT_IF_C BFu9s_BFu8s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8s_BFu0c, BFu9s_BFu8s_BFu0c)
//============================================================================



static void Test_BFu9s_BFu8s_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu8s_BFu0i");
    static STRUCT_IF_C BFu9s_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8s_BFu0i, BFu9s_BFu8s_BFu0i)
//============================================================================



static void Test_BFu9s_BFu8s_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu8s_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8s_BFu0ll, BFu9s_BFu8s_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu8s_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu8s_BFu0s");
    static STRUCT_IF_C BFu9s_BFu8s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8s_BFu0s, BFu9s_BFu8s_BFu0s)
//============================================================================



static void Test_BFu9s_BFu9i_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu9i_BFu0c");
    static STRUCT_IF_C BFu9s_BFu9i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu9i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9s_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9s_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu9i_BFu0c, BFu9s_BFu9i_BFu0c)
//============================================================================



static void Test_BFu9s_BFu9i_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu9i_BFu0i");
    static STRUCT_IF_C BFu9s_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu9i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9s_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9s_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu9i_BFu0i, BFu9s_BFu9i_BFu0i)
//============================================================================



static void Test_BFu9s_BFu9i_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu9i_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu9i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9s_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9s_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu9i_BFu0ll, BFu9s_BFu9i_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu9i_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu9i_BFu0s");
    static STRUCT_IF_C BFu9s_BFu9i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu9i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9s_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9s_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu9i_BFu0s, BFu9s_BFu9i_BFu0s)
//============================================================================



static void Test_BFu9s_BFu9ll_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu9ll_BFu0c");
    static STRUCT_IF_C BFu9s_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu9ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9s_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9s_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu9ll_BFu0c, BFu9s_BFu9ll_BFu0c)
//============================================================================



static void Test_BFu9s_BFu9ll_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu9ll_BFu0i");
    static STRUCT_IF_C BFu9s_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu9ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9s_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9s_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu9ll_BFu0i, BFu9s_BFu9ll_BFu0i)
//============================================================================



static void Test_BFu9s_BFu9ll_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu9ll_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9s_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9s_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu9ll_BFu0ll, BFu9s_BFu9ll_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu9ll_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu9ll_BFu0s");
    static STRUCT_IF_C BFu9s_BFu9ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu9ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9s_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9s_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu9ll_BFu0s, BFu9s_BFu9ll_BFu0s)
//============================================================================



static void Test_BFu9s_BFu9s_BFu0c()
{
  {
    init_simple_test("BFu9s_BFu9s_BFu0c");
    static STRUCT_IF_C BFu9s_BFu9s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu9s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9s_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9s_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu9s_BFu0c, BFu9s_BFu9s_BFu0c)
//============================================================================



static void Test_BFu9s_BFu9s_BFu0i()
{
  {
    init_simple_test("BFu9s_BFu9s_BFu0i");
    static STRUCT_IF_C BFu9s_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu9s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9s_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9s_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu9s_BFu0i, BFu9s_BFu9s_BFu0i)
//============================================================================



static void Test_BFu9s_BFu9s_BFu0ll()
{
  {
    init_simple_test("BFu9s_BFu9s_BFu0ll");
    static STRUCT_IF_C BFu9s_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu9s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9s_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9s_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu9s_BFu0ll, BFu9s_BFu9s_BFu0ll)
//============================================================================



static void Test_BFu9s_BFu9s_BFu0s()
{
  {
    init_simple_test("BFu9s_BFu9s_BFu0s");
    static STRUCT_IF_C BFu9s_BFu9s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu9s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9s_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9s_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu9s_BFu0s, BFu9s_BFu9s_BFu0s)
//============================================================================



static void Test_BFu9s_C_BFu0c()
{
  {
    init_simple_test("BFu9s_C_BFu0c");
    static STRUCT_IF_C BFu9s_C_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_C_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_C_BFu0c");
    check_field_offset(lv, v2, 2, "BFu9s_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_C_BFu0c, BFu9s_C_BFu0c)
//============================================================================



static void Test_BFu9s_C_BFu0i()
{
  {
    init_simple_test("BFu9s_C_BFu0i");
    static STRUCT_IF_C BFu9s_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_C_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_C_BFu0i");
    check_field_offset(lv, v2, 2, "BFu9s_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_C_BFu0i, BFu9s_C_BFu0i)
//============================================================================



static void Test_BFu9s_C_BFu0ll()
{
  {
    init_simple_test("BFu9s_C_BFu0ll");
    static STRUCT_IF_C BFu9s_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_C_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_C_BFu0ll");
    check_field_offset(lv, v2, 2, "BFu9s_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_C_BFu0ll, BFu9s_C_BFu0ll)
//============================================================================



static void Test_BFu9s_C_BFu0s()
{
  {
    init_simple_test("BFu9s_C_BFu0s");
    static STRUCT_IF_C BFu9s_C_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_C_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_C_BFu0s");
    check_field_offset(lv, v2, 2, "BFu9s_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_C_BFu0s, BFu9s_C_BFu0s)
//============================================================================



static void Test_BFu9s_D_BFu0c()
{
  {
    init_simple_test("BFu9s_D_BFu0c");
    static STRUCT_IF_C BFu9s_D_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(BFu9s_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_D_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_D_BFu0c");
    check_field_offset(lv, v2, 2, "BFu9s_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_D_BFu0c, BFu9s_D_BFu0c)
//============================================================================



static void Test_BFu9s_D_BFu0i()
{
  {
    init_simple_test("BFu9s_D_BFu0i");
    static STRUCT_IF_C BFu9s_D_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu9s_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_D_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_D_BFu0i");
    check_field_offset(lv, v2, 2, "BFu9s_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_D_BFu0i, BFu9s_D_BFu0i)
//============================================================================



static void Test_BFu9s_D_BFu0ll()
{
  {
    init_simple_test("BFu9s_D_BFu0ll");
    static STRUCT_IF_C BFu9s_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu9s_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_D_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_D_BFu0ll");
    check_field_offset(lv, v2, 2, "BFu9s_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_D_BFu0ll, BFu9s_D_BFu0ll)
//============================================================================



static void Test_BFu9s_D_BFu0s()
{
  {
    init_simple_test("BFu9s_D_BFu0s");
    static STRUCT_IF_C BFu9s_D_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(BFu9s_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_D_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_D_BFu0s");
    check_field_offset(lv, v2, 2, "BFu9s_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_D_BFu0s, BFu9s_D_BFu0s)
//============================================================================



static void Test_BFu9s_F_BFu0c()
{
  {
    init_simple_test("BFu9s_F_BFu0c");
    static STRUCT_IF_C BFu9s_F_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_F_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_F_BFu0c");
    check_field_offset(lv, v2, 2, "BFu9s_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_F_BFu0c, BFu9s_F_BFu0c)
//============================================================================



static void Test_BFu9s_F_BFu0i()
{
  {
    init_simple_test("BFu9s_F_BFu0i");
    static STRUCT_IF_C BFu9s_F_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu9s_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_F_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_F_BFu0i");
    check_field_offset(lv, v2, 2, "BFu9s_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_F_BFu0i, BFu9s_F_BFu0i)
//============================================================================



static void Test_BFu9s_F_BFu0ll()
{
  {
    init_simple_test("BFu9s_F_BFu0ll");
    static STRUCT_IF_C BFu9s_F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu9s_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_F_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_F_BFu0ll");
    check_field_offset(lv, v2, 2, "BFu9s_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_F_BFu0ll, BFu9s_F_BFu0ll)
//============================================================================



static void Test_BFu9s_F_BFu0s()
{
  {
    init_simple_test("BFu9s_F_BFu0s");
    static STRUCT_IF_C BFu9s_F_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_F_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_F_BFu0s");
    check_field_offset(lv, v2, 2, "BFu9s_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_F_BFu0s, BFu9s_F_BFu0s)
//============================================================================



static void Test_BFu9s_I_BFu0c()
{
  {
    init_simple_test("BFu9s_I_BFu0c");
    static STRUCT_IF_C BFu9s_I_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_I_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_I_BFu0c");
    check_field_offset(lv, v2, 2, "BFu9s_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_I_BFu0c, BFu9s_I_BFu0c)
//============================================================================



static void Test_BFu9s_I_BFu0i()
{
  {
    init_simple_test("BFu9s_I_BFu0i");
    static STRUCT_IF_C BFu9s_I_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu9s_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_I_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_I_BFu0i");
    check_field_offset(lv, v2, 2, "BFu9s_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_I_BFu0i, BFu9s_I_BFu0i)
//============================================================================



static void Test_BFu9s_I_BFu0ll()
{
  {
    init_simple_test("BFu9s_I_BFu0ll");
    static STRUCT_IF_C BFu9s_I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu9s_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_I_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_I_BFu0ll");
    check_field_offset(lv, v2, 2, "BFu9s_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_I_BFu0ll, BFu9s_I_BFu0ll)
//============================================================================



static void Test_BFu9s_I_BFu0s()
{
  {
    init_simple_test("BFu9s_I_BFu0s");
    static STRUCT_IF_C BFu9s_I_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_I_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_I_BFu0s");
    check_field_offset(lv, v2, 2, "BFu9s_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_I_BFu0s, BFu9s_I_BFu0s)
//============================================================================



static void Test_BFu9s_Ip_BFu0c()
{
  {
    init_simple_test("BFu9s_Ip_BFu0c");
    static STRUCT_IF_C BFu9s_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu9s_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Ip_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Ip_BFu0c");
    check_field_offset(lv, v2, 2, "BFu9s_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Ip_BFu0c, BFu9s_Ip_BFu0c)
//============================================================================



static void Test_BFu9s_Ip_BFu0i()
{
  {
    init_simple_test("BFu9s_Ip_BFu0i");
    static STRUCT_IF_C BFu9s_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu9s_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Ip_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Ip_BFu0i");
    check_field_offset(lv, v2, 2, "BFu9s_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Ip_BFu0i, BFu9s_Ip_BFu0i)
//============================================================================



static void Test_BFu9s_Ip_BFu0ll()
{
  {
    init_simple_test("BFu9s_Ip_BFu0ll");
    static STRUCT_IF_C BFu9s_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu9s_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Ip_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Ip_BFu0ll");
    check_field_offset(lv, v2, 2, "BFu9s_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Ip_BFu0ll, BFu9s_Ip_BFu0ll)
//============================================================================



static void Test_BFu9s_Ip_BFu0s()
{
  {
    init_simple_test("BFu9s_Ip_BFu0s");
    static STRUCT_IF_C BFu9s_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu9s_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Ip_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Ip_BFu0s");
    check_field_offset(lv, v2, 2, "BFu9s_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Ip_BFu0s, BFu9s_Ip_BFu0s)
//============================================================================



static void Test_BFu9s_L_BFu0c()
{
  {
    init_simple_test("BFu9s_L_BFu0c");
    static STRUCT_IF_C BFu9s_L_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(BFu9s_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_L_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_L_BFu0c");
    check_field_offset(lv, v2, 2, "BFu9s_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_L_BFu0c, BFu9s_L_BFu0c)
//============================================================================



static void Test_BFu9s_L_BFu0i()
{
  {
    init_simple_test("BFu9s_L_BFu0i");
    static STRUCT_IF_C BFu9s_L_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu9s_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_L_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_L_BFu0i");
    check_field_offset(lv, v2, 2, "BFu9s_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_L_BFu0i, BFu9s_L_BFu0i)
//============================================================================



static void Test_BFu9s_L_BFu0ll()
{
  {
    init_simple_test("BFu9s_L_BFu0ll");
    static STRUCT_IF_C BFu9s_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu9s_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_L_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_L_BFu0ll");
    check_field_offset(lv, v2, 2, "BFu9s_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_L_BFu0ll, BFu9s_L_BFu0ll)
//============================================================================



static void Test_BFu9s_L_BFu0s()
{
  {
    init_simple_test("BFu9s_L_BFu0s");
    static STRUCT_IF_C BFu9s_L_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(BFu9s_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_L_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_L_BFu0s");
    check_field_offset(lv, v2, 2, "BFu9s_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_L_BFu0s, BFu9s_L_BFu0s)
//============================================================================



static void Test_BFu9s_S_BFu0c()
{
  {
    init_simple_test("BFu9s_S_BFu0c");
    static STRUCT_IF_C BFu9s_S_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_S_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_S_BFu0c");
    check_field_offset(lv, v2, 2, "BFu9s_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_S_BFu0c, BFu9s_S_BFu0c)
//============================================================================



static void Test_BFu9s_S_BFu0i()
{
  {
    init_simple_test("BFu9s_S_BFu0i");
    static STRUCT_IF_C BFu9s_S_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_S_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_S_BFu0i");
    check_field_offset(lv, v2, 2, "BFu9s_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_S_BFu0i, BFu9s_S_BFu0i)
//============================================================================



static void Test_BFu9s_S_BFu0ll()
{
  {
    init_simple_test("BFu9s_S_BFu0ll");
    static STRUCT_IF_C BFu9s_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_S_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_S_BFu0ll");
    check_field_offset(lv, v2, 2, "BFu9s_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_S_BFu0ll, BFu9s_S_BFu0ll)
//============================================================================



static void Test_BFu9s_S_BFu0s()
{
  {
    init_simple_test("BFu9s_S_BFu0s");
    static STRUCT_IF_C BFu9s_S_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_S_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_S_BFu0s");
    check_field_offset(lv, v2, 2, "BFu9s_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_S_BFu0s, BFu9s_S_BFu0s)
//============================================================================



static void Test_BFu9s_Uc_BFu0c()
{
  {
    init_simple_test("BFu9s_Uc_BFu0c");
    static STRUCT_IF_C BFu9s_Uc_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Uc_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Uc_BFu0c");
    check_field_offset(lv, v2, 2, "BFu9s_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Uc_BFu0c, BFu9s_Uc_BFu0c)
//============================================================================



static void Test_BFu9s_Uc_BFu0i()
{
  {
    init_simple_test("BFu9s_Uc_BFu0i");
    static STRUCT_IF_C BFu9s_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Uc_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Uc_BFu0i");
    check_field_offset(lv, v2, 2, "BFu9s_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Uc_BFu0i, BFu9s_Uc_BFu0i)
//============================================================================



static void Test_BFu9s_Uc_BFu0ll()
{
  {
    init_simple_test("BFu9s_Uc_BFu0ll");
    static STRUCT_IF_C BFu9s_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Uc_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Uc_BFu0ll");
    check_field_offset(lv, v2, 2, "BFu9s_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Uc_BFu0ll, BFu9s_Uc_BFu0ll)
//============================================================================



static void Test_BFu9s_Uc_BFu0s()
{
  {
    init_simple_test("BFu9s_Uc_BFu0s");
    static STRUCT_IF_C BFu9s_Uc_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu9s_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Uc_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Uc_BFu0s");
    check_field_offset(lv, v2, 2, "BFu9s_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Uc_BFu0s, BFu9s_Uc_BFu0s)
//============================================================================



static void Test_BFu9s_Ui_BFu0c()
{
  {
    init_simple_test("BFu9s_Ui_BFu0c");
    static STRUCT_IF_C BFu9s_Ui_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Ui_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Ui_BFu0c");
    check_field_offset(lv, v2, 2, "BFu9s_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Ui_BFu0c, BFu9s_Ui_BFu0c)
//============================================================================



static void Test_BFu9s_Ui_BFu0i()
{
  {
    init_simple_test("BFu9s_Ui_BFu0i");
    static STRUCT_IF_C BFu9s_Ui_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu9s_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Ui_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Ui_BFu0i");
    check_field_offset(lv, v2, 2, "BFu9s_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Ui_BFu0i, BFu9s_Ui_BFu0i)
//============================================================================



static void Test_BFu9s_Ui_BFu0ll()
{
  {
    init_simple_test("BFu9s_Ui_BFu0ll");
    static STRUCT_IF_C BFu9s_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu9s_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Ui_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Ui_BFu0ll");
    check_field_offset(lv, v2, 2, "BFu9s_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Ui_BFu0ll, BFu9s_Ui_BFu0ll)
//============================================================================



static void Test_BFu9s_Ui_BFu0s()
{
  {
    init_simple_test("BFu9s_Ui_BFu0s");
    static STRUCT_IF_C BFu9s_Ui_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Ui_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Ui_BFu0s");
    check_field_offset(lv, v2, 2, "BFu9s_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Ui_BFu0s, BFu9s_Ui_BFu0s)
//============================================================================



static void Test_BFu9s_Ul_BFu0c()
{
  {
    init_simple_test("BFu9s_Ul_BFu0c");
    static STRUCT_IF_C BFu9s_Ul_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(BFu9s_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Ul_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Ul_BFu0c");
    check_field_offset(lv, v2, 2, "BFu9s_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Ul_BFu0c, BFu9s_Ul_BFu0c)
//============================================================================



static void Test_BFu9s_Ul_BFu0i()
{
  {
    init_simple_test("BFu9s_Ul_BFu0i");
    static STRUCT_IF_C BFu9s_Ul_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu9s_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Ul_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Ul_BFu0i");
    check_field_offset(lv, v2, 2, "BFu9s_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Ul_BFu0i, BFu9s_Ul_BFu0i)
//============================================================================



static void Test_BFu9s_Ul_BFu0ll()
{
  {
    init_simple_test("BFu9s_Ul_BFu0ll");
    static STRUCT_IF_C BFu9s_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu9s_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Ul_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Ul_BFu0ll");
    check_field_offset(lv, v2, 2, "BFu9s_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Ul_BFu0ll, BFu9s_Ul_BFu0ll)
//============================================================================



static void Test_BFu9s_Ul_BFu0s()
{
  {
    init_simple_test("BFu9s_Ul_BFu0s");
    static STRUCT_IF_C BFu9s_Ul_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(BFu9s_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Ul_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Ul_BFu0s");
    check_field_offset(lv, v2, 2, "BFu9s_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Ul_BFu0s, BFu9s_Ul_BFu0s)
//============================================================================



static void Test_BFu9s_Us_BFu0c()
{
  {
    init_simple_test("BFu9s_Us_BFu0c");
    static STRUCT_IF_C BFu9s_Us_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Us_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Us_BFu0c");
    check_field_offset(lv, v2, 2, "BFu9s_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Us_BFu0c, BFu9s_Us_BFu0c)
//============================================================================



static void Test_BFu9s_Us_BFu0i()
{
  {
    init_simple_test("BFu9s_Us_BFu0i");
    static STRUCT_IF_C BFu9s_Us_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Us_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Us_BFu0i");
    check_field_offset(lv, v2, 2, "BFu9s_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Us_BFu0i, BFu9s_Us_BFu0i)
//============================================================================



static void Test_BFu9s_Us_BFu0ll()
{
  {
    init_simple_test("BFu9s_Us_BFu0ll");
    static STRUCT_IF_C BFu9s_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu9s_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Us_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Us_BFu0ll");
    check_field_offset(lv, v2, 2, "BFu9s_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Us_BFu0ll, BFu9s_Us_BFu0ll)
//============================================================================



static void Test_BFu9s_Us_BFu0s()
{
  {
    init_simple_test("BFu9s_Us_BFu0s");
    static STRUCT_IF_C BFu9s_Us_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Us_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Us_BFu0s");
    check_field_offset(lv, v2, 2, "BFu9s_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Us_BFu0s, BFu9s_Us_BFu0s)
//============================================================================



static void Test_BFu9s_Vp_BFu0c()
{
  {
    init_simple_test("BFu9s_Vp_BFu0c");
    static STRUCT_IF_C BFu9s_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu9s_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Vp_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Vp_BFu0c");
    check_field_offset(lv, v2, 2, "BFu9s_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Vp_BFu0c, BFu9s_Vp_BFu0c)
//============================================================================



static void Test_BFu9s_Vp_BFu0i()
{
  {
    init_simple_test("BFu9s_Vp_BFu0i");
    static STRUCT_IF_C BFu9s_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu9s_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Vp_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Vp_BFu0i");
    check_field_offset(lv, v2, 2, "BFu9s_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Vp_BFu0i, BFu9s_Vp_BFu0i)
//============================================================================



static void Test_BFu9s_Vp_BFu0ll()
{
  {
    init_simple_test("BFu9s_Vp_BFu0ll");
    static STRUCT_IF_C BFu9s_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu9s_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Vp_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Vp_BFu0ll");
    check_field_offset(lv, v2, 2, "BFu9s_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Vp_BFu0ll, BFu9s_Vp_BFu0ll)
//============================================================================



static void Test_BFu9s_Vp_BFu0s()
{
  {
    init_simple_test("BFu9s_Vp_BFu0s");
    static STRUCT_IF_C BFu9s_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu9s_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu9s_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Vp_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Vp_BFu0s");
    check_field_offset(lv, v2, 2, "BFu9s_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Vp_BFu0s, BFu9s_Vp_BFu0s)
//============================================================================



static void Test_C_BFu0c()
{
  {
    init_simple_test("C_BFu0c");
    static STRUCT_IF_C C_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c, C_BFu0c)
//============================================================================



static void Test_C_BFu0c_BFu0c()
{
  {
    init_simple_test("C_BFu0c_BFu0c");
    static STRUCT_IF_C C_BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(C_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu0c, C_BFu0c_BFu0c)
//============================================================================



static void Test_C_BFu0c_BFu0i()
{
  {
    init_simple_test("C_BFu0c_BFu0i");
    static STRUCT_IF_C C_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0c_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu0i, C_BFu0c_BFu0i)
//============================================================================



static void Test_C_BFu0c_BFu0ll()
{
  {
    init_simple_test("C_BFu0c_BFu0ll");
    static STRUCT_IF_C C_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0c_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu0ll, C_BFu0c_BFu0ll)
//============================================================================



static void Test_C_BFu0c_BFu0s()
{
  {
    init_simple_test("C_BFu0c_BFu0s");
    static STRUCT_IF_C C_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(C_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0c_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu0s, C_BFu0c_BFu0s)
//============================================================================



static void Test_C_BFu0c_BFu15i()
{
  {
    init_simple_test("C_BFu0c_BFu15i");
    static STRUCT_IF_C C_BFu0c_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu15i)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu15i, C_BFu0c_BFu15i)
//============================================================================



static void Test_C_BFu0c_BFu15ll()
{
  {
    init_simple_test("C_BFu0c_BFu15ll");
    static STRUCT_IF_C C_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu15ll)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu15ll, C_BFu0c_BFu15ll)
//============================================================================



static void Test_C_BFu0c_BFu15s()
{
  {
    init_simple_test("C_BFu0c_BFu15s");
    static STRUCT_IF_C C_BFu0c_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu15s)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu15s, C_BFu0c_BFu15s)
//============================================================================



static void Test_C_BFu0c_BFu16i()
{
  {
    init_simple_test("C_BFu0c_BFu16i");
    static STRUCT_IF_C C_BFu0c_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu16i)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu16i, C_BFu0c_BFu16i)
//============================================================================



static void Test_C_BFu0c_BFu16ll()
{
  {
    init_simple_test("C_BFu0c_BFu16ll");
    static STRUCT_IF_C C_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu16ll)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu16ll, C_BFu0c_BFu16ll)
//============================================================================



static void Test_C_BFu0c_BFu16s()
{
  {
    init_simple_test("C_BFu0c_BFu16s");
    static STRUCT_IF_C C_BFu0c_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu16s)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu16s, C_BFu0c_BFu16s)
//============================================================================



static void Test_C_BFu0c_BFu17i()
{
  {
    init_simple_test("C_BFu0c_BFu17i");
    static STRUCT_IF_C C_BFu0c_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(C_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu17i)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "C_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "C_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu17i, C_BFu0c_BFu17i)
//============================================================================



static void Test_C_BFu0c_BFu17ll()
{
  {
    init_simple_test("C_BFu0c_BFu17ll");
    static STRUCT_IF_C C_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(C_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu17ll)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "C_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "C_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu17ll, C_BFu0c_BFu17ll)
//============================================================================



static void Test_C_BFu0c_BFu1c()
{
  {
    init_simple_test("C_BFu0c_BFu1c");
    static STRUCT_IF_C C_BFu0c_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu1c)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu1c, C_BFu0c_BFu1c)
//============================================================================



static void Test_C_BFu0c_BFu1i()
{
  {
    init_simple_test("C_BFu0c_BFu1i");
    static STRUCT_IF_C C_BFu0c_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu1i)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu1i, C_BFu0c_BFu1i)
//============================================================================



static void Test_C_BFu0c_BFu1ll()
{
  {
    init_simple_test("C_BFu0c_BFu1ll");
    static STRUCT_IF_C C_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu1ll)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu1ll, C_BFu0c_BFu1ll)
//============================================================================



static void Test_C_BFu0c_BFu1s()
{
  {
    init_simple_test("C_BFu0c_BFu1s");
    static STRUCT_IF_C C_BFu0c_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu1s)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu1s, C_BFu0c_BFu1s)
//============================================================================



static void Test_C_BFu0c_BFu31i()
{
  {
    init_simple_test("C_BFu0c_BFu31i");
    static STRUCT_IF_C C_BFu0c_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(C_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu31i)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "C_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "C_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu31i, C_BFu0c_BFu31i)
//============================================================================



static void Test_C_BFu0c_BFu31ll()
{
  {
    init_simple_test("C_BFu0c_BFu31ll");
    static STRUCT_IF_C C_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(C_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu31ll)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "C_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "C_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu31ll, C_BFu0c_BFu31ll)
//============================================================================



static void Test_C_BFu0c_BFu32i()
{
  {
    init_simple_test("C_BFu0c_BFu32i");
    static STRUCT_IF_C C_BFu0c_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(C_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu32i)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "C_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "C_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu32i, C_BFu0c_BFu32i)
//============================================================================



static void Test_C_BFu0c_BFu32ll()
{
  {
    init_simple_test("C_BFu0c_BFu32ll");
    static STRUCT_IF_C C_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(C_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu32ll)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "C_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "C_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu32ll, C_BFu0c_BFu32ll)
//============================================================================



static void Test_C_BFu0c_BFu33()
{
  {
    init_simple_test("C_BFu0c_BFu33");
    static STRUCT_IF_C C_BFu0c_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(C_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu33)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "C_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "C_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu33, C_BFu0c_BFu33)
//============================================================================



static void Test_C_BFu0c_BFu7c()
{
  {
    init_simple_test("C_BFu0c_BFu7c");
    static STRUCT_IF_C C_BFu0c_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu7c)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu7c, C_BFu0c_BFu7c)
//============================================================================



static void Test_C_BFu0c_BFu7i()
{
  {
    init_simple_test("C_BFu0c_BFu7i");
    static STRUCT_IF_C C_BFu0c_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu7i)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu7i, C_BFu0c_BFu7i)
//============================================================================



static void Test_C_BFu0c_BFu7ll()
{
  {
    init_simple_test("C_BFu0c_BFu7ll");
    static STRUCT_IF_C C_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu7ll)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu7ll, C_BFu0c_BFu7ll)
//============================================================================



static void Test_C_BFu0c_BFu7s()
{
  {
    init_simple_test("C_BFu0c_BFu7s");
    static STRUCT_IF_C C_BFu0c_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu7s)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu7s, C_BFu0c_BFu7s)
//============================================================================



static void Test_C_BFu0c_BFu8c()
{
  {
    init_simple_test("C_BFu0c_BFu8c");
    static STRUCT_IF_C C_BFu0c_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu8c)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu8c, C_BFu0c_BFu8c)
//============================================================================



static void Test_C_BFu0c_BFu8i()
{
  {
    init_simple_test("C_BFu0c_BFu8i");
    static STRUCT_IF_C C_BFu0c_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu8i)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu8i, C_BFu0c_BFu8i)
//============================================================================



static void Test_C_BFu0c_BFu8ll()
{
  {
    init_simple_test("C_BFu0c_BFu8ll");
    static STRUCT_IF_C C_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu8ll)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu8ll, C_BFu0c_BFu8ll)
//============================================================================



static void Test_C_BFu0c_BFu8s()
{
  {
    init_simple_test("C_BFu0c_BFu8s");
    static STRUCT_IF_C C_BFu0c_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu8s)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu8s, C_BFu0c_BFu8s)
//============================================================================



static void Test_C_BFu0c_BFu9i()
{
  {
    init_simple_test("C_BFu0c_BFu9i");
    static STRUCT_IF_C C_BFu0c_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu9i)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu9i, C_BFu0c_BFu9i)
//============================================================================



static void Test_C_BFu0c_BFu9ll()
{
  {
    init_simple_test("C_BFu0c_BFu9ll");
    static STRUCT_IF_C C_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu9ll)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu9ll, C_BFu0c_BFu9ll)
//============================================================================



static void Test_C_BFu0c_BFu9s()
{
  {
    init_simple_test("C_BFu0c_BFu9s");
    static STRUCT_IF_C C_BFu0c_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_BFu9s)");
    check_field_offset(lv, v1, 0, "C_BFu0c_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_BFu9s, C_BFu0c_BFu9s)
//============================================================================



static void Test_C_BFu0c_C()
{
  {
    init_simple_test("C_BFu0c_C");
    static STRUCT_IF_C C_BFu0c_C lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_C)");
    check_field_offset(lv, v1, 0, "C_BFu0c_C.v1");
    check_field_offset(lv, v2, 1, "C_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_C, C_BFu0c_C)
//============================================================================



static void Test_C_BFu0c_D()
{
  {
    init_simple_test("C_BFu0c_D");
    static STRUCT_IF_C C_BFu0c_D lv;
    check2(sizeof(lv), 9, "sizeof(C_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_D)");
    check_field_offset(lv, v1, 0, "C_BFu0c_D.v1");
    check_field_offset(lv, v2, 1, "C_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_D, C_BFu0c_D)
//============================================================================



static void Test_C_BFu0c_F()
{
  {
    init_simple_test("C_BFu0c_F");
    static STRUCT_IF_C C_BFu0c_F lv;
    check2(sizeof(lv), 5, "sizeof(C_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_F)");
    check_field_offset(lv, v1, 0, "C_BFu0c_F.v1");
    check_field_offset(lv, v2, 1, "C_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_F, C_BFu0c_F)
//============================================================================



static void Test_C_BFu0c_I()
{
  {
    init_simple_test("C_BFu0c_I");
    static STRUCT_IF_C C_BFu0c_I lv;
    check2(sizeof(lv), 5, "sizeof(C_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_I)");
    check_field_offset(lv, v1, 0, "C_BFu0c_I.v1");
    check_field_offset(lv, v2, 1, "C_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_I, C_BFu0c_I)
//============================================================================



static void Test_C_BFu0c_Ip()
{
  {
    init_simple_test("C_BFu0c_Ip");
    static STRUCT_IF_C C_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_Ip)");
    check_field_offset(lv, v1, 0, "C_BFu0c_Ip.v1");
    check_field_offset(lv, v2, 1, "C_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_Ip, C_BFu0c_Ip)
//============================================================================



static void Test_C_BFu0c_L()
{
  {
    init_simple_test("C_BFu0c_L");
    static STRUCT_IF_C C_BFu0c_L lv;
    check2(sizeof(lv), 9, "sizeof(C_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_L)");
    check_field_offset(lv, v1, 0, "C_BFu0c_L.v1");
    check_field_offset(lv, v2, 1, "C_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_L, C_BFu0c_L)
//============================================================================



static void Test_C_BFu0c_S()
{
  {
    init_simple_test("C_BFu0c_S");
    static STRUCT_IF_C C_BFu0c_S lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_S)");
    check_field_offset(lv, v1, 0, "C_BFu0c_S.v1");
    check_field_offset(lv, v2, 1, "C_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_S, C_BFu0c_S)
//============================================================================



static void Test_C_BFu0c_Uc()
{
  {
    init_simple_test("C_BFu0c_Uc");
    static STRUCT_IF_C C_BFu0c_Uc lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_Uc)");
    check_field_offset(lv, v1, 0, "C_BFu0c_Uc.v1");
    check_field_offset(lv, v2, 1, "C_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_Uc, C_BFu0c_Uc)
//============================================================================



static void Test_C_BFu0c_Ui()
{
  {
    init_simple_test("C_BFu0c_Ui");
    static STRUCT_IF_C C_BFu0c_Ui lv;
    check2(sizeof(lv), 5, "sizeof(C_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_Ui)");
    check_field_offset(lv, v1, 0, "C_BFu0c_Ui.v1");
    check_field_offset(lv, v2, 1, "C_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_Ui, C_BFu0c_Ui)
//============================================================================



static void Test_C_BFu0c_Ul()
{
  {
    init_simple_test("C_BFu0c_Ul");
    static STRUCT_IF_C C_BFu0c_Ul lv;
    check2(sizeof(lv), 9, "sizeof(C_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_Ul)");
    check_field_offset(lv, v1, 0, "C_BFu0c_Ul.v1");
    check_field_offset(lv, v2, 1, "C_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_Ul, C_BFu0c_Ul)
//============================================================================



static void Test_C_BFu0c_Us()
{
  {
    init_simple_test("C_BFu0c_Us");
    static STRUCT_IF_C C_BFu0c_Us lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_Us)");
    check_field_offset(lv, v1, 0, "C_BFu0c_Us.v1");
    check_field_offset(lv, v2, 1, "C_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_Us, C_BFu0c_Us)
//============================================================================



static void Test_C_BFu0c_Vp()
{
  {
    init_simple_test("C_BFu0c_Vp");
    static STRUCT_IF_C C_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu0c_Vp)");
    check_field_offset(lv, v1, 0, "C_BFu0c_Vp.v1");
    check_field_offset(lv, v2, 1, "C_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0c_Vp, C_BFu0c_Vp)
//============================================================================



static void Test_C_BFu0i()
{
  {
    init_simple_test("C_BFu0i");
    static STRUCT_IF_C C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i, C_BFu0i)
//============================================================================



static void Test_C_BFu0i_BFu0c()
{
  {
    init_simple_test("C_BFu0i_BFu0c");
    static STRUCT_IF_C C_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu0c, C_BFu0i_BFu0c)
//============================================================================



static void Test_C_BFu0i_BFu0i()
{
  {
    init_simple_test("C_BFu0i_BFu0i");
    static STRUCT_IF_C C_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu0i, C_BFu0i_BFu0i)
//============================================================================



static void Test_C_BFu0i_BFu0ll()
{
  {
    init_simple_test("C_BFu0i_BFu0ll");
    static STRUCT_IF_C C_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu0ll, C_BFu0i_BFu0ll)
//============================================================================



static void Test_C_BFu0i_BFu0s()
{
  {
    init_simple_test("C_BFu0i_BFu0s");
    static STRUCT_IF_C C_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu0s, C_BFu0i_BFu0s)
//============================================================================



static void Test_C_BFu0i_BFu15i()
{
  {
    init_simple_test("C_BFu0i_BFu15i");
    static STRUCT_IF_C C_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu15i)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu15i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "C_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "C_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu15i, C_BFu0i_BFu15i)
//============================================================================



static void Test_C_BFu0i_BFu15ll()
{
  {
    init_simple_test("C_BFu0i_BFu15ll");
    static STRUCT_IF_C C_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu15ll)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu15ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "C_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "C_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu15ll, C_BFu0i_BFu15ll)
//============================================================================



static void Test_C_BFu0i_BFu15s()
{
  {
    init_simple_test("C_BFu0i_BFu15s");
    static STRUCT_IF_C C_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu15s)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu15s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "C_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "C_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu15s, C_BFu0i_BFu15s)
//============================================================================



static void Test_C_BFu0i_BFu16i()
{
  {
    init_simple_test("C_BFu0i_BFu16i");
    static STRUCT_IF_C C_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu16i)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu16i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "C_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "C_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu16i, C_BFu0i_BFu16i)
//============================================================================



static void Test_C_BFu0i_BFu16ll()
{
  {
    init_simple_test("C_BFu0i_BFu16ll");
    static STRUCT_IF_C C_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu16ll)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu16ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "C_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "C_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu16ll, C_BFu0i_BFu16ll)
//============================================================================



static void Test_C_BFu0i_BFu16s()
{
  {
    init_simple_test("C_BFu0i_BFu16s");
    static STRUCT_IF_C C_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu16s)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu16s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "C_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "C_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu16s, C_BFu0i_BFu16s)
//============================================================================



static void Test_C_BFu0i_BFu17i()
{
  {
    init_simple_test("C_BFu0i_BFu17i");
    static STRUCT_IF_C C_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(C_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu17i)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu17i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, 1, "C_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, hide_ull(1LL<<16), "C_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu17i, C_BFu0i_BFu17i)
//============================================================================



static void Test_C_BFu0i_BFu17ll()
{
  {
    init_simple_test("C_BFu0i_BFu17ll");
    static STRUCT_IF_C C_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(C_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu17ll)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu17ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, 1, "C_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, hide_ull(1LL<<16), "C_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu17ll, C_BFu0i_BFu17ll)
//============================================================================



static void Test_C_BFu0i_BFu1c()
{
  {
    init_simple_test("C_BFu0i_BFu1c");
    static STRUCT_IF_C C_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(C_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu1c)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu1c.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "C_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu1c, C_BFu0i_BFu1c)
//============================================================================



static void Test_C_BFu0i_BFu1i()
{
  {
    init_simple_test("C_BFu0i_BFu1i");
    static STRUCT_IF_C C_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(C_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu1i)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu1i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "C_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu1i, C_BFu0i_BFu1i)
//============================================================================



static void Test_C_BFu0i_BFu1ll()
{
  {
    init_simple_test("C_BFu0i_BFu1ll");
    static STRUCT_IF_C C_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(C_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu1ll)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu1ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "C_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu1ll, C_BFu0i_BFu1ll)
//============================================================================



static void Test_C_BFu0i_BFu1s()
{
  {
    init_simple_test("C_BFu0i_BFu1s");
    static STRUCT_IF_C C_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(C_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu1s)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu1s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "C_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu1s, C_BFu0i_BFu1s)
//============================================================================



static void Test_C_BFu0i_BFu31i()
{
  {
    init_simple_test("C_BFu0i_BFu31i");
    static STRUCT_IF_C C_BFu0i_BFu31i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu31i)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu31i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, 1, "C_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, hide_ull(1LL<<30), "C_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu31i, C_BFu0i_BFu31i)
//============================================================================



static void Test_C_BFu0i_BFu31ll()
{
  {
    init_simple_test("C_BFu0i_BFu31ll");
    static STRUCT_IF_C C_BFu0i_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu31ll)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu31ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, 1, "C_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, hide_ull(1LL<<30), "C_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu31ll, C_BFu0i_BFu31ll)
//============================================================================



static void Test_C_BFu0i_BFu32i()
{
  {
    init_simple_test("C_BFu0i_BFu32i");
    static STRUCT_IF_C C_BFu0i_BFu32i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu32i)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu32i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, 1, "C_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, hide_ull(1LL<<31), "C_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu32i, C_BFu0i_BFu32i)
//============================================================================



static void Test_C_BFu0i_BFu32ll()
{
  {
    init_simple_test("C_BFu0i_BFu32ll");
    static STRUCT_IF_C C_BFu0i_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu32ll)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu32ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, 1, "C_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, hide_ull(1LL<<31), "C_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu32ll, C_BFu0i_BFu32ll)
//============================================================================



static void Test_C_BFu0i_BFu33()
{
  {
    init_simple_test("C_BFu0i_BFu33");
    static STRUCT_IF_C C_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(C_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu33)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu33.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 33, 1, "C_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 33, hide_ull(1LL<<32), "C_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu33, C_BFu0i_BFu33)
//============================================================================



static void Test_C_BFu0i_BFu7c()
{
  {
    init_simple_test("C_BFu0i_BFu7c");
    static STRUCT_IF_C C_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(C_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu7c)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu7c.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "C_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "C_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu7c, C_BFu0i_BFu7c)
//============================================================================



static void Test_C_BFu0i_BFu7i()
{
  {
    init_simple_test("C_BFu0i_BFu7i");
    static STRUCT_IF_C C_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(C_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu7i)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu7i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "C_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "C_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu7i, C_BFu0i_BFu7i)
//============================================================================



static void Test_C_BFu0i_BFu7ll()
{
  {
    init_simple_test("C_BFu0i_BFu7ll");
    static STRUCT_IF_C C_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(C_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu7ll)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu7ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "C_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "C_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu7ll, C_BFu0i_BFu7ll)
//============================================================================



static void Test_C_BFu0i_BFu7s()
{
  {
    init_simple_test("C_BFu0i_BFu7s");
    static STRUCT_IF_C C_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(C_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu7s)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu7s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "C_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "C_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu7s, C_BFu0i_BFu7s)
//============================================================================



static void Test_C_BFu0i_BFu8c()
{
  {
    init_simple_test("C_BFu0i_BFu8c");
    static STRUCT_IF_C C_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(C_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu8c)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu8c.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "C_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "C_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu8c, C_BFu0i_BFu8c)
//============================================================================



static void Test_C_BFu0i_BFu8i()
{
  {
    init_simple_test("C_BFu0i_BFu8i");
    static STRUCT_IF_C C_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(C_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu8i)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu8i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "C_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "C_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu8i, C_BFu0i_BFu8i)
//============================================================================



static void Test_C_BFu0i_BFu8ll()
{
  {
    init_simple_test("C_BFu0i_BFu8ll");
    static STRUCT_IF_C C_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(C_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu8ll)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu8ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "C_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "C_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu8ll, C_BFu0i_BFu8ll)
//============================================================================



static void Test_C_BFu0i_BFu8s()
{
  {
    init_simple_test("C_BFu0i_BFu8s");
    static STRUCT_IF_C C_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(C_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu8s)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu8s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "C_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "C_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu8s, C_BFu0i_BFu8s)
//============================================================================



static void Test_C_BFu0i_BFu9i()
{
  {
    init_simple_test("C_BFu0i_BFu9i");
    static STRUCT_IF_C C_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu9i)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu9i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "C_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "C_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu9i, C_BFu0i_BFu9i)
//============================================================================



static void Test_C_BFu0i_BFu9ll()
{
  {
    init_simple_test("C_BFu0i_BFu9ll");
    static STRUCT_IF_C C_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu9ll)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu9ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "C_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "C_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu9ll, C_BFu0i_BFu9ll)
//============================================================================



static void Test_C_BFu0i_BFu9s()
{
  {
    init_simple_test("C_BFu0i_BFu9s");
    static STRUCT_IF_C C_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_BFu9s)");
    check_field_offset(lv, v1, 0, "C_BFu0i_BFu9s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "C_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "C_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_BFu9s, C_BFu0i_BFu9s)
//============================================================================



static void Test_C_BFu0i_C()
{
  {
    init_simple_test("C_BFu0i_C");
    static STRUCT_IF_C C_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(C_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_C)");
    check_field_offset(lv, v1, 0, "C_BFu0i_C.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "C_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_C, C_BFu0i_C)
//============================================================================



static void Test_C_BFu0i_D()
{
  {
    init_simple_test("C_BFu0i_D");
    static STRUCT_IF_C C_BFu0i_D lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(C_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_D)");
    check_field_offset(lv, v1, 0, "C_BFu0i_D.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "C_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_D, C_BFu0i_D)
//============================================================================



static void Test_C_BFu0i_F()
{
  {
    init_simple_test("C_BFu0i_F");
    static STRUCT_IF_C C_BFu0i_F lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_F)");
    check_field_offset(lv, v1, 0, "C_BFu0i_F.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "C_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_F, C_BFu0i_F)
//============================================================================



static void Test_C_BFu0i_I()
{
  {
    init_simple_test("C_BFu0i_I");
    static STRUCT_IF_C C_BFu0i_I lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_I)");
    check_field_offset(lv, v1, 0, "C_BFu0i_I.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "C_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_I, C_BFu0i_I)
//============================================================================



static void Test_C_BFu0i_Ip()
{
  {
    init_simple_test("C_BFu0i_Ip");
    static STRUCT_IF_C C_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(C_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_Ip)");
    check_field_offset(lv, v1, 0, "C_BFu0i_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "C_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_Ip, C_BFu0i_Ip)
//============================================================================



static void Test_C_BFu0i_L()
{
  {
    init_simple_test("C_BFu0i_L");
    static STRUCT_IF_C C_BFu0i_L lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(C_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_L)");
    check_field_offset(lv, v1, 0, "C_BFu0i_L.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "C_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_L, C_BFu0i_L)
//============================================================================



static void Test_C_BFu0i_S()
{
  {
    init_simple_test("C_BFu0i_S");
    static STRUCT_IF_C C_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_S)");
    check_field_offset(lv, v1, 0, "C_BFu0i_S.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "C_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_S, C_BFu0i_S)
//============================================================================



static void Test_C_BFu0i_Uc()
{
  {
    init_simple_test("C_BFu0i_Uc");
    static STRUCT_IF_C C_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(C_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_Uc)");
    check_field_offset(lv, v1, 0, "C_BFu0i_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "C_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_Uc, C_BFu0i_Uc)
//============================================================================



static void Test_C_BFu0i_Ui()
{
  {
    init_simple_test("C_BFu0i_Ui");
    static STRUCT_IF_C C_BFu0i_Ui lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_Ui)");
    check_field_offset(lv, v1, 0, "C_BFu0i_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "C_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_Ui, C_BFu0i_Ui)
//============================================================================



static void Test_C_BFu0i_Ul()
{
  {
    init_simple_test("C_BFu0i_Ul");
    static STRUCT_IF_C C_BFu0i_Ul lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(C_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_Ul)");
    check_field_offset(lv, v1, 0, "C_BFu0i_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "C_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_Ul, C_BFu0i_Ul)
//============================================================================



static void Test_C_BFu0i_Us()
{
  {
    init_simple_test("C_BFu0i_Us");
    static STRUCT_IF_C C_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_Us)");
    check_field_offset(lv, v1, 0, "C_BFu0i_Us.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "C_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_Us, C_BFu0i_Us)
//============================================================================



static void Test_C_BFu0i_Vp()
{
  {
    init_simple_test("C_BFu0i_Vp");
    static STRUCT_IF_C C_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(C_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0i_Vp)");
    check_field_offset(lv, v1, 0, "C_BFu0i_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "C_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0i_Vp, C_BFu0i_Vp)
//============================================================================



static void Test_C_BFu0ll()
{
  {
    init_simple_test("C_BFu0ll");
    static STRUCT_IF_C C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll, C_BFu0ll)
//============================================================================



static void Test_C_BFu0ll_BFu0c()
{
  {
    init_simple_test("C_BFu0ll_BFu0c");
    static STRUCT_IF_C C_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu0c, C_BFu0ll_BFu0c)
//============================================================================



static void Test_C_BFu0ll_BFu0i()
{
  {
    init_simple_test("C_BFu0ll_BFu0i");
    static STRUCT_IF_C C_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu0i, C_BFu0ll_BFu0i)
//============================================================================



static void Test_C_BFu0ll_BFu0ll()
{
  {
    init_simple_test("C_BFu0ll_BFu0ll");
    static STRUCT_IF_C C_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu0ll, C_BFu0ll_BFu0ll)
//============================================================================



static void Test_C_BFu0ll_BFu0s()
{
  {
    init_simple_test("C_BFu0ll_BFu0s");
    static STRUCT_IF_C C_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu0s, C_BFu0ll_BFu0s)
//============================================================================



static void Test_C_BFu0ll_BFu15i()
{
  {
    init_simple_test("C_BFu0ll_BFu15i");
    static STRUCT_IF_C C_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(C_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu15i)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu15i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "C_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "C_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu15i, C_BFu0ll_BFu15i)
//============================================================================



static void Test_C_BFu0ll_BFu15ll()
{
  {
    init_simple_test("C_BFu0ll_BFu15ll");
    static STRUCT_IF_C C_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(C_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "C_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "C_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu15ll, C_BFu0ll_BFu15ll)
//============================================================================



static void Test_C_BFu0ll_BFu15s()
{
  {
    init_simple_test("C_BFu0ll_BFu15s");
    static STRUCT_IF_C C_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(C_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu15s)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu15s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "C_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "C_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu15s, C_BFu0ll_BFu15s)
//============================================================================



static void Test_C_BFu0ll_BFu16i()
{
  {
    init_simple_test("C_BFu0ll_BFu16i");
    static STRUCT_IF_C C_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(C_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu16i)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu16i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "C_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "C_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu16i, C_BFu0ll_BFu16i)
//============================================================================



static void Test_C_BFu0ll_BFu16ll()
{
  {
    init_simple_test("C_BFu0ll_BFu16ll");
    static STRUCT_IF_C C_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(C_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "C_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "C_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu16ll, C_BFu0ll_BFu16ll)
//============================================================================



static void Test_C_BFu0ll_BFu16s()
{
  {
    init_simple_test("C_BFu0ll_BFu16s");
    static STRUCT_IF_C C_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(C_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu16s)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu16s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "C_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "C_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu16s, C_BFu0ll_BFu16s)
//============================================================================



static void Test_C_BFu0ll_BFu17i()
{
  {
    init_simple_test("C_BFu0ll_BFu17i");
    static STRUCT_IF_C C_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(C_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu17i)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu17i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "C_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "C_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu17i, C_BFu0ll_BFu17i)
//============================================================================



static void Test_C_BFu0ll_BFu17ll()
{
  {
    init_simple_test("C_BFu0ll_BFu17ll");
    static STRUCT_IF_C C_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(C_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "C_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "C_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu17ll, C_BFu0ll_BFu17ll)
//============================================================================



static void Test_C_BFu0ll_BFu1c()
{
  {
    init_simple_test("C_BFu0ll_BFu1c");
    static STRUCT_IF_C C_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu1c)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu1c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "C_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu1c, C_BFu0ll_BFu1c)
//============================================================================



static void Test_C_BFu0ll_BFu1i()
{
  {
    init_simple_test("C_BFu0ll_BFu1i");
    static STRUCT_IF_C C_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu1i)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu1i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "C_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu1i, C_BFu0ll_BFu1i)
//============================================================================



static void Test_C_BFu0ll_BFu1ll()
{
  {
    init_simple_test("C_BFu0ll_BFu1ll");
    static STRUCT_IF_C C_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "C_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu1ll, C_BFu0ll_BFu1ll)
//============================================================================



static void Test_C_BFu0ll_BFu1s()
{
  {
    init_simple_test("C_BFu0ll_BFu1s");
    static STRUCT_IF_C C_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu1s)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu1s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "C_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu1s, C_BFu0ll_BFu1s)
//============================================================================



static void Test_C_BFu0ll_BFu31i()
{
  {
    init_simple_test("C_BFu0ll_BFu31i");
    static STRUCT_IF_C C_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(C_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu31i)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu31i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "C_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "C_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu31i, C_BFu0ll_BFu31i)
//============================================================================



static void Test_C_BFu0ll_BFu31ll()
{
  {
    init_simple_test("C_BFu0ll_BFu31ll");
    static STRUCT_IF_C C_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(C_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "C_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "C_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu31ll, C_BFu0ll_BFu31ll)
//============================================================================



static void Test_C_BFu0ll_BFu32i()
{
  {
    init_simple_test("C_BFu0ll_BFu32i");
    static STRUCT_IF_C C_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(C_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu32i)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu32i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "C_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "C_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu32i, C_BFu0ll_BFu32i)
//============================================================================



static void Test_C_BFu0ll_BFu32ll()
{
  {
    init_simple_test("C_BFu0ll_BFu32ll");
    static STRUCT_IF_C C_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(C_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "C_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "C_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu32ll, C_BFu0ll_BFu32ll)
//============================================================================



static void Test_C_BFu0ll_BFu33()
{
  {
    init_simple_test("C_BFu0ll_BFu33");
    static STRUCT_IF_C C_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(C_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu33)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu33.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "C_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "C_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu33, C_BFu0ll_BFu33)
//============================================================================



static void Test_C_BFu0ll_BFu7c()
{
  {
    init_simple_test("C_BFu0ll_BFu7c");
    static STRUCT_IF_C C_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu7c)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu7c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "C_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "C_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu7c, C_BFu0ll_BFu7c)
//============================================================================



static void Test_C_BFu0ll_BFu7i()
{
  {
    init_simple_test("C_BFu0ll_BFu7i");
    static STRUCT_IF_C C_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu7i)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu7i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "C_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "C_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu7i, C_BFu0ll_BFu7i)
//============================================================================



static void Test_C_BFu0ll_BFu7ll()
{
  {
    init_simple_test("C_BFu0ll_BFu7ll");
    static STRUCT_IF_C C_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "C_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "C_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu7ll, C_BFu0ll_BFu7ll)
//============================================================================



static void Test_C_BFu0ll_BFu7s()
{
  {
    init_simple_test("C_BFu0ll_BFu7s");
    static STRUCT_IF_C C_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu7s)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu7s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "C_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "C_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu7s, C_BFu0ll_BFu7s)
//============================================================================



static void Test_C_BFu0ll_BFu8c()
{
  {
    init_simple_test("C_BFu0ll_BFu8c");
    static STRUCT_IF_C C_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu8c)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu8c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "C_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "C_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu8c, C_BFu0ll_BFu8c)
//============================================================================



static void Test_C_BFu0ll_BFu8i()
{
  {
    init_simple_test("C_BFu0ll_BFu8i");
    static STRUCT_IF_C C_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu8i)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu8i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "C_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "C_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu8i, C_BFu0ll_BFu8i)
//============================================================================



static void Test_C_BFu0ll_BFu8ll()
{
  {
    init_simple_test("C_BFu0ll_BFu8ll");
    static STRUCT_IF_C C_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "C_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "C_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu8ll, C_BFu0ll_BFu8ll)
//============================================================================



static void Test_C_BFu0ll_BFu8s()
{
  {
    init_simple_test("C_BFu0ll_BFu8s");
    static STRUCT_IF_C C_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu8s)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu8s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "C_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "C_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu8s, C_BFu0ll_BFu8s)
//============================================================================



static void Test_C_BFu0ll_BFu9i()
{
  {
    init_simple_test("C_BFu0ll_BFu9i");
    static STRUCT_IF_C C_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(C_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu9i)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu9i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "C_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "C_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu9i, C_BFu0ll_BFu9i)
//============================================================================



static void Test_C_BFu0ll_BFu9ll()
{
  {
    init_simple_test("C_BFu0ll_BFu9ll");
    static STRUCT_IF_C C_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(C_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "C_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "C_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu9ll, C_BFu0ll_BFu9ll)
//============================================================================



static void Test_C_BFu0ll_BFu9s()
{
  {
    init_simple_test("C_BFu0ll_BFu9s");
    static STRUCT_IF_C C_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(C_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_BFu9s)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_BFu9s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "C_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "C_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_BFu9s, C_BFu0ll_BFu9s)
//============================================================================



static void Test_C_BFu0ll_C()
{
  {
    init_simple_test("C_BFu0ll_C");
    static STRUCT_IF_C C_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_C)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_C.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "C_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_C, C_BFu0ll_C)
//============================================================================



static void Test_C_BFu0ll_D()
{
  {
    init_simple_test("C_BFu0ll_D");
    static STRUCT_IF_C C_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(C_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_D)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_D.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "C_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_D, C_BFu0ll_D)
//============================================================================



static void Test_C_BFu0ll_F()
{
  {
    init_simple_test("C_BFu0ll_F");
    static STRUCT_IF_C C_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(C_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_F)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_F.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "C_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_F, C_BFu0ll_F)
//============================================================================



static void Test_C_BFu0ll_I()
{
  {
    init_simple_test("C_BFu0ll_I");
    static STRUCT_IF_C C_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(C_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_I)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_I.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "C_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_I, C_BFu0ll_I)
//============================================================================



static void Test_C_BFu0ll_Ip()
{
  {
    init_simple_test("C_BFu0ll_Ip");
    static STRUCT_IF_C C_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(C_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_Ip)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "C_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_Ip, C_BFu0ll_Ip)
//============================================================================



static void Test_C_BFu0ll_L()
{
  {
    init_simple_test("C_BFu0ll_L");
    static STRUCT_IF_C C_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(C_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_L)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_L.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "C_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_L, C_BFu0ll_L)
//============================================================================



static void Test_C_BFu0ll_S()
{
  {
    init_simple_test("C_BFu0ll_S");
    static STRUCT_IF_C C_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(C_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_S)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_S.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "C_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_S, C_BFu0ll_S)
//============================================================================



static void Test_C_BFu0ll_Uc()
{
  {
    init_simple_test("C_BFu0ll_Uc");
    static STRUCT_IF_C C_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_Uc)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "C_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_Uc, C_BFu0ll_Uc)
//============================================================================



static void Test_C_BFu0ll_Ui()
{
  {
    init_simple_test("C_BFu0ll_Ui");
    static STRUCT_IF_C C_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(C_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_Ui)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "C_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_Ui, C_BFu0ll_Ui)
//============================================================================



static void Test_C_BFu0ll_Ul()
{
  {
    init_simple_test("C_BFu0ll_Ul");
    static STRUCT_IF_C C_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(C_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_Ul)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "C_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_Ul, C_BFu0ll_Ul)
//============================================================================



static void Test_C_BFu0ll_Us()
{
  {
    init_simple_test("C_BFu0ll_Us");
    static STRUCT_IF_C C_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(C_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_Us)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_Us.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "C_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_Us, C_BFu0ll_Us)
//============================================================================



static void Test_C_BFu0ll_Vp()
{
  {
    init_simple_test("C_BFu0ll_Vp");
    static STRUCT_IF_C C_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(C_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0ll_Vp)");
    check_field_offset(lv, v1, 0, "C_BFu0ll_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "C_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0ll_Vp, C_BFu0ll_Vp)
//============================================================================



static void Test_C_BFu0s()
{
  {
    init_simple_test("C_BFu0s");
    static STRUCT_IF_C C_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s, C_BFu0s)
//============================================================================



static void Test_C_BFu0s_BFu0c()
{
  {
    init_simple_test("C_BFu0s_BFu0c");
    static STRUCT_IF_C C_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(C_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu0c, C_BFu0s_BFu0c)
//============================================================================



static void Test_C_BFu0s_BFu0i()
{
  {
    init_simple_test("C_BFu0s_BFu0i");
    static STRUCT_IF_C C_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu0i, C_BFu0s_BFu0i)
//============================================================================



static void Test_C_BFu0s_BFu0ll()
{
  {
    init_simple_test("C_BFu0s_BFu0ll");
    static STRUCT_IF_C C_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu0ll, C_BFu0s_BFu0ll)
//============================================================================



static void Test_C_BFu0s_BFu0s()
{
  {
    init_simple_test("C_BFu0s_BFu0s");
    static STRUCT_IF_C C_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(C_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu0s, C_BFu0s_BFu0s)
//============================================================================



static void Test_C_BFu0s_BFu15i()
{
  {
    init_simple_test("C_BFu0s_BFu15i");
    static STRUCT_IF_C C_BFu0s_BFu15i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu15i)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu15i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "C_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "C_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu15i, C_BFu0s_BFu15i)
//============================================================================



static void Test_C_BFu0s_BFu15ll()
{
  {
    init_simple_test("C_BFu0s_BFu15ll");
    static STRUCT_IF_C C_BFu0s_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu15ll)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu15ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "C_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "C_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu15ll, C_BFu0s_BFu15ll)
//============================================================================



static void Test_C_BFu0s_BFu15s()
{
  {
    init_simple_test("C_BFu0s_BFu15s");
    static STRUCT_IF_C C_BFu0s_BFu15s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu15s)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu15s.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "C_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "C_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu15s, C_BFu0s_BFu15s)
//============================================================================



static void Test_C_BFu0s_BFu16i()
{
  {
    init_simple_test("C_BFu0s_BFu16i");
    static STRUCT_IF_C C_BFu0s_BFu16i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu16i)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu16i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "C_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "C_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu16i, C_BFu0s_BFu16i)
//============================================================================



static void Test_C_BFu0s_BFu16ll()
{
  {
    init_simple_test("C_BFu0s_BFu16ll");
    static STRUCT_IF_C C_BFu0s_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu16ll)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu16ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "C_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "C_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu16ll, C_BFu0s_BFu16ll)
//============================================================================



static void Test_C_BFu0s_BFu16s()
{
  {
    init_simple_test("C_BFu0s_BFu16s");
    static STRUCT_IF_C C_BFu0s_BFu16s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu16s)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu16s.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "C_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "C_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu16s, C_BFu0s_BFu16s)
//============================================================================



static void Test_C_BFu0s_BFu17i()
{
  {
    init_simple_test("C_BFu0s_BFu17i");
    static STRUCT_IF_C C_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(C_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu17i)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu17i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, 1, "C_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, hide_ull(1LL<<16), "C_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu17i, C_BFu0s_BFu17i)
//============================================================================



static void Test_C_BFu0s_BFu17ll()
{
  {
    init_simple_test("C_BFu0s_BFu17ll");
    static STRUCT_IF_C C_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(C_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu17ll)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu17ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, 1, "C_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, hide_ull(1LL<<16), "C_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu17ll, C_BFu0s_BFu17ll)
//============================================================================



static void Test_C_BFu0s_BFu1c()
{
  {
    init_simple_test("C_BFu0s_BFu1c");
    static STRUCT_IF_C C_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(C_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu1c)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu1c.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "C_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu1c, C_BFu0s_BFu1c)
//============================================================================



static void Test_C_BFu0s_BFu1i()
{
  {
    init_simple_test("C_BFu0s_BFu1i");
    static STRUCT_IF_C C_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(C_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu1i)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu1i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "C_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu1i, C_BFu0s_BFu1i)
//============================================================================



static void Test_C_BFu0s_BFu1ll()
{
  {
    init_simple_test("C_BFu0s_BFu1ll");
    static STRUCT_IF_C C_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(C_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu1ll)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu1ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "C_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu1ll, C_BFu0s_BFu1ll)
//============================================================================



static void Test_C_BFu0s_BFu1s()
{
  {
    init_simple_test("C_BFu0s_BFu1s");
    static STRUCT_IF_C C_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(C_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu1s)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu1s.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "C_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu1s, C_BFu0s_BFu1s)
//============================================================================



static void Test_C_BFu0s_BFu31i()
{
  {
    init_simple_test("C_BFu0s_BFu31i");
    static STRUCT_IF_C C_BFu0s_BFu31i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu31i)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu31i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, 1, "C_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, hide_ull(1LL<<30), "C_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu31i, C_BFu0s_BFu31i)
//============================================================================



static void Test_C_BFu0s_BFu31ll()
{
  {
    init_simple_test("C_BFu0s_BFu31ll");
    static STRUCT_IF_C C_BFu0s_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu31ll)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu31ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, 1, "C_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, hide_ull(1LL<<30), "C_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu31ll, C_BFu0s_BFu31ll)
//============================================================================



static void Test_C_BFu0s_BFu32i()
{
  {
    init_simple_test("C_BFu0s_BFu32i");
    static STRUCT_IF_C C_BFu0s_BFu32i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu32i)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu32i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, 1, "C_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, hide_ull(1LL<<31), "C_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu32i, C_BFu0s_BFu32i)
//============================================================================



static void Test_C_BFu0s_BFu32ll()
{
  {
    init_simple_test("C_BFu0s_BFu32ll");
    static STRUCT_IF_C C_BFu0s_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu32ll)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu32ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, 1, "C_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, hide_ull(1LL<<31), "C_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu32ll, C_BFu0s_BFu32ll)
//============================================================================



static void Test_C_BFu0s_BFu33()
{
  {
    init_simple_test("C_BFu0s_BFu33");
    static STRUCT_IF_C C_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(C_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu33)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu33.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 33, 1, "C_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 33, hide_ull(1LL<<32), "C_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu33, C_BFu0s_BFu33)
//============================================================================



static void Test_C_BFu0s_BFu7c()
{
  {
    init_simple_test("C_BFu0s_BFu7c");
    static STRUCT_IF_C C_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(C_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu7c)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu7c.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "C_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "C_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu7c, C_BFu0s_BFu7c)
//============================================================================



static void Test_C_BFu0s_BFu7i()
{
  {
    init_simple_test("C_BFu0s_BFu7i");
    static STRUCT_IF_C C_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(C_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu7i)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu7i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "C_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "C_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu7i, C_BFu0s_BFu7i)
//============================================================================



static void Test_C_BFu0s_BFu7ll()
{
  {
    init_simple_test("C_BFu0s_BFu7ll");
    static STRUCT_IF_C C_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(C_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu7ll)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu7ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "C_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "C_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu7ll, C_BFu0s_BFu7ll)
//============================================================================



static void Test_C_BFu0s_BFu7s()
{
  {
    init_simple_test("C_BFu0s_BFu7s");
    static STRUCT_IF_C C_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(C_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu7s)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu7s.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "C_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "C_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu7s, C_BFu0s_BFu7s)
//============================================================================



static void Test_C_BFu0s_BFu8c()
{
  {
    init_simple_test("C_BFu0s_BFu8c");
    static STRUCT_IF_C C_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(C_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu8c)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu8c.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "C_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "C_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu8c, C_BFu0s_BFu8c)
//============================================================================



static void Test_C_BFu0s_BFu8i()
{
  {
    init_simple_test("C_BFu0s_BFu8i");
    static STRUCT_IF_C C_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(C_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu8i)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu8i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "C_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "C_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu8i, C_BFu0s_BFu8i)
//============================================================================



static void Test_C_BFu0s_BFu8ll()
{
  {
    init_simple_test("C_BFu0s_BFu8ll");
    static STRUCT_IF_C C_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(C_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu8ll)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu8ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "C_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "C_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu8ll, C_BFu0s_BFu8ll)
//============================================================================



static void Test_C_BFu0s_BFu8s()
{
  {
    init_simple_test("C_BFu0s_BFu8s");
    static STRUCT_IF_C C_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(C_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu8s)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu8s.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "C_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "C_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu8s, C_BFu0s_BFu8s)
//============================================================================



static void Test_C_BFu0s_BFu9i()
{
  {
    init_simple_test("C_BFu0s_BFu9i");
    static STRUCT_IF_C C_BFu0s_BFu9i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu9i)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu9i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "C_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "C_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu9i, C_BFu0s_BFu9i)
//============================================================================



static void Test_C_BFu0s_BFu9ll()
{
  {
    init_simple_test("C_BFu0s_BFu9ll");
    static STRUCT_IF_C C_BFu0s_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu9ll)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu9ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "C_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "C_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu9ll, C_BFu0s_BFu9ll)
//============================================================================



static void Test_C_BFu0s_BFu9s()
{
  {
    init_simple_test("C_BFu0s_BFu9s");
    static STRUCT_IF_C C_BFu0s_BFu9s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_BFu9s)");
    check_field_offset(lv, v1, 0, "C_BFu0s_BFu9s.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "C_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "C_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_BFu9s, C_BFu0s_BFu9s)
//============================================================================



static void Test_C_BFu0s_C()
{
  {
    init_simple_test("C_BFu0s_C");
    static STRUCT_IF_C C_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(C_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_C)");
    check_field_offset(lv, v1, 0, "C_BFu0s_C.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "C_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_C, C_BFu0s_C)
//============================================================================



static void Test_C_BFu0s_D()
{
  {
    init_simple_test("C_BFu0s_D");
    static STRUCT_IF_C C_BFu0s_D lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(C_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_D)");
    check_field_offset(lv, v1, 0, "C_BFu0s_D.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "C_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_D, C_BFu0s_D)
//============================================================================



static void Test_C_BFu0s_F()
{
  {
    init_simple_test("C_BFu0s_F");
    static STRUCT_IF_C C_BFu0s_F lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_F)");
    check_field_offset(lv, v1, 0, "C_BFu0s_F.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "C_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_F, C_BFu0s_F)
//============================================================================



static void Test_C_BFu0s_I()
{
  {
    init_simple_test("C_BFu0s_I");
    static STRUCT_IF_C C_BFu0s_I lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_I)");
    check_field_offset(lv, v1, 0, "C_BFu0s_I.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "C_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_I, C_BFu0s_I)
//============================================================================



static void Test_C_BFu0s_Ip()
{
  {
    init_simple_test("C_BFu0s_Ip");
    static STRUCT_IF_C C_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(C_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_Ip)");
    check_field_offset(lv, v1, 0, "C_BFu0s_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "C_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_Ip, C_BFu0s_Ip)
//============================================================================



static void Test_C_BFu0s_L()
{
  {
    init_simple_test("C_BFu0s_L");
    static STRUCT_IF_C C_BFu0s_L lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(C_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_L)");
    check_field_offset(lv, v1, 0, "C_BFu0s_L.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "C_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_L, C_BFu0s_L)
//============================================================================



static void Test_C_BFu0s_S()
{
  {
    init_simple_test("C_BFu0s_S");
    static STRUCT_IF_C C_BFu0s_S lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_S)");
    check_field_offset(lv, v1, 0, "C_BFu0s_S.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "C_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_S, C_BFu0s_S)
//============================================================================



static void Test_C_BFu0s_Uc()
{
  {
    init_simple_test("C_BFu0s_Uc");
    static STRUCT_IF_C C_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(C_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_Uc)");
    check_field_offset(lv, v1, 0, "C_BFu0s_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "C_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_Uc, C_BFu0s_Uc)
//============================================================================



static void Test_C_BFu0s_Ui()
{
  {
    init_simple_test("C_BFu0s_Ui");
    static STRUCT_IF_C C_BFu0s_Ui lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_Ui)");
    check_field_offset(lv, v1, 0, "C_BFu0s_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "C_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_Ui, C_BFu0s_Ui)
//============================================================================



static void Test_C_BFu0s_Ul()
{
  {
    init_simple_test("C_BFu0s_Ul");
    static STRUCT_IF_C C_BFu0s_Ul lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(C_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_Ul)");
    check_field_offset(lv, v1, 0, "C_BFu0s_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "C_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_Ul, C_BFu0s_Ul)
//============================================================================



static void Test_C_BFu0s_Us()
{
  {
    init_simple_test("C_BFu0s_Us");
    static STRUCT_IF_C C_BFu0s_Us lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_Us)");
    check_field_offset(lv, v1, 0, "C_BFu0s_Us.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "C_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_Us, C_BFu0s_Us)
//============================================================================



static void Test_C_BFu0s_Vp()
{
  {
    init_simple_test("C_BFu0s_Vp");
    static STRUCT_IF_C C_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(C_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu0s_Vp)");
    check_field_offset(lv, v1, 0, "C_BFu0s_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "C_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu0s_Vp, C_BFu0s_Vp)
//============================================================================



static void Test_C_BFu15i_BFu0c()
{
  {
    init_simple_test("C_BFu15i_BFu0c");
    static STRUCT_IF_C C_BFu15i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu15i_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu15i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu15i_BFu0c, C_BFu15i_BFu0c)
//============================================================================



static void Test_C_BFu15i_BFu0i()
{
  {
    init_simple_test("C_BFu15i_BFu0i");
    static STRUCT_IF_C C_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu15i_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu15i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu15i_BFu0i, C_BFu15i_BFu0i)
//============================================================================



static void Test_C_BFu15i_BFu0ll()
{
  {
    init_simple_test("C_BFu15i_BFu0ll");
    static STRUCT_IF_C C_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu15i_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu15i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu15i_BFu0ll, C_BFu15i_BFu0ll)
//============================================================================



static void Test_C_BFu15i_BFu0s()
{
  {
    init_simple_test("C_BFu15i_BFu0s");
    static STRUCT_IF_C C_BFu15i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu15i_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu15i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu15i_BFu0s, C_BFu15i_BFu0s)
//============================================================================



static void Test_C_BFu15ll_BFu0c()
{
  {
    init_simple_test("C_BFu15ll_BFu0c");
    static STRUCT_IF_C C_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu15ll_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu15ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu15ll_BFu0c, C_BFu15ll_BFu0c)
//============================================================================



static void Test_C_BFu15ll_BFu0i()
{
  {
    init_simple_test("C_BFu15ll_BFu0i");
    static STRUCT_IF_C C_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu15ll_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu15ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu15ll_BFu0i, C_BFu15ll_BFu0i)
//============================================================================



static void Test_C_BFu15ll_BFu0ll()
{
  {
    init_simple_test("C_BFu15ll_BFu0ll");
    static STRUCT_IF_C C_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu15ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu15ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu15ll_BFu0ll, C_BFu15ll_BFu0ll)
//============================================================================



static void Test_C_BFu15ll_BFu0s()
{
  {
    init_simple_test("C_BFu15ll_BFu0s");
    static STRUCT_IF_C C_BFu15ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu15ll_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu15ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu15ll_BFu0s, C_BFu15ll_BFu0s)
//============================================================================



static void Test_C_BFu15s_BFu0c()
{
  {
    init_simple_test("C_BFu15s_BFu0c");
    static STRUCT_IF_C C_BFu15s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu15s_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu15s_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu15s_BFu0c, C_BFu15s_BFu0c)
//============================================================================



static void Test_C_BFu15s_BFu0i()
{
  {
    init_simple_test("C_BFu15s_BFu0i");
    static STRUCT_IF_C C_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu15s_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu15s_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu15s_BFu0i, C_BFu15s_BFu0i)
//============================================================================



static void Test_C_BFu15s_BFu0ll()
{
  {
    init_simple_test("C_BFu15s_BFu0ll");
    static STRUCT_IF_C C_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu15s_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu15s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu15s_BFu0ll, C_BFu15s_BFu0ll)
//============================================================================



static void Test_C_BFu15s_BFu0s()
{
  {
    init_simple_test("C_BFu15s_BFu0s");
    static STRUCT_IF_C C_BFu15s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu15s_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu15s_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu15s_BFu0s, C_BFu15s_BFu0s)
//============================================================================



static void Test_C_BFu16i_BFu0c()
{
  {
    init_simple_test("C_BFu16i_BFu0c");
    static STRUCT_IF_C C_BFu16i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu16i_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu16i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu16i_BFu0c, C_BFu16i_BFu0c)
//============================================================================



static void Test_C_BFu16i_BFu0i()
{
  {
    init_simple_test("C_BFu16i_BFu0i");
    static STRUCT_IF_C C_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu16i_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu16i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu16i_BFu0i, C_BFu16i_BFu0i)
//============================================================================



static void Test_C_BFu16i_BFu0ll()
{
  {
    init_simple_test("C_BFu16i_BFu0ll");
    static STRUCT_IF_C C_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu16i_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu16i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu16i_BFu0ll, C_BFu16i_BFu0ll)
//============================================================================



static void Test_C_BFu16i_BFu0s()
{
  {
    init_simple_test("C_BFu16i_BFu0s");
    static STRUCT_IF_C C_BFu16i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu16i_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu16i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu16i_BFu0s, C_BFu16i_BFu0s)
//============================================================================



static void Test_C_BFu16ll_BFu0c()
{
  {
    init_simple_test("C_BFu16ll_BFu0c");
    static STRUCT_IF_C C_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu16ll_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu16ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu16ll_BFu0c, C_BFu16ll_BFu0c)
//============================================================================



static void Test_C_BFu16ll_BFu0i()
{
  {
    init_simple_test("C_BFu16ll_BFu0i");
    static STRUCT_IF_C C_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu16ll_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu16ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu16ll_BFu0i, C_BFu16ll_BFu0i)
//============================================================================



static void Test_C_BFu16ll_BFu0ll()
{
  {
    init_simple_test("C_BFu16ll_BFu0ll");
    static STRUCT_IF_C C_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu16ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu16ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu16ll_BFu0ll, C_BFu16ll_BFu0ll)
//============================================================================



static void Test_C_BFu16ll_BFu0s()
{
  {
    init_simple_test("C_BFu16ll_BFu0s");
    static STRUCT_IF_C C_BFu16ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu16ll_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu16ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu16ll_BFu0s, C_BFu16ll_BFu0s)
//============================================================================



static void Test_C_BFu16s_BFu0c()
{
  {
    init_simple_test("C_BFu16s_BFu0c");
    static STRUCT_IF_C C_BFu16s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu16s_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu16s_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu16s_BFu0c, C_BFu16s_BFu0c)
//============================================================================



static void Test_C_BFu16s_BFu0i()
{
  {
    init_simple_test("C_BFu16s_BFu0i");
    static STRUCT_IF_C C_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu16s_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu16s_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu16s_BFu0i, C_BFu16s_BFu0i)
//============================================================================



static void Test_C_BFu16s_BFu0ll()
{
  {
    init_simple_test("C_BFu16s_BFu0ll");
    static STRUCT_IF_C C_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu16s_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu16s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu16s_BFu0ll, C_BFu16s_BFu0ll)
//============================================================================



static void Test_C_BFu16s_BFu0s()
{
  {
    init_simple_test("C_BFu16s_BFu0s");
    static STRUCT_IF_C C_BFu16s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu16s_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu16s_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu16s_BFu0s, C_BFu16s_BFu0s)
//============================================================================



static void Test_C_BFu17i_BFu0c()
{
  {
    init_simple_test("C_BFu17i_BFu0c");
    static STRUCT_IF_C C_BFu17i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(C_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu17i_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu17i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "C_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "C_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu17i_BFu0c, C_BFu17i_BFu0c)
//============================================================================



static void Test_C_BFu17i_BFu0i()
{
  {
    init_simple_test("C_BFu17i_BFu0i");
    static STRUCT_IF_C C_BFu17i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(C_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu17i_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu17i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "C_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "C_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu17i_BFu0i, C_BFu17i_BFu0i)
//============================================================================



static void Test_C_BFu17i_BFu0ll()
{
  {
    init_simple_test("C_BFu17i_BFu0ll");
    static STRUCT_IF_C C_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu17i_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu17i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "C_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "C_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu17i_BFu0ll, C_BFu17i_BFu0ll)
//============================================================================



static void Test_C_BFu17i_BFu0s()
{
  {
    init_simple_test("C_BFu17i_BFu0s");
    static STRUCT_IF_C C_BFu17i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(C_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu17i_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu17i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "C_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "C_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu17i_BFu0s, C_BFu17i_BFu0s)
//============================================================================



static void Test_C_BFu17ll_BFu0c()
{
  {
    init_simple_test("C_BFu17ll_BFu0c");
    static STRUCT_IF_C C_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(C_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu17ll_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu17ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "C_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "C_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu17ll_BFu0c, C_BFu17ll_BFu0c)
//============================================================================



static void Test_C_BFu17ll_BFu0i()
{
  {
    init_simple_test("C_BFu17ll_BFu0i");
    static STRUCT_IF_C C_BFu17ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(C_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu17ll_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu17ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "C_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "C_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu17ll_BFu0i, C_BFu17ll_BFu0i)
//============================================================================



static void Test_C_BFu17ll_BFu0ll()
{
  {
    init_simple_test("C_BFu17ll_BFu0ll");
    static STRUCT_IF_C C_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu17ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu17ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "C_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "C_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu17ll_BFu0ll, C_BFu17ll_BFu0ll)
//============================================================================



static void Test_C_BFu17ll_BFu0s()
{
  {
    init_simple_test("C_BFu17ll_BFu0s");
    static STRUCT_IF_C C_BFu17ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(C_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu17ll_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu17ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "C_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "C_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu17ll_BFu0s, C_BFu17ll_BFu0s)
//============================================================================



static void Test_C_BFu1c_BFu0c()
{
  {
    init_simple_test("C_BFu1c_BFu0c");
    static STRUCT_IF_C C_BFu1c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu1c_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu1c_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1c_BFu0c, C_BFu1c_BFu0c)
//============================================================================



static void Test_C_BFu1c_BFu0i()
{
  {
    init_simple_test("C_BFu1c_BFu0i");
    static STRUCT_IF_C C_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu1c_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu1c_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1c_BFu0i, C_BFu1c_BFu0i)
//============================================================================



static void Test_C_BFu1c_BFu0ll()
{
  {
    init_simple_test("C_BFu1c_BFu0ll");
    static STRUCT_IF_C C_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu1c_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu1c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1c_BFu0ll, C_BFu1c_BFu0ll)
//============================================================================



static void Test_C_BFu1c_BFu0s()
{
  {
    init_simple_test("C_BFu1c_BFu0s");
    static STRUCT_IF_C C_BFu1c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu1c_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu1c_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1c_BFu0s, C_BFu1c_BFu0s)
//============================================================================



static void Test_C_BFu1i_BFu0c()
{
  {
    init_simple_test("C_BFu1i_BFu0c");
    static STRUCT_IF_C C_BFu1i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu1i_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu1i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1i_BFu0c, C_BFu1i_BFu0c)
//============================================================================



static void Test_C_BFu1i_BFu0i()
{
  {
    init_simple_test("C_BFu1i_BFu0i");
    static STRUCT_IF_C C_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu1i_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu1i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1i_BFu0i, C_BFu1i_BFu0i)
//============================================================================



static void Test_C_BFu1i_BFu0ll()
{
  {
    init_simple_test("C_BFu1i_BFu0ll");
    static STRUCT_IF_C C_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu1i_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu1i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1i_BFu0ll, C_BFu1i_BFu0ll)
//============================================================================



static void Test_C_BFu1i_BFu0s()
{
  {
    init_simple_test("C_BFu1i_BFu0s");
    static STRUCT_IF_C C_BFu1i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu1i_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu1i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1i_BFu0s, C_BFu1i_BFu0s)
//============================================================================



static void Test_C_BFu1ll_BFu0c()
{
  {
    init_simple_test("C_BFu1ll_BFu0c");
    static STRUCT_IF_C C_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu1ll_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu1ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1ll_BFu0c, C_BFu1ll_BFu0c)
//============================================================================



static void Test_C_BFu1ll_BFu0i()
{
  {
    init_simple_test("C_BFu1ll_BFu0i");
    static STRUCT_IF_C C_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu1ll_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu1ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1ll_BFu0i, C_BFu1ll_BFu0i)
//============================================================================



static void Test_C_BFu1ll_BFu0ll()
{
  {
    init_simple_test("C_BFu1ll_BFu0ll");
    static STRUCT_IF_C C_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu1ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu1ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1ll_BFu0ll, C_BFu1ll_BFu0ll)
//============================================================================



static void Test_C_BFu1ll_BFu0s()
{
  {
    init_simple_test("C_BFu1ll_BFu0s");
    static STRUCT_IF_C C_BFu1ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu1ll_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu1ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1ll_BFu0s, C_BFu1ll_BFu0s)
//============================================================================



static void Test_C_BFu1s_BFu0c()
{
  {
    init_simple_test("C_BFu1s_BFu0c");
    static STRUCT_IF_C C_BFu1s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu1s_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu1s_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1s_BFu0c, C_BFu1s_BFu0c)
//============================================================================



static void Test_C_BFu1s_BFu0i()
{
  {
    init_simple_test("C_BFu1s_BFu0i");
    static STRUCT_IF_C C_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu1s_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu1s_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1s_BFu0i, C_BFu1s_BFu0i)
//============================================================================



static void Test_C_BFu1s_BFu0ll()
{
  {
    init_simple_test("C_BFu1s_BFu0ll");
    static STRUCT_IF_C C_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu1s_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu1s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1s_BFu0ll, C_BFu1s_BFu0ll)
//============================================================================



static void Test_C_BFu1s_BFu0s()
{
  {
    init_simple_test("C_BFu1s_BFu0s");
    static STRUCT_IF_C C_BFu1s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu1s_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu1s_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1s_BFu0s, C_BFu1s_BFu0s)
//============================================================================



static void Test_C_BFu31i_BFu0c()
{
  {
    init_simple_test("C_BFu31i_BFu0c");
    static STRUCT_IF_C C_BFu31i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(C_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu31i_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu31i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "C_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "C_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu31i_BFu0c, C_BFu31i_BFu0c)
//============================================================================



static void Test_C_BFu31i_BFu0i()
{
  {
    init_simple_test("C_BFu31i_BFu0i");
    static STRUCT_IF_C C_BFu31i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu31i_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu31i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "C_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "C_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu31i_BFu0i, C_BFu31i_BFu0i)
//============================================================================



static void Test_C_BFu31i_BFu0ll()
{
  {
    init_simple_test("C_BFu31i_BFu0ll");
    static STRUCT_IF_C C_BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu31i_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu31i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "C_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "C_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu31i_BFu0ll, C_BFu31i_BFu0ll)
//============================================================================



static void Test_C_BFu31i_BFu0s()
{
  {
    init_simple_test("C_BFu31i_BFu0s");
    static STRUCT_IF_C C_BFu31i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu31i_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu31i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "C_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "C_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu31i_BFu0s, C_BFu31i_BFu0s)
//============================================================================



static void Test_C_BFu31ll_BFu0c()
{
  {
    init_simple_test("C_BFu31ll_BFu0c");
    static STRUCT_IF_C C_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(C_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu31ll_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu31ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "C_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "C_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu31ll_BFu0c, C_BFu31ll_BFu0c)
//============================================================================



static void Test_C_BFu31ll_BFu0i()
{
  {
    init_simple_test("C_BFu31ll_BFu0i");
    static STRUCT_IF_C C_BFu31ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu31ll_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu31ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "C_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "C_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu31ll_BFu0i, C_BFu31ll_BFu0i)
//============================================================================



static void Test_C_BFu31ll_BFu0ll()
{
  {
    init_simple_test("C_BFu31ll_BFu0ll");
    static STRUCT_IF_C C_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu31ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu31ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "C_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "C_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu31ll_BFu0ll, C_BFu31ll_BFu0ll)
//============================================================================



static void Test_C_BFu31ll_BFu0s()
{
  {
    init_simple_test("C_BFu31ll_BFu0s");
    static STRUCT_IF_C C_BFu31ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu31ll_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu31ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "C_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "C_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu31ll_BFu0s, C_BFu31ll_BFu0s)
//============================================================================



static void Test_C_BFu32i_BFu0c()
{
  {
    init_simple_test("C_BFu32i_BFu0c");
    static STRUCT_IF_C C_BFu32i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(C_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu32i_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu32i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "C_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "C_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu32i_BFu0c, C_BFu32i_BFu0c)
//============================================================================



static void Test_C_BFu32i_BFu0i()
{
  {
    init_simple_test("C_BFu32i_BFu0i");
    static STRUCT_IF_C C_BFu32i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu32i_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu32i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "C_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "C_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu32i_BFu0i, C_BFu32i_BFu0i)
//============================================================================



static void Test_C_BFu32i_BFu0ll()
{
  {
    init_simple_test("C_BFu32i_BFu0ll");
    static STRUCT_IF_C C_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu32i_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu32i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "C_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "C_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu32i_BFu0ll, C_BFu32i_BFu0ll)
//============================================================================



static void Test_C_BFu32i_BFu0s()
{
  {
    init_simple_test("C_BFu32i_BFu0s");
    static STRUCT_IF_C C_BFu32i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu32i_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu32i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "C_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "C_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu32i_BFu0s, C_BFu32i_BFu0s)
//============================================================================



static void Test_C_BFu32ll_BFu0c()
{
  {
    init_simple_test("C_BFu32ll_BFu0c");
    static STRUCT_IF_C C_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(C_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu32ll_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu32ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "C_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "C_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu32ll_BFu0c, C_BFu32ll_BFu0c)
//============================================================================



static void Test_C_BFu32ll_BFu0i()
{
  {
    init_simple_test("C_BFu32ll_BFu0i");
    static STRUCT_IF_C C_BFu32ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu32ll_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu32ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "C_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "C_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu32ll_BFu0i, C_BFu32ll_BFu0i)
//============================================================================



static void Test_C_BFu32ll_BFu0ll()
{
  {
    init_simple_test("C_BFu32ll_BFu0ll");
    static STRUCT_IF_C C_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu32ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu32ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "C_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "C_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu32ll_BFu0ll, C_BFu32ll_BFu0ll)
//============================================================================



static void Test_C_BFu32ll_BFu0s()
{
  {
    init_simple_test("C_BFu32ll_BFu0s");
    static STRUCT_IF_C C_BFu32ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu32ll_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu32ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "C_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "C_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu32ll_BFu0s, C_BFu32ll_BFu0s)
//============================================================================



static void Test_C_BFu33_BFu0c()
{
  {
    init_simple_test("C_BFu33_BFu0c");
    static STRUCT_IF_C C_BFu33_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(C_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu33_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu33_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "C_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "C_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu33_BFu0c, C_BFu33_BFu0c)
//============================================================================



static void Test_C_BFu33_BFu0i()
{
  {
    init_simple_test("C_BFu33_BFu0i");
    static STRUCT_IF_C C_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu33_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu33_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "C_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "C_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu33_BFu0i, C_BFu33_BFu0i)
//============================================================================



static void Test_C_BFu33_BFu0ll()
{
  {
    init_simple_test("C_BFu33_BFu0ll");
    static STRUCT_IF_C C_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu33_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu33_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "C_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "C_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu33_BFu0ll, C_BFu33_BFu0ll)
//============================================================================



static void Test_C_BFu33_BFu0s()
{
  {
    init_simple_test("C_BFu33_BFu0s");
    static STRUCT_IF_C C_BFu33_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(C_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu33_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu33_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "C_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "C_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu33_BFu0s, C_BFu33_BFu0s)
//============================================================================



static void Test_C_BFu7c_BFu0c()
{
  {
    init_simple_test("C_BFu7c_BFu0c");
    static STRUCT_IF_C C_BFu7c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu7c_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu7c_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7c_BFu0c, C_BFu7c_BFu0c)
//============================================================================



static void Test_C_BFu7c_BFu0i()
{
  {
    init_simple_test("C_BFu7c_BFu0i");
    static STRUCT_IF_C C_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu7c_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu7c_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7c_BFu0i, C_BFu7c_BFu0i)
//============================================================================



static void Test_C_BFu7c_BFu0ll()
{
  {
    init_simple_test("C_BFu7c_BFu0ll");
    static STRUCT_IF_C C_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu7c_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu7c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7c_BFu0ll, C_BFu7c_BFu0ll)
//============================================================================



static void Test_C_BFu7c_BFu0s()
{
  {
    init_simple_test("C_BFu7c_BFu0s");
    static STRUCT_IF_C C_BFu7c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu7c_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu7c_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7c_BFu0s, C_BFu7c_BFu0s)
//============================================================================



static void Test_C_BFu7i_BFu0c()
{
  {
    init_simple_test("C_BFu7i_BFu0c");
    static STRUCT_IF_C C_BFu7i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu7i_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu7i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7i_BFu0c, C_BFu7i_BFu0c)
//============================================================================



static void Test_C_BFu7i_BFu0i()
{
  {
    init_simple_test("C_BFu7i_BFu0i");
    static STRUCT_IF_C C_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu7i_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu7i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7i_BFu0i, C_BFu7i_BFu0i)
//============================================================================



static void Test_C_BFu7i_BFu0ll()
{
  {
    init_simple_test("C_BFu7i_BFu0ll");
    static STRUCT_IF_C C_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu7i_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu7i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7i_BFu0ll, C_BFu7i_BFu0ll)
//============================================================================



static void Test_C_BFu7i_BFu0s()
{
  {
    init_simple_test("C_BFu7i_BFu0s");
    static STRUCT_IF_C C_BFu7i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu7i_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu7i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7i_BFu0s, C_BFu7i_BFu0s)
//============================================================================



static void Test_C_BFu7ll_BFu0c()
{
  {
    init_simple_test("C_BFu7ll_BFu0c");
    static STRUCT_IF_C C_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu7ll_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu7ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7ll_BFu0c, C_BFu7ll_BFu0c)
//============================================================================



static void Test_C_BFu7ll_BFu0i()
{
  {
    init_simple_test("C_BFu7ll_BFu0i");
    static STRUCT_IF_C C_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu7ll_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu7ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7ll_BFu0i, C_BFu7ll_BFu0i)
//============================================================================



static void Test_C_BFu7ll_BFu0ll()
{
  {
    init_simple_test("C_BFu7ll_BFu0ll");
    static STRUCT_IF_C C_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu7ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu7ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7ll_BFu0ll, C_BFu7ll_BFu0ll)
//============================================================================



static void Test_C_BFu7ll_BFu0s()
{
  {
    init_simple_test("C_BFu7ll_BFu0s");
    static STRUCT_IF_C C_BFu7ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu7ll_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu7ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7ll_BFu0s, C_BFu7ll_BFu0s)
//============================================================================



static void Test_C_BFu7s_BFu0c()
{
  {
    init_simple_test("C_BFu7s_BFu0c");
    static STRUCT_IF_C C_BFu7s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu7s_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu7s_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7s_BFu0c, C_BFu7s_BFu0c)
//============================================================================



static void Test_C_BFu7s_BFu0i()
{
  {
    init_simple_test("C_BFu7s_BFu0i");
    static STRUCT_IF_C C_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu7s_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu7s_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7s_BFu0i, C_BFu7s_BFu0i)
//============================================================================



static void Test_C_BFu7s_BFu0ll()
{
  {
    init_simple_test("C_BFu7s_BFu0ll");
    static STRUCT_IF_C C_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu7s_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu7s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7s_BFu0ll, C_BFu7s_BFu0ll)
//============================================================================



static void Test_C_BFu7s_BFu0s()
{
  {
    init_simple_test("C_BFu7s_BFu0s");
    static STRUCT_IF_C C_BFu7s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu7s_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu7s_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7s_BFu0s, C_BFu7s_BFu0s)
//============================================================================



static void Test_C_BFu8c_BFu0c()
{
  {
    init_simple_test("C_BFu8c_BFu0c");
    static STRUCT_IF_C C_BFu8c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu8c_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu8c_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8c_BFu0c, C_BFu8c_BFu0c)
//============================================================================



static void Test_C_BFu8c_BFu0i()
{
  {
    init_simple_test("C_BFu8c_BFu0i");
    static STRUCT_IF_C C_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu8c_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu8c_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8c_BFu0i, C_BFu8c_BFu0i)
//============================================================================



static void Test_C_BFu8c_BFu0ll()
{
  {
    init_simple_test("C_BFu8c_BFu0ll");
    static STRUCT_IF_C C_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu8c_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu8c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8c_BFu0ll, C_BFu8c_BFu0ll)
//============================================================================



static void Test_C_BFu8c_BFu0s()
{
  {
    init_simple_test("C_BFu8c_BFu0s");
    static STRUCT_IF_C C_BFu8c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu8c_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu8c_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8c_BFu0s, C_BFu8c_BFu0s)
//============================================================================



static void Test_C_BFu8i_BFu0c()
{
  {
    init_simple_test("C_BFu8i_BFu0c");
    static STRUCT_IF_C C_BFu8i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu8i_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu8i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8i_BFu0c, C_BFu8i_BFu0c)
//============================================================================



static void Test_C_BFu8i_BFu0i()
{
  {
    init_simple_test("C_BFu8i_BFu0i");
    static STRUCT_IF_C C_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu8i_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu8i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8i_BFu0i, C_BFu8i_BFu0i)
//============================================================================



static void Test_C_BFu8i_BFu0ll()
{
  {
    init_simple_test("C_BFu8i_BFu0ll");
    static STRUCT_IF_C C_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu8i_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu8i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8i_BFu0ll, C_BFu8i_BFu0ll)
//============================================================================



static void Test_C_BFu8i_BFu0s()
{
  {
    init_simple_test("C_BFu8i_BFu0s");
    static STRUCT_IF_C C_BFu8i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu8i_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu8i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8i_BFu0s, C_BFu8i_BFu0s)
//============================================================================



static void Test_C_BFu8ll_BFu0c()
{
  {
    init_simple_test("C_BFu8ll_BFu0c");
    static STRUCT_IF_C C_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu8ll_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu8ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8ll_BFu0c, C_BFu8ll_BFu0c)
//============================================================================



static void Test_C_BFu8ll_BFu0i()
{
  {
    init_simple_test("C_BFu8ll_BFu0i");
    static STRUCT_IF_C C_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu8ll_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu8ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8ll_BFu0i, C_BFu8ll_BFu0i)
//============================================================================



static void Test_C_BFu8ll_BFu0ll()
{
  {
    init_simple_test("C_BFu8ll_BFu0ll");
    static STRUCT_IF_C C_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu8ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu8ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8ll_BFu0ll, C_BFu8ll_BFu0ll)
//============================================================================



static void Test_C_BFu8ll_BFu0s()
{
  {
    init_simple_test("C_BFu8ll_BFu0s");
    static STRUCT_IF_C C_BFu8ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu8ll_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu8ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8ll_BFu0s, C_BFu8ll_BFu0s)
//============================================================================



static void Test_C_BFu8s_BFu0c()
{
  {
    init_simple_test("C_BFu8s_BFu0c");
    static STRUCT_IF_C C_BFu8s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu8s_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu8s_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8s_BFu0c, C_BFu8s_BFu0c)
//============================================================================



static void Test_C_BFu8s_BFu0i()
{
  {
    init_simple_test("C_BFu8s_BFu0i");
    static STRUCT_IF_C C_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu8s_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu8s_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8s_BFu0i, C_BFu8s_BFu0i)
//============================================================================



static void Test_C_BFu8s_BFu0ll()
{
  {
    init_simple_test("C_BFu8s_BFu0ll");
    static STRUCT_IF_C C_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu8s_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu8s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8s_BFu0ll, C_BFu8s_BFu0ll)
//============================================================================



static void Test_C_BFu8s_BFu0s()
{
  {
    init_simple_test("C_BFu8s_BFu0s");
    static STRUCT_IF_C C_BFu8s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu8s_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu8s_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8s_BFu0s, C_BFu8s_BFu0s)
//============================================================================



static void Test_C_BFu9i_BFu0c()
{
  {
    init_simple_test("C_BFu9i_BFu0c");
    static STRUCT_IF_C C_BFu9i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu9i_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu9i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu9i_BFu0c, C_BFu9i_BFu0c)
//============================================================================



static void Test_C_BFu9i_BFu0i()
{
  {
    init_simple_test("C_BFu9i_BFu0i");
    static STRUCT_IF_C C_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu9i_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu9i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu9i_BFu0i, C_BFu9i_BFu0i)
//============================================================================



static void Test_C_BFu9i_BFu0ll()
{
  {
    init_simple_test("C_BFu9i_BFu0ll");
    static STRUCT_IF_C C_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu9i_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu9i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu9i_BFu0ll, C_BFu9i_BFu0ll)
//============================================================================



static void Test_C_BFu9i_BFu0s()
{
  {
    init_simple_test("C_BFu9i_BFu0s");
    static STRUCT_IF_C C_BFu9i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu9i_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu9i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu9i_BFu0s, C_BFu9i_BFu0s)
//============================================================================



static void Test_C_BFu9ll_BFu0c()
{
  {
    init_simple_test("C_BFu9ll_BFu0c");
    static STRUCT_IF_C C_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu9ll_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu9ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu9ll_BFu0c, C_BFu9ll_BFu0c)
//============================================================================



static void Test_C_BFu9ll_BFu0i()
{
  {
    init_simple_test("C_BFu9ll_BFu0i");
    static STRUCT_IF_C C_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu9ll_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu9ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu9ll_BFu0i, C_BFu9ll_BFu0i)
//============================================================================



static void Test_C_BFu9ll_BFu0ll()
{
  {
    init_simple_test("C_BFu9ll_BFu0ll");
    static STRUCT_IF_C C_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu9ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu9ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu9ll_BFu0ll, C_BFu9ll_BFu0ll)
//============================================================================



static void Test_C_BFu9ll_BFu0s()
{
  {
    init_simple_test("C_BFu9ll_BFu0s");
    static STRUCT_IF_C C_BFu9ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu9ll_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu9ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu9ll_BFu0s, C_BFu9ll_BFu0s)
//============================================================================



static void Test_C_BFu9s_BFu0c()
{
  {
    init_simple_test("C_BFu9s_BFu0c");
    static STRUCT_IF_C C_BFu9s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu9s_BFu0c)");
    check_field_offset(lv, v1, 0, "C_BFu9s_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu9s_BFu0c, C_BFu9s_BFu0c)
//============================================================================



static void Test_C_BFu9s_BFu0i()
{
  {
    init_simple_test("C_BFu9s_BFu0i");
    static STRUCT_IF_C C_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu9s_BFu0i)");
    check_field_offset(lv, v1, 0, "C_BFu9s_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu9s_BFu0i, C_BFu9s_BFu0i)
//============================================================================



static void Test_C_BFu9s_BFu0ll()
{
  {
    init_simple_test("C_BFu9s_BFu0ll");
    static STRUCT_IF_C C_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu9s_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_BFu9s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu9s_BFu0ll, C_BFu9s_BFu0ll)
//============================================================================



static void Test_C_BFu9s_BFu0s()
{
  {
    init_simple_test("C_BFu9s_BFu0s");
    static STRUCT_IF_C C_BFu9s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_BFu9s_BFu0s)");
    check_field_offset(lv, v1, 0, "C_BFu9s_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu9s_BFu0s, C_BFu9s_BFu0s)
//============================================================================



static void Test_C_C_BFu0c()
{
  {
    init_simple_test("C_C_BFu0c");
    static STRUCT_IF_C C_C_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(C_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_C_BFu0c)");
    check_field_offset(lv, v1, 0, "C_C_BFu0c.v1");
    check_field_offset(lv, v2, 1, "C_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_C_BFu0c, C_C_BFu0c)
//============================================================================



static void Test_C_C_BFu0i()
{
  {
    init_simple_test("C_C_BFu0i");
    static STRUCT_IF_C C_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_C_BFu0i)");
    check_field_offset(lv, v1, 0, "C_C_BFu0i.v1");
    check_field_offset(lv, v2, 1, "C_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_C_BFu0i, C_C_BFu0i)
//============================================================================



static void Test_C_C_BFu0ll()
{
  {
    init_simple_test("C_C_BFu0ll");
    static STRUCT_IF_C C_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_C_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_C_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "C_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_C_BFu0ll, C_C_BFu0ll)
//============================================================================



static void Test_C_C_BFu0s()
{
  {
    init_simple_test("C_C_BFu0s");
    static STRUCT_IF_C C_C_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(C_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_C_BFu0s)");
    check_field_offset(lv, v1, 0, "C_C_BFu0s.v1");
    check_field_offset(lv, v2, 1, "C_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_C_BFu0s, C_C_BFu0s)
//============================================================================



static void Test_C_D_BFu0c()
{
  {
    init_simple_test("C_D_BFu0c");
    static STRUCT_IF_C C_D_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(C_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_D_BFu0c)");
    check_field_offset(lv, v1, 0, "C_D_BFu0c.v1");
    check_field_offset(lv, v2, 1, "C_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_D_BFu0c, C_D_BFu0c)
//============================================================================



static void Test_C_D_BFu0i()
{
  {
    init_simple_test("C_D_BFu0i");
    static STRUCT_IF_C C_D_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(C_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_D_BFu0i)");
    check_field_offset(lv, v1, 0, "C_D_BFu0i.v1");
    check_field_offset(lv, v2, 1, "C_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_D_BFu0i, C_D_BFu0i)
//============================================================================



static void Test_C_D_BFu0ll()
{
  {
    init_simple_test("C_D_BFu0ll");
    static STRUCT_IF_C C_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(C_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_D_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_D_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "C_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_D_BFu0ll, C_D_BFu0ll)
//============================================================================



static void Test_C_D_BFu0s()
{
  {
    init_simple_test("C_D_BFu0s");
    static STRUCT_IF_C C_D_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(C_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_D_BFu0s)");
    check_field_offset(lv, v1, 0, "C_D_BFu0s.v1");
    check_field_offset(lv, v2, 1, "C_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_D_BFu0s, C_D_BFu0s)
//============================================================================



static void Test_C_F_BFu0c()
{
  {
    init_simple_test("C_F_BFu0c");
    static STRUCT_IF_C C_F_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(C_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_F_BFu0c)");
    check_field_offset(lv, v1, 0, "C_F_BFu0c.v1");
    check_field_offset(lv, v2, 1, "C_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_F_BFu0c, C_F_BFu0c)
//============================================================================



static void Test_C_F_BFu0i()
{
  {
    init_simple_test("C_F_BFu0i");
    static STRUCT_IF_C C_F_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_F_BFu0i)");
    check_field_offset(lv, v1, 0, "C_F_BFu0i.v1");
    check_field_offset(lv, v2, 1, "C_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_F_BFu0i, C_F_BFu0i)
//============================================================================



static void Test_C_F_BFu0ll()
{
  {
    init_simple_test("C_F_BFu0ll");
    static STRUCT_IF_C C_F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_F_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_F_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "C_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_F_BFu0ll, C_F_BFu0ll)
//============================================================================



static void Test_C_F_BFu0s()
{
  {
    init_simple_test("C_F_BFu0s");
    static STRUCT_IF_C C_F_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_F_BFu0s)");
    check_field_offset(lv, v1, 0, "C_F_BFu0s.v1");
    check_field_offset(lv, v2, 1, "C_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_F_BFu0s, C_F_BFu0s)
//============================================================================



static void Test_C_I_BFu0c()
{
  {
    init_simple_test("C_I_BFu0c");
    static STRUCT_IF_C C_I_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(C_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_I_BFu0c)");
    check_field_offset(lv, v1, 0, "C_I_BFu0c.v1");
    check_field_offset(lv, v2, 1, "C_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_I_BFu0c, C_I_BFu0c)
//============================================================================



static void Test_C_I_BFu0i()
{
  {
    init_simple_test("C_I_BFu0i");
    static STRUCT_IF_C C_I_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_I_BFu0i)");
    check_field_offset(lv, v1, 0, "C_I_BFu0i.v1");
    check_field_offset(lv, v2, 1, "C_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_I_BFu0i, C_I_BFu0i)
//============================================================================



static void Test_C_I_BFu0ll()
{
  {
    init_simple_test("C_I_BFu0ll");
    static STRUCT_IF_C C_I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_I_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_I_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "C_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_I_BFu0ll, C_I_BFu0ll)
//============================================================================



static void Test_C_I_BFu0s()
{
  {
    init_simple_test("C_I_BFu0s");
    static STRUCT_IF_C C_I_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_I_BFu0s)");
    check_field_offset(lv, v1, 0, "C_I_BFu0s.v1");
    check_field_offset(lv, v2, 1, "C_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_I_BFu0s, C_I_BFu0s)
//============================================================================



static void Test_C_Ip_BFu0c()
{
  {
    init_simple_test("C_Ip_BFu0c");
    static STRUCT_IF_C C_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_Ip_BFu0c)");
    check_field_offset(lv, v1, 0, "C_Ip_BFu0c.v1");
    check_field_offset(lv, v2, 1, "C_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Ip_BFu0c, C_Ip_BFu0c)
//============================================================================



static void Test_C_Ip_BFu0i()
{
  {
    init_simple_test("C_Ip_BFu0i");
    static STRUCT_IF_C C_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(C_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Ip_BFu0i)");
    check_field_offset(lv, v1, 0, "C_Ip_BFu0i.v1");
    check_field_offset(lv, v2, 1, "C_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Ip_BFu0i, C_Ip_BFu0i)
//============================================================================



static void Test_C_Ip_BFu0ll()
{
  {
    init_simple_test("C_Ip_BFu0ll");
    static STRUCT_IF_C C_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(C_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Ip_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_Ip_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "C_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Ip_BFu0ll, C_Ip_BFu0ll)
//============================================================================



static void Test_C_Ip_BFu0s()
{
  {
    init_simple_test("C_Ip_BFu0s");
    static STRUCT_IF_C C_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(C_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Ip_BFu0s)");
    check_field_offset(lv, v1, 0, "C_Ip_BFu0s.v1");
    check_field_offset(lv, v2, 1, "C_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Ip_BFu0s, C_Ip_BFu0s)
//============================================================================



static void Test_C_L_BFu0c()
{
  {
    init_simple_test("C_L_BFu0c");
    static STRUCT_IF_C C_L_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(C_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_L_BFu0c)");
    check_field_offset(lv, v1, 0, "C_L_BFu0c.v1");
    check_field_offset(lv, v2, 1, "C_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_L_BFu0c, C_L_BFu0c)
//============================================================================



static void Test_C_L_BFu0i()
{
  {
    init_simple_test("C_L_BFu0i");
    static STRUCT_IF_C C_L_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(C_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_L_BFu0i)");
    check_field_offset(lv, v1, 0, "C_L_BFu0i.v1");
    check_field_offset(lv, v2, 1, "C_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_L_BFu0i, C_L_BFu0i)
//============================================================================



static void Test_C_L_BFu0ll()
{
  {
    init_simple_test("C_L_BFu0ll");
    static STRUCT_IF_C C_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(C_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_L_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_L_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "C_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_L_BFu0ll, C_L_BFu0ll)
//============================================================================



static void Test_C_L_BFu0s()
{
  {
    init_simple_test("C_L_BFu0s");
    static STRUCT_IF_C C_L_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(C_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_L_BFu0s)");
    check_field_offset(lv, v1, 0, "C_L_BFu0s.v1");
    check_field_offset(lv, v2, 1, "C_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_L_BFu0s, C_L_BFu0s)
//============================================================================



static void Test_C_S_BFu0c()
{
  {
    init_simple_test("C_S_BFu0c");
    static STRUCT_IF_C C_S_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(C_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_S_BFu0c)");
    check_field_offset(lv, v1, 0, "C_S_BFu0c.v1");
    check_field_offset(lv, v2, 1, "C_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_S_BFu0c, C_S_BFu0c)
//============================================================================



static void Test_C_S_BFu0i()
{
  {
    init_simple_test("C_S_BFu0i");
    static STRUCT_IF_C C_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_S_BFu0i)");
    check_field_offset(lv, v1, 0, "C_S_BFu0i.v1");
    check_field_offset(lv, v2, 1, "C_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_S_BFu0i, C_S_BFu0i)
//============================================================================



static void Test_C_S_BFu0ll()
{
  {
    init_simple_test("C_S_BFu0ll");
    static STRUCT_IF_C C_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_S_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_S_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "C_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_S_BFu0ll, C_S_BFu0ll)
//============================================================================



static void Test_C_S_BFu0s()
{
  {
    init_simple_test("C_S_BFu0s");
    static STRUCT_IF_C C_S_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_S_BFu0s)");
    check_field_offset(lv, v1, 0, "C_S_BFu0s.v1");
    check_field_offset(lv, v2, 1, "C_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_S_BFu0s, C_S_BFu0s)
//============================================================================



static void Test_C_Uc_BFu0c()
{
  {
    init_simple_test("C_Uc_BFu0c");
    static STRUCT_IF_C C_Uc_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(C_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_Uc_BFu0c)");
    check_field_offset(lv, v1, 0, "C_Uc_BFu0c.v1");
    check_field_offset(lv, v2, 1, "C_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Uc_BFu0c, C_Uc_BFu0c)
//============================================================================



static void Test_C_Uc_BFu0i()
{
  {
    init_simple_test("C_Uc_BFu0i");
    static STRUCT_IF_C C_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Uc_BFu0i)");
    check_field_offset(lv, v1, 0, "C_Uc_BFu0i.v1");
    check_field_offset(lv, v2, 1, "C_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Uc_BFu0i, C_Uc_BFu0i)
//============================================================================



static void Test_C_Uc_BFu0ll()
{
  {
    init_simple_test("C_Uc_BFu0ll");
    static STRUCT_IF_C C_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Uc_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_Uc_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "C_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Uc_BFu0ll, C_Uc_BFu0ll)
//============================================================================



static void Test_C_Uc_BFu0s()
{
  {
    init_simple_test("C_Uc_BFu0s");
    static STRUCT_IF_C C_Uc_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(C_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Uc_BFu0s)");
    check_field_offset(lv, v1, 0, "C_Uc_BFu0s.v1");
    check_field_offset(lv, v2, 1, "C_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Uc_BFu0s, C_Uc_BFu0s)
//============================================================================



static void Test_C_Ui_BFu0c()
{
  {
    init_simple_test("C_Ui_BFu0c");
    static STRUCT_IF_C C_Ui_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(C_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_Ui_BFu0c)");
    check_field_offset(lv, v1, 0, "C_Ui_BFu0c.v1");
    check_field_offset(lv, v2, 1, "C_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Ui_BFu0c, C_Ui_BFu0c)
//============================================================================



static void Test_C_Ui_BFu0i()
{
  {
    init_simple_test("C_Ui_BFu0i");
    static STRUCT_IF_C C_Ui_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Ui_BFu0i)");
    check_field_offset(lv, v1, 0, "C_Ui_BFu0i.v1");
    check_field_offset(lv, v2, 1, "C_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Ui_BFu0i, C_Ui_BFu0i)
//============================================================================



static void Test_C_Ui_BFu0ll()
{
  {
    init_simple_test("C_Ui_BFu0ll");
    static STRUCT_IF_C C_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(C_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Ui_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_Ui_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "C_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Ui_BFu0ll, C_Ui_BFu0ll)
//============================================================================



static void Test_C_Ui_BFu0s()
{
  {
    init_simple_test("C_Ui_BFu0s");
    static STRUCT_IF_C C_Ui_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(C_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Ui_BFu0s)");
    check_field_offset(lv, v1, 0, "C_Ui_BFu0s.v1");
    check_field_offset(lv, v2, 1, "C_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Ui_BFu0s, C_Ui_BFu0s)
//============================================================================



static void Test_C_Ul_BFu0c()
{
  {
    init_simple_test("C_Ul_BFu0c");
    static STRUCT_IF_C C_Ul_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(C_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_Ul_BFu0c)");
    check_field_offset(lv, v1, 0, "C_Ul_BFu0c.v1");
    check_field_offset(lv, v2, 1, "C_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Ul_BFu0c, C_Ul_BFu0c)
//============================================================================



static void Test_C_Ul_BFu0i()
{
  {
    init_simple_test("C_Ul_BFu0i");
    static STRUCT_IF_C C_Ul_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(C_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Ul_BFu0i)");
    check_field_offset(lv, v1, 0, "C_Ul_BFu0i.v1");
    check_field_offset(lv, v2, 1, "C_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Ul_BFu0i, C_Ul_BFu0i)
//============================================================================



static void Test_C_Ul_BFu0ll()
{
  {
    init_simple_test("C_Ul_BFu0ll");
    static STRUCT_IF_C C_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(C_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Ul_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_Ul_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "C_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Ul_BFu0ll, C_Ul_BFu0ll)
//============================================================================



static void Test_C_Ul_BFu0s()
{
  {
    init_simple_test("C_Ul_BFu0s");
    static STRUCT_IF_C C_Ul_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(C_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Ul_BFu0s)");
    check_field_offset(lv, v1, 0, "C_Ul_BFu0s.v1");
    check_field_offset(lv, v2, 1, "C_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Ul_BFu0s, C_Ul_BFu0s)
//============================================================================



static void Test_C_Us_BFu0c()
{
  {
    init_simple_test("C_Us_BFu0c");
    static STRUCT_IF_C C_Us_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(C_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_Us_BFu0c)");
    check_field_offset(lv, v1, 0, "C_Us_BFu0c.v1");
    check_field_offset(lv, v2, 1, "C_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Us_BFu0c, C_Us_BFu0c)
//============================================================================



static void Test_C_Us_BFu0i()
{
  {
    init_simple_test("C_Us_BFu0i");
    static STRUCT_IF_C C_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Us_BFu0i)");
    check_field_offset(lv, v1, 0, "C_Us_BFu0i.v1");
    check_field_offset(lv, v2, 1, "C_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Us_BFu0i, C_Us_BFu0i)
//============================================================================



static void Test_C_Us_BFu0ll()
{
  {
    init_simple_test("C_Us_BFu0ll");
    static STRUCT_IF_C C_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(C_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Us_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_Us_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "C_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Us_BFu0ll, C_Us_BFu0ll)
//============================================================================



static void Test_C_Us_BFu0s()
{
  {
    init_simple_test("C_Us_BFu0s");
    static STRUCT_IF_C C_Us_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(C_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Us_BFu0s)");
    check_field_offset(lv, v1, 0, "C_Us_BFu0s.v1");
    check_field_offset(lv, v2, 1, "C_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Us_BFu0s, C_Us_BFu0s)
//============================================================================



static void Test_C_Vp_BFu0c()
{
  {
    init_simple_test("C_Vp_BFu0c");
    static STRUCT_IF_C C_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(C_Vp_BFu0c)");
    check_field_offset(lv, v1, 0, "C_Vp_BFu0c.v1");
    check_field_offset(lv, v2, 1, "C_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Vp_BFu0c, C_Vp_BFu0c)
//============================================================================



static void Test_C_Vp_BFu0i()
{
  {
    init_simple_test("C_Vp_BFu0i");
    static STRUCT_IF_C C_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(C_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Vp_BFu0i)");
    check_field_offset(lv, v1, 0, "C_Vp_BFu0i.v1");
    check_field_offset(lv, v2, 1, "C_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Vp_BFu0i, C_Vp_BFu0i)
//============================================================================



static void Test_C_Vp_BFu0ll()
{
  {
    init_simple_test("C_Vp_BFu0ll");
    static STRUCT_IF_C C_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(C_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Vp_BFu0ll)");
    check_field_offset(lv, v1, 0, "C_Vp_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "C_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Vp_BFu0ll, C_Vp_BFu0ll)
//============================================================================



static void Test_C_Vp_BFu0s()
{
  {
    init_simple_test("C_Vp_BFu0s");
    static STRUCT_IF_C C_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(C_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(C_Vp_BFu0s)");
    check_field_offset(lv, v1, 0, "C_Vp_BFu0s.v1");
    check_field_offset(lv, v2, 1, "C_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Vp_BFu0s, C_Vp_BFu0s)
//============================================================================



static void Test_D_BFu0c()
{
  {
    init_simple_test("D_BFu0c");
    static STRUCT_IF_C D_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c, D_BFu0c)
//============================================================================



static void Test_D_BFu0c_BFu0c()
{
  {
    init_simple_test("D_BFu0c_BFu0c");
    static STRUCT_IF_C D_BFu0c_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu0c, D_BFu0c_BFu0c)
//============================================================================



static void Test_D_BFu0c_BFu0i()
{
  {
    init_simple_test("D_BFu0c_BFu0i");
    static STRUCT_IF_C D_BFu0c_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0c_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu0i, D_BFu0c_BFu0i)
//============================================================================



static void Test_D_BFu0c_BFu0ll()
{
  {
    init_simple_test("D_BFu0c_BFu0ll");
    static STRUCT_IF_C D_BFu0c_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0c_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu0ll, D_BFu0c_BFu0ll)
//============================================================================



static void Test_D_BFu0c_BFu0s()
{
  {
    init_simple_test("D_BFu0c_BFu0s");
    static STRUCT_IF_C D_BFu0c_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0c_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu0s, D_BFu0c_BFu0s)
//============================================================================



static void Test_D_BFu0c_BFu15i()
{
  {
    init_simple_test("D_BFu0c_BFu15i");
    static STRUCT_IF_C D_BFu0c_BFu15i lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu15i)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu15i.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu15i, D_BFu0c_BFu15i)
//============================================================================



static void Test_D_BFu0c_BFu15ll()
{
  {
    init_simple_test("D_BFu0c_BFu15ll");
    static STRUCT_IF_C D_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu15ll)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu15ll, D_BFu0c_BFu15ll)
//============================================================================



static void Test_D_BFu0c_BFu15s()
{
  {
    init_simple_test("D_BFu0c_BFu15s");
    static STRUCT_IF_C D_BFu0c_BFu15s lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu15s)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu15s.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu15s, D_BFu0c_BFu15s)
//============================================================================



static void Test_D_BFu0c_BFu16i()
{
  {
    init_simple_test("D_BFu0c_BFu16i");
    static STRUCT_IF_C D_BFu0c_BFu16i lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu16i)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu16i.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu16i, D_BFu0c_BFu16i)
//============================================================================



static void Test_D_BFu0c_BFu16ll()
{
  {
    init_simple_test("D_BFu0c_BFu16ll");
    static STRUCT_IF_C D_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu16ll)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu16ll, D_BFu0c_BFu16ll)
//============================================================================



static void Test_D_BFu0c_BFu16s()
{
  {
    init_simple_test("D_BFu0c_BFu16s");
    static STRUCT_IF_C D_BFu0c_BFu16s lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu16s)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu16s.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu16s, D_BFu0c_BFu16s)
//============================================================================



static void Test_D_BFu0c_BFu17i()
{
  {
    init_simple_test("D_BFu0c_BFu17i");
    static STRUCT_IF_C D_BFu0c_BFu17i lv;
    check2(sizeof(lv), 11, "sizeof(D_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu17i)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu17i.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu17i, D_BFu0c_BFu17i)
//============================================================================



static void Test_D_BFu0c_BFu17ll()
{
  {
    init_simple_test("D_BFu0c_BFu17ll");
    static STRUCT_IF_C D_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 11, "sizeof(D_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu17ll)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu17ll, D_BFu0c_BFu17ll)
//============================================================================



static void Test_D_BFu0c_BFu1c()
{
  {
    init_simple_test("D_BFu0c_BFu1c");
    static STRUCT_IF_C D_BFu0c_BFu1c lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu1c)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu1c.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu1c, D_BFu0c_BFu1c)
//============================================================================



static void Test_D_BFu0c_BFu1i()
{
  {
    init_simple_test("D_BFu0c_BFu1i");
    static STRUCT_IF_C D_BFu0c_BFu1i lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu1i)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu1i.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu1i, D_BFu0c_BFu1i)
//============================================================================



static void Test_D_BFu0c_BFu1ll()
{
  {
    init_simple_test("D_BFu0c_BFu1ll");
    static STRUCT_IF_C D_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu1ll)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu1ll, D_BFu0c_BFu1ll)
//============================================================================



static void Test_D_BFu0c_BFu1s()
{
  {
    init_simple_test("D_BFu0c_BFu1s");
    static STRUCT_IF_C D_BFu0c_BFu1s lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu1s)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu1s.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu1s, D_BFu0c_BFu1s)
//============================================================================



static void Test_D_BFu0c_BFu31i()
{
  {
    init_simple_test("D_BFu0c_BFu31i");
    static STRUCT_IF_C D_BFu0c_BFu31i lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu31i)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu31i.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu31i, D_BFu0c_BFu31i)
//============================================================================



static void Test_D_BFu0c_BFu31ll()
{
  {
    init_simple_test("D_BFu0c_BFu31ll");
    static STRUCT_IF_C D_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu31ll)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu31ll, D_BFu0c_BFu31ll)
//============================================================================



static void Test_D_BFu0c_BFu32i()
{
  {
    init_simple_test("D_BFu0c_BFu32i");
    static STRUCT_IF_C D_BFu0c_BFu32i lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu32i)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu32i.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu32i, D_BFu0c_BFu32i)
//============================================================================



static void Test_D_BFu0c_BFu32ll()
{
  {
    init_simple_test("D_BFu0c_BFu32ll");
    static STRUCT_IF_C D_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu32ll)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu32ll, D_BFu0c_BFu32ll)
//============================================================================



static void Test_D_BFu0c_BFu33()
{
  {
    init_simple_test("D_BFu0c_BFu33");
    static STRUCT_IF_C D_BFu0c_BFu33 lv;
    check2(sizeof(lv), 13, "sizeof(D_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu33)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu33.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "D_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "D_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu33, D_BFu0c_BFu33)
//============================================================================



static void Test_D_BFu0c_BFu7c()
{
  {
    init_simple_test("D_BFu0c_BFu7c");
    static STRUCT_IF_C D_BFu0c_BFu7c lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu7c)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu7c.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu7c, D_BFu0c_BFu7c)
//============================================================================



static void Test_D_BFu0c_BFu7i()
{
  {
    init_simple_test("D_BFu0c_BFu7i");
    static STRUCT_IF_C D_BFu0c_BFu7i lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu7i)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu7i.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu7i, D_BFu0c_BFu7i)
//============================================================================



static void Test_D_BFu0c_BFu7ll()
{
  {
    init_simple_test("D_BFu0c_BFu7ll");
    static STRUCT_IF_C D_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu7ll)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu7ll, D_BFu0c_BFu7ll)
//============================================================================



static void Test_D_BFu0c_BFu7s()
{
  {
    init_simple_test("D_BFu0c_BFu7s");
    static STRUCT_IF_C D_BFu0c_BFu7s lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu7s)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu7s.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu7s, D_BFu0c_BFu7s)
//============================================================================



static void Test_D_BFu0c_BFu8c()
{
  {
    init_simple_test("D_BFu0c_BFu8c");
    static STRUCT_IF_C D_BFu0c_BFu8c lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu8c)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu8c.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu8c, D_BFu0c_BFu8c)
//============================================================================



static void Test_D_BFu0c_BFu8i()
{
  {
    init_simple_test("D_BFu0c_BFu8i");
    static STRUCT_IF_C D_BFu0c_BFu8i lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu8i)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu8i.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu8i, D_BFu0c_BFu8i)
//============================================================================



static void Test_D_BFu0c_BFu8ll()
{
  {
    init_simple_test("D_BFu0c_BFu8ll");
    static STRUCT_IF_C D_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu8ll)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu8ll, D_BFu0c_BFu8ll)
//============================================================================



static void Test_D_BFu0c_BFu8s()
{
  {
    init_simple_test("D_BFu0c_BFu8s");
    static STRUCT_IF_C D_BFu0c_BFu8s lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu8s)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu8s.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu8s, D_BFu0c_BFu8s)
//============================================================================



static void Test_D_BFu0c_BFu9i()
{
  {
    init_simple_test("D_BFu0c_BFu9i");
    static STRUCT_IF_C D_BFu0c_BFu9i lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu9i)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu9i.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu9i, D_BFu0c_BFu9i)
//============================================================================



static void Test_D_BFu0c_BFu9ll()
{
  {
    init_simple_test("D_BFu0c_BFu9ll");
    static STRUCT_IF_C D_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu9ll)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu9ll, D_BFu0c_BFu9ll)
//============================================================================



static void Test_D_BFu0c_BFu9s()
{
  {
    init_simple_test("D_BFu0c_BFu9s");
    static STRUCT_IF_C D_BFu0c_BFu9s lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_BFu9s)");
    check_field_offset(lv, v1, 0, "D_BFu0c_BFu9s.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_BFu9s, D_BFu0c_BFu9s)
//============================================================================



static void Test_D_BFu0c_C()
{
  {
    init_simple_test("D_BFu0c_C");
    static STRUCT_IF_C D_BFu0c_C lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_C)");
    check_field_offset(lv, v1, 0, "D_BFu0c_C.v1");
    check_field_offset(lv, v2, 8, "D_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_C, D_BFu0c_C)
//============================================================================



static void Test_D_BFu0c_D()
{
  {
    init_simple_test("D_BFu0c_D");
    static STRUCT_IF_C D_BFu0c_D lv;
    check2(sizeof(lv), 16, "sizeof(D_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_D)");
    check_field_offset(lv, v1, 0, "D_BFu0c_D.v1");
    check_field_offset(lv, v2, 8, "D_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_D, D_BFu0c_D)
//============================================================================



static void Test_D_BFu0c_F()
{
  {
    init_simple_test("D_BFu0c_F");
    static STRUCT_IF_C D_BFu0c_F lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_F)");
    check_field_offset(lv, v1, 0, "D_BFu0c_F.v1");
    check_field_offset(lv, v2, 8, "D_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_F, D_BFu0c_F)
//============================================================================



static void Test_D_BFu0c_I()
{
  {
    init_simple_test("D_BFu0c_I");
    static STRUCT_IF_C D_BFu0c_I lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_I)");
    check_field_offset(lv, v1, 0, "D_BFu0c_I.v1");
    check_field_offset(lv, v2, 8, "D_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_I, D_BFu0c_I)
//============================================================================



static void Test_D_BFu0c_Ip()
{
  {
    init_simple_test("D_BFu0c_Ip");
    static STRUCT_IF_C D_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_Ip)");
    check_field_offset(lv, v1, 0, "D_BFu0c_Ip.v1");
    check_field_offset(lv, v2, 8, "D_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_Ip, D_BFu0c_Ip)
//============================================================================



static void Test_D_BFu0c_L()
{
  {
    init_simple_test("D_BFu0c_L");
    static STRUCT_IF_C D_BFu0c_L lv;
    check2(sizeof(lv), 16, "sizeof(D_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_L)");
    check_field_offset(lv, v1, 0, "D_BFu0c_L.v1");
    check_field_offset(lv, v2, 8, "D_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_L, D_BFu0c_L)
//============================================================================



static void Test_D_BFu0c_S()
{
  {
    init_simple_test("D_BFu0c_S");
    static STRUCT_IF_C D_BFu0c_S lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_S)");
    check_field_offset(lv, v1, 0, "D_BFu0c_S.v1");
    check_field_offset(lv, v2, 8, "D_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_S, D_BFu0c_S)
//============================================================================



static void Test_D_BFu0c_Uc()
{
  {
    init_simple_test("D_BFu0c_Uc");
    static STRUCT_IF_C D_BFu0c_Uc lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_Uc)");
    check_field_offset(lv, v1, 0, "D_BFu0c_Uc.v1");
    check_field_offset(lv, v2, 8, "D_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_Uc, D_BFu0c_Uc)
//============================================================================



static void Test_D_BFu0c_Ui()
{
  {
    init_simple_test("D_BFu0c_Ui");
    static STRUCT_IF_C D_BFu0c_Ui lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_Ui)");
    check_field_offset(lv, v1, 0, "D_BFu0c_Ui.v1");
    check_field_offset(lv, v2, 8, "D_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_Ui, D_BFu0c_Ui)
//============================================================================



static void Test_D_BFu0c_Ul()
{
  {
    init_simple_test("D_BFu0c_Ul");
    static STRUCT_IF_C D_BFu0c_Ul lv;
    check2(sizeof(lv), 16, "sizeof(D_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_Ul)");
    check_field_offset(lv, v1, 0, "D_BFu0c_Ul.v1");
    check_field_offset(lv, v2, 8, "D_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_Ul, D_BFu0c_Ul)
//============================================================================



static void Test_D_BFu0c_Us()
{
  {
    init_simple_test("D_BFu0c_Us");
    static STRUCT_IF_C D_BFu0c_Us lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_Us)");
    check_field_offset(lv, v1, 0, "D_BFu0c_Us.v1");
    check_field_offset(lv, v2, 8, "D_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_Us, D_BFu0c_Us)
//============================================================================



static void Test_D_BFu0c_Vp()
{
  {
    init_simple_test("D_BFu0c_Vp");
    static STRUCT_IF_C D_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu0c_Vp)");
    check_field_offset(lv, v1, 0, "D_BFu0c_Vp.v1");
    check_field_offset(lv, v2, 8, "D_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0c_Vp, D_BFu0c_Vp)
//============================================================================



static void Test_D_BFu0i()
{
  {
    init_simple_test("D_BFu0i");
    static STRUCT_IF_C D_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i, D_BFu0i)
//============================================================================



static void Test_D_BFu0i_BFu0c()
{
  {
    init_simple_test("D_BFu0i_BFu0c");
    static STRUCT_IF_C D_BFu0i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu0c, D_BFu0i_BFu0c)
//============================================================================



static void Test_D_BFu0i_BFu0i()
{
  {
    init_simple_test("D_BFu0i_BFu0i");
    static STRUCT_IF_C D_BFu0i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu0i, D_BFu0i_BFu0i)
//============================================================================



static void Test_D_BFu0i_BFu0ll()
{
  {
    init_simple_test("D_BFu0i_BFu0ll");
    static STRUCT_IF_C D_BFu0i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu0ll, D_BFu0i_BFu0ll)
//============================================================================



static void Test_D_BFu0i_BFu0s()
{
  {
    init_simple_test("D_BFu0i_BFu0s");
    static STRUCT_IF_C D_BFu0i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu0s, D_BFu0i_BFu0s)
//============================================================================



static void Test_D_BFu0i_BFu15i()
{
  {
    init_simple_test("D_BFu0i_BFu15i");
    static STRUCT_IF_C D_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu15i)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu15i.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu15i, D_BFu0i_BFu15i)
//============================================================================



static void Test_D_BFu0i_BFu15ll()
{
  {
    init_simple_test("D_BFu0i_BFu15ll");
    static STRUCT_IF_C D_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu15ll)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu15ll, D_BFu0i_BFu15ll)
//============================================================================



static void Test_D_BFu0i_BFu15s()
{
  {
    init_simple_test("D_BFu0i_BFu15s");
    static STRUCT_IF_C D_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu15s)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu15s.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu15s, D_BFu0i_BFu15s)
//============================================================================



static void Test_D_BFu0i_BFu16i()
{
  {
    init_simple_test("D_BFu0i_BFu16i");
    static STRUCT_IF_C D_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu16i)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu16i.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu16i, D_BFu0i_BFu16i)
//============================================================================



static void Test_D_BFu0i_BFu16ll()
{
  {
    init_simple_test("D_BFu0i_BFu16ll");
    static STRUCT_IF_C D_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu16ll)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu16ll, D_BFu0i_BFu16ll)
//============================================================================



static void Test_D_BFu0i_BFu16s()
{
  {
    init_simple_test("D_BFu0i_BFu16s");
    static STRUCT_IF_C D_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu16s)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu16s.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu16s, D_BFu0i_BFu16s)
//============================================================================



static void Test_D_BFu0i_BFu17i()
{
  {
    init_simple_test("D_BFu0i_BFu17i");
    static STRUCT_IF_C D_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(D_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu17i)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu17i.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu17i, D_BFu0i_BFu17i)
//============================================================================



static void Test_D_BFu0i_BFu17ll()
{
  {
    init_simple_test("D_BFu0i_BFu17ll");
    static STRUCT_IF_C D_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(D_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu17ll)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu17ll, D_BFu0i_BFu17ll)
//============================================================================



static void Test_D_BFu0i_BFu1c()
{
  {
    init_simple_test("D_BFu0i_BFu1c");
    static STRUCT_IF_C D_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu1c)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu1c.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu1c, D_BFu0i_BFu1c)
//============================================================================



static void Test_D_BFu0i_BFu1i()
{
  {
    init_simple_test("D_BFu0i_BFu1i");
    static STRUCT_IF_C D_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu1i)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu1i.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu1i, D_BFu0i_BFu1i)
//============================================================================



static void Test_D_BFu0i_BFu1ll()
{
  {
    init_simple_test("D_BFu0i_BFu1ll");
    static STRUCT_IF_C D_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu1ll)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu1ll, D_BFu0i_BFu1ll)
//============================================================================



static void Test_D_BFu0i_BFu1s()
{
  {
    init_simple_test("D_BFu0i_BFu1s");
    static STRUCT_IF_C D_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu1s)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu1s.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu1s, D_BFu0i_BFu1s)
//============================================================================



static void Test_D_BFu0i_BFu31i()
{
  {
    init_simple_test("D_BFu0i_BFu31i");
    static STRUCT_IF_C D_BFu0i_BFu31i lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu31i)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu31i.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu31i, D_BFu0i_BFu31i)
//============================================================================



static void Test_D_BFu0i_BFu31ll()
{
  {
    init_simple_test("D_BFu0i_BFu31ll");
    static STRUCT_IF_C D_BFu0i_BFu31ll lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu31ll)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu31ll, D_BFu0i_BFu31ll)
//============================================================================



static void Test_D_BFu0i_BFu32i()
{
  {
    init_simple_test("D_BFu0i_BFu32i");
    static STRUCT_IF_C D_BFu0i_BFu32i lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu32i)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu32i.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu32i, D_BFu0i_BFu32i)
//============================================================================



static void Test_D_BFu0i_BFu32ll()
{
  {
    init_simple_test("D_BFu0i_BFu32ll");
    static STRUCT_IF_C D_BFu0i_BFu32ll lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu32ll)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu32ll, D_BFu0i_BFu32ll)
//============================================================================



static void Test_D_BFu0i_BFu33()
{
  {
    init_simple_test("D_BFu0i_BFu33");
    static STRUCT_IF_C D_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,13), "sizeof(D_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu33)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu33.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "D_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "D_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu33, D_BFu0i_BFu33)
//============================================================================



static void Test_D_BFu0i_BFu7c()
{
  {
    init_simple_test("D_BFu0i_BFu7c");
    static STRUCT_IF_C D_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu7c)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu7c.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu7c, D_BFu0i_BFu7c)
//============================================================================



static void Test_D_BFu0i_BFu7i()
{
  {
    init_simple_test("D_BFu0i_BFu7i");
    static STRUCT_IF_C D_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu7i)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu7i.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu7i, D_BFu0i_BFu7i)
//============================================================================



static void Test_D_BFu0i_BFu7ll()
{
  {
    init_simple_test("D_BFu0i_BFu7ll");
    static STRUCT_IF_C D_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu7ll)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu7ll, D_BFu0i_BFu7ll)
//============================================================================



static void Test_D_BFu0i_BFu7s()
{
  {
    init_simple_test("D_BFu0i_BFu7s");
    static STRUCT_IF_C D_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu7s)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu7s.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu7s, D_BFu0i_BFu7s)
//============================================================================



static void Test_D_BFu0i_BFu8c()
{
  {
    init_simple_test("D_BFu0i_BFu8c");
    static STRUCT_IF_C D_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu8c)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu8c.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu8c, D_BFu0i_BFu8c)
//============================================================================



static void Test_D_BFu0i_BFu8i()
{
  {
    init_simple_test("D_BFu0i_BFu8i");
    static STRUCT_IF_C D_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu8i)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu8i.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu8i, D_BFu0i_BFu8i)
//============================================================================



static void Test_D_BFu0i_BFu8ll()
{
  {
    init_simple_test("D_BFu0i_BFu8ll");
    static STRUCT_IF_C D_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu8ll)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu8ll, D_BFu0i_BFu8ll)
//============================================================================



static void Test_D_BFu0i_BFu8s()
{
  {
    init_simple_test("D_BFu0i_BFu8s");
    static STRUCT_IF_C D_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu8s)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu8s.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu8s, D_BFu0i_BFu8s)
//============================================================================



static void Test_D_BFu0i_BFu9i()
{
  {
    init_simple_test("D_BFu0i_BFu9i");
    static STRUCT_IF_C D_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu9i)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu9i.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu9i, D_BFu0i_BFu9i)
//============================================================================



static void Test_D_BFu0i_BFu9ll()
{
  {
    init_simple_test("D_BFu0i_BFu9ll");
    static STRUCT_IF_C D_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu9ll)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu9ll, D_BFu0i_BFu9ll)
//============================================================================



static void Test_D_BFu0i_BFu9s()
{
  {
    init_simple_test("D_BFu0i_BFu9s");
    static STRUCT_IF_C D_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_BFu9s)");
    check_field_offset(lv, v1, 0, "D_BFu0i_BFu9s.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_BFu9s, D_BFu0i_BFu9s)
//============================================================================



static void Test_D_BFu0i_C()
{
  {
    init_simple_test("D_BFu0i_C");
    static STRUCT_IF_C D_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_C)");
    check_field_offset(lv, v1, 0, "D_BFu0i_C.v1");
    check_field_offset(lv, v2, 8, "D_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_C, D_BFu0i_C)
//============================================================================



static void Test_D_BFu0i_D()
{
  {
    init_simple_test("D_BFu0i_D");
    static STRUCT_IF_C D_BFu0i_D lv;
    check2(sizeof(lv), 16, "sizeof(D_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_D)");
    check_field_offset(lv, v1, 0, "D_BFu0i_D.v1");
    check_field_offset(lv, v2, 8, "D_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_D, D_BFu0i_D)
//============================================================================



static void Test_D_BFu0i_F()
{
  {
    init_simple_test("D_BFu0i_F");
    static STRUCT_IF_C D_BFu0i_F lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_F)");
    check_field_offset(lv, v1, 0, "D_BFu0i_F.v1");
    check_field_offset(lv, v2, 8, "D_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_F, D_BFu0i_F)
//============================================================================



static void Test_D_BFu0i_I()
{
  {
    init_simple_test("D_BFu0i_I");
    static STRUCT_IF_C D_BFu0i_I lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_I)");
    check_field_offset(lv, v1, 0, "D_BFu0i_I.v1");
    check_field_offset(lv, v2, 8, "D_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_I, D_BFu0i_I)
//============================================================================



static void Test_D_BFu0i_Ip()
{
  {
    init_simple_test("D_BFu0i_Ip");
    static STRUCT_IF_C D_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_Ip)");
    check_field_offset(lv, v1, 0, "D_BFu0i_Ip.v1");
    check_field_offset(lv, v2, 8, "D_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_Ip, D_BFu0i_Ip)
//============================================================================



static void Test_D_BFu0i_L()
{
  {
    init_simple_test("D_BFu0i_L");
    static STRUCT_IF_C D_BFu0i_L lv;
    check2(sizeof(lv), 16, "sizeof(D_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_L)");
    check_field_offset(lv, v1, 0, "D_BFu0i_L.v1");
    check_field_offset(lv, v2, 8, "D_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_L, D_BFu0i_L)
//============================================================================



static void Test_D_BFu0i_S()
{
  {
    init_simple_test("D_BFu0i_S");
    static STRUCT_IF_C D_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_S)");
    check_field_offset(lv, v1, 0, "D_BFu0i_S.v1");
    check_field_offset(lv, v2, 8, "D_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_S, D_BFu0i_S)
//============================================================================



static void Test_D_BFu0i_Uc()
{
  {
    init_simple_test("D_BFu0i_Uc");
    static STRUCT_IF_C D_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_Uc)");
    check_field_offset(lv, v1, 0, "D_BFu0i_Uc.v1");
    check_field_offset(lv, v2, 8, "D_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_Uc, D_BFu0i_Uc)
//============================================================================



static void Test_D_BFu0i_Ui()
{
  {
    init_simple_test("D_BFu0i_Ui");
    static STRUCT_IF_C D_BFu0i_Ui lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_Ui)");
    check_field_offset(lv, v1, 0, "D_BFu0i_Ui.v1");
    check_field_offset(lv, v2, 8, "D_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_Ui, D_BFu0i_Ui)
//============================================================================



static void Test_D_BFu0i_Ul()
{
  {
    init_simple_test("D_BFu0i_Ul");
    static STRUCT_IF_C D_BFu0i_Ul lv;
    check2(sizeof(lv), 16, "sizeof(D_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_Ul)");
    check_field_offset(lv, v1, 0, "D_BFu0i_Ul.v1");
    check_field_offset(lv, v2, 8, "D_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_Ul, D_BFu0i_Ul)
//============================================================================



static void Test_D_BFu0i_Us()
{
  {
    init_simple_test("D_BFu0i_Us");
    static STRUCT_IF_C D_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_Us)");
    check_field_offset(lv, v1, 0, "D_BFu0i_Us.v1");
    check_field_offset(lv, v2, 8, "D_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_Us, D_BFu0i_Us)
//============================================================================



static void Test_D_BFu0i_Vp()
{
  {
    init_simple_test("D_BFu0i_Vp");
    static STRUCT_IF_C D_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0i_Vp)");
    check_field_offset(lv, v1, 0, "D_BFu0i_Vp.v1");
    check_field_offset(lv, v2, 8, "D_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0i_Vp, D_BFu0i_Vp)
//============================================================================



static void Test_D_BFu0ll()
{
  {
    init_simple_test("D_BFu0ll");
    static STRUCT_IF_C D_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll, D_BFu0ll)
//============================================================================



static void Test_D_BFu0ll_BFu0c()
{
  {
    init_simple_test("D_BFu0ll_BFu0c");
    static STRUCT_IF_C D_BFu0ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu0c, D_BFu0ll_BFu0c)
//============================================================================



static void Test_D_BFu0ll_BFu0i()
{
  {
    init_simple_test("D_BFu0ll_BFu0i");
    static STRUCT_IF_C D_BFu0ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu0i, D_BFu0ll_BFu0i)
//============================================================================



static void Test_D_BFu0ll_BFu0ll()
{
  {
    init_simple_test("D_BFu0ll_BFu0ll");
    static STRUCT_IF_C D_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu0ll, D_BFu0ll_BFu0ll)
//============================================================================



static void Test_D_BFu0ll_BFu0s()
{
  {
    init_simple_test("D_BFu0ll_BFu0s");
    static STRUCT_IF_C D_BFu0ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu0s, D_BFu0ll_BFu0s)
//============================================================================



static void Test_D_BFu0ll_BFu15i()
{
  {
    init_simple_test("D_BFu0ll_BFu15i");
    static STRUCT_IF_C D_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu15i)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu15i, D_BFu0ll_BFu15i)
//============================================================================



static void Test_D_BFu0ll_BFu15ll()
{
  {
    init_simple_test("D_BFu0ll_BFu15ll");
    static STRUCT_IF_C D_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu15ll, D_BFu0ll_BFu15ll)
//============================================================================



static void Test_D_BFu0ll_BFu15s()
{
  {
    init_simple_test("D_BFu0ll_BFu15s");
    static STRUCT_IF_C D_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu15s)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu15s, D_BFu0ll_BFu15s)
//============================================================================



static void Test_D_BFu0ll_BFu16i()
{
  {
    init_simple_test("D_BFu0ll_BFu16i");
    static STRUCT_IF_C D_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu16i)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu16i, D_BFu0ll_BFu16i)
//============================================================================



static void Test_D_BFu0ll_BFu16ll()
{
  {
    init_simple_test("D_BFu0ll_BFu16ll");
    static STRUCT_IF_C D_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu16ll, D_BFu0ll_BFu16ll)
//============================================================================



static void Test_D_BFu0ll_BFu16s()
{
  {
    init_simple_test("D_BFu0ll_BFu16s");
    static STRUCT_IF_C D_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu16s)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu16s, D_BFu0ll_BFu16s)
//============================================================================



static void Test_D_BFu0ll_BFu17i()
{
  {
    init_simple_test("D_BFu0ll_BFu17i");
    static STRUCT_IF_C D_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(D_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu17i)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu17i, D_BFu0ll_BFu17i)
//============================================================================



static void Test_D_BFu0ll_BFu17ll()
{
  {
    init_simple_test("D_BFu0ll_BFu17ll");
    static STRUCT_IF_C D_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(D_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu17ll, D_BFu0ll_BFu17ll)
//============================================================================



static void Test_D_BFu0ll_BFu1c()
{
  {
    init_simple_test("D_BFu0ll_BFu1c");
    static STRUCT_IF_C D_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu1c)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu1c, D_BFu0ll_BFu1c)
//============================================================================



static void Test_D_BFu0ll_BFu1i()
{
  {
    init_simple_test("D_BFu0ll_BFu1i");
    static STRUCT_IF_C D_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu1i)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu1i, D_BFu0ll_BFu1i)
//============================================================================



static void Test_D_BFu0ll_BFu1ll()
{
  {
    init_simple_test("D_BFu0ll_BFu1ll");
    static STRUCT_IF_C D_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu1ll, D_BFu0ll_BFu1ll)
//============================================================================



static void Test_D_BFu0ll_BFu1s()
{
  {
    init_simple_test("D_BFu0ll_BFu1s");
    static STRUCT_IF_C D_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu1s)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu1s, D_BFu0ll_BFu1s)
//============================================================================



static void Test_D_BFu0ll_BFu31i()
{
  {
    init_simple_test("D_BFu0ll_BFu31i");
    static STRUCT_IF_C D_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu31i)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu31i, D_BFu0ll_BFu31i)
//============================================================================



static void Test_D_BFu0ll_BFu31ll()
{
  {
    init_simple_test("D_BFu0ll_BFu31ll");
    static STRUCT_IF_C D_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu31ll, D_BFu0ll_BFu31ll)
//============================================================================



static void Test_D_BFu0ll_BFu32i()
{
  {
    init_simple_test("D_BFu0ll_BFu32i");
    static STRUCT_IF_C D_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu32i)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu32i, D_BFu0ll_BFu32i)
//============================================================================



static void Test_D_BFu0ll_BFu32ll()
{
  {
    init_simple_test("D_BFu0ll_BFu32ll");
    static STRUCT_IF_C D_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu32ll, D_BFu0ll_BFu32ll)
//============================================================================



static void Test_D_BFu0ll_BFu33()
{
  {
    init_simple_test("D_BFu0ll_BFu33");
    static STRUCT_IF_C D_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,13), "sizeof(D_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu33)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu33.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "D_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "D_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu33, D_BFu0ll_BFu33)
//============================================================================



static void Test_D_BFu0ll_BFu7c()
{
  {
    init_simple_test("D_BFu0ll_BFu7c");
    static STRUCT_IF_C D_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu7c)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu7c, D_BFu0ll_BFu7c)
//============================================================================



static void Test_D_BFu0ll_BFu7i()
{
  {
    init_simple_test("D_BFu0ll_BFu7i");
    static STRUCT_IF_C D_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu7i)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu7i, D_BFu0ll_BFu7i)
//============================================================================



static void Test_D_BFu0ll_BFu7ll()
{
  {
    init_simple_test("D_BFu0ll_BFu7ll");
    static STRUCT_IF_C D_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu7ll, D_BFu0ll_BFu7ll)
//============================================================================



static void Test_D_BFu0ll_BFu7s()
{
  {
    init_simple_test("D_BFu0ll_BFu7s");
    static STRUCT_IF_C D_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu7s)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu7s, D_BFu0ll_BFu7s)
//============================================================================



static void Test_D_BFu0ll_BFu8c()
{
  {
    init_simple_test("D_BFu0ll_BFu8c");
    static STRUCT_IF_C D_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu8c)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu8c, D_BFu0ll_BFu8c)
//============================================================================



static void Test_D_BFu0ll_BFu8i()
{
  {
    init_simple_test("D_BFu0ll_BFu8i");
    static STRUCT_IF_C D_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu8i)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu8i, D_BFu0ll_BFu8i)
//============================================================================



static void Test_D_BFu0ll_BFu8ll()
{
  {
    init_simple_test("D_BFu0ll_BFu8ll");
    static STRUCT_IF_C D_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu8ll, D_BFu0ll_BFu8ll)
//============================================================================



static void Test_D_BFu0ll_BFu8s()
{
  {
    init_simple_test("D_BFu0ll_BFu8s");
    static STRUCT_IF_C D_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu8s)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu8s, D_BFu0ll_BFu8s)
//============================================================================



static void Test_D_BFu0ll_BFu9i()
{
  {
    init_simple_test("D_BFu0ll_BFu9i");
    static STRUCT_IF_C D_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu9i)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu9i, D_BFu0ll_BFu9i)
//============================================================================



static void Test_D_BFu0ll_BFu9ll()
{
  {
    init_simple_test("D_BFu0ll_BFu9ll");
    static STRUCT_IF_C D_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu9ll, D_BFu0ll_BFu9ll)
//============================================================================



static void Test_D_BFu0ll_BFu9s()
{
  {
    init_simple_test("D_BFu0ll_BFu9s");
    static STRUCT_IF_C D_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_BFu9s)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_BFu9s, D_BFu0ll_BFu9s)
//============================================================================



static void Test_D_BFu0ll_C()
{
  {
    init_simple_test("D_BFu0ll_C");
    static STRUCT_IF_C D_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_C)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_C.v1");
    check_field_offset(lv, v2, 8, "D_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_C, D_BFu0ll_C)
//============================================================================



static void Test_D_BFu0ll_D()
{
  {
    init_simple_test("D_BFu0ll_D");
    static STRUCT_IF_C D_BFu0ll_D lv;
    check2(sizeof(lv), 16, "sizeof(D_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_D)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_D.v1");
    check_field_offset(lv, v2, 8, "D_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_D, D_BFu0ll_D)
//============================================================================



static void Test_D_BFu0ll_F()
{
  {
    init_simple_test("D_BFu0ll_F");
    static STRUCT_IF_C D_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_F)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_F.v1");
    check_field_offset(lv, v2, 8, "D_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_F, D_BFu0ll_F)
//============================================================================



static void Test_D_BFu0ll_I()
{
  {
    init_simple_test("D_BFu0ll_I");
    static STRUCT_IF_C D_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_I)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_I.v1");
    check_field_offset(lv, v2, 8, "D_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_I, D_BFu0ll_I)
//============================================================================



static void Test_D_BFu0ll_Ip()
{
  {
    init_simple_test("D_BFu0ll_Ip");
    static STRUCT_IF_C D_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_Ip)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_Ip.v1");
    check_field_offset(lv, v2, 8, "D_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_Ip, D_BFu0ll_Ip)
//============================================================================



static void Test_D_BFu0ll_L()
{
  {
    init_simple_test("D_BFu0ll_L");
    static STRUCT_IF_C D_BFu0ll_L lv;
    check2(sizeof(lv), 16, "sizeof(D_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_L)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_L.v1");
    check_field_offset(lv, v2, 8, "D_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_L, D_BFu0ll_L)
//============================================================================



static void Test_D_BFu0ll_S()
{
  {
    init_simple_test("D_BFu0ll_S");
    static STRUCT_IF_C D_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_S)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_S.v1");
    check_field_offset(lv, v2, 8, "D_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_S, D_BFu0ll_S)
//============================================================================



static void Test_D_BFu0ll_Uc()
{
  {
    init_simple_test("D_BFu0ll_Uc");
    static STRUCT_IF_C D_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_Uc)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_Uc.v1");
    check_field_offset(lv, v2, 8, "D_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_Uc, D_BFu0ll_Uc)
//============================================================================



static void Test_D_BFu0ll_Ui()
{
  {
    init_simple_test("D_BFu0ll_Ui");
    static STRUCT_IF_C D_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_Ui)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_Ui.v1");
    check_field_offset(lv, v2, 8, "D_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_Ui, D_BFu0ll_Ui)
//============================================================================



static void Test_D_BFu0ll_Ul()
{
  {
    init_simple_test("D_BFu0ll_Ul");
    static STRUCT_IF_C D_BFu0ll_Ul lv;
    check2(sizeof(lv), 16, "sizeof(D_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_Ul)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_Ul.v1");
    check_field_offset(lv, v2, 8, "D_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_Ul, D_BFu0ll_Ul)
//============================================================================



static void Test_D_BFu0ll_Us()
{
  {
    init_simple_test("D_BFu0ll_Us");
    static STRUCT_IF_C D_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_Us)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_Us.v1");
    check_field_offset(lv, v2, 8, "D_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_Us, D_BFu0ll_Us)
//============================================================================



static void Test_D_BFu0ll_Vp()
{
  {
    init_simple_test("D_BFu0ll_Vp");
    static STRUCT_IF_C D_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0ll_Vp)");
    check_field_offset(lv, v1, 0, "D_BFu0ll_Vp.v1");
    check_field_offset(lv, v2, 8, "D_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0ll_Vp, D_BFu0ll_Vp)
//============================================================================



static void Test_D_BFu0s()
{
  {
    init_simple_test("D_BFu0s");
    static STRUCT_IF_C D_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s, D_BFu0s)
//============================================================================



static void Test_D_BFu0s_BFu0c()
{
  {
    init_simple_test("D_BFu0s_BFu0c");
    static STRUCT_IF_C D_BFu0s_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu0c, D_BFu0s_BFu0c)
//============================================================================



static void Test_D_BFu0s_BFu0i()
{
  {
    init_simple_test("D_BFu0s_BFu0i");
    static STRUCT_IF_C D_BFu0s_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu0i, D_BFu0s_BFu0i)
//============================================================================



static void Test_D_BFu0s_BFu0ll()
{
  {
    init_simple_test("D_BFu0s_BFu0ll");
    static STRUCT_IF_C D_BFu0s_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu0ll, D_BFu0s_BFu0ll)
//============================================================================



static void Test_D_BFu0s_BFu0s()
{
  {
    init_simple_test("D_BFu0s_BFu0s");
    static STRUCT_IF_C D_BFu0s_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(D_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu0s, D_BFu0s_BFu0s)
//============================================================================



static void Test_D_BFu0s_BFu15i()
{
  {
    init_simple_test("D_BFu0s_BFu15i");
    static STRUCT_IF_C D_BFu0s_BFu15i lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu15i)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu15i.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu15i, D_BFu0s_BFu15i)
//============================================================================



static void Test_D_BFu0s_BFu15ll()
{
  {
    init_simple_test("D_BFu0s_BFu15ll");
    static STRUCT_IF_C D_BFu0s_BFu15ll lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu15ll)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu15ll, D_BFu0s_BFu15ll)
//============================================================================



static void Test_D_BFu0s_BFu15s()
{
  {
    init_simple_test("D_BFu0s_BFu15s");
    static STRUCT_IF_C D_BFu0s_BFu15s lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu15s)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu15s.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu15s, D_BFu0s_BFu15s)
//============================================================================



static void Test_D_BFu0s_BFu16i()
{
  {
    init_simple_test("D_BFu0s_BFu16i");
    static STRUCT_IF_C D_BFu0s_BFu16i lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu16i)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu16i.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu16i, D_BFu0s_BFu16i)
//============================================================================



static void Test_D_BFu0s_BFu16ll()
{
  {
    init_simple_test("D_BFu0s_BFu16ll");
    static STRUCT_IF_C D_BFu0s_BFu16ll lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu16ll)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu16ll, D_BFu0s_BFu16ll)
//============================================================================



static void Test_D_BFu0s_BFu16s()
{
  {
    init_simple_test("D_BFu0s_BFu16s");
    static STRUCT_IF_C D_BFu0s_BFu16s lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu16s)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu16s.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu16s, D_BFu0s_BFu16s)
//============================================================================



static void Test_D_BFu0s_BFu17i()
{
  {
    init_simple_test("D_BFu0s_BFu17i");
    static STRUCT_IF_C D_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(D_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu17i)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu17i.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu17i, D_BFu0s_BFu17i)
//============================================================================



static void Test_D_BFu0s_BFu17ll()
{
  {
    init_simple_test("D_BFu0s_BFu17ll");
    static STRUCT_IF_C D_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(D_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu17ll)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu17ll, D_BFu0s_BFu17ll)
//============================================================================



static void Test_D_BFu0s_BFu1c()
{
  {
    init_simple_test("D_BFu0s_BFu1c");
    static STRUCT_IF_C D_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu1c)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu1c.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu1c, D_BFu0s_BFu1c)
//============================================================================



static void Test_D_BFu0s_BFu1i()
{
  {
    init_simple_test("D_BFu0s_BFu1i");
    static STRUCT_IF_C D_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu1i)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu1i.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu1i, D_BFu0s_BFu1i)
//============================================================================



static void Test_D_BFu0s_BFu1ll()
{
  {
    init_simple_test("D_BFu0s_BFu1ll");
    static STRUCT_IF_C D_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu1ll)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu1ll, D_BFu0s_BFu1ll)
//============================================================================



static void Test_D_BFu0s_BFu1s()
{
  {
    init_simple_test("D_BFu0s_BFu1s");
    static STRUCT_IF_C D_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu1s)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu1s.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu1s, D_BFu0s_BFu1s)
//============================================================================



static void Test_D_BFu0s_BFu31i()
{
  {
    init_simple_test("D_BFu0s_BFu31i");
    static STRUCT_IF_C D_BFu0s_BFu31i lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu31i)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu31i.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu31i, D_BFu0s_BFu31i)
//============================================================================



static void Test_D_BFu0s_BFu31ll()
{
  {
    init_simple_test("D_BFu0s_BFu31ll");
    static STRUCT_IF_C D_BFu0s_BFu31ll lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu31ll)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu31ll, D_BFu0s_BFu31ll)
//============================================================================



static void Test_D_BFu0s_BFu32i()
{
  {
    init_simple_test("D_BFu0s_BFu32i");
    static STRUCT_IF_C D_BFu0s_BFu32i lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu32i)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu32i.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu32i, D_BFu0s_BFu32i)
//============================================================================



static void Test_D_BFu0s_BFu32ll()
{
  {
    init_simple_test("D_BFu0s_BFu32ll");
    static STRUCT_IF_C D_BFu0s_BFu32ll lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu32ll)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu32ll, D_BFu0s_BFu32ll)
//============================================================================



static void Test_D_BFu0s_BFu33()
{
  {
    init_simple_test("D_BFu0s_BFu33");
    static STRUCT_IF_C D_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,13), "sizeof(D_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu33)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu33.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "D_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "D_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu33, D_BFu0s_BFu33)
//============================================================================



static void Test_D_BFu0s_BFu7c()
{
  {
    init_simple_test("D_BFu0s_BFu7c");
    static STRUCT_IF_C D_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu7c)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu7c.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu7c, D_BFu0s_BFu7c)
//============================================================================



static void Test_D_BFu0s_BFu7i()
{
  {
    init_simple_test("D_BFu0s_BFu7i");
    static STRUCT_IF_C D_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu7i)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu7i.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu7i, D_BFu0s_BFu7i)
//============================================================================



static void Test_D_BFu0s_BFu7ll()
{
  {
    init_simple_test("D_BFu0s_BFu7ll");
    static STRUCT_IF_C D_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu7ll)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu7ll, D_BFu0s_BFu7ll)
//============================================================================



static void Test_D_BFu0s_BFu7s()
{
  {
    init_simple_test("D_BFu0s_BFu7s");
    static STRUCT_IF_C D_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu7s)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu7s.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu7s, D_BFu0s_BFu7s)
//============================================================================



static void Test_D_BFu0s_BFu8c()
{
  {
    init_simple_test("D_BFu0s_BFu8c");
    static STRUCT_IF_C D_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu8c)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu8c.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu8c, D_BFu0s_BFu8c)
//============================================================================



static void Test_D_BFu0s_BFu8i()
{
  {
    init_simple_test("D_BFu0s_BFu8i");
    static STRUCT_IF_C D_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu8i)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu8i.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu8i, D_BFu0s_BFu8i)
//============================================================================



static void Test_D_BFu0s_BFu8ll()
{
  {
    init_simple_test("D_BFu0s_BFu8ll");
    static STRUCT_IF_C D_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu8ll)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu8ll, D_BFu0s_BFu8ll)
//============================================================================



static void Test_D_BFu0s_BFu8s()
{
  {
    init_simple_test("D_BFu0s_BFu8s");
    static STRUCT_IF_C D_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu8s)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu8s.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu8s, D_BFu0s_BFu8s)
//============================================================================



static void Test_D_BFu0s_BFu9i()
{
  {
    init_simple_test("D_BFu0s_BFu9i");
    static STRUCT_IF_C D_BFu0s_BFu9i lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu9i)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu9i.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu9i, D_BFu0s_BFu9i)
//============================================================================



static void Test_D_BFu0s_BFu9ll()
{
  {
    init_simple_test("D_BFu0s_BFu9ll");
    static STRUCT_IF_C D_BFu0s_BFu9ll lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu9ll)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu9ll, D_BFu0s_BFu9ll)
//============================================================================



static void Test_D_BFu0s_BFu9s()
{
  {
    init_simple_test("D_BFu0s_BFu9s");
    static STRUCT_IF_C D_BFu0s_BFu9s lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_BFu9s)");
    check_field_offset(lv, v1, 0, "D_BFu0s_BFu9s.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_BFu9s, D_BFu0s_BFu9s)
//============================================================================



static void Test_D_BFu0s_C()
{
  {
    init_simple_test("D_BFu0s_C");
    static STRUCT_IF_C D_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_C)");
    check_field_offset(lv, v1, 0, "D_BFu0s_C.v1");
    check_field_offset(lv, v2, 8, "D_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_C, D_BFu0s_C)
//============================================================================



static void Test_D_BFu0s_D()
{
  {
    init_simple_test("D_BFu0s_D");
    static STRUCT_IF_C D_BFu0s_D lv;
    check2(sizeof(lv), 16, "sizeof(D_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_D)");
    check_field_offset(lv, v1, 0, "D_BFu0s_D.v1");
    check_field_offset(lv, v2, 8, "D_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_D, D_BFu0s_D)
//============================================================================



static void Test_D_BFu0s_F()
{
  {
    init_simple_test("D_BFu0s_F");
    static STRUCT_IF_C D_BFu0s_F lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_F)");
    check_field_offset(lv, v1, 0, "D_BFu0s_F.v1");
    check_field_offset(lv, v2, 8, "D_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_F, D_BFu0s_F)
//============================================================================



static void Test_D_BFu0s_I()
{
  {
    init_simple_test("D_BFu0s_I");
    static STRUCT_IF_C D_BFu0s_I lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_I)");
    check_field_offset(lv, v1, 0, "D_BFu0s_I.v1");
    check_field_offset(lv, v2, 8, "D_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_I, D_BFu0s_I)
//============================================================================



static void Test_D_BFu0s_Ip()
{
  {
    init_simple_test("D_BFu0s_Ip");
    static STRUCT_IF_C D_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_Ip)");
    check_field_offset(lv, v1, 0, "D_BFu0s_Ip.v1");
    check_field_offset(lv, v2, 8, "D_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_Ip, D_BFu0s_Ip)
//============================================================================



static void Test_D_BFu0s_L()
{
  {
    init_simple_test("D_BFu0s_L");
    static STRUCT_IF_C D_BFu0s_L lv;
    check2(sizeof(lv), 16, "sizeof(D_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_L)");
    check_field_offset(lv, v1, 0, "D_BFu0s_L.v1");
    check_field_offset(lv, v2, 8, "D_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_L, D_BFu0s_L)
//============================================================================



static void Test_D_BFu0s_S()
{
  {
    init_simple_test("D_BFu0s_S");
    static STRUCT_IF_C D_BFu0s_S lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_S)");
    check_field_offset(lv, v1, 0, "D_BFu0s_S.v1");
    check_field_offset(lv, v2, 8, "D_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_S, D_BFu0s_S)
//============================================================================



static void Test_D_BFu0s_Uc()
{
  {
    init_simple_test("D_BFu0s_Uc");
    static STRUCT_IF_C D_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(D_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_Uc)");
    check_field_offset(lv, v1, 0, "D_BFu0s_Uc.v1");
    check_field_offset(lv, v2, 8, "D_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_Uc, D_BFu0s_Uc)
//============================================================================



static void Test_D_BFu0s_Ui()
{
  {
    init_simple_test("D_BFu0s_Ui");
    static STRUCT_IF_C D_BFu0s_Ui lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_Ui)");
    check_field_offset(lv, v1, 0, "D_BFu0s_Ui.v1");
    check_field_offset(lv, v2, 8, "D_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_Ui, D_BFu0s_Ui)
//============================================================================



static void Test_D_BFu0s_Ul()
{
  {
    init_simple_test("D_BFu0s_Ul");
    static STRUCT_IF_C D_BFu0s_Ul lv;
    check2(sizeof(lv), 16, "sizeof(D_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_Ul)");
    check_field_offset(lv, v1, 0, "D_BFu0s_Ul.v1");
    check_field_offset(lv, v2, 8, "D_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_Ul, D_BFu0s_Ul)
//============================================================================



static void Test_D_BFu0s_Us()
{
  {
    init_simple_test("D_BFu0s_Us");
    static STRUCT_IF_C D_BFu0s_Us lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_Us)");
    check_field_offset(lv, v1, 0, "D_BFu0s_Us.v1");
    check_field_offset(lv, v2, 8, "D_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_Us, D_BFu0s_Us)
//============================================================================



static void Test_D_BFu0s_Vp()
{
  {
    init_simple_test("D_BFu0s_Vp");
    static STRUCT_IF_C D_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu0s_Vp)");
    check_field_offset(lv, v1, 0, "D_BFu0s_Vp.v1");
    check_field_offset(lv, v2, 8, "D_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu0s_Vp, D_BFu0s_Vp)
//============================================================================



static void Test_D_BFu15i_BFu0c()
{
  {
    init_simple_test("D_BFu15i_BFu0c");
    static STRUCT_IF_C D_BFu15i_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu15i_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu15i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu15i_BFu0c, D_BFu15i_BFu0c)
//============================================================================



static void Test_D_BFu15i_BFu0i()
{
  {
    init_simple_test("D_BFu15i_BFu0i");
    static STRUCT_IF_C D_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu15i_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu15i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu15i_BFu0i, D_BFu15i_BFu0i)
//============================================================================



static void Test_D_BFu15i_BFu0ll()
{
  {
    init_simple_test("D_BFu15i_BFu0ll");
    static STRUCT_IF_C D_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu15i_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu15i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu15i_BFu0ll, D_BFu15i_BFu0ll)
//============================================================================



static void Test_D_BFu15i_BFu0s()
{
  {
    init_simple_test("D_BFu15i_BFu0s");
    static STRUCT_IF_C D_BFu15i_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu15i_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu15i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu15i_BFu0s, D_BFu15i_BFu0s)
//============================================================================



static void Test_D_BFu15ll_BFu0c()
{
  {
    init_simple_test("D_BFu15ll_BFu0c");
    static STRUCT_IF_C D_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu15ll_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu15ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu15ll_BFu0c, D_BFu15ll_BFu0c)
//============================================================================



static void Test_D_BFu15ll_BFu0i()
{
  {
    init_simple_test("D_BFu15ll_BFu0i");
    static STRUCT_IF_C D_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu15ll_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu15ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu15ll_BFu0i, D_BFu15ll_BFu0i)
//============================================================================



static void Test_D_BFu15ll_BFu0ll()
{
  {
    init_simple_test("D_BFu15ll_BFu0ll");
    static STRUCT_IF_C D_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu15ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu15ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu15ll_BFu0ll, D_BFu15ll_BFu0ll)
//============================================================================



static void Test_D_BFu15ll_BFu0s()
{
  {
    init_simple_test("D_BFu15ll_BFu0s");
    static STRUCT_IF_C D_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu15ll_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu15ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu15ll_BFu0s, D_BFu15ll_BFu0s)
//============================================================================



static void Test_D_BFu15s_BFu0c()
{
  {
    init_simple_test("D_BFu15s_BFu0c");
    static STRUCT_IF_C D_BFu15s_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu15s_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu15s_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu15s_BFu0c, D_BFu15s_BFu0c)
//============================================================================



static void Test_D_BFu15s_BFu0i()
{
  {
    init_simple_test("D_BFu15s_BFu0i");
    static STRUCT_IF_C D_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu15s_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu15s_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu15s_BFu0i, D_BFu15s_BFu0i)
//============================================================================



static void Test_D_BFu15s_BFu0ll()
{
  {
    init_simple_test("D_BFu15s_BFu0ll");
    static STRUCT_IF_C D_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu15s_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu15s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu15s_BFu0ll, D_BFu15s_BFu0ll)
//============================================================================



static void Test_D_BFu15s_BFu0s()
{
  {
    init_simple_test("D_BFu15s_BFu0s");
    static STRUCT_IF_C D_BFu15s_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu15s_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu15s_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu15s_BFu0s, D_BFu15s_BFu0s)
//============================================================================



static void Test_D_BFu16i_BFu0c()
{
  {
    init_simple_test("D_BFu16i_BFu0c");
    static STRUCT_IF_C D_BFu16i_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu16i_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu16i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu16i_BFu0c, D_BFu16i_BFu0c)
//============================================================================



static void Test_D_BFu16i_BFu0i()
{
  {
    init_simple_test("D_BFu16i_BFu0i");
    static STRUCT_IF_C D_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu16i_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu16i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu16i_BFu0i, D_BFu16i_BFu0i)
//============================================================================



static void Test_D_BFu16i_BFu0ll()
{
  {
    init_simple_test("D_BFu16i_BFu0ll");
    static STRUCT_IF_C D_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu16i_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu16i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu16i_BFu0ll, D_BFu16i_BFu0ll)
//============================================================================



static void Test_D_BFu16i_BFu0s()
{
  {
    init_simple_test("D_BFu16i_BFu0s");
    static STRUCT_IF_C D_BFu16i_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu16i_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu16i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu16i_BFu0s, D_BFu16i_BFu0s)
//============================================================================



static void Test_D_BFu16ll_BFu0c()
{
  {
    init_simple_test("D_BFu16ll_BFu0c");
    static STRUCT_IF_C D_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu16ll_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu16ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu16ll_BFu0c, D_BFu16ll_BFu0c)
//============================================================================



static void Test_D_BFu16ll_BFu0i()
{
  {
    init_simple_test("D_BFu16ll_BFu0i");
    static STRUCT_IF_C D_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu16ll_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu16ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu16ll_BFu0i, D_BFu16ll_BFu0i)
//============================================================================



static void Test_D_BFu16ll_BFu0ll()
{
  {
    init_simple_test("D_BFu16ll_BFu0ll");
    static STRUCT_IF_C D_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu16ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu16ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu16ll_BFu0ll, D_BFu16ll_BFu0ll)
//============================================================================



static void Test_D_BFu16ll_BFu0s()
{
  {
    init_simple_test("D_BFu16ll_BFu0s");
    static STRUCT_IF_C D_BFu16ll_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu16ll_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu16ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu16ll_BFu0s, D_BFu16ll_BFu0s)
//============================================================================



static void Test_D_BFu16s_BFu0c()
{
  {
    init_simple_test("D_BFu16s_BFu0c");
    static STRUCT_IF_C D_BFu16s_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu16s_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu16s_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu16s_BFu0c, D_BFu16s_BFu0c)
//============================================================================



static void Test_D_BFu16s_BFu0i()
{
  {
    init_simple_test("D_BFu16s_BFu0i");
    static STRUCT_IF_C D_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu16s_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu16s_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu16s_BFu0i, D_BFu16s_BFu0i)
//============================================================================



static void Test_D_BFu16s_BFu0ll()
{
  {
    init_simple_test("D_BFu16s_BFu0ll");
    static STRUCT_IF_C D_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu16s_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu16s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu16s_BFu0ll, D_BFu16s_BFu0ll)
//============================================================================



static void Test_D_BFu16s_BFu0s()
{
  {
    init_simple_test("D_BFu16s_BFu0s");
    static STRUCT_IF_C D_BFu16s_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu16s_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu16s_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu16s_BFu0s, D_BFu16s_BFu0s)
//============================================================================



static void Test_D_BFu17i_BFu0c()
{
  {
    init_simple_test("D_BFu17i_BFu0c");
    static STRUCT_IF_C D_BFu17i_BFu0c lv;
    check2(sizeof(lv), 11, "sizeof(D_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu17i_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu17i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu17i_BFu0c, D_BFu17i_BFu0c)
//============================================================================



static void Test_D_BFu17i_BFu0i()
{
  {
    init_simple_test("D_BFu17i_BFu0i");
    static STRUCT_IF_C D_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu17i_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu17i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu17i_BFu0i, D_BFu17i_BFu0i)
//============================================================================



static void Test_D_BFu17i_BFu0ll()
{
  {
    init_simple_test("D_BFu17i_BFu0ll");
    static STRUCT_IF_C D_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu17i_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu17i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu17i_BFu0ll, D_BFu17i_BFu0ll)
//============================================================================



static void Test_D_BFu17i_BFu0s()
{
  {
    init_simple_test("D_BFu17i_BFu0s");
    static STRUCT_IF_C D_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu17i_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu17i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu17i_BFu0s, D_BFu17i_BFu0s)
//============================================================================



static void Test_D_BFu17ll_BFu0c()
{
  {
    init_simple_test("D_BFu17ll_BFu0c");
    static STRUCT_IF_C D_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 11, "sizeof(D_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu17ll_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu17ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu17ll_BFu0c, D_BFu17ll_BFu0c)
//============================================================================



static void Test_D_BFu17ll_BFu0i()
{
  {
    init_simple_test("D_BFu17ll_BFu0i");
    static STRUCT_IF_C D_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu17ll_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu17ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu17ll_BFu0i, D_BFu17ll_BFu0i)
//============================================================================



static void Test_D_BFu17ll_BFu0ll()
{
  {
    init_simple_test("D_BFu17ll_BFu0ll");
    static STRUCT_IF_C D_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu17ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu17ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu17ll_BFu0ll, D_BFu17ll_BFu0ll)
//============================================================================



static void Test_D_BFu17ll_BFu0s()
{
  {
    init_simple_test("D_BFu17ll_BFu0s");
    static STRUCT_IF_C D_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu17ll_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu17ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu17ll_BFu0s, D_BFu17ll_BFu0s)
//============================================================================



static void Test_D_BFu1c_BFu0c()
{
  {
    init_simple_test("D_BFu1c_BFu0c");
    static STRUCT_IF_C D_BFu1c_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu1c_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu1c_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1c_BFu0c, D_BFu1c_BFu0c)
//============================================================================



static void Test_D_BFu1c_BFu0i()
{
  {
    init_simple_test("D_BFu1c_BFu0i");
    static STRUCT_IF_C D_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu1c_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu1c_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1c_BFu0i, D_BFu1c_BFu0i)
//============================================================================



static void Test_D_BFu1c_BFu0ll()
{
  {
    init_simple_test("D_BFu1c_BFu0ll");
    static STRUCT_IF_C D_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu1c_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu1c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1c_BFu0ll, D_BFu1c_BFu0ll)
//============================================================================



static void Test_D_BFu1c_BFu0s()
{
  {
    init_simple_test("D_BFu1c_BFu0s");
    static STRUCT_IF_C D_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu1c_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu1c_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1c_BFu0s, D_BFu1c_BFu0s)
//============================================================================



static void Test_D_BFu1i_BFu0c()
{
  {
    init_simple_test("D_BFu1i_BFu0c");
    static STRUCT_IF_C D_BFu1i_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu1i_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu1i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1i_BFu0c, D_BFu1i_BFu0c)
//============================================================================



static void Test_D_BFu1i_BFu0i()
{
  {
    init_simple_test("D_BFu1i_BFu0i");
    static STRUCT_IF_C D_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu1i_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu1i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1i_BFu0i, D_BFu1i_BFu0i)
//============================================================================



static void Test_D_BFu1i_BFu0ll()
{
  {
    init_simple_test("D_BFu1i_BFu0ll");
    static STRUCT_IF_C D_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu1i_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu1i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1i_BFu0ll, D_BFu1i_BFu0ll)
//============================================================================



static void Test_D_BFu1i_BFu0s()
{
  {
    init_simple_test("D_BFu1i_BFu0s");
    static STRUCT_IF_C D_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu1i_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu1i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1i_BFu0s, D_BFu1i_BFu0s)
//============================================================================



static void Test_D_BFu1ll_BFu0c()
{
  {
    init_simple_test("D_BFu1ll_BFu0c");
    static STRUCT_IF_C D_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu1ll_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu1ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1ll_BFu0c, D_BFu1ll_BFu0c)
//============================================================================



static void Test_D_BFu1ll_BFu0i()
{
  {
    init_simple_test("D_BFu1ll_BFu0i");
    static STRUCT_IF_C D_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu1ll_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu1ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1ll_BFu0i, D_BFu1ll_BFu0i)
//============================================================================



static void Test_D_BFu1ll_BFu0ll()
{
  {
    init_simple_test("D_BFu1ll_BFu0ll");
    static STRUCT_IF_C D_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu1ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu1ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1ll_BFu0ll, D_BFu1ll_BFu0ll)
//============================================================================



static void Test_D_BFu1ll_BFu0s()
{
  {
    init_simple_test("D_BFu1ll_BFu0s");
    static STRUCT_IF_C D_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu1ll_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu1ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1ll_BFu0s, D_BFu1ll_BFu0s)
//============================================================================



static void Test_D_BFu1s_BFu0c()
{
  {
    init_simple_test("D_BFu1s_BFu0c");
    static STRUCT_IF_C D_BFu1s_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu1s_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu1s_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1s_BFu0c, D_BFu1s_BFu0c)
//============================================================================



static void Test_D_BFu1s_BFu0i()
{
  {
    init_simple_test("D_BFu1s_BFu0i");
    static STRUCT_IF_C D_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu1s_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu1s_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1s_BFu0i, D_BFu1s_BFu0i)
//============================================================================



static void Test_D_BFu1s_BFu0ll()
{
  {
    init_simple_test("D_BFu1s_BFu0ll");
    static STRUCT_IF_C D_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu1s_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu1s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1s_BFu0ll, D_BFu1s_BFu0ll)
//============================================================================



static void Test_D_BFu1s_BFu0s()
{
  {
    init_simple_test("D_BFu1s_BFu0s");
    static STRUCT_IF_C D_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu1s_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu1s_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1s_BFu0s, D_BFu1s_BFu0s)
//============================================================================



static void Test_D_BFu31i_BFu0c()
{
  {
    init_simple_test("D_BFu31i_BFu0c");
    static STRUCT_IF_C D_BFu31i_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu31i_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu31i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu31i_BFu0c, D_BFu31i_BFu0c)
//============================================================================



static void Test_D_BFu31i_BFu0i()
{
  {
    init_simple_test("D_BFu31i_BFu0i");
    static STRUCT_IF_C D_BFu31i_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu31i_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu31i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu31i_BFu0i, D_BFu31i_BFu0i)
//============================================================================



static void Test_D_BFu31i_BFu0ll()
{
  {
    init_simple_test("D_BFu31i_BFu0ll");
    static STRUCT_IF_C D_BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu31i_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu31i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu31i_BFu0ll, D_BFu31i_BFu0ll)
//============================================================================



static void Test_D_BFu31i_BFu0s()
{
  {
    init_simple_test("D_BFu31i_BFu0s");
    static STRUCT_IF_C D_BFu31i_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu31i_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu31i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu31i_BFu0s, D_BFu31i_BFu0s)
//============================================================================



static void Test_D_BFu31ll_BFu0c()
{
  {
    init_simple_test("D_BFu31ll_BFu0c");
    static STRUCT_IF_C D_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu31ll_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu31ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu31ll_BFu0c, D_BFu31ll_BFu0c)
//============================================================================



static void Test_D_BFu31ll_BFu0i()
{
  {
    init_simple_test("D_BFu31ll_BFu0i");
    static STRUCT_IF_C D_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu31ll_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu31ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu31ll_BFu0i, D_BFu31ll_BFu0i)
//============================================================================



static void Test_D_BFu31ll_BFu0ll()
{
  {
    init_simple_test("D_BFu31ll_BFu0ll");
    static STRUCT_IF_C D_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu31ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu31ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu31ll_BFu0ll, D_BFu31ll_BFu0ll)
//============================================================================



static void Test_D_BFu31ll_BFu0s()
{
  {
    init_simple_test("D_BFu31ll_BFu0s");
    static STRUCT_IF_C D_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu31ll_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu31ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu31ll_BFu0s, D_BFu31ll_BFu0s)
//============================================================================



static void Test_D_BFu32i_BFu0c()
{
  {
    init_simple_test("D_BFu32i_BFu0c");
    static STRUCT_IF_C D_BFu32i_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu32i_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu32i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu32i_BFu0c, D_BFu32i_BFu0c)
//============================================================================



static void Test_D_BFu32i_BFu0i()
{
  {
    init_simple_test("D_BFu32i_BFu0i");
    static STRUCT_IF_C D_BFu32i_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu32i_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu32i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu32i_BFu0i, D_BFu32i_BFu0i)
//============================================================================



static void Test_D_BFu32i_BFu0ll()
{
  {
    init_simple_test("D_BFu32i_BFu0ll");
    static STRUCT_IF_C D_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu32i_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu32i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu32i_BFu0ll, D_BFu32i_BFu0ll)
//============================================================================



static void Test_D_BFu32i_BFu0s()
{
  {
    init_simple_test("D_BFu32i_BFu0s");
    static STRUCT_IF_C D_BFu32i_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu32i_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu32i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu32i_BFu0s, D_BFu32i_BFu0s)
//============================================================================



static void Test_D_BFu32ll_BFu0c()
{
  {
    init_simple_test("D_BFu32ll_BFu0c");
    static STRUCT_IF_C D_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu32ll_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu32ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu32ll_BFu0c, D_BFu32ll_BFu0c)
//============================================================================



static void Test_D_BFu32ll_BFu0i()
{
  {
    init_simple_test("D_BFu32ll_BFu0i");
    static STRUCT_IF_C D_BFu32ll_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu32ll_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu32ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu32ll_BFu0i, D_BFu32ll_BFu0i)
//============================================================================



static void Test_D_BFu32ll_BFu0ll()
{
  {
    init_simple_test("D_BFu32ll_BFu0ll");
    static STRUCT_IF_C D_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu32ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu32ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu32ll_BFu0ll, D_BFu32ll_BFu0ll)
//============================================================================



static void Test_D_BFu32ll_BFu0s()
{
  {
    init_simple_test("D_BFu32ll_BFu0s");
    static STRUCT_IF_C D_BFu32ll_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu32ll_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu32ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu32ll_BFu0s, D_BFu32ll_BFu0s)
//============================================================================



static void Test_D_BFu33_BFu0c()
{
  {
    init_simple_test("D_BFu33_BFu0c");
    static STRUCT_IF_C D_BFu33_BFu0c lv;
    check2(sizeof(lv), 13, "sizeof(D_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu33_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu33_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "D_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "D_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu33_BFu0c, D_BFu33_BFu0c)
//============================================================================



static void Test_D_BFu33_BFu0i()
{
  {
    init_simple_test("D_BFu33_BFu0i");
    static STRUCT_IF_C D_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,16), "sizeof(D_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu33_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu33_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "D_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "D_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu33_BFu0i, D_BFu33_BFu0i)
//============================================================================



static void Test_D_BFu33_BFu0ll()
{
  {
    init_simple_test("D_BFu33_BFu0ll");
    static STRUCT_IF_C D_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,16), "sizeof(D_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu33_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu33_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "D_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "D_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu33_BFu0ll, D_BFu33_BFu0ll)
//============================================================================



static void Test_D_BFu33_BFu0s()
{
  {
    init_simple_test("D_BFu33_BFu0s");
    static STRUCT_IF_C D_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(14,14), "sizeof(D_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu33_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu33_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "D_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "D_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu33_BFu0s, D_BFu33_BFu0s)
//============================================================================



static void Test_D_BFu7c_BFu0c()
{
  {
    init_simple_test("D_BFu7c_BFu0c");
    static STRUCT_IF_C D_BFu7c_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu7c_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu7c_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7c_BFu0c, D_BFu7c_BFu0c)
//============================================================================



static void Test_D_BFu7c_BFu0i()
{
  {
    init_simple_test("D_BFu7c_BFu0i");
    static STRUCT_IF_C D_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu7c_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu7c_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7c_BFu0i, D_BFu7c_BFu0i)
//============================================================================



static void Test_D_BFu7c_BFu0ll()
{
  {
    init_simple_test("D_BFu7c_BFu0ll");
    static STRUCT_IF_C D_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu7c_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu7c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7c_BFu0ll, D_BFu7c_BFu0ll)
//============================================================================



static void Test_D_BFu7c_BFu0s()
{
  {
    init_simple_test("D_BFu7c_BFu0s");
    static STRUCT_IF_C D_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu7c_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu7c_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7c_BFu0s, D_BFu7c_BFu0s)
//============================================================================



static void Test_D_BFu7i_BFu0c()
{
  {
    init_simple_test("D_BFu7i_BFu0c");
    static STRUCT_IF_C D_BFu7i_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu7i_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu7i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7i_BFu0c, D_BFu7i_BFu0c)
//============================================================================



static void Test_D_BFu7i_BFu0i()
{
  {
    init_simple_test("D_BFu7i_BFu0i");
    static STRUCT_IF_C D_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu7i_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu7i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7i_BFu0i, D_BFu7i_BFu0i)
//============================================================================



static void Test_D_BFu7i_BFu0ll()
{
  {
    init_simple_test("D_BFu7i_BFu0ll");
    static STRUCT_IF_C D_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu7i_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu7i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7i_BFu0ll, D_BFu7i_BFu0ll)
//============================================================================



static void Test_D_BFu7i_BFu0s()
{
  {
    init_simple_test("D_BFu7i_BFu0s");
    static STRUCT_IF_C D_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu7i_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu7i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7i_BFu0s, D_BFu7i_BFu0s)
//============================================================================



static void Test_D_BFu7ll_BFu0c()
{
  {
    init_simple_test("D_BFu7ll_BFu0c");
    static STRUCT_IF_C D_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu7ll_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu7ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7ll_BFu0c, D_BFu7ll_BFu0c)
//============================================================================



static void Test_D_BFu7ll_BFu0i()
{
  {
    init_simple_test("D_BFu7ll_BFu0i");
    static STRUCT_IF_C D_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu7ll_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu7ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7ll_BFu0i, D_BFu7ll_BFu0i)
//============================================================================



static void Test_D_BFu7ll_BFu0ll()
{
  {
    init_simple_test("D_BFu7ll_BFu0ll");
    static STRUCT_IF_C D_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu7ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu7ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7ll_BFu0ll, D_BFu7ll_BFu0ll)
//============================================================================



static void Test_D_BFu7ll_BFu0s()
{
  {
    init_simple_test("D_BFu7ll_BFu0s");
    static STRUCT_IF_C D_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu7ll_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu7ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7ll_BFu0s, D_BFu7ll_BFu0s)
//============================================================================



static void Test_D_BFu7s_BFu0c()
{
  {
    init_simple_test("D_BFu7s_BFu0c");
    static STRUCT_IF_C D_BFu7s_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu7s_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu7s_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7s_BFu0c, D_BFu7s_BFu0c)
//============================================================================



static void Test_D_BFu7s_BFu0i()
{
  {
    init_simple_test("D_BFu7s_BFu0i");
    static STRUCT_IF_C D_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu7s_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu7s_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7s_BFu0i, D_BFu7s_BFu0i)
//============================================================================



static void Test_D_BFu7s_BFu0ll()
{
  {
    init_simple_test("D_BFu7s_BFu0ll");
    static STRUCT_IF_C D_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu7s_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu7s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7s_BFu0ll, D_BFu7s_BFu0ll)
//============================================================================



static void Test_D_BFu7s_BFu0s()
{
  {
    init_simple_test("D_BFu7s_BFu0s");
    static STRUCT_IF_C D_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu7s_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu7s_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7s_BFu0s, D_BFu7s_BFu0s)
//============================================================================



static void Test_D_BFu8c_BFu0c()
{
  {
    init_simple_test("D_BFu8c_BFu0c");
    static STRUCT_IF_C D_BFu8c_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu8c_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu8c_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8c_BFu0c, D_BFu8c_BFu0c)
//============================================================================



static void Test_D_BFu8c_BFu0i()
{
  {
    init_simple_test("D_BFu8c_BFu0i");
    static STRUCT_IF_C D_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu8c_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu8c_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8c_BFu0i, D_BFu8c_BFu0i)
//============================================================================



static void Test_D_BFu8c_BFu0ll()
{
  {
    init_simple_test("D_BFu8c_BFu0ll");
    static STRUCT_IF_C D_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu8c_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu8c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8c_BFu0ll, D_BFu8c_BFu0ll)
//============================================================================



static void Test_D_BFu8c_BFu0s()
{
  {
    init_simple_test("D_BFu8c_BFu0s");
    static STRUCT_IF_C D_BFu8c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu8c_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu8c_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8c_BFu0s, D_BFu8c_BFu0s)
//============================================================================



static void Test_D_BFu8i_BFu0c()
{
  {
    init_simple_test("D_BFu8i_BFu0c");
    static STRUCT_IF_C D_BFu8i_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu8i_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu8i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8i_BFu0c, D_BFu8i_BFu0c)
//============================================================================



static void Test_D_BFu8i_BFu0i()
{
  {
    init_simple_test("D_BFu8i_BFu0i");
    static STRUCT_IF_C D_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu8i_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu8i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8i_BFu0i, D_BFu8i_BFu0i)
//============================================================================



static void Test_D_BFu8i_BFu0ll()
{
  {
    init_simple_test("D_BFu8i_BFu0ll");
    static STRUCT_IF_C D_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu8i_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu8i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8i_BFu0ll, D_BFu8i_BFu0ll)
//============================================================================



static void Test_D_BFu8i_BFu0s()
{
  {
    init_simple_test("D_BFu8i_BFu0s");
    static STRUCT_IF_C D_BFu8i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu8i_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu8i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8i_BFu0s, D_BFu8i_BFu0s)
//============================================================================



static void Test_D_BFu8ll_BFu0c()
{
  {
    init_simple_test("D_BFu8ll_BFu0c");
    static STRUCT_IF_C D_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu8ll_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu8ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8ll_BFu0c, D_BFu8ll_BFu0c)
//============================================================================



static void Test_D_BFu8ll_BFu0i()
{
  {
    init_simple_test("D_BFu8ll_BFu0i");
    static STRUCT_IF_C D_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu8ll_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu8ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8ll_BFu0i, D_BFu8ll_BFu0i)
//============================================================================



static void Test_D_BFu8ll_BFu0ll()
{
  {
    init_simple_test("D_BFu8ll_BFu0ll");
    static STRUCT_IF_C D_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu8ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu8ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8ll_BFu0ll, D_BFu8ll_BFu0ll)
//============================================================================



static void Test_D_BFu8ll_BFu0s()
{
  {
    init_simple_test("D_BFu8ll_BFu0s");
    static STRUCT_IF_C D_BFu8ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu8ll_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu8ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8ll_BFu0s, D_BFu8ll_BFu0s)
//============================================================================



static void Test_D_BFu8s_BFu0c()
{
  {
    init_simple_test("D_BFu8s_BFu0c");
    static STRUCT_IF_C D_BFu8s_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu8s_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu8s_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8s_BFu0c, D_BFu8s_BFu0c)
//============================================================================



static void Test_D_BFu8s_BFu0i()
{
  {
    init_simple_test("D_BFu8s_BFu0i");
    static STRUCT_IF_C D_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu8s_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu8s_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8s_BFu0i, D_BFu8s_BFu0i)
//============================================================================



static void Test_D_BFu8s_BFu0ll()
{
  {
    init_simple_test("D_BFu8s_BFu0ll");
    static STRUCT_IF_C D_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu8s_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu8s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8s_BFu0ll, D_BFu8s_BFu0ll)
//============================================================================



static void Test_D_BFu8s_BFu0s()
{
  {
    init_simple_test("D_BFu8s_BFu0s");
    static STRUCT_IF_C D_BFu8s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu8s_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu8s_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8s_BFu0s, D_BFu8s_BFu0s)
//============================================================================



static void Test_D_BFu9i_BFu0c()
{
  {
    init_simple_test("D_BFu9i_BFu0c");
    static STRUCT_IF_C D_BFu9i_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu9i_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu9i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu9i_BFu0c, D_BFu9i_BFu0c)
//============================================================================



static void Test_D_BFu9i_BFu0i()
{
  {
    init_simple_test("D_BFu9i_BFu0i");
    static STRUCT_IF_C D_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu9i_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu9i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu9i_BFu0i, D_BFu9i_BFu0i)
//============================================================================



static void Test_D_BFu9i_BFu0ll()
{
  {
    init_simple_test("D_BFu9i_BFu0ll");
    static STRUCT_IF_C D_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu9i_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu9i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu9i_BFu0ll, D_BFu9i_BFu0ll)
//============================================================================



static void Test_D_BFu9i_BFu0s()
{
  {
    init_simple_test("D_BFu9i_BFu0s");
    static STRUCT_IF_C D_BFu9i_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu9i_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu9i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu9i_BFu0s, D_BFu9i_BFu0s)
//============================================================================



static void Test_D_BFu9ll_BFu0c()
{
  {
    init_simple_test("D_BFu9ll_BFu0c");
    static STRUCT_IF_C D_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu9ll_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu9ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu9ll_BFu0c, D_BFu9ll_BFu0c)
//============================================================================



static void Test_D_BFu9ll_BFu0i()
{
  {
    init_simple_test("D_BFu9ll_BFu0i");
    static STRUCT_IF_C D_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu9ll_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu9ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu9ll_BFu0i, D_BFu9ll_BFu0i)
//============================================================================



static void Test_D_BFu9ll_BFu0ll()
{
  {
    init_simple_test("D_BFu9ll_BFu0ll");
    static STRUCT_IF_C D_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu9ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu9ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu9ll_BFu0ll, D_BFu9ll_BFu0ll)
//============================================================================



static void Test_D_BFu9ll_BFu0s()
{
  {
    init_simple_test("D_BFu9ll_BFu0s");
    static STRUCT_IF_C D_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu9ll_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu9ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu9ll_BFu0s, D_BFu9ll_BFu0s)
//============================================================================



static void Test_D_BFu9s_BFu0c()
{
  {
    init_simple_test("D_BFu9s_BFu0c");
    static STRUCT_IF_C D_BFu9s_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu9s_BFu0c)");
    check_field_offset(lv, v1, 0, "D_BFu9s_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu9s_BFu0c, D_BFu9s_BFu0c)
//============================================================================



static void Test_D_BFu9s_BFu0i()
{
  {
    init_simple_test("D_BFu9s_BFu0i");
    static STRUCT_IF_C D_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu9s_BFu0i)");
    check_field_offset(lv, v1, 0, "D_BFu9s_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu9s_BFu0i, D_BFu9s_BFu0i)
//============================================================================



static void Test_D_BFu9s_BFu0ll()
{
  {
    init_simple_test("D_BFu9s_BFu0ll");
    static STRUCT_IF_C D_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu9s_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_BFu9s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu9s_BFu0ll, D_BFu9s_BFu0ll)
//============================================================================



static void Test_D_BFu9s_BFu0s()
{
  {
    init_simple_test("D_BFu9s_BFu0s");
    static STRUCT_IF_C D_BFu9s_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_BFu9s_BFu0s)");
    check_field_offset(lv, v1, 0, "D_BFu9s_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu9s_BFu0s, D_BFu9s_BFu0s)
//============================================================================



static void Test_D_C_BFu0c()
{
  {
    init_simple_test("D_C_BFu0c");
    static STRUCT_IF_C D_C_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(D_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_C_BFu0c)");
    check_field_offset(lv, v1, 0, "D_C_BFu0c.v1");
    check_field_offset(lv, v2, 8, "D_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_C_BFu0c, D_C_BFu0c)
//============================================================================



static void Test_D_C_BFu0i()
{
  {
    init_simple_test("D_C_BFu0i");
    static STRUCT_IF_C D_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_C_BFu0i)");
    check_field_offset(lv, v1, 0, "D_C_BFu0i.v1");
    check_field_offset(lv, v2, 8, "D_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_C_BFu0i, D_C_BFu0i)
//============================================================================



static void Test_D_C_BFu0ll()
{
  {
    init_simple_test("D_C_BFu0ll");
    static STRUCT_IF_C D_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_C_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_C_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "D_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_C_BFu0ll, D_C_BFu0ll)
//============================================================================



static void Test_D_C_BFu0s()
{
  {
    init_simple_test("D_C_BFu0s");
    static STRUCT_IF_C D_C_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_C_BFu0s)");
    check_field_offset(lv, v1, 0, "D_C_BFu0s.v1");
    check_field_offset(lv, v2, 8, "D_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_C_BFu0s, D_C_BFu0s)
//============================================================================



static void Test_D_D_BFu0c()
{
  {
    init_simple_test("D_D_BFu0c");
    static STRUCT_IF_C D_D_BFu0c lv;
    check2(sizeof(lv), 16, "sizeof(D_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_D_BFu0c)");
    check_field_offset(lv, v1, 0, "D_D_BFu0c.v1");
    check_field_offset(lv, v2, 8, "D_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_D_BFu0c, D_D_BFu0c)
//============================================================================



static void Test_D_D_BFu0i()
{
  {
    init_simple_test("D_D_BFu0i");
    static STRUCT_IF_C D_D_BFu0i lv;
    check2(sizeof(lv), 16, "sizeof(D_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_D_BFu0i)");
    check_field_offset(lv, v1, 0, "D_D_BFu0i.v1");
    check_field_offset(lv, v2, 8, "D_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_D_BFu0i, D_D_BFu0i)
//============================================================================



static void Test_D_D_BFu0ll()
{
  {
    init_simple_test("D_D_BFu0ll");
    static STRUCT_IF_C D_D_BFu0ll lv;
    check2(sizeof(lv), 16, "sizeof(D_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_D_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_D_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "D_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_D_BFu0ll, D_D_BFu0ll)
//============================================================================



static void Test_D_D_BFu0s()
{
  {
    init_simple_test("D_D_BFu0s");
    static STRUCT_IF_C D_D_BFu0s lv;
    check2(sizeof(lv), 16, "sizeof(D_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_D_BFu0s)");
    check_field_offset(lv, v1, 0, "D_D_BFu0s.v1");
    check_field_offset(lv, v2, 8, "D_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_D_BFu0s, D_D_BFu0s)
//============================================================================



static void Test_D_F_BFu0c()
{
  {
    init_simple_test("D_F_BFu0c");
    static STRUCT_IF_C D_F_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(D_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_F_BFu0c)");
    check_field_offset(lv, v1, 0, "D_F_BFu0c.v1");
    check_field_offset(lv, v2, 8, "D_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_F_BFu0c, D_F_BFu0c)
//============================================================================



static void Test_D_F_BFu0i()
{
  {
    init_simple_test("D_F_BFu0i");
    static STRUCT_IF_C D_F_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(D_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_F_BFu0i)");
    check_field_offset(lv, v1, 0, "D_F_BFu0i.v1");
    check_field_offset(lv, v2, 8, "D_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_F_BFu0i, D_F_BFu0i)
//============================================================================



static void Test_D_F_BFu0ll()
{
  {
    init_simple_test("D_F_BFu0ll");
    static STRUCT_IF_C D_F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_F_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_F_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "D_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_F_BFu0ll, D_F_BFu0ll)
//============================================================================



static void Test_D_F_BFu0s()
{
  {
    init_simple_test("D_F_BFu0s");
    static STRUCT_IF_C D_F_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(D_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_F_BFu0s)");
    check_field_offset(lv, v1, 0, "D_F_BFu0s.v1");
    check_field_offset(lv, v2, 8, "D_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_F_BFu0s, D_F_BFu0s)
//============================================================================



static void Test_D_I_BFu0c()
{
  {
    init_simple_test("D_I_BFu0c");
    static STRUCT_IF_C D_I_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(D_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_I_BFu0c)");
    check_field_offset(lv, v1, 0, "D_I_BFu0c.v1");
    check_field_offset(lv, v2, 8, "D_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_I_BFu0c, D_I_BFu0c)
//============================================================================



static void Test_D_I_BFu0i()
{
  {
    init_simple_test("D_I_BFu0i");
    static STRUCT_IF_C D_I_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(D_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_I_BFu0i)");
    check_field_offset(lv, v1, 0, "D_I_BFu0i.v1");
    check_field_offset(lv, v2, 8, "D_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_I_BFu0i, D_I_BFu0i)
//============================================================================



static void Test_D_I_BFu0ll()
{
  {
    init_simple_test("D_I_BFu0ll");
    static STRUCT_IF_C D_I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_I_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_I_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "D_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_I_BFu0ll, D_I_BFu0ll)
//============================================================================



static void Test_D_I_BFu0s()
{
  {
    init_simple_test("D_I_BFu0s");
    static STRUCT_IF_C D_I_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(D_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_I_BFu0s)");
    check_field_offset(lv, v1, 0, "D_I_BFu0s.v1");
    check_field_offset(lv, v2, 8, "D_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_I_BFu0s, D_I_BFu0s)
//============================================================================



static void Test_D_Ip_BFu0c()
{
  {
    init_simple_test("D_Ip_BFu0c");
    static STRUCT_IF_C D_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_Ip_BFu0c)");
    check_field_offset(lv, v1, 0, "D_Ip_BFu0c.v1");
    check_field_offset(lv, v2, 8, "D_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Ip_BFu0c, D_Ip_BFu0c)
//============================================================================



static void Test_D_Ip_BFu0i()
{
  {
    init_simple_test("D_Ip_BFu0i");
    static STRUCT_IF_C D_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Ip_BFu0i)");
    check_field_offset(lv, v1, 0, "D_Ip_BFu0i.v1");
    check_field_offset(lv, v2, 8, "D_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Ip_BFu0i, D_Ip_BFu0i)
//============================================================================



static void Test_D_Ip_BFu0ll()
{
  {
    init_simple_test("D_Ip_BFu0ll");
    static STRUCT_IF_C D_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Ip_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_Ip_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "D_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Ip_BFu0ll, D_Ip_BFu0ll)
//============================================================================



static void Test_D_Ip_BFu0s()
{
  {
    init_simple_test("D_Ip_BFu0s");
    static STRUCT_IF_C D_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Ip_BFu0s)");
    check_field_offset(lv, v1, 0, "D_Ip_BFu0s.v1");
    check_field_offset(lv, v2, 8, "D_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Ip_BFu0s, D_Ip_BFu0s)
//============================================================================



static void Test_D_L_BFu0c()
{
  {
    init_simple_test("D_L_BFu0c");
    static STRUCT_IF_C D_L_BFu0c lv;
    check2(sizeof(lv), 16, "sizeof(D_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_L_BFu0c)");
    check_field_offset(lv, v1, 0, "D_L_BFu0c.v1");
    check_field_offset(lv, v2, 8, "D_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_L_BFu0c, D_L_BFu0c)
//============================================================================



static void Test_D_L_BFu0i()
{
  {
    init_simple_test("D_L_BFu0i");
    static STRUCT_IF_C D_L_BFu0i lv;
    check2(sizeof(lv), 16, "sizeof(D_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_L_BFu0i)");
    check_field_offset(lv, v1, 0, "D_L_BFu0i.v1");
    check_field_offset(lv, v2, 8, "D_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_L_BFu0i, D_L_BFu0i)
//============================================================================



static void Test_D_L_BFu0ll()
{
  {
    init_simple_test("D_L_BFu0ll");
    static STRUCT_IF_C D_L_BFu0ll lv;
    check2(sizeof(lv), 16, "sizeof(D_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_L_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_L_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "D_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_L_BFu0ll, D_L_BFu0ll)
//============================================================================



static void Test_D_L_BFu0s()
{
  {
    init_simple_test("D_L_BFu0s");
    static STRUCT_IF_C D_L_BFu0s lv;
    check2(sizeof(lv), 16, "sizeof(D_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_L_BFu0s)");
    check_field_offset(lv, v1, 0, "D_L_BFu0s.v1");
    check_field_offset(lv, v2, 8, "D_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_L_BFu0s, D_L_BFu0s)
//============================================================================



static void Test_D_S_BFu0c()
{
  {
    init_simple_test("D_S_BFu0c");
    static STRUCT_IF_C D_S_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(D_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_S_BFu0c)");
    check_field_offset(lv, v1, 0, "D_S_BFu0c.v1");
    check_field_offset(lv, v2, 8, "D_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_S_BFu0c, D_S_BFu0c)
//============================================================================



static void Test_D_S_BFu0i()
{
  {
    init_simple_test("D_S_BFu0i");
    static STRUCT_IF_C D_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_S_BFu0i)");
    check_field_offset(lv, v1, 0, "D_S_BFu0i.v1");
    check_field_offset(lv, v2, 8, "D_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_S_BFu0i, D_S_BFu0i)
//============================================================================



static void Test_D_S_BFu0ll()
{
  {
    init_simple_test("D_S_BFu0ll");
    static STRUCT_IF_C D_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_S_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_S_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "D_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_S_BFu0ll, D_S_BFu0ll)
//============================================================================



static void Test_D_S_BFu0s()
{
  {
    init_simple_test("D_S_BFu0s");
    static STRUCT_IF_C D_S_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(D_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_S_BFu0s)");
    check_field_offset(lv, v1, 0, "D_S_BFu0s.v1");
    check_field_offset(lv, v2, 8, "D_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_S_BFu0s, D_S_BFu0s)
//============================================================================



static void Test_D_Uc_BFu0c()
{
  {
    init_simple_test("D_Uc_BFu0c");
    static STRUCT_IF_C D_Uc_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(D_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_Uc_BFu0c)");
    check_field_offset(lv, v1, 0, "D_Uc_BFu0c.v1");
    check_field_offset(lv, v2, 8, "D_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Uc_BFu0c, D_Uc_BFu0c)
//============================================================================



static void Test_D_Uc_BFu0i()
{
  {
    init_simple_test("D_Uc_BFu0i");
    static STRUCT_IF_C D_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Uc_BFu0i)");
    check_field_offset(lv, v1, 0, "D_Uc_BFu0i.v1");
    check_field_offset(lv, v2, 8, "D_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Uc_BFu0i, D_Uc_BFu0i)
//============================================================================



static void Test_D_Uc_BFu0ll()
{
  {
    init_simple_test("D_Uc_BFu0ll");
    static STRUCT_IF_C D_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Uc_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_Uc_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "D_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Uc_BFu0ll, D_Uc_BFu0ll)
//============================================================================



static void Test_D_Uc_BFu0s()
{
  {
    init_simple_test("D_Uc_BFu0s");
    static STRUCT_IF_C D_Uc_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(D_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Uc_BFu0s)");
    check_field_offset(lv, v1, 0, "D_Uc_BFu0s.v1");
    check_field_offset(lv, v2, 8, "D_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Uc_BFu0s, D_Uc_BFu0s)
//============================================================================



static void Test_D_Ui_BFu0c()
{
  {
    init_simple_test("D_Ui_BFu0c");
    static STRUCT_IF_C D_Ui_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(D_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_Ui_BFu0c)");
    check_field_offset(lv, v1, 0, "D_Ui_BFu0c.v1");
    check_field_offset(lv, v2, 8, "D_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Ui_BFu0c, D_Ui_BFu0c)
//============================================================================



static void Test_D_Ui_BFu0i()
{
  {
    init_simple_test("D_Ui_BFu0i");
    static STRUCT_IF_C D_Ui_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(D_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Ui_BFu0i)");
    check_field_offset(lv, v1, 0, "D_Ui_BFu0i.v1");
    check_field_offset(lv, v2, 8, "D_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Ui_BFu0i, D_Ui_BFu0i)
//============================================================================



static void Test_D_Ui_BFu0ll()
{
  {
    init_simple_test("D_Ui_BFu0ll");
    static STRUCT_IF_C D_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Ui_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_Ui_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "D_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Ui_BFu0ll, D_Ui_BFu0ll)
//============================================================================



static void Test_D_Ui_BFu0s()
{
  {
    init_simple_test("D_Ui_BFu0s");
    static STRUCT_IF_C D_Ui_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(D_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Ui_BFu0s)");
    check_field_offset(lv, v1, 0, "D_Ui_BFu0s.v1");
    check_field_offset(lv, v2, 8, "D_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Ui_BFu0s, D_Ui_BFu0s)
//============================================================================



static void Test_D_Ul_BFu0c()
{
  {
    init_simple_test("D_Ul_BFu0c");
    static STRUCT_IF_C D_Ul_BFu0c lv;
    check2(sizeof(lv), 16, "sizeof(D_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_Ul_BFu0c)");
    check_field_offset(lv, v1, 0, "D_Ul_BFu0c.v1");
    check_field_offset(lv, v2, 8, "D_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Ul_BFu0c, D_Ul_BFu0c)
//============================================================================



static void Test_D_Ul_BFu0i()
{
  {
    init_simple_test("D_Ul_BFu0i");
    static STRUCT_IF_C D_Ul_BFu0i lv;
    check2(sizeof(lv), 16, "sizeof(D_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Ul_BFu0i)");
    check_field_offset(lv, v1, 0, "D_Ul_BFu0i.v1");
    check_field_offset(lv, v2, 8, "D_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Ul_BFu0i, D_Ul_BFu0i)
//============================================================================



static void Test_D_Ul_BFu0ll()
{
  {
    init_simple_test("D_Ul_BFu0ll");
    static STRUCT_IF_C D_Ul_BFu0ll lv;
    check2(sizeof(lv), 16, "sizeof(D_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Ul_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_Ul_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "D_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Ul_BFu0ll, D_Ul_BFu0ll)
//============================================================================



static void Test_D_Ul_BFu0s()
{
  {
    init_simple_test("D_Ul_BFu0s");
    static STRUCT_IF_C D_Ul_BFu0s lv;
    check2(sizeof(lv), 16, "sizeof(D_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Ul_BFu0s)");
    check_field_offset(lv, v1, 0, "D_Ul_BFu0s.v1");
    check_field_offset(lv, v2, 8, "D_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Ul_BFu0s, D_Ul_BFu0s)
//============================================================================



static void Test_D_Us_BFu0c()
{
  {
    init_simple_test("D_Us_BFu0c");
    static STRUCT_IF_C D_Us_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(D_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_Us_BFu0c)");
    check_field_offset(lv, v1, 0, "D_Us_BFu0c.v1");
    check_field_offset(lv, v2, 8, "D_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Us_BFu0c, D_Us_BFu0c)
//============================================================================



static void Test_D_Us_BFu0i()
{
  {
    init_simple_test("D_Us_BFu0i");
    static STRUCT_IF_C D_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(D_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Us_BFu0i)");
    check_field_offset(lv, v1, 0, "D_Us_BFu0i.v1");
    check_field_offset(lv, v2, 8, "D_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Us_BFu0i, D_Us_BFu0i)
//============================================================================



static void Test_D_Us_BFu0ll()
{
  {
    init_simple_test("D_Us_BFu0ll");
    static STRUCT_IF_C D_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Us_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_Us_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "D_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Us_BFu0ll, D_Us_BFu0ll)
//============================================================================



static void Test_D_Us_BFu0s()
{
  {
    init_simple_test("D_Us_BFu0s");
    static STRUCT_IF_C D_Us_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(D_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Us_BFu0s)");
    check_field_offset(lv, v1, 0, "D_Us_BFu0s.v1");
    check_field_offset(lv, v2, 8, "D_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Us_BFu0s, D_Us_BFu0s)
//============================================================================



static void Test_D_Vp_BFu0c()
{
  {
    init_simple_test("D_Vp_BFu0c");
    static STRUCT_IF_C D_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(D_Vp_BFu0c)");
    check_field_offset(lv, v1, 0, "D_Vp_BFu0c.v1");
    check_field_offset(lv, v2, 8, "D_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Vp_BFu0c, D_Vp_BFu0c)
//============================================================================



static void Test_D_Vp_BFu0i()
{
  {
    init_simple_test("D_Vp_BFu0i");
    static STRUCT_IF_C D_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Vp_BFu0i)");
    check_field_offset(lv, v1, 0, "D_Vp_BFu0i.v1");
    check_field_offset(lv, v2, 8, "D_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Vp_BFu0i, D_Vp_BFu0i)
//============================================================================



static void Test_D_Vp_BFu0ll()
{
  {
    init_simple_test("D_Vp_BFu0ll");
    static STRUCT_IF_C D_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Vp_BFu0ll)");
    check_field_offset(lv, v1, 0, "D_Vp_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "D_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Vp_BFu0ll, D_Vp_BFu0ll)
//============================================================================



static void Test_D_Vp_BFu0s()
{
  {
    init_simple_test("D_Vp_BFu0s");
    static STRUCT_IF_C D_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(D_Vp_BFu0s)");
    check_field_offset(lv, v1, 0, "D_Vp_BFu0s.v1");
    check_field_offset(lv, v2, 8, "D_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Vp_BFu0s, D_Vp_BFu0s)
//============================================================================



static void Test_F_BFu0c()
{
  {
    init_simple_test("F_BFu0c");
    static STRUCT_IF_C F_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c, F_BFu0c)
//============================================================================



static void Test_F_BFu0c_BFu0c()
{
  {
    init_simple_test("F_BFu0c_BFu0c");
    static STRUCT_IF_C F_BFu0c_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(F_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu0c, F_BFu0c_BFu0c)
//============================================================================



static void Test_F_BFu0c_BFu0i()
{
  {
    init_simple_test("F_BFu0c_BFu0i");
    static STRUCT_IF_C F_BFu0c_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(F_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0c_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu0i, F_BFu0c_BFu0i)
//============================================================================



static void Test_F_BFu0c_BFu0ll()
{
  {
    init_simple_test("F_BFu0c_BFu0ll");
    static STRUCT_IF_C F_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(F_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0c_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu0ll, F_BFu0c_BFu0ll)
//============================================================================



static void Test_F_BFu0c_BFu0s()
{
  {
    init_simple_test("F_BFu0c_BFu0s");
    static STRUCT_IF_C F_BFu0c_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(F_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0c_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu0s, F_BFu0c_BFu0s)
//============================================================================



static void Test_F_BFu0c_BFu15i()
{
  {
    init_simple_test("F_BFu0c_BFu15i");
    static STRUCT_IF_C F_BFu0c_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu15i)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu15i.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu15i, F_BFu0c_BFu15i)
//============================================================================



static void Test_F_BFu0c_BFu15ll()
{
  {
    init_simple_test("F_BFu0c_BFu15ll");
    static STRUCT_IF_C F_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu15ll)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu15ll, F_BFu0c_BFu15ll)
//============================================================================



static void Test_F_BFu0c_BFu15s()
{
  {
    init_simple_test("F_BFu0c_BFu15s");
    static STRUCT_IF_C F_BFu0c_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu15s)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu15s.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu15s, F_BFu0c_BFu15s)
//============================================================================



static void Test_F_BFu0c_BFu16i()
{
  {
    init_simple_test("F_BFu0c_BFu16i");
    static STRUCT_IF_C F_BFu0c_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu16i)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu16i.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu16i, F_BFu0c_BFu16i)
//============================================================================



static void Test_F_BFu0c_BFu16ll()
{
  {
    init_simple_test("F_BFu0c_BFu16ll");
    static STRUCT_IF_C F_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu16ll)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu16ll, F_BFu0c_BFu16ll)
//============================================================================



static void Test_F_BFu0c_BFu16s()
{
  {
    init_simple_test("F_BFu0c_BFu16s");
    static STRUCT_IF_C F_BFu0c_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu16s)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu16s.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu16s, F_BFu0c_BFu16s)
//============================================================================



static void Test_F_BFu0c_BFu17i()
{
  {
    init_simple_test("F_BFu0c_BFu17i");
    static STRUCT_IF_C F_BFu0c_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(F_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu17i)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu17i.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "F_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "F_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu17i, F_BFu0c_BFu17i)
//============================================================================



static void Test_F_BFu0c_BFu17ll()
{
  {
    init_simple_test("F_BFu0c_BFu17ll");
    static STRUCT_IF_C F_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(F_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu17ll)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "F_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "F_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu17ll, F_BFu0c_BFu17ll)
//============================================================================



static void Test_F_BFu0c_BFu1c()
{
  {
    init_simple_test("F_BFu0c_BFu1c");
    static STRUCT_IF_C F_BFu0c_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu1c)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu1c.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu1c, F_BFu0c_BFu1c)
//============================================================================



static void Test_F_BFu0c_BFu1i()
{
  {
    init_simple_test("F_BFu0c_BFu1i");
    static STRUCT_IF_C F_BFu0c_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu1i)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu1i.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu1i, F_BFu0c_BFu1i)
//============================================================================



static void Test_F_BFu0c_BFu1ll()
{
  {
    init_simple_test("F_BFu0c_BFu1ll");
    static STRUCT_IF_C F_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu1ll)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu1ll, F_BFu0c_BFu1ll)
//============================================================================



static void Test_F_BFu0c_BFu1s()
{
  {
    init_simple_test("F_BFu0c_BFu1s");
    static STRUCT_IF_C F_BFu0c_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu1s)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu1s.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu1s, F_BFu0c_BFu1s)
//============================================================================



static void Test_F_BFu0c_BFu31i()
{
  {
    init_simple_test("F_BFu0c_BFu31i");
    static STRUCT_IF_C F_BFu0c_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu31i)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu31i.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "F_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "F_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu31i, F_BFu0c_BFu31i)
//============================================================================



static void Test_F_BFu0c_BFu31ll()
{
  {
    init_simple_test("F_BFu0c_BFu31ll");
    static STRUCT_IF_C F_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu31ll)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "F_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "F_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu31ll, F_BFu0c_BFu31ll)
//============================================================================



static void Test_F_BFu0c_BFu32i()
{
  {
    init_simple_test("F_BFu0c_BFu32i");
    static STRUCT_IF_C F_BFu0c_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu32i)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu32i.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "F_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "F_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu32i, F_BFu0c_BFu32i)
//============================================================================



static void Test_F_BFu0c_BFu32ll()
{
  {
    init_simple_test("F_BFu0c_BFu32ll");
    static STRUCT_IF_C F_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu32ll)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "F_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "F_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu32ll, F_BFu0c_BFu32ll)
//============================================================================



static void Test_F_BFu0c_BFu33()
{
  {
    init_simple_test("F_BFu0c_BFu33");
    static STRUCT_IF_C F_BFu0c_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(F_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu33)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu33.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "F_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "F_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu33, F_BFu0c_BFu33)
//============================================================================



static void Test_F_BFu0c_BFu7c()
{
  {
    init_simple_test("F_BFu0c_BFu7c");
    static STRUCT_IF_C F_BFu0c_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu7c)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu7c.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu7c, F_BFu0c_BFu7c)
//============================================================================



static void Test_F_BFu0c_BFu7i()
{
  {
    init_simple_test("F_BFu0c_BFu7i");
    static STRUCT_IF_C F_BFu0c_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu7i)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu7i.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu7i, F_BFu0c_BFu7i)
//============================================================================



static void Test_F_BFu0c_BFu7ll()
{
  {
    init_simple_test("F_BFu0c_BFu7ll");
    static STRUCT_IF_C F_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu7ll)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu7ll, F_BFu0c_BFu7ll)
//============================================================================



static void Test_F_BFu0c_BFu7s()
{
  {
    init_simple_test("F_BFu0c_BFu7s");
    static STRUCT_IF_C F_BFu0c_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu7s)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu7s.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu7s, F_BFu0c_BFu7s)
//============================================================================



static void Test_F_BFu0c_BFu8c()
{
  {
    init_simple_test("F_BFu0c_BFu8c");
    static STRUCT_IF_C F_BFu0c_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu8c)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu8c.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu8c, F_BFu0c_BFu8c)
//============================================================================



static void Test_F_BFu0c_BFu8i()
{
  {
    init_simple_test("F_BFu0c_BFu8i");
    static STRUCT_IF_C F_BFu0c_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu8i)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu8i.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu8i, F_BFu0c_BFu8i)
//============================================================================



static void Test_F_BFu0c_BFu8ll()
{
  {
    init_simple_test("F_BFu0c_BFu8ll");
    static STRUCT_IF_C F_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu8ll)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu8ll, F_BFu0c_BFu8ll)
//============================================================================



static void Test_F_BFu0c_BFu8s()
{
  {
    init_simple_test("F_BFu0c_BFu8s");
    static STRUCT_IF_C F_BFu0c_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu8s)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu8s.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu8s, F_BFu0c_BFu8s)
//============================================================================



static void Test_F_BFu0c_BFu9i()
{
  {
    init_simple_test("F_BFu0c_BFu9i");
    static STRUCT_IF_C F_BFu0c_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu9i)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu9i.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu9i, F_BFu0c_BFu9i)
//============================================================================



static void Test_F_BFu0c_BFu9ll()
{
  {
    init_simple_test("F_BFu0c_BFu9ll");
    static STRUCT_IF_C F_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu9ll)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu9ll, F_BFu0c_BFu9ll)
//============================================================================



static void Test_F_BFu0c_BFu9s()
{
  {
    init_simple_test("F_BFu0c_BFu9s");
    static STRUCT_IF_C F_BFu0c_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_BFu9s)");
    check_field_offset(lv, v1, 0, "F_BFu0c_BFu9s.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_BFu9s, F_BFu0c_BFu9s)
//============================================================================



static void Test_F_BFu0c_C()
{
  {
    init_simple_test("F_BFu0c_C");
    static STRUCT_IF_C F_BFu0c_C lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_C)");
    check_field_offset(lv, v1, 0, "F_BFu0c_C.v1");
    check_field_offset(lv, v2, 4, "F_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_C, F_BFu0c_C)
//============================================================================



static void Test_F_BFu0c_D()
{
  {
    init_simple_test("F_BFu0c_D");
    static STRUCT_IF_C F_BFu0c_D lv;
    check2(sizeof(lv), 12, "sizeof(F_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_D)");
    check_field_offset(lv, v1, 0, "F_BFu0c_D.v1");
    check_field_offset(lv, v2, 4, "F_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_D, F_BFu0c_D)
//============================================================================



static void Test_F_BFu0c_F()
{
  {
    init_simple_test("F_BFu0c_F");
    static STRUCT_IF_C F_BFu0c_F lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_F)");
    check_field_offset(lv, v1, 0, "F_BFu0c_F.v1");
    check_field_offset(lv, v2, 4, "F_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_F, F_BFu0c_F)
//============================================================================



static void Test_F_BFu0c_I()
{
  {
    init_simple_test("F_BFu0c_I");
    static STRUCT_IF_C F_BFu0c_I lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_I)");
    check_field_offset(lv, v1, 0, "F_BFu0c_I.v1");
    check_field_offset(lv, v2, 4, "F_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_I, F_BFu0c_I)
//============================================================================



static void Test_F_BFu0c_Ip()
{
  {
    init_simple_test("F_BFu0c_Ip");
    static STRUCT_IF_C F_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_Ip)");
    check_field_offset(lv, v1, 0, "F_BFu0c_Ip.v1");
    check_field_offset(lv, v2, 4, "F_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_Ip, F_BFu0c_Ip)
//============================================================================



static void Test_F_BFu0c_L()
{
  {
    init_simple_test("F_BFu0c_L");
    static STRUCT_IF_C F_BFu0c_L lv;
    check2(sizeof(lv), 12, "sizeof(F_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_L)");
    check_field_offset(lv, v1, 0, "F_BFu0c_L.v1");
    check_field_offset(lv, v2, 4, "F_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_L, F_BFu0c_L)
//============================================================================



static void Test_F_BFu0c_S()
{
  {
    init_simple_test("F_BFu0c_S");
    static STRUCT_IF_C F_BFu0c_S lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_S)");
    check_field_offset(lv, v1, 0, "F_BFu0c_S.v1");
    check_field_offset(lv, v2, 4, "F_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_S, F_BFu0c_S)
//============================================================================



static void Test_F_BFu0c_Uc()
{
  {
    init_simple_test("F_BFu0c_Uc");
    static STRUCT_IF_C F_BFu0c_Uc lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_Uc)");
    check_field_offset(lv, v1, 0, "F_BFu0c_Uc.v1");
    check_field_offset(lv, v2, 4, "F_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_Uc, F_BFu0c_Uc)
//============================================================================



static void Test_F_BFu0c_Ui()
{
  {
    init_simple_test("F_BFu0c_Ui");
    static STRUCT_IF_C F_BFu0c_Ui lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_Ui)");
    check_field_offset(lv, v1, 0, "F_BFu0c_Ui.v1");
    check_field_offset(lv, v2, 4, "F_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_Ui, F_BFu0c_Ui)
//============================================================================



static void Test_F_BFu0c_Ul()
{
  {
    init_simple_test("F_BFu0c_Ul");
    static STRUCT_IF_C F_BFu0c_Ul lv;
    check2(sizeof(lv), 12, "sizeof(F_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_Ul)");
    check_field_offset(lv, v1, 0, "F_BFu0c_Ul.v1");
    check_field_offset(lv, v2, 4, "F_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_Ul, F_BFu0c_Ul)
//============================================================================



static void Test_F_BFu0c_Us()
{
  {
    init_simple_test("F_BFu0c_Us");
    static STRUCT_IF_C F_BFu0c_Us lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_Us)");
    check_field_offset(lv, v1, 0, "F_BFu0c_Us.v1");
    check_field_offset(lv, v2, 4, "F_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_Us, F_BFu0c_Us)
//============================================================================



static void Test_F_BFu0c_Vp()
{
  {
    init_simple_test("F_BFu0c_Vp");
    static STRUCT_IF_C F_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu0c_Vp)");
    check_field_offset(lv, v1, 0, "F_BFu0c_Vp.v1");
    check_field_offset(lv, v2, 4, "F_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0c_Vp, F_BFu0c_Vp)
//============================================================================



static void Test_F_BFu0i()
{
  {
    init_simple_test("F_BFu0i");
    static STRUCT_IF_C F_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i, F_BFu0i)
//============================================================================



static void Test_F_BFu0i_BFu0c()
{
  {
    init_simple_test("F_BFu0i_BFu0c");
    static STRUCT_IF_C F_BFu0i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(F_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu0c, F_BFu0i_BFu0c)
//============================================================================



static void Test_F_BFu0i_BFu0i()
{
  {
    init_simple_test("F_BFu0i_BFu0i");
    static STRUCT_IF_C F_BFu0i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(F_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu0i, F_BFu0i_BFu0i)
//============================================================================



static void Test_F_BFu0i_BFu0ll()
{
  {
    init_simple_test("F_BFu0i_BFu0ll");
    static STRUCT_IF_C F_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(F_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu0ll, F_BFu0i_BFu0ll)
//============================================================================



static void Test_F_BFu0i_BFu0s()
{
  {
    init_simple_test("F_BFu0i_BFu0s");
    static STRUCT_IF_C F_BFu0i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(F_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu0s, F_BFu0i_BFu0s)
//============================================================================



static void Test_F_BFu0i_BFu15i()
{
  {
    init_simple_test("F_BFu0i_BFu15i");
    static STRUCT_IF_C F_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu15i)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu15i.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu15i, F_BFu0i_BFu15i)
//============================================================================



static void Test_F_BFu0i_BFu15ll()
{
  {
    init_simple_test("F_BFu0i_BFu15ll");
    static STRUCT_IF_C F_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu15ll)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu15ll, F_BFu0i_BFu15ll)
//============================================================================



static void Test_F_BFu0i_BFu15s()
{
  {
    init_simple_test("F_BFu0i_BFu15s");
    static STRUCT_IF_C F_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu15s)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu15s.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu15s, F_BFu0i_BFu15s)
//============================================================================



static void Test_F_BFu0i_BFu16i()
{
  {
    init_simple_test("F_BFu0i_BFu16i");
    static STRUCT_IF_C F_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu16i)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu16i.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu16i, F_BFu0i_BFu16i)
//============================================================================



static void Test_F_BFu0i_BFu16ll()
{
  {
    init_simple_test("F_BFu0i_BFu16ll");
    static STRUCT_IF_C F_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu16ll)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu16ll, F_BFu0i_BFu16ll)
//============================================================================



static void Test_F_BFu0i_BFu16s()
{
  {
    init_simple_test("F_BFu0i_BFu16s");
    static STRUCT_IF_C F_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu16s)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu16s.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu16s, F_BFu0i_BFu16s)
//============================================================================



static void Test_F_BFu0i_BFu17i()
{
  {
    init_simple_test("F_BFu0i_BFu17i");
    static STRUCT_IF_C F_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(F_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu17i)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu17i.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "F_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "F_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu17i, F_BFu0i_BFu17i)
//============================================================================



static void Test_F_BFu0i_BFu17ll()
{
  {
    init_simple_test("F_BFu0i_BFu17ll");
    static STRUCT_IF_C F_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(F_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu17ll)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "F_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "F_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu17ll, F_BFu0i_BFu17ll)
//============================================================================



static void Test_F_BFu0i_BFu1c()
{
  {
    init_simple_test("F_BFu0i_BFu1c");
    static STRUCT_IF_C F_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu1c)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu1c.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu1c, F_BFu0i_BFu1c)
//============================================================================



static void Test_F_BFu0i_BFu1i()
{
  {
    init_simple_test("F_BFu0i_BFu1i");
    static STRUCT_IF_C F_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu1i)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu1i.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu1i, F_BFu0i_BFu1i)
//============================================================================



static void Test_F_BFu0i_BFu1ll()
{
  {
    init_simple_test("F_BFu0i_BFu1ll");
    static STRUCT_IF_C F_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu1ll)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu1ll, F_BFu0i_BFu1ll)
//============================================================================



static void Test_F_BFu0i_BFu1s()
{
  {
    init_simple_test("F_BFu0i_BFu1s");
    static STRUCT_IF_C F_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu1s)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu1s.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu1s, F_BFu0i_BFu1s)
//============================================================================



static void Test_F_BFu0i_BFu31i()
{
  {
    init_simple_test("F_BFu0i_BFu31i");
    static STRUCT_IF_C F_BFu0i_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu31i)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu31i.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "F_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "F_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu31i, F_BFu0i_BFu31i)
//============================================================================



static void Test_F_BFu0i_BFu31ll()
{
  {
    init_simple_test("F_BFu0i_BFu31ll");
    static STRUCT_IF_C F_BFu0i_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu31ll)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "F_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "F_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu31ll, F_BFu0i_BFu31ll)
//============================================================================



static void Test_F_BFu0i_BFu32i()
{
  {
    init_simple_test("F_BFu0i_BFu32i");
    static STRUCT_IF_C F_BFu0i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu32i)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu32i.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "F_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "F_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu32i, F_BFu0i_BFu32i)
//============================================================================



static void Test_F_BFu0i_BFu32ll()
{
  {
    init_simple_test("F_BFu0i_BFu32ll");
    static STRUCT_IF_C F_BFu0i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu32ll)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "F_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "F_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu32ll, F_BFu0i_BFu32ll)
//============================================================================



static void Test_F_BFu0i_BFu33()
{
  {
    init_simple_test("F_BFu0i_BFu33");
    static STRUCT_IF_C F_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(F_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu33)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu33.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "F_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "F_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu33, F_BFu0i_BFu33)
//============================================================================



static void Test_F_BFu0i_BFu7c()
{
  {
    init_simple_test("F_BFu0i_BFu7c");
    static STRUCT_IF_C F_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu7c)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu7c.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu7c, F_BFu0i_BFu7c)
//============================================================================



static void Test_F_BFu0i_BFu7i()
{
  {
    init_simple_test("F_BFu0i_BFu7i");
    static STRUCT_IF_C F_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu7i)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu7i.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu7i, F_BFu0i_BFu7i)
//============================================================================



static void Test_F_BFu0i_BFu7ll()
{
  {
    init_simple_test("F_BFu0i_BFu7ll");
    static STRUCT_IF_C F_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu7ll)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu7ll, F_BFu0i_BFu7ll)
//============================================================================



static void Test_F_BFu0i_BFu7s()
{
  {
    init_simple_test("F_BFu0i_BFu7s");
    static STRUCT_IF_C F_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu7s)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu7s.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu7s, F_BFu0i_BFu7s)
//============================================================================



static void Test_F_BFu0i_BFu8c()
{
  {
    init_simple_test("F_BFu0i_BFu8c");
    static STRUCT_IF_C F_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu8c)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu8c.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu8c, F_BFu0i_BFu8c)
//============================================================================



static void Test_F_BFu0i_BFu8i()
{
  {
    init_simple_test("F_BFu0i_BFu8i");
    static STRUCT_IF_C F_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu8i)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu8i.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu8i, F_BFu0i_BFu8i)
//============================================================================



static void Test_F_BFu0i_BFu8ll()
{
  {
    init_simple_test("F_BFu0i_BFu8ll");
    static STRUCT_IF_C F_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu8ll)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu8ll, F_BFu0i_BFu8ll)
//============================================================================



static void Test_F_BFu0i_BFu8s()
{
  {
    init_simple_test("F_BFu0i_BFu8s");
    static STRUCT_IF_C F_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu8s)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu8s.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu8s, F_BFu0i_BFu8s)
//============================================================================



static void Test_F_BFu0i_BFu9i()
{
  {
    init_simple_test("F_BFu0i_BFu9i");
    static STRUCT_IF_C F_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu9i)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu9i.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu9i, F_BFu0i_BFu9i)
//============================================================================



static void Test_F_BFu0i_BFu9ll()
{
  {
    init_simple_test("F_BFu0i_BFu9ll");
    static STRUCT_IF_C F_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu9ll)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu9ll, F_BFu0i_BFu9ll)
//============================================================================



static void Test_F_BFu0i_BFu9s()
{
  {
    init_simple_test("F_BFu0i_BFu9s");
    static STRUCT_IF_C F_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_BFu9s)");
    check_field_offset(lv, v1, 0, "F_BFu0i_BFu9s.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_BFu9s, F_BFu0i_BFu9s)
//============================================================================



static void Test_F_BFu0i_C()
{
  {
    init_simple_test("F_BFu0i_C");
    static STRUCT_IF_C F_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_C)");
    check_field_offset(lv, v1, 0, "F_BFu0i_C.v1");
    check_field_offset(lv, v2, 4, "F_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_C, F_BFu0i_C)
//============================================================================



static void Test_F_BFu0i_D()
{
  {
    init_simple_test("F_BFu0i_D");
    static STRUCT_IF_C F_BFu0i_D lv;
    check2(sizeof(lv), 12, "sizeof(F_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_D)");
    check_field_offset(lv, v1, 0, "F_BFu0i_D.v1");
    check_field_offset(lv, v2, 4, "F_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_D, F_BFu0i_D)
//============================================================================



static void Test_F_BFu0i_F()
{
  {
    init_simple_test("F_BFu0i_F");
    static STRUCT_IF_C F_BFu0i_F lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_F)");
    check_field_offset(lv, v1, 0, "F_BFu0i_F.v1");
    check_field_offset(lv, v2, 4, "F_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_F, F_BFu0i_F)
//============================================================================



static void Test_F_BFu0i_I()
{
  {
    init_simple_test("F_BFu0i_I");
    static STRUCT_IF_C F_BFu0i_I lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_I)");
    check_field_offset(lv, v1, 0, "F_BFu0i_I.v1");
    check_field_offset(lv, v2, 4, "F_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_I, F_BFu0i_I)
//============================================================================



static void Test_F_BFu0i_Ip()
{
  {
    init_simple_test("F_BFu0i_Ip");
    static STRUCT_IF_C F_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_Ip)");
    check_field_offset(lv, v1, 0, "F_BFu0i_Ip.v1");
    check_field_offset(lv, v2, 4, "F_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_Ip, F_BFu0i_Ip)
//============================================================================



static void Test_F_BFu0i_L()
{
  {
    init_simple_test("F_BFu0i_L");
    static STRUCT_IF_C F_BFu0i_L lv;
    check2(sizeof(lv), 12, "sizeof(F_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_L)");
    check_field_offset(lv, v1, 0, "F_BFu0i_L.v1");
    check_field_offset(lv, v2, 4, "F_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_L, F_BFu0i_L)
//============================================================================



static void Test_F_BFu0i_S()
{
  {
    init_simple_test("F_BFu0i_S");
    static STRUCT_IF_C F_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_S)");
    check_field_offset(lv, v1, 0, "F_BFu0i_S.v1");
    check_field_offset(lv, v2, 4, "F_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_S, F_BFu0i_S)
//============================================================================



static void Test_F_BFu0i_Uc()
{
  {
    init_simple_test("F_BFu0i_Uc");
    static STRUCT_IF_C F_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_Uc)");
    check_field_offset(lv, v1, 0, "F_BFu0i_Uc.v1");
    check_field_offset(lv, v2, 4, "F_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_Uc, F_BFu0i_Uc)
//============================================================================



static void Test_F_BFu0i_Ui()
{
  {
    init_simple_test("F_BFu0i_Ui");
    static STRUCT_IF_C F_BFu0i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_Ui)");
    check_field_offset(lv, v1, 0, "F_BFu0i_Ui.v1");
    check_field_offset(lv, v2, 4, "F_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_Ui, F_BFu0i_Ui)
//============================================================================



static void Test_F_BFu0i_Ul()
{
  {
    init_simple_test("F_BFu0i_Ul");
    static STRUCT_IF_C F_BFu0i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(F_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_Ul)");
    check_field_offset(lv, v1, 0, "F_BFu0i_Ul.v1");
    check_field_offset(lv, v2, 4, "F_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_Ul, F_BFu0i_Ul)
//============================================================================



static void Test_F_BFu0i_Us()
{
  {
    init_simple_test("F_BFu0i_Us");
    static STRUCT_IF_C F_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_Us)");
    check_field_offset(lv, v1, 0, "F_BFu0i_Us.v1");
    check_field_offset(lv, v2, 4, "F_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_Us, F_BFu0i_Us)
//============================================================================



static void Test_F_BFu0i_Vp()
{
  {
    init_simple_test("F_BFu0i_Vp");
    static STRUCT_IF_C F_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0i_Vp)");
    check_field_offset(lv, v1, 0, "F_BFu0i_Vp.v1");
    check_field_offset(lv, v2, 4, "F_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0i_Vp, F_BFu0i_Vp)
//============================================================================



static void Test_F_BFu0ll()
{
  {
    init_simple_test("F_BFu0ll");
    static STRUCT_IF_C F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll, F_BFu0ll)
//============================================================================



static void Test_F_BFu0ll_BFu0c()
{
  {
    init_simple_test("F_BFu0ll_BFu0c");
    static STRUCT_IF_C F_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(F_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu0c, F_BFu0ll_BFu0c)
//============================================================================



static void Test_F_BFu0ll_BFu0i()
{
  {
    init_simple_test("F_BFu0ll_BFu0i");
    static STRUCT_IF_C F_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(F_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu0i, F_BFu0ll_BFu0i)
//============================================================================



static void Test_F_BFu0ll_BFu0ll()
{
  {
    init_simple_test("F_BFu0ll_BFu0ll");
    static STRUCT_IF_C F_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(F_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu0ll, F_BFu0ll_BFu0ll)
//============================================================================



static void Test_F_BFu0ll_BFu0s()
{
  {
    init_simple_test("F_BFu0ll_BFu0s");
    static STRUCT_IF_C F_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(F_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu0s, F_BFu0ll_BFu0s)
//============================================================================



static void Test_F_BFu0ll_BFu15i()
{
  {
    init_simple_test("F_BFu0ll_BFu15i");
    static STRUCT_IF_C F_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(F_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu15i)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu15i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "F_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "F_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu15i, F_BFu0ll_BFu15i)
//============================================================================



static void Test_F_BFu0ll_BFu15ll()
{
  {
    init_simple_test("F_BFu0ll_BFu15ll");
    static STRUCT_IF_C F_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(F_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "F_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "F_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu15ll, F_BFu0ll_BFu15ll)
//============================================================================



static void Test_F_BFu0ll_BFu15s()
{
  {
    init_simple_test("F_BFu0ll_BFu15s");
    static STRUCT_IF_C F_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(F_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu15s)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu15s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "F_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "F_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu15s, F_BFu0ll_BFu15s)
//============================================================================



static void Test_F_BFu0ll_BFu16i()
{
  {
    init_simple_test("F_BFu0ll_BFu16i");
    static STRUCT_IF_C F_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(F_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu16i)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu16i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "F_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "F_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu16i, F_BFu0ll_BFu16i)
//============================================================================



static void Test_F_BFu0ll_BFu16ll()
{
  {
    init_simple_test("F_BFu0ll_BFu16ll");
    static STRUCT_IF_C F_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(F_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "F_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "F_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu16ll, F_BFu0ll_BFu16ll)
//============================================================================



static void Test_F_BFu0ll_BFu16s()
{
  {
    init_simple_test("F_BFu0ll_BFu16s");
    static STRUCT_IF_C F_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(F_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu16s)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu16s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "F_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "F_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu16s, F_BFu0ll_BFu16s)
//============================================================================



static void Test_F_BFu0ll_BFu17i()
{
  {
    init_simple_test("F_BFu0ll_BFu17i");
    static STRUCT_IF_C F_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(F_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu17i)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu17i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "F_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "F_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu17i, F_BFu0ll_BFu17i)
//============================================================================



static void Test_F_BFu0ll_BFu17ll()
{
  {
    init_simple_test("F_BFu0ll_BFu17ll");
    static STRUCT_IF_C F_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(F_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "F_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "F_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu17ll, F_BFu0ll_BFu17ll)
//============================================================================



static void Test_F_BFu0ll_BFu1c()
{
  {
    init_simple_test("F_BFu0ll_BFu1c");
    static STRUCT_IF_C F_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(F_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu1c)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu1c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "F_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu1c, F_BFu0ll_BFu1c)
//============================================================================



static void Test_F_BFu0ll_BFu1i()
{
  {
    init_simple_test("F_BFu0ll_BFu1i");
    static STRUCT_IF_C F_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(F_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu1i)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu1i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "F_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu1i, F_BFu0ll_BFu1i)
//============================================================================



static void Test_F_BFu0ll_BFu1ll()
{
  {
    init_simple_test("F_BFu0ll_BFu1ll");
    static STRUCT_IF_C F_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(F_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "F_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu1ll, F_BFu0ll_BFu1ll)
//============================================================================



static void Test_F_BFu0ll_BFu1s()
{
  {
    init_simple_test("F_BFu0ll_BFu1s");
    static STRUCT_IF_C F_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(F_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu1s)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu1s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "F_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu1s, F_BFu0ll_BFu1s)
//============================================================================



static void Test_F_BFu0ll_BFu31i()
{
  {
    init_simple_test("F_BFu0ll_BFu31i");
    static STRUCT_IF_C F_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu31i)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu31i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "F_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "F_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu31i, F_BFu0ll_BFu31i)
//============================================================================



static void Test_F_BFu0ll_BFu31ll()
{
  {
    init_simple_test("F_BFu0ll_BFu31ll");
    static STRUCT_IF_C F_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "F_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "F_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu31ll, F_BFu0ll_BFu31ll)
//============================================================================



static void Test_F_BFu0ll_BFu32i()
{
  {
    init_simple_test("F_BFu0ll_BFu32i");
    static STRUCT_IF_C F_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu32i)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu32i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "F_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "F_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu32i, F_BFu0ll_BFu32i)
//============================================================================



static void Test_F_BFu0ll_BFu32ll()
{
  {
    init_simple_test("F_BFu0ll_BFu32ll");
    static STRUCT_IF_C F_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "F_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "F_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu32ll, F_BFu0ll_BFu32ll)
//============================================================================



static void Test_F_BFu0ll_BFu33()
{
  {
    init_simple_test("F_BFu0ll_BFu33");
    static STRUCT_IF_C F_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(F_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu33)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu33.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "F_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "F_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu33, F_BFu0ll_BFu33)
//============================================================================



static void Test_F_BFu0ll_BFu7c()
{
  {
    init_simple_test("F_BFu0ll_BFu7c");
    static STRUCT_IF_C F_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(F_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu7c)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu7c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "F_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "F_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu7c, F_BFu0ll_BFu7c)
//============================================================================



static void Test_F_BFu0ll_BFu7i()
{
  {
    init_simple_test("F_BFu0ll_BFu7i");
    static STRUCT_IF_C F_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(F_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu7i)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu7i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "F_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "F_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu7i, F_BFu0ll_BFu7i)
//============================================================================



static void Test_F_BFu0ll_BFu7ll()
{
  {
    init_simple_test("F_BFu0ll_BFu7ll");
    static STRUCT_IF_C F_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(F_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "F_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "F_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu7ll, F_BFu0ll_BFu7ll)
//============================================================================



static void Test_F_BFu0ll_BFu7s()
{
  {
    init_simple_test("F_BFu0ll_BFu7s");
    static STRUCT_IF_C F_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(F_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu7s)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu7s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "F_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "F_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu7s, F_BFu0ll_BFu7s)
//============================================================================



static void Test_F_BFu0ll_BFu8c()
{
  {
    init_simple_test("F_BFu0ll_BFu8c");
    static STRUCT_IF_C F_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(F_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu8c)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu8c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "F_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "F_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu8c, F_BFu0ll_BFu8c)
//============================================================================



static void Test_F_BFu0ll_BFu8i()
{
  {
    init_simple_test("F_BFu0ll_BFu8i");
    static STRUCT_IF_C F_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(F_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu8i)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu8i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "F_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "F_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu8i, F_BFu0ll_BFu8i)
//============================================================================



static void Test_F_BFu0ll_BFu8ll()
{
  {
    init_simple_test("F_BFu0ll_BFu8ll");
    static STRUCT_IF_C F_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(F_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "F_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "F_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu8ll, F_BFu0ll_BFu8ll)
//============================================================================



static void Test_F_BFu0ll_BFu8s()
{
  {
    init_simple_test("F_BFu0ll_BFu8s");
    static STRUCT_IF_C F_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(F_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu8s)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu8s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "F_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "F_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu8s, F_BFu0ll_BFu8s)
//============================================================================



static void Test_F_BFu0ll_BFu9i()
{
  {
    init_simple_test("F_BFu0ll_BFu9i");
    static STRUCT_IF_C F_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(F_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu9i)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu9i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "F_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "F_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu9i, F_BFu0ll_BFu9i)
//============================================================================



static void Test_F_BFu0ll_BFu9ll()
{
  {
    init_simple_test("F_BFu0ll_BFu9ll");
    static STRUCT_IF_C F_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(F_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "F_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "F_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu9ll, F_BFu0ll_BFu9ll)
//============================================================================



static void Test_F_BFu0ll_BFu9s()
{
  {
    init_simple_test("F_BFu0ll_BFu9s");
    static STRUCT_IF_C F_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(F_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_BFu9s)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_BFu9s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "F_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "F_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_BFu9s, F_BFu0ll_BFu9s)
//============================================================================



static void Test_F_BFu0ll_C()
{
  {
    init_simple_test("F_BFu0ll_C");
    static STRUCT_IF_C F_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(F_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_C)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_C.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "F_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_C, F_BFu0ll_C)
//============================================================================



static void Test_F_BFu0ll_D()
{
  {
    init_simple_test("F_BFu0ll_D");
    static STRUCT_IF_C F_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(F_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_D)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_D.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "F_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_D, F_BFu0ll_D)
//============================================================================



static void Test_F_BFu0ll_F()
{
  {
    init_simple_test("F_BFu0ll_F");
    static STRUCT_IF_C F_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_F)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_F.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "F_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_F, F_BFu0ll_F)
//============================================================================



static void Test_F_BFu0ll_I()
{
  {
    init_simple_test("F_BFu0ll_I");
    static STRUCT_IF_C F_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_I)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_I.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "F_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_I, F_BFu0ll_I)
//============================================================================



static void Test_F_BFu0ll_Ip()
{
  {
    init_simple_test("F_BFu0ll_Ip");
    static STRUCT_IF_C F_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(F_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_Ip)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "F_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_Ip, F_BFu0ll_Ip)
//============================================================================



static void Test_F_BFu0ll_L()
{
  {
    init_simple_test("F_BFu0ll_L");
    static STRUCT_IF_C F_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(F_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_L)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_L.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "F_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_L, F_BFu0ll_L)
//============================================================================



static void Test_F_BFu0ll_S()
{
  {
    init_simple_test("F_BFu0ll_S");
    static STRUCT_IF_C F_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(F_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_S)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_S.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "F_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_S, F_BFu0ll_S)
//============================================================================



static void Test_F_BFu0ll_Uc()
{
  {
    init_simple_test("F_BFu0ll_Uc");
    static STRUCT_IF_C F_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(F_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_Uc)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "F_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_Uc, F_BFu0ll_Uc)
//============================================================================



static void Test_F_BFu0ll_Ui()
{
  {
    init_simple_test("F_BFu0ll_Ui");
    static STRUCT_IF_C F_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_Ui)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "F_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_Ui, F_BFu0ll_Ui)
//============================================================================



static void Test_F_BFu0ll_Ul()
{
  {
    init_simple_test("F_BFu0ll_Ul");
    static STRUCT_IF_C F_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(F_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_Ul)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "F_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_Ul, F_BFu0ll_Ul)
//============================================================================



static void Test_F_BFu0ll_Us()
{
  {
    init_simple_test("F_BFu0ll_Us");
    static STRUCT_IF_C F_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(F_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_Us)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_Us.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "F_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_Us, F_BFu0ll_Us)
//============================================================================



static void Test_F_BFu0ll_Vp()
{
  {
    init_simple_test("F_BFu0ll_Vp");
    static STRUCT_IF_C F_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(F_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0ll_Vp)");
    check_field_offset(lv, v1, 0, "F_BFu0ll_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "F_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0ll_Vp, F_BFu0ll_Vp)
//============================================================================



static void Test_F_BFu0s()
{
  {
    init_simple_test("F_BFu0s");
    static STRUCT_IF_C F_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s, F_BFu0s)
//============================================================================



static void Test_F_BFu0s_BFu0c()
{
  {
    init_simple_test("F_BFu0s_BFu0c");
    static STRUCT_IF_C F_BFu0s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(F_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu0c, F_BFu0s_BFu0c)
//============================================================================



static void Test_F_BFu0s_BFu0i()
{
  {
    init_simple_test("F_BFu0s_BFu0i");
    static STRUCT_IF_C F_BFu0s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(F_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu0i, F_BFu0s_BFu0i)
//============================================================================



static void Test_F_BFu0s_BFu0ll()
{
  {
    init_simple_test("F_BFu0s_BFu0ll");
    static STRUCT_IF_C F_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(F_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu0ll, F_BFu0s_BFu0ll)
//============================================================================



static void Test_F_BFu0s_BFu0s()
{
  {
    init_simple_test("F_BFu0s_BFu0s");
    static STRUCT_IF_C F_BFu0s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(F_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu0s, F_BFu0s_BFu0s)
//============================================================================



static void Test_F_BFu0s_BFu15i()
{
  {
    init_simple_test("F_BFu0s_BFu15i");
    static STRUCT_IF_C F_BFu0s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu15i)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu15i.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu15i, F_BFu0s_BFu15i)
//============================================================================



static void Test_F_BFu0s_BFu15ll()
{
  {
    init_simple_test("F_BFu0s_BFu15ll");
    static STRUCT_IF_C F_BFu0s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu15ll)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu15ll, F_BFu0s_BFu15ll)
//============================================================================



static void Test_F_BFu0s_BFu15s()
{
  {
    init_simple_test("F_BFu0s_BFu15s");
    static STRUCT_IF_C F_BFu0s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu15s)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu15s.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu15s, F_BFu0s_BFu15s)
//============================================================================



static void Test_F_BFu0s_BFu16i()
{
  {
    init_simple_test("F_BFu0s_BFu16i");
    static STRUCT_IF_C F_BFu0s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu16i)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu16i.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu16i, F_BFu0s_BFu16i)
//============================================================================



static void Test_F_BFu0s_BFu16ll()
{
  {
    init_simple_test("F_BFu0s_BFu16ll");
    static STRUCT_IF_C F_BFu0s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu16ll)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu16ll, F_BFu0s_BFu16ll)
//============================================================================



static void Test_F_BFu0s_BFu16s()
{
  {
    init_simple_test("F_BFu0s_BFu16s");
    static STRUCT_IF_C F_BFu0s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu16s)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu16s.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu16s, F_BFu0s_BFu16s)
//============================================================================



static void Test_F_BFu0s_BFu17i()
{
  {
    init_simple_test("F_BFu0s_BFu17i");
    static STRUCT_IF_C F_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(F_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu17i)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu17i.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "F_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "F_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu17i, F_BFu0s_BFu17i)
//============================================================================



static void Test_F_BFu0s_BFu17ll()
{
  {
    init_simple_test("F_BFu0s_BFu17ll");
    static STRUCT_IF_C F_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(F_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu17ll)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "F_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "F_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu17ll, F_BFu0s_BFu17ll)
//============================================================================



static void Test_F_BFu0s_BFu1c()
{
  {
    init_simple_test("F_BFu0s_BFu1c");
    static STRUCT_IF_C F_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu1c)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu1c.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu1c, F_BFu0s_BFu1c)
//============================================================================



static void Test_F_BFu0s_BFu1i()
{
  {
    init_simple_test("F_BFu0s_BFu1i");
    static STRUCT_IF_C F_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu1i)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu1i.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu1i, F_BFu0s_BFu1i)
//============================================================================



static void Test_F_BFu0s_BFu1ll()
{
  {
    init_simple_test("F_BFu0s_BFu1ll");
    static STRUCT_IF_C F_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu1ll)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu1ll, F_BFu0s_BFu1ll)
//============================================================================



static void Test_F_BFu0s_BFu1s()
{
  {
    init_simple_test("F_BFu0s_BFu1s");
    static STRUCT_IF_C F_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu1s)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu1s.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu1s, F_BFu0s_BFu1s)
//============================================================================



static void Test_F_BFu0s_BFu31i()
{
  {
    init_simple_test("F_BFu0s_BFu31i");
    static STRUCT_IF_C F_BFu0s_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu31i)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu31i.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "F_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "F_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu31i, F_BFu0s_BFu31i)
//============================================================================



static void Test_F_BFu0s_BFu31ll()
{
  {
    init_simple_test("F_BFu0s_BFu31ll");
    static STRUCT_IF_C F_BFu0s_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu31ll)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "F_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "F_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu31ll, F_BFu0s_BFu31ll)
//============================================================================



static void Test_F_BFu0s_BFu32i()
{
  {
    init_simple_test("F_BFu0s_BFu32i");
    static STRUCT_IF_C F_BFu0s_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu32i)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu32i.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "F_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "F_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu32i, F_BFu0s_BFu32i)
//============================================================================



static void Test_F_BFu0s_BFu32ll()
{
  {
    init_simple_test("F_BFu0s_BFu32ll");
    static STRUCT_IF_C F_BFu0s_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu32ll)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "F_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "F_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu32ll, F_BFu0s_BFu32ll)
//============================================================================



static void Test_F_BFu0s_BFu33()
{
  {
    init_simple_test("F_BFu0s_BFu33");
    static STRUCT_IF_C F_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(F_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu33)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu33.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "F_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "F_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu33, F_BFu0s_BFu33)
//============================================================================



static void Test_F_BFu0s_BFu7c()
{
  {
    init_simple_test("F_BFu0s_BFu7c");
    static STRUCT_IF_C F_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu7c)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu7c.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu7c, F_BFu0s_BFu7c)
//============================================================================



static void Test_F_BFu0s_BFu7i()
{
  {
    init_simple_test("F_BFu0s_BFu7i");
    static STRUCT_IF_C F_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu7i)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu7i.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu7i, F_BFu0s_BFu7i)
//============================================================================



static void Test_F_BFu0s_BFu7ll()
{
  {
    init_simple_test("F_BFu0s_BFu7ll");
    static STRUCT_IF_C F_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu7ll)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu7ll, F_BFu0s_BFu7ll)
//============================================================================



static void Test_F_BFu0s_BFu7s()
{
  {
    init_simple_test("F_BFu0s_BFu7s");
    static STRUCT_IF_C F_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu7s)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu7s.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu7s, F_BFu0s_BFu7s)
//============================================================================



static void Test_F_BFu0s_BFu8c()
{
  {
    init_simple_test("F_BFu0s_BFu8c");
    static STRUCT_IF_C F_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu8c)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu8c.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu8c, F_BFu0s_BFu8c)
//============================================================================



static void Test_F_BFu0s_BFu8i()
{
  {
    init_simple_test("F_BFu0s_BFu8i");
    static STRUCT_IF_C F_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu8i)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu8i.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu8i, F_BFu0s_BFu8i)
//============================================================================



static void Test_F_BFu0s_BFu8ll()
{
  {
    init_simple_test("F_BFu0s_BFu8ll");
    static STRUCT_IF_C F_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu8ll)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu8ll, F_BFu0s_BFu8ll)
//============================================================================



static void Test_F_BFu0s_BFu8s()
{
  {
    init_simple_test("F_BFu0s_BFu8s");
    static STRUCT_IF_C F_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu8s)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu8s.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu8s, F_BFu0s_BFu8s)
//============================================================================



static void Test_F_BFu0s_BFu9i()
{
  {
    init_simple_test("F_BFu0s_BFu9i");
    static STRUCT_IF_C F_BFu0s_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu9i)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu9i.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu9i, F_BFu0s_BFu9i)
//============================================================================



static void Test_F_BFu0s_BFu9ll()
{
  {
    init_simple_test("F_BFu0s_BFu9ll");
    static STRUCT_IF_C F_BFu0s_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu9ll)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu9ll, F_BFu0s_BFu9ll)
//============================================================================



static void Test_F_BFu0s_BFu9s()
{
  {
    init_simple_test("F_BFu0s_BFu9s");
    static STRUCT_IF_C F_BFu0s_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_BFu9s)");
    check_field_offset(lv, v1, 0, "F_BFu0s_BFu9s.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_BFu9s, F_BFu0s_BFu9s)
//============================================================================



static void Test_F_BFu0s_C()
{
  {
    init_simple_test("F_BFu0s_C");
    static STRUCT_IF_C F_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_C)");
    check_field_offset(lv, v1, 0, "F_BFu0s_C.v1");
    check_field_offset(lv, v2, 4, "F_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_C, F_BFu0s_C)
//============================================================================



static void Test_F_BFu0s_D()
{
  {
    init_simple_test("F_BFu0s_D");
    static STRUCT_IF_C F_BFu0s_D lv;
    check2(sizeof(lv), 12, "sizeof(F_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_D)");
    check_field_offset(lv, v1, 0, "F_BFu0s_D.v1");
    check_field_offset(lv, v2, 4, "F_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_D, F_BFu0s_D)
//============================================================================



static void Test_F_BFu0s_F()
{
  {
    init_simple_test("F_BFu0s_F");
    static STRUCT_IF_C F_BFu0s_F lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_F)");
    check_field_offset(lv, v1, 0, "F_BFu0s_F.v1");
    check_field_offset(lv, v2, 4, "F_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_F, F_BFu0s_F)
//============================================================================



static void Test_F_BFu0s_I()
{
  {
    init_simple_test("F_BFu0s_I");
    static STRUCT_IF_C F_BFu0s_I lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_I)");
    check_field_offset(lv, v1, 0, "F_BFu0s_I.v1");
    check_field_offset(lv, v2, 4, "F_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_I, F_BFu0s_I)
//============================================================================



static void Test_F_BFu0s_Ip()
{
  {
    init_simple_test("F_BFu0s_Ip");
    static STRUCT_IF_C F_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_Ip)");
    check_field_offset(lv, v1, 0, "F_BFu0s_Ip.v1");
    check_field_offset(lv, v2, 4, "F_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_Ip, F_BFu0s_Ip)
//============================================================================



static void Test_F_BFu0s_L()
{
  {
    init_simple_test("F_BFu0s_L");
    static STRUCT_IF_C F_BFu0s_L lv;
    check2(sizeof(lv), 12, "sizeof(F_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_L)");
    check_field_offset(lv, v1, 0, "F_BFu0s_L.v1");
    check_field_offset(lv, v2, 4, "F_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_L, F_BFu0s_L)
//============================================================================



static void Test_F_BFu0s_S()
{
  {
    init_simple_test("F_BFu0s_S");
    static STRUCT_IF_C F_BFu0s_S lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_S)");
    check_field_offset(lv, v1, 0, "F_BFu0s_S.v1");
    check_field_offset(lv, v2, 4, "F_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_S, F_BFu0s_S)
//============================================================================



static void Test_F_BFu0s_Uc()
{
  {
    init_simple_test("F_BFu0s_Uc");
    static STRUCT_IF_C F_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(F_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_Uc)");
    check_field_offset(lv, v1, 0, "F_BFu0s_Uc.v1");
    check_field_offset(lv, v2, 4, "F_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_Uc, F_BFu0s_Uc)
//============================================================================



static void Test_F_BFu0s_Ui()
{
  {
    init_simple_test("F_BFu0s_Ui");
    static STRUCT_IF_C F_BFu0s_Ui lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_Ui)");
    check_field_offset(lv, v1, 0, "F_BFu0s_Ui.v1");
    check_field_offset(lv, v2, 4, "F_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_Ui, F_BFu0s_Ui)
//============================================================================



static void Test_F_BFu0s_Ul()
{
  {
    init_simple_test("F_BFu0s_Ul");
    static STRUCT_IF_C F_BFu0s_Ul lv;
    check2(sizeof(lv), 12, "sizeof(F_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_Ul)");
    check_field_offset(lv, v1, 0, "F_BFu0s_Ul.v1");
    check_field_offset(lv, v2, 4, "F_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_Ul, F_BFu0s_Ul)
//============================================================================



static void Test_F_BFu0s_Us()
{
  {
    init_simple_test("F_BFu0s_Us");
    static STRUCT_IF_C F_BFu0s_Us lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_Us)");
    check_field_offset(lv, v1, 0, "F_BFu0s_Us.v1");
    check_field_offset(lv, v2, 4, "F_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_Us, F_BFu0s_Us)
//============================================================================



static void Test_F_BFu0s_Vp()
{
  {
    init_simple_test("F_BFu0s_Vp");
    static STRUCT_IF_C F_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu0s_Vp)");
    check_field_offset(lv, v1, 0, "F_BFu0s_Vp.v1");
    check_field_offset(lv, v2, 4, "F_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu0s_Vp, F_BFu0s_Vp)
//============================================================================



static void Test_F_BFu15i_BFu0c()
{
  {
    init_simple_test("F_BFu15i_BFu0c");
    static STRUCT_IF_C F_BFu15i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu15i_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu15i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu15i_BFu0c, F_BFu15i_BFu0c)
//============================================================================



static void Test_F_BFu15i_BFu0i()
{
  {
    init_simple_test("F_BFu15i_BFu0i");
    static STRUCT_IF_C F_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu15i_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu15i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu15i_BFu0i, F_BFu15i_BFu0i)
//============================================================================



static void Test_F_BFu15i_BFu0ll()
{
  {
    init_simple_test("F_BFu15i_BFu0ll");
    static STRUCT_IF_C F_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu15i_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu15i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu15i_BFu0ll, F_BFu15i_BFu0ll)
//============================================================================



static void Test_F_BFu15i_BFu0s()
{
  {
    init_simple_test("F_BFu15i_BFu0s");
    static STRUCT_IF_C F_BFu15i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu15i_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu15i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu15i_BFu0s, F_BFu15i_BFu0s)
//============================================================================



static void Test_F_BFu15ll_BFu0c()
{
  {
    init_simple_test("F_BFu15ll_BFu0c");
    static STRUCT_IF_C F_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu15ll_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu15ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu15ll_BFu0c, F_BFu15ll_BFu0c)
//============================================================================



static void Test_F_BFu15ll_BFu0i()
{
  {
    init_simple_test("F_BFu15ll_BFu0i");
    static STRUCT_IF_C F_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu15ll_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu15ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu15ll_BFu0i, F_BFu15ll_BFu0i)
//============================================================================



static void Test_F_BFu15ll_BFu0ll()
{
  {
    init_simple_test("F_BFu15ll_BFu0ll");
    static STRUCT_IF_C F_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu15ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu15ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu15ll_BFu0ll, F_BFu15ll_BFu0ll)
//============================================================================



static void Test_F_BFu15ll_BFu0s()
{
  {
    init_simple_test("F_BFu15ll_BFu0s");
    static STRUCT_IF_C F_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu15ll_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu15ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu15ll_BFu0s, F_BFu15ll_BFu0s)
//============================================================================



static void Test_F_BFu15s_BFu0c()
{
  {
    init_simple_test("F_BFu15s_BFu0c");
    static STRUCT_IF_C F_BFu15s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu15s_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu15s_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu15s_BFu0c, F_BFu15s_BFu0c)
//============================================================================



static void Test_F_BFu15s_BFu0i()
{
  {
    init_simple_test("F_BFu15s_BFu0i");
    static STRUCT_IF_C F_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu15s_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu15s_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu15s_BFu0i, F_BFu15s_BFu0i)
//============================================================================



static void Test_F_BFu15s_BFu0ll()
{
  {
    init_simple_test("F_BFu15s_BFu0ll");
    static STRUCT_IF_C F_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu15s_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu15s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu15s_BFu0ll, F_BFu15s_BFu0ll)
//============================================================================



static void Test_F_BFu15s_BFu0s()
{
  {
    init_simple_test("F_BFu15s_BFu0s");
    static STRUCT_IF_C F_BFu15s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu15s_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu15s_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu15s_BFu0s, F_BFu15s_BFu0s)
//============================================================================



static void Test_F_BFu16i_BFu0c()
{
  {
    init_simple_test("F_BFu16i_BFu0c");
    static STRUCT_IF_C F_BFu16i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu16i_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu16i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu16i_BFu0c, F_BFu16i_BFu0c)
//============================================================================



static void Test_F_BFu16i_BFu0i()
{
  {
    init_simple_test("F_BFu16i_BFu0i");
    static STRUCT_IF_C F_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu16i_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu16i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu16i_BFu0i, F_BFu16i_BFu0i)
//============================================================================



static void Test_F_BFu16i_BFu0ll()
{
  {
    init_simple_test("F_BFu16i_BFu0ll");
    static STRUCT_IF_C F_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu16i_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu16i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu16i_BFu0ll, F_BFu16i_BFu0ll)
//============================================================================



static void Test_F_BFu16i_BFu0s()
{
  {
    init_simple_test("F_BFu16i_BFu0s");
    static STRUCT_IF_C F_BFu16i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu16i_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu16i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu16i_BFu0s, F_BFu16i_BFu0s)
//============================================================================



static void Test_F_BFu16ll_BFu0c()
{
  {
    init_simple_test("F_BFu16ll_BFu0c");
    static STRUCT_IF_C F_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu16ll_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu16ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu16ll_BFu0c, F_BFu16ll_BFu0c)
//============================================================================



static void Test_F_BFu16ll_BFu0i()
{
  {
    init_simple_test("F_BFu16ll_BFu0i");
    static STRUCT_IF_C F_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu16ll_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu16ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu16ll_BFu0i, F_BFu16ll_BFu0i)
//============================================================================



static void Test_F_BFu16ll_BFu0ll()
{
  {
    init_simple_test("F_BFu16ll_BFu0ll");
    static STRUCT_IF_C F_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu16ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu16ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu16ll_BFu0ll, F_BFu16ll_BFu0ll)
//============================================================================



static void Test_F_BFu16ll_BFu0s()
{
  {
    init_simple_test("F_BFu16ll_BFu0s");
    static STRUCT_IF_C F_BFu16ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu16ll_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu16ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu16ll_BFu0s, F_BFu16ll_BFu0s)
//============================================================================



static void Test_F_BFu16s_BFu0c()
{
  {
    init_simple_test("F_BFu16s_BFu0c");
    static STRUCT_IF_C F_BFu16s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu16s_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu16s_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu16s_BFu0c, F_BFu16s_BFu0c)
//============================================================================



static void Test_F_BFu16s_BFu0i()
{
  {
    init_simple_test("F_BFu16s_BFu0i");
    static STRUCT_IF_C F_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu16s_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu16s_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu16s_BFu0i, F_BFu16s_BFu0i)
//============================================================================



static void Test_F_BFu16s_BFu0ll()
{
  {
    init_simple_test("F_BFu16s_BFu0ll");
    static STRUCT_IF_C F_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu16s_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu16s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu16s_BFu0ll, F_BFu16s_BFu0ll)
//============================================================================



static void Test_F_BFu16s_BFu0s()
{
  {
    init_simple_test("F_BFu16s_BFu0s");
    static STRUCT_IF_C F_BFu16s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu16s_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu16s_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu16s_BFu0s, F_BFu16s_BFu0s)
//============================================================================



static void Test_F_BFu17i_BFu0c()
{
  {
    init_simple_test("F_BFu17i_BFu0c");
    static STRUCT_IF_C F_BFu17i_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(F_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu17i_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu17i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "F_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "F_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu17i_BFu0c, F_BFu17i_BFu0c)
//============================================================================



static void Test_F_BFu17i_BFu0i()
{
  {
    init_simple_test("F_BFu17i_BFu0i");
    static STRUCT_IF_C F_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu17i_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu17i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "F_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "F_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu17i_BFu0i, F_BFu17i_BFu0i)
//============================================================================



static void Test_F_BFu17i_BFu0ll()
{
  {
    init_simple_test("F_BFu17i_BFu0ll");
    static STRUCT_IF_C F_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu17i_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu17i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "F_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "F_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu17i_BFu0ll, F_BFu17i_BFu0ll)
//============================================================================



static void Test_F_BFu17i_BFu0s()
{
  {
    init_simple_test("F_BFu17i_BFu0s");
    static STRUCT_IF_C F_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu17i_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu17i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "F_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "F_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu17i_BFu0s, F_BFu17i_BFu0s)
//============================================================================



static void Test_F_BFu17ll_BFu0c()
{
  {
    init_simple_test("F_BFu17ll_BFu0c");
    static STRUCT_IF_C F_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(F_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu17ll_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu17ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "F_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "F_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu17ll_BFu0c, F_BFu17ll_BFu0c)
//============================================================================



static void Test_F_BFu17ll_BFu0i()
{
  {
    init_simple_test("F_BFu17ll_BFu0i");
    static STRUCT_IF_C F_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu17ll_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu17ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "F_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "F_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu17ll_BFu0i, F_BFu17ll_BFu0i)
//============================================================================



static void Test_F_BFu17ll_BFu0ll()
{
  {
    init_simple_test("F_BFu17ll_BFu0ll");
    static STRUCT_IF_C F_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu17ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu17ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "F_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "F_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu17ll_BFu0ll, F_BFu17ll_BFu0ll)
//============================================================================



static void Test_F_BFu17ll_BFu0s()
{
  {
    init_simple_test("F_BFu17ll_BFu0s");
    static STRUCT_IF_C F_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu17ll_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu17ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "F_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "F_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu17ll_BFu0s, F_BFu17ll_BFu0s)
//============================================================================



static void Test_F_BFu1c_BFu0c()
{
  {
    init_simple_test("F_BFu1c_BFu0c");
    static STRUCT_IF_C F_BFu1c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu1c_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu1c_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1c_BFu0c, F_BFu1c_BFu0c)
//============================================================================



static void Test_F_BFu1c_BFu0i()
{
  {
    init_simple_test("F_BFu1c_BFu0i");
    static STRUCT_IF_C F_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu1c_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu1c_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1c_BFu0i, F_BFu1c_BFu0i)
//============================================================================



static void Test_F_BFu1c_BFu0ll()
{
  {
    init_simple_test("F_BFu1c_BFu0ll");
    static STRUCT_IF_C F_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu1c_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu1c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1c_BFu0ll, F_BFu1c_BFu0ll)
//============================================================================



static void Test_F_BFu1c_BFu0s()
{
  {
    init_simple_test("F_BFu1c_BFu0s");
    static STRUCT_IF_C F_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu1c_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu1c_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1c_BFu0s, F_BFu1c_BFu0s)
//============================================================================



static void Test_F_BFu1i_BFu0c()
{
  {
    init_simple_test("F_BFu1i_BFu0c");
    static STRUCT_IF_C F_BFu1i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu1i_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu1i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1i_BFu0c, F_BFu1i_BFu0c)
//============================================================================



static void Test_F_BFu1i_BFu0i()
{
  {
    init_simple_test("F_BFu1i_BFu0i");
    static STRUCT_IF_C F_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu1i_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu1i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1i_BFu0i, F_BFu1i_BFu0i)
//============================================================================



static void Test_F_BFu1i_BFu0ll()
{
  {
    init_simple_test("F_BFu1i_BFu0ll");
    static STRUCT_IF_C F_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu1i_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu1i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1i_BFu0ll, F_BFu1i_BFu0ll)
//============================================================================



static void Test_F_BFu1i_BFu0s()
{
  {
    init_simple_test("F_BFu1i_BFu0s");
    static STRUCT_IF_C F_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu1i_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu1i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1i_BFu0s, F_BFu1i_BFu0s)
//============================================================================



static void Test_F_BFu1ll_BFu0c()
{
  {
    init_simple_test("F_BFu1ll_BFu0c");
    static STRUCT_IF_C F_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu1ll_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu1ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1ll_BFu0c, F_BFu1ll_BFu0c)
//============================================================================



static void Test_F_BFu1ll_BFu0i()
{
  {
    init_simple_test("F_BFu1ll_BFu0i");
    static STRUCT_IF_C F_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu1ll_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu1ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1ll_BFu0i, F_BFu1ll_BFu0i)
//============================================================================



static void Test_F_BFu1ll_BFu0ll()
{
  {
    init_simple_test("F_BFu1ll_BFu0ll");
    static STRUCT_IF_C F_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu1ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu1ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1ll_BFu0ll, F_BFu1ll_BFu0ll)
//============================================================================



static void Test_F_BFu1ll_BFu0s()
{
  {
    init_simple_test("F_BFu1ll_BFu0s");
    static STRUCT_IF_C F_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu1ll_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu1ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1ll_BFu0s, F_BFu1ll_BFu0s)
//============================================================================



static void Test_F_BFu1s_BFu0c()
{
  {
    init_simple_test("F_BFu1s_BFu0c");
    static STRUCT_IF_C F_BFu1s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu1s_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu1s_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1s_BFu0c, F_BFu1s_BFu0c)
//============================================================================



static void Test_F_BFu1s_BFu0i()
{
  {
    init_simple_test("F_BFu1s_BFu0i");
    static STRUCT_IF_C F_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu1s_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu1s_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1s_BFu0i, F_BFu1s_BFu0i)
//============================================================================



static void Test_F_BFu1s_BFu0ll()
{
  {
    init_simple_test("F_BFu1s_BFu0ll");
    static STRUCT_IF_C F_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu1s_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu1s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1s_BFu0ll, F_BFu1s_BFu0ll)
//============================================================================



static void Test_F_BFu1s_BFu0s()
{
  {
    init_simple_test("F_BFu1s_BFu0s");
    static STRUCT_IF_C F_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu1s_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu1s_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1s_BFu0s, F_BFu1s_BFu0s)
//============================================================================



static void Test_F_BFu31i_BFu0c()
{
  {
    init_simple_test("F_BFu31i_BFu0c");
    static STRUCT_IF_C F_BFu31i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu31i_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu31i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "F_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "F_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu31i_BFu0c, F_BFu31i_BFu0c)
//============================================================================



static void Test_F_BFu31i_BFu0i()
{
  {
    init_simple_test("F_BFu31i_BFu0i");
    static STRUCT_IF_C F_BFu31i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu31i_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu31i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "F_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "F_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu31i_BFu0i, F_BFu31i_BFu0i)
//============================================================================



static void Test_F_BFu31i_BFu0ll()
{
  {
    init_simple_test("F_BFu31i_BFu0ll");
    static STRUCT_IF_C F_BFu31i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu31i_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu31i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "F_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "F_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu31i_BFu0ll, F_BFu31i_BFu0ll)
//============================================================================



static void Test_F_BFu31i_BFu0s()
{
  {
    init_simple_test("F_BFu31i_BFu0s");
    static STRUCT_IF_C F_BFu31i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu31i_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu31i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "F_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "F_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu31i_BFu0s, F_BFu31i_BFu0s)
//============================================================================



static void Test_F_BFu31ll_BFu0c()
{
  {
    init_simple_test("F_BFu31ll_BFu0c");
    static STRUCT_IF_C F_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu31ll_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu31ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "F_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "F_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu31ll_BFu0c, F_BFu31ll_BFu0c)
//============================================================================



static void Test_F_BFu31ll_BFu0i()
{
  {
    init_simple_test("F_BFu31ll_BFu0i");
    static STRUCT_IF_C F_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu31ll_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu31ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "F_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "F_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu31ll_BFu0i, F_BFu31ll_BFu0i)
//============================================================================



static void Test_F_BFu31ll_BFu0ll()
{
  {
    init_simple_test("F_BFu31ll_BFu0ll");
    static STRUCT_IF_C F_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu31ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu31ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "F_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "F_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu31ll_BFu0ll, F_BFu31ll_BFu0ll)
//============================================================================



static void Test_F_BFu31ll_BFu0s()
{
  {
    init_simple_test("F_BFu31ll_BFu0s");
    static STRUCT_IF_C F_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu31ll_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu31ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "F_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "F_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu31ll_BFu0s, F_BFu31ll_BFu0s)
//============================================================================



static void Test_F_BFu32i_BFu0c()
{
  {
    init_simple_test("F_BFu32i_BFu0c");
    static STRUCT_IF_C F_BFu32i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu32i_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu32i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "F_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "F_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu32i_BFu0c, F_BFu32i_BFu0c)
//============================================================================



static void Test_F_BFu32i_BFu0i()
{
  {
    init_simple_test("F_BFu32i_BFu0i");
    static STRUCT_IF_C F_BFu32i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu32i_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu32i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "F_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "F_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu32i_BFu0i, F_BFu32i_BFu0i)
//============================================================================



static void Test_F_BFu32i_BFu0ll()
{
  {
    init_simple_test("F_BFu32i_BFu0ll");
    static STRUCT_IF_C F_BFu32i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu32i_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu32i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "F_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "F_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu32i_BFu0ll, F_BFu32i_BFu0ll)
//============================================================================



static void Test_F_BFu32i_BFu0s()
{
  {
    init_simple_test("F_BFu32i_BFu0s");
    static STRUCT_IF_C F_BFu32i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu32i_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu32i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "F_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "F_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu32i_BFu0s, F_BFu32i_BFu0s)
//============================================================================



static void Test_F_BFu32ll_BFu0c()
{
  {
    init_simple_test("F_BFu32ll_BFu0c");
    static STRUCT_IF_C F_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu32ll_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu32ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "F_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "F_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu32ll_BFu0c, F_BFu32ll_BFu0c)
//============================================================================



static void Test_F_BFu32ll_BFu0i()
{
  {
    init_simple_test("F_BFu32ll_BFu0i");
    static STRUCT_IF_C F_BFu32ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu32ll_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu32ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "F_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "F_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu32ll_BFu0i, F_BFu32ll_BFu0i)
//============================================================================



static void Test_F_BFu32ll_BFu0ll()
{
  {
    init_simple_test("F_BFu32ll_BFu0ll");
    static STRUCT_IF_C F_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu32ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu32ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "F_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "F_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu32ll_BFu0ll, F_BFu32ll_BFu0ll)
//============================================================================



static void Test_F_BFu32ll_BFu0s()
{
  {
    init_simple_test("F_BFu32ll_BFu0s");
    static STRUCT_IF_C F_BFu32ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu32ll_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu32ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "F_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "F_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu32ll_BFu0s, F_BFu32ll_BFu0s)
//============================================================================



static void Test_F_BFu33_BFu0c()
{
  {
    init_simple_test("F_BFu33_BFu0c");
    static STRUCT_IF_C F_BFu33_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(F_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu33_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu33_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "F_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "F_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu33_BFu0c, F_BFu33_BFu0c)
//============================================================================



static void Test_F_BFu33_BFu0i()
{
  {
    init_simple_test("F_BFu33_BFu0i");
    static STRUCT_IF_C F_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(F_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu33_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu33_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "F_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "F_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu33_BFu0i, F_BFu33_BFu0i)
//============================================================================



static void Test_F_BFu33_BFu0ll()
{
  {
    init_simple_test("F_BFu33_BFu0ll");
    static STRUCT_IF_C F_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(F_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu33_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu33_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "F_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "F_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu33_BFu0ll, F_BFu33_BFu0ll)
//============================================================================



static void Test_F_BFu33_BFu0s()
{
  {
    init_simple_test("F_BFu33_BFu0s");
    static STRUCT_IF_C F_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(F_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu33_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu33_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "F_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "F_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu33_BFu0s, F_BFu33_BFu0s)
//============================================================================



static void Test_F_BFu7c_BFu0c()
{
  {
    init_simple_test("F_BFu7c_BFu0c");
    static STRUCT_IF_C F_BFu7c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu7c_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu7c_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7c_BFu0c, F_BFu7c_BFu0c)
//============================================================================



static void Test_F_BFu7c_BFu0i()
{
  {
    init_simple_test("F_BFu7c_BFu0i");
    static STRUCT_IF_C F_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu7c_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu7c_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7c_BFu0i, F_BFu7c_BFu0i)
//============================================================================



static void Test_F_BFu7c_BFu0ll()
{
  {
    init_simple_test("F_BFu7c_BFu0ll");
    static STRUCT_IF_C F_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu7c_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu7c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7c_BFu0ll, F_BFu7c_BFu0ll)
//============================================================================



static void Test_F_BFu7c_BFu0s()
{
  {
    init_simple_test("F_BFu7c_BFu0s");
    static STRUCT_IF_C F_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu7c_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu7c_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7c_BFu0s, F_BFu7c_BFu0s)
//============================================================================



static void Test_F_BFu7i_BFu0c()
{
  {
    init_simple_test("F_BFu7i_BFu0c");
    static STRUCT_IF_C F_BFu7i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu7i_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu7i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7i_BFu0c, F_BFu7i_BFu0c)
//============================================================================



static void Test_F_BFu7i_BFu0i()
{
  {
    init_simple_test("F_BFu7i_BFu0i");
    static STRUCT_IF_C F_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu7i_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu7i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7i_BFu0i, F_BFu7i_BFu0i)
//============================================================================



static void Test_F_BFu7i_BFu0ll()
{
  {
    init_simple_test("F_BFu7i_BFu0ll");
    static STRUCT_IF_C F_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu7i_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu7i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7i_BFu0ll, F_BFu7i_BFu0ll)
//============================================================================



static void Test_F_BFu7i_BFu0s()
{
  {
    init_simple_test("F_BFu7i_BFu0s");
    static STRUCT_IF_C F_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu7i_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu7i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7i_BFu0s, F_BFu7i_BFu0s)
//============================================================================



static void Test_F_BFu7ll_BFu0c()
{
  {
    init_simple_test("F_BFu7ll_BFu0c");
    static STRUCT_IF_C F_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu7ll_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu7ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7ll_BFu0c, F_BFu7ll_BFu0c)
//============================================================================



static void Test_F_BFu7ll_BFu0i()
{
  {
    init_simple_test("F_BFu7ll_BFu0i");
    static STRUCT_IF_C F_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu7ll_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu7ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7ll_BFu0i, F_BFu7ll_BFu0i)
//============================================================================



static void Test_F_BFu7ll_BFu0ll()
{
  {
    init_simple_test("F_BFu7ll_BFu0ll");
    static STRUCT_IF_C F_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu7ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu7ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7ll_BFu0ll, F_BFu7ll_BFu0ll)
//============================================================================



static void Test_F_BFu7ll_BFu0s()
{
  {
    init_simple_test("F_BFu7ll_BFu0s");
    static STRUCT_IF_C F_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu7ll_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu7ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7ll_BFu0s, F_BFu7ll_BFu0s)
//============================================================================



static void Test_F_BFu7s_BFu0c()
{
  {
    init_simple_test("F_BFu7s_BFu0c");
    static STRUCT_IF_C F_BFu7s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu7s_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu7s_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7s_BFu0c, F_BFu7s_BFu0c)
//============================================================================



static void Test_F_BFu7s_BFu0i()
{
  {
    init_simple_test("F_BFu7s_BFu0i");
    static STRUCT_IF_C F_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu7s_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu7s_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7s_BFu0i, F_BFu7s_BFu0i)
//============================================================================



static void Test_F_BFu7s_BFu0ll()
{
  {
    init_simple_test("F_BFu7s_BFu0ll");
    static STRUCT_IF_C F_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu7s_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu7s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7s_BFu0ll, F_BFu7s_BFu0ll)
//============================================================================



static void Test_F_BFu7s_BFu0s()
{
  {
    init_simple_test("F_BFu7s_BFu0s");
    static STRUCT_IF_C F_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu7s_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu7s_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7s_BFu0s, F_BFu7s_BFu0s)
//============================================================================



static void Test_F_BFu8c_BFu0c()
{
  {
    init_simple_test("F_BFu8c_BFu0c");
    static STRUCT_IF_C F_BFu8c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu8c_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu8c_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8c_BFu0c, F_BFu8c_BFu0c)
//============================================================================



static void Test_F_BFu8c_BFu0i()
{
  {
    init_simple_test("F_BFu8c_BFu0i");
    static STRUCT_IF_C F_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu8c_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu8c_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8c_BFu0i, F_BFu8c_BFu0i)
//============================================================================



static void Test_F_BFu8c_BFu0ll()
{
  {
    init_simple_test("F_BFu8c_BFu0ll");
    static STRUCT_IF_C F_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu8c_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu8c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8c_BFu0ll, F_BFu8c_BFu0ll)
//============================================================================



static void Test_F_BFu8c_BFu0s()
{
  {
    init_simple_test("F_BFu8c_BFu0s");
    static STRUCT_IF_C F_BFu8c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu8c_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu8c_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8c_BFu0s, F_BFu8c_BFu0s)
//============================================================================



static void Test_F_BFu8i_BFu0c()
{
  {
    init_simple_test("F_BFu8i_BFu0c");
    static STRUCT_IF_C F_BFu8i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu8i_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu8i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8i_BFu0c, F_BFu8i_BFu0c)
//============================================================================



static void Test_F_BFu8i_BFu0i()
{
  {
    init_simple_test("F_BFu8i_BFu0i");
    static STRUCT_IF_C F_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu8i_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu8i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8i_BFu0i, F_BFu8i_BFu0i)
//============================================================================



static void Test_F_BFu8i_BFu0ll()
{
  {
    init_simple_test("F_BFu8i_BFu0ll");
    static STRUCT_IF_C F_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu8i_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu8i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8i_BFu0ll, F_BFu8i_BFu0ll)
//============================================================================



static void Test_F_BFu8i_BFu0s()
{
  {
    init_simple_test("F_BFu8i_BFu0s");
    static STRUCT_IF_C F_BFu8i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu8i_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu8i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8i_BFu0s, F_BFu8i_BFu0s)
//============================================================================



static void Test_F_BFu8ll_BFu0c()
{
  {
    init_simple_test("F_BFu8ll_BFu0c");
    static STRUCT_IF_C F_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu8ll_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu8ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8ll_BFu0c, F_BFu8ll_BFu0c)
//============================================================================



static void Test_F_BFu8ll_BFu0i()
{
  {
    init_simple_test("F_BFu8ll_BFu0i");
    static STRUCT_IF_C F_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu8ll_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu8ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8ll_BFu0i, F_BFu8ll_BFu0i)
//============================================================================



static void Test_F_BFu8ll_BFu0ll()
{
  {
    init_simple_test("F_BFu8ll_BFu0ll");
    static STRUCT_IF_C F_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu8ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu8ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8ll_BFu0ll, F_BFu8ll_BFu0ll)
//============================================================================



static void Test_F_BFu8ll_BFu0s()
{
  {
    init_simple_test("F_BFu8ll_BFu0s");
    static STRUCT_IF_C F_BFu8ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu8ll_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu8ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8ll_BFu0s, F_BFu8ll_BFu0s)
//============================================================================



static void Test_F_BFu8s_BFu0c()
{
  {
    init_simple_test("F_BFu8s_BFu0c");
    static STRUCT_IF_C F_BFu8s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu8s_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu8s_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8s_BFu0c, F_BFu8s_BFu0c)
//============================================================================



static void Test_F_BFu8s_BFu0i()
{
  {
    init_simple_test("F_BFu8s_BFu0i");
    static STRUCT_IF_C F_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu8s_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu8s_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8s_BFu0i, F_BFu8s_BFu0i)
//============================================================================



static void Test_F_BFu8s_BFu0ll()
{
  {
    init_simple_test("F_BFu8s_BFu0ll");
    static STRUCT_IF_C F_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu8s_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu8s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8s_BFu0ll, F_BFu8s_BFu0ll)
//============================================================================



static void Test_F_BFu8s_BFu0s()
{
  {
    init_simple_test("F_BFu8s_BFu0s");
    static STRUCT_IF_C F_BFu8s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu8s_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu8s_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8s_BFu0s, F_BFu8s_BFu0s)
//============================================================================



static void Test_F_BFu9i_BFu0c()
{
  {
    init_simple_test("F_BFu9i_BFu0c");
    static STRUCT_IF_C F_BFu9i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu9i_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu9i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu9i_BFu0c, F_BFu9i_BFu0c)
//============================================================================



static void Test_F_BFu9i_BFu0i()
{
  {
    init_simple_test("F_BFu9i_BFu0i");
    static STRUCT_IF_C F_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu9i_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu9i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu9i_BFu0i, F_BFu9i_BFu0i)
//============================================================================



static void Test_F_BFu9i_BFu0ll()
{
  {
    init_simple_test("F_BFu9i_BFu0ll");
    static STRUCT_IF_C F_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu9i_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu9i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu9i_BFu0ll, F_BFu9i_BFu0ll)
//============================================================================



static void Test_F_BFu9i_BFu0s()
{
  {
    init_simple_test("F_BFu9i_BFu0s");
    static STRUCT_IF_C F_BFu9i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu9i_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu9i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu9i_BFu0s, F_BFu9i_BFu0s)
//============================================================================



static void Test_F_BFu9ll_BFu0c()
{
  {
    init_simple_test("F_BFu9ll_BFu0c");
    static STRUCT_IF_C F_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu9ll_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu9ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu9ll_BFu0c, F_BFu9ll_BFu0c)
//============================================================================



static void Test_F_BFu9ll_BFu0i()
{
  {
    init_simple_test("F_BFu9ll_BFu0i");
    static STRUCT_IF_C F_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu9ll_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu9ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu9ll_BFu0i, F_BFu9ll_BFu0i)
//============================================================================



static void Test_F_BFu9ll_BFu0ll()
{
  {
    init_simple_test("F_BFu9ll_BFu0ll");
    static STRUCT_IF_C F_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu9ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu9ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu9ll_BFu0ll, F_BFu9ll_BFu0ll)
//============================================================================



static void Test_F_BFu9ll_BFu0s()
{
  {
    init_simple_test("F_BFu9ll_BFu0s");
    static STRUCT_IF_C F_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu9ll_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu9ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu9ll_BFu0s, F_BFu9ll_BFu0s)
//============================================================================



static void Test_F_BFu9s_BFu0c()
{
  {
    init_simple_test("F_BFu9s_BFu0c");
    static STRUCT_IF_C F_BFu9s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu9s_BFu0c)");
    check_field_offset(lv, v1, 0, "F_BFu9s_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu9s_BFu0c, F_BFu9s_BFu0c)
//============================================================================



static void Test_F_BFu9s_BFu0i()
{
  {
    init_simple_test("F_BFu9s_BFu0i");
    static STRUCT_IF_C F_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu9s_BFu0i)");
    check_field_offset(lv, v1, 0, "F_BFu9s_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu9s_BFu0i, F_BFu9s_BFu0i)
//============================================================================



static void Test_F_BFu9s_BFu0ll()
{
  {
    init_simple_test("F_BFu9s_BFu0ll");
    static STRUCT_IF_C F_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu9s_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_BFu9s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu9s_BFu0ll, F_BFu9s_BFu0ll)
//============================================================================



static void Test_F_BFu9s_BFu0s()
{
  {
    init_simple_test("F_BFu9s_BFu0s");
    static STRUCT_IF_C F_BFu9s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_BFu9s_BFu0s)");
    check_field_offset(lv, v1, 0, "F_BFu9s_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu9s_BFu0s, F_BFu9s_BFu0s)
//============================================================================



static void Test_F_C_BFu0c()
{
  {
    init_simple_test("F_C_BFu0c");
    static STRUCT_IF_C F_C_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(F_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_C_BFu0c)");
    check_field_offset(lv, v1, 0, "F_C_BFu0c.v1");
    check_field_offset(lv, v2, 4, "F_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_C_BFu0c, F_C_BFu0c)
//============================================================================



static void Test_F_C_BFu0i()
{
  {
    init_simple_test("F_C_BFu0i");
    static STRUCT_IF_C F_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_C_BFu0i)");
    check_field_offset(lv, v1, 0, "F_C_BFu0i.v1");
    check_field_offset(lv, v2, 4, "F_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_C_BFu0i, F_C_BFu0i)
//============================================================================



static void Test_F_C_BFu0ll()
{
  {
    init_simple_test("F_C_BFu0ll");
    static STRUCT_IF_C F_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_C_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_C_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "F_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_C_BFu0ll, F_C_BFu0ll)
//============================================================================



static void Test_F_C_BFu0s()
{
  {
    init_simple_test("F_C_BFu0s");
    static STRUCT_IF_C F_C_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_C_BFu0s)");
    check_field_offset(lv, v1, 0, "F_C_BFu0s.v1");
    check_field_offset(lv, v2, 4, "F_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_C_BFu0s, F_C_BFu0s)
//============================================================================



static void Test_F_D_BFu0c()
{
  {
    init_simple_test("F_D_BFu0c");
    static STRUCT_IF_C F_D_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(F_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_D_BFu0c)");
    check_field_offset(lv, v1, 0, "F_D_BFu0c.v1");
    check_field_offset(lv, v2, 4, "F_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_D_BFu0c, F_D_BFu0c)
//============================================================================



static void Test_F_D_BFu0i()
{
  {
    init_simple_test("F_D_BFu0i");
    static STRUCT_IF_C F_D_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(F_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_D_BFu0i)");
    check_field_offset(lv, v1, 0, "F_D_BFu0i.v1");
    check_field_offset(lv, v2, 4, "F_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_D_BFu0i, F_D_BFu0i)
//============================================================================



static void Test_F_D_BFu0ll()
{
  {
    init_simple_test("F_D_BFu0ll");
    static STRUCT_IF_C F_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(F_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_D_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_D_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "F_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_D_BFu0ll, F_D_BFu0ll)
//============================================================================



static void Test_F_D_BFu0s()
{
  {
    init_simple_test("F_D_BFu0s");
    static STRUCT_IF_C F_D_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(F_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_D_BFu0s)");
    check_field_offset(lv, v1, 0, "F_D_BFu0s.v1");
    check_field_offset(lv, v2, 4, "F_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_D_BFu0s, F_D_BFu0s)
//============================================================================



static void Test_F_F_BFu0c()
{
  {
    init_simple_test("F_F_BFu0c");
    static STRUCT_IF_C F_F_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(F_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_F_BFu0c)");
    check_field_offset(lv, v1, 0, "F_F_BFu0c.v1");
    check_field_offset(lv, v2, 4, "F_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_F_BFu0c, F_F_BFu0c)
//============================================================================



static void Test_F_F_BFu0i()
{
  {
    init_simple_test("F_F_BFu0i");
    static STRUCT_IF_C F_F_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(F_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_F_BFu0i)");
    check_field_offset(lv, v1, 0, "F_F_BFu0i.v1");
    check_field_offset(lv, v2, 4, "F_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_F_BFu0i, F_F_BFu0i)
//============================================================================



static void Test_F_F_BFu0ll()
{
  {
    init_simple_test("F_F_BFu0ll");
    static STRUCT_IF_C F_F_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(F_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_F_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_F_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "F_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_F_BFu0ll, F_F_BFu0ll)
//============================================================================



static void Test_F_F_BFu0s()
{
  {
    init_simple_test("F_F_BFu0s");
    static STRUCT_IF_C F_F_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(F_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_F_BFu0s)");
    check_field_offset(lv, v1, 0, "F_F_BFu0s.v1");
    check_field_offset(lv, v2, 4, "F_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_F_BFu0s, F_F_BFu0s)
//============================================================================



static void Test_F_I_BFu0c()
{
  {
    init_simple_test("F_I_BFu0c");
    static STRUCT_IF_C F_I_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(F_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_I_BFu0c)");
    check_field_offset(lv, v1, 0, "F_I_BFu0c.v1");
    check_field_offset(lv, v2, 4, "F_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_I_BFu0c, F_I_BFu0c)
//============================================================================



static void Test_F_I_BFu0i()
{
  {
    init_simple_test("F_I_BFu0i");
    static STRUCT_IF_C F_I_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(F_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_I_BFu0i)");
    check_field_offset(lv, v1, 0, "F_I_BFu0i.v1");
    check_field_offset(lv, v2, 4, "F_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_I_BFu0i, F_I_BFu0i)
//============================================================================



static void Test_F_I_BFu0ll()
{
  {
    init_simple_test("F_I_BFu0ll");
    static STRUCT_IF_C F_I_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(F_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_I_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_I_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "F_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_I_BFu0ll, F_I_BFu0ll)
//============================================================================



static void Test_F_I_BFu0s()
{
  {
    init_simple_test("F_I_BFu0s");
    static STRUCT_IF_C F_I_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(F_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_I_BFu0s)");
    check_field_offset(lv, v1, 0, "F_I_BFu0s.v1");
    check_field_offset(lv, v2, 4, "F_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_I_BFu0s, F_I_BFu0s)
//============================================================================



static void Test_F_Ip_BFu0c()
{
  {
    init_simple_test("F_Ip_BFu0c");
    static STRUCT_IF_C F_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_Ip_BFu0c)");
    check_field_offset(lv, v1, 0, "F_Ip_BFu0c.v1");
    check_field_offset(lv, v2, 4, "F_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Ip_BFu0c, F_Ip_BFu0c)
//============================================================================



static void Test_F_Ip_BFu0i()
{
  {
    init_simple_test("F_Ip_BFu0i");
    static STRUCT_IF_C F_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Ip_BFu0i)");
    check_field_offset(lv, v1, 0, "F_Ip_BFu0i.v1");
    check_field_offset(lv, v2, 4, "F_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Ip_BFu0i, F_Ip_BFu0i)
//============================================================================



static void Test_F_Ip_BFu0ll()
{
  {
    init_simple_test("F_Ip_BFu0ll");
    static STRUCT_IF_C F_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(F_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Ip_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_Ip_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "F_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Ip_BFu0ll, F_Ip_BFu0ll)
//============================================================================



static void Test_F_Ip_BFu0s()
{
  {
    init_simple_test("F_Ip_BFu0s");
    static STRUCT_IF_C F_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Ip_BFu0s)");
    check_field_offset(lv, v1, 0, "F_Ip_BFu0s.v1");
    check_field_offset(lv, v2, 4, "F_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Ip_BFu0s, F_Ip_BFu0s)
//============================================================================



static void Test_F_L_BFu0c()
{
  {
    init_simple_test("F_L_BFu0c");
    static STRUCT_IF_C F_L_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(F_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_L_BFu0c)");
    check_field_offset(lv, v1, 0, "F_L_BFu0c.v1");
    check_field_offset(lv, v2, 4, "F_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_L_BFu0c, F_L_BFu0c)
//============================================================================



static void Test_F_L_BFu0i()
{
  {
    init_simple_test("F_L_BFu0i");
    static STRUCT_IF_C F_L_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(F_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_L_BFu0i)");
    check_field_offset(lv, v1, 0, "F_L_BFu0i.v1");
    check_field_offset(lv, v2, 4, "F_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_L_BFu0i, F_L_BFu0i)
//============================================================================



static void Test_F_L_BFu0ll()
{
  {
    init_simple_test("F_L_BFu0ll");
    static STRUCT_IF_C F_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(F_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_L_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_L_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "F_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_L_BFu0ll, F_L_BFu0ll)
//============================================================================



static void Test_F_L_BFu0s()
{
  {
    init_simple_test("F_L_BFu0s");
    static STRUCT_IF_C F_L_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(F_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_L_BFu0s)");
    check_field_offset(lv, v1, 0, "F_L_BFu0s.v1");
    check_field_offset(lv, v2, 4, "F_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_L_BFu0s, F_L_BFu0s)
//============================================================================



static void Test_F_S_BFu0c()
{
  {
    init_simple_test("F_S_BFu0c");
    static STRUCT_IF_C F_S_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(F_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_S_BFu0c)");
    check_field_offset(lv, v1, 0, "F_S_BFu0c.v1");
    check_field_offset(lv, v2, 4, "F_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_S_BFu0c, F_S_BFu0c)
//============================================================================



static void Test_F_S_BFu0i()
{
  {
    init_simple_test("F_S_BFu0i");
    static STRUCT_IF_C F_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_S_BFu0i)");
    check_field_offset(lv, v1, 0, "F_S_BFu0i.v1");
    check_field_offset(lv, v2, 4, "F_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_S_BFu0i, F_S_BFu0i)
//============================================================================



static void Test_F_S_BFu0ll()
{
  {
    init_simple_test("F_S_BFu0ll");
    static STRUCT_IF_C F_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_S_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_S_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "F_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_S_BFu0ll, F_S_BFu0ll)
//============================================================================



static void Test_F_S_BFu0s()
{
  {
    init_simple_test("F_S_BFu0s");
    static STRUCT_IF_C F_S_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(F_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_S_BFu0s)");
    check_field_offset(lv, v1, 0, "F_S_BFu0s.v1");
    check_field_offset(lv, v2, 4, "F_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_S_BFu0s, F_S_BFu0s)
//============================================================================



static void Test_F_Uc_BFu0c()
{
  {
    init_simple_test("F_Uc_BFu0c");
    static STRUCT_IF_C F_Uc_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(F_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_Uc_BFu0c)");
    check_field_offset(lv, v1, 0, "F_Uc_BFu0c.v1");
    check_field_offset(lv, v2, 4, "F_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Uc_BFu0c, F_Uc_BFu0c)
//============================================================================



static void Test_F_Uc_BFu0i()
{
  {
    init_simple_test("F_Uc_BFu0i");
    static STRUCT_IF_C F_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Uc_BFu0i)");
    check_field_offset(lv, v1, 0, "F_Uc_BFu0i.v1");
    check_field_offset(lv, v2, 4, "F_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Uc_BFu0i, F_Uc_BFu0i)
//============================================================================



static void Test_F_Uc_BFu0ll()
{
  {
    init_simple_test("F_Uc_BFu0ll");
    static STRUCT_IF_C F_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Uc_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_Uc_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "F_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Uc_BFu0ll, F_Uc_BFu0ll)
//============================================================================



static void Test_F_Uc_BFu0s()
{
  {
    init_simple_test("F_Uc_BFu0s");
    static STRUCT_IF_C F_Uc_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(F_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Uc_BFu0s)");
    check_field_offset(lv, v1, 0, "F_Uc_BFu0s.v1");
    check_field_offset(lv, v2, 4, "F_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Uc_BFu0s, F_Uc_BFu0s)
//============================================================================



static void Test_F_Ui_BFu0c()
{
  {
    init_simple_test("F_Ui_BFu0c");
    static STRUCT_IF_C F_Ui_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(F_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_Ui_BFu0c)");
    check_field_offset(lv, v1, 0, "F_Ui_BFu0c.v1");
    check_field_offset(lv, v2, 4, "F_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Ui_BFu0c, F_Ui_BFu0c)
//============================================================================



static void Test_F_Ui_BFu0i()
{
  {
    init_simple_test("F_Ui_BFu0i");
    static STRUCT_IF_C F_Ui_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(F_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Ui_BFu0i)");
    check_field_offset(lv, v1, 0, "F_Ui_BFu0i.v1");
    check_field_offset(lv, v2, 4, "F_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Ui_BFu0i, F_Ui_BFu0i)
//============================================================================



static void Test_F_Ui_BFu0ll()
{
  {
    init_simple_test("F_Ui_BFu0ll");
    static STRUCT_IF_C F_Ui_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(F_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Ui_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_Ui_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "F_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Ui_BFu0ll, F_Ui_BFu0ll)
//============================================================================



static void Test_F_Ui_BFu0s()
{
  {
    init_simple_test("F_Ui_BFu0s");
    static STRUCT_IF_C F_Ui_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(F_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Ui_BFu0s)");
    check_field_offset(lv, v1, 0, "F_Ui_BFu0s.v1");
    check_field_offset(lv, v2, 4, "F_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Ui_BFu0s, F_Ui_BFu0s)
//============================================================================



static void Test_F_Ul_BFu0c()
{
  {
    init_simple_test("F_Ul_BFu0c");
    static STRUCT_IF_C F_Ul_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(F_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_Ul_BFu0c)");
    check_field_offset(lv, v1, 0, "F_Ul_BFu0c.v1");
    check_field_offset(lv, v2, 4, "F_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Ul_BFu0c, F_Ul_BFu0c)
//============================================================================



static void Test_F_Ul_BFu0i()
{
  {
    init_simple_test("F_Ul_BFu0i");
    static STRUCT_IF_C F_Ul_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(F_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Ul_BFu0i)");
    check_field_offset(lv, v1, 0, "F_Ul_BFu0i.v1");
    check_field_offset(lv, v2, 4, "F_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Ul_BFu0i, F_Ul_BFu0i)
//============================================================================



static void Test_F_Ul_BFu0ll()
{
  {
    init_simple_test("F_Ul_BFu0ll");
    static STRUCT_IF_C F_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(F_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Ul_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_Ul_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "F_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Ul_BFu0ll, F_Ul_BFu0ll)
//============================================================================



static void Test_F_Ul_BFu0s()
{
  {
    init_simple_test("F_Ul_BFu0s");
    static STRUCT_IF_C F_Ul_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(F_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Ul_BFu0s)");
    check_field_offset(lv, v1, 0, "F_Ul_BFu0s.v1");
    check_field_offset(lv, v2, 4, "F_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Ul_BFu0s, F_Ul_BFu0s)
//============================================================================



static void Test_F_Us_BFu0c()
{
  {
    init_simple_test("F_Us_BFu0c");
    static STRUCT_IF_C F_Us_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(F_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_Us_BFu0c)");
    check_field_offset(lv, v1, 0, "F_Us_BFu0c.v1");
    check_field_offset(lv, v2, 4, "F_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Us_BFu0c, F_Us_BFu0c)
//============================================================================



static void Test_F_Us_BFu0i()
{
  {
    init_simple_test("F_Us_BFu0i");
    static STRUCT_IF_C F_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Us_BFu0i)");
    check_field_offset(lv, v1, 0, "F_Us_BFu0i.v1");
    check_field_offset(lv, v2, 4, "F_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Us_BFu0i, F_Us_BFu0i)
//============================================================================



static void Test_F_Us_BFu0ll()
{
  {
    init_simple_test("F_Us_BFu0ll");
    static STRUCT_IF_C F_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(F_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Us_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_Us_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "F_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Us_BFu0ll, F_Us_BFu0ll)
//============================================================================



static void Test_F_Us_BFu0s()
{
  {
    init_simple_test("F_Us_BFu0s");
    static STRUCT_IF_C F_Us_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(F_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Us_BFu0s)");
    check_field_offset(lv, v1, 0, "F_Us_BFu0s.v1");
    check_field_offset(lv, v2, 4, "F_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Us_BFu0s, F_Us_BFu0s)
//============================================================================



static void Test_F_Vp_BFu0c()
{
  {
    init_simple_test("F_Vp_BFu0c");
    static STRUCT_IF_C F_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(F_Vp_BFu0c)");
    check_field_offset(lv, v1, 0, "F_Vp_BFu0c.v1");
    check_field_offset(lv, v2, 4, "F_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Vp_BFu0c, F_Vp_BFu0c)
//============================================================================



static void Test_F_Vp_BFu0i()
{
  {
    init_simple_test("F_Vp_BFu0i");
    static STRUCT_IF_C F_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Vp_BFu0i)");
    check_field_offset(lv, v1, 0, "F_Vp_BFu0i.v1");
    check_field_offset(lv, v2, 4, "F_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Vp_BFu0i, F_Vp_BFu0i)
//============================================================================



static void Test_F_Vp_BFu0ll()
{
  {
    init_simple_test("F_Vp_BFu0ll");
    static STRUCT_IF_C F_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(F_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Vp_BFu0ll)");
    check_field_offset(lv, v1, 0, "F_Vp_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "F_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Vp_BFu0ll, F_Vp_BFu0ll)
//============================================================================



static void Test_F_Vp_BFu0s()
{
  {
    init_simple_test("F_Vp_BFu0s");
    static STRUCT_IF_C F_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(F_Vp_BFu0s)");
    check_field_offset(lv, v1, 0, "F_Vp_BFu0s.v1");
    check_field_offset(lv, v2, 4, "F_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Vp_BFu0s, F_Vp_BFu0s)
//============================================================================



static void Test_I_BFu0c()
{
  {
    init_simple_test("I_BFu0c");
    static STRUCT_IF_C I_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c, I_BFu0c)
//============================================================================



static void Test_I_BFu0c_BFu0c()
{
  {
    init_simple_test("I_BFu0c_BFu0c");
    static STRUCT_IF_C I_BFu0c_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(I_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu0c, I_BFu0c_BFu0c)
//============================================================================



static void Test_I_BFu0c_BFu0i()
{
  {
    init_simple_test("I_BFu0c_BFu0i");
    static STRUCT_IF_C I_BFu0c_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(I_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0c_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu0i, I_BFu0c_BFu0i)
//============================================================================



static void Test_I_BFu0c_BFu0ll()
{
  {
    init_simple_test("I_BFu0c_BFu0ll");
    static STRUCT_IF_C I_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(I_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0c_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu0ll, I_BFu0c_BFu0ll)
//============================================================================



static void Test_I_BFu0c_BFu0s()
{
  {
    init_simple_test("I_BFu0c_BFu0s");
    static STRUCT_IF_C I_BFu0c_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(I_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0c_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu0s, I_BFu0c_BFu0s)
//============================================================================



static void Test_I_BFu0c_BFu15i()
{
  {
    init_simple_test("I_BFu0c_BFu15i");
    static STRUCT_IF_C I_BFu0c_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu15i)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu15i.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu15i, I_BFu0c_BFu15i)
//============================================================================



static void Test_I_BFu0c_BFu15ll()
{
  {
    init_simple_test("I_BFu0c_BFu15ll");
    static STRUCT_IF_C I_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu15ll)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu15ll, I_BFu0c_BFu15ll)
//============================================================================



static void Test_I_BFu0c_BFu15s()
{
  {
    init_simple_test("I_BFu0c_BFu15s");
    static STRUCT_IF_C I_BFu0c_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu15s)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu15s.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu15s, I_BFu0c_BFu15s)
//============================================================================



static void Test_I_BFu0c_BFu16i()
{
  {
    init_simple_test("I_BFu0c_BFu16i");
    static STRUCT_IF_C I_BFu0c_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu16i)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu16i.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu16i, I_BFu0c_BFu16i)
//============================================================================



static void Test_I_BFu0c_BFu16ll()
{
  {
    init_simple_test("I_BFu0c_BFu16ll");
    static STRUCT_IF_C I_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu16ll)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu16ll, I_BFu0c_BFu16ll)
//============================================================================



static void Test_I_BFu0c_BFu16s()
{
  {
    init_simple_test("I_BFu0c_BFu16s");
    static STRUCT_IF_C I_BFu0c_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu16s)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu16s.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu16s, I_BFu0c_BFu16s)
//============================================================================



static void Test_I_BFu0c_BFu17i()
{
  {
    init_simple_test("I_BFu0c_BFu17i");
    static STRUCT_IF_C I_BFu0c_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(I_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu17i)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu17i.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "I_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "I_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu17i, I_BFu0c_BFu17i)
//============================================================================



static void Test_I_BFu0c_BFu17ll()
{
  {
    init_simple_test("I_BFu0c_BFu17ll");
    static STRUCT_IF_C I_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(I_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu17ll)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "I_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "I_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu17ll, I_BFu0c_BFu17ll)
//============================================================================



static void Test_I_BFu0c_BFu1c()
{
  {
    init_simple_test("I_BFu0c_BFu1c");
    static STRUCT_IF_C I_BFu0c_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu1c)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu1c.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu1c, I_BFu0c_BFu1c)
//============================================================================



static void Test_I_BFu0c_BFu1i()
{
  {
    init_simple_test("I_BFu0c_BFu1i");
    static STRUCT_IF_C I_BFu0c_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu1i)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu1i.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu1i, I_BFu0c_BFu1i)
//============================================================================



static void Test_I_BFu0c_BFu1ll()
{
  {
    init_simple_test("I_BFu0c_BFu1ll");
    static STRUCT_IF_C I_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu1ll)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu1ll, I_BFu0c_BFu1ll)
//============================================================================



static void Test_I_BFu0c_BFu1s()
{
  {
    init_simple_test("I_BFu0c_BFu1s");
    static STRUCT_IF_C I_BFu0c_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu1s)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu1s.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu1s, I_BFu0c_BFu1s)
//============================================================================



static void Test_I_BFu0c_BFu31i()
{
  {
    init_simple_test("I_BFu0c_BFu31i");
    static STRUCT_IF_C I_BFu0c_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu31i)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu31i.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "I_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "I_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu31i, I_BFu0c_BFu31i)
//============================================================================



static void Test_I_BFu0c_BFu31ll()
{
  {
    init_simple_test("I_BFu0c_BFu31ll");
    static STRUCT_IF_C I_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu31ll)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "I_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "I_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu31ll, I_BFu0c_BFu31ll)
//============================================================================



static void Test_I_BFu0c_BFu32i()
{
  {
    init_simple_test("I_BFu0c_BFu32i");
    static STRUCT_IF_C I_BFu0c_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu32i)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu32i.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "I_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "I_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu32i, I_BFu0c_BFu32i)
//============================================================================



static void Test_I_BFu0c_BFu32ll()
{
  {
    init_simple_test("I_BFu0c_BFu32ll");
    static STRUCT_IF_C I_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu32ll)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "I_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "I_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu32ll, I_BFu0c_BFu32ll)
//============================================================================



static void Test_I_BFu0c_BFu33()
{
  {
    init_simple_test("I_BFu0c_BFu33");
    static STRUCT_IF_C I_BFu0c_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(I_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu33)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu33.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "I_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "I_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu33, I_BFu0c_BFu33)
//============================================================================



static void Test_I_BFu0c_BFu7c()
{
  {
    init_simple_test("I_BFu0c_BFu7c");
    static STRUCT_IF_C I_BFu0c_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu7c)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu7c.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu7c, I_BFu0c_BFu7c)
//============================================================================



static void Test_I_BFu0c_BFu7i()
{
  {
    init_simple_test("I_BFu0c_BFu7i");
    static STRUCT_IF_C I_BFu0c_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu7i)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu7i.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu7i, I_BFu0c_BFu7i)
//============================================================================



static void Test_I_BFu0c_BFu7ll()
{
  {
    init_simple_test("I_BFu0c_BFu7ll");
    static STRUCT_IF_C I_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu7ll)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu7ll, I_BFu0c_BFu7ll)
//============================================================================



static void Test_I_BFu0c_BFu7s()
{
  {
    init_simple_test("I_BFu0c_BFu7s");
    static STRUCT_IF_C I_BFu0c_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu7s)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu7s.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu7s, I_BFu0c_BFu7s)
//============================================================================



static void Test_I_BFu0c_BFu8c()
{
  {
    init_simple_test("I_BFu0c_BFu8c");
    static STRUCT_IF_C I_BFu0c_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu8c)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu8c.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu8c, I_BFu0c_BFu8c)
//============================================================================



static void Test_I_BFu0c_BFu8i()
{
  {
    init_simple_test("I_BFu0c_BFu8i");
    static STRUCT_IF_C I_BFu0c_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu8i)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu8i.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu8i, I_BFu0c_BFu8i)
//============================================================================



static void Test_I_BFu0c_BFu8ll()
{
  {
    init_simple_test("I_BFu0c_BFu8ll");
    static STRUCT_IF_C I_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu8ll)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu8ll, I_BFu0c_BFu8ll)
//============================================================================



static void Test_I_BFu0c_BFu8s()
{
  {
    init_simple_test("I_BFu0c_BFu8s");
    static STRUCT_IF_C I_BFu0c_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu8s)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu8s.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu8s, I_BFu0c_BFu8s)
//============================================================================



static void Test_I_BFu0c_BFu9i()
{
  {
    init_simple_test("I_BFu0c_BFu9i");
    static STRUCT_IF_C I_BFu0c_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu9i)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu9i.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu9i, I_BFu0c_BFu9i)
//============================================================================



static void Test_I_BFu0c_BFu9ll()
{
  {
    init_simple_test("I_BFu0c_BFu9ll");
    static STRUCT_IF_C I_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu9ll)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu9ll, I_BFu0c_BFu9ll)
//============================================================================



static void Test_I_BFu0c_BFu9s()
{
  {
    init_simple_test("I_BFu0c_BFu9s");
    static STRUCT_IF_C I_BFu0c_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_BFu9s)");
    check_field_offset(lv, v1, 0, "I_BFu0c_BFu9s.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_BFu9s, I_BFu0c_BFu9s)
//============================================================================



static void Test_I_BFu0c_C()
{
  {
    init_simple_test("I_BFu0c_C");
    static STRUCT_IF_C I_BFu0c_C lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_C)");
    check_field_offset(lv, v1, 0, "I_BFu0c_C.v1");
    check_field_offset(lv, v2, 4, "I_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_C, I_BFu0c_C)
//============================================================================



static void Test_I_BFu0c_D()
{
  {
    init_simple_test("I_BFu0c_D");
    static STRUCT_IF_C I_BFu0c_D lv;
    check2(sizeof(lv), 12, "sizeof(I_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_D)");
    check_field_offset(lv, v1, 0, "I_BFu0c_D.v1");
    check_field_offset(lv, v2, 4, "I_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_D, I_BFu0c_D)
//============================================================================



static void Test_I_BFu0c_F()
{
  {
    init_simple_test("I_BFu0c_F");
    static STRUCT_IF_C I_BFu0c_F lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_F)");
    check_field_offset(lv, v1, 0, "I_BFu0c_F.v1");
    check_field_offset(lv, v2, 4, "I_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_F, I_BFu0c_F)
//============================================================================



static void Test_I_BFu0c_I()
{
  {
    init_simple_test("I_BFu0c_I");
    static STRUCT_IF_C I_BFu0c_I lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_I)");
    check_field_offset(lv, v1, 0, "I_BFu0c_I.v1");
    check_field_offset(lv, v2, 4, "I_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_I, I_BFu0c_I)
//============================================================================



static void Test_I_BFu0c_Ip()
{
  {
    init_simple_test("I_BFu0c_Ip");
    static STRUCT_IF_C I_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_Ip)");
    check_field_offset(lv, v1, 0, "I_BFu0c_Ip.v1");
    check_field_offset(lv, v2, 4, "I_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_Ip, I_BFu0c_Ip)
//============================================================================



static void Test_I_BFu0c_L()
{
  {
    init_simple_test("I_BFu0c_L");
    static STRUCT_IF_C I_BFu0c_L lv;
    check2(sizeof(lv), 12, "sizeof(I_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_L)");
    check_field_offset(lv, v1, 0, "I_BFu0c_L.v1");
    check_field_offset(lv, v2, 4, "I_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_L, I_BFu0c_L)
//============================================================================



static void Test_I_BFu0c_S()
{
  {
    init_simple_test("I_BFu0c_S");
    static STRUCT_IF_C I_BFu0c_S lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_S)");
    check_field_offset(lv, v1, 0, "I_BFu0c_S.v1");
    check_field_offset(lv, v2, 4, "I_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_S, I_BFu0c_S)
//============================================================================



static void Test_I_BFu0c_Uc()
{
  {
    init_simple_test("I_BFu0c_Uc");
    static STRUCT_IF_C I_BFu0c_Uc lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_Uc)");
    check_field_offset(lv, v1, 0, "I_BFu0c_Uc.v1");
    check_field_offset(lv, v2, 4, "I_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_Uc, I_BFu0c_Uc)
//============================================================================



static void Test_I_BFu0c_Ui()
{
  {
    init_simple_test("I_BFu0c_Ui");
    static STRUCT_IF_C I_BFu0c_Ui lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_Ui)");
    check_field_offset(lv, v1, 0, "I_BFu0c_Ui.v1");
    check_field_offset(lv, v2, 4, "I_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_Ui, I_BFu0c_Ui)
//============================================================================



static void Test_I_BFu0c_Ul()
{
  {
    init_simple_test("I_BFu0c_Ul");
    static STRUCT_IF_C I_BFu0c_Ul lv;
    check2(sizeof(lv), 12, "sizeof(I_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_Ul)");
    check_field_offset(lv, v1, 0, "I_BFu0c_Ul.v1");
    check_field_offset(lv, v2, 4, "I_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_Ul, I_BFu0c_Ul)
//============================================================================



static void Test_I_BFu0c_Us()
{
  {
    init_simple_test("I_BFu0c_Us");
    static STRUCT_IF_C I_BFu0c_Us lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_Us)");
    check_field_offset(lv, v1, 0, "I_BFu0c_Us.v1");
    check_field_offset(lv, v2, 4, "I_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_Us, I_BFu0c_Us)
//============================================================================



static void Test_I_BFu0c_Vp()
{
  {
    init_simple_test("I_BFu0c_Vp");
    static STRUCT_IF_C I_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu0c_Vp)");
    check_field_offset(lv, v1, 0, "I_BFu0c_Vp.v1");
    check_field_offset(lv, v2, 4, "I_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0c_Vp, I_BFu0c_Vp)
//============================================================================



static void Test_I_BFu0i()
{
  {
    init_simple_test("I_BFu0i");
    static STRUCT_IF_C I_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i, I_BFu0i)
//============================================================================



static void Test_I_BFu0i_BFu0c()
{
  {
    init_simple_test("I_BFu0i_BFu0c");
    static STRUCT_IF_C I_BFu0i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(I_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu0c, I_BFu0i_BFu0c)
//============================================================================



static void Test_I_BFu0i_BFu0i()
{
  {
    init_simple_test("I_BFu0i_BFu0i");
    static STRUCT_IF_C I_BFu0i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(I_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu0i, I_BFu0i_BFu0i)
//============================================================================



static void Test_I_BFu0i_BFu0ll()
{
  {
    init_simple_test("I_BFu0i_BFu0ll");
    static STRUCT_IF_C I_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(I_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu0ll, I_BFu0i_BFu0ll)
//============================================================================



static void Test_I_BFu0i_BFu0s()
{
  {
    init_simple_test("I_BFu0i_BFu0s");
    static STRUCT_IF_C I_BFu0i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(I_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu0s, I_BFu0i_BFu0s)
//============================================================================



static void Test_I_BFu0i_BFu15i()
{
  {
    init_simple_test("I_BFu0i_BFu15i");
    static STRUCT_IF_C I_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu15i)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu15i.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu15i, I_BFu0i_BFu15i)
//============================================================================



static void Test_I_BFu0i_BFu15ll()
{
  {
    init_simple_test("I_BFu0i_BFu15ll");
    static STRUCT_IF_C I_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu15ll)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu15ll, I_BFu0i_BFu15ll)
//============================================================================



static void Test_I_BFu0i_BFu15s()
{
  {
    init_simple_test("I_BFu0i_BFu15s");
    static STRUCT_IF_C I_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu15s)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu15s.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu15s, I_BFu0i_BFu15s)
//============================================================================



static void Test_I_BFu0i_BFu16i()
{
  {
    init_simple_test("I_BFu0i_BFu16i");
    static STRUCT_IF_C I_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu16i)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu16i.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu16i, I_BFu0i_BFu16i)
//============================================================================



static void Test_I_BFu0i_BFu16ll()
{
  {
    init_simple_test("I_BFu0i_BFu16ll");
    static STRUCT_IF_C I_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu16ll)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu16ll, I_BFu0i_BFu16ll)
//============================================================================



static void Test_I_BFu0i_BFu16s()
{
  {
    init_simple_test("I_BFu0i_BFu16s");
    static STRUCT_IF_C I_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu16s)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu16s.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu16s, I_BFu0i_BFu16s)
//============================================================================



static void Test_I_BFu0i_BFu17i()
{
  {
    init_simple_test("I_BFu0i_BFu17i");
    static STRUCT_IF_C I_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(I_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu17i)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu17i.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "I_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "I_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu17i, I_BFu0i_BFu17i)
//============================================================================



static void Test_I_BFu0i_BFu17ll()
{
  {
    init_simple_test("I_BFu0i_BFu17ll");
    static STRUCT_IF_C I_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(I_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu17ll)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "I_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "I_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu17ll, I_BFu0i_BFu17ll)
//============================================================================



static void Test_I_BFu0i_BFu1c()
{
  {
    init_simple_test("I_BFu0i_BFu1c");
    static STRUCT_IF_C I_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu1c)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu1c.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu1c, I_BFu0i_BFu1c)
//============================================================================



static void Test_I_BFu0i_BFu1i()
{
  {
    init_simple_test("I_BFu0i_BFu1i");
    static STRUCT_IF_C I_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu1i)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu1i.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu1i, I_BFu0i_BFu1i)
//============================================================================



static void Test_I_BFu0i_BFu1ll()
{
  {
    init_simple_test("I_BFu0i_BFu1ll");
    static STRUCT_IF_C I_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu1ll)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu1ll, I_BFu0i_BFu1ll)
//============================================================================



static void Test_I_BFu0i_BFu1s()
{
  {
    init_simple_test("I_BFu0i_BFu1s");
    static STRUCT_IF_C I_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu1s)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu1s.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu1s, I_BFu0i_BFu1s)
//============================================================================



static void Test_I_BFu0i_BFu31i()
{
  {
    init_simple_test("I_BFu0i_BFu31i");
    static STRUCT_IF_C I_BFu0i_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu31i)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu31i.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "I_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "I_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu31i, I_BFu0i_BFu31i)
//============================================================================



static void Test_I_BFu0i_BFu31ll()
{
  {
    init_simple_test("I_BFu0i_BFu31ll");
    static STRUCT_IF_C I_BFu0i_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu31ll)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "I_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "I_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu31ll, I_BFu0i_BFu31ll)
//============================================================================



static void Test_I_BFu0i_BFu32i()
{
  {
    init_simple_test("I_BFu0i_BFu32i");
    static STRUCT_IF_C I_BFu0i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu32i)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu32i.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "I_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "I_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu32i, I_BFu0i_BFu32i)
//============================================================================



static void Test_I_BFu0i_BFu32ll()
{
  {
    init_simple_test("I_BFu0i_BFu32ll");
    static STRUCT_IF_C I_BFu0i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu32ll)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "I_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "I_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu32ll, I_BFu0i_BFu32ll)
//============================================================================



static void Test_I_BFu0i_BFu33()
{
  {
    init_simple_test("I_BFu0i_BFu33");
    static STRUCT_IF_C I_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(I_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu33)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu33.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "I_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "I_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu33, I_BFu0i_BFu33)
//============================================================================



static void Test_I_BFu0i_BFu7c()
{
  {
    init_simple_test("I_BFu0i_BFu7c");
    static STRUCT_IF_C I_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu7c)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu7c.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu7c, I_BFu0i_BFu7c)
//============================================================================



static void Test_I_BFu0i_BFu7i()
{
  {
    init_simple_test("I_BFu0i_BFu7i");
    static STRUCT_IF_C I_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu7i)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu7i.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu7i, I_BFu0i_BFu7i)
//============================================================================



static void Test_I_BFu0i_BFu7ll()
{
  {
    init_simple_test("I_BFu0i_BFu7ll");
    static STRUCT_IF_C I_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu7ll)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu7ll, I_BFu0i_BFu7ll)
//============================================================================



static void Test_I_BFu0i_BFu7s()
{
  {
    init_simple_test("I_BFu0i_BFu7s");
    static STRUCT_IF_C I_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu7s)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu7s.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu7s, I_BFu0i_BFu7s)
//============================================================================



static void Test_I_BFu0i_BFu8c()
{
  {
    init_simple_test("I_BFu0i_BFu8c");
    static STRUCT_IF_C I_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu8c)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu8c.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu8c, I_BFu0i_BFu8c)
//============================================================================



static void Test_I_BFu0i_BFu8i()
{
  {
    init_simple_test("I_BFu0i_BFu8i");
    static STRUCT_IF_C I_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu8i)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu8i.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu8i, I_BFu0i_BFu8i)
//============================================================================



static void Test_I_BFu0i_BFu8ll()
{
  {
    init_simple_test("I_BFu0i_BFu8ll");
    static STRUCT_IF_C I_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu8ll)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu8ll, I_BFu0i_BFu8ll)
//============================================================================



static void Test_I_BFu0i_BFu8s()
{
  {
    init_simple_test("I_BFu0i_BFu8s");
    static STRUCT_IF_C I_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu8s)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu8s.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu8s, I_BFu0i_BFu8s)
//============================================================================



static void Test_I_BFu0i_BFu9i()
{
  {
    init_simple_test("I_BFu0i_BFu9i");
    static STRUCT_IF_C I_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu9i)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu9i.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu9i, I_BFu0i_BFu9i)
//============================================================================



static void Test_I_BFu0i_BFu9ll()
{
  {
    init_simple_test("I_BFu0i_BFu9ll");
    static STRUCT_IF_C I_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu9ll)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu9ll, I_BFu0i_BFu9ll)
//============================================================================



static void Test_I_BFu0i_BFu9s()
{
  {
    init_simple_test("I_BFu0i_BFu9s");
    static STRUCT_IF_C I_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_BFu9s)");
    check_field_offset(lv, v1, 0, "I_BFu0i_BFu9s.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_BFu9s, I_BFu0i_BFu9s)
//============================================================================



static void Test_I_BFu0i_C()
{
  {
    init_simple_test("I_BFu0i_C");
    static STRUCT_IF_C I_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_C)");
    check_field_offset(lv, v1, 0, "I_BFu0i_C.v1");
    check_field_offset(lv, v2, 4, "I_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_C, I_BFu0i_C)
//============================================================================



static void Test_I_BFu0i_D()
{
  {
    init_simple_test("I_BFu0i_D");
    static STRUCT_IF_C I_BFu0i_D lv;
    check2(sizeof(lv), 12, "sizeof(I_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_D)");
    check_field_offset(lv, v1, 0, "I_BFu0i_D.v1");
    check_field_offset(lv, v2, 4, "I_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_D, I_BFu0i_D)
//============================================================================



static void Test_I_BFu0i_F()
{
  {
    init_simple_test("I_BFu0i_F");
    static STRUCT_IF_C I_BFu0i_F lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_F)");
    check_field_offset(lv, v1, 0, "I_BFu0i_F.v1");
    check_field_offset(lv, v2, 4, "I_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_F, I_BFu0i_F)
//============================================================================



static void Test_I_BFu0i_I()
{
  {
    init_simple_test("I_BFu0i_I");
    static STRUCT_IF_C I_BFu0i_I lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_I)");
    check_field_offset(lv, v1, 0, "I_BFu0i_I.v1");
    check_field_offset(lv, v2, 4, "I_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_I, I_BFu0i_I)
//============================================================================



static void Test_I_BFu0i_Ip()
{
  {
    init_simple_test("I_BFu0i_Ip");
    static STRUCT_IF_C I_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_Ip)");
    check_field_offset(lv, v1, 0, "I_BFu0i_Ip.v1");
    check_field_offset(lv, v2, 4, "I_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_Ip, I_BFu0i_Ip)
//============================================================================



static void Test_I_BFu0i_L()
{
  {
    init_simple_test("I_BFu0i_L");
    static STRUCT_IF_C I_BFu0i_L lv;
    check2(sizeof(lv), 12, "sizeof(I_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_L)");
    check_field_offset(lv, v1, 0, "I_BFu0i_L.v1");
    check_field_offset(lv, v2, 4, "I_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_L, I_BFu0i_L)
//============================================================================



static void Test_I_BFu0i_S()
{
  {
    init_simple_test("I_BFu0i_S");
    static STRUCT_IF_C I_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_S)");
    check_field_offset(lv, v1, 0, "I_BFu0i_S.v1");
    check_field_offset(lv, v2, 4, "I_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_S, I_BFu0i_S)
//============================================================================



static void Test_I_BFu0i_Uc()
{
  {
    init_simple_test("I_BFu0i_Uc");
    static STRUCT_IF_C I_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_Uc)");
    check_field_offset(lv, v1, 0, "I_BFu0i_Uc.v1");
    check_field_offset(lv, v2, 4, "I_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_Uc, I_BFu0i_Uc)
//============================================================================



static void Test_I_BFu0i_Ui()
{
  {
    init_simple_test("I_BFu0i_Ui");
    static STRUCT_IF_C I_BFu0i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_Ui)");
    check_field_offset(lv, v1, 0, "I_BFu0i_Ui.v1");
    check_field_offset(lv, v2, 4, "I_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_Ui, I_BFu0i_Ui)
//============================================================================



static void Test_I_BFu0i_Ul()
{
  {
    init_simple_test("I_BFu0i_Ul");
    static STRUCT_IF_C I_BFu0i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(I_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_Ul)");
    check_field_offset(lv, v1, 0, "I_BFu0i_Ul.v1");
    check_field_offset(lv, v2, 4, "I_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_Ul, I_BFu0i_Ul)
//============================================================================



static void Test_I_BFu0i_Us()
{
  {
    init_simple_test("I_BFu0i_Us");
    static STRUCT_IF_C I_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_Us)");
    check_field_offset(lv, v1, 0, "I_BFu0i_Us.v1");
    check_field_offset(lv, v2, 4, "I_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_Us, I_BFu0i_Us)
//============================================================================



static void Test_I_BFu0i_Vp()
{
  {
    init_simple_test("I_BFu0i_Vp");
    static STRUCT_IF_C I_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0i_Vp)");
    check_field_offset(lv, v1, 0, "I_BFu0i_Vp.v1");
    check_field_offset(lv, v2, 4, "I_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0i_Vp, I_BFu0i_Vp)
//============================================================================



static void Test_I_BFu0ll()
{
  {
    init_simple_test("I_BFu0ll");
    static STRUCT_IF_C I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll, I_BFu0ll)
//============================================================================



static void Test_I_BFu0ll_BFu0c()
{
  {
    init_simple_test("I_BFu0ll_BFu0c");
    static STRUCT_IF_C I_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(I_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu0c, I_BFu0ll_BFu0c)
//============================================================================



static void Test_I_BFu0ll_BFu0i()
{
  {
    init_simple_test("I_BFu0ll_BFu0i");
    static STRUCT_IF_C I_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(I_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu0i, I_BFu0ll_BFu0i)
//============================================================================



static void Test_I_BFu0ll_BFu0ll()
{
  {
    init_simple_test("I_BFu0ll_BFu0ll");
    static STRUCT_IF_C I_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(I_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu0ll, I_BFu0ll_BFu0ll)
//============================================================================



static void Test_I_BFu0ll_BFu0s()
{
  {
    init_simple_test("I_BFu0ll_BFu0s");
    static STRUCT_IF_C I_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(I_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu0s, I_BFu0ll_BFu0s)
//============================================================================



static void Test_I_BFu0ll_BFu15i()
{
  {
    init_simple_test("I_BFu0ll_BFu15i");
    static STRUCT_IF_C I_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(I_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu15i)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu15i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "I_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "I_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu15i, I_BFu0ll_BFu15i)
//============================================================================



static void Test_I_BFu0ll_BFu15ll()
{
  {
    init_simple_test("I_BFu0ll_BFu15ll");
    static STRUCT_IF_C I_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(I_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "I_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "I_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu15ll, I_BFu0ll_BFu15ll)
//============================================================================



static void Test_I_BFu0ll_BFu15s()
{
  {
    init_simple_test("I_BFu0ll_BFu15s");
    static STRUCT_IF_C I_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(I_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu15s)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu15s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "I_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "I_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu15s, I_BFu0ll_BFu15s)
//============================================================================



static void Test_I_BFu0ll_BFu16i()
{
  {
    init_simple_test("I_BFu0ll_BFu16i");
    static STRUCT_IF_C I_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(I_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu16i)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu16i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "I_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "I_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu16i, I_BFu0ll_BFu16i)
//============================================================================



static void Test_I_BFu0ll_BFu16ll()
{
  {
    init_simple_test("I_BFu0ll_BFu16ll");
    static STRUCT_IF_C I_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(I_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "I_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "I_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu16ll, I_BFu0ll_BFu16ll)
//============================================================================



static void Test_I_BFu0ll_BFu16s()
{
  {
    init_simple_test("I_BFu0ll_BFu16s");
    static STRUCT_IF_C I_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(I_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu16s)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu16s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "I_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "I_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu16s, I_BFu0ll_BFu16s)
//============================================================================



static void Test_I_BFu0ll_BFu17i()
{
  {
    init_simple_test("I_BFu0ll_BFu17i");
    static STRUCT_IF_C I_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(I_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu17i)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu17i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "I_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "I_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu17i, I_BFu0ll_BFu17i)
//============================================================================



static void Test_I_BFu0ll_BFu17ll()
{
  {
    init_simple_test("I_BFu0ll_BFu17ll");
    static STRUCT_IF_C I_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(I_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "I_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "I_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu17ll, I_BFu0ll_BFu17ll)
//============================================================================



static void Test_I_BFu0ll_BFu1c()
{
  {
    init_simple_test("I_BFu0ll_BFu1c");
    static STRUCT_IF_C I_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(I_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu1c)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu1c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "I_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu1c, I_BFu0ll_BFu1c)
//============================================================================



static void Test_I_BFu0ll_BFu1i()
{
  {
    init_simple_test("I_BFu0ll_BFu1i");
    static STRUCT_IF_C I_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(I_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu1i)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu1i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "I_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu1i, I_BFu0ll_BFu1i)
//============================================================================



static void Test_I_BFu0ll_BFu1ll()
{
  {
    init_simple_test("I_BFu0ll_BFu1ll");
    static STRUCT_IF_C I_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(I_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "I_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu1ll, I_BFu0ll_BFu1ll)
//============================================================================



static void Test_I_BFu0ll_BFu1s()
{
  {
    init_simple_test("I_BFu0ll_BFu1s");
    static STRUCT_IF_C I_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(I_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu1s)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu1s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "I_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu1s, I_BFu0ll_BFu1s)
//============================================================================



static void Test_I_BFu0ll_BFu31i()
{
  {
    init_simple_test("I_BFu0ll_BFu31i");
    static STRUCT_IF_C I_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu31i)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu31i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "I_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "I_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu31i, I_BFu0ll_BFu31i)
//============================================================================



static void Test_I_BFu0ll_BFu31ll()
{
  {
    init_simple_test("I_BFu0ll_BFu31ll");
    static STRUCT_IF_C I_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "I_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "I_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu31ll, I_BFu0ll_BFu31ll)
//============================================================================



static void Test_I_BFu0ll_BFu32i()
{
  {
    init_simple_test("I_BFu0ll_BFu32i");
    static STRUCT_IF_C I_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu32i)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu32i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "I_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "I_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu32i, I_BFu0ll_BFu32i)
//============================================================================



static void Test_I_BFu0ll_BFu32ll()
{
  {
    init_simple_test("I_BFu0ll_BFu32ll");
    static STRUCT_IF_C I_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "I_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "I_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu32ll, I_BFu0ll_BFu32ll)
//============================================================================



static void Test_I_BFu0ll_BFu33()
{
  {
    init_simple_test("I_BFu0ll_BFu33");
    static STRUCT_IF_C I_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(I_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu33)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu33.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "I_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "I_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu33, I_BFu0ll_BFu33)
//============================================================================



static void Test_I_BFu0ll_BFu7c()
{
  {
    init_simple_test("I_BFu0ll_BFu7c");
    static STRUCT_IF_C I_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(I_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu7c)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu7c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "I_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "I_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu7c, I_BFu0ll_BFu7c)
//============================================================================



static void Test_I_BFu0ll_BFu7i()
{
  {
    init_simple_test("I_BFu0ll_BFu7i");
    static STRUCT_IF_C I_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(I_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu7i)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu7i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "I_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "I_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu7i, I_BFu0ll_BFu7i)
//============================================================================



static void Test_I_BFu0ll_BFu7ll()
{
  {
    init_simple_test("I_BFu0ll_BFu7ll");
    static STRUCT_IF_C I_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(I_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "I_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "I_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu7ll, I_BFu0ll_BFu7ll)
//============================================================================



static void Test_I_BFu0ll_BFu7s()
{
  {
    init_simple_test("I_BFu0ll_BFu7s");
    static STRUCT_IF_C I_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(I_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu7s)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu7s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "I_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "I_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu7s, I_BFu0ll_BFu7s)
//============================================================================



static void Test_I_BFu0ll_BFu8c()
{
  {
    init_simple_test("I_BFu0ll_BFu8c");
    static STRUCT_IF_C I_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(I_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu8c)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu8c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "I_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "I_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu8c, I_BFu0ll_BFu8c)
//============================================================================



static void Test_I_BFu0ll_BFu8i()
{
  {
    init_simple_test("I_BFu0ll_BFu8i");
    static STRUCT_IF_C I_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(I_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu8i)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu8i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "I_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "I_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu8i, I_BFu0ll_BFu8i)
//============================================================================



static void Test_I_BFu0ll_BFu8ll()
{
  {
    init_simple_test("I_BFu0ll_BFu8ll");
    static STRUCT_IF_C I_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(I_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "I_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "I_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu8ll, I_BFu0ll_BFu8ll)
//============================================================================



static void Test_I_BFu0ll_BFu8s()
{
  {
    init_simple_test("I_BFu0ll_BFu8s");
    static STRUCT_IF_C I_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(I_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu8s)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu8s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "I_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "I_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu8s, I_BFu0ll_BFu8s)
//============================================================================



static void Test_I_BFu0ll_BFu9i()
{
  {
    init_simple_test("I_BFu0ll_BFu9i");
    static STRUCT_IF_C I_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(I_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu9i)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu9i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "I_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "I_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu9i, I_BFu0ll_BFu9i)
//============================================================================



static void Test_I_BFu0ll_BFu9ll()
{
  {
    init_simple_test("I_BFu0ll_BFu9ll");
    static STRUCT_IF_C I_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(I_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "I_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "I_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu9ll, I_BFu0ll_BFu9ll)
//============================================================================



static void Test_I_BFu0ll_BFu9s()
{
  {
    init_simple_test("I_BFu0ll_BFu9s");
    static STRUCT_IF_C I_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(I_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_BFu9s)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_BFu9s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "I_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "I_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_BFu9s, I_BFu0ll_BFu9s)
//============================================================================



static void Test_I_BFu0ll_C()
{
  {
    init_simple_test("I_BFu0ll_C");
    static STRUCT_IF_C I_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(I_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_C)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_C.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "I_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_C, I_BFu0ll_C)
//============================================================================



static void Test_I_BFu0ll_D()
{
  {
    init_simple_test("I_BFu0ll_D");
    static STRUCT_IF_C I_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(I_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_D)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_D.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "I_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_D, I_BFu0ll_D)
//============================================================================



static void Test_I_BFu0ll_F()
{
  {
    init_simple_test("I_BFu0ll_F");
    static STRUCT_IF_C I_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_F)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_F.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "I_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_F, I_BFu0ll_F)
//============================================================================



static void Test_I_BFu0ll_I()
{
  {
    init_simple_test("I_BFu0ll_I");
    static STRUCT_IF_C I_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_I)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_I.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "I_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_I, I_BFu0ll_I)
//============================================================================



static void Test_I_BFu0ll_Ip()
{
  {
    init_simple_test("I_BFu0ll_Ip");
    static STRUCT_IF_C I_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(I_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_Ip)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "I_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_Ip, I_BFu0ll_Ip)
//============================================================================



static void Test_I_BFu0ll_L()
{
  {
    init_simple_test("I_BFu0ll_L");
    static STRUCT_IF_C I_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(I_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_L)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_L.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "I_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_L, I_BFu0ll_L)
//============================================================================



static void Test_I_BFu0ll_S()
{
  {
    init_simple_test("I_BFu0ll_S");
    static STRUCT_IF_C I_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(I_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_S)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_S.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "I_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_S, I_BFu0ll_S)
//============================================================================



static void Test_I_BFu0ll_Uc()
{
  {
    init_simple_test("I_BFu0ll_Uc");
    static STRUCT_IF_C I_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(I_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_Uc)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "I_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_Uc, I_BFu0ll_Uc)
//============================================================================



static void Test_I_BFu0ll_Ui()
{
  {
    init_simple_test("I_BFu0ll_Ui");
    static STRUCT_IF_C I_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_Ui)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "I_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_Ui, I_BFu0ll_Ui)
//============================================================================



static void Test_I_BFu0ll_Ul()
{
  {
    init_simple_test("I_BFu0ll_Ul");
    static STRUCT_IF_C I_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(I_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_Ul)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "I_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_Ul, I_BFu0ll_Ul)
//============================================================================



static void Test_I_BFu0ll_Us()
{
  {
    init_simple_test("I_BFu0ll_Us");
    static STRUCT_IF_C I_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(I_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_Us)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_Us.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "I_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_Us, I_BFu0ll_Us)
//============================================================================



static void Test_I_BFu0ll_Vp()
{
  {
    init_simple_test("I_BFu0ll_Vp");
    static STRUCT_IF_C I_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(I_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0ll_Vp)");
    check_field_offset(lv, v1, 0, "I_BFu0ll_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "I_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0ll_Vp, I_BFu0ll_Vp)
//============================================================================



static void Test_I_BFu0s()
{
  {
    init_simple_test("I_BFu0s");
    static STRUCT_IF_C I_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s, I_BFu0s)
//============================================================================



static void Test_I_BFu0s_BFu0c()
{
  {
    init_simple_test("I_BFu0s_BFu0c");
    static STRUCT_IF_C I_BFu0s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(I_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu0c, I_BFu0s_BFu0c)
//============================================================================



static void Test_I_BFu0s_BFu0i()
{
  {
    init_simple_test("I_BFu0s_BFu0i");
    static STRUCT_IF_C I_BFu0s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(I_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu0i, I_BFu0s_BFu0i)
//============================================================================



static void Test_I_BFu0s_BFu0ll()
{
  {
    init_simple_test("I_BFu0s_BFu0ll");
    static STRUCT_IF_C I_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(I_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu0ll, I_BFu0s_BFu0ll)
//============================================================================



static void Test_I_BFu0s_BFu0s()
{
  {
    init_simple_test("I_BFu0s_BFu0s");
    static STRUCT_IF_C I_BFu0s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(I_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu0s, I_BFu0s_BFu0s)
//============================================================================



static void Test_I_BFu0s_BFu15i()
{
  {
    init_simple_test("I_BFu0s_BFu15i");
    static STRUCT_IF_C I_BFu0s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu15i)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu15i.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu15i, I_BFu0s_BFu15i)
//============================================================================



static void Test_I_BFu0s_BFu15ll()
{
  {
    init_simple_test("I_BFu0s_BFu15ll");
    static STRUCT_IF_C I_BFu0s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu15ll)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu15ll, I_BFu0s_BFu15ll)
//============================================================================



static void Test_I_BFu0s_BFu15s()
{
  {
    init_simple_test("I_BFu0s_BFu15s");
    static STRUCT_IF_C I_BFu0s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu15s)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu15s.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu15s, I_BFu0s_BFu15s)
//============================================================================



static void Test_I_BFu0s_BFu16i()
{
  {
    init_simple_test("I_BFu0s_BFu16i");
    static STRUCT_IF_C I_BFu0s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu16i)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu16i.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu16i, I_BFu0s_BFu16i)
//============================================================================



static void Test_I_BFu0s_BFu16ll()
{
  {
    init_simple_test("I_BFu0s_BFu16ll");
    static STRUCT_IF_C I_BFu0s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu16ll)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu16ll, I_BFu0s_BFu16ll)
//============================================================================



static void Test_I_BFu0s_BFu16s()
{
  {
    init_simple_test("I_BFu0s_BFu16s");
    static STRUCT_IF_C I_BFu0s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu16s)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu16s.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu16s, I_BFu0s_BFu16s)
//============================================================================



static void Test_I_BFu0s_BFu17i()
{
  {
    init_simple_test("I_BFu0s_BFu17i");
    static STRUCT_IF_C I_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(I_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu17i)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu17i.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "I_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "I_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu17i, I_BFu0s_BFu17i)
//============================================================================



static void Test_I_BFu0s_BFu17ll()
{
  {
    init_simple_test("I_BFu0s_BFu17ll");
    static STRUCT_IF_C I_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(I_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu17ll)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "I_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "I_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu17ll, I_BFu0s_BFu17ll)
//============================================================================



static void Test_I_BFu0s_BFu1c()
{
  {
    init_simple_test("I_BFu0s_BFu1c");
    static STRUCT_IF_C I_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu1c)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu1c.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu1c, I_BFu0s_BFu1c)
//============================================================================



static void Test_I_BFu0s_BFu1i()
{
  {
    init_simple_test("I_BFu0s_BFu1i");
    static STRUCT_IF_C I_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu1i)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu1i.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu1i, I_BFu0s_BFu1i)
//============================================================================



static void Test_I_BFu0s_BFu1ll()
{
  {
    init_simple_test("I_BFu0s_BFu1ll");
    static STRUCT_IF_C I_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu1ll)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu1ll, I_BFu0s_BFu1ll)
//============================================================================



static void Test_I_BFu0s_BFu1s()
{
  {
    init_simple_test("I_BFu0s_BFu1s");
    static STRUCT_IF_C I_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu1s)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu1s.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu1s, I_BFu0s_BFu1s)
//============================================================================



static void Test_I_BFu0s_BFu31i()
{
  {
    init_simple_test("I_BFu0s_BFu31i");
    static STRUCT_IF_C I_BFu0s_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu31i)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu31i.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "I_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "I_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu31i, I_BFu0s_BFu31i)
//============================================================================



static void Test_I_BFu0s_BFu31ll()
{
  {
    init_simple_test("I_BFu0s_BFu31ll");
    static STRUCT_IF_C I_BFu0s_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu31ll)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "I_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "I_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu31ll, I_BFu0s_BFu31ll)
//============================================================================



static void Test_I_BFu0s_BFu32i()
{
  {
    init_simple_test("I_BFu0s_BFu32i");
    static STRUCT_IF_C I_BFu0s_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu32i)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu32i.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "I_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "I_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu32i, I_BFu0s_BFu32i)
//============================================================================



static void Test_I_BFu0s_BFu32ll()
{
  {
    init_simple_test("I_BFu0s_BFu32ll");
    static STRUCT_IF_C I_BFu0s_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu32ll)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "I_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "I_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu32ll, I_BFu0s_BFu32ll)
//============================================================================



static void Test_I_BFu0s_BFu33()
{
  {
    init_simple_test("I_BFu0s_BFu33");
    static STRUCT_IF_C I_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(I_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu33)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu33.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "I_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "I_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu33, I_BFu0s_BFu33)
//============================================================================



static void Test_I_BFu0s_BFu7c()
{
  {
    init_simple_test("I_BFu0s_BFu7c");
    static STRUCT_IF_C I_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu7c)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu7c.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu7c, I_BFu0s_BFu7c)
//============================================================================



static void Test_I_BFu0s_BFu7i()
{
  {
    init_simple_test("I_BFu0s_BFu7i");
    static STRUCT_IF_C I_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu7i)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu7i.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu7i, I_BFu0s_BFu7i)
//============================================================================



static void Test_I_BFu0s_BFu7ll()
{
  {
    init_simple_test("I_BFu0s_BFu7ll");
    static STRUCT_IF_C I_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu7ll)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu7ll, I_BFu0s_BFu7ll)
//============================================================================



static void Test_I_BFu0s_BFu7s()
{
  {
    init_simple_test("I_BFu0s_BFu7s");
    static STRUCT_IF_C I_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu7s)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu7s.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu7s, I_BFu0s_BFu7s)
//============================================================================



static void Test_I_BFu0s_BFu8c()
{
  {
    init_simple_test("I_BFu0s_BFu8c");
    static STRUCT_IF_C I_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu8c)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu8c.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu8c, I_BFu0s_BFu8c)
//============================================================================



static void Test_I_BFu0s_BFu8i()
{
  {
    init_simple_test("I_BFu0s_BFu8i");
    static STRUCT_IF_C I_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu8i)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu8i.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu8i, I_BFu0s_BFu8i)
//============================================================================



static void Test_I_BFu0s_BFu8ll()
{
  {
    init_simple_test("I_BFu0s_BFu8ll");
    static STRUCT_IF_C I_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu8ll)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu8ll, I_BFu0s_BFu8ll)
//============================================================================



static void Test_I_BFu0s_BFu8s()
{
  {
    init_simple_test("I_BFu0s_BFu8s");
    static STRUCT_IF_C I_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu8s)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu8s.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu8s, I_BFu0s_BFu8s)
//============================================================================



static void Test_I_BFu0s_BFu9i()
{
  {
    init_simple_test("I_BFu0s_BFu9i");
    static STRUCT_IF_C I_BFu0s_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu9i)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu9i.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu9i, I_BFu0s_BFu9i)
//============================================================================



static void Test_I_BFu0s_BFu9ll()
{
  {
    init_simple_test("I_BFu0s_BFu9ll");
    static STRUCT_IF_C I_BFu0s_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu9ll)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu9ll, I_BFu0s_BFu9ll)
//============================================================================



static void Test_I_BFu0s_BFu9s()
{
  {
    init_simple_test("I_BFu0s_BFu9s");
    static STRUCT_IF_C I_BFu0s_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_BFu9s)");
    check_field_offset(lv, v1, 0, "I_BFu0s_BFu9s.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_BFu9s, I_BFu0s_BFu9s)
//============================================================================



static void Test_I_BFu0s_C()
{
  {
    init_simple_test("I_BFu0s_C");
    static STRUCT_IF_C I_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_C)");
    check_field_offset(lv, v1, 0, "I_BFu0s_C.v1");
    check_field_offset(lv, v2, 4, "I_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_C, I_BFu0s_C)
//============================================================================



static void Test_I_BFu0s_D()
{
  {
    init_simple_test("I_BFu0s_D");
    static STRUCT_IF_C I_BFu0s_D lv;
    check2(sizeof(lv), 12, "sizeof(I_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_D)");
    check_field_offset(lv, v1, 0, "I_BFu0s_D.v1");
    check_field_offset(lv, v2, 4, "I_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_D, I_BFu0s_D)
//============================================================================



static void Test_I_BFu0s_F()
{
  {
    init_simple_test("I_BFu0s_F");
    static STRUCT_IF_C I_BFu0s_F lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_F)");
    check_field_offset(lv, v1, 0, "I_BFu0s_F.v1");
    check_field_offset(lv, v2, 4, "I_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_F, I_BFu0s_F)
//============================================================================



static void Test_I_BFu0s_I()
{
  {
    init_simple_test("I_BFu0s_I");
    static STRUCT_IF_C I_BFu0s_I lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_I)");
    check_field_offset(lv, v1, 0, "I_BFu0s_I.v1");
    check_field_offset(lv, v2, 4, "I_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_I, I_BFu0s_I)
//============================================================================



static void Test_I_BFu0s_Ip()
{
  {
    init_simple_test("I_BFu0s_Ip");
    static STRUCT_IF_C I_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_Ip)");
    check_field_offset(lv, v1, 0, "I_BFu0s_Ip.v1");
    check_field_offset(lv, v2, 4, "I_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_Ip, I_BFu0s_Ip)
//============================================================================



static void Test_I_BFu0s_L()
{
  {
    init_simple_test("I_BFu0s_L");
    static STRUCT_IF_C I_BFu0s_L lv;
    check2(sizeof(lv), 12, "sizeof(I_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_L)");
    check_field_offset(lv, v1, 0, "I_BFu0s_L.v1");
    check_field_offset(lv, v2, 4, "I_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_L, I_BFu0s_L)
//============================================================================



static void Test_I_BFu0s_S()
{
  {
    init_simple_test("I_BFu0s_S");
    static STRUCT_IF_C I_BFu0s_S lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_S)");
    check_field_offset(lv, v1, 0, "I_BFu0s_S.v1");
    check_field_offset(lv, v2, 4, "I_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_S, I_BFu0s_S)
//============================================================================



static void Test_I_BFu0s_Uc()
{
  {
    init_simple_test("I_BFu0s_Uc");
    static STRUCT_IF_C I_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(I_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_Uc)");
    check_field_offset(lv, v1, 0, "I_BFu0s_Uc.v1");
    check_field_offset(lv, v2, 4, "I_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_Uc, I_BFu0s_Uc)
//============================================================================



static void Test_I_BFu0s_Ui()
{
  {
    init_simple_test("I_BFu0s_Ui");
    static STRUCT_IF_C I_BFu0s_Ui lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_Ui)");
    check_field_offset(lv, v1, 0, "I_BFu0s_Ui.v1");
    check_field_offset(lv, v2, 4, "I_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_Ui, I_BFu0s_Ui)
//============================================================================



static void Test_I_BFu0s_Ul()
{
  {
    init_simple_test("I_BFu0s_Ul");
    static STRUCT_IF_C I_BFu0s_Ul lv;
    check2(sizeof(lv), 12, "sizeof(I_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_Ul)");
    check_field_offset(lv, v1, 0, "I_BFu0s_Ul.v1");
    check_field_offset(lv, v2, 4, "I_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_Ul, I_BFu0s_Ul)
//============================================================================



static void Test_I_BFu0s_Us()
{
  {
    init_simple_test("I_BFu0s_Us");
    static STRUCT_IF_C I_BFu0s_Us lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_Us)");
    check_field_offset(lv, v1, 0, "I_BFu0s_Us.v1");
    check_field_offset(lv, v2, 4, "I_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_Us, I_BFu0s_Us)
//============================================================================



static void Test_I_BFu0s_Vp()
{
  {
    init_simple_test("I_BFu0s_Vp");
    static STRUCT_IF_C I_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu0s_Vp)");
    check_field_offset(lv, v1, 0, "I_BFu0s_Vp.v1");
    check_field_offset(lv, v2, 4, "I_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu0s_Vp, I_BFu0s_Vp)
//============================================================================



static void Test_I_BFu15i_BFu0c()
{
  {
    init_simple_test("I_BFu15i_BFu0c");
    static STRUCT_IF_C I_BFu15i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu15i_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu15i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu15i_BFu0c, I_BFu15i_BFu0c)
//============================================================================



static void Test_I_BFu15i_BFu0i()
{
  {
    init_simple_test("I_BFu15i_BFu0i");
    static STRUCT_IF_C I_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu15i_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu15i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu15i_BFu0i, I_BFu15i_BFu0i)
//============================================================================



static void Test_I_BFu15i_BFu0ll()
{
  {
    init_simple_test("I_BFu15i_BFu0ll");
    static STRUCT_IF_C I_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu15i_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu15i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu15i_BFu0ll, I_BFu15i_BFu0ll)
//============================================================================



static void Test_I_BFu15i_BFu0s()
{
  {
    init_simple_test("I_BFu15i_BFu0s");
    static STRUCT_IF_C I_BFu15i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu15i_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu15i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu15i_BFu0s, I_BFu15i_BFu0s)
//============================================================================



static void Test_I_BFu15ll_BFu0c()
{
  {
    init_simple_test("I_BFu15ll_BFu0c");
    static STRUCT_IF_C I_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu15ll_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu15ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu15ll_BFu0c, I_BFu15ll_BFu0c)
//============================================================================



static void Test_I_BFu15ll_BFu0i()
{
  {
    init_simple_test("I_BFu15ll_BFu0i");
    static STRUCT_IF_C I_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu15ll_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu15ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu15ll_BFu0i, I_BFu15ll_BFu0i)
//============================================================================



static void Test_I_BFu15ll_BFu0ll()
{
  {
    init_simple_test("I_BFu15ll_BFu0ll");
    static STRUCT_IF_C I_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu15ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu15ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu15ll_BFu0ll, I_BFu15ll_BFu0ll)
//============================================================================



static void Test_I_BFu15ll_BFu0s()
{
  {
    init_simple_test("I_BFu15ll_BFu0s");
    static STRUCT_IF_C I_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu15ll_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu15ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu15ll_BFu0s, I_BFu15ll_BFu0s)
//============================================================================



static void Test_I_BFu15s_BFu0c()
{
  {
    init_simple_test("I_BFu15s_BFu0c");
    static STRUCT_IF_C I_BFu15s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu15s_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu15s_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu15s_BFu0c, I_BFu15s_BFu0c)
//============================================================================



static void Test_I_BFu15s_BFu0i()
{
  {
    init_simple_test("I_BFu15s_BFu0i");
    static STRUCT_IF_C I_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu15s_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu15s_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu15s_BFu0i, I_BFu15s_BFu0i)
//============================================================================



static void Test_I_BFu15s_BFu0ll()
{
  {
    init_simple_test("I_BFu15s_BFu0ll");
    static STRUCT_IF_C I_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu15s_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu15s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu15s_BFu0ll, I_BFu15s_BFu0ll)
//============================================================================



static void Test_I_BFu15s_BFu0s()
{
  {
    init_simple_test("I_BFu15s_BFu0s");
    static STRUCT_IF_C I_BFu15s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu15s_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu15s_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu15s_BFu0s, I_BFu15s_BFu0s)
//============================================================================



static void Test_I_BFu16i_BFu0c()
{
  {
    init_simple_test("I_BFu16i_BFu0c");
    static STRUCT_IF_C I_BFu16i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu16i_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu16i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu16i_BFu0c, I_BFu16i_BFu0c)
//============================================================================



static void Test_I_BFu16i_BFu0i()
{
  {
    init_simple_test("I_BFu16i_BFu0i");
    static STRUCT_IF_C I_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu16i_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu16i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu16i_BFu0i, I_BFu16i_BFu0i)
//============================================================================



static void Test_I_BFu16i_BFu0ll()
{
  {
    init_simple_test("I_BFu16i_BFu0ll");
    static STRUCT_IF_C I_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu16i_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu16i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu16i_BFu0ll, I_BFu16i_BFu0ll)
//============================================================================



static void Test_I_BFu16i_BFu0s()
{
  {
    init_simple_test("I_BFu16i_BFu0s");
    static STRUCT_IF_C I_BFu16i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu16i_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu16i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu16i_BFu0s, I_BFu16i_BFu0s)
//============================================================================



static void Test_I_BFu16ll_BFu0c()
{
  {
    init_simple_test("I_BFu16ll_BFu0c");
    static STRUCT_IF_C I_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu16ll_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu16ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu16ll_BFu0c, I_BFu16ll_BFu0c)
//============================================================================



static void Test_I_BFu16ll_BFu0i()
{
  {
    init_simple_test("I_BFu16ll_BFu0i");
    static STRUCT_IF_C I_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu16ll_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu16ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu16ll_BFu0i, I_BFu16ll_BFu0i)
//============================================================================



static void Test_I_BFu16ll_BFu0ll()
{
  {
    init_simple_test("I_BFu16ll_BFu0ll");
    static STRUCT_IF_C I_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu16ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu16ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu16ll_BFu0ll, I_BFu16ll_BFu0ll)
//============================================================================



static void Test_I_BFu16ll_BFu0s()
{
  {
    init_simple_test("I_BFu16ll_BFu0s");
    static STRUCT_IF_C I_BFu16ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu16ll_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu16ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu16ll_BFu0s, I_BFu16ll_BFu0s)
//============================================================================



static void Test_I_BFu16s_BFu0c()
{
  {
    init_simple_test("I_BFu16s_BFu0c");
    static STRUCT_IF_C I_BFu16s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu16s_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu16s_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu16s_BFu0c, I_BFu16s_BFu0c)
//============================================================================



static void Test_I_BFu16s_BFu0i()
{
  {
    init_simple_test("I_BFu16s_BFu0i");
    static STRUCT_IF_C I_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu16s_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu16s_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu16s_BFu0i, I_BFu16s_BFu0i)
//============================================================================



static void Test_I_BFu16s_BFu0ll()
{
  {
    init_simple_test("I_BFu16s_BFu0ll");
    static STRUCT_IF_C I_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu16s_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu16s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu16s_BFu0ll, I_BFu16s_BFu0ll)
//============================================================================



static void Test_I_BFu16s_BFu0s()
{
  {
    init_simple_test("I_BFu16s_BFu0s");
    static STRUCT_IF_C I_BFu16s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu16s_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu16s_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu16s_BFu0s, I_BFu16s_BFu0s)
//============================================================================



static void Test_I_BFu17i_BFu0c()
{
  {
    init_simple_test("I_BFu17i_BFu0c");
    static STRUCT_IF_C I_BFu17i_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(I_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu17i_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu17i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "I_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "I_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu17i_BFu0c, I_BFu17i_BFu0c)
//============================================================================



static void Test_I_BFu17i_BFu0i()
{
  {
    init_simple_test("I_BFu17i_BFu0i");
    static STRUCT_IF_C I_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu17i_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu17i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "I_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "I_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu17i_BFu0i, I_BFu17i_BFu0i)
//============================================================================



static void Test_I_BFu17i_BFu0ll()
{
  {
    init_simple_test("I_BFu17i_BFu0ll");
    static STRUCT_IF_C I_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu17i_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu17i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "I_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "I_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu17i_BFu0ll, I_BFu17i_BFu0ll)
//============================================================================



static void Test_I_BFu17i_BFu0s()
{
  {
    init_simple_test("I_BFu17i_BFu0s");
    static STRUCT_IF_C I_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu17i_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu17i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "I_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "I_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu17i_BFu0s, I_BFu17i_BFu0s)
//============================================================================



static void Test_I_BFu17ll_BFu0c()
{
  {
    init_simple_test("I_BFu17ll_BFu0c");
    static STRUCT_IF_C I_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(I_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu17ll_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu17ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "I_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "I_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu17ll_BFu0c, I_BFu17ll_BFu0c)
//============================================================================



static void Test_I_BFu17ll_BFu0i()
{
  {
    init_simple_test("I_BFu17ll_BFu0i");
    static STRUCT_IF_C I_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu17ll_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu17ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "I_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "I_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu17ll_BFu0i, I_BFu17ll_BFu0i)
//============================================================================



static void Test_I_BFu17ll_BFu0ll()
{
  {
    init_simple_test("I_BFu17ll_BFu0ll");
    static STRUCT_IF_C I_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu17ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu17ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "I_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "I_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu17ll_BFu0ll, I_BFu17ll_BFu0ll)
//============================================================================



static void Test_I_BFu17ll_BFu0s()
{
  {
    init_simple_test("I_BFu17ll_BFu0s");
    static STRUCT_IF_C I_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu17ll_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu17ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "I_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "I_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu17ll_BFu0s, I_BFu17ll_BFu0s)
//============================================================================



static void Test_I_BFu1c_BFu0c()
{
  {
    init_simple_test("I_BFu1c_BFu0c");
    static STRUCT_IF_C I_BFu1c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu1c_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu1c_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1c_BFu0c, I_BFu1c_BFu0c)
//============================================================================



static void Test_I_BFu1c_BFu0i()
{
  {
    init_simple_test("I_BFu1c_BFu0i");
    static STRUCT_IF_C I_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu1c_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu1c_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1c_BFu0i, I_BFu1c_BFu0i)
//============================================================================



static void Test_I_BFu1c_BFu0ll()
{
  {
    init_simple_test("I_BFu1c_BFu0ll");
    static STRUCT_IF_C I_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu1c_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu1c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1c_BFu0ll, I_BFu1c_BFu0ll)
//============================================================================



static void Test_I_BFu1c_BFu0s()
{
  {
    init_simple_test("I_BFu1c_BFu0s");
    static STRUCT_IF_C I_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu1c_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu1c_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1c_BFu0s, I_BFu1c_BFu0s)
//============================================================================



static void Test_I_BFu1i_BFu0c()
{
  {
    init_simple_test("I_BFu1i_BFu0c");
    static STRUCT_IF_C I_BFu1i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu1i_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu1i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1i_BFu0c, I_BFu1i_BFu0c)
//============================================================================



static void Test_I_BFu1i_BFu0i()
{
  {
    init_simple_test("I_BFu1i_BFu0i");
    static STRUCT_IF_C I_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu1i_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu1i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1i_BFu0i, I_BFu1i_BFu0i)
//============================================================================



static void Test_I_BFu1i_BFu0ll()
{
  {
    init_simple_test("I_BFu1i_BFu0ll");
    static STRUCT_IF_C I_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu1i_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu1i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1i_BFu0ll, I_BFu1i_BFu0ll)
//============================================================================



static void Test_I_BFu1i_BFu0s()
{
  {
    init_simple_test("I_BFu1i_BFu0s");
    static STRUCT_IF_C I_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu1i_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu1i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1i_BFu0s, I_BFu1i_BFu0s)
//============================================================================



static void Test_I_BFu1ll_BFu0c()
{
  {
    init_simple_test("I_BFu1ll_BFu0c");
    static STRUCT_IF_C I_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu1ll_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu1ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1ll_BFu0c, I_BFu1ll_BFu0c)
//============================================================================



static void Test_I_BFu1ll_BFu0i()
{
  {
    init_simple_test("I_BFu1ll_BFu0i");
    static STRUCT_IF_C I_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu1ll_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu1ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1ll_BFu0i, I_BFu1ll_BFu0i)
//============================================================================



static void Test_I_BFu1ll_BFu0ll()
{
  {
    init_simple_test("I_BFu1ll_BFu0ll");
    static STRUCT_IF_C I_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu1ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu1ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1ll_BFu0ll, I_BFu1ll_BFu0ll)
//============================================================================



static void Test_I_BFu1ll_BFu0s()
{
  {
    init_simple_test("I_BFu1ll_BFu0s");
    static STRUCT_IF_C I_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu1ll_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu1ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1ll_BFu0s, I_BFu1ll_BFu0s)
//============================================================================



static void Test_I_BFu1s_BFu0c()
{
  {
    init_simple_test("I_BFu1s_BFu0c");
    static STRUCT_IF_C I_BFu1s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu1s_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu1s_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1s_BFu0c, I_BFu1s_BFu0c)
//============================================================================



static void Test_I_BFu1s_BFu0i()
{
  {
    init_simple_test("I_BFu1s_BFu0i");
    static STRUCT_IF_C I_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu1s_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu1s_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1s_BFu0i, I_BFu1s_BFu0i)
//============================================================================



static void Test_I_BFu1s_BFu0ll()
{
  {
    init_simple_test("I_BFu1s_BFu0ll");
    static STRUCT_IF_C I_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu1s_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu1s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1s_BFu0ll, I_BFu1s_BFu0ll)
//============================================================================



static void Test_I_BFu1s_BFu0s()
{
  {
    init_simple_test("I_BFu1s_BFu0s");
    static STRUCT_IF_C I_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu1s_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu1s_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1s_BFu0s, I_BFu1s_BFu0s)
//============================================================================



static void Test_I_BFu31i_BFu0c()
{
  {
    init_simple_test("I_BFu31i_BFu0c");
    static STRUCT_IF_C I_BFu31i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu31i_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu31i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "I_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "I_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu31i_BFu0c, I_BFu31i_BFu0c)
//============================================================================



static void Test_I_BFu31i_BFu0i()
{
  {
    init_simple_test("I_BFu31i_BFu0i");
    static STRUCT_IF_C I_BFu31i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu31i_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu31i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "I_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "I_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu31i_BFu0i, I_BFu31i_BFu0i)
//============================================================================



static void Test_I_BFu31i_BFu0ll()
{
  {
    init_simple_test("I_BFu31i_BFu0ll");
    static STRUCT_IF_C I_BFu31i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu31i_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu31i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "I_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "I_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu31i_BFu0ll, I_BFu31i_BFu0ll)
//============================================================================



static void Test_I_BFu31i_BFu0s()
{
  {
    init_simple_test("I_BFu31i_BFu0s");
    static STRUCT_IF_C I_BFu31i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu31i_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu31i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "I_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "I_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu31i_BFu0s, I_BFu31i_BFu0s)
//============================================================================



static void Test_I_BFu31ll_BFu0c()
{
  {
    init_simple_test("I_BFu31ll_BFu0c");
    static STRUCT_IF_C I_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu31ll_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu31ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "I_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "I_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu31ll_BFu0c, I_BFu31ll_BFu0c)
//============================================================================



static void Test_I_BFu31ll_BFu0i()
{
  {
    init_simple_test("I_BFu31ll_BFu0i");
    static STRUCT_IF_C I_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu31ll_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu31ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "I_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "I_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu31ll_BFu0i, I_BFu31ll_BFu0i)
//============================================================================



static void Test_I_BFu31ll_BFu0ll()
{
  {
    init_simple_test("I_BFu31ll_BFu0ll");
    static STRUCT_IF_C I_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu31ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu31ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "I_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "I_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu31ll_BFu0ll, I_BFu31ll_BFu0ll)
//============================================================================



static void Test_I_BFu31ll_BFu0s()
{
  {
    init_simple_test("I_BFu31ll_BFu0s");
    static STRUCT_IF_C I_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu31ll_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu31ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "I_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "I_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu31ll_BFu0s, I_BFu31ll_BFu0s)
//============================================================================



static void Test_I_BFu32i_BFu0c()
{
  {
    init_simple_test("I_BFu32i_BFu0c");
    static STRUCT_IF_C I_BFu32i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu32i_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu32i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "I_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "I_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu32i_BFu0c, I_BFu32i_BFu0c)
//============================================================================



static void Test_I_BFu32i_BFu0i()
{
  {
    init_simple_test("I_BFu32i_BFu0i");
    static STRUCT_IF_C I_BFu32i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu32i_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu32i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "I_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "I_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu32i_BFu0i, I_BFu32i_BFu0i)
//============================================================================



static void Test_I_BFu32i_BFu0ll()
{
  {
    init_simple_test("I_BFu32i_BFu0ll");
    static STRUCT_IF_C I_BFu32i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu32i_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu32i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "I_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "I_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu32i_BFu0ll, I_BFu32i_BFu0ll)
//============================================================================



static void Test_I_BFu32i_BFu0s()
{
  {
    init_simple_test("I_BFu32i_BFu0s");
    static STRUCT_IF_C I_BFu32i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu32i_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu32i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "I_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "I_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu32i_BFu0s, I_BFu32i_BFu0s)
//============================================================================



static void Test_I_BFu32ll_BFu0c()
{
  {
    init_simple_test("I_BFu32ll_BFu0c");
    static STRUCT_IF_C I_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu32ll_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu32ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "I_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "I_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu32ll_BFu0c, I_BFu32ll_BFu0c)
//============================================================================



static void Test_I_BFu32ll_BFu0i()
{
  {
    init_simple_test("I_BFu32ll_BFu0i");
    static STRUCT_IF_C I_BFu32ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu32ll_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu32ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "I_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "I_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu32ll_BFu0i, I_BFu32ll_BFu0i)
//============================================================================



static void Test_I_BFu32ll_BFu0ll()
{
  {
    init_simple_test("I_BFu32ll_BFu0ll");
    static STRUCT_IF_C I_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu32ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu32ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "I_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "I_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu32ll_BFu0ll, I_BFu32ll_BFu0ll)
//============================================================================



static void Test_I_BFu32ll_BFu0s()
{
  {
    init_simple_test("I_BFu32ll_BFu0s");
    static STRUCT_IF_C I_BFu32ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu32ll_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu32ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "I_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "I_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu32ll_BFu0s, I_BFu32ll_BFu0s)
//============================================================================



static void Test_I_BFu33_BFu0c()
{
  {
    init_simple_test("I_BFu33_BFu0c");
    static STRUCT_IF_C I_BFu33_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(I_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu33_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu33_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "I_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "I_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu33_BFu0c, I_BFu33_BFu0c)
//============================================================================



static void Test_I_BFu33_BFu0i()
{
  {
    init_simple_test("I_BFu33_BFu0i");
    static STRUCT_IF_C I_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(I_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu33_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu33_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "I_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "I_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu33_BFu0i, I_BFu33_BFu0i)
//============================================================================



static void Test_I_BFu33_BFu0ll()
{
  {
    init_simple_test("I_BFu33_BFu0ll");
    static STRUCT_IF_C I_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(I_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu33_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu33_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "I_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "I_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu33_BFu0ll, I_BFu33_BFu0ll)
//============================================================================



static void Test_I_BFu33_BFu0s()
{
  {
    init_simple_test("I_BFu33_BFu0s");
    static STRUCT_IF_C I_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(I_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu33_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu33_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "I_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "I_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu33_BFu0s, I_BFu33_BFu0s)
//============================================================================



static void Test_I_BFu7c_BFu0c()
{
  {
    init_simple_test("I_BFu7c_BFu0c");
    static STRUCT_IF_C I_BFu7c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu7c_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu7c_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7c_BFu0c, I_BFu7c_BFu0c)
//============================================================================



static void Test_I_BFu7c_BFu0i()
{
  {
    init_simple_test("I_BFu7c_BFu0i");
    static STRUCT_IF_C I_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu7c_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu7c_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7c_BFu0i, I_BFu7c_BFu0i)
//============================================================================



static void Test_I_BFu7c_BFu0ll()
{
  {
    init_simple_test("I_BFu7c_BFu0ll");
    static STRUCT_IF_C I_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu7c_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu7c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7c_BFu0ll, I_BFu7c_BFu0ll)
//============================================================================



static void Test_I_BFu7c_BFu0s()
{
  {
    init_simple_test("I_BFu7c_BFu0s");
    static STRUCT_IF_C I_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu7c_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu7c_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7c_BFu0s, I_BFu7c_BFu0s)
//============================================================================



static void Test_I_BFu7i_BFu0c()
{
  {
    init_simple_test("I_BFu7i_BFu0c");
    static STRUCT_IF_C I_BFu7i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu7i_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu7i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7i_BFu0c, I_BFu7i_BFu0c)
//============================================================================



static void Test_I_BFu7i_BFu0i()
{
  {
    init_simple_test("I_BFu7i_BFu0i");
    static STRUCT_IF_C I_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu7i_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu7i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7i_BFu0i, I_BFu7i_BFu0i)
//============================================================================



static void Test_I_BFu7i_BFu0ll()
{
  {
    init_simple_test("I_BFu7i_BFu0ll");
    static STRUCT_IF_C I_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu7i_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu7i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7i_BFu0ll, I_BFu7i_BFu0ll)
//============================================================================



static void Test_I_BFu7i_BFu0s()
{
  {
    init_simple_test("I_BFu7i_BFu0s");
    static STRUCT_IF_C I_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu7i_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu7i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7i_BFu0s, I_BFu7i_BFu0s)
//============================================================================



static void Test_I_BFu7ll_BFu0c()
{
  {
    init_simple_test("I_BFu7ll_BFu0c");
    static STRUCT_IF_C I_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu7ll_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu7ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7ll_BFu0c, I_BFu7ll_BFu0c)
//============================================================================



static void Test_I_BFu7ll_BFu0i()
{
  {
    init_simple_test("I_BFu7ll_BFu0i");
    static STRUCT_IF_C I_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu7ll_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu7ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7ll_BFu0i, I_BFu7ll_BFu0i)
//============================================================================



static void Test_I_BFu7ll_BFu0ll()
{
  {
    init_simple_test("I_BFu7ll_BFu0ll");
    static STRUCT_IF_C I_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu7ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu7ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7ll_BFu0ll, I_BFu7ll_BFu0ll)
//============================================================================



static void Test_I_BFu7ll_BFu0s()
{
  {
    init_simple_test("I_BFu7ll_BFu0s");
    static STRUCT_IF_C I_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu7ll_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu7ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7ll_BFu0s, I_BFu7ll_BFu0s)
//============================================================================



static void Test_I_BFu7s_BFu0c()
{
  {
    init_simple_test("I_BFu7s_BFu0c");
    static STRUCT_IF_C I_BFu7s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu7s_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu7s_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7s_BFu0c, I_BFu7s_BFu0c)
//============================================================================



static void Test_I_BFu7s_BFu0i()
{
  {
    init_simple_test("I_BFu7s_BFu0i");
    static STRUCT_IF_C I_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu7s_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu7s_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7s_BFu0i, I_BFu7s_BFu0i)
//============================================================================



static void Test_I_BFu7s_BFu0ll()
{
  {
    init_simple_test("I_BFu7s_BFu0ll");
    static STRUCT_IF_C I_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu7s_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu7s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7s_BFu0ll, I_BFu7s_BFu0ll)
//============================================================================



static void Test_I_BFu7s_BFu0s()
{
  {
    init_simple_test("I_BFu7s_BFu0s");
    static STRUCT_IF_C I_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu7s_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu7s_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7s_BFu0s, I_BFu7s_BFu0s)
//============================================================================



static void Test_I_BFu8c_BFu0c()
{
  {
    init_simple_test("I_BFu8c_BFu0c");
    static STRUCT_IF_C I_BFu8c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu8c_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu8c_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8c_BFu0c, I_BFu8c_BFu0c)
//============================================================================



static void Test_I_BFu8c_BFu0i()
{
  {
    init_simple_test("I_BFu8c_BFu0i");
    static STRUCT_IF_C I_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu8c_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu8c_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8c_BFu0i, I_BFu8c_BFu0i)
//============================================================================



static void Test_I_BFu8c_BFu0ll()
{
  {
    init_simple_test("I_BFu8c_BFu0ll");
    static STRUCT_IF_C I_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu8c_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu8c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8c_BFu0ll, I_BFu8c_BFu0ll)
//============================================================================



static void Test_I_BFu8c_BFu0s()
{
  {
    init_simple_test("I_BFu8c_BFu0s");
    static STRUCT_IF_C I_BFu8c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu8c_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu8c_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8c_BFu0s, I_BFu8c_BFu0s)
//============================================================================



static void Test_I_BFu8i_BFu0c()
{
  {
    init_simple_test("I_BFu8i_BFu0c");
    static STRUCT_IF_C I_BFu8i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu8i_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu8i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8i_BFu0c, I_BFu8i_BFu0c)
//============================================================================



static void Test_I_BFu8i_BFu0i()
{
  {
    init_simple_test("I_BFu8i_BFu0i");
    static STRUCT_IF_C I_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu8i_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu8i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8i_BFu0i, I_BFu8i_BFu0i)
//============================================================================



static void Test_I_BFu8i_BFu0ll()
{
  {
    init_simple_test("I_BFu8i_BFu0ll");
    static STRUCT_IF_C I_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu8i_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu8i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8i_BFu0ll, I_BFu8i_BFu0ll)
//============================================================================



static void Test_I_BFu8i_BFu0s()
{
  {
    init_simple_test("I_BFu8i_BFu0s");
    static STRUCT_IF_C I_BFu8i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu8i_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu8i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8i_BFu0s, I_BFu8i_BFu0s)
//============================================================================



static void Test_I_BFu8ll_BFu0c()
{
  {
    init_simple_test("I_BFu8ll_BFu0c");
    static STRUCT_IF_C I_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu8ll_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu8ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8ll_BFu0c, I_BFu8ll_BFu0c)
//============================================================================



static void Test_I_BFu8ll_BFu0i()
{
  {
    init_simple_test("I_BFu8ll_BFu0i");
    static STRUCT_IF_C I_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu8ll_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu8ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8ll_BFu0i, I_BFu8ll_BFu0i)
//============================================================================



static void Test_I_BFu8ll_BFu0ll()
{
  {
    init_simple_test("I_BFu8ll_BFu0ll");
    static STRUCT_IF_C I_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu8ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu8ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8ll_BFu0ll, I_BFu8ll_BFu0ll)
//============================================================================



static void Test_I_BFu8ll_BFu0s()
{
  {
    init_simple_test("I_BFu8ll_BFu0s");
    static STRUCT_IF_C I_BFu8ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu8ll_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu8ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8ll_BFu0s, I_BFu8ll_BFu0s)
//============================================================================



static void Test_I_BFu8s_BFu0c()
{
  {
    init_simple_test("I_BFu8s_BFu0c");
    static STRUCT_IF_C I_BFu8s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu8s_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu8s_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8s_BFu0c, I_BFu8s_BFu0c)
//============================================================================



static void Test_I_BFu8s_BFu0i()
{
  {
    init_simple_test("I_BFu8s_BFu0i");
    static STRUCT_IF_C I_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu8s_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu8s_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8s_BFu0i, I_BFu8s_BFu0i)
//============================================================================



static void Test_I_BFu8s_BFu0ll()
{
  {
    init_simple_test("I_BFu8s_BFu0ll");
    static STRUCT_IF_C I_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu8s_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu8s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8s_BFu0ll, I_BFu8s_BFu0ll)
//============================================================================



static void Test_I_BFu8s_BFu0s()
{
  {
    init_simple_test("I_BFu8s_BFu0s");
    static STRUCT_IF_C I_BFu8s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu8s_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu8s_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8s_BFu0s, I_BFu8s_BFu0s)
//============================================================================



static void Test_I_BFu9i_BFu0c()
{
  {
    init_simple_test("I_BFu9i_BFu0c");
    static STRUCT_IF_C I_BFu9i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu9i_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu9i_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu9i_BFu0c, I_BFu9i_BFu0c)
//============================================================================



static void Test_I_BFu9i_BFu0i()
{
  {
    init_simple_test("I_BFu9i_BFu0i");
    static STRUCT_IF_C I_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu9i_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu9i_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu9i_BFu0i, I_BFu9i_BFu0i)
//============================================================================



static void Test_I_BFu9i_BFu0ll()
{
  {
    init_simple_test("I_BFu9i_BFu0ll");
    static STRUCT_IF_C I_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu9i_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu9i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu9i_BFu0ll, I_BFu9i_BFu0ll)
//============================================================================



static void Test_I_BFu9i_BFu0s()
{
  {
    init_simple_test("I_BFu9i_BFu0s");
    static STRUCT_IF_C I_BFu9i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu9i_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu9i_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu9i_BFu0s, I_BFu9i_BFu0s)
//============================================================================



static void Test_I_BFu9ll_BFu0c()
{
  {
    init_simple_test("I_BFu9ll_BFu0c");
    static STRUCT_IF_C I_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu9ll_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu9ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu9ll_BFu0c, I_BFu9ll_BFu0c)
//============================================================================



static void Test_I_BFu9ll_BFu0i()
{
  {
    init_simple_test("I_BFu9ll_BFu0i");
    static STRUCT_IF_C I_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu9ll_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu9ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu9ll_BFu0i, I_BFu9ll_BFu0i)
//============================================================================



static void Test_I_BFu9ll_BFu0ll()
{
  {
    init_simple_test("I_BFu9ll_BFu0ll");
    static STRUCT_IF_C I_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu9ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu9ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu9ll_BFu0ll, I_BFu9ll_BFu0ll)
//============================================================================



static void Test_I_BFu9ll_BFu0s()
{
  {
    init_simple_test("I_BFu9ll_BFu0s");
    static STRUCT_IF_C I_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu9ll_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu9ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu9ll_BFu0s, I_BFu9ll_BFu0s)
//============================================================================



static void Test_I_BFu9s_BFu0c()
{
  {
    init_simple_test("I_BFu9s_BFu0c");
    static STRUCT_IF_C I_BFu9s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu9s_BFu0c)");
    check_field_offset(lv, v1, 0, "I_BFu9s_BFu0c.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu9s_BFu0c, I_BFu9s_BFu0c)
//============================================================================



static void Test_I_BFu9s_BFu0i()
{
  {
    init_simple_test("I_BFu9s_BFu0i");
    static STRUCT_IF_C I_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu9s_BFu0i)");
    check_field_offset(lv, v1, 0, "I_BFu9s_BFu0i.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu9s_BFu0i, I_BFu9s_BFu0i)
//============================================================================



static void Test_I_BFu9s_BFu0ll()
{
  {
    init_simple_test("I_BFu9s_BFu0ll");
    static STRUCT_IF_C I_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu9s_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_BFu9s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu9s_BFu0ll, I_BFu9s_BFu0ll)
//============================================================================



static void Test_I_BFu9s_BFu0s()
{
  {
    init_simple_test("I_BFu9s_BFu0s");
    static STRUCT_IF_C I_BFu9s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_BFu9s_BFu0s)");
    check_field_offset(lv, v1, 0, "I_BFu9s_BFu0s.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu9s_BFu0s, I_BFu9s_BFu0s)
//============================================================================



static void Test_I_C_BFu0c()
{
  {
    init_simple_test("I_C_BFu0c");
    static STRUCT_IF_C I_C_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(I_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_C_BFu0c)");
    check_field_offset(lv, v1, 0, "I_C_BFu0c.v1");
    check_field_offset(lv, v2, 4, "I_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_C_BFu0c, I_C_BFu0c)
//============================================================================



static void Test_I_C_BFu0i()
{
  {
    init_simple_test("I_C_BFu0i");
    static STRUCT_IF_C I_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_C_BFu0i)");
    check_field_offset(lv, v1, 0, "I_C_BFu0i.v1");
    check_field_offset(lv, v2, 4, "I_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_C_BFu0i, I_C_BFu0i)
//============================================================================



static void Test_I_C_BFu0ll()
{
  {
    init_simple_test("I_C_BFu0ll");
    static STRUCT_IF_C I_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_C_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_C_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "I_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_C_BFu0ll, I_C_BFu0ll)
//============================================================================



static void Test_I_C_BFu0s()
{
  {
    init_simple_test("I_C_BFu0s");
    static STRUCT_IF_C I_C_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_C_BFu0s)");
    check_field_offset(lv, v1, 0, "I_C_BFu0s.v1");
    check_field_offset(lv, v2, 4, "I_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_C_BFu0s, I_C_BFu0s)
//============================================================================



static void Test_I_D_BFu0c()
{
  {
    init_simple_test("I_D_BFu0c");
    static STRUCT_IF_C I_D_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(I_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_D_BFu0c)");
    check_field_offset(lv, v1, 0, "I_D_BFu0c.v1");
    check_field_offset(lv, v2, 4, "I_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_D_BFu0c, I_D_BFu0c)
//============================================================================



static void Test_I_D_BFu0i()
{
  {
    init_simple_test("I_D_BFu0i");
    static STRUCT_IF_C I_D_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(I_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_D_BFu0i)");
    check_field_offset(lv, v1, 0, "I_D_BFu0i.v1");
    check_field_offset(lv, v2, 4, "I_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_D_BFu0i, I_D_BFu0i)
//============================================================================



static void Test_I_D_BFu0ll()
{
  {
    init_simple_test("I_D_BFu0ll");
    static STRUCT_IF_C I_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(I_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_D_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_D_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "I_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_D_BFu0ll, I_D_BFu0ll)
//============================================================================



static void Test_I_D_BFu0s()
{
  {
    init_simple_test("I_D_BFu0s");
    static STRUCT_IF_C I_D_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(I_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_D_BFu0s)");
    check_field_offset(lv, v1, 0, "I_D_BFu0s.v1");
    check_field_offset(lv, v2, 4, "I_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_D_BFu0s, I_D_BFu0s)
//============================================================================



static void Test_I_F_BFu0c()
{
  {
    init_simple_test("I_F_BFu0c");
    static STRUCT_IF_C I_F_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(I_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_F_BFu0c)");
    check_field_offset(lv, v1, 0, "I_F_BFu0c.v1");
    check_field_offset(lv, v2, 4, "I_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_F_BFu0c, I_F_BFu0c)
//============================================================================



static void Test_I_F_BFu0i()
{
  {
    init_simple_test("I_F_BFu0i");
    static STRUCT_IF_C I_F_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(I_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_F_BFu0i)");
    check_field_offset(lv, v1, 0, "I_F_BFu0i.v1");
    check_field_offset(lv, v2, 4, "I_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_F_BFu0i, I_F_BFu0i)
//============================================================================



static void Test_I_F_BFu0ll()
{
  {
    init_simple_test("I_F_BFu0ll");
    static STRUCT_IF_C I_F_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(I_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_F_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_F_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "I_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_F_BFu0ll, I_F_BFu0ll)
//============================================================================



static void Test_I_F_BFu0s()
{
  {
    init_simple_test("I_F_BFu0s");
    static STRUCT_IF_C I_F_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(I_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_F_BFu0s)");
    check_field_offset(lv, v1, 0, "I_F_BFu0s.v1");
    check_field_offset(lv, v2, 4, "I_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_F_BFu0s, I_F_BFu0s)
//============================================================================



static void Test_I_I_BFu0c()
{
  {
    init_simple_test("I_I_BFu0c");
    static STRUCT_IF_C I_I_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(I_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_I_BFu0c)");
    check_field_offset(lv, v1, 0, "I_I_BFu0c.v1");
    check_field_offset(lv, v2, 4, "I_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_I_BFu0c, I_I_BFu0c)
//============================================================================



static void Test_I_I_BFu0i()
{
  {
    init_simple_test("I_I_BFu0i");
    static STRUCT_IF_C I_I_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(I_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_I_BFu0i)");
    check_field_offset(lv, v1, 0, "I_I_BFu0i.v1");
    check_field_offset(lv, v2, 4, "I_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_I_BFu0i, I_I_BFu0i)
//============================================================================



static void Test_I_I_BFu0ll()
{
  {
    init_simple_test("I_I_BFu0ll");
    static STRUCT_IF_C I_I_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(I_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_I_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_I_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "I_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_I_BFu0ll, I_I_BFu0ll)
//============================================================================



static void Test_I_I_BFu0s()
{
  {
    init_simple_test("I_I_BFu0s");
    static STRUCT_IF_C I_I_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(I_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_I_BFu0s)");
    check_field_offset(lv, v1, 0, "I_I_BFu0s.v1");
    check_field_offset(lv, v2, 4, "I_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_I_BFu0s, I_I_BFu0s)
//============================================================================



static void Test_I_Ip_BFu0c()
{
  {
    init_simple_test("I_Ip_BFu0c");
    static STRUCT_IF_C I_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_Ip_BFu0c)");
    check_field_offset(lv, v1, 0, "I_Ip_BFu0c.v1");
    check_field_offset(lv, v2, 4, "I_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Ip_BFu0c, I_Ip_BFu0c)
//============================================================================



static void Test_I_Ip_BFu0i()
{
  {
    init_simple_test("I_Ip_BFu0i");
    static STRUCT_IF_C I_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Ip_BFu0i)");
    check_field_offset(lv, v1, 0, "I_Ip_BFu0i.v1");
    check_field_offset(lv, v2, 4, "I_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Ip_BFu0i, I_Ip_BFu0i)
//============================================================================



static void Test_I_Ip_BFu0ll()
{
  {
    init_simple_test("I_Ip_BFu0ll");
    static STRUCT_IF_C I_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(I_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Ip_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_Ip_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "I_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Ip_BFu0ll, I_Ip_BFu0ll)
//============================================================================



static void Test_I_Ip_BFu0s()
{
  {
    init_simple_test("I_Ip_BFu0s");
    static STRUCT_IF_C I_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Ip_BFu0s)");
    check_field_offset(lv, v1, 0, "I_Ip_BFu0s.v1");
    check_field_offset(lv, v2, 4, "I_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Ip_BFu0s, I_Ip_BFu0s)
//============================================================================



static void Test_I_L_BFu0c()
{
  {
    init_simple_test("I_L_BFu0c");
    static STRUCT_IF_C I_L_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(I_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_L_BFu0c)");
    check_field_offset(lv, v1, 0, "I_L_BFu0c.v1");
    check_field_offset(lv, v2, 4, "I_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_L_BFu0c, I_L_BFu0c)
//============================================================================



static void Test_I_L_BFu0i()
{
  {
    init_simple_test("I_L_BFu0i");
    static STRUCT_IF_C I_L_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(I_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_L_BFu0i)");
    check_field_offset(lv, v1, 0, "I_L_BFu0i.v1");
    check_field_offset(lv, v2, 4, "I_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_L_BFu0i, I_L_BFu0i)
//============================================================================



static void Test_I_L_BFu0ll()
{
  {
    init_simple_test("I_L_BFu0ll");
    static STRUCT_IF_C I_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(I_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_L_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_L_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "I_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_L_BFu0ll, I_L_BFu0ll)
//============================================================================



static void Test_I_L_BFu0s()
{
  {
    init_simple_test("I_L_BFu0s");
    static STRUCT_IF_C I_L_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(I_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_L_BFu0s)");
    check_field_offset(lv, v1, 0, "I_L_BFu0s.v1");
    check_field_offset(lv, v2, 4, "I_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_L_BFu0s, I_L_BFu0s)
//============================================================================



static void Test_I_S_BFu0c()
{
  {
    init_simple_test("I_S_BFu0c");
    static STRUCT_IF_C I_S_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(I_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_S_BFu0c)");
    check_field_offset(lv, v1, 0, "I_S_BFu0c.v1");
    check_field_offset(lv, v2, 4, "I_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_S_BFu0c, I_S_BFu0c)
//============================================================================



static void Test_I_S_BFu0i()
{
  {
    init_simple_test("I_S_BFu0i");
    static STRUCT_IF_C I_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_S_BFu0i)");
    check_field_offset(lv, v1, 0, "I_S_BFu0i.v1");
    check_field_offset(lv, v2, 4, "I_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_S_BFu0i, I_S_BFu0i)
//============================================================================



static void Test_I_S_BFu0ll()
{
  {
    init_simple_test("I_S_BFu0ll");
    static STRUCT_IF_C I_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_S_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_S_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "I_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_S_BFu0ll, I_S_BFu0ll)
//============================================================================



static void Test_I_S_BFu0s()
{
  {
    init_simple_test("I_S_BFu0s");
    static STRUCT_IF_C I_S_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(I_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_S_BFu0s)");
    check_field_offset(lv, v1, 0, "I_S_BFu0s.v1");
    check_field_offset(lv, v2, 4, "I_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_S_BFu0s, I_S_BFu0s)
//============================================================================



static void Test_I_Uc_BFu0c()
{
  {
    init_simple_test("I_Uc_BFu0c");
    static STRUCT_IF_C I_Uc_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(I_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_Uc_BFu0c)");
    check_field_offset(lv, v1, 0, "I_Uc_BFu0c.v1");
    check_field_offset(lv, v2, 4, "I_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Uc_BFu0c, I_Uc_BFu0c)
//============================================================================



static void Test_I_Uc_BFu0i()
{
  {
    init_simple_test("I_Uc_BFu0i");
    static STRUCT_IF_C I_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Uc_BFu0i)");
    check_field_offset(lv, v1, 0, "I_Uc_BFu0i.v1");
    check_field_offset(lv, v2, 4, "I_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Uc_BFu0i, I_Uc_BFu0i)
//============================================================================



static void Test_I_Uc_BFu0ll()
{
  {
    init_simple_test("I_Uc_BFu0ll");
    static STRUCT_IF_C I_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Uc_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_Uc_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "I_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Uc_BFu0ll, I_Uc_BFu0ll)
//============================================================================



static void Test_I_Uc_BFu0s()
{
  {
    init_simple_test("I_Uc_BFu0s");
    static STRUCT_IF_C I_Uc_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(I_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Uc_BFu0s)");
    check_field_offset(lv, v1, 0, "I_Uc_BFu0s.v1");
    check_field_offset(lv, v2, 4, "I_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Uc_BFu0s, I_Uc_BFu0s)
//============================================================================



static void Test_I_Ui_BFu0c()
{
  {
    init_simple_test("I_Ui_BFu0c");
    static STRUCT_IF_C I_Ui_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(I_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_Ui_BFu0c)");
    check_field_offset(lv, v1, 0, "I_Ui_BFu0c.v1");
    check_field_offset(lv, v2, 4, "I_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Ui_BFu0c, I_Ui_BFu0c)
//============================================================================



static void Test_I_Ui_BFu0i()
{
  {
    init_simple_test("I_Ui_BFu0i");
    static STRUCT_IF_C I_Ui_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(I_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Ui_BFu0i)");
    check_field_offset(lv, v1, 0, "I_Ui_BFu0i.v1");
    check_field_offset(lv, v2, 4, "I_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Ui_BFu0i, I_Ui_BFu0i)
//============================================================================



static void Test_I_Ui_BFu0ll()
{
  {
    init_simple_test("I_Ui_BFu0ll");
    static STRUCT_IF_C I_Ui_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(I_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Ui_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_Ui_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "I_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Ui_BFu0ll, I_Ui_BFu0ll)
//============================================================================



static void Test_I_Ui_BFu0s()
{
  {
    init_simple_test("I_Ui_BFu0s");
    static STRUCT_IF_C I_Ui_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(I_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Ui_BFu0s)");
    check_field_offset(lv, v1, 0, "I_Ui_BFu0s.v1");
    check_field_offset(lv, v2, 4, "I_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Ui_BFu0s, I_Ui_BFu0s)
//============================================================================



static void Test_I_Ul_BFu0c()
{
  {
    init_simple_test("I_Ul_BFu0c");
    static STRUCT_IF_C I_Ul_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(I_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_Ul_BFu0c)");
    check_field_offset(lv, v1, 0, "I_Ul_BFu0c.v1");
    check_field_offset(lv, v2, 4, "I_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Ul_BFu0c, I_Ul_BFu0c)
//============================================================================



static void Test_I_Ul_BFu0i()
{
  {
    init_simple_test("I_Ul_BFu0i");
    static STRUCT_IF_C I_Ul_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(I_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Ul_BFu0i)");
    check_field_offset(lv, v1, 0, "I_Ul_BFu0i.v1");
    check_field_offset(lv, v2, 4, "I_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Ul_BFu0i, I_Ul_BFu0i)
//============================================================================



static void Test_I_Ul_BFu0ll()
{
  {
    init_simple_test("I_Ul_BFu0ll");
    static STRUCT_IF_C I_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(I_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Ul_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_Ul_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "I_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Ul_BFu0ll, I_Ul_BFu0ll)
//============================================================================



static void Test_I_Ul_BFu0s()
{
  {
    init_simple_test("I_Ul_BFu0s");
    static STRUCT_IF_C I_Ul_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(I_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Ul_BFu0s)");
    check_field_offset(lv, v1, 0, "I_Ul_BFu0s.v1");
    check_field_offset(lv, v2, 4, "I_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Ul_BFu0s, I_Ul_BFu0s)
//============================================================================



static void Test_I_Us_BFu0c()
{
  {
    init_simple_test("I_Us_BFu0c");
    static STRUCT_IF_C I_Us_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(I_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_Us_BFu0c)");
    check_field_offset(lv, v1, 0, "I_Us_BFu0c.v1");
    check_field_offset(lv, v2, 4, "I_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Us_BFu0c, I_Us_BFu0c)
//============================================================================



static void Test_I_Us_BFu0i()
{
  {
    init_simple_test("I_Us_BFu0i");
    static STRUCT_IF_C I_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Us_BFu0i)");
    check_field_offset(lv, v1, 0, "I_Us_BFu0i.v1");
    check_field_offset(lv, v2, 4, "I_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Us_BFu0i, I_Us_BFu0i)
//============================================================================



static void Test_I_Us_BFu0ll()
{
  {
    init_simple_test("I_Us_BFu0ll");
    static STRUCT_IF_C I_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(I_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Us_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_Us_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "I_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Us_BFu0ll, I_Us_BFu0ll)
//============================================================================



static void Test_I_Us_BFu0s()
{
  {
    init_simple_test("I_Us_BFu0s");
    static STRUCT_IF_C I_Us_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(I_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Us_BFu0s)");
    check_field_offset(lv, v1, 0, "I_Us_BFu0s.v1");
    check_field_offset(lv, v2, 4, "I_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Us_BFu0s, I_Us_BFu0s)
//============================================================================



static void Test_I_Vp_BFu0c()
{
  {
    init_simple_test("I_Vp_BFu0c");
    static STRUCT_IF_C I_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(I_Vp_BFu0c)");
    check_field_offset(lv, v1, 0, "I_Vp_BFu0c.v1");
    check_field_offset(lv, v2, 4, "I_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Vp_BFu0c, I_Vp_BFu0c)
//============================================================================



static void Test_I_Vp_BFu0i()
{
  {
    init_simple_test("I_Vp_BFu0i");
    static STRUCT_IF_C I_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Vp_BFu0i)");
    check_field_offset(lv, v1, 0, "I_Vp_BFu0i.v1");
    check_field_offset(lv, v2, 4, "I_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Vp_BFu0i, I_Vp_BFu0i)
//============================================================================



static void Test_I_Vp_BFu0ll()
{
  {
    init_simple_test("I_Vp_BFu0ll");
    static STRUCT_IF_C I_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(I_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Vp_BFu0ll)");
    check_field_offset(lv, v1, 0, "I_Vp_BFu0ll.v1");
    check_field_offset(lv, v2, 4, "I_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Vp_BFu0ll, I_Vp_BFu0ll)
//============================================================================



static void Test_I_Vp_BFu0s()
{
  {
    init_simple_test("I_Vp_BFu0s");
    static STRUCT_IF_C I_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(I_Vp_BFu0s)");
    check_field_offset(lv, v1, 0, "I_Vp_BFu0s.v1");
    check_field_offset(lv, v2, 4, "I_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Vp_BFu0s, I_Vp_BFu0s)
//============================================================================



static void Test_Ip_BFu0c()
{
  {
    init_simple_test("Ip_BFu0c");
    static STRUCT_IF_C Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c, Ip_BFu0c)
//============================================================================



static void Test_Ip_BFu0c_BFu0c()
{
  {
    init_simple_test("Ip_BFu0c_BFu0c");
    static STRUCT_IF_C Ip_BFu0c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu0c, Ip_BFu0c_BFu0c)
//============================================================================



static void Test_Ip_BFu0c_BFu0i()
{
  {
    init_simple_test("Ip_BFu0c_BFu0i");
    static STRUCT_IF_C Ip_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0c_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu0i, Ip_BFu0c_BFu0i)
//============================================================================



static void Test_Ip_BFu0c_BFu0ll()
{
  {
    init_simple_test("Ip_BFu0c_BFu0ll");
    static STRUCT_IF_C Ip_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0c_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu0ll, Ip_BFu0c_BFu0ll)
//============================================================================



static void Test_Ip_BFu0c_BFu0s()
{
  {
    init_simple_test("Ip_BFu0c_BFu0s");
    static STRUCT_IF_C Ip_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0c_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu0s, Ip_BFu0c_BFu0s)
//============================================================================



static void Test_Ip_BFu0c_BFu15i()
{
  {
    init_simple_test("Ip_BFu0c_BFu15i");
    static STRUCT_IF_C Ip_BFu0c_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu15i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu15i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu15i, Ip_BFu0c_BFu15i)
//============================================================================



static void Test_Ip_BFu0c_BFu15ll()
{
  {
    init_simple_test("Ip_BFu0c_BFu15ll");
    static STRUCT_IF_C Ip_BFu0c_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu15ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu15ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu15ll, Ip_BFu0c_BFu15ll)
//============================================================================



static void Test_Ip_BFu0c_BFu15s()
{
  {
    init_simple_test("Ip_BFu0c_BFu15s");
    static STRUCT_IF_C Ip_BFu0c_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu15s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu15s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu15s, Ip_BFu0c_BFu15s)
//============================================================================



static void Test_Ip_BFu0c_BFu16i()
{
  {
    init_simple_test("Ip_BFu0c_BFu16i");
    static STRUCT_IF_C Ip_BFu0c_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu16i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu16i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu16i, Ip_BFu0c_BFu16i)
//============================================================================



static void Test_Ip_BFu0c_BFu16ll()
{
  {
    init_simple_test("Ip_BFu0c_BFu16ll");
    static STRUCT_IF_C Ip_BFu0c_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu16ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu16ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu16ll, Ip_BFu0c_BFu16ll)
//============================================================================



static void Test_Ip_BFu0c_BFu16s()
{
  {
    init_simple_test("Ip_BFu0c_BFu16s");
    static STRUCT_IF_C Ip_BFu0c_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu16s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu16s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu16s, Ip_BFu0c_BFu16s)
//============================================================================



static void Test_Ip_BFu0c_BFu17i()
{
  {
    init_simple_test("Ip_BFu0c_BFu17i");
    static STRUCT_IF_C Ip_BFu0c_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Ip_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu17i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu17i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu17i, Ip_BFu0c_BFu17i)
//============================================================================



static void Test_Ip_BFu0c_BFu17ll()
{
  {
    init_simple_test("Ip_BFu0c_BFu17ll");
    static STRUCT_IF_C Ip_BFu0c_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Ip_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu17ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu17ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu17ll, Ip_BFu0c_BFu17ll)
//============================================================================



static void Test_Ip_BFu0c_BFu1c()
{
  {
    init_simple_test("Ip_BFu0c_BFu1c");
    static STRUCT_IF_C Ip_BFu0c_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu1c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu1c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu1c, Ip_BFu0c_BFu1c)
//============================================================================



static void Test_Ip_BFu0c_BFu1i()
{
  {
    init_simple_test("Ip_BFu0c_BFu1i");
    static STRUCT_IF_C Ip_BFu0c_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu1i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu1i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu1i, Ip_BFu0c_BFu1i)
//============================================================================



static void Test_Ip_BFu0c_BFu1ll()
{
  {
    init_simple_test("Ip_BFu0c_BFu1ll");
    static STRUCT_IF_C Ip_BFu0c_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu1ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu1ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu1ll, Ip_BFu0c_BFu1ll)
//============================================================================



static void Test_Ip_BFu0c_BFu1s()
{
  {
    init_simple_test("Ip_BFu0c_BFu1s");
    static STRUCT_IF_C Ip_BFu0c_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu1s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu1s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu1s, Ip_BFu0c_BFu1s)
//============================================================================



static void Test_Ip_BFu0c_BFu31i()
{
  {
    init_simple_test("Ip_BFu0c_BFu31i");
    static STRUCT_IF_C Ip_BFu0c_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu31i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu31i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu31i, Ip_BFu0c_BFu31i)
//============================================================================



static void Test_Ip_BFu0c_BFu31ll()
{
  {
    init_simple_test("Ip_BFu0c_BFu31ll");
    static STRUCT_IF_C Ip_BFu0c_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu31ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu31ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu31ll, Ip_BFu0c_BFu31ll)
//============================================================================



static void Test_Ip_BFu0c_BFu32i()
{
  {
    init_simple_test("Ip_BFu0c_BFu32i");
    static STRUCT_IF_C Ip_BFu0c_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu32i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu32i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu32i, Ip_BFu0c_BFu32i)
//============================================================================



static void Test_Ip_BFu0c_BFu32ll()
{
  {
    init_simple_test("Ip_BFu0c_BFu32ll");
    static STRUCT_IF_C Ip_BFu0c_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu32ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu32ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu32ll, Ip_BFu0c_BFu32ll)
//============================================================================



static void Test_Ip_BFu0c_BFu33()
{
  {
    init_simple_test("Ip_BFu0c_BFu33");
    static STRUCT_IF_C Ip_BFu0c_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(Ip_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu33)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu33.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "Ip_BFu0c_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "Ip_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu33, Ip_BFu0c_BFu33)
//============================================================================



static void Test_Ip_BFu0c_BFu7c()
{
  {
    init_simple_test("Ip_BFu0c_BFu7c");
    static STRUCT_IF_C Ip_BFu0c_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu7c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu7c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu7c, Ip_BFu0c_BFu7c)
//============================================================================



static void Test_Ip_BFu0c_BFu7i()
{
  {
    init_simple_test("Ip_BFu0c_BFu7i");
    static STRUCT_IF_C Ip_BFu0c_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu7i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu7i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu7i, Ip_BFu0c_BFu7i)
//============================================================================



static void Test_Ip_BFu0c_BFu7ll()
{
  {
    init_simple_test("Ip_BFu0c_BFu7ll");
    static STRUCT_IF_C Ip_BFu0c_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu7ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu7ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu7ll, Ip_BFu0c_BFu7ll)
//============================================================================



static void Test_Ip_BFu0c_BFu7s()
{
  {
    init_simple_test("Ip_BFu0c_BFu7s");
    static STRUCT_IF_C Ip_BFu0c_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu7s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu7s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu7s, Ip_BFu0c_BFu7s)
//============================================================================



static void Test_Ip_BFu0c_BFu8c()
{
  {
    init_simple_test("Ip_BFu0c_BFu8c");
    static STRUCT_IF_C Ip_BFu0c_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu8c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu8c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu8c, Ip_BFu0c_BFu8c)
//============================================================================



static void Test_Ip_BFu0c_BFu8i()
{
  {
    init_simple_test("Ip_BFu0c_BFu8i");
    static STRUCT_IF_C Ip_BFu0c_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu8i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu8i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu8i, Ip_BFu0c_BFu8i)
//============================================================================



static void Test_Ip_BFu0c_BFu8ll()
{
  {
    init_simple_test("Ip_BFu0c_BFu8ll");
    static STRUCT_IF_C Ip_BFu0c_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu8ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu8ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu8ll, Ip_BFu0c_BFu8ll)
//============================================================================



static void Test_Ip_BFu0c_BFu8s()
{
  {
    init_simple_test("Ip_BFu0c_BFu8s");
    static STRUCT_IF_C Ip_BFu0c_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu8s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu8s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu8s, Ip_BFu0c_BFu8s)
//============================================================================



static void Test_Ip_BFu0c_BFu9i()
{
  {
    init_simple_test("Ip_BFu0c_BFu9i");
    static STRUCT_IF_C Ip_BFu0c_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu9i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu9i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu9i, Ip_BFu0c_BFu9i)
//============================================================================



static void Test_Ip_BFu0c_BFu9ll()
{
  {
    init_simple_test("Ip_BFu0c_BFu9ll");
    static STRUCT_IF_C Ip_BFu0c_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu9ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu9ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu9ll, Ip_BFu0c_BFu9ll)
//============================================================================



static void Test_Ip_BFu0c_BFu9s()
{
  {
    init_simple_test("Ip_BFu0c_BFu9s");
    static STRUCT_IF_C Ip_BFu0c_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_BFu9s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_BFu9s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_BFu9s, Ip_BFu0c_BFu9s)
//============================================================================



static void Test_Ip_BFu0c_C()
{
  {
    init_simple_test("Ip_BFu0c_C");
    static STRUCT_IF_C Ip_BFu0c_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_C)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_C.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_C, Ip_BFu0c_C)
//============================================================================



static void Test_Ip_BFu0c_D()
{
  {
    init_simple_test("Ip_BFu0c_D");
    static STRUCT_IF_C Ip_BFu0c_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_D)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_D.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_D, Ip_BFu0c_D)
//============================================================================



static void Test_Ip_BFu0c_F()
{
  {
    init_simple_test("Ip_BFu0c_F");
    static STRUCT_IF_C Ip_BFu0c_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_F)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_F.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_F, Ip_BFu0c_F)
//============================================================================



static void Test_Ip_BFu0c_I()
{
  {
    init_simple_test("Ip_BFu0c_I");
    static STRUCT_IF_C Ip_BFu0c_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_I)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_I.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_I, Ip_BFu0c_I)
//============================================================================



static void Test_Ip_BFu0c_Ip()
{
  {
    init_simple_test("Ip_BFu0c_Ip");
    static STRUCT_IF_C Ip_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_Ip)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_Ip, Ip_BFu0c_Ip)
//============================================================================



static void Test_Ip_BFu0c_L()
{
  {
    init_simple_test("Ip_BFu0c_L");
    static STRUCT_IF_C Ip_BFu0c_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_L)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_L.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_L, Ip_BFu0c_L)
//============================================================================



static void Test_Ip_BFu0c_S()
{
  {
    init_simple_test("Ip_BFu0c_S");
    static STRUCT_IF_C Ip_BFu0c_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_S)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_S.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_S, Ip_BFu0c_S)
//============================================================================



static void Test_Ip_BFu0c_Uc()
{
  {
    init_simple_test("Ip_BFu0c_Uc");
    static STRUCT_IF_C Ip_BFu0c_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_Uc)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_Uc, Ip_BFu0c_Uc)
//============================================================================



static void Test_Ip_BFu0c_Ui()
{
  {
    init_simple_test("Ip_BFu0c_Ui");
    static STRUCT_IF_C Ip_BFu0c_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_Ui)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_Ui, Ip_BFu0c_Ui)
//============================================================================



static void Test_Ip_BFu0c_Ul()
{
  {
    init_simple_test("Ip_BFu0c_Ul");
    static STRUCT_IF_C Ip_BFu0c_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_Ul)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_Ul, Ip_BFu0c_Ul)
//============================================================================



static void Test_Ip_BFu0c_Us()
{
  {
    init_simple_test("Ip_BFu0c_Us");
    static STRUCT_IF_C Ip_BFu0c_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_Us)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_Us.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_Us, Ip_BFu0c_Us)
//============================================================================



static void Test_Ip_BFu0c_Vp()
{
  {
    init_simple_test("Ip_BFu0c_Vp");
    static STRUCT_IF_C Ip_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu0c_Vp)");
    check_field_offset(lv, v1, 0, "Ip_BFu0c_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0c_Vp, Ip_BFu0c_Vp)
//============================================================================



static void Test_Ip_BFu0i()
{
  {
    init_simple_test("Ip_BFu0i");
    static STRUCT_IF_C Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i, Ip_BFu0i)
//============================================================================



static void Test_Ip_BFu0i_BFu0c()
{
  {
    init_simple_test("Ip_BFu0i_BFu0c");
    static STRUCT_IF_C Ip_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu0c, Ip_BFu0i_BFu0c)
//============================================================================



static void Test_Ip_BFu0i_BFu0i()
{
  {
    init_simple_test("Ip_BFu0i_BFu0i");
    static STRUCT_IF_C Ip_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu0i, Ip_BFu0i_BFu0i)
//============================================================================



static void Test_Ip_BFu0i_BFu0ll()
{
  {
    init_simple_test("Ip_BFu0i_BFu0ll");
    static STRUCT_IF_C Ip_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu0ll, Ip_BFu0i_BFu0ll)
//============================================================================



static void Test_Ip_BFu0i_BFu0s()
{
  {
    init_simple_test("Ip_BFu0i_BFu0s");
    static STRUCT_IF_C Ip_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu0s, Ip_BFu0i_BFu0s)
//============================================================================



static void Test_Ip_BFu0i_BFu15i()
{
  {
    init_simple_test("Ip_BFu0i_BFu15i");
    static STRUCT_IF_C Ip_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu15i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu15i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu15i, Ip_BFu0i_BFu15i)
//============================================================================



static void Test_Ip_BFu0i_BFu15ll()
{
  {
    init_simple_test("Ip_BFu0i_BFu15ll");
    static STRUCT_IF_C Ip_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu15ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu15ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu15ll, Ip_BFu0i_BFu15ll)
//============================================================================



static void Test_Ip_BFu0i_BFu15s()
{
  {
    init_simple_test("Ip_BFu0i_BFu15s");
    static STRUCT_IF_C Ip_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu15s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu15s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu15s, Ip_BFu0i_BFu15s)
//============================================================================



static void Test_Ip_BFu0i_BFu16i()
{
  {
    init_simple_test("Ip_BFu0i_BFu16i");
    static STRUCT_IF_C Ip_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu16i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu16i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu16i, Ip_BFu0i_BFu16i)
//============================================================================



static void Test_Ip_BFu0i_BFu16ll()
{
  {
    init_simple_test("Ip_BFu0i_BFu16ll");
    static STRUCT_IF_C Ip_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu16ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu16ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu16ll, Ip_BFu0i_BFu16ll)
//============================================================================



static void Test_Ip_BFu0i_BFu16s()
{
  {
    init_simple_test("Ip_BFu0i_BFu16s");
    static STRUCT_IF_C Ip_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu16s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu16s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu16s, Ip_BFu0i_BFu16s)
//============================================================================



static void Test_Ip_BFu0i_BFu17i()
{
  {
    init_simple_test("Ip_BFu0i_BFu17i");
    static STRUCT_IF_C Ip_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Ip_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu17i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu17i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu17i, Ip_BFu0i_BFu17i)
//============================================================================



static void Test_Ip_BFu0i_BFu17ll()
{
  {
    init_simple_test("Ip_BFu0i_BFu17ll");
    static STRUCT_IF_C Ip_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Ip_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu17ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu17ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu17ll, Ip_BFu0i_BFu17ll)
//============================================================================



static void Test_Ip_BFu0i_BFu1c()
{
  {
    init_simple_test("Ip_BFu0i_BFu1c");
    static STRUCT_IF_C Ip_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu1c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu1c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu1c, Ip_BFu0i_BFu1c)
//============================================================================



static void Test_Ip_BFu0i_BFu1i()
{
  {
    init_simple_test("Ip_BFu0i_BFu1i");
    static STRUCT_IF_C Ip_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu1i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu1i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu1i, Ip_BFu0i_BFu1i)
//============================================================================



static void Test_Ip_BFu0i_BFu1ll()
{
  {
    init_simple_test("Ip_BFu0i_BFu1ll");
    static STRUCT_IF_C Ip_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu1ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu1ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu1ll, Ip_BFu0i_BFu1ll)
//============================================================================



static void Test_Ip_BFu0i_BFu1s()
{
  {
    init_simple_test("Ip_BFu0i_BFu1s");
    static STRUCT_IF_C Ip_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu1s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu1s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu1s, Ip_BFu0i_BFu1s)
//============================================================================



static void Test_Ip_BFu0i_BFu31i()
{
  {
    init_simple_test("Ip_BFu0i_BFu31i");
    static STRUCT_IF_C Ip_BFu0i_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu31i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu31i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu31i, Ip_BFu0i_BFu31i)
//============================================================================



static void Test_Ip_BFu0i_BFu31ll()
{
  {
    init_simple_test("Ip_BFu0i_BFu31ll");
    static STRUCT_IF_C Ip_BFu0i_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu31ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu31ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu31ll, Ip_BFu0i_BFu31ll)
//============================================================================



static void Test_Ip_BFu0i_BFu32i()
{
  {
    init_simple_test("Ip_BFu0i_BFu32i");
    static STRUCT_IF_C Ip_BFu0i_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu32i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu32i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu32i, Ip_BFu0i_BFu32i)
//============================================================================



static void Test_Ip_BFu0i_BFu32ll()
{
  {
    init_simple_test("Ip_BFu0i_BFu32ll");
    static STRUCT_IF_C Ip_BFu0i_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu32ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu32ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu32ll, Ip_BFu0i_BFu32ll)
//============================================================================



static void Test_Ip_BFu0i_BFu33()
{
  {
    init_simple_test("Ip_BFu0i_BFu33");
    static STRUCT_IF_C Ip_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(Ip_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu33)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu33.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "Ip_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "Ip_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu33, Ip_BFu0i_BFu33)
//============================================================================



static void Test_Ip_BFu0i_BFu7c()
{
  {
    init_simple_test("Ip_BFu0i_BFu7c");
    static STRUCT_IF_C Ip_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu7c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu7c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu7c, Ip_BFu0i_BFu7c)
//============================================================================



static void Test_Ip_BFu0i_BFu7i()
{
  {
    init_simple_test("Ip_BFu0i_BFu7i");
    static STRUCT_IF_C Ip_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu7i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu7i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu7i, Ip_BFu0i_BFu7i)
//============================================================================



static void Test_Ip_BFu0i_BFu7ll()
{
  {
    init_simple_test("Ip_BFu0i_BFu7ll");
    static STRUCT_IF_C Ip_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu7ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu7ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu7ll, Ip_BFu0i_BFu7ll)
//============================================================================



static void Test_Ip_BFu0i_BFu7s()
{
  {
    init_simple_test("Ip_BFu0i_BFu7s");
    static STRUCT_IF_C Ip_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu7s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu7s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu7s, Ip_BFu0i_BFu7s)
//============================================================================



static void Test_Ip_BFu0i_BFu8c()
{
  {
    init_simple_test("Ip_BFu0i_BFu8c");
    static STRUCT_IF_C Ip_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu8c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu8c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu8c, Ip_BFu0i_BFu8c)
//============================================================================



static void Test_Ip_BFu0i_BFu8i()
{
  {
    init_simple_test("Ip_BFu0i_BFu8i");
    static STRUCT_IF_C Ip_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu8i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu8i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu8i, Ip_BFu0i_BFu8i)
//============================================================================



static void Test_Ip_BFu0i_BFu8ll()
{
  {
    init_simple_test("Ip_BFu0i_BFu8ll");
    static STRUCT_IF_C Ip_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu8ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu8ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu8ll, Ip_BFu0i_BFu8ll)
//============================================================================



static void Test_Ip_BFu0i_BFu8s()
{
  {
    init_simple_test("Ip_BFu0i_BFu8s");
    static STRUCT_IF_C Ip_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu8s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu8s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu8s, Ip_BFu0i_BFu8s)
//============================================================================



static void Test_Ip_BFu0i_BFu9i()
{
  {
    init_simple_test("Ip_BFu0i_BFu9i");
    static STRUCT_IF_C Ip_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu9i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu9i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu9i, Ip_BFu0i_BFu9i)
//============================================================================



static void Test_Ip_BFu0i_BFu9ll()
{
  {
    init_simple_test("Ip_BFu0i_BFu9ll");
    static STRUCT_IF_C Ip_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu9ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu9ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu9ll, Ip_BFu0i_BFu9ll)
//============================================================================



static void Test_Ip_BFu0i_BFu9s()
{
  {
    init_simple_test("Ip_BFu0i_BFu9s");
    static STRUCT_IF_C Ip_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_BFu9s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_BFu9s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_BFu9s, Ip_BFu0i_BFu9s)
//============================================================================



static void Test_Ip_BFu0i_C()
{
  {
    init_simple_test("Ip_BFu0i_C");
    static STRUCT_IF_C Ip_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_C)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_C.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_C, Ip_BFu0i_C)
//============================================================================



static void Test_Ip_BFu0i_D()
{
  {
    init_simple_test("Ip_BFu0i_D");
    static STRUCT_IF_C Ip_BFu0i_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_D)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_D.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_D, Ip_BFu0i_D)
//============================================================================



static void Test_Ip_BFu0i_F()
{
  {
    init_simple_test("Ip_BFu0i_F");
    static STRUCT_IF_C Ip_BFu0i_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_F)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_F.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_F, Ip_BFu0i_F)
//============================================================================



static void Test_Ip_BFu0i_I()
{
  {
    init_simple_test("Ip_BFu0i_I");
    static STRUCT_IF_C Ip_BFu0i_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_I)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_I.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_I, Ip_BFu0i_I)
//============================================================================



static void Test_Ip_BFu0i_Ip()
{
  {
    init_simple_test("Ip_BFu0i_Ip");
    static STRUCT_IF_C Ip_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_Ip)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_Ip, Ip_BFu0i_Ip)
//============================================================================



static void Test_Ip_BFu0i_L()
{
  {
    init_simple_test("Ip_BFu0i_L");
    static STRUCT_IF_C Ip_BFu0i_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_L)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_L.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_L, Ip_BFu0i_L)
//============================================================================



static void Test_Ip_BFu0i_S()
{
  {
    init_simple_test("Ip_BFu0i_S");
    static STRUCT_IF_C Ip_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_S)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_S.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_S, Ip_BFu0i_S)
//============================================================================



static void Test_Ip_BFu0i_Uc()
{
  {
    init_simple_test("Ip_BFu0i_Uc");
    static STRUCT_IF_C Ip_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_Uc)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_Uc, Ip_BFu0i_Uc)
//============================================================================



static void Test_Ip_BFu0i_Ui()
{
  {
    init_simple_test("Ip_BFu0i_Ui");
    static STRUCT_IF_C Ip_BFu0i_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_Ui)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_Ui, Ip_BFu0i_Ui)
//============================================================================



static void Test_Ip_BFu0i_Ul()
{
  {
    init_simple_test("Ip_BFu0i_Ul");
    static STRUCT_IF_C Ip_BFu0i_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_Ul)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_Ul, Ip_BFu0i_Ul)
//============================================================================



static void Test_Ip_BFu0i_Us()
{
  {
    init_simple_test("Ip_BFu0i_Us");
    static STRUCT_IF_C Ip_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_Us)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_Us.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_Us, Ip_BFu0i_Us)
//============================================================================



static void Test_Ip_BFu0i_Vp()
{
  {
    init_simple_test("Ip_BFu0i_Vp");
    static STRUCT_IF_C Ip_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0i_Vp)");
    check_field_offset(lv, v1, 0, "Ip_BFu0i_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0i_Vp, Ip_BFu0i_Vp)
//============================================================================



static void Test_Ip_BFu0ll()
{
  {
    init_simple_test("Ip_BFu0ll");
    static STRUCT_IF_C Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll, Ip_BFu0ll)
//============================================================================



static void Test_Ip_BFu0ll_BFu0c()
{
  {
    init_simple_test("Ip_BFu0ll_BFu0c");
    static STRUCT_IF_C Ip_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu0c, Ip_BFu0ll_BFu0c)
//============================================================================



static void Test_Ip_BFu0ll_BFu0i()
{
  {
    init_simple_test("Ip_BFu0ll_BFu0i");
    static STRUCT_IF_C Ip_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu0i, Ip_BFu0ll_BFu0i)
//============================================================================



static void Test_Ip_BFu0ll_BFu0ll()
{
  {
    init_simple_test("Ip_BFu0ll_BFu0ll");
    static STRUCT_IF_C Ip_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu0ll, Ip_BFu0ll_BFu0ll)
//============================================================================



static void Test_Ip_BFu0ll_BFu0s()
{
  {
    init_simple_test("Ip_BFu0ll_BFu0s");
    static STRUCT_IF_C Ip_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu0s, Ip_BFu0ll_BFu0s)
//============================================================================



static void Test_Ip_BFu0ll_BFu15i()
{
  {
    init_simple_test("Ip_BFu0ll_BFu15i");
    static STRUCT_IF_C Ip_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu15i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu15i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu15i, Ip_BFu0ll_BFu15i)
//============================================================================



static void Test_Ip_BFu0ll_BFu15ll()
{
  {
    init_simple_test("Ip_BFu0ll_BFu15ll");
    static STRUCT_IF_C Ip_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu15ll, Ip_BFu0ll_BFu15ll)
//============================================================================



static void Test_Ip_BFu0ll_BFu15s()
{
  {
    init_simple_test("Ip_BFu0ll_BFu15s");
    static STRUCT_IF_C Ip_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu15s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu15s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu15s, Ip_BFu0ll_BFu15s)
//============================================================================



static void Test_Ip_BFu0ll_BFu16i()
{
  {
    init_simple_test("Ip_BFu0ll_BFu16i");
    static STRUCT_IF_C Ip_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu16i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu16i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu16i, Ip_BFu0ll_BFu16i)
//============================================================================



static void Test_Ip_BFu0ll_BFu16ll()
{
  {
    init_simple_test("Ip_BFu0ll_BFu16ll");
    static STRUCT_IF_C Ip_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu16ll, Ip_BFu0ll_BFu16ll)
//============================================================================



static void Test_Ip_BFu0ll_BFu16s()
{
  {
    init_simple_test("Ip_BFu0ll_BFu16s");
    static STRUCT_IF_C Ip_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu16s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu16s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu16s, Ip_BFu0ll_BFu16s)
//============================================================================



static void Test_Ip_BFu0ll_BFu17i()
{
  {
    init_simple_test("Ip_BFu0ll_BFu17i");
    static STRUCT_IF_C Ip_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Ip_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu17i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu17i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu17i, Ip_BFu0ll_BFu17i)
//============================================================================



static void Test_Ip_BFu0ll_BFu17ll()
{
  {
    init_simple_test("Ip_BFu0ll_BFu17ll");
    static STRUCT_IF_C Ip_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Ip_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu17ll, Ip_BFu0ll_BFu17ll)
//============================================================================



static void Test_Ip_BFu0ll_BFu1c()
{
  {
    init_simple_test("Ip_BFu0ll_BFu1c");
    static STRUCT_IF_C Ip_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu1c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu1c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu1c, Ip_BFu0ll_BFu1c)
//============================================================================



static void Test_Ip_BFu0ll_BFu1i()
{
  {
    init_simple_test("Ip_BFu0ll_BFu1i");
    static STRUCT_IF_C Ip_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu1i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu1i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu1i, Ip_BFu0ll_BFu1i)
//============================================================================



static void Test_Ip_BFu0ll_BFu1ll()
{
  {
    init_simple_test("Ip_BFu0ll_BFu1ll");
    static STRUCT_IF_C Ip_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu1ll, Ip_BFu0ll_BFu1ll)
//============================================================================



static void Test_Ip_BFu0ll_BFu1s()
{
  {
    init_simple_test("Ip_BFu0ll_BFu1s");
    static STRUCT_IF_C Ip_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu1s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu1s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu1s, Ip_BFu0ll_BFu1s)
//============================================================================



static void Test_Ip_BFu0ll_BFu31i()
{
  {
    init_simple_test("Ip_BFu0ll_BFu31i");
    static STRUCT_IF_C Ip_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu31i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu31i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu31i, Ip_BFu0ll_BFu31i)
//============================================================================



static void Test_Ip_BFu0ll_BFu31ll()
{
  {
    init_simple_test("Ip_BFu0ll_BFu31ll");
    static STRUCT_IF_C Ip_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu31ll, Ip_BFu0ll_BFu31ll)
//============================================================================



static void Test_Ip_BFu0ll_BFu32i()
{
  {
    init_simple_test("Ip_BFu0ll_BFu32i");
    static STRUCT_IF_C Ip_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu32i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu32i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu32i, Ip_BFu0ll_BFu32i)
//============================================================================



static void Test_Ip_BFu0ll_BFu32ll()
{
  {
    init_simple_test("Ip_BFu0ll_BFu32ll");
    static STRUCT_IF_C Ip_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu32ll, Ip_BFu0ll_BFu32ll)
//============================================================================



static void Test_Ip_BFu0ll_BFu33()
{
  {
    init_simple_test("Ip_BFu0ll_BFu33");
    static STRUCT_IF_C Ip_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(Ip_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu33)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu33.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "Ip_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "Ip_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu33, Ip_BFu0ll_BFu33)
//============================================================================



static void Test_Ip_BFu0ll_BFu7c()
{
  {
    init_simple_test("Ip_BFu0ll_BFu7c");
    static STRUCT_IF_C Ip_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu7c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu7c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu7c, Ip_BFu0ll_BFu7c)
//============================================================================



static void Test_Ip_BFu0ll_BFu7i()
{
  {
    init_simple_test("Ip_BFu0ll_BFu7i");
    static STRUCT_IF_C Ip_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu7i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu7i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu7i, Ip_BFu0ll_BFu7i)
//============================================================================



static void Test_Ip_BFu0ll_BFu7ll()
{
  {
    init_simple_test("Ip_BFu0ll_BFu7ll");
    static STRUCT_IF_C Ip_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu7ll, Ip_BFu0ll_BFu7ll)
//============================================================================



static void Test_Ip_BFu0ll_BFu7s()
{
  {
    init_simple_test("Ip_BFu0ll_BFu7s");
    static STRUCT_IF_C Ip_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu7s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu7s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu7s, Ip_BFu0ll_BFu7s)
//============================================================================



static void Test_Ip_BFu0ll_BFu8c()
{
  {
    init_simple_test("Ip_BFu0ll_BFu8c");
    static STRUCT_IF_C Ip_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu8c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu8c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu8c, Ip_BFu0ll_BFu8c)
//============================================================================



static void Test_Ip_BFu0ll_BFu8i()
{
  {
    init_simple_test("Ip_BFu0ll_BFu8i");
    static STRUCT_IF_C Ip_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu8i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu8i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu8i, Ip_BFu0ll_BFu8i)
//============================================================================



static void Test_Ip_BFu0ll_BFu8ll()
{
  {
    init_simple_test("Ip_BFu0ll_BFu8ll");
    static STRUCT_IF_C Ip_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu8ll, Ip_BFu0ll_BFu8ll)
//============================================================================



static void Test_Ip_BFu0ll_BFu8s()
{
  {
    init_simple_test("Ip_BFu0ll_BFu8s");
    static STRUCT_IF_C Ip_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu8s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu8s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu8s, Ip_BFu0ll_BFu8s)
//============================================================================



static void Test_Ip_BFu0ll_BFu9i()
{
  {
    init_simple_test("Ip_BFu0ll_BFu9i");
    static STRUCT_IF_C Ip_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu9i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu9i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu9i, Ip_BFu0ll_BFu9i)
//============================================================================



static void Test_Ip_BFu0ll_BFu9ll()
{
  {
    init_simple_test("Ip_BFu0ll_BFu9ll");
    static STRUCT_IF_C Ip_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu9ll, Ip_BFu0ll_BFu9ll)
//============================================================================



static void Test_Ip_BFu0ll_BFu9s()
{
  {
    init_simple_test("Ip_BFu0ll_BFu9s");
    static STRUCT_IF_C Ip_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_BFu9s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_BFu9s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_BFu9s, Ip_BFu0ll_BFu9s)
//============================================================================



static void Test_Ip_BFu0ll_C()
{
  {
    init_simple_test("Ip_BFu0ll_C");
    static STRUCT_IF_C Ip_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_C)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_C.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_C, Ip_BFu0ll_C)
//============================================================================



static void Test_Ip_BFu0ll_D()
{
  {
    init_simple_test("Ip_BFu0ll_D");
    static STRUCT_IF_C Ip_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_D)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_D.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_D, Ip_BFu0ll_D)
//============================================================================



static void Test_Ip_BFu0ll_F()
{
  {
    init_simple_test("Ip_BFu0ll_F");
    static STRUCT_IF_C Ip_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_F)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_F.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_F, Ip_BFu0ll_F)
//============================================================================



static void Test_Ip_BFu0ll_I()
{
  {
    init_simple_test("Ip_BFu0ll_I");
    static STRUCT_IF_C Ip_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_I)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_I.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_I, Ip_BFu0ll_I)
//============================================================================



static void Test_Ip_BFu0ll_Ip()
{
  {
    init_simple_test("Ip_BFu0ll_Ip");
    static STRUCT_IF_C Ip_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_Ip)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_Ip, Ip_BFu0ll_Ip)
//============================================================================



static void Test_Ip_BFu0ll_L()
{
  {
    init_simple_test("Ip_BFu0ll_L");
    static STRUCT_IF_C Ip_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_L)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_L.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_L, Ip_BFu0ll_L)
//============================================================================



static void Test_Ip_BFu0ll_S()
{
  {
    init_simple_test("Ip_BFu0ll_S");
    static STRUCT_IF_C Ip_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_S)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_S.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_S, Ip_BFu0ll_S)
//============================================================================



static void Test_Ip_BFu0ll_Uc()
{
  {
    init_simple_test("Ip_BFu0ll_Uc");
    static STRUCT_IF_C Ip_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_Uc)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_Uc, Ip_BFu0ll_Uc)
//============================================================================



static void Test_Ip_BFu0ll_Ui()
{
  {
    init_simple_test("Ip_BFu0ll_Ui");
    static STRUCT_IF_C Ip_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_Ui)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_Ui, Ip_BFu0ll_Ui)
//============================================================================



static void Test_Ip_BFu0ll_Ul()
{
  {
    init_simple_test("Ip_BFu0ll_Ul");
    static STRUCT_IF_C Ip_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_Ul)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_Ul, Ip_BFu0ll_Ul)
//============================================================================



static void Test_Ip_BFu0ll_Us()
{
  {
    init_simple_test("Ip_BFu0ll_Us");
    static STRUCT_IF_C Ip_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_Us)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_Us.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_Us, Ip_BFu0ll_Us)
//============================================================================



static void Test_Ip_BFu0ll_Vp()
{
  {
    init_simple_test("Ip_BFu0ll_Vp");
    static STRUCT_IF_C Ip_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0ll_Vp)");
    check_field_offset(lv, v1, 0, "Ip_BFu0ll_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0ll_Vp, Ip_BFu0ll_Vp)
//============================================================================



static void Test_Ip_BFu0s()
{
  {
    init_simple_test("Ip_BFu0s");
    static STRUCT_IF_C Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s, Ip_BFu0s)
//============================================================================



static void Test_Ip_BFu0s_BFu0c()
{
  {
    init_simple_test("Ip_BFu0s_BFu0c");
    static STRUCT_IF_C Ip_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu0c, Ip_BFu0s_BFu0c)
//============================================================================



static void Test_Ip_BFu0s_BFu0i()
{
  {
    init_simple_test("Ip_BFu0s_BFu0i");
    static STRUCT_IF_C Ip_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu0i, Ip_BFu0s_BFu0i)
//============================================================================



static void Test_Ip_BFu0s_BFu0ll()
{
  {
    init_simple_test("Ip_BFu0s_BFu0ll");
    static STRUCT_IF_C Ip_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu0ll, Ip_BFu0s_BFu0ll)
//============================================================================



static void Test_Ip_BFu0s_BFu0s()
{
  {
    init_simple_test("Ip_BFu0s_BFu0s");
    static STRUCT_IF_C Ip_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu0s, Ip_BFu0s_BFu0s)
//============================================================================



static void Test_Ip_BFu0s_BFu15i()
{
  {
    init_simple_test("Ip_BFu0s_BFu15i");
    static STRUCT_IF_C Ip_BFu0s_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu15i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu15i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu15i, Ip_BFu0s_BFu15i)
//============================================================================



static void Test_Ip_BFu0s_BFu15ll()
{
  {
    init_simple_test("Ip_BFu0s_BFu15ll");
    static STRUCT_IF_C Ip_BFu0s_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu15ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu15ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu15ll, Ip_BFu0s_BFu15ll)
//============================================================================



static void Test_Ip_BFu0s_BFu15s()
{
  {
    init_simple_test("Ip_BFu0s_BFu15s");
    static STRUCT_IF_C Ip_BFu0s_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu15s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu15s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu15s, Ip_BFu0s_BFu15s)
//============================================================================



static void Test_Ip_BFu0s_BFu16i()
{
  {
    init_simple_test("Ip_BFu0s_BFu16i");
    static STRUCT_IF_C Ip_BFu0s_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu16i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu16i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu16i, Ip_BFu0s_BFu16i)
//============================================================================



static void Test_Ip_BFu0s_BFu16ll()
{
  {
    init_simple_test("Ip_BFu0s_BFu16ll");
    static STRUCT_IF_C Ip_BFu0s_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu16ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu16ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu16ll, Ip_BFu0s_BFu16ll)
//============================================================================



static void Test_Ip_BFu0s_BFu16s()
{
  {
    init_simple_test("Ip_BFu0s_BFu16s");
    static STRUCT_IF_C Ip_BFu0s_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu16s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu16s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu16s, Ip_BFu0s_BFu16s)
//============================================================================



static void Test_Ip_BFu0s_BFu17i()
{
  {
    init_simple_test("Ip_BFu0s_BFu17i");
    static STRUCT_IF_C Ip_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Ip_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu17i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu17i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu17i, Ip_BFu0s_BFu17i)
//============================================================================



static void Test_Ip_BFu0s_BFu17ll()
{
  {
    init_simple_test("Ip_BFu0s_BFu17ll");
    static STRUCT_IF_C Ip_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Ip_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu17ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu17ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu17ll, Ip_BFu0s_BFu17ll)
//============================================================================



static void Test_Ip_BFu0s_BFu1c()
{
  {
    init_simple_test("Ip_BFu0s_BFu1c");
    static STRUCT_IF_C Ip_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu1c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu1c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu1c, Ip_BFu0s_BFu1c)
//============================================================================



static void Test_Ip_BFu0s_BFu1i()
{
  {
    init_simple_test("Ip_BFu0s_BFu1i");
    static STRUCT_IF_C Ip_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu1i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu1i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu1i, Ip_BFu0s_BFu1i)
//============================================================================



static void Test_Ip_BFu0s_BFu1ll()
{
  {
    init_simple_test("Ip_BFu0s_BFu1ll");
    static STRUCT_IF_C Ip_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu1ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu1ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu1ll, Ip_BFu0s_BFu1ll)
//============================================================================



static void Test_Ip_BFu0s_BFu1s()
{
  {
    init_simple_test("Ip_BFu0s_BFu1s");
    static STRUCT_IF_C Ip_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu1s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu1s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu1s, Ip_BFu0s_BFu1s)
//============================================================================



static void Test_Ip_BFu0s_BFu31i()
{
  {
    init_simple_test("Ip_BFu0s_BFu31i");
    static STRUCT_IF_C Ip_BFu0s_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu31i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu31i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu31i, Ip_BFu0s_BFu31i)
//============================================================================



static void Test_Ip_BFu0s_BFu31ll()
{
  {
    init_simple_test("Ip_BFu0s_BFu31ll");
    static STRUCT_IF_C Ip_BFu0s_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu31ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu31ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu31ll, Ip_BFu0s_BFu31ll)
//============================================================================



static void Test_Ip_BFu0s_BFu32i()
{
  {
    init_simple_test("Ip_BFu0s_BFu32i");
    static STRUCT_IF_C Ip_BFu0s_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu32i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu32i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu32i, Ip_BFu0s_BFu32i)
//============================================================================



static void Test_Ip_BFu0s_BFu32ll()
{
  {
    init_simple_test("Ip_BFu0s_BFu32ll");
    static STRUCT_IF_C Ip_BFu0s_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu32ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu32ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu32ll, Ip_BFu0s_BFu32ll)
//============================================================================



static void Test_Ip_BFu0s_BFu33()
{
  {
    init_simple_test("Ip_BFu0s_BFu33");
    static STRUCT_IF_C Ip_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(Ip_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu33)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu33.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "Ip_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "Ip_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu33, Ip_BFu0s_BFu33)
//============================================================================



static void Test_Ip_BFu0s_BFu7c()
{
  {
    init_simple_test("Ip_BFu0s_BFu7c");
    static STRUCT_IF_C Ip_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu7c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu7c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu7c, Ip_BFu0s_BFu7c)
//============================================================================



static void Test_Ip_BFu0s_BFu7i()
{
  {
    init_simple_test("Ip_BFu0s_BFu7i");
    static STRUCT_IF_C Ip_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu7i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu7i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu7i, Ip_BFu0s_BFu7i)
//============================================================================



static void Test_Ip_BFu0s_BFu7ll()
{
  {
    init_simple_test("Ip_BFu0s_BFu7ll");
    static STRUCT_IF_C Ip_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu7ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu7ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu7ll, Ip_BFu0s_BFu7ll)
//============================================================================



static void Test_Ip_BFu0s_BFu7s()
{
  {
    init_simple_test("Ip_BFu0s_BFu7s");
    static STRUCT_IF_C Ip_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu7s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu7s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu7s, Ip_BFu0s_BFu7s)
//============================================================================



static void Test_Ip_BFu0s_BFu8c()
{
  {
    init_simple_test("Ip_BFu0s_BFu8c");
    static STRUCT_IF_C Ip_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu8c)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu8c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu8c, Ip_BFu0s_BFu8c)
//============================================================================



static void Test_Ip_BFu0s_BFu8i()
{
  {
    init_simple_test("Ip_BFu0s_BFu8i");
    static STRUCT_IF_C Ip_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu8i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu8i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu8i, Ip_BFu0s_BFu8i)
//============================================================================



static void Test_Ip_BFu0s_BFu8ll()
{
  {
    init_simple_test("Ip_BFu0s_BFu8ll");
    static STRUCT_IF_C Ip_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu8ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu8ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu8ll, Ip_BFu0s_BFu8ll)
//============================================================================



static void Test_Ip_BFu0s_BFu8s()
{
  {
    init_simple_test("Ip_BFu0s_BFu8s");
    static STRUCT_IF_C Ip_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu8s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu8s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu8s, Ip_BFu0s_BFu8s)
//============================================================================



static void Test_Ip_BFu0s_BFu9i()
{
  {
    init_simple_test("Ip_BFu0s_BFu9i");
    static STRUCT_IF_C Ip_BFu0s_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu9i)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu9i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu9i, Ip_BFu0s_BFu9i)
//============================================================================



static void Test_Ip_BFu0s_BFu9ll()
{
  {
    init_simple_test("Ip_BFu0s_BFu9ll");
    static STRUCT_IF_C Ip_BFu0s_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu9ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu9ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu9ll, Ip_BFu0s_BFu9ll)
//============================================================================



static void Test_Ip_BFu0s_BFu9s()
{
  {
    init_simple_test("Ip_BFu0s_BFu9s");
    static STRUCT_IF_C Ip_BFu0s_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_BFu9s)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_BFu9s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_BFu9s, Ip_BFu0s_BFu9s)
//============================================================================



static void Test_Ip_BFu0s_C()
{
  {
    init_simple_test("Ip_BFu0s_C");
    static STRUCT_IF_C Ip_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_C)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_C.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_C, Ip_BFu0s_C)
//============================================================================



static void Test_Ip_BFu0s_D()
{
  {
    init_simple_test("Ip_BFu0s_D");
    static STRUCT_IF_C Ip_BFu0s_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_D)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_D.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_D, Ip_BFu0s_D)
//============================================================================



static void Test_Ip_BFu0s_F()
{
  {
    init_simple_test("Ip_BFu0s_F");
    static STRUCT_IF_C Ip_BFu0s_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_F)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_F.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_F, Ip_BFu0s_F)
//============================================================================



static void Test_Ip_BFu0s_I()
{
  {
    init_simple_test("Ip_BFu0s_I");
    static STRUCT_IF_C Ip_BFu0s_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_I)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_I.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_I, Ip_BFu0s_I)
//============================================================================



static void Test_Ip_BFu0s_Ip()
{
  {
    init_simple_test("Ip_BFu0s_Ip");
    static STRUCT_IF_C Ip_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_Ip)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_Ip, Ip_BFu0s_Ip)
//============================================================================



static void Test_Ip_BFu0s_L()
{
  {
    init_simple_test("Ip_BFu0s_L");
    static STRUCT_IF_C Ip_BFu0s_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_L)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_L.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_L, Ip_BFu0s_L)
//============================================================================



static void Test_Ip_BFu0s_S()
{
  {
    init_simple_test("Ip_BFu0s_S");
    static STRUCT_IF_C Ip_BFu0s_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_S)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_S.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_S, Ip_BFu0s_S)
//============================================================================



static void Test_Ip_BFu0s_Uc()
{
  {
    init_simple_test("Ip_BFu0s_Uc");
    static STRUCT_IF_C Ip_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_Uc)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_Uc, Ip_BFu0s_Uc)
//============================================================================



static void Test_Ip_BFu0s_Ui()
{
  {
    init_simple_test("Ip_BFu0s_Ui");
    static STRUCT_IF_C Ip_BFu0s_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_Ui)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_Ui, Ip_BFu0s_Ui)
//============================================================================



static void Test_Ip_BFu0s_Ul()
{
  {
    init_simple_test("Ip_BFu0s_Ul");
    static STRUCT_IF_C Ip_BFu0s_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_Ul)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_Ul, Ip_BFu0s_Ul)
//============================================================================



static void Test_Ip_BFu0s_Us()
{
  {
    init_simple_test("Ip_BFu0s_Us");
    static STRUCT_IF_C Ip_BFu0s_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_Us)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_Us.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_Us, Ip_BFu0s_Us)
//============================================================================



static void Test_Ip_BFu0s_Vp()
{
  {
    init_simple_test("Ip_BFu0s_Vp");
    static STRUCT_IF_C Ip_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu0s_Vp)");
    check_field_offset(lv, v1, 0, "Ip_BFu0s_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu0s_Vp, Ip_BFu0s_Vp)
//============================================================================



static void Test_Ip_BFu15i_BFu0c()
{
  {
    init_simple_test("Ip_BFu15i_BFu0c");
    static STRUCT_IF_C Ip_BFu15i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu15i_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu15i_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu15i_BFu0c, Ip_BFu15i_BFu0c)
//============================================================================



static void Test_Ip_BFu15i_BFu0i()
{
  {
    init_simple_test("Ip_BFu15i_BFu0i");
    static STRUCT_IF_C Ip_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu15i_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu15i_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu15i_BFu0i, Ip_BFu15i_BFu0i)
//============================================================================



static void Test_Ip_BFu15i_BFu0ll()
{
  {
    init_simple_test("Ip_BFu15i_BFu0ll");
    static STRUCT_IF_C Ip_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu15i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu15i_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu15i_BFu0ll, Ip_BFu15i_BFu0ll)
//============================================================================



static void Test_Ip_BFu15i_BFu0s()
{
  {
    init_simple_test("Ip_BFu15i_BFu0s");
    static STRUCT_IF_C Ip_BFu15i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu15i_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu15i_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu15i_BFu0s, Ip_BFu15i_BFu0s)
//============================================================================



static void Test_Ip_BFu15ll_BFu0c()
{
  {
    init_simple_test("Ip_BFu15ll_BFu0c");
    static STRUCT_IF_C Ip_BFu15ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu15ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu15ll_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu15ll_BFu0c, Ip_BFu15ll_BFu0c)
//============================================================================



static void Test_Ip_BFu15ll_BFu0i()
{
  {
    init_simple_test("Ip_BFu15ll_BFu0i");
    static STRUCT_IF_C Ip_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu15ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu15ll_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu15ll_BFu0i, Ip_BFu15ll_BFu0i)
//============================================================================



static void Test_Ip_BFu15ll_BFu0ll()
{
  {
    init_simple_test("Ip_BFu15ll_BFu0ll");
    static STRUCT_IF_C Ip_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu15ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu15ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu15ll_BFu0ll, Ip_BFu15ll_BFu0ll)
//============================================================================



static void Test_Ip_BFu15ll_BFu0s()
{
  {
    init_simple_test("Ip_BFu15ll_BFu0s");
    static STRUCT_IF_C Ip_BFu15ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu15ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu15ll_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu15ll_BFu0s, Ip_BFu15ll_BFu0s)
//============================================================================



static void Test_Ip_BFu15s_BFu0c()
{
  {
    init_simple_test("Ip_BFu15s_BFu0c");
    static STRUCT_IF_C Ip_BFu15s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu15s_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu15s_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu15s_BFu0c, Ip_BFu15s_BFu0c)
//============================================================================



static void Test_Ip_BFu15s_BFu0i()
{
  {
    init_simple_test("Ip_BFu15s_BFu0i");
    static STRUCT_IF_C Ip_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu15s_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu15s_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu15s_BFu0i, Ip_BFu15s_BFu0i)
//============================================================================



static void Test_Ip_BFu15s_BFu0ll()
{
  {
    init_simple_test("Ip_BFu15s_BFu0ll");
    static STRUCT_IF_C Ip_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu15s_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu15s_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu15s_BFu0ll, Ip_BFu15s_BFu0ll)
//============================================================================



static void Test_Ip_BFu15s_BFu0s()
{
  {
    init_simple_test("Ip_BFu15s_BFu0s");
    static STRUCT_IF_C Ip_BFu15s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu15s_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu15s_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu15s_BFu0s, Ip_BFu15s_BFu0s)
//============================================================================



static void Test_Ip_BFu16i_BFu0c()
{
  {
    init_simple_test("Ip_BFu16i_BFu0c");
    static STRUCT_IF_C Ip_BFu16i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu16i_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu16i_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu16i_BFu0c, Ip_BFu16i_BFu0c)
//============================================================================



static void Test_Ip_BFu16i_BFu0i()
{
  {
    init_simple_test("Ip_BFu16i_BFu0i");
    static STRUCT_IF_C Ip_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu16i_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu16i_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu16i_BFu0i, Ip_BFu16i_BFu0i)
//============================================================================



static void Test_Ip_BFu16i_BFu0ll()
{
  {
    init_simple_test("Ip_BFu16i_BFu0ll");
    static STRUCT_IF_C Ip_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu16i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu16i_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu16i_BFu0ll, Ip_BFu16i_BFu0ll)
//============================================================================



static void Test_Ip_BFu16i_BFu0s()
{
  {
    init_simple_test("Ip_BFu16i_BFu0s");
    static STRUCT_IF_C Ip_BFu16i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu16i_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu16i_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu16i_BFu0s, Ip_BFu16i_BFu0s)
//============================================================================



static void Test_Ip_BFu16ll_BFu0c()
{
  {
    init_simple_test("Ip_BFu16ll_BFu0c");
    static STRUCT_IF_C Ip_BFu16ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu16ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu16ll_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu16ll_BFu0c, Ip_BFu16ll_BFu0c)
//============================================================================



static void Test_Ip_BFu16ll_BFu0i()
{
  {
    init_simple_test("Ip_BFu16ll_BFu0i");
    static STRUCT_IF_C Ip_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu16ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu16ll_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu16ll_BFu0i, Ip_BFu16ll_BFu0i)
//============================================================================



static void Test_Ip_BFu16ll_BFu0ll()
{
  {
    init_simple_test("Ip_BFu16ll_BFu0ll");
    static STRUCT_IF_C Ip_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu16ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu16ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu16ll_BFu0ll, Ip_BFu16ll_BFu0ll)
//============================================================================



static void Test_Ip_BFu16ll_BFu0s()
{
  {
    init_simple_test("Ip_BFu16ll_BFu0s");
    static STRUCT_IF_C Ip_BFu16ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu16ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu16ll_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu16ll_BFu0s, Ip_BFu16ll_BFu0s)
//============================================================================



static void Test_Ip_BFu16s_BFu0c()
{
  {
    init_simple_test("Ip_BFu16s_BFu0c");
    static STRUCT_IF_C Ip_BFu16s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu16s_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu16s_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu16s_BFu0c, Ip_BFu16s_BFu0c)
//============================================================================



static void Test_Ip_BFu16s_BFu0i()
{
  {
    init_simple_test("Ip_BFu16s_BFu0i");
    static STRUCT_IF_C Ip_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu16s_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu16s_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu16s_BFu0i, Ip_BFu16s_BFu0i)
//============================================================================



static void Test_Ip_BFu16s_BFu0ll()
{
  {
    init_simple_test("Ip_BFu16s_BFu0ll");
    static STRUCT_IF_C Ip_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu16s_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu16s_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu16s_BFu0ll, Ip_BFu16s_BFu0ll)
//============================================================================



static void Test_Ip_BFu16s_BFu0s()
{
  {
    init_simple_test("Ip_BFu16s_BFu0s");
    static STRUCT_IF_C Ip_BFu16s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu16s_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu16s_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu16s_BFu0s, Ip_BFu16s_BFu0s)
//============================================================================



static void Test_Ip_BFu17i_BFu0c()
{
  {
    init_simple_test("Ip_BFu17i_BFu0c");
    static STRUCT_IF_C Ip_BFu17i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Ip_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu17i_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu17i_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu17i_BFu0c, Ip_BFu17i_BFu0c)
//============================================================================



static void Test_Ip_BFu17i_BFu0i()
{
  {
    init_simple_test("Ip_BFu17i_BFu0i");
    static STRUCT_IF_C Ip_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu17i_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu17i_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu17i_BFu0i, Ip_BFu17i_BFu0i)
//============================================================================



static void Test_Ip_BFu17i_BFu0ll()
{
  {
    init_simple_test("Ip_BFu17i_BFu0ll");
    static STRUCT_IF_C Ip_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu17i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu17i_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu17i_BFu0ll, Ip_BFu17i_BFu0ll)
//============================================================================



static void Test_Ip_BFu17i_BFu0s()
{
  {
    init_simple_test("Ip_BFu17i_BFu0s");
    static STRUCT_IF_C Ip_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu17i_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu17i_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu17i_BFu0s, Ip_BFu17i_BFu0s)
//============================================================================



static void Test_Ip_BFu17ll_BFu0c()
{
  {
    init_simple_test("Ip_BFu17ll_BFu0c");
    static STRUCT_IF_C Ip_BFu17ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Ip_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu17ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu17ll_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu17ll_BFu0c, Ip_BFu17ll_BFu0c)
//============================================================================



static void Test_Ip_BFu17ll_BFu0i()
{
  {
    init_simple_test("Ip_BFu17ll_BFu0i");
    static STRUCT_IF_C Ip_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu17ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu17ll_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu17ll_BFu0i, Ip_BFu17ll_BFu0i)
//============================================================================



static void Test_Ip_BFu17ll_BFu0ll()
{
  {
    init_simple_test("Ip_BFu17ll_BFu0ll");
    static STRUCT_IF_C Ip_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu17ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu17ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu17ll_BFu0ll, Ip_BFu17ll_BFu0ll)
//============================================================================



static void Test_Ip_BFu17ll_BFu0s()
{
  {
    init_simple_test("Ip_BFu17ll_BFu0s");
    static STRUCT_IF_C Ip_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu17ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu17ll_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu17ll_BFu0s, Ip_BFu17ll_BFu0s)
//============================================================================



static void Test_Ip_BFu1c_BFu0c()
{
  {
    init_simple_test("Ip_BFu1c_BFu0c");
    static STRUCT_IF_C Ip_BFu1c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu1c_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu1c_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1c_BFu0c, Ip_BFu1c_BFu0c)
//============================================================================



static void Test_Ip_BFu1c_BFu0i()
{
  {
    init_simple_test("Ip_BFu1c_BFu0i");
    static STRUCT_IF_C Ip_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu1c_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu1c_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1c_BFu0i, Ip_BFu1c_BFu0i)
//============================================================================



static void Test_Ip_BFu1c_BFu0ll()
{
  {
    init_simple_test("Ip_BFu1c_BFu0ll");
    static STRUCT_IF_C Ip_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu1c_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu1c_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1c_BFu0ll, Ip_BFu1c_BFu0ll)
//============================================================================



static void Test_Ip_BFu1c_BFu0s()
{
  {
    init_simple_test("Ip_BFu1c_BFu0s");
    static STRUCT_IF_C Ip_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu1c_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu1c_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1c_BFu0s, Ip_BFu1c_BFu0s)
//============================================================================



static void Test_Ip_BFu1i_BFu0c()
{
  {
    init_simple_test("Ip_BFu1i_BFu0c");
    static STRUCT_IF_C Ip_BFu1i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu1i_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu1i_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1i_BFu0c, Ip_BFu1i_BFu0c)
//============================================================================



static void Test_Ip_BFu1i_BFu0i()
{
  {
    init_simple_test("Ip_BFu1i_BFu0i");
    static STRUCT_IF_C Ip_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu1i_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu1i_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1i_BFu0i, Ip_BFu1i_BFu0i)
//============================================================================



static void Test_Ip_BFu1i_BFu0ll()
{
  {
    init_simple_test("Ip_BFu1i_BFu0ll");
    static STRUCT_IF_C Ip_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu1i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu1i_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1i_BFu0ll, Ip_BFu1i_BFu0ll)
//============================================================================



static void Test_Ip_BFu1i_BFu0s()
{
  {
    init_simple_test("Ip_BFu1i_BFu0s");
    static STRUCT_IF_C Ip_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu1i_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu1i_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1i_BFu0s, Ip_BFu1i_BFu0s)
//============================================================================



static void Test_Ip_BFu1ll_BFu0c()
{
  {
    init_simple_test("Ip_BFu1ll_BFu0c");
    static STRUCT_IF_C Ip_BFu1ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu1ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu1ll_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1ll_BFu0c, Ip_BFu1ll_BFu0c)
//============================================================================



static void Test_Ip_BFu1ll_BFu0i()
{
  {
    init_simple_test("Ip_BFu1ll_BFu0i");
    static STRUCT_IF_C Ip_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu1ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu1ll_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1ll_BFu0i, Ip_BFu1ll_BFu0i)
//============================================================================



static void Test_Ip_BFu1ll_BFu0ll()
{
  {
    init_simple_test("Ip_BFu1ll_BFu0ll");
    static STRUCT_IF_C Ip_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu1ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu1ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1ll_BFu0ll, Ip_BFu1ll_BFu0ll)
//============================================================================



static void Test_Ip_BFu1ll_BFu0s()
{
  {
    init_simple_test("Ip_BFu1ll_BFu0s");
    static STRUCT_IF_C Ip_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu1ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu1ll_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1ll_BFu0s, Ip_BFu1ll_BFu0s)
//============================================================================



static void Test_Ip_BFu1s_BFu0c()
{
  {
    init_simple_test("Ip_BFu1s_BFu0c");
    static STRUCT_IF_C Ip_BFu1s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu1s_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu1s_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1s_BFu0c, Ip_BFu1s_BFu0c)
//============================================================================



static void Test_Ip_BFu1s_BFu0i()
{
  {
    init_simple_test("Ip_BFu1s_BFu0i");
    static STRUCT_IF_C Ip_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu1s_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu1s_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1s_BFu0i, Ip_BFu1s_BFu0i)
//============================================================================



static void Test_Ip_BFu1s_BFu0ll()
{
  {
    init_simple_test("Ip_BFu1s_BFu0ll");
    static STRUCT_IF_C Ip_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu1s_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu1s_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1s_BFu0ll, Ip_BFu1s_BFu0ll)
//============================================================================



static void Test_Ip_BFu1s_BFu0s()
{
  {
    init_simple_test("Ip_BFu1s_BFu0s");
    static STRUCT_IF_C Ip_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu1s_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu1s_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1s_BFu0s, Ip_BFu1s_BFu0s)
//============================================================================



static void Test_Ip_BFu31i_BFu0c()
{
  {
    init_simple_test("Ip_BFu31i_BFu0c");
    static STRUCT_IF_C Ip_BFu31i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu31i_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu31i_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu31i_BFu0c, Ip_BFu31i_BFu0c)
//============================================================================



static void Test_Ip_BFu31i_BFu0i()
{
  {
    init_simple_test("Ip_BFu31i_BFu0i");
    static STRUCT_IF_C Ip_BFu31i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu31i_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu31i_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu31i_BFu0i, Ip_BFu31i_BFu0i)
//============================================================================



static void Test_Ip_BFu31i_BFu0ll()
{
  {
    init_simple_test("Ip_BFu31i_BFu0ll");
    static STRUCT_IF_C Ip_BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu31i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu31i_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu31i_BFu0ll, Ip_BFu31i_BFu0ll)
//============================================================================



static void Test_Ip_BFu31i_BFu0s()
{
  {
    init_simple_test("Ip_BFu31i_BFu0s");
    static STRUCT_IF_C Ip_BFu31i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu31i_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu31i_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu31i_BFu0s, Ip_BFu31i_BFu0s)
//============================================================================



static void Test_Ip_BFu31ll_BFu0c()
{
  {
    init_simple_test("Ip_BFu31ll_BFu0c");
    static STRUCT_IF_C Ip_BFu31ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu31ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu31ll_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu31ll_BFu0c, Ip_BFu31ll_BFu0c)
//============================================================================



static void Test_Ip_BFu31ll_BFu0i()
{
  {
    init_simple_test("Ip_BFu31ll_BFu0i");
    static STRUCT_IF_C Ip_BFu31ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu31ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu31ll_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu31ll_BFu0i, Ip_BFu31ll_BFu0i)
//============================================================================



static void Test_Ip_BFu31ll_BFu0ll()
{
  {
    init_simple_test("Ip_BFu31ll_BFu0ll");
    static STRUCT_IF_C Ip_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu31ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu31ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu31ll_BFu0ll, Ip_BFu31ll_BFu0ll)
//============================================================================



static void Test_Ip_BFu31ll_BFu0s()
{
  {
    init_simple_test("Ip_BFu31ll_BFu0s");
    static STRUCT_IF_C Ip_BFu31ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu31ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu31ll_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu31ll_BFu0s, Ip_BFu31ll_BFu0s)
//============================================================================



static void Test_Ip_BFu32i_BFu0c()
{
  {
    init_simple_test("Ip_BFu32i_BFu0c");
    static STRUCT_IF_C Ip_BFu32i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu32i_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu32i_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu32i_BFu0c, Ip_BFu32i_BFu0c)
//============================================================================



static void Test_Ip_BFu32i_BFu0i()
{
  {
    init_simple_test("Ip_BFu32i_BFu0i");
    static STRUCT_IF_C Ip_BFu32i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu32i_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu32i_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu32i_BFu0i, Ip_BFu32i_BFu0i)
//============================================================================



static void Test_Ip_BFu32i_BFu0ll()
{
  {
    init_simple_test("Ip_BFu32i_BFu0ll");
    static STRUCT_IF_C Ip_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu32i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu32i_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu32i_BFu0ll, Ip_BFu32i_BFu0ll)
//============================================================================



static void Test_Ip_BFu32i_BFu0s()
{
  {
    init_simple_test("Ip_BFu32i_BFu0s");
    static STRUCT_IF_C Ip_BFu32i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu32i_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu32i_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu32i_BFu0s, Ip_BFu32i_BFu0s)
//============================================================================



static void Test_Ip_BFu32ll_BFu0c()
{
  {
    init_simple_test("Ip_BFu32ll_BFu0c");
    static STRUCT_IF_C Ip_BFu32ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu32ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu32ll_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu32ll_BFu0c, Ip_BFu32ll_BFu0c)
//============================================================================



static void Test_Ip_BFu32ll_BFu0i()
{
  {
    init_simple_test("Ip_BFu32ll_BFu0i");
    static STRUCT_IF_C Ip_BFu32ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu32ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu32ll_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu32ll_BFu0i, Ip_BFu32ll_BFu0i)
//============================================================================



static void Test_Ip_BFu32ll_BFu0ll()
{
  {
    init_simple_test("Ip_BFu32ll_BFu0ll");
    static STRUCT_IF_C Ip_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu32ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu32ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu32ll_BFu0ll, Ip_BFu32ll_BFu0ll)
//============================================================================



static void Test_Ip_BFu32ll_BFu0s()
{
  {
    init_simple_test("Ip_BFu32ll_BFu0s");
    static STRUCT_IF_C Ip_BFu32ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu32ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu32ll_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu32ll_BFu0s, Ip_BFu32ll_BFu0s)
//============================================================================



static void Test_Ip_BFu33_BFu0c()
{
  {
    init_simple_test("Ip_BFu33_BFu0c");
    static STRUCT_IF_C Ip_BFu33_BFu0c lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(Ip_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu33_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu33_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "Ip_BFu33_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "Ip_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu33_BFu0c, Ip_BFu33_BFu0c)
//============================================================================



static void Test_Ip_BFu33_BFu0i()
{
  {
    init_simple_test("Ip_BFu33_BFu0i");
    static STRUCT_IF_C Ip_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu33_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu33_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "Ip_BFu33_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "Ip_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu33_BFu0i, Ip_BFu33_BFu0i)
//============================================================================



static void Test_Ip_BFu33_BFu0ll()
{
  {
    init_simple_test("Ip_BFu33_BFu0ll");
    static STRUCT_IF_C Ip_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu33_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu33_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "Ip_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "Ip_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu33_BFu0ll, Ip_BFu33_BFu0ll)
//============================================================================



static void Test_Ip_BFu33_BFu0s()
{
  {
    init_simple_test("Ip_BFu33_BFu0s");
    static STRUCT_IF_C Ip_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(Ip_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu33_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu33_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "Ip_BFu33_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "Ip_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu33_BFu0s, Ip_BFu33_BFu0s)
//============================================================================



static void Test_Ip_BFu7c_BFu0c()
{
  {
    init_simple_test("Ip_BFu7c_BFu0c");
    static STRUCT_IF_C Ip_BFu7c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu7c_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu7c_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7c_BFu0c, Ip_BFu7c_BFu0c)
//============================================================================



static void Test_Ip_BFu7c_BFu0i()
{
  {
    init_simple_test("Ip_BFu7c_BFu0i");
    static STRUCT_IF_C Ip_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu7c_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu7c_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7c_BFu0i, Ip_BFu7c_BFu0i)
//============================================================================



static void Test_Ip_BFu7c_BFu0ll()
{
  {
    init_simple_test("Ip_BFu7c_BFu0ll");
    static STRUCT_IF_C Ip_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu7c_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu7c_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7c_BFu0ll, Ip_BFu7c_BFu0ll)
//============================================================================



static void Test_Ip_BFu7c_BFu0s()
{
  {
    init_simple_test("Ip_BFu7c_BFu0s");
    static STRUCT_IF_C Ip_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu7c_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu7c_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7c_BFu0s, Ip_BFu7c_BFu0s)
//============================================================================



static void Test_Ip_BFu7i_BFu0c()
{
  {
    init_simple_test("Ip_BFu7i_BFu0c");
    static STRUCT_IF_C Ip_BFu7i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu7i_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu7i_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7i_BFu0c, Ip_BFu7i_BFu0c)
//============================================================================



static void Test_Ip_BFu7i_BFu0i()
{
  {
    init_simple_test("Ip_BFu7i_BFu0i");
    static STRUCT_IF_C Ip_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu7i_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu7i_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7i_BFu0i, Ip_BFu7i_BFu0i)
//============================================================================



static void Test_Ip_BFu7i_BFu0ll()
{
  {
    init_simple_test("Ip_BFu7i_BFu0ll");
    static STRUCT_IF_C Ip_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu7i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu7i_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7i_BFu0ll, Ip_BFu7i_BFu0ll)
//============================================================================



static void Test_Ip_BFu7i_BFu0s()
{
  {
    init_simple_test("Ip_BFu7i_BFu0s");
    static STRUCT_IF_C Ip_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu7i_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu7i_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7i_BFu0s, Ip_BFu7i_BFu0s)
//============================================================================



static void Test_Ip_BFu7ll_BFu0c()
{
  {
    init_simple_test("Ip_BFu7ll_BFu0c");
    static STRUCT_IF_C Ip_BFu7ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu7ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu7ll_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7ll_BFu0c, Ip_BFu7ll_BFu0c)
//============================================================================



static void Test_Ip_BFu7ll_BFu0i()
{
  {
    init_simple_test("Ip_BFu7ll_BFu0i");
    static STRUCT_IF_C Ip_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu7ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu7ll_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7ll_BFu0i, Ip_BFu7ll_BFu0i)
//============================================================================



static void Test_Ip_BFu7ll_BFu0ll()
{
  {
    init_simple_test("Ip_BFu7ll_BFu0ll");
    static STRUCT_IF_C Ip_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu7ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu7ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7ll_BFu0ll, Ip_BFu7ll_BFu0ll)
//============================================================================



static void Test_Ip_BFu7ll_BFu0s()
{
  {
    init_simple_test("Ip_BFu7ll_BFu0s");
    static STRUCT_IF_C Ip_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu7ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu7ll_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7ll_BFu0s, Ip_BFu7ll_BFu0s)
//============================================================================



static void Test_Ip_BFu7s_BFu0c()
{
  {
    init_simple_test("Ip_BFu7s_BFu0c");
    static STRUCT_IF_C Ip_BFu7s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu7s_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu7s_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7s_BFu0c, Ip_BFu7s_BFu0c)
//============================================================================



static void Test_Ip_BFu7s_BFu0i()
{
  {
    init_simple_test("Ip_BFu7s_BFu0i");
    static STRUCT_IF_C Ip_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu7s_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu7s_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7s_BFu0i, Ip_BFu7s_BFu0i)
//============================================================================



static void Test_Ip_BFu7s_BFu0ll()
{
  {
    init_simple_test("Ip_BFu7s_BFu0ll");
    static STRUCT_IF_C Ip_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu7s_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu7s_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7s_BFu0ll, Ip_BFu7s_BFu0ll)
//============================================================================



static void Test_Ip_BFu7s_BFu0s()
{
  {
    init_simple_test("Ip_BFu7s_BFu0s");
    static STRUCT_IF_C Ip_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu7s_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu7s_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7s_BFu0s, Ip_BFu7s_BFu0s)
//============================================================================



static void Test_Ip_BFu8c_BFu0c()
{
  {
    init_simple_test("Ip_BFu8c_BFu0c");
    static STRUCT_IF_C Ip_BFu8c_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu8c_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu8c_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8c_BFu0c, Ip_BFu8c_BFu0c)
//============================================================================



static void Test_Ip_BFu8c_BFu0i()
{
  {
    init_simple_test("Ip_BFu8c_BFu0i");
    static STRUCT_IF_C Ip_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu8c_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu8c_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8c_BFu0i, Ip_BFu8c_BFu0i)
//============================================================================



static void Test_Ip_BFu8c_BFu0ll()
{
  {
    init_simple_test("Ip_BFu8c_BFu0ll");
    static STRUCT_IF_C Ip_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu8c_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu8c_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8c_BFu0ll, Ip_BFu8c_BFu0ll)
//============================================================================



static void Test_Ip_BFu8c_BFu0s()
{
  {
    init_simple_test("Ip_BFu8c_BFu0s");
    static STRUCT_IF_C Ip_BFu8c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu8c_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu8c_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8c_BFu0s, Ip_BFu8c_BFu0s)
//============================================================================



static void Test_Ip_BFu8i_BFu0c()
{
  {
    init_simple_test("Ip_BFu8i_BFu0c");
    static STRUCT_IF_C Ip_BFu8i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu8i_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu8i_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8i_BFu0c, Ip_BFu8i_BFu0c)
//============================================================================



static void Test_Ip_BFu8i_BFu0i()
{
  {
    init_simple_test("Ip_BFu8i_BFu0i");
    static STRUCT_IF_C Ip_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu8i_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu8i_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8i_BFu0i, Ip_BFu8i_BFu0i)
//============================================================================



static void Test_Ip_BFu8i_BFu0ll()
{
  {
    init_simple_test("Ip_BFu8i_BFu0ll");
    static STRUCT_IF_C Ip_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu8i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu8i_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8i_BFu0ll, Ip_BFu8i_BFu0ll)
//============================================================================



static void Test_Ip_BFu8i_BFu0s()
{
  {
    init_simple_test("Ip_BFu8i_BFu0s");
    static STRUCT_IF_C Ip_BFu8i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu8i_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu8i_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8i_BFu0s, Ip_BFu8i_BFu0s)
//============================================================================



static void Test_Ip_BFu8ll_BFu0c()
{
  {
    init_simple_test("Ip_BFu8ll_BFu0c");
    static STRUCT_IF_C Ip_BFu8ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu8ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu8ll_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8ll_BFu0c, Ip_BFu8ll_BFu0c)
//============================================================================



static void Test_Ip_BFu8ll_BFu0i()
{
  {
    init_simple_test("Ip_BFu8ll_BFu0i");
    static STRUCT_IF_C Ip_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu8ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu8ll_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8ll_BFu0i, Ip_BFu8ll_BFu0i)
//============================================================================



static void Test_Ip_BFu8ll_BFu0ll()
{
  {
    init_simple_test("Ip_BFu8ll_BFu0ll");
    static STRUCT_IF_C Ip_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu8ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu8ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8ll_BFu0ll, Ip_BFu8ll_BFu0ll)
//============================================================================



static void Test_Ip_BFu8ll_BFu0s()
{
  {
    init_simple_test("Ip_BFu8ll_BFu0s");
    static STRUCT_IF_C Ip_BFu8ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu8ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu8ll_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8ll_BFu0s, Ip_BFu8ll_BFu0s)
//============================================================================



static void Test_Ip_BFu8s_BFu0c()
{
  {
    init_simple_test("Ip_BFu8s_BFu0c");
    static STRUCT_IF_C Ip_BFu8s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu8s_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu8s_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8s_BFu0c, Ip_BFu8s_BFu0c)
//============================================================================



static void Test_Ip_BFu8s_BFu0i()
{
  {
    init_simple_test("Ip_BFu8s_BFu0i");
    static STRUCT_IF_C Ip_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu8s_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu8s_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8s_BFu0i, Ip_BFu8s_BFu0i)
//============================================================================



static void Test_Ip_BFu8s_BFu0ll()
{
  {
    init_simple_test("Ip_BFu8s_BFu0ll");
    static STRUCT_IF_C Ip_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu8s_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu8s_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8s_BFu0ll, Ip_BFu8s_BFu0ll)
//============================================================================



static void Test_Ip_BFu8s_BFu0s()
{
  {
    init_simple_test("Ip_BFu8s_BFu0s");
    static STRUCT_IF_C Ip_BFu8s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu8s_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu8s_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8s_BFu0s, Ip_BFu8s_BFu0s)
//============================================================================



static void Test_Ip_BFu9i_BFu0c()
{
  {
    init_simple_test("Ip_BFu9i_BFu0c");
    static STRUCT_IF_C Ip_BFu9i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu9i_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu9i_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu9i_BFu0c, Ip_BFu9i_BFu0c)
//============================================================================



static void Test_Ip_BFu9i_BFu0i()
{
  {
    init_simple_test("Ip_BFu9i_BFu0i");
    static STRUCT_IF_C Ip_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu9i_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu9i_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu9i_BFu0i, Ip_BFu9i_BFu0i)
//============================================================================



static void Test_Ip_BFu9i_BFu0ll()
{
  {
    init_simple_test("Ip_BFu9i_BFu0ll");
    static STRUCT_IF_C Ip_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu9i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu9i_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu9i_BFu0ll, Ip_BFu9i_BFu0ll)
//============================================================================



static void Test_Ip_BFu9i_BFu0s()
{
  {
    init_simple_test("Ip_BFu9i_BFu0s");
    static STRUCT_IF_C Ip_BFu9i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu9i_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu9i_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu9i_BFu0s, Ip_BFu9i_BFu0s)
//============================================================================



static void Test_Ip_BFu9ll_BFu0c()
{
  {
    init_simple_test("Ip_BFu9ll_BFu0c");
    static STRUCT_IF_C Ip_BFu9ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu9ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu9ll_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu9ll_BFu0c, Ip_BFu9ll_BFu0c)
//============================================================================



static void Test_Ip_BFu9ll_BFu0i()
{
  {
    init_simple_test("Ip_BFu9ll_BFu0i");
    static STRUCT_IF_C Ip_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu9ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu9ll_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu9ll_BFu0i, Ip_BFu9ll_BFu0i)
//============================================================================



static void Test_Ip_BFu9ll_BFu0ll()
{
  {
    init_simple_test("Ip_BFu9ll_BFu0ll");
    static STRUCT_IF_C Ip_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu9ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu9ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu9ll_BFu0ll, Ip_BFu9ll_BFu0ll)
//============================================================================



static void Test_Ip_BFu9ll_BFu0s()
{
  {
    init_simple_test("Ip_BFu9ll_BFu0s");
    static STRUCT_IF_C Ip_BFu9ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu9ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu9ll_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu9ll_BFu0s, Ip_BFu9ll_BFu0s)
//============================================================================



static void Test_Ip_BFu9s_BFu0c()
{
  {
    init_simple_test("Ip_BFu9s_BFu0c");
    static STRUCT_IF_C Ip_BFu9s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu9s_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_BFu9s_BFu0c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu9s_BFu0c, Ip_BFu9s_BFu0c)
//============================================================================



static void Test_Ip_BFu9s_BFu0i()
{
  {
    init_simple_test("Ip_BFu9s_BFu0i");
    static STRUCT_IF_C Ip_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu9s_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_BFu9s_BFu0i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu9s_BFu0i, Ip_BFu9s_BFu0i)
//============================================================================



static void Test_Ip_BFu9s_BFu0ll()
{
  {
    init_simple_test("Ip_BFu9s_BFu0ll");
    static STRUCT_IF_C Ip_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu9s_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_BFu9s_BFu0ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu9s_BFu0ll, Ip_BFu9s_BFu0ll)
//============================================================================



static void Test_Ip_BFu9s_BFu0s()
{
  {
    init_simple_test("Ip_BFu9s_BFu0s");
    static STRUCT_IF_C Ip_BFu9s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_BFu9s_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_BFu9s_BFu0s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu9s_BFu0s, Ip_BFu9s_BFu0s)
//============================================================================



static void Test_Ip_C_BFu0c()
{
  {
    init_simple_test("Ip_C_BFu0c");
    static STRUCT_IF_C Ip_C_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_C_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_C_BFu0c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_C_BFu0c, Ip_C_BFu0c)
//============================================================================



static void Test_Ip_C_BFu0i()
{
  {
    init_simple_test("Ip_C_BFu0i");
    static STRUCT_IF_C Ip_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_C_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_C_BFu0i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_C_BFu0i, Ip_C_BFu0i)
//============================================================================



static void Test_Ip_C_BFu0ll()
{
  {
    init_simple_test("Ip_C_BFu0ll");
    static STRUCT_IF_C Ip_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_C_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_C_BFu0ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_C_BFu0ll, Ip_C_BFu0ll)
//============================================================================



static void Test_Ip_C_BFu0s()
{
  {
    init_simple_test("Ip_C_BFu0s");
    static STRUCT_IF_C Ip_C_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_C_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_C_BFu0s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_C_BFu0s, Ip_C_BFu0s)
//============================================================================



static void Test_Ip_D_BFu0c()
{
  {
    init_simple_test("Ip_D_BFu0c");
    static STRUCT_IF_C Ip_D_BFu0c lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_D_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_D_BFu0c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_D_BFu0c, Ip_D_BFu0c)
//============================================================================



static void Test_Ip_D_BFu0i()
{
  {
    init_simple_test("Ip_D_BFu0i");
    static STRUCT_IF_C Ip_D_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_D_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_D_BFu0i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_D_BFu0i, Ip_D_BFu0i)
//============================================================================



static void Test_Ip_D_BFu0ll()
{
  {
    init_simple_test("Ip_D_BFu0ll");
    static STRUCT_IF_C Ip_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_D_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_D_BFu0ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_D_BFu0ll, Ip_D_BFu0ll)
//============================================================================



static void Test_Ip_D_BFu0s()
{
  {
    init_simple_test("Ip_D_BFu0s");
    static STRUCT_IF_C Ip_D_BFu0s lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_D_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_D_BFu0s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_D_BFu0s, Ip_D_BFu0s)
//============================================================================



static void Test_Ip_F_BFu0c()
{
  {
    init_simple_test("Ip_F_BFu0c");
    static STRUCT_IF_C Ip_F_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_F_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_F_BFu0c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_F_BFu0c, Ip_F_BFu0c)
//============================================================================



static void Test_Ip_F_BFu0i()
{
  {
    init_simple_test("Ip_F_BFu0i");
    static STRUCT_IF_C Ip_F_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_F_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_F_BFu0i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_F_BFu0i, Ip_F_BFu0i)
//============================================================================



static void Test_Ip_F_BFu0ll()
{
  {
    init_simple_test("Ip_F_BFu0ll");
    static STRUCT_IF_C Ip_F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_F_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_F_BFu0ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_F_BFu0ll, Ip_F_BFu0ll)
//============================================================================



static void Test_Ip_F_BFu0s()
{
  {
    init_simple_test("Ip_F_BFu0s");
    static STRUCT_IF_C Ip_F_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_F_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_F_BFu0s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_F_BFu0s, Ip_F_BFu0s)
//============================================================================



static void Test_Ip_I_BFu0c()
{
  {
    init_simple_test("Ip_I_BFu0c");
    static STRUCT_IF_C Ip_I_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_I_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_I_BFu0c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_I_BFu0c, Ip_I_BFu0c)
//============================================================================



static void Test_Ip_I_BFu0i()
{
  {
    init_simple_test("Ip_I_BFu0i");
    static STRUCT_IF_C Ip_I_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_I_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_I_BFu0i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_I_BFu0i, Ip_I_BFu0i)
//============================================================================



static void Test_Ip_I_BFu0ll()
{
  {
    init_simple_test("Ip_I_BFu0ll");
    static STRUCT_IF_C Ip_I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_I_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_I_BFu0ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_I_BFu0ll, Ip_I_BFu0ll)
//============================================================================



static void Test_Ip_I_BFu0s()
{
  {
    init_simple_test("Ip_I_BFu0s");
    static STRUCT_IF_C Ip_I_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_I_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_I_BFu0s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_I_BFu0s, Ip_I_BFu0s)
//============================================================================



static void Test_Ip_Ip_BFu0c()
{
  {
    init_simple_test("Ip_Ip_BFu0c");
    static STRUCT_IF_C Ip_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Ip_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_Ip_BFu0c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Ip_BFu0c, Ip_Ip_BFu0c)
//============================================================================



static void Test_Ip_Ip_BFu0i()
{
  {
    init_simple_test("Ip_Ip_BFu0i");
    static STRUCT_IF_C Ip_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Ip_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_Ip_BFu0i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Ip_BFu0i, Ip_Ip_BFu0i)
//============================================================================



static void Test_Ip_Ip_BFu0ll()
{
  {
    init_simple_test("Ip_Ip_BFu0ll");
    static STRUCT_IF_C Ip_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Ip_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_Ip_BFu0ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Ip_BFu0ll, Ip_Ip_BFu0ll)
//============================================================================



static void Test_Ip_Ip_BFu0s()
{
  {
    init_simple_test("Ip_Ip_BFu0s");
    static STRUCT_IF_C Ip_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Ip_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_Ip_BFu0s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Ip_BFu0s, Ip_Ip_BFu0s)
//============================================================================



static void Test_Ip_L_BFu0c()
{
  {
    init_simple_test("Ip_L_BFu0c");
    static STRUCT_IF_C Ip_L_BFu0c lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_L_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_L_BFu0c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_L_BFu0c, Ip_L_BFu0c)
//============================================================================



static void Test_Ip_L_BFu0i()
{
  {
    init_simple_test("Ip_L_BFu0i");
    static STRUCT_IF_C Ip_L_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_L_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_L_BFu0i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_L_BFu0i, Ip_L_BFu0i)
//============================================================================



static void Test_Ip_L_BFu0ll()
{
  {
    init_simple_test("Ip_L_BFu0ll");
    static STRUCT_IF_C Ip_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_L_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_L_BFu0ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_L_BFu0ll, Ip_L_BFu0ll)
//============================================================================



static void Test_Ip_L_BFu0s()
{
  {
    init_simple_test("Ip_L_BFu0s");
    static STRUCT_IF_C Ip_L_BFu0s lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_L_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_L_BFu0s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_L_BFu0s, Ip_L_BFu0s)
//============================================================================



static void Test_Ip_S_BFu0c()
{
  {
    init_simple_test("Ip_S_BFu0c");
    static STRUCT_IF_C Ip_S_BFu0c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_S_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_S_BFu0c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_S_BFu0c, Ip_S_BFu0c)
//============================================================================



static void Test_Ip_S_BFu0i()
{
  {
    init_simple_test("Ip_S_BFu0i");
    static STRUCT_IF_C Ip_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_S_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_S_BFu0i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_S_BFu0i, Ip_S_BFu0i)
//============================================================================



static void Test_Ip_S_BFu0ll()
{
  {
    init_simple_test("Ip_S_BFu0ll");
    static STRUCT_IF_C Ip_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_S_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_S_BFu0ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_S_BFu0ll, Ip_S_BFu0ll)
//============================================================================



static void Test_Ip_S_BFu0s()
{
  {
    init_simple_test("Ip_S_BFu0s");
    static STRUCT_IF_C Ip_S_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_S_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_S_BFu0s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_S_BFu0s, Ip_S_BFu0s)
//============================================================================



static void Test_Ip_Uc_BFu0c()
{
  {
    init_simple_test("Ip_Uc_BFu0c");
    static STRUCT_IF_C Ip_Uc_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Uc_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_Uc_BFu0c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Uc_BFu0c, Ip_Uc_BFu0c)
//============================================================================



static void Test_Ip_Uc_BFu0i()
{
  {
    init_simple_test("Ip_Uc_BFu0i");
    static STRUCT_IF_C Ip_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Uc_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_Uc_BFu0i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Uc_BFu0i, Ip_Uc_BFu0i)
//============================================================================



static void Test_Ip_Uc_BFu0ll()
{
  {
    init_simple_test("Ip_Uc_BFu0ll");
    static STRUCT_IF_C Ip_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Uc_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_Uc_BFu0ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Uc_BFu0ll, Ip_Uc_BFu0ll)
//============================================================================



static void Test_Ip_Uc_BFu0s()
{
  {
    init_simple_test("Ip_Uc_BFu0s");
    static STRUCT_IF_C Ip_Uc_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Uc_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_Uc_BFu0s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Uc_BFu0s, Ip_Uc_BFu0s)
//============================================================================



static void Test_Ip_Ui_BFu0c()
{
  {
    init_simple_test("Ip_Ui_BFu0c");
    static STRUCT_IF_C Ip_Ui_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Ui_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_Ui_BFu0c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Ui_BFu0c, Ip_Ui_BFu0c)
//============================================================================



static void Test_Ip_Ui_BFu0i()
{
  {
    init_simple_test("Ip_Ui_BFu0i");
    static STRUCT_IF_C Ip_Ui_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Ui_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_Ui_BFu0i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Ui_BFu0i, Ip_Ui_BFu0i)
//============================================================================



static void Test_Ip_Ui_BFu0ll()
{
  {
    init_simple_test("Ip_Ui_BFu0ll");
    static STRUCT_IF_C Ip_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Ui_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_Ui_BFu0ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Ui_BFu0ll, Ip_Ui_BFu0ll)
//============================================================================



static void Test_Ip_Ui_BFu0s()
{
  {
    init_simple_test("Ip_Ui_BFu0s");
    static STRUCT_IF_C Ip_Ui_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Ui_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_Ui_BFu0s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Ui_BFu0s, Ip_Ui_BFu0s)
//============================================================================



static void Test_Ip_Ul_BFu0c()
{
  {
    init_simple_test("Ip_Ul_BFu0c");
    static STRUCT_IF_C Ip_Ul_BFu0c lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Ul_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_Ul_BFu0c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Ul_BFu0c, Ip_Ul_BFu0c)
//============================================================================



static void Test_Ip_Ul_BFu0i()
{
  {
    init_simple_test("Ip_Ul_BFu0i");
    static STRUCT_IF_C Ip_Ul_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Ul_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_Ul_BFu0i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Ul_BFu0i, Ip_Ul_BFu0i)
//============================================================================



static void Test_Ip_Ul_BFu0ll()
{
  {
    init_simple_test("Ip_Ul_BFu0ll");
    static STRUCT_IF_C Ip_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Ul_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_Ul_BFu0ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Ul_BFu0ll, Ip_Ul_BFu0ll)
//============================================================================



static void Test_Ip_Ul_BFu0s()
{
  {
    init_simple_test("Ip_Ul_BFu0s");
    static STRUCT_IF_C Ip_Ul_BFu0s lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Ul_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_Ul_BFu0s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Ul_BFu0s, Ip_Ul_BFu0s)
//============================================================================



static void Test_Ip_Us_BFu0c()
{
  {
    init_simple_test("Ip_Us_BFu0c");
    static STRUCT_IF_C Ip_Us_BFu0c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Us_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_Us_BFu0c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Us_BFu0c, Ip_Us_BFu0c)
//============================================================================



static void Test_Ip_Us_BFu0i()
{
  {
    init_simple_test("Ip_Us_BFu0i");
    static STRUCT_IF_C Ip_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Us_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_Us_BFu0i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Us_BFu0i, Ip_Us_BFu0i)
//============================================================================



static void Test_Ip_Us_BFu0ll()
{
  {
    init_simple_test("Ip_Us_BFu0ll");
    static STRUCT_IF_C Ip_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Us_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_Us_BFu0ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Us_BFu0ll, Ip_Us_BFu0ll)
//============================================================================



static void Test_Ip_Us_BFu0s()
{
  {
    init_simple_test("Ip_Us_BFu0s");
    static STRUCT_IF_C Ip_Us_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Us_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_Us_BFu0s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Us_BFu0s, Ip_Us_BFu0s)
//============================================================================



static void Test_Ip_Vp_BFu0c()
{
  {
    init_simple_test("Ip_Vp_BFu0c");
    static STRUCT_IF_C Ip_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Vp_BFu0c)");
    check_field_offset(lv, v1, 0, "Ip_Vp_BFu0c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Vp_BFu0c, Ip_Vp_BFu0c)
//============================================================================



static void Test_Ip_Vp_BFu0i()
{
  {
    init_simple_test("Ip_Vp_BFu0i");
    static STRUCT_IF_C Ip_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Vp_BFu0i)");
    check_field_offset(lv, v1, 0, "Ip_Vp_BFu0i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Vp_BFu0i, Ip_Vp_BFu0i)
//============================================================================



static void Test_Ip_Vp_BFu0ll()
{
  {
    init_simple_test("Ip_Vp_BFu0ll");
    static STRUCT_IF_C Ip_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Vp_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ip_Vp_BFu0ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Vp_BFu0ll, Ip_Vp_BFu0ll)
//============================================================================



static void Test_Ip_Vp_BFu0s()
{
  {
    init_simple_test("Ip_Vp_BFu0s");
    static STRUCT_IF_C Ip_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ip_Vp_BFu0s)");
    check_field_offset(lv, v1, 0, "Ip_Vp_BFu0s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Vp_BFu0s, Ip_Vp_BFu0s)
//============================================================================



static void Test_L_BFu0c()
{
  {
    init_simple_test("L_BFu0c");
    static STRUCT_IF_C L_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c, L_BFu0c)
//============================================================================



static void Test_L_BFu0c_BFu0c()
{
  {
    init_simple_test("L_BFu0c_BFu0c");
    static STRUCT_IF_C L_BFu0c_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu0c, L_BFu0c_BFu0c)
//============================================================================



static void Test_L_BFu0c_BFu0i()
{
  {
    init_simple_test("L_BFu0c_BFu0i");
    static STRUCT_IF_C L_BFu0c_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0c_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu0i, L_BFu0c_BFu0i)
//============================================================================



static void Test_L_BFu0c_BFu0ll()
{
  {
    init_simple_test("L_BFu0c_BFu0ll");
    static STRUCT_IF_C L_BFu0c_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0c_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu0ll, L_BFu0c_BFu0ll)
//============================================================================



static void Test_L_BFu0c_BFu0s()
{
  {
    init_simple_test("L_BFu0c_BFu0s");
    static STRUCT_IF_C L_BFu0c_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0c_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu0s, L_BFu0c_BFu0s)
//============================================================================



static void Test_L_BFu0c_BFu15i()
{
  {
    init_simple_test("L_BFu0c_BFu15i");
    static STRUCT_IF_C L_BFu0c_BFu15i lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu15i)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu15i.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu15i, L_BFu0c_BFu15i)
//============================================================================



static void Test_L_BFu0c_BFu15ll()
{
  {
    init_simple_test("L_BFu0c_BFu15ll");
    static STRUCT_IF_C L_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu15ll)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu15ll, L_BFu0c_BFu15ll)
//============================================================================



static void Test_L_BFu0c_BFu15s()
{
  {
    init_simple_test("L_BFu0c_BFu15s");
    static STRUCT_IF_C L_BFu0c_BFu15s lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu15s)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu15s.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu15s, L_BFu0c_BFu15s)
//============================================================================



static void Test_L_BFu0c_BFu16i()
{
  {
    init_simple_test("L_BFu0c_BFu16i");
    static STRUCT_IF_C L_BFu0c_BFu16i lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu16i)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu16i.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu16i, L_BFu0c_BFu16i)
//============================================================================



static void Test_L_BFu0c_BFu16ll()
{
  {
    init_simple_test("L_BFu0c_BFu16ll");
    static STRUCT_IF_C L_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu16ll)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu16ll, L_BFu0c_BFu16ll)
//============================================================================



static void Test_L_BFu0c_BFu16s()
{
  {
    init_simple_test("L_BFu0c_BFu16s");
    static STRUCT_IF_C L_BFu0c_BFu16s lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu16s)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu16s.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu16s, L_BFu0c_BFu16s)
//============================================================================



static void Test_L_BFu0c_BFu17i()
{
  {
    init_simple_test("L_BFu0c_BFu17i");
    static STRUCT_IF_C L_BFu0c_BFu17i lv;
    check2(sizeof(lv), 11, "sizeof(L_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu17i)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu17i.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu17i, L_BFu0c_BFu17i)
//============================================================================



static void Test_L_BFu0c_BFu17ll()
{
  {
    init_simple_test("L_BFu0c_BFu17ll");
    static STRUCT_IF_C L_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 11, "sizeof(L_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu17ll)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu17ll, L_BFu0c_BFu17ll)
//============================================================================



static void Test_L_BFu0c_BFu1c()
{
  {
    init_simple_test("L_BFu0c_BFu1c");
    static STRUCT_IF_C L_BFu0c_BFu1c lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu1c)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu1c.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu1c, L_BFu0c_BFu1c)
//============================================================================



static void Test_L_BFu0c_BFu1i()
{
  {
    init_simple_test("L_BFu0c_BFu1i");
    static STRUCT_IF_C L_BFu0c_BFu1i lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu1i)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu1i.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu1i, L_BFu0c_BFu1i)
//============================================================================



static void Test_L_BFu0c_BFu1ll()
{
  {
    init_simple_test("L_BFu0c_BFu1ll");
    static STRUCT_IF_C L_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu1ll)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu1ll, L_BFu0c_BFu1ll)
//============================================================================



static void Test_L_BFu0c_BFu1s()
{
  {
    init_simple_test("L_BFu0c_BFu1s");
    static STRUCT_IF_C L_BFu0c_BFu1s lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu1s)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu1s.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu1s, L_BFu0c_BFu1s)
//============================================================================



static void Test_L_BFu0c_BFu31i()
{
  {
    init_simple_test("L_BFu0c_BFu31i");
    static STRUCT_IF_C L_BFu0c_BFu31i lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu31i)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu31i.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu31i, L_BFu0c_BFu31i)
//============================================================================



static void Test_L_BFu0c_BFu31ll()
{
  {
    init_simple_test("L_BFu0c_BFu31ll");
    static STRUCT_IF_C L_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu31ll)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu31ll, L_BFu0c_BFu31ll)
//============================================================================



static void Test_L_BFu0c_BFu32i()
{
  {
    init_simple_test("L_BFu0c_BFu32i");
    static STRUCT_IF_C L_BFu0c_BFu32i lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu32i)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu32i.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu32i, L_BFu0c_BFu32i)
//============================================================================



static void Test_L_BFu0c_BFu32ll()
{
  {
    init_simple_test("L_BFu0c_BFu32ll");
    static STRUCT_IF_C L_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu32ll)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu32ll, L_BFu0c_BFu32ll)
//============================================================================



static void Test_L_BFu0c_BFu33()
{
  {
    init_simple_test("L_BFu0c_BFu33");
    static STRUCT_IF_C L_BFu0c_BFu33 lv;
    check2(sizeof(lv), 13, "sizeof(L_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu33)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu33.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "L_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "L_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu33, L_BFu0c_BFu33)
//============================================================================



static void Test_L_BFu0c_BFu7c()
{
  {
    init_simple_test("L_BFu0c_BFu7c");
    static STRUCT_IF_C L_BFu0c_BFu7c lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu7c)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu7c.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu7c, L_BFu0c_BFu7c)
//============================================================================



static void Test_L_BFu0c_BFu7i()
{
  {
    init_simple_test("L_BFu0c_BFu7i");
    static STRUCT_IF_C L_BFu0c_BFu7i lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu7i)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu7i.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu7i, L_BFu0c_BFu7i)
//============================================================================



static void Test_L_BFu0c_BFu7ll()
{
  {
    init_simple_test("L_BFu0c_BFu7ll");
    static STRUCT_IF_C L_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu7ll)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu7ll, L_BFu0c_BFu7ll)
//============================================================================



static void Test_L_BFu0c_BFu7s()
{
  {
    init_simple_test("L_BFu0c_BFu7s");
    static STRUCT_IF_C L_BFu0c_BFu7s lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu7s)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu7s.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu7s, L_BFu0c_BFu7s)
//============================================================================



static void Test_L_BFu0c_BFu8c()
{
  {
    init_simple_test("L_BFu0c_BFu8c");
    static STRUCT_IF_C L_BFu0c_BFu8c lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu8c)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu8c.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu8c, L_BFu0c_BFu8c)
//============================================================================



static void Test_L_BFu0c_BFu8i()
{
  {
    init_simple_test("L_BFu0c_BFu8i");
    static STRUCT_IF_C L_BFu0c_BFu8i lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu8i)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu8i.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu8i, L_BFu0c_BFu8i)
//============================================================================



static void Test_L_BFu0c_BFu8ll()
{
  {
    init_simple_test("L_BFu0c_BFu8ll");
    static STRUCT_IF_C L_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu8ll)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu8ll, L_BFu0c_BFu8ll)
//============================================================================



static void Test_L_BFu0c_BFu8s()
{
  {
    init_simple_test("L_BFu0c_BFu8s");
    static STRUCT_IF_C L_BFu0c_BFu8s lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu8s)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu8s.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu8s, L_BFu0c_BFu8s)
//============================================================================



static void Test_L_BFu0c_BFu9i()
{
  {
    init_simple_test("L_BFu0c_BFu9i");
    static STRUCT_IF_C L_BFu0c_BFu9i lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu9i)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu9i.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu9i, L_BFu0c_BFu9i)
//============================================================================



static void Test_L_BFu0c_BFu9ll()
{
  {
    init_simple_test("L_BFu0c_BFu9ll");
    static STRUCT_IF_C L_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu9ll)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu9ll, L_BFu0c_BFu9ll)
//============================================================================



static void Test_L_BFu0c_BFu9s()
{
  {
    init_simple_test("L_BFu0c_BFu9s");
    static STRUCT_IF_C L_BFu0c_BFu9s lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_BFu9s)");
    check_field_offset(lv, v1, 0, "L_BFu0c_BFu9s.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_BFu9s, L_BFu0c_BFu9s)
//============================================================================



static void Test_L_BFu0c_C()
{
  {
    init_simple_test("L_BFu0c_C");
    static STRUCT_IF_C L_BFu0c_C lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_C)");
    check_field_offset(lv, v1, 0, "L_BFu0c_C.v1");
    check_field_offset(lv, v2, 8, "L_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_C, L_BFu0c_C)
//============================================================================



static void Test_L_BFu0c_D()
{
  {
    init_simple_test("L_BFu0c_D");
    static STRUCT_IF_C L_BFu0c_D lv;
    check2(sizeof(lv), 16, "sizeof(L_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_D)");
    check_field_offset(lv, v1, 0, "L_BFu0c_D.v1");
    check_field_offset(lv, v2, 8, "L_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_D, L_BFu0c_D)
//============================================================================



static void Test_L_BFu0c_F()
{
  {
    init_simple_test("L_BFu0c_F");
    static STRUCT_IF_C L_BFu0c_F lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_F)");
    check_field_offset(lv, v1, 0, "L_BFu0c_F.v1");
    check_field_offset(lv, v2, 8, "L_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_F, L_BFu0c_F)
//============================================================================



static void Test_L_BFu0c_I()
{
  {
    init_simple_test("L_BFu0c_I");
    static STRUCT_IF_C L_BFu0c_I lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_I)");
    check_field_offset(lv, v1, 0, "L_BFu0c_I.v1");
    check_field_offset(lv, v2, 8, "L_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_I, L_BFu0c_I)
//============================================================================



static void Test_L_BFu0c_Ip()
{
  {
    init_simple_test("L_BFu0c_Ip");
    static STRUCT_IF_C L_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_Ip)");
    check_field_offset(lv, v1, 0, "L_BFu0c_Ip.v1");
    check_field_offset(lv, v2, 8, "L_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_Ip, L_BFu0c_Ip)
//============================================================================



static void Test_L_BFu0c_L()
{
  {
    init_simple_test("L_BFu0c_L");
    static STRUCT_IF_C L_BFu0c_L lv;
    check2(sizeof(lv), 16, "sizeof(L_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_L)");
    check_field_offset(lv, v1, 0, "L_BFu0c_L.v1");
    check_field_offset(lv, v2, 8, "L_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_L, L_BFu0c_L)
//============================================================================



static void Test_L_BFu0c_S()
{
  {
    init_simple_test("L_BFu0c_S");
    static STRUCT_IF_C L_BFu0c_S lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_S)");
    check_field_offset(lv, v1, 0, "L_BFu0c_S.v1");
    check_field_offset(lv, v2, 8, "L_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_S, L_BFu0c_S)
//============================================================================



static void Test_L_BFu0c_Uc()
{
  {
    init_simple_test("L_BFu0c_Uc");
    static STRUCT_IF_C L_BFu0c_Uc lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_Uc)");
    check_field_offset(lv, v1, 0, "L_BFu0c_Uc.v1");
    check_field_offset(lv, v2, 8, "L_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_Uc, L_BFu0c_Uc)
//============================================================================



static void Test_L_BFu0c_Ui()
{
  {
    init_simple_test("L_BFu0c_Ui");
    static STRUCT_IF_C L_BFu0c_Ui lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_Ui)");
    check_field_offset(lv, v1, 0, "L_BFu0c_Ui.v1");
    check_field_offset(lv, v2, 8, "L_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_Ui, L_BFu0c_Ui)
//============================================================================



static void Test_L_BFu0c_Ul()
{
  {
    init_simple_test("L_BFu0c_Ul");
    static STRUCT_IF_C L_BFu0c_Ul lv;
    check2(sizeof(lv), 16, "sizeof(L_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_Ul)");
    check_field_offset(lv, v1, 0, "L_BFu0c_Ul.v1");
    check_field_offset(lv, v2, 8, "L_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_Ul, L_BFu0c_Ul)
//============================================================================



static void Test_L_BFu0c_Us()
{
  {
    init_simple_test("L_BFu0c_Us");
    static STRUCT_IF_C L_BFu0c_Us lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_Us)");
    check_field_offset(lv, v1, 0, "L_BFu0c_Us.v1");
    check_field_offset(lv, v2, 8, "L_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_Us, L_BFu0c_Us)
//============================================================================



static void Test_L_BFu0c_Vp()
{
  {
    init_simple_test("L_BFu0c_Vp");
    static STRUCT_IF_C L_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu0c_Vp)");
    check_field_offset(lv, v1, 0, "L_BFu0c_Vp.v1");
    check_field_offset(lv, v2, 8, "L_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0c_Vp, L_BFu0c_Vp)
//============================================================================



static void Test_L_BFu0i()
{
  {
    init_simple_test("L_BFu0i");
    static STRUCT_IF_C L_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i, L_BFu0i)
//============================================================================



static void Test_L_BFu0i_BFu0c()
{
  {
    init_simple_test("L_BFu0i_BFu0c");
    static STRUCT_IF_C L_BFu0i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu0c, L_BFu0i_BFu0c)
//============================================================================



static void Test_L_BFu0i_BFu0i()
{
  {
    init_simple_test("L_BFu0i_BFu0i");
    static STRUCT_IF_C L_BFu0i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu0i, L_BFu0i_BFu0i)
//============================================================================



static void Test_L_BFu0i_BFu0ll()
{
  {
    init_simple_test("L_BFu0i_BFu0ll");
    static STRUCT_IF_C L_BFu0i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu0ll, L_BFu0i_BFu0ll)
//============================================================================



static void Test_L_BFu0i_BFu0s()
{
  {
    init_simple_test("L_BFu0i_BFu0s");
    static STRUCT_IF_C L_BFu0i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu0s, L_BFu0i_BFu0s)
//============================================================================



static void Test_L_BFu0i_BFu15i()
{
  {
    init_simple_test("L_BFu0i_BFu15i");
    static STRUCT_IF_C L_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu15i)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu15i.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu15i, L_BFu0i_BFu15i)
//============================================================================



static void Test_L_BFu0i_BFu15ll()
{
  {
    init_simple_test("L_BFu0i_BFu15ll");
    static STRUCT_IF_C L_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu15ll)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu15ll, L_BFu0i_BFu15ll)
//============================================================================



static void Test_L_BFu0i_BFu15s()
{
  {
    init_simple_test("L_BFu0i_BFu15s");
    static STRUCT_IF_C L_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu15s)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu15s.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu15s, L_BFu0i_BFu15s)
//============================================================================



static void Test_L_BFu0i_BFu16i()
{
  {
    init_simple_test("L_BFu0i_BFu16i");
    static STRUCT_IF_C L_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu16i)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu16i.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu16i, L_BFu0i_BFu16i)
//============================================================================



static void Test_L_BFu0i_BFu16ll()
{
  {
    init_simple_test("L_BFu0i_BFu16ll");
    static STRUCT_IF_C L_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu16ll)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu16ll, L_BFu0i_BFu16ll)
//============================================================================



static void Test_L_BFu0i_BFu16s()
{
  {
    init_simple_test("L_BFu0i_BFu16s");
    static STRUCT_IF_C L_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu16s)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu16s.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu16s, L_BFu0i_BFu16s)
//============================================================================



static void Test_L_BFu0i_BFu17i()
{
  {
    init_simple_test("L_BFu0i_BFu17i");
    static STRUCT_IF_C L_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(L_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu17i)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu17i.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu17i, L_BFu0i_BFu17i)
//============================================================================



static void Test_L_BFu0i_BFu17ll()
{
  {
    init_simple_test("L_BFu0i_BFu17ll");
    static STRUCT_IF_C L_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(L_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu17ll)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu17ll, L_BFu0i_BFu17ll)
//============================================================================



static void Test_L_BFu0i_BFu1c()
{
  {
    init_simple_test("L_BFu0i_BFu1c");
    static STRUCT_IF_C L_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu1c)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu1c.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu1c, L_BFu0i_BFu1c)
//============================================================================



static void Test_L_BFu0i_BFu1i()
{
  {
    init_simple_test("L_BFu0i_BFu1i");
    static STRUCT_IF_C L_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu1i)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu1i.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu1i, L_BFu0i_BFu1i)
//============================================================================



static void Test_L_BFu0i_BFu1ll()
{
  {
    init_simple_test("L_BFu0i_BFu1ll");
    static STRUCT_IF_C L_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu1ll)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu1ll, L_BFu0i_BFu1ll)
//============================================================================



static void Test_L_BFu0i_BFu1s()
{
  {
    init_simple_test("L_BFu0i_BFu1s");
    static STRUCT_IF_C L_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu1s)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu1s.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu1s, L_BFu0i_BFu1s)
//============================================================================



static void Test_L_BFu0i_BFu31i()
{
  {
    init_simple_test("L_BFu0i_BFu31i");
    static STRUCT_IF_C L_BFu0i_BFu31i lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu31i)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu31i.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu31i, L_BFu0i_BFu31i)
//============================================================================



static void Test_L_BFu0i_BFu31ll()
{
  {
    init_simple_test("L_BFu0i_BFu31ll");
    static STRUCT_IF_C L_BFu0i_BFu31ll lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu31ll)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu31ll, L_BFu0i_BFu31ll)
//============================================================================



static void Test_L_BFu0i_BFu32i()
{
  {
    init_simple_test("L_BFu0i_BFu32i");
    static STRUCT_IF_C L_BFu0i_BFu32i lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu32i)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu32i.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu32i, L_BFu0i_BFu32i)
//============================================================================



static void Test_L_BFu0i_BFu32ll()
{
  {
    init_simple_test("L_BFu0i_BFu32ll");
    static STRUCT_IF_C L_BFu0i_BFu32ll lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu32ll)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu32ll, L_BFu0i_BFu32ll)
//============================================================================



static void Test_L_BFu0i_BFu33()
{
  {
    init_simple_test("L_BFu0i_BFu33");
    static STRUCT_IF_C L_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,13), "sizeof(L_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu33)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu33.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "L_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "L_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu33, L_BFu0i_BFu33)
//============================================================================



static void Test_L_BFu0i_BFu7c()
{
  {
    init_simple_test("L_BFu0i_BFu7c");
    static STRUCT_IF_C L_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu7c)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu7c.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu7c, L_BFu0i_BFu7c)
//============================================================================



static void Test_L_BFu0i_BFu7i()
{
  {
    init_simple_test("L_BFu0i_BFu7i");
    static STRUCT_IF_C L_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu7i)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu7i.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu7i, L_BFu0i_BFu7i)
//============================================================================



static void Test_L_BFu0i_BFu7ll()
{
  {
    init_simple_test("L_BFu0i_BFu7ll");
    static STRUCT_IF_C L_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu7ll)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu7ll, L_BFu0i_BFu7ll)
//============================================================================



static void Test_L_BFu0i_BFu7s()
{
  {
    init_simple_test("L_BFu0i_BFu7s");
    static STRUCT_IF_C L_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu7s)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu7s.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu7s, L_BFu0i_BFu7s)
//============================================================================



static void Test_L_BFu0i_BFu8c()
{
  {
    init_simple_test("L_BFu0i_BFu8c");
    static STRUCT_IF_C L_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu8c)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu8c.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu8c, L_BFu0i_BFu8c)
//============================================================================



static void Test_L_BFu0i_BFu8i()
{
  {
    init_simple_test("L_BFu0i_BFu8i");
    static STRUCT_IF_C L_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu8i)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu8i.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu8i, L_BFu0i_BFu8i)
//============================================================================



static void Test_L_BFu0i_BFu8ll()
{
  {
    init_simple_test("L_BFu0i_BFu8ll");
    static STRUCT_IF_C L_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu8ll)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu8ll, L_BFu0i_BFu8ll)
//============================================================================



static void Test_L_BFu0i_BFu8s()
{
  {
    init_simple_test("L_BFu0i_BFu8s");
    static STRUCT_IF_C L_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu8s)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu8s.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu8s, L_BFu0i_BFu8s)
//============================================================================



static void Test_L_BFu0i_BFu9i()
{
  {
    init_simple_test("L_BFu0i_BFu9i");
    static STRUCT_IF_C L_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu9i)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu9i.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu9i, L_BFu0i_BFu9i)
//============================================================================



static void Test_L_BFu0i_BFu9ll()
{
  {
    init_simple_test("L_BFu0i_BFu9ll");
    static STRUCT_IF_C L_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu9ll)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu9ll, L_BFu0i_BFu9ll)
//============================================================================



static void Test_L_BFu0i_BFu9s()
{
  {
    init_simple_test("L_BFu0i_BFu9s");
    static STRUCT_IF_C L_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_BFu9s)");
    check_field_offset(lv, v1, 0, "L_BFu0i_BFu9s.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_BFu9s, L_BFu0i_BFu9s)
//============================================================================



static void Test_L_BFu0i_C()
{
  {
    init_simple_test("L_BFu0i_C");
    static STRUCT_IF_C L_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_C)");
    check_field_offset(lv, v1, 0, "L_BFu0i_C.v1");
    check_field_offset(lv, v2, 8, "L_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_C, L_BFu0i_C)
//============================================================================



static void Test_L_BFu0i_D()
{
  {
    init_simple_test("L_BFu0i_D");
    static STRUCT_IF_C L_BFu0i_D lv;
    check2(sizeof(lv), 16, "sizeof(L_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_D)");
    check_field_offset(lv, v1, 0, "L_BFu0i_D.v1");
    check_field_offset(lv, v2, 8, "L_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_D, L_BFu0i_D)
//============================================================================



static void Test_L_BFu0i_F()
{
  {
    init_simple_test("L_BFu0i_F");
    static STRUCT_IF_C L_BFu0i_F lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_F)");
    check_field_offset(lv, v1, 0, "L_BFu0i_F.v1");
    check_field_offset(lv, v2, 8, "L_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_F, L_BFu0i_F)
//============================================================================



static void Test_L_BFu0i_I()
{
  {
    init_simple_test("L_BFu0i_I");
    static STRUCT_IF_C L_BFu0i_I lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_I)");
    check_field_offset(lv, v1, 0, "L_BFu0i_I.v1");
    check_field_offset(lv, v2, 8, "L_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_I, L_BFu0i_I)
//============================================================================



static void Test_L_BFu0i_Ip()
{
  {
    init_simple_test("L_BFu0i_Ip");
    static STRUCT_IF_C L_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_Ip)");
    check_field_offset(lv, v1, 0, "L_BFu0i_Ip.v1");
    check_field_offset(lv, v2, 8, "L_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_Ip, L_BFu0i_Ip)
//============================================================================



static void Test_L_BFu0i_L()
{
  {
    init_simple_test("L_BFu0i_L");
    static STRUCT_IF_C L_BFu0i_L lv;
    check2(sizeof(lv), 16, "sizeof(L_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_L)");
    check_field_offset(lv, v1, 0, "L_BFu0i_L.v1");
    check_field_offset(lv, v2, 8, "L_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_L, L_BFu0i_L)
//============================================================================



static void Test_L_BFu0i_S()
{
  {
    init_simple_test("L_BFu0i_S");
    static STRUCT_IF_C L_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_S)");
    check_field_offset(lv, v1, 0, "L_BFu0i_S.v1");
    check_field_offset(lv, v2, 8, "L_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_S, L_BFu0i_S)
//============================================================================



static void Test_L_BFu0i_Uc()
{
  {
    init_simple_test("L_BFu0i_Uc");
    static STRUCT_IF_C L_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_Uc)");
    check_field_offset(lv, v1, 0, "L_BFu0i_Uc.v1");
    check_field_offset(lv, v2, 8, "L_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_Uc, L_BFu0i_Uc)
//============================================================================



static void Test_L_BFu0i_Ui()
{
  {
    init_simple_test("L_BFu0i_Ui");
    static STRUCT_IF_C L_BFu0i_Ui lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_Ui)");
    check_field_offset(lv, v1, 0, "L_BFu0i_Ui.v1");
    check_field_offset(lv, v2, 8, "L_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_Ui, L_BFu0i_Ui)
//============================================================================



static void Test_L_BFu0i_Ul()
{
  {
    init_simple_test("L_BFu0i_Ul");
    static STRUCT_IF_C L_BFu0i_Ul lv;
    check2(sizeof(lv), 16, "sizeof(L_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_Ul)");
    check_field_offset(lv, v1, 0, "L_BFu0i_Ul.v1");
    check_field_offset(lv, v2, 8, "L_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_Ul, L_BFu0i_Ul)
//============================================================================



static void Test_L_BFu0i_Us()
{
  {
    init_simple_test("L_BFu0i_Us");
    static STRUCT_IF_C L_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_Us)");
    check_field_offset(lv, v1, 0, "L_BFu0i_Us.v1");
    check_field_offset(lv, v2, 8, "L_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_Us, L_BFu0i_Us)
//============================================================================



static void Test_L_BFu0i_Vp()
{
  {
    init_simple_test("L_BFu0i_Vp");
    static STRUCT_IF_C L_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0i_Vp)");
    check_field_offset(lv, v1, 0, "L_BFu0i_Vp.v1");
    check_field_offset(lv, v2, 8, "L_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0i_Vp, L_BFu0i_Vp)
//============================================================================



static void Test_L_BFu0ll()
{
  {
    init_simple_test("L_BFu0ll");
    static STRUCT_IF_C L_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll, L_BFu0ll)
//============================================================================



static void Test_L_BFu0ll_BFu0c()
{
  {
    init_simple_test("L_BFu0ll_BFu0c");
    static STRUCT_IF_C L_BFu0ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu0c, L_BFu0ll_BFu0c)
//============================================================================



static void Test_L_BFu0ll_BFu0i()
{
  {
    init_simple_test("L_BFu0ll_BFu0i");
    static STRUCT_IF_C L_BFu0ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu0i, L_BFu0ll_BFu0i)
//============================================================================



static void Test_L_BFu0ll_BFu0ll()
{
  {
    init_simple_test("L_BFu0ll_BFu0ll");
    static STRUCT_IF_C L_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu0ll, L_BFu0ll_BFu0ll)
//============================================================================



static void Test_L_BFu0ll_BFu0s()
{
  {
    init_simple_test("L_BFu0ll_BFu0s");
    static STRUCT_IF_C L_BFu0ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu0s, L_BFu0ll_BFu0s)
//============================================================================



static void Test_L_BFu0ll_BFu15i()
{
  {
    init_simple_test("L_BFu0ll_BFu15i");
    static STRUCT_IF_C L_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu15i)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu15i, L_BFu0ll_BFu15i)
//============================================================================



static void Test_L_BFu0ll_BFu15ll()
{
  {
    init_simple_test("L_BFu0ll_BFu15ll");
    static STRUCT_IF_C L_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu15ll, L_BFu0ll_BFu15ll)
//============================================================================



static void Test_L_BFu0ll_BFu15s()
{
  {
    init_simple_test("L_BFu0ll_BFu15s");
    static STRUCT_IF_C L_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu15s)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu15s, L_BFu0ll_BFu15s)
//============================================================================



static void Test_L_BFu0ll_BFu16i()
{
  {
    init_simple_test("L_BFu0ll_BFu16i");
    static STRUCT_IF_C L_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu16i)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu16i, L_BFu0ll_BFu16i)
//============================================================================



static void Test_L_BFu0ll_BFu16ll()
{
  {
    init_simple_test("L_BFu0ll_BFu16ll");
    static STRUCT_IF_C L_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu16ll, L_BFu0ll_BFu16ll)
//============================================================================



static void Test_L_BFu0ll_BFu16s()
{
  {
    init_simple_test("L_BFu0ll_BFu16s");
    static STRUCT_IF_C L_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu16s)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu16s, L_BFu0ll_BFu16s)
//============================================================================



static void Test_L_BFu0ll_BFu17i()
{
  {
    init_simple_test("L_BFu0ll_BFu17i");
    static STRUCT_IF_C L_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(L_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu17i)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu17i, L_BFu0ll_BFu17i)
//============================================================================



static void Test_L_BFu0ll_BFu17ll()
{
  {
    init_simple_test("L_BFu0ll_BFu17ll");
    static STRUCT_IF_C L_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(L_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu17ll, L_BFu0ll_BFu17ll)
//============================================================================



static void Test_L_BFu0ll_BFu1c()
{
  {
    init_simple_test("L_BFu0ll_BFu1c");
    static STRUCT_IF_C L_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu1c)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu1c, L_BFu0ll_BFu1c)
//============================================================================



static void Test_L_BFu0ll_BFu1i()
{
  {
    init_simple_test("L_BFu0ll_BFu1i");
    static STRUCT_IF_C L_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu1i)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu1i, L_BFu0ll_BFu1i)
//============================================================================



static void Test_L_BFu0ll_BFu1ll()
{
  {
    init_simple_test("L_BFu0ll_BFu1ll");
    static STRUCT_IF_C L_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu1ll, L_BFu0ll_BFu1ll)
//============================================================================



static void Test_L_BFu0ll_BFu1s()
{
  {
    init_simple_test("L_BFu0ll_BFu1s");
    static STRUCT_IF_C L_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu1s)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu1s, L_BFu0ll_BFu1s)
//============================================================================



static void Test_L_BFu0ll_BFu31i()
{
  {
    init_simple_test("L_BFu0ll_BFu31i");
    static STRUCT_IF_C L_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu31i)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu31i, L_BFu0ll_BFu31i)
//============================================================================



static void Test_L_BFu0ll_BFu31ll()
{
  {
    init_simple_test("L_BFu0ll_BFu31ll");
    static STRUCT_IF_C L_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu31ll, L_BFu0ll_BFu31ll)
//============================================================================



static void Test_L_BFu0ll_BFu32i()
{
  {
    init_simple_test("L_BFu0ll_BFu32i");
    static STRUCT_IF_C L_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu32i)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu32i, L_BFu0ll_BFu32i)
//============================================================================



static void Test_L_BFu0ll_BFu32ll()
{
  {
    init_simple_test("L_BFu0ll_BFu32ll");
    static STRUCT_IF_C L_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu32ll, L_BFu0ll_BFu32ll)
//============================================================================



static void Test_L_BFu0ll_BFu33()
{
  {
    init_simple_test("L_BFu0ll_BFu33");
    static STRUCT_IF_C L_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,13), "sizeof(L_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu33)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu33.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "L_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "L_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu33, L_BFu0ll_BFu33)
//============================================================================



static void Test_L_BFu0ll_BFu7c()
{
  {
    init_simple_test("L_BFu0ll_BFu7c");
    static STRUCT_IF_C L_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu7c)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu7c, L_BFu0ll_BFu7c)
//============================================================================



static void Test_L_BFu0ll_BFu7i()
{
  {
    init_simple_test("L_BFu0ll_BFu7i");
    static STRUCT_IF_C L_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu7i)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu7i, L_BFu0ll_BFu7i)
//============================================================================



static void Test_L_BFu0ll_BFu7ll()
{
  {
    init_simple_test("L_BFu0ll_BFu7ll");
    static STRUCT_IF_C L_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu7ll, L_BFu0ll_BFu7ll)
//============================================================================



static void Test_L_BFu0ll_BFu7s()
{
  {
    init_simple_test("L_BFu0ll_BFu7s");
    static STRUCT_IF_C L_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu7s)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu7s, L_BFu0ll_BFu7s)
//============================================================================



static void Test_L_BFu0ll_BFu8c()
{
  {
    init_simple_test("L_BFu0ll_BFu8c");
    static STRUCT_IF_C L_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu8c)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu8c, L_BFu0ll_BFu8c)
//============================================================================



static void Test_L_BFu0ll_BFu8i()
{
  {
    init_simple_test("L_BFu0ll_BFu8i");
    static STRUCT_IF_C L_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu8i)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu8i, L_BFu0ll_BFu8i)
//============================================================================



static void Test_L_BFu0ll_BFu8ll()
{
  {
    init_simple_test("L_BFu0ll_BFu8ll");
    static STRUCT_IF_C L_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu8ll, L_BFu0ll_BFu8ll)
//============================================================================



static void Test_L_BFu0ll_BFu8s()
{
  {
    init_simple_test("L_BFu0ll_BFu8s");
    static STRUCT_IF_C L_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu8s)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu8s, L_BFu0ll_BFu8s)
//============================================================================



static void Test_L_BFu0ll_BFu9i()
{
  {
    init_simple_test("L_BFu0ll_BFu9i");
    static STRUCT_IF_C L_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu9i)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu9i, L_BFu0ll_BFu9i)
//============================================================================



static void Test_L_BFu0ll_BFu9ll()
{
  {
    init_simple_test("L_BFu0ll_BFu9ll");
    static STRUCT_IF_C L_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu9ll, L_BFu0ll_BFu9ll)
//============================================================================



static void Test_L_BFu0ll_BFu9s()
{
  {
    init_simple_test("L_BFu0ll_BFu9s");
    static STRUCT_IF_C L_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_BFu9s)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_BFu9s, L_BFu0ll_BFu9s)
//============================================================================



static void Test_L_BFu0ll_C()
{
  {
    init_simple_test("L_BFu0ll_C");
    static STRUCT_IF_C L_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_C)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_C.v1");
    check_field_offset(lv, v2, 8, "L_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_C, L_BFu0ll_C)
//============================================================================



static void Test_L_BFu0ll_D()
{
  {
    init_simple_test("L_BFu0ll_D");
    static STRUCT_IF_C L_BFu0ll_D lv;
    check2(sizeof(lv), 16, "sizeof(L_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_D)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_D.v1");
    check_field_offset(lv, v2, 8, "L_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_D, L_BFu0ll_D)
//============================================================================



static void Test_L_BFu0ll_F()
{
  {
    init_simple_test("L_BFu0ll_F");
    static STRUCT_IF_C L_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_F)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_F.v1");
    check_field_offset(lv, v2, 8, "L_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_F, L_BFu0ll_F)
//============================================================================



static void Test_L_BFu0ll_I()
{
  {
    init_simple_test("L_BFu0ll_I");
    static STRUCT_IF_C L_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_I)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_I.v1");
    check_field_offset(lv, v2, 8, "L_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_I, L_BFu0ll_I)
//============================================================================



static void Test_L_BFu0ll_Ip()
{
  {
    init_simple_test("L_BFu0ll_Ip");
    static STRUCT_IF_C L_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_Ip)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_Ip.v1");
    check_field_offset(lv, v2, 8, "L_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_Ip, L_BFu0ll_Ip)
//============================================================================



static void Test_L_BFu0ll_L()
{
  {
    init_simple_test("L_BFu0ll_L");
    static STRUCT_IF_C L_BFu0ll_L lv;
    check2(sizeof(lv), 16, "sizeof(L_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_L)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_L.v1");
    check_field_offset(lv, v2, 8, "L_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_L, L_BFu0ll_L)
//============================================================================



static void Test_L_BFu0ll_S()
{
  {
    init_simple_test("L_BFu0ll_S");
    static STRUCT_IF_C L_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_S)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_S.v1");
    check_field_offset(lv, v2, 8, "L_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_S, L_BFu0ll_S)
//============================================================================



static void Test_L_BFu0ll_Uc()
{
  {
    init_simple_test("L_BFu0ll_Uc");
    static STRUCT_IF_C L_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_Uc)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_Uc.v1");
    check_field_offset(lv, v2, 8, "L_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_Uc, L_BFu0ll_Uc)
//============================================================================



static void Test_L_BFu0ll_Ui()
{
  {
    init_simple_test("L_BFu0ll_Ui");
    static STRUCT_IF_C L_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_Ui)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_Ui.v1");
    check_field_offset(lv, v2, 8, "L_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_Ui, L_BFu0ll_Ui)
//============================================================================



static void Test_L_BFu0ll_Ul()
{
  {
    init_simple_test("L_BFu0ll_Ul");
    static STRUCT_IF_C L_BFu0ll_Ul lv;
    check2(sizeof(lv), 16, "sizeof(L_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_Ul)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_Ul.v1");
    check_field_offset(lv, v2, 8, "L_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_Ul, L_BFu0ll_Ul)
//============================================================================



static void Test_L_BFu0ll_Us()
{
  {
    init_simple_test("L_BFu0ll_Us");
    static STRUCT_IF_C L_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_Us)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_Us.v1");
    check_field_offset(lv, v2, 8, "L_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_Us, L_BFu0ll_Us)
//============================================================================



static void Test_L_BFu0ll_Vp()
{
  {
    init_simple_test("L_BFu0ll_Vp");
    static STRUCT_IF_C L_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0ll_Vp)");
    check_field_offset(lv, v1, 0, "L_BFu0ll_Vp.v1");
    check_field_offset(lv, v2, 8, "L_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0ll_Vp, L_BFu0ll_Vp)
//============================================================================



static void Test_L_BFu0s()
{
  {
    init_simple_test("L_BFu0s");
    static STRUCT_IF_C L_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s, L_BFu0s)
//============================================================================



static void Test_L_BFu0s_BFu0c()
{
  {
    init_simple_test("L_BFu0s_BFu0c");
    static STRUCT_IF_C L_BFu0s_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu0c, L_BFu0s_BFu0c)
//============================================================================



static void Test_L_BFu0s_BFu0i()
{
  {
    init_simple_test("L_BFu0s_BFu0i");
    static STRUCT_IF_C L_BFu0s_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu0i, L_BFu0s_BFu0i)
//============================================================================



static void Test_L_BFu0s_BFu0ll()
{
  {
    init_simple_test("L_BFu0s_BFu0ll");
    static STRUCT_IF_C L_BFu0s_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu0ll, L_BFu0s_BFu0ll)
//============================================================================



static void Test_L_BFu0s_BFu0s()
{
  {
    init_simple_test("L_BFu0s_BFu0s");
    static STRUCT_IF_C L_BFu0s_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(L_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu0s, L_BFu0s_BFu0s)
//============================================================================



static void Test_L_BFu0s_BFu15i()
{
  {
    init_simple_test("L_BFu0s_BFu15i");
    static STRUCT_IF_C L_BFu0s_BFu15i lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu15i)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu15i.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu15i, L_BFu0s_BFu15i)
//============================================================================



static void Test_L_BFu0s_BFu15ll()
{
  {
    init_simple_test("L_BFu0s_BFu15ll");
    static STRUCT_IF_C L_BFu0s_BFu15ll lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu15ll)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu15ll, L_BFu0s_BFu15ll)
//============================================================================



static void Test_L_BFu0s_BFu15s()
{
  {
    init_simple_test("L_BFu0s_BFu15s");
    static STRUCT_IF_C L_BFu0s_BFu15s lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu15s)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu15s.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu15s, L_BFu0s_BFu15s)
//============================================================================



static void Test_L_BFu0s_BFu16i()
{
  {
    init_simple_test("L_BFu0s_BFu16i");
    static STRUCT_IF_C L_BFu0s_BFu16i lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu16i)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu16i.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu16i, L_BFu0s_BFu16i)
//============================================================================



static void Test_L_BFu0s_BFu16ll()
{
  {
    init_simple_test("L_BFu0s_BFu16ll");
    static STRUCT_IF_C L_BFu0s_BFu16ll lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu16ll)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu16ll, L_BFu0s_BFu16ll)
//============================================================================



static void Test_L_BFu0s_BFu16s()
{
  {
    init_simple_test("L_BFu0s_BFu16s");
    static STRUCT_IF_C L_BFu0s_BFu16s lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu16s)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu16s.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu16s, L_BFu0s_BFu16s)
//============================================================================



static void Test_L_BFu0s_BFu17i()
{
  {
    init_simple_test("L_BFu0s_BFu17i");
    static STRUCT_IF_C L_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(L_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu17i)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu17i.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu17i, L_BFu0s_BFu17i)
//============================================================================



static void Test_L_BFu0s_BFu17ll()
{
  {
    init_simple_test("L_BFu0s_BFu17ll");
    static STRUCT_IF_C L_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(L_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu17ll)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu17ll, L_BFu0s_BFu17ll)
//============================================================================



static void Test_L_BFu0s_BFu1c()
{
  {
    init_simple_test("L_BFu0s_BFu1c");
    static STRUCT_IF_C L_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu1c)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu1c.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu1c, L_BFu0s_BFu1c)
//============================================================================



static void Test_L_BFu0s_BFu1i()
{
  {
    init_simple_test("L_BFu0s_BFu1i");
    static STRUCT_IF_C L_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu1i)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu1i.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu1i, L_BFu0s_BFu1i)
//============================================================================



static void Test_L_BFu0s_BFu1ll()
{
  {
    init_simple_test("L_BFu0s_BFu1ll");
    static STRUCT_IF_C L_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu1ll)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu1ll, L_BFu0s_BFu1ll)
//============================================================================



static void Test_L_BFu0s_BFu1s()
{
  {
    init_simple_test("L_BFu0s_BFu1s");
    static STRUCT_IF_C L_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu1s)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu1s.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu1s, L_BFu0s_BFu1s)
//============================================================================



static void Test_L_BFu0s_BFu31i()
{
  {
    init_simple_test("L_BFu0s_BFu31i");
    static STRUCT_IF_C L_BFu0s_BFu31i lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu31i)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu31i.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu31i, L_BFu0s_BFu31i)
//============================================================================



static void Test_L_BFu0s_BFu31ll()
{
  {
    init_simple_test("L_BFu0s_BFu31ll");
    static STRUCT_IF_C L_BFu0s_BFu31ll lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu31ll)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu31ll, L_BFu0s_BFu31ll)
//============================================================================



static void Test_L_BFu0s_BFu32i()
{
  {
    init_simple_test("L_BFu0s_BFu32i");
    static STRUCT_IF_C L_BFu0s_BFu32i lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu32i)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu32i.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu32i, L_BFu0s_BFu32i)
//============================================================================



static void Test_L_BFu0s_BFu32ll()
{
  {
    init_simple_test("L_BFu0s_BFu32ll");
    static STRUCT_IF_C L_BFu0s_BFu32ll lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu32ll)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu32ll, L_BFu0s_BFu32ll)
//============================================================================



static void Test_L_BFu0s_BFu33()
{
  {
    init_simple_test("L_BFu0s_BFu33");
    static STRUCT_IF_C L_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,13), "sizeof(L_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu33)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu33.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "L_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "L_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu33, L_BFu0s_BFu33)
//============================================================================



static void Test_L_BFu0s_BFu7c()
{
  {
    init_simple_test("L_BFu0s_BFu7c");
    static STRUCT_IF_C L_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu7c)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu7c.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu7c, L_BFu0s_BFu7c)
//============================================================================



static void Test_L_BFu0s_BFu7i()
{
  {
    init_simple_test("L_BFu0s_BFu7i");
    static STRUCT_IF_C L_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu7i)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu7i.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu7i, L_BFu0s_BFu7i)
//============================================================================



static void Test_L_BFu0s_BFu7ll()
{
  {
    init_simple_test("L_BFu0s_BFu7ll");
    static STRUCT_IF_C L_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu7ll)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu7ll, L_BFu0s_BFu7ll)
//============================================================================



static void Test_L_BFu0s_BFu7s()
{
  {
    init_simple_test("L_BFu0s_BFu7s");
    static STRUCT_IF_C L_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu7s)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu7s.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu7s, L_BFu0s_BFu7s)
//============================================================================



static void Test_L_BFu0s_BFu8c()
{
  {
    init_simple_test("L_BFu0s_BFu8c");
    static STRUCT_IF_C L_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu8c)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu8c.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu8c, L_BFu0s_BFu8c)
//============================================================================



static void Test_L_BFu0s_BFu8i()
{
  {
    init_simple_test("L_BFu0s_BFu8i");
    static STRUCT_IF_C L_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu8i)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu8i.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu8i, L_BFu0s_BFu8i)
//============================================================================



static void Test_L_BFu0s_BFu8ll()
{
  {
    init_simple_test("L_BFu0s_BFu8ll");
    static STRUCT_IF_C L_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu8ll)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu8ll, L_BFu0s_BFu8ll)
//============================================================================



static void Test_L_BFu0s_BFu8s()
{
  {
    init_simple_test("L_BFu0s_BFu8s");
    static STRUCT_IF_C L_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu8s)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu8s.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu8s, L_BFu0s_BFu8s)
//============================================================================



static void Test_L_BFu0s_BFu9i()
{
  {
    init_simple_test("L_BFu0s_BFu9i");
    static STRUCT_IF_C L_BFu0s_BFu9i lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu9i)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu9i.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu9i, L_BFu0s_BFu9i)
//============================================================================



static void Test_L_BFu0s_BFu9ll()
{
  {
    init_simple_test("L_BFu0s_BFu9ll");
    static STRUCT_IF_C L_BFu0s_BFu9ll lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu9ll)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu9ll, L_BFu0s_BFu9ll)
//============================================================================



static void Test_L_BFu0s_BFu9s()
{
  {
    init_simple_test("L_BFu0s_BFu9s");
    static STRUCT_IF_C L_BFu0s_BFu9s lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_BFu9s)");
    check_field_offset(lv, v1, 0, "L_BFu0s_BFu9s.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_BFu9s, L_BFu0s_BFu9s)
//============================================================================



static void Test_L_BFu0s_C()
{
  {
    init_simple_test("L_BFu0s_C");
    static STRUCT_IF_C L_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_C)");
    check_field_offset(lv, v1, 0, "L_BFu0s_C.v1");
    check_field_offset(lv, v2, 8, "L_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_C, L_BFu0s_C)
//============================================================================



static void Test_L_BFu0s_D()
{
  {
    init_simple_test("L_BFu0s_D");
    static STRUCT_IF_C L_BFu0s_D lv;
    check2(sizeof(lv), 16, "sizeof(L_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_D)");
    check_field_offset(lv, v1, 0, "L_BFu0s_D.v1");
    check_field_offset(lv, v2, 8, "L_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_D, L_BFu0s_D)
//============================================================================



static void Test_L_BFu0s_F()
{
  {
    init_simple_test("L_BFu0s_F");
    static STRUCT_IF_C L_BFu0s_F lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_F)");
    check_field_offset(lv, v1, 0, "L_BFu0s_F.v1");
    check_field_offset(lv, v2, 8, "L_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_F, L_BFu0s_F)
//============================================================================



static void Test_L_BFu0s_I()
{
  {
    init_simple_test("L_BFu0s_I");
    static STRUCT_IF_C L_BFu0s_I lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_I)");
    check_field_offset(lv, v1, 0, "L_BFu0s_I.v1");
    check_field_offset(lv, v2, 8, "L_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_I, L_BFu0s_I)
//============================================================================



static void Test_L_BFu0s_Ip()
{
  {
    init_simple_test("L_BFu0s_Ip");
    static STRUCT_IF_C L_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_Ip)");
    check_field_offset(lv, v1, 0, "L_BFu0s_Ip.v1");
    check_field_offset(lv, v2, 8, "L_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_Ip, L_BFu0s_Ip)
//============================================================================



static void Test_L_BFu0s_L()
{
  {
    init_simple_test("L_BFu0s_L");
    static STRUCT_IF_C L_BFu0s_L lv;
    check2(sizeof(lv), 16, "sizeof(L_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_L)");
    check_field_offset(lv, v1, 0, "L_BFu0s_L.v1");
    check_field_offset(lv, v2, 8, "L_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_L, L_BFu0s_L)
//============================================================================



static void Test_L_BFu0s_S()
{
  {
    init_simple_test("L_BFu0s_S");
    static STRUCT_IF_C L_BFu0s_S lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_S)");
    check_field_offset(lv, v1, 0, "L_BFu0s_S.v1");
    check_field_offset(lv, v2, 8, "L_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_S, L_BFu0s_S)
//============================================================================



static void Test_L_BFu0s_Uc()
{
  {
    init_simple_test("L_BFu0s_Uc");
    static STRUCT_IF_C L_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(L_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_Uc)");
    check_field_offset(lv, v1, 0, "L_BFu0s_Uc.v1");
    check_field_offset(lv, v2, 8, "L_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_Uc, L_BFu0s_Uc)
//============================================================================



static void Test_L_BFu0s_Ui()
{
  {
    init_simple_test("L_BFu0s_Ui");
    static STRUCT_IF_C L_BFu0s_Ui lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_Ui)");
    check_field_offset(lv, v1, 0, "L_BFu0s_Ui.v1");
    check_field_offset(lv, v2, 8, "L_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_Ui, L_BFu0s_Ui)
//============================================================================



static void Test_L_BFu0s_Ul()
{
  {
    init_simple_test("L_BFu0s_Ul");
    static STRUCT_IF_C L_BFu0s_Ul lv;
    check2(sizeof(lv), 16, "sizeof(L_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_Ul)");
    check_field_offset(lv, v1, 0, "L_BFu0s_Ul.v1");
    check_field_offset(lv, v2, 8, "L_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_Ul, L_BFu0s_Ul)
//============================================================================



static void Test_L_BFu0s_Us()
{
  {
    init_simple_test("L_BFu0s_Us");
    static STRUCT_IF_C L_BFu0s_Us lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_Us)");
    check_field_offset(lv, v1, 0, "L_BFu0s_Us.v1");
    check_field_offset(lv, v2, 8, "L_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_Us, L_BFu0s_Us)
//============================================================================



static void Test_L_BFu0s_Vp()
{
  {
    init_simple_test("L_BFu0s_Vp");
    static STRUCT_IF_C L_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu0s_Vp)");
    check_field_offset(lv, v1, 0, "L_BFu0s_Vp.v1");
    check_field_offset(lv, v2, 8, "L_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu0s_Vp, L_BFu0s_Vp)
//============================================================================



static void Test_L_BFu15i_BFu0c()
{
  {
    init_simple_test("L_BFu15i_BFu0c");
    static STRUCT_IF_C L_BFu15i_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu15i_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu15i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu15i_BFu0c, L_BFu15i_BFu0c)
//============================================================================



static void Test_L_BFu15i_BFu0i()
{
  {
    init_simple_test("L_BFu15i_BFu0i");
    static STRUCT_IF_C L_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu15i_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu15i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu15i_BFu0i, L_BFu15i_BFu0i)
//============================================================================



static void Test_L_BFu15i_BFu0ll()
{
  {
    init_simple_test("L_BFu15i_BFu0ll");
    static STRUCT_IF_C L_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu15i_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu15i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu15i_BFu0ll, L_BFu15i_BFu0ll)
//============================================================================



static void Test_L_BFu15i_BFu0s()
{
  {
    init_simple_test("L_BFu15i_BFu0s");
    static STRUCT_IF_C L_BFu15i_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu15i_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu15i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu15i_BFu0s, L_BFu15i_BFu0s)
//============================================================================



static void Test_L_BFu15ll_BFu0c()
{
  {
    init_simple_test("L_BFu15ll_BFu0c");
    static STRUCT_IF_C L_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu15ll_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu15ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu15ll_BFu0c, L_BFu15ll_BFu0c)
//============================================================================



static void Test_L_BFu15ll_BFu0i()
{
  {
    init_simple_test("L_BFu15ll_BFu0i");
    static STRUCT_IF_C L_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu15ll_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu15ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu15ll_BFu0i, L_BFu15ll_BFu0i)
//============================================================================



static void Test_L_BFu15ll_BFu0ll()
{
  {
    init_simple_test("L_BFu15ll_BFu0ll");
    static STRUCT_IF_C L_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu15ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu15ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu15ll_BFu0ll, L_BFu15ll_BFu0ll)
//============================================================================



static void Test_L_BFu15ll_BFu0s()
{
  {
    init_simple_test("L_BFu15ll_BFu0s");
    static STRUCT_IF_C L_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu15ll_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu15ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu15ll_BFu0s, L_BFu15ll_BFu0s)
//============================================================================



static void Test_L_BFu15s_BFu0c()
{
  {
    init_simple_test("L_BFu15s_BFu0c");
    static STRUCT_IF_C L_BFu15s_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu15s_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu15s_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu15s_BFu0c, L_BFu15s_BFu0c)
//============================================================================



static void Test_L_BFu15s_BFu0i()
{
  {
    init_simple_test("L_BFu15s_BFu0i");
    static STRUCT_IF_C L_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu15s_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu15s_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu15s_BFu0i, L_BFu15s_BFu0i)
//============================================================================



static void Test_L_BFu15s_BFu0ll()
{
  {
    init_simple_test("L_BFu15s_BFu0ll");
    static STRUCT_IF_C L_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu15s_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu15s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu15s_BFu0ll, L_BFu15s_BFu0ll)
//============================================================================



static void Test_L_BFu15s_BFu0s()
{
  {
    init_simple_test("L_BFu15s_BFu0s");
    static STRUCT_IF_C L_BFu15s_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu15s_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu15s_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu15s_BFu0s, L_BFu15s_BFu0s)
//============================================================================



static void Test_L_BFu16i_BFu0c()
{
  {
    init_simple_test("L_BFu16i_BFu0c");
    static STRUCT_IF_C L_BFu16i_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu16i_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu16i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu16i_BFu0c, L_BFu16i_BFu0c)
//============================================================================



static void Test_L_BFu16i_BFu0i()
{
  {
    init_simple_test("L_BFu16i_BFu0i");
    static STRUCT_IF_C L_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu16i_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu16i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu16i_BFu0i, L_BFu16i_BFu0i)
//============================================================================



static void Test_L_BFu16i_BFu0ll()
{
  {
    init_simple_test("L_BFu16i_BFu0ll");
    static STRUCT_IF_C L_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu16i_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu16i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu16i_BFu0ll, L_BFu16i_BFu0ll)
//============================================================================



static void Test_L_BFu16i_BFu0s()
{
  {
    init_simple_test("L_BFu16i_BFu0s");
    static STRUCT_IF_C L_BFu16i_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu16i_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu16i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu16i_BFu0s, L_BFu16i_BFu0s)
//============================================================================



static void Test_L_BFu16ll_BFu0c()
{
  {
    init_simple_test("L_BFu16ll_BFu0c");
    static STRUCT_IF_C L_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu16ll_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu16ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu16ll_BFu0c, L_BFu16ll_BFu0c)
//============================================================================



static void Test_L_BFu16ll_BFu0i()
{
  {
    init_simple_test("L_BFu16ll_BFu0i");
    static STRUCT_IF_C L_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu16ll_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu16ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu16ll_BFu0i, L_BFu16ll_BFu0i)
//============================================================================



static void Test_L_BFu16ll_BFu0ll()
{
  {
    init_simple_test("L_BFu16ll_BFu0ll");
    static STRUCT_IF_C L_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu16ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu16ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu16ll_BFu0ll, L_BFu16ll_BFu0ll)
//============================================================================



static void Test_L_BFu16ll_BFu0s()
{
  {
    init_simple_test("L_BFu16ll_BFu0s");
    static STRUCT_IF_C L_BFu16ll_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu16ll_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu16ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu16ll_BFu0s, L_BFu16ll_BFu0s)
//============================================================================



static void Test_L_BFu16s_BFu0c()
{
  {
    init_simple_test("L_BFu16s_BFu0c");
    static STRUCT_IF_C L_BFu16s_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu16s_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu16s_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu16s_BFu0c, L_BFu16s_BFu0c)
//============================================================================



static void Test_L_BFu16s_BFu0i()
{
  {
    init_simple_test("L_BFu16s_BFu0i");
    static STRUCT_IF_C L_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu16s_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu16s_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu16s_BFu0i, L_BFu16s_BFu0i)
//============================================================================



static void Test_L_BFu16s_BFu0ll()
{
  {
    init_simple_test("L_BFu16s_BFu0ll");
    static STRUCT_IF_C L_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu16s_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu16s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu16s_BFu0ll, L_BFu16s_BFu0ll)
//============================================================================



static void Test_L_BFu16s_BFu0s()
{
  {
    init_simple_test("L_BFu16s_BFu0s");
    static STRUCT_IF_C L_BFu16s_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu16s_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu16s_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu16s_BFu0s, L_BFu16s_BFu0s)
//============================================================================



static void Test_L_BFu17i_BFu0c()
{
  {
    init_simple_test("L_BFu17i_BFu0c");
    static STRUCT_IF_C L_BFu17i_BFu0c lv;
    check2(sizeof(lv), 11, "sizeof(L_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu17i_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu17i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu17i_BFu0c, L_BFu17i_BFu0c)
//============================================================================



static void Test_L_BFu17i_BFu0i()
{
  {
    init_simple_test("L_BFu17i_BFu0i");
    static STRUCT_IF_C L_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu17i_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu17i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu17i_BFu0i, L_BFu17i_BFu0i)
//============================================================================



static void Test_L_BFu17i_BFu0ll()
{
  {
    init_simple_test("L_BFu17i_BFu0ll");
    static STRUCT_IF_C L_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu17i_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu17i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu17i_BFu0ll, L_BFu17i_BFu0ll)
//============================================================================



static void Test_L_BFu17i_BFu0s()
{
  {
    init_simple_test("L_BFu17i_BFu0s");
    static STRUCT_IF_C L_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu17i_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu17i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu17i_BFu0s, L_BFu17i_BFu0s)
//============================================================================



static void Test_L_BFu17ll_BFu0c()
{
  {
    init_simple_test("L_BFu17ll_BFu0c");
    static STRUCT_IF_C L_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 11, "sizeof(L_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu17ll_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu17ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu17ll_BFu0c, L_BFu17ll_BFu0c)
//============================================================================



static void Test_L_BFu17ll_BFu0i()
{
  {
    init_simple_test("L_BFu17ll_BFu0i");
    static STRUCT_IF_C L_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu17ll_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu17ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu17ll_BFu0i, L_BFu17ll_BFu0i)
//============================================================================



static void Test_L_BFu17ll_BFu0ll()
{
  {
    init_simple_test("L_BFu17ll_BFu0ll");
    static STRUCT_IF_C L_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu17ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu17ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu17ll_BFu0ll, L_BFu17ll_BFu0ll)
//============================================================================



static void Test_L_BFu17ll_BFu0s()
{
  {
    init_simple_test("L_BFu17ll_BFu0s");
    static STRUCT_IF_C L_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu17ll_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu17ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu17ll_BFu0s, L_BFu17ll_BFu0s)
//============================================================================



static void Test_L_BFu1c_BFu0c()
{
  {
    init_simple_test("L_BFu1c_BFu0c");
    static STRUCT_IF_C L_BFu1c_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu1c_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu1c_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1c_BFu0c, L_BFu1c_BFu0c)
//============================================================================



static void Test_L_BFu1c_BFu0i()
{
  {
    init_simple_test("L_BFu1c_BFu0i");
    static STRUCT_IF_C L_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu1c_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu1c_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1c_BFu0i, L_BFu1c_BFu0i)
//============================================================================



static void Test_L_BFu1c_BFu0ll()
{
  {
    init_simple_test("L_BFu1c_BFu0ll");
    static STRUCT_IF_C L_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu1c_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu1c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1c_BFu0ll, L_BFu1c_BFu0ll)
//============================================================================



static void Test_L_BFu1c_BFu0s()
{
  {
    init_simple_test("L_BFu1c_BFu0s");
    static STRUCT_IF_C L_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu1c_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu1c_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1c_BFu0s, L_BFu1c_BFu0s)
//============================================================================



static void Test_L_BFu1i_BFu0c()
{
  {
    init_simple_test("L_BFu1i_BFu0c");
    static STRUCT_IF_C L_BFu1i_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu1i_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu1i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1i_BFu0c, L_BFu1i_BFu0c)
//============================================================================



static void Test_L_BFu1i_BFu0i()
{
  {
    init_simple_test("L_BFu1i_BFu0i");
    static STRUCT_IF_C L_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu1i_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu1i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1i_BFu0i, L_BFu1i_BFu0i)
//============================================================================



static void Test_L_BFu1i_BFu0ll()
{
  {
    init_simple_test("L_BFu1i_BFu0ll");
    static STRUCT_IF_C L_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu1i_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu1i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1i_BFu0ll, L_BFu1i_BFu0ll)
//============================================================================



static void Test_L_BFu1i_BFu0s()
{
  {
    init_simple_test("L_BFu1i_BFu0s");
    static STRUCT_IF_C L_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu1i_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu1i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1i_BFu0s, L_BFu1i_BFu0s)
//============================================================================



static void Test_L_BFu1ll_BFu0c()
{
  {
    init_simple_test("L_BFu1ll_BFu0c");
    static STRUCT_IF_C L_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu1ll_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu1ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1ll_BFu0c, L_BFu1ll_BFu0c)
//============================================================================



static void Test_L_BFu1ll_BFu0i()
{
  {
    init_simple_test("L_BFu1ll_BFu0i");
    static STRUCT_IF_C L_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu1ll_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu1ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1ll_BFu0i, L_BFu1ll_BFu0i)
//============================================================================



static void Test_L_BFu1ll_BFu0ll()
{
  {
    init_simple_test("L_BFu1ll_BFu0ll");
    static STRUCT_IF_C L_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu1ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu1ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1ll_BFu0ll, L_BFu1ll_BFu0ll)
//============================================================================



static void Test_L_BFu1ll_BFu0s()
{
  {
    init_simple_test("L_BFu1ll_BFu0s");
    static STRUCT_IF_C L_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu1ll_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu1ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1ll_BFu0s, L_BFu1ll_BFu0s)
//============================================================================



static void Test_L_BFu1s_BFu0c()
{
  {
    init_simple_test("L_BFu1s_BFu0c");
    static STRUCT_IF_C L_BFu1s_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu1s_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu1s_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1s_BFu0c, L_BFu1s_BFu0c)
//============================================================================



static void Test_L_BFu1s_BFu0i()
{
  {
    init_simple_test("L_BFu1s_BFu0i");
    static STRUCT_IF_C L_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu1s_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu1s_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1s_BFu0i, L_BFu1s_BFu0i)
//============================================================================



static void Test_L_BFu1s_BFu0ll()
{
  {
    init_simple_test("L_BFu1s_BFu0ll");
    static STRUCT_IF_C L_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu1s_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu1s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1s_BFu0ll, L_BFu1s_BFu0ll)
//============================================================================



static void Test_L_BFu1s_BFu0s()
{
  {
    init_simple_test("L_BFu1s_BFu0s");
    static STRUCT_IF_C L_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu1s_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu1s_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1s_BFu0s, L_BFu1s_BFu0s)
//============================================================================



static void Test_L_BFu31i_BFu0c()
{
  {
    init_simple_test("L_BFu31i_BFu0c");
    static STRUCT_IF_C L_BFu31i_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu31i_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu31i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu31i_BFu0c, L_BFu31i_BFu0c)
//============================================================================



static void Test_L_BFu31i_BFu0i()
{
  {
    init_simple_test("L_BFu31i_BFu0i");
    static STRUCT_IF_C L_BFu31i_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu31i_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu31i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu31i_BFu0i, L_BFu31i_BFu0i)
//============================================================================



static void Test_L_BFu31i_BFu0ll()
{
  {
    init_simple_test("L_BFu31i_BFu0ll");
    static STRUCT_IF_C L_BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu31i_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu31i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu31i_BFu0ll, L_BFu31i_BFu0ll)
//============================================================================



static void Test_L_BFu31i_BFu0s()
{
  {
    init_simple_test("L_BFu31i_BFu0s");
    static STRUCT_IF_C L_BFu31i_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu31i_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu31i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu31i_BFu0s, L_BFu31i_BFu0s)
//============================================================================



static void Test_L_BFu31ll_BFu0c()
{
  {
    init_simple_test("L_BFu31ll_BFu0c");
    static STRUCT_IF_C L_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu31ll_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu31ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu31ll_BFu0c, L_BFu31ll_BFu0c)
//============================================================================



static void Test_L_BFu31ll_BFu0i()
{
  {
    init_simple_test("L_BFu31ll_BFu0i");
    static STRUCT_IF_C L_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu31ll_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu31ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu31ll_BFu0i, L_BFu31ll_BFu0i)
//============================================================================



static void Test_L_BFu31ll_BFu0ll()
{
  {
    init_simple_test("L_BFu31ll_BFu0ll");
    static STRUCT_IF_C L_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu31ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu31ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu31ll_BFu0ll, L_BFu31ll_BFu0ll)
//============================================================================



static void Test_L_BFu31ll_BFu0s()
{
  {
    init_simple_test("L_BFu31ll_BFu0s");
    static STRUCT_IF_C L_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu31ll_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu31ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu31ll_BFu0s, L_BFu31ll_BFu0s)
//============================================================================



static void Test_L_BFu32i_BFu0c()
{
  {
    init_simple_test("L_BFu32i_BFu0c");
    static STRUCT_IF_C L_BFu32i_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu32i_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu32i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu32i_BFu0c, L_BFu32i_BFu0c)
//============================================================================



static void Test_L_BFu32i_BFu0i()
{
  {
    init_simple_test("L_BFu32i_BFu0i");
    static STRUCT_IF_C L_BFu32i_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu32i_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu32i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu32i_BFu0i, L_BFu32i_BFu0i)
//============================================================================



static void Test_L_BFu32i_BFu0ll()
{
  {
    init_simple_test("L_BFu32i_BFu0ll");
    static STRUCT_IF_C L_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu32i_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu32i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu32i_BFu0ll, L_BFu32i_BFu0ll)
//============================================================================



static void Test_L_BFu32i_BFu0s()
{
  {
    init_simple_test("L_BFu32i_BFu0s");
    static STRUCT_IF_C L_BFu32i_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu32i_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu32i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu32i_BFu0s, L_BFu32i_BFu0s)
//============================================================================



static void Test_L_BFu32ll_BFu0c()
{
  {
    init_simple_test("L_BFu32ll_BFu0c");
    static STRUCT_IF_C L_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu32ll_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu32ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu32ll_BFu0c, L_BFu32ll_BFu0c)
//============================================================================



static void Test_L_BFu32ll_BFu0i()
{
  {
    init_simple_test("L_BFu32ll_BFu0i");
    static STRUCT_IF_C L_BFu32ll_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu32ll_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu32ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu32ll_BFu0i, L_BFu32ll_BFu0i)
//============================================================================



static void Test_L_BFu32ll_BFu0ll()
{
  {
    init_simple_test("L_BFu32ll_BFu0ll");
    static STRUCT_IF_C L_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu32ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu32ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu32ll_BFu0ll, L_BFu32ll_BFu0ll)
//============================================================================



static void Test_L_BFu32ll_BFu0s()
{
  {
    init_simple_test("L_BFu32ll_BFu0s");
    static STRUCT_IF_C L_BFu32ll_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu32ll_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu32ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu32ll_BFu0s, L_BFu32ll_BFu0s)
//============================================================================



static void Test_L_BFu33_BFu0c()
{
  {
    init_simple_test("L_BFu33_BFu0c");
    static STRUCT_IF_C L_BFu33_BFu0c lv;
    check2(sizeof(lv), 13, "sizeof(L_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu33_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu33_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "L_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "L_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu33_BFu0c, L_BFu33_BFu0c)
//============================================================================



static void Test_L_BFu33_BFu0i()
{
  {
    init_simple_test("L_BFu33_BFu0i");
    static STRUCT_IF_C L_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,16), "sizeof(L_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu33_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu33_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "L_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "L_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu33_BFu0i, L_BFu33_BFu0i)
//============================================================================



static void Test_L_BFu33_BFu0ll()
{
  {
    init_simple_test("L_BFu33_BFu0ll");
    static STRUCT_IF_C L_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,16), "sizeof(L_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu33_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu33_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "L_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "L_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu33_BFu0ll, L_BFu33_BFu0ll)
//============================================================================



static void Test_L_BFu33_BFu0s()
{
  {
    init_simple_test("L_BFu33_BFu0s");
    static STRUCT_IF_C L_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(14,14), "sizeof(L_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu33_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu33_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "L_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "L_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu33_BFu0s, L_BFu33_BFu0s)
//============================================================================



static void Test_L_BFu7c_BFu0c()
{
  {
    init_simple_test("L_BFu7c_BFu0c");
    static STRUCT_IF_C L_BFu7c_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu7c_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu7c_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7c_BFu0c, L_BFu7c_BFu0c)
//============================================================================



static void Test_L_BFu7c_BFu0i()
{
  {
    init_simple_test("L_BFu7c_BFu0i");
    static STRUCT_IF_C L_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu7c_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu7c_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7c_BFu0i, L_BFu7c_BFu0i)
//============================================================================



static void Test_L_BFu7c_BFu0ll()
{
  {
    init_simple_test("L_BFu7c_BFu0ll");
    static STRUCT_IF_C L_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu7c_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu7c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7c_BFu0ll, L_BFu7c_BFu0ll)
//============================================================================



static void Test_L_BFu7c_BFu0s()
{
  {
    init_simple_test("L_BFu7c_BFu0s");
    static STRUCT_IF_C L_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu7c_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu7c_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7c_BFu0s, L_BFu7c_BFu0s)
//============================================================================



static void Test_L_BFu7i_BFu0c()
{
  {
    init_simple_test("L_BFu7i_BFu0c");
    static STRUCT_IF_C L_BFu7i_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu7i_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu7i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7i_BFu0c, L_BFu7i_BFu0c)
//============================================================================



static void Test_L_BFu7i_BFu0i()
{
  {
    init_simple_test("L_BFu7i_BFu0i");
    static STRUCT_IF_C L_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu7i_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu7i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7i_BFu0i, L_BFu7i_BFu0i)
//============================================================================



static void Test_L_BFu7i_BFu0ll()
{
  {
    init_simple_test("L_BFu7i_BFu0ll");
    static STRUCT_IF_C L_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu7i_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu7i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7i_BFu0ll, L_BFu7i_BFu0ll)
//============================================================================



static void Test_L_BFu7i_BFu0s()
{
  {
    init_simple_test("L_BFu7i_BFu0s");
    static STRUCT_IF_C L_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu7i_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu7i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7i_BFu0s, L_BFu7i_BFu0s)
//============================================================================



static void Test_L_BFu7ll_BFu0c()
{
  {
    init_simple_test("L_BFu7ll_BFu0c");
    static STRUCT_IF_C L_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu7ll_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu7ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7ll_BFu0c, L_BFu7ll_BFu0c)
//============================================================================



static void Test_L_BFu7ll_BFu0i()
{
  {
    init_simple_test("L_BFu7ll_BFu0i");
    static STRUCT_IF_C L_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu7ll_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu7ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7ll_BFu0i, L_BFu7ll_BFu0i)
//============================================================================



static void Test_L_BFu7ll_BFu0ll()
{
  {
    init_simple_test("L_BFu7ll_BFu0ll");
    static STRUCT_IF_C L_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu7ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu7ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7ll_BFu0ll, L_BFu7ll_BFu0ll)
//============================================================================



static void Test_L_BFu7ll_BFu0s()
{
  {
    init_simple_test("L_BFu7ll_BFu0s");
    static STRUCT_IF_C L_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu7ll_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu7ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7ll_BFu0s, L_BFu7ll_BFu0s)
//============================================================================



static void Test_L_BFu7s_BFu0c()
{
  {
    init_simple_test("L_BFu7s_BFu0c");
    static STRUCT_IF_C L_BFu7s_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu7s_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu7s_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7s_BFu0c, L_BFu7s_BFu0c)
//============================================================================



static void Test_L_BFu7s_BFu0i()
{
  {
    init_simple_test("L_BFu7s_BFu0i");
    static STRUCT_IF_C L_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu7s_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu7s_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7s_BFu0i, L_BFu7s_BFu0i)
//============================================================================



static void Test_L_BFu7s_BFu0ll()
{
  {
    init_simple_test("L_BFu7s_BFu0ll");
    static STRUCT_IF_C L_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu7s_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu7s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7s_BFu0ll, L_BFu7s_BFu0ll)
//============================================================================



static void Test_L_BFu7s_BFu0s()
{
  {
    init_simple_test("L_BFu7s_BFu0s");
    static STRUCT_IF_C L_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu7s_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu7s_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7s_BFu0s, L_BFu7s_BFu0s)
//============================================================================



static void Test_L_BFu8c_BFu0c()
{
  {
    init_simple_test("L_BFu8c_BFu0c");
    static STRUCT_IF_C L_BFu8c_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu8c_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu8c_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8c_BFu0c, L_BFu8c_BFu0c)
//============================================================================



static void Test_L_BFu8c_BFu0i()
{
  {
    init_simple_test("L_BFu8c_BFu0i");
    static STRUCT_IF_C L_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu8c_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu8c_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8c_BFu0i, L_BFu8c_BFu0i)
//============================================================================



static void Test_L_BFu8c_BFu0ll()
{
  {
    init_simple_test("L_BFu8c_BFu0ll");
    static STRUCT_IF_C L_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu8c_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu8c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8c_BFu0ll, L_BFu8c_BFu0ll)
//============================================================================



static void Test_L_BFu8c_BFu0s()
{
  {
    init_simple_test("L_BFu8c_BFu0s");
    static STRUCT_IF_C L_BFu8c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu8c_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu8c_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8c_BFu0s, L_BFu8c_BFu0s)
//============================================================================



static void Test_L_BFu8i_BFu0c()
{
  {
    init_simple_test("L_BFu8i_BFu0c");
    static STRUCT_IF_C L_BFu8i_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu8i_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu8i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8i_BFu0c, L_BFu8i_BFu0c)
//============================================================================



static void Test_L_BFu8i_BFu0i()
{
  {
    init_simple_test("L_BFu8i_BFu0i");
    static STRUCT_IF_C L_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu8i_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu8i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8i_BFu0i, L_BFu8i_BFu0i)
//============================================================================



static void Test_L_BFu8i_BFu0ll()
{
  {
    init_simple_test("L_BFu8i_BFu0ll");
    static STRUCT_IF_C L_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu8i_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu8i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8i_BFu0ll, L_BFu8i_BFu0ll)
//============================================================================



static void Test_L_BFu8i_BFu0s()
{
  {
    init_simple_test("L_BFu8i_BFu0s");
    static STRUCT_IF_C L_BFu8i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu8i_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu8i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8i_BFu0s, L_BFu8i_BFu0s)
//============================================================================



static void Test_L_BFu8ll_BFu0c()
{
  {
    init_simple_test("L_BFu8ll_BFu0c");
    static STRUCT_IF_C L_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu8ll_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu8ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8ll_BFu0c, L_BFu8ll_BFu0c)
//============================================================================



static void Test_L_BFu8ll_BFu0i()
{
  {
    init_simple_test("L_BFu8ll_BFu0i");
    static STRUCT_IF_C L_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu8ll_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu8ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8ll_BFu0i, L_BFu8ll_BFu0i)
//============================================================================



static void Test_L_BFu8ll_BFu0ll()
{
  {
    init_simple_test("L_BFu8ll_BFu0ll");
    static STRUCT_IF_C L_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu8ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu8ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8ll_BFu0ll, L_BFu8ll_BFu0ll)
//============================================================================



static void Test_L_BFu8ll_BFu0s()
{
  {
    init_simple_test("L_BFu8ll_BFu0s");
    static STRUCT_IF_C L_BFu8ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu8ll_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu8ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8ll_BFu0s, L_BFu8ll_BFu0s)
//============================================================================



static void Test_L_BFu8s_BFu0c()
{
  {
    init_simple_test("L_BFu8s_BFu0c");
    static STRUCT_IF_C L_BFu8s_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu8s_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu8s_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8s_BFu0c, L_BFu8s_BFu0c)
//============================================================================



static void Test_L_BFu8s_BFu0i()
{
  {
    init_simple_test("L_BFu8s_BFu0i");
    static STRUCT_IF_C L_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu8s_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu8s_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8s_BFu0i, L_BFu8s_BFu0i)
//============================================================================



static void Test_L_BFu8s_BFu0ll()
{
  {
    init_simple_test("L_BFu8s_BFu0ll");
    static STRUCT_IF_C L_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu8s_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu8s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8s_BFu0ll, L_BFu8s_BFu0ll)
//============================================================================



static void Test_L_BFu8s_BFu0s()
{
  {
    init_simple_test("L_BFu8s_BFu0s");
    static STRUCT_IF_C L_BFu8s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu8s_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu8s_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8s_BFu0s, L_BFu8s_BFu0s)
//============================================================================



static void Test_L_BFu9i_BFu0c()
{
  {
    init_simple_test("L_BFu9i_BFu0c");
    static STRUCT_IF_C L_BFu9i_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu9i_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu9i_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu9i_BFu0c, L_BFu9i_BFu0c)
//============================================================================



static void Test_L_BFu9i_BFu0i()
{
  {
    init_simple_test("L_BFu9i_BFu0i");
    static STRUCT_IF_C L_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu9i_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu9i_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu9i_BFu0i, L_BFu9i_BFu0i)
//============================================================================



static void Test_L_BFu9i_BFu0ll()
{
  {
    init_simple_test("L_BFu9i_BFu0ll");
    static STRUCT_IF_C L_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu9i_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu9i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu9i_BFu0ll, L_BFu9i_BFu0ll)
//============================================================================



static void Test_L_BFu9i_BFu0s()
{
  {
    init_simple_test("L_BFu9i_BFu0s");
    static STRUCT_IF_C L_BFu9i_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu9i_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu9i_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu9i_BFu0s, L_BFu9i_BFu0s)
//============================================================================



static void Test_L_BFu9ll_BFu0c()
{
  {
    init_simple_test("L_BFu9ll_BFu0c");
    static STRUCT_IF_C L_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu9ll_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu9ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu9ll_BFu0c, L_BFu9ll_BFu0c)
//============================================================================



static void Test_L_BFu9ll_BFu0i()
{
  {
    init_simple_test("L_BFu9ll_BFu0i");
    static STRUCT_IF_C L_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu9ll_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu9ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu9ll_BFu0i, L_BFu9ll_BFu0i)
//============================================================================



static void Test_L_BFu9ll_BFu0ll()
{
  {
    init_simple_test("L_BFu9ll_BFu0ll");
    static STRUCT_IF_C L_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu9ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu9ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu9ll_BFu0ll, L_BFu9ll_BFu0ll)
//============================================================================



static void Test_L_BFu9ll_BFu0s()
{
  {
    init_simple_test("L_BFu9ll_BFu0s");
    static STRUCT_IF_C L_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu9ll_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu9ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu9ll_BFu0s, L_BFu9ll_BFu0s)
//============================================================================



static void Test_L_BFu9s_BFu0c()
{
  {
    init_simple_test("L_BFu9s_BFu0c");
    static STRUCT_IF_C L_BFu9s_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu9s_BFu0c)");
    check_field_offset(lv, v1, 0, "L_BFu9s_BFu0c.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu9s_BFu0c, L_BFu9s_BFu0c)
//============================================================================



static void Test_L_BFu9s_BFu0i()
{
  {
    init_simple_test("L_BFu9s_BFu0i");
    static STRUCT_IF_C L_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu9s_BFu0i)");
    check_field_offset(lv, v1, 0, "L_BFu9s_BFu0i.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu9s_BFu0i, L_BFu9s_BFu0i)
//============================================================================



static void Test_L_BFu9s_BFu0ll()
{
  {
    init_simple_test("L_BFu9s_BFu0ll");
    static STRUCT_IF_C L_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu9s_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_BFu9s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu9s_BFu0ll, L_BFu9s_BFu0ll)
//============================================================================



static void Test_L_BFu9s_BFu0s()
{
  {
    init_simple_test("L_BFu9s_BFu0s");
    static STRUCT_IF_C L_BFu9s_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_BFu9s_BFu0s)");
    check_field_offset(lv, v1, 0, "L_BFu9s_BFu0s.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu9s_BFu0s, L_BFu9s_BFu0s)
//============================================================================



static void Test_L_C_BFu0c()
{
  {
    init_simple_test("L_C_BFu0c");
    static STRUCT_IF_C L_C_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(L_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_C_BFu0c)");
    check_field_offset(lv, v1, 0, "L_C_BFu0c.v1");
    check_field_offset(lv, v2, 8, "L_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_C_BFu0c, L_C_BFu0c)
//============================================================================



static void Test_L_C_BFu0i()
{
  {
    init_simple_test("L_C_BFu0i");
    static STRUCT_IF_C L_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_C_BFu0i)");
    check_field_offset(lv, v1, 0, "L_C_BFu0i.v1");
    check_field_offset(lv, v2, 8, "L_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_C_BFu0i, L_C_BFu0i)
//============================================================================



static void Test_L_C_BFu0ll()
{
  {
    init_simple_test("L_C_BFu0ll");
    static STRUCT_IF_C L_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_C_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_C_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "L_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_C_BFu0ll, L_C_BFu0ll)
//============================================================================



static void Test_L_C_BFu0s()
{
  {
    init_simple_test("L_C_BFu0s");
    static STRUCT_IF_C L_C_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_C_BFu0s)");
    check_field_offset(lv, v1, 0, "L_C_BFu0s.v1");
    check_field_offset(lv, v2, 8, "L_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_C_BFu0s, L_C_BFu0s)
//============================================================================



static void Test_L_D_BFu0c()
{
  {
    init_simple_test("L_D_BFu0c");
    static STRUCT_IF_C L_D_BFu0c lv;
    check2(sizeof(lv), 16, "sizeof(L_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_D_BFu0c)");
    check_field_offset(lv, v1, 0, "L_D_BFu0c.v1");
    check_field_offset(lv, v2, 8, "L_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_D_BFu0c, L_D_BFu0c)
//============================================================================



static void Test_L_D_BFu0i()
{
  {
    init_simple_test("L_D_BFu0i");
    static STRUCT_IF_C L_D_BFu0i lv;
    check2(sizeof(lv), 16, "sizeof(L_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_D_BFu0i)");
    check_field_offset(lv, v1, 0, "L_D_BFu0i.v1");
    check_field_offset(lv, v2, 8, "L_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_D_BFu0i, L_D_BFu0i)
//============================================================================



static void Test_L_D_BFu0ll()
{
  {
    init_simple_test("L_D_BFu0ll");
    static STRUCT_IF_C L_D_BFu0ll lv;
    check2(sizeof(lv), 16, "sizeof(L_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_D_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_D_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "L_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_D_BFu0ll, L_D_BFu0ll)
//============================================================================



static void Test_L_D_BFu0s()
{
  {
    init_simple_test("L_D_BFu0s");
    static STRUCT_IF_C L_D_BFu0s lv;
    check2(sizeof(lv), 16, "sizeof(L_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_D_BFu0s)");
    check_field_offset(lv, v1, 0, "L_D_BFu0s.v1");
    check_field_offset(lv, v2, 8, "L_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_D_BFu0s, L_D_BFu0s)
//============================================================================



static void Test_L_F_BFu0c()
{
  {
    init_simple_test("L_F_BFu0c");
    static STRUCT_IF_C L_F_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(L_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_F_BFu0c)");
    check_field_offset(lv, v1, 0, "L_F_BFu0c.v1");
    check_field_offset(lv, v2, 8, "L_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_F_BFu0c, L_F_BFu0c)
//============================================================================



static void Test_L_F_BFu0i()
{
  {
    init_simple_test("L_F_BFu0i");
    static STRUCT_IF_C L_F_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(L_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_F_BFu0i)");
    check_field_offset(lv, v1, 0, "L_F_BFu0i.v1");
    check_field_offset(lv, v2, 8, "L_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_F_BFu0i, L_F_BFu0i)
//============================================================================



static void Test_L_F_BFu0ll()
{
  {
    init_simple_test("L_F_BFu0ll");
    static STRUCT_IF_C L_F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_F_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_F_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "L_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_F_BFu0ll, L_F_BFu0ll)
//============================================================================



static void Test_L_F_BFu0s()
{
  {
    init_simple_test("L_F_BFu0s");
    static STRUCT_IF_C L_F_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(L_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_F_BFu0s)");
    check_field_offset(lv, v1, 0, "L_F_BFu0s.v1");
    check_field_offset(lv, v2, 8, "L_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_F_BFu0s, L_F_BFu0s)
//============================================================================



static void Test_L_I_BFu0c()
{
  {
    init_simple_test("L_I_BFu0c");
    static STRUCT_IF_C L_I_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(L_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_I_BFu0c)");
    check_field_offset(lv, v1, 0, "L_I_BFu0c.v1");
    check_field_offset(lv, v2, 8, "L_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_I_BFu0c, L_I_BFu0c)
//============================================================================



static void Test_L_I_BFu0i()
{
  {
    init_simple_test("L_I_BFu0i");
    static STRUCT_IF_C L_I_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(L_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_I_BFu0i)");
    check_field_offset(lv, v1, 0, "L_I_BFu0i.v1");
    check_field_offset(lv, v2, 8, "L_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_I_BFu0i, L_I_BFu0i)
//============================================================================



static void Test_L_I_BFu0ll()
{
  {
    init_simple_test("L_I_BFu0ll");
    static STRUCT_IF_C L_I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_I_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_I_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "L_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_I_BFu0ll, L_I_BFu0ll)
//============================================================================



static void Test_L_I_BFu0s()
{
  {
    init_simple_test("L_I_BFu0s");
    static STRUCT_IF_C L_I_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(L_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_I_BFu0s)");
    check_field_offset(lv, v1, 0, "L_I_BFu0s.v1");
    check_field_offset(lv, v2, 8, "L_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_I_BFu0s, L_I_BFu0s)
//============================================================================



static void Test_L_Ip_BFu0c()
{
  {
    init_simple_test("L_Ip_BFu0c");
    static STRUCT_IF_C L_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_Ip_BFu0c)");
    check_field_offset(lv, v1, 0, "L_Ip_BFu0c.v1");
    check_field_offset(lv, v2, 8, "L_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Ip_BFu0c, L_Ip_BFu0c)
//============================================================================



static void Test_L_Ip_BFu0i()
{
  {
    init_simple_test("L_Ip_BFu0i");
    static STRUCT_IF_C L_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Ip_BFu0i)");
    check_field_offset(lv, v1, 0, "L_Ip_BFu0i.v1");
    check_field_offset(lv, v2, 8, "L_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Ip_BFu0i, L_Ip_BFu0i)
//============================================================================



static void Test_L_Ip_BFu0ll()
{
  {
    init_simple_test("L_Ip_BFu0ll");
    static STRUCT_IF_C L_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Ip_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_Ip_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "L_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Ip_BFu0ll, L_Ip_BFu0ll)
//============================================================================



static void Test_L_Ip_BFu0s()
{
  {
    init_simple_test("L_Ip_BFu0s");
    static STRUCT_IF_C L_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Ip_BFu0s)");
    check_field_offset(lv, v1, 0, "L_Ip_BFu0s.v1");
    check_field_offset(lv, v2, 8, "L_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Ip_BFu0s, L_Ip_BFu0s)
//============================================================================



static void Test_L_L_BFu0c()
{
  {
    init_simple_test("L_L_BFu0c");
    static STRUCT_IF_C L_L_BFu0c lv;
    check2(sizeof(lv), 16, "sizeof(L_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_L_BFu0c)");
    check_field_offset(lv, v1, 0, "L_L_BFu0c.v1");
    check_field_offset(lv, v2, 8, "L_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_L_BFu0c, L_L_BFu0c)
//============================================================================



static void Test_L_L_BFu0i()
{
  {
    init_simple_test("L_L_BFu0i");
    static STRUCT_IF_C L_L_BFu0i lv;
    check2(sizeof(lv), 16, "sizeof(L_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_L_BFu0i)");
    check_field_offset(lv, v1, 0, "L_L_BFu0i.v1");
    check_field_offset(lv, v2, 8, "L_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_L_BFu0i, L_L_BFu0i)
//============================================================================



static void Test_L_L_BFu0ll()
{
  {
    init_simple_test("L_L_BFu0ll");
    static STRUCT_IF_C L_L_BFu0ll lv;
    check2(sizeof(lv), 16, "sizeof(L_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_L_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_L_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "L_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_L_BFu0ll, L_L_BFu0ll)
//============================================================================



static void Test_L_L_BFu0s()
{
  {
    init_simple_test("L_L_BFu0s");
    static STRUCT_IF_C L_L_BFu0s lv;
    check2(sizeof(lv), 16, "sizeof(L_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_L_BFu0s)");
    check_field_offset(lv, v1, 0, "L_L_BFu0s.v1");
    check_field_offset(lv, v2, 8, "L_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_L_BFu0s, L_L_BFu0s)
//============================================================================



static void Test_L_S_BFu0c()
{
  {
    init_simple_test("L_S_BFu0c");
    static STRUCT_IF_C L_S_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(L_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_S_BFu0c)");
    check_field_offset(lv, v1, 0, "L_S_BFu0c.v1");
    check_field_offset(lv, v2, 8, "L_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_S_BFu0c, L_S_BFu0c)
//============================================================================



static void Test_L_S_BFu0i()
{
  {
    init_simple_test("L_S_BFu0i");
    static STRUCT_IF_C L_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_S_BFu0i)");
    check_field_offset(lv, v1, 0, "L_S_BFu0i.v1");
    check_field_offset(lv, v2, 8, "L_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_S_BFu0i, L_S_BFu0i)
//============================================================================



static void Test_L_S_BFu0ll()
{
  {
    init_simple_test("L_S_BFu0ll");
    static STRUCT_IF_C L_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_S_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_S_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "L_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_S_BFu0ll, L_S_BFu0ll)
//============================================================================



static void Test_L_S_BFu0s()
{
  {
    init_simple_test("L_S_BFu0s");
    static STRUCT_IF_C L_S_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(L_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_S_BFu0s)");
    check_field_offset(lv, v1, 0, "L_S_BFu0s.v1");
    check_field_offset(lv, v2, 8, "L_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_S_BFu0s, L_S_BFu0s)
//============================================================================



static void Test_L_Uc_BFu0c()
{
  {
    init_simple_test("L_Uc_BFu0c");
    static STRUCT_IF_C L_Uc_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(L_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_Uc_BFu0c)");
    check_field_offset(lv, v1, 0, "L_Uc_BFu0c.v1");
    check_field_offset(lv, v2, 8, "L_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Uc_BFu0c, L_Uc_BFu0c)
//============================================================================



static void Test_L_Uc_BFu0i()
{
  {
    init_simple_test("L_Uc_BFu0i");
    static STRUCT_IF_C L_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Uc_BFu0i)");
    check_field_offset(lv, v1, 0, "L_Uc_BFu0i.v1");
    check_field_offset(lv, v2, 8, "L_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Uc_BFu0i, L_Uc_BFu0i)
//============================================================================



static void Test_L_Uc_BFu0ll()
{
  {
    init_simple_test("L_Uc_BFu0ll");
    static STRUCT_IF_C L_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Uc_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_Uc_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "L_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Uc_BFu0ll, L_Uc_BFu0ll)
//============================================================================



static void Test_L_Uc_BFu0s()
{
  {
    init_simple_test("L_Uc_BFu0s");
    static STRUCT_IF_C L_Uc_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(L_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Uc_BFu0s)");
    check_field_offset(lv, v1, 0, "L_Uc_BFu0s.v1");
    check_field_offset(lv, v2, 8, "L_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Uc_BFu0s, L_Uc_BFu0s)
//============================================================================



static void Test_L_Ui_BFu0c()
{
  {
    init_simple_test("L_Ui_BFu0c");
    static STRUCT_IF_C L_Ui_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(L_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_Ui_BFu0c)");
    check_field_offset(lv, v1, 0, "L_Ui_BFu0c.v1");
    check_field_offset(lv, v2, 8, "L_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Ui_BFu0c, L_Ui_BFu0c)
//============================================================================



static void Test_L_Ui_BFu0i()
{
  {
    init_simple_test("L_Ui_BFu0i");
    static STRUCT_IF_C L_Ui_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(L_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Ui_BFu0i)");
    check_field_offset(lv, v1, 0, "L_Ui_BFu0i.v1");
    check_field_offset(lv, v2, 8, "L_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Ui_BFu0i, L_Ui_BFu0i)
//============================================================================



static void Test_L_Ui_BFu0ll()
{
  {
    init_simple_test("L_Ui_BFu0ll");
    static STRUCT_IF_C L_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Ui_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_Ui_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "L_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Ui_BFu0ll, L_Ui_BFu0ll)
//============================================================================



static void Test_L_Ui_BFu0s()
{
  {
    init_simple_test("L_Ui_BFu0s");
    static STRUCT_IF_C L_Ui_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(L_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Ui_BFu0s)");
    check_field_offset(lv, v1, 0, "L_Ui_BFu0s.v1");
    check_field_offset(lv, v2, 8, "L_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Ui_BFu0s, L_Ui_BFu0s)
//============================================================================



static void Test_L_Ul_BFu0c()
{
  {
    init_simple_test("L_Ul_BFu0c");
    static STRUCT_IF_C L_Ul_BFu0c lv;
    check2(sizeof(lv), 16, "sizeof(L_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_Ul_BFu0c)");
    check_field_offset(lv, v1, 0, "L_Ul_BFu0c.v1");
    check_field_offset(lv, v2, 8, "L_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Ul_BFu0c, L_Ul_BFu0c)
//============================================================================



static void Test_L_Ul_BFu0i()
{
  {
    init_simple_test("L_Ul_BFu0i");
    static STRUCT_IF_C L_Ul_BFu0i lv;
    check2(sizeof(lv), 16, "sizeof(L_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Ul_BFu0i)");
    check_field_offset(lv, v1, 0, "L_Ul_BFu0i.v1");
    check_field_offset(lv, v2, 8, "L_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Ul_BFu0i, L_Ul_BFu0i)
//============================================================================



static void Test_L_Ul_BFu0ll()
{
  {
    init_simple_test("L_Ul_BFu0ll");
    static STRUCT_IF_C L_Ul_BFu0ll lv;
    check2(sizeof(lv), 16, "sizeof(L_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Ul_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_Ul_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "L_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Ul_BFu0ll, L_Ul_BFu0ll)
//============================================================================



static void Test_L_Ul_BFu0s()
{
  {
    init_simple_test("L_Ul_BFu0s");
    static STRUCT_IF_C L_Ul_BFu0s lv;
    check2(sizeof(lv), 16, "sizeof(L_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Ul_BFu0s)");
    check_field_offset(lv, v1, 0, "L_Ul_BFu0s.v1");
    check_field_offset(lv, v2, 8, "L_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Ul_BFu0s, L_Ul_BFu0s)
//============================================================================



static void Test_L_Us_BFu0c()
{
  {
    init_simple_test("L_Us_BFu0c");
    static STRUCT_IF_C L_Us_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(L_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_Us_BFu0c)");
    check_field_offset(lv, v1, 0, "L_Us_BFu0c.v1");
    check_field_offset(lv, v2, 8, "L_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Us_BFu0c, L_Us_BFu0c)
//============================================================================



static void Test_L_Us_BFu0i()
{
  {
    init_simple_test("L_Us_BFu0i");
    static STRUCT_IF_C L_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(L_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Us_BFu0i)");
    check_field_offset(lv, v1, 0, "L_Us_BFu0i.v1");
    check_field_offset(lv, v2, 8, "L_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Us_BFu0i, L_Us_BFu0i)
//============================================================================



static void Test_L_Us_BFu0ll()
{
  {
    init_simple_test("L_Us_BFu0ll");
    static STRUCT_IF_C L_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Us_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_Us_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "L_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Us_BFu0ll, L_Us_BFu0ll)
//============================================================================



static void Test_L_Us_BFu0s()
{
  {
    init_simple_test("L_Us_BFu0s");
    static STRUCT_IF_C L_Us_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(L_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Us_BFu0s)");
    check_field_offset(lv, v1, 0, "L_Us_BFu0s.v1");
    check_field_offset(lv, v2, 8, "L_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Us_BFu0s, L_Us_BFu0s)
//============================================================================



static void Test_L_Vp_BFu0c()
{
  {
    init_simple_test("L_Vp_BFu0c");
    static STRUCT_IF_C L_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(L_Vp_BFu0c)");
    check_field_offset(lv, v1, 0, "L_Vp_BFu0c.v1");
    check_field_offset(lv, v2, 8, "L_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Vp_BFu0c, L_Vp_BFu0c)
//============================================================================



static void Test_L_Vp_BFu0i()
{
  {
    init_simple_test("L_Vp_BFu0i");
    static STRUCT_IF_C L_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Vp_BFu0i)");
    check_field_offset(lv, v1, 0, "L_Vp_BFu0i.v1");
    check_field_offset(lv, v2, 8, "L_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Vp_BFu0i, L_Vp_BFu0i)
//============================================================================



static void Test_L_Vp_BFu0ll()
{
  {
    init_simple_test("L_Vp_BFu0ll");
    static STRUCT_IF_C L_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Vp_BFu0ll)");
    check_field_offset(lv, v1, 0, "L_Vp_BFu0ll.v1");
    check_field_offset(lv, v2, 8, "L_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Vp_BFu0ll, L_Vp_BFu0ll)
//============================================================================



static void Test_L_Vp_BFu0s()
{
  {
    init_simple_test("L_Vp_BFu0s");
    static STRUCT_IF_C L_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(L_Vp_BFu0s)");
    check_field_offset(lv, v1, 0, "L_Vp_BFu0s.v1");
    check_field_offset(lv, v2, 8, "L_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Vp_BFu0s, L_Vp_BFu0s)
//============================================================================



static void Test_S_BFu0c()
{
  {
    init_simple_test("S_BFu0c");
    static STRUCT_IF_C S_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c, S_BFu0c)
//============================================================================



static void Test_S_BFu0c_BFu0c()
{
  {
    init_simple_test("S_BFu0c_BFu0c");
    static STRUCT_IF_C S_BFu0c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(S_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu0c, S_BFu0c_BFu0c)
//============================================================================



static void Test_S_BFu0c_BFu0i()
{
  {
    init_simple_test("S_BFu0c_BFu0i");
    static STRUCT_IF_C S_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0c_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu0i, S_BFu0c_BFu0i)
//============================================================================



static void Test_S_BFu0c_BFu0ll()
{
  {
    init_simple_test("S_BFu0c_BFu0ll");
    static STRUCT_IF_C S_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0c_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu0ll, S_BFu0c_BFu0ll)
//============================================================================



static void Test_S_BFu0c_BFu0s()
{
  {
    init_simple_test("S_BFu0c_BFu0s");
    static STRUCT_IF_C S_BFu0c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(S_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0c_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu0s, S_BFu0c_BFu0s)
//============================================================================



static void Test_S_BFu0c_BFu15i()
{
  {
    init_simple_test("S_BFu0c_BFu15i");
    static STRUCT_IF_C S_BFu0c_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu15i)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu15i, S_BFu0c_BFu15i)
//============================================================================



static void Test_S_BFu0c_BFu15ll()
{
  {
    init_simple_test("S_BFu0c_BFu15ll");
    static STRUCT_IF_C S_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu15ll)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu15ll, S_BFu0c_BFu15ll)
//============================================================================



static void Test_S_BFu0c_BFu15s()
{
  {
    init_simple_test("S_BFu0c_BFu15s");
    static STRUCT_IF_C S_BFu0c_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu15s)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu15s, S_BFu0c_BFu15s)
//============================================================================



static void Test_S_BFu0c_BFu16i()
{
  {
    init_simple_test("S_BFu0c_BFu16i");
    static STRUCT_IF_C S_BFu0c_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu16i)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu16i, S_BFu0c_BFu16i)
//============================================================================



static void Test_S_BFu0c_BFu16ll()
{
  {
    init_simple_test("S_BFu0c_BFu16ll");
    static STRUCT_IF_C S_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu16ll)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu16ll, S_BFu0c_BFu16ll)
//============================================================================



static void Test_S_BFu0c_BFu16s()
{
  {
    init_simple_test("S_BFu0c_BFu16s");
    static STRUCT_IF_C S_BFu0c_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu16s)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu16s, S_BFu0c_BFu16s)
//============================================================================



static void Test_S_BFu0c_BFu17i()
{
  {
    init_simple_test("S_BFu0c_BFu17i");
    static STRUCT_IF_C S_BFu0c_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(S_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu17i)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "S_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "S_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu17i, S_BFu0c_BFu17i)
//============================================================================



static void Test_S_BFu0c_BFu17ll()
{
  {
    init_simple_test("S_BFu0c_BFu17ll");
    static STRUCT_IF_C S_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(S_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu17ll)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "S_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "S_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu17ll, S_BFu0c_BFu17ll)
//============================================================================



static void Test_S_BFu0c_BFu1c()
{
  {
    init_simple_test("S_BFu0c_BFu1c");
    static STRUCT_IF_C S_BFu0c_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu1c)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu1c, S_BFu0c_BFu1c)
//============================================================================



static void Test_S_BFu0c_BFu1i()
{
  {
    init_simple_test("S_BFu0c_BFu1i");
    static STRUCT_IF_C S_BFu0c_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu1i)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu1i, S_BFu0c_BFu1i)
//============================================================================



static void Test_S_BFu0c_BFu1ll()
{
  {
    init_simple_test("S_BFu0c_BFu1ll");
    static STRUCT_IF_C S_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu1ll)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu1ll, S_BFu0c_BFu1ll)
//============================================================================



static void Test_S_BFu0c_BFu1s()
{
  {
    init_simple_test("S_BFu0c_BFu1s");
    static STRUCT_IF_C S_BFu0c_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu1s)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu1s, S_BFu0c_BFu1s)
//============================================================================



static void Test_S_BFu0c_BFu31i()
{
  {
    init_simple_test("S_BFu0c_BFu31i");
    static STRUCT_IF_C S_BFu0c_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu31i)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "S_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "S_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu31i, S_BFu0c_BFu31i)
//============================================================================



static void Test_S_BFu0c_BFu31ll()
{
  {
    init_simple_test("S_BFu0c_BFu31ll");
    static STRUCT_IF_C S_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu31ll)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "S_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "S_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu31ll, S_BFu0c_BFu31ll)
//============================================================================



static void Test_S_BFu0c_BFu32i()
{
  {
    init_simple_test("S_BFu0c_BFu32i");
    static STRUCT_IF_C S_BFu0c_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu32i)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "S_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "S_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu32i, S_BFu0c_BFu32i)
//============================================================================



static void Test_S_BFu0c_BFu32ll()
{
  {
    init_simple_test("S_BFu0c_BFu32ll");
    static STRUCT_IF_C S_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu32ll)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "S_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "S_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu32ll, S_BFu0c_BFu32ll)
//============================================================================



static void Test_S_BFu0c_BFu33()
{
  {
    init_simple_test("S_BFu0c_BFu33");
    static STRUCT_IF_C S_BFu0c_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(S_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu33)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "S_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "S_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu33, S_BFu0c_BFu33)
//============================================================================



static void Test_S_BFu0c_BFu7c()
{
  {
    init_simple_test("S_BFu0c_BFu7c");
    static STRUCT_IF_C S_BFu0c_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu7c)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu7c, S_BFu0c_BFu7c)
//============================================================================



static void Test_S_BFu0c_BFu7i()
{
  {
    init_simple_test("S_BFu0c_BFu7i");
    static STRUCT_IF_C S_BFu0c_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu7i)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu7i, S_BFu0c_BFu7i)
//============================================================================



static void Test_S_BFu0c_BFu7ll()
{
  {
    init_simple_test("S_BFu0c_BFu7ll");
    static STRUCT_IF_C S_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu7ll)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu7ll, S_BFu0c_BFu7ll)
//============================================================================



static void Test_S_BFu0c_BFu7s()
{
  {
    init_simple_test("S_BFu0c_BFu7s");
    static STRUCT_IF_C S_BFu0c_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu7s)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu7s, S_BFu0c_BFu7s)
//============================================================================



static void Test_S_BFu0c_BFu8c()
{
  {
    init_simple_test("S_BFu0c_BFu8c");
    static STRUCT_IF_C S_BFu0c_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu8c)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu8c, S_BFu0c_BFu8c)
//============================================================================



static void Test_S_BFu0c_BFu8i()
{
  {
    init_simple_test("S_BFu0c_BFu8i");
    static STRUCT_IF_C S_BFu0c_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu8i)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu8i, S_BFu0c_BFu8i)
//============================================================================



static void Test_S_BFu0c_BFu8ll()
{
  {
    init_simple_test("S_BFu0c_BFu8ll");
    static STRUCT_IF_C S_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu8ll)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu8ll, S_BFu0c_BFu8ll)
//============================================================================



static void Test_S_BFu0c_BFu8s()
{
  {
    init_simple_test("S_BFu0c_BFu8s");
    static STRUCT_IF_C S_BFu0c_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu8s)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu8s, S_BFu0c_BFu8s)
//============================================================================



static void Test_S_BFu0c_BFu9i()
{
  {
    init_simple_test("S_BFu0c_BFu9i");
    static STRUCT_IF_C S_BFu0c_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu9i)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu9i, S_BFu0c_BFu9i)
//============================================================================



static void Test_S_BFu0c_BFu9ll()
{
  {
    init_simple_test("S_BFu0c_BFu9ll");
    static STRUCT_IF_C S_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu9ll)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu9ll, S_BFu0c_BFu9ll)
//============================================================================



static void Test_S_BFu0c_BFu9s()
{
  {
    init_simple_test("S_BFu0c_BFu9s");
    static STRUCT_IF_C S_BFu0c_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_BFu9s)");
    check_field_offset(lv, v1, 0, "S_BFu0c_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_BFu9s, S_BFu0c_BFu9s)
//============================================================================



static void Test_S_BFu0c_C()
{
  {
    init_simple_test("S_BFu0c_C");
    static STRUCT_IF_C S_BFu0c_C lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_C)");
    check_field_offset(lv, v1, 0, "S_BFu0c_C.v1");
    check_field_offset(lv, v2, 2, "S_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_C, S_BFu0c_C)
//============================================================================



static void Test_S_BFu0c_D()
{
  {
    init_simple_test("S_BFu0c_D");
    static STRUCT_IF_C S_BFu0c_D lv;
    check2(sizeof(lv), 10, "sizeof(S_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_D)");
    check_field_offset(lv, v1, 0, "S_BFu0c_D.v1");
    check_field_offset(lv, v2, 2, "S_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_D, S_BFu0c_D)
//============================================================================



static void Test_S_BFu0c_F()
{
  {
    init_simple_test("S_BFu0c_F");
    static STRUCT_IF_C S_BFu0c_F lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_F)");
    check_field_offset(lv, v1, 0, "S_BFu0c_F.v1");
    check_field_offset(lv, v2, 2, "S_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_F, S_BFu0c_F)
//============================================================================



static void Test_S_BFu0c_I()
{
  {
    init_simple_test("S_BFu0c_I");
    static STRUCT_IF_C S_BFu0c_I lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_I)");
    check_field_offset(lv, v1, 0, "S_BFu0c_I.v1");
    check_field_offset(lv, v2, 2, "S_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_I, S_BFu0c_I)
//============================================================================



static void Test_S_BFu0c_Ip()
{
  {
    init_simple_test("S_BFu0c_Ip");
    static STRUCT_IF_C S_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_Ip)");
    check_field_offset(lv, v1, 0, "S_BFu0c_Ip.v1");
    check_field_offset(lv, v2, 2, "S_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_Ip, S_BFu0c_Ip)
//============================================================================



static void Test_S_BFu0c_L()
{
  {
    init_simple_test("S_BFu0c_L");
    static STRUCT_IF_C S_BFu0c_L lv;
    check2(sizeof(lv), 10, "sizeof(S_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_L)");
    check_field_offset(lv, v1, 0, "S_BFu0c_L.v1");
    check_field_offset(lv, v2, 2, "S_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_L, S_BFu0c_L)
//============================================================================



static void Test_S_BFu0c_S()
{
  {
    init_simple_test("S_BFu0c_S");
    static STRUCT_IF_C S_BFu0c_S lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_S)");
    check_field_offset(lv, v1, 0, "S_BFu0c_S.v1");
    check_field_offset(lv, v2, 2, "S_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_S, S_BFu0c_S)
//============================================================================



static void Test_S_BFu0c_Uc()
{
  {
    init_simple_test("S_BFu0c_Uc");
    static STRUCT_IF_C S_BFu0c_Uc lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_Uc)");
    check_field_offset(lv, v1, 0, "S_BFu0c_Uc.v1");
    check_field_offset(lv, v2, 2, "S_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_Uc, S_BFu0c_Uc)
//============================================================================



static void Test_S_BFu0c_Ui()
{
  {
    init_simple_test("S_BFu0c_Ui");
    static STRUCT_IF_C S_BFu0c_Ui lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_Ui)");
    check_field_offset(lv, v1, 0, "S_BFu0c_Ui.v1");
    check_field_offset(lv, v2, 2, "S_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_Ui, S_BFu0c_Ui)
//============================================================================



static void Test_S_BFu0c_Ul()
{
  {
    init_simple_test("S_BFu0c_Ul");
    static STRUCT_IF_C S_BFu0c_Ul lv;
    check2(sizeof(lv), 10, "sizeof(S_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_Ul)");
    check_field_offset(lv, v1, 0, "S_BFu0c_Ul.v1");
    check_field_offset(lv, v2, 2, "S_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_Ul, S_BFu0c_Ul)
//============================================================================



static void Test_S_BFu0c_Us()
{
  {
    init_simple_test("S_BFu0c_Us");
    static STRUCT_IF_C S_BFu0c_Us lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_Us)");
    check_field_offset(lv, v1, 0, "S_BFu0c_Us.v1");
    check_field_offset(lv, v2, 2, "S_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_Us, S_BFu0c_Us)
//============================================================================



static void Test_S_BFu0c_Vp()
{
  {
    init_simple_test("S_BFu0c_Vp");
    static STRUCT_IF_C S_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu0c_Vp)");
    check_field_offset(lv, v1, 0, "S_BFu0c_Vp.v1");
    check_field_offset(lv, v2, 2, "S_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0c_Vp, S_BFu0c_Vp)
//============================================================================



static void Test_S_BFu0i()
{
  {
    init_simple_test("S_BFu0i");
    static STRUCT_IF_C S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i, S_BFu0i)
//============================================================================



static void Test_S_BFu0i_BFu0c()
{
  {
    init_simple_test("S_BFu0i_BFu0c");
    static STRUCT_IF_C S_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu0c, S_BFu0i_BFu0c)
//============================================================================



static void Test_S_BFu0i_BFu0i()
{
  {
    init_simple_test("S_BFu0i_BFu0i");
    static STRUCT_IF_C S_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu0i, S_BFu0i_BFu0i)
//============================================================================



static void Test_S_BFu0i_BFu0ll()
{
  {
    init_simple_test("S_BFu0i_BFu0ll");
    static STRUCT_IF_C S_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu0ll, S_BFu0i_BFu0ll)
//============================================================================



static void Test_S_BFu0i_BFu0s()
{
  {
    init_simple_test("S_BFu0i_BFu0s");
    static STRUCT_IF_C S_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu0s, S_BFu0i_BFu0s)
//============================================================================



static void Test_S_BFu0i_BFu15i()
{
  {
    init_simple_test("S_BFu0i_BFu15i");
    static STRUCT_IF_C S_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(S_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu15i)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu15i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "S_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "S_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu15i, S_BFu0i_BFu15i)
//============================================================================



static void Test_S_BFu0i_BFu15ll()
{
  {
    init_simple_test("S_BFu0i_BFu15ll");
    static STRUCT_IF_C S_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(S_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu15ll)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu15ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "S_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "S_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu15ll, S_BFu0i_BFu15ll)
//============================================================================



static void Test_S_BFu0i_BFu15s()
{
  {
    init_simple_test("S_BFu0i_BFu15s");
    static STRUCT_IF_C S_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(S_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu15s)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu15s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "S_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "S_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu15s, S_BFu0i_BFu15s)
//============================================================================



static void Test_S_BFu0i_BFu16i()
{
  {
    init_simple_test("S_BFu0i_BFu16i");
    static STRUCT_IF_C S_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(S_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu16i)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu16i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "S_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "S_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu16i, S_BFu0i_BFu16i)
//============================================================================



static void Test_S_BFu0i_BFu16ll()
{
  {
    init_simple_test("S_BFu0i_BFu16ll");
    static STRUCT_IF_C S_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(S_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu16ll)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu16ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "S_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "S_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu16ll, S_BFu0i_BFu16ll)
//============================================================================



static void Test_S_BFu0i_BFu16s()
{
  {
    init_simple_test("S_BFu0i_BFu16s");
    static STRUCT_IF_C S_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(S_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu16s)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu16s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "S_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "S_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu16s, S_BFu0i_BFu16s)
//============================================================================



static void Test_S_BFu0i_BFu17i()
{
  {
    init_simple_test("S_BFu0i_BFu17i");
    static STRUCT_IF_C S_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(S_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu17i)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu17i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, 1, "S_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, hide_ull(1LL<<16), "S_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu17i, S_BFu0i_BFu17i)
//============================================================================



static void Test_S_BFu0i_BFu17ll()
{
  {
    init_simple_test("S_BFu0i_BFu17ll");
    static STRUCT_IF_C S_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(S_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu17ll)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu17ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, 1, "S_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, hide_ull(1LL<<16), "S_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu17ll, S_BFu0i_BFu17ll)
//============================================================================



static void Test_S_BFu0i_BFu1c()
{
  {
    init_simple_test("S_BFu0i_BFu1c");
    static STRUCT_IF_C S_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(S_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu1c)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu1c.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "S_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu1c, S_BFu0i_BFu1c)
//============================================================================



static void Test_S_BFu0i_BFu1i()
{
  {
    init_simple_test("S_BFu0i_BFu1i");
    static STRUCT_IF_C S_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(S_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu1i)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu1i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "S_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu1i, S_BFu0i_BFu1i)
//============================================================================



static void Test_S_BFu0i_BFu1ll()
{
  {
    init_simple_test("S_BFu0i_BFu1ll");
    static STRUCT_IF_C S_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(S_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu1ll)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu1ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "S_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu1ll, S_BFu0i_BFu1ll)
//============================================================================



static void Test_S_BFu0i_BFu1s()
{
  {
    init_simple_test("S_BFu0i_BFu1s");
    static STRUCT_IF_C S_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(S_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu1s)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu1s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "S_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu1s, S_BFu0i_BFu1s)
//============================================================================



static void Test_S_BFu0i_BFu31i()
{
  {
    init_simple_test("S_BFu0i_BFu31i");
    static STRUCT_IF_C S_BFu0i_BFu31i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu31i)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu31i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, 1, "S_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, hide_ull(1LL<<30), "S_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu31i, S_BFu0i_BFu31i)
//============================================================================



static void Test_S_BFu0i_BFu31ll()
{
  {
    init_simple_test("S_BFu0i_BFu31ll");
    static STRUCT_IF_C S_BFu0i_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu31ll)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu31ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, 1, "S_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, hide_ull(1LL<<30), "S_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu31ll, S_BFu0i_BFu31ll)
//============================================================================



static void Test_S_BFu0i_BFu32i()
{
  {
    init_simple_test("S_BFu0i_BFu32i");
    static STRUCT_IF_C S_BFu0i_BFu32i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu32i)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu32i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, 1, "S_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, hide_ull(1LL<<31), "S_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu32i, S_BFu0i_BFu32i)
//============================================================================



static void Test_S_BFu0i_BFu32ll()
{
  {
    init_simple_test("S_BFu0i_BFu32ll");
    static STRUCT_IF_C S_BFu0i_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu32ll)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu32ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, 1, "S_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, hide_ull(1LL<<31), "S_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu32ll, S_BFu0i_BFu32ll)
//============================================================================



static void Test_S_BFu0i_BFu33()
{
  {
    init_simple_test("S_BFu0i_BFu33");
    static STRUCT_IF_C S_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(S_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu33)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu33.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 33, 1, "S_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 33, hide_ull(1LL<<32), "S_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu33, S_BFu0i_BFu33)
//============================================================================



static void Test_S_BFu0i_BFu7c()
{
  {
    init_simple_test("S_BFu0i_BFu7c");
    static STRUCT_IF_C S_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(S_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu7c)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu7c.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "S_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "S_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu7c, S_BFu0i_BFu7c)
//============================================================================



static void Test_S_BFu0i_BFu7i()
{
  {
    init_simple_test("S_BFu0i_BFu7i");
    static STRUCT_IF_C S_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(S_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu7i)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu7i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "S_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "S_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu7i, S_BFu0i_BFu7i)
//============================================================================



static void Test_S_BFu0i_BFu7ll()
{
  {
    init_simple_test("S_BFu0i_BFu7ll");
    static STRUCT_IF_C S_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(S_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu7ll)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu7ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "S_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "S_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu7ll, S_BFu0i_BFu7ll)
//============================================================================



static void Test_S_BFu0i_BFu7s()
{
  {
    init_simple_test("S_BFu0i_BFu7s");
    static STRUCT_IF_C S_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(S_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu7s)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu7s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "S_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "S_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu7s, S_BFu0i_BFu7s)
//============================================================================



static void Test_S_BFu0i_BFu8c()
{
  {
    init_simple_test("S_BFu0i_BFu8c");
    static STRUCT_IF_C S_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(S_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu8c)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu8c.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "S_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "S_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu8c, S_BFu0i_BFu8c)
//============================================================================



static void Test_S_BFu0i_BFu8i()
{
  {
    init_simple_test("S_BFu0i_BFu8i");
    static STRUCT_IF_C S_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(S_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu8i)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu8i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "S_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "S_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu8i, S_BFu0i_BFu8i)
//============================================================================



static void Test_S_BFu0i_BFu8ll()
{
  {
    init_simple_test("S_BFu0i_BFu8ll");
    static STRUCT_IF_C S_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(S_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu8ll)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu8ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "S_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "S_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu8ll, S_BFu0i_BFu8ll)
//============================================================================



static void Test_S_BFu0i_BFu8s()
{
  {
    init_simple_test("S_BFu0i_BFu8s");
    static STRUCT_IF_C S_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(S_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu8s)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu8s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "S_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "S_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu8s, S_BFu0i_BFu8s)
//============================================================================



static void Test_S_BFu0i_BFu9i()
{
  {
    init_simple_test("S_BFu0i_BFu9i");
    static STRUCT_IF_C S_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(S_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu9i)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu9i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "S_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "S_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu9i, S_BFu0i_BFu9i)
//============================================================================



static void Test_S_BFu0i_BFu9ll()
{
  {
    init_simple_test("S_BFu0i_BFu9ll");
    static STRUCT_IF_C S_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(S_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu9ll)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu9ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "S_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "S_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu9ll, S_BFu0i_BFu9ll)
//============================================================================



static void Test_S_BFu0i_BFu9s()
{
  {
    init_simple_test("S_BFu0i_BFu9s");
    static STRUCT_IF_C S_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(S_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_BFu9s)");
    check_field_offset(lv, v1, 0, "S_BFu0i_BFu9s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "S_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "S_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_BFu9s, S_BFu0i_BFu9s)
//============================================================================



static void Test_S_BFu0i_C()
{
  {
    init_simple_test("S_BFu0i_C");
    static STRUCT_IF_C S_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(S_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_C)");
    check_field_offset(lv, v1, 0, "S_BFu0i_C.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "S_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_C, S_BFu0i_C)
//============================================================================



static void Test_S_BFu0i_D()
{
  {
    init_simple_test("S_BFu0i_D");
    static STRUCT_IF_C S_BFu0i_D lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(S_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_D)");
    check_field_offset(lv, v1, 0, "S_BFu0i_D.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "S_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_D, S_BFu0i_D)
//============================================================================



static void Test_S_BFu0i_F()
{
  {
    init_simple_test("S_BFu0i_F");
    static STRUCT_IF_C S_BFu0i_F lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_F)");
    check_field_offset(lv, v1, 0, "S_BFu0i_F.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "S_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_F, S_BFu0i_F)
//============================================================================



static void Test_S_BFu0i_I()
{
  {
    init_simple_test("S_BFu0i_I");
    static STRUCT_IF_C S_BFu0i_I lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_I)");
    check_field_offset(lv, v1, 0, "S_BFu0i_I.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "S_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_I, S_BFu0i_I)
//============================================================================



static void Test_S_BFu0i_Ip()
{
  {
    init_simple_test("S_BFu0i_Ip");
    static STRUCT_IF_C S_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(S_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_Ip)");
    check_field_offset(lv, v1, 0, "S_BFu0i_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "S_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_Ip, S_BFu0i_Ip)
//============================================================================



static void Test_S_BFu0i_L()
{
  {
    init_simple_test("S_BFu0i_L");
    static STRUCT_IF_C S_BFu0i_L lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(S_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_L)");
    check_field_offset(lv, v1, 0, "S_BFu0i_L.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "S_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_L, S_BFu0i_L)
//============================================================================



static void Test_S_BFu0i_S()
{
  {
    init_simple_test("S_BFu0i_S");
    static STRUCT_IF_C S_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(S_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_S)");
    check_field_offset(lv, v1, 0, "S_BFu0i_S.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "S_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_S, S_BFu0i_S)
//============================================================================



static void Test_S_BFu0i_Uc()
{
  {
    init_simple_test("S_BFu0i_Uc");
    static STRUCT_IF_C S_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(S_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_Uc)");
    check_field_offset(lv, v1, 0, "S_BFu0i_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "S_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_Uc, S_BFu0i_Uc)
//============================================================================



static void Test_S_BFu0i_Ui()
{
  {
    init_simple_test("S_BFu0i_Ui");
    static STRUCT_IF_C S_BFu0i_Ui lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_Ui)");
    check_field_offset(lv, v1, 0, "S_BFu0i_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "S_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_Ui, S_BFu0i_Ui)
//============================================================================



static void Test_S_BFu0i_Ul()
{
  {
    init_simple_test("S_BFu0i_Ul");
    static STRUCT_IF_C S_BFu0i_Ul lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(S_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_Ul)");
    check_field_offset(lv, v1, 0, "S_BFu0i_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "S_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_Ul, S_BFu0i_Ul)
//============================================================================



static void Test_S_BFu0i_Us()
{
  {
    init_simple_test("S_BFu0i_Us");
    static STRUCT_IF_C S_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(S_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_Us)");
    check_field_offset(lv, v1, 0, "S_BFu0i_Us.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "S_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_Us, S_BFu0i_Us)
//============================================================================



static void Test_S_BFu0i_Vp()
{
  {
    init_simple_test("S_BFu0i_Vp");
    static STRUCT_IF_C S_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(S_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0i_Vp)");
    check_field_offset(lv, v1, 0, "S_BFu0i_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "S_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0i_Vp, S_BFu0i_Vp)
//============================================================================



static void Test_S_BFu0ll()
{
  {
    init_simple_test("S_BFu0ll");
    static STRUCT_IF_C S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll, S_BFu0ll)
//============================================================================



static void Test_S_BFu0ll_BFu0c()
{
  {
    init_simple_test("S_BFu0ll_BFu0c");
    static STRUCT_IF_C S_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu0c, S_BFu0ll_BFu0c)
//============================================================================



static void Test_S_BFu0ll_BFu0i()
{
  {
    init_simple_test("S_BFu0ll_BFu0i");
    static STRUCT_IF_C S_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu0i, S_BFu0ll_BFu0i)
//============================================================================



static void Test_S_BFu0ll_BFu0ll()
{
  {
    init_simple_test("S_BFu0ll_BFu0ll");
    static STRUCT_IF_C S_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu0ll, S_BFu0ll_BFu0ll)
//============================================================================



static void Test_S_BFu0ll_BFu0s()
{
  {
    init_simple_test("S_BFu0ll_BFu0s");
    static STRUCT_IF_C S_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu0s, S_BFu0ll_BFu0s)
//============================================================================



static void Test_S_BFu0ll_BFu15i()
{
  {
    init_simple_test("S_BFu0ll_BFu15i");
    static STRUCT_IF_C S_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu15i)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu15i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "S_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "S_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu15i, S_BFu0ll_BFu15i)
//============================================================================



static void Test_S_BFu0ll_BFu15ll()
{
  {
    init_simple_test("S_BFu0ll_BFu15ll");
    static STRUCT_IF_C S_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "S_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "S_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu15ll, S_BFu0ll_BFu15ll)
//============================================================================



static void Test_S_BFu0ll_BFu15s()
{
  {
    init_simple_test("S_BFu0ll_BFu15s");
    static STRUCT_IF_C S_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu15s)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu15s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "S_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "S_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu15s, S_BFu0ll_BFu15s)
//============================================================================



static void Test_S_BFu0ll_BFu16i()
{
  {
    init_simple_test("S_BFu0ll_BFu16i");
    static STRUCT_IF_C S_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu16i)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu16i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "S_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "S_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu16i, S_BFu0ll_BFu16i)
//============================================================================



static void Test_S_BFu0ll_BFu16ll()
{
  {
    init_simple_test("S_BFu0ll_BFu16ll");
    static STRUCT_IF_C S_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "S_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "S_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu16ll, S_BFu0ll_BFu16ll)
//============================================================================



static void Test_S_BFu0ll_BFu16s()
{
  {
    init_simple_test("S_BFu0ll_BFu16s");
    static STRUCT_IF_C S_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu16s)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu16s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "S_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "S_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu16s, S_BFu0ll_BFu16s)
//============================================================================



static void Test_S_BFu0ll_BFu17i()
{
  {
    init_simple_test("S_BFu0ll_BFu17i");
    static STRUCT_IF_C S_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(S_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu17i)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu17i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "S_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "S_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu17i, S_BFu0ll_BFu17i)
//============================================================================



static void Test_S_BFu0ll_BFu17ll()
{
  {
    init_simple_test("S_BFu0ll_BFu17ll");
    static STRUCT_IF_C S_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(S_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "S_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "S_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu17ll, S_BFu0ll_BFu17ll)
//============================================================================



static void Test_S_BFu0ll_BFu1c()
{
  {
    init_simple_test("S_BFu0ll_BFu1c");
    static STRUCT_IF_C S_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(S_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu1c)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu1c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "S_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu1c, S_BFu0ll_BFu1c)
//============================================================================



static void Test_S_BFu0ll_BFu1i()
{
  {
    init_simple_test("S_BFu0ll_BFu1i");
    static STRUCT_IF_C S_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(S_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu1i)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu1i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "S_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu1i, S_BFu0ll_BFu1i)
//============================================================================



static void Test_S_BFu0ll_BFu1ll()
{
  {
    init_simple_test("S_BFu0ll_BFu1ll");
    static STRUCT_IF_C S_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(S_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "S_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu1ll, S_BFu0ll_BFu1ll)
//============================================================================



static void Test_S_BFu0ll_BFu1s()
{
  {
    init_simple_test("S_BFu0ll_BFu1s");
    static STRUCT_IF_C S_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(S_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu1s)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu1s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "S_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu1s, S_BFu0ll_BFu1s)
//============================================================================



static void Test_S_BFu0ll_BFu31i()
{
  {
    init_simple_test("S_BFu0ll_BFu31i");
    static STRUCT_IF_C S_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(S_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu31i)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu31i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "S_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "S_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu31i, S_BFu0ll_BFu31i)
//============================================================================



static void Test_S_BFu0ll_BFu31ll()
{
  {
    init_simple_test("S_BFu0ll_BFu31ll");
    static STRUCT_IF_C S_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(S_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "S_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "S_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu31ll, S_BFu0ll_BFu31ll)
//============================================================================



static void Test_S_BFu0ll_BFu32i()
{
  {
    init_simple_test("S_BFu0ll_BFu32i");
    static STRUCT_IF_C S_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(S_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu32i)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu32i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "S_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "S_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu32i, S_BFu0ll_BFu32i)
//============================================================================



static void Test_S_BFu0ll_BFu32ll()
{
  {
    init_simple_test("S_BFu0ll_BFu32ll");
    static STRUCT_IF_C S_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(S_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "S_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "S_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu32ll, S_BFu0ll_BFu32ll)
//============================================================================



static void Test_S_BFu0ll_BFu33()
{
  {
    init_simple_test("S_BFu0ll_BFu33");
    static STRUCT_IF_C S_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(S_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu33)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu33.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "S_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "S_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu33, S_BFu0ll_BFu33)
//============================================================================



static void Test_S_BFu0ll_BFu7c()
{
  {
    init_simple_test("S_BFu0ll_BFu7c");
    static STRUCT_IF_C S_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(S_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu7c)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu7c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "S_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "S_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu7c, S_BFu0ll_BFu7c)
//============================================================================



static void Test_S_BFu0ll_BFu7i()
{
  {
    init_simple_test("S_BFu0ll_BFu7i");
    static STRUCT_IF_C S_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(S_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu7i)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu7i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "S_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "S_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu7i, S_BFu0ll_BFu7i)
//============================================================================



static void Test_S_BFu0ll_BFu7ll()
{
  {
    init_simple_test("S_BFu0ll_BFu7ll");
    static STRUCT_IF_C S_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(S_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "S_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "S_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu7ll, S_BFu0ll_BFu7ll)
//============================================================================



static void Test_S_BFu0ll_BFu7s()
{
  {
    init_simple_test("S_BFu0ll_BFu7s");
    static STRUCT_IF_C S_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(S_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu7s)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu7s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "S_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "S_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu7s, S_BFu0ll_BFu7s)
//============================================================================



static void Test_S_BFu0ll_BFu8c()
{
  {
    init_simple_test("S_BFu0ll_BFu8c");
    static STRUCT_IF_C S_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(S_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu8c)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu8c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "S_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "S_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu8c, S_BFu0ll_BFu8c)
//============================================================================



static void Test_S_BFu0ll_BFu8i()
{
  {
    init_simple_test("S_BFu0ll_BFu8i");
    static STRUCT_IF_C S_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(S_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu8i)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu8i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "S_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "S_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu8i, S_BFu0ll_BFu8i)
//============================================================================



static void Test_S_BFu0ll_BFu8ll()
{
  {
    init_simple_test("S_BFu0ll_BFu8ll");
    static STRUCT_IF_C S_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(S_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "S_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "S_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu8ll, S_BFu0ll_BFu8ll)
//============================================================================



static void Test_S_BFu0ll_BFu8s()
{
  {
    init_simple_test("S_BFu0ll_BFu8s");
    static STRUCT_IF_C S_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(S_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu8s)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu8s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "S_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "S_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu8s, S_BFu0ll_BFu8s)
//============================================================================



static void Test_S_BFu0ll_BFu9i()
{
  {
    init_simple_test("S_BFu0ll_BFu9i");
    static STRUCT_IF_C S_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu9i)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu9i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "S_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "S_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu9i, S_BFu0ll_BFu9i)
//============================================================================



static void Test_S_BFu0ll_BFu9ll()
{
  {
    init_simple_test("S_BFu0ll_BFu9ll");
    static STRUCT_IF_C S_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "S_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "S_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu9ll, S_BFu0ll_BFu9ll)
//============================================================================



static void Test_S_BFu0ll_BFu9s()
{
  {
    init_simple_test("S_BFu0ll_BFu9s");
    static STRUCT_IF_C S_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_BFu9s)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_BFu9s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "S_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "S_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_BFu9s, S_BFu0ll_BFu9s)
//============================================================================



static void Test_S_BFu0ll_C()
{
  {
    init_simple_test("S_BFu0ll_C");
    static STRUCT_IF_C S_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(S_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_C)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_C.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "S_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_C, S_BFu0ll_C)
//============================================================================



static void Test_S_BFu0ll_D()
{
  {
    init_simple_test("S_BFu0ll_D");
    static STRUCT_IF_C S_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(S_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_D)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_D.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "S_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_D, S_BFu0ll_D)
//============================================================================



static void Test_S_BFu0ll_F()
{
  {
    init_simple_test("S_BFu0ll_F");
    static STRUCT_IF_C S_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(S_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_F)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_F.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "S_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_F, S_BFu0ll_F)
//============================================================================



static void Test_S_BFu0ll_I()
{
  {
    init_simple_test("S_BFu0ll_I");
    static STRUCT_IF_C S_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(S_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_I)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_I.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "S_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_I, S_BFu0ll_I)
//============================================================================



static void Test_S_BFu0ll_Ip()
{
  {
    init_simple_test("S_BFu0ll_Ip");
    static STRUCT_IF_C S_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(S_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_Ip)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "S_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_Ip, S_BFu0ll_Ip)
//============================================================================



static void Test_S_BFu0ll_L()
{
  {
    init_simple_test("S_BFu0ll_L");
    static STRUCT_IF_C S_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(S_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_L)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_L.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "S_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_L, S_BFu0ll_L)
//============================================================================



static void Test_S_BFu0ll_S()
{
  {
    init_simple_test("S_BFu0ll_S");
    static STRUCT_IF_C S_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_S)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_S.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "S_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_S, S_BFu0ll_S)
//============================================================================



static void Test_S_BFu0ll_Uc()
{
  {
    init_simple_test("S_BFu0ll_Uc");
    static STRUCT_IF_C S_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(S_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_Uc)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "S_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_Uc, S_BFu0ll_Uc)
//============================================================================



static void Test_S_BFu0ll_Ui()
{
  {
    init_simple_test("S_BFu0ll_Ui");
    static STRUCT_IF_C S_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(S_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_Ui)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "S_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_Ui, S_BFu0ll_Ui)
//============================================================================



static void Test_S_BFu0ll_Ul()
{
  {
    init_simple_test("S_BFu0ll_Ul");
    static STRUCT_IF_C S_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(S_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_Ul)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "S_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_Ul, S_BFu0ll_Ul)
//============================================================================



static void Test_S_BFu0ll_Us()
{
  {
    init_simple_test("S_BFu0ll_Us");
    static STRUCT_IF_C S_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_Us)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_Us.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "S_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_Us, S_BFu0ll_Us)
//============================================================================



static void Test_S_BFu0ll_Vp()
{
  {
    init_simple_test("S_BFu0ll_Vp");
    static STRUCT_IF_C S_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(S_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0ll_Vp)");
    check_field_offset(lv, v1, 0, "S_BFu0ll_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "S_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0ll_Vp, S_BFu0ll_Vp)
//============================================================================



static void Test_S_BFu0s()
{
  {
    init_simple_test("S_BFu0s");
    static STRUCT_IF_C S_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s, S_BFu0s)
//============================================================================



static void Test_S_BFu0s_BFu0c()
{
  {
    init_simple_test("S_BFu0s_BFu0c");
    static STRUCT_IF_C S_BFu0s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(S_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu0c, S_BFu0s_BFu0c)
//============================================================================



static void Test_S_BFu0s_BFu0i()
{
  {
    init_simple_test("S_BFu0s_BFu0i");
    static STRUCT_IF_C S_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu0i, S_BFu0s_BFu0i)
//============================================================================



static void Test_S_BFu0s_BFu0ll()
{
  {
    init_simple_test("S_BFu0s_BFu0ll");
    static STRUCT_IF_C S_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu0ll, S_BFu0s_BFu0ll)
//============================================================================



static void Test_S_BFu0s_BFu0s()
{
  {
    init_simple_test("S_BFu0s_BFu0s");
    static STRUCT_IF_C S_BFu0s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(S_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu0s, S_BFu0s_BFu0s)
//============================================================================



static void Test_S_BFu0s_BFu15i()
{
  {
    init_simple_test("S_BFu0s_BFu15i");
    static STRUCT_IF_C S_BFu0s_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu15i)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu15i, S_BFu0s_BFu15i)
//============================================================================



static void Test_S_BFu0s_BFu15ll()
{
  {
    init_simple_test("S_BFu0s_BFu15ll");
    static STRUCT_IF_C S_BFu0s_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu15ll)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu15ll, S_BFu0s_BFu15ll)
//============================================================================



static void Test_S_BFu0s_BFu15s()
{
  {
    init_simple_test("S_BFu0s_BFu15s");
    static STRUCT_IF_C S_BFu0s_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu15s)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu15s, S_BFu0s_BFu15s)
//============================================================================



static void Test_S_BFu0s_BFu16i()
{
  {
    init_simple_test("S_BFu0s_BFu16i");
    static STRUCT_IF_C S_BFu0s_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu16i)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu16i, S_BFu0s_BFu16i)
//============================================================================



static void Test_S_BFu0s_BFu16ll()
{
  {
    init_simple_test("S_BFu0s_BFu16ll");
    static STRUCT_IF_C S_BFu0s_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu16ll)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu16ll, S_BFu0s_BFu16ll)
//============================================================================



static void Test_S_BFu0s_BFu16s()
{
  {
    init_simple_test("S_BFu0s_BFu16s");
    static STRUCT_IF_C S_BFu0s_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu16s)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu16s, S_BFu0s_BFu16s)
//============================================================================



static void Test_S_BFu0s_BFu17i()
{
  {
    init_simple_test("S_BFu0s_BFu17i");
    static STRUCT_IF_C S_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(S_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu17i)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "S_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "S_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu17i, S_BFu0s_BFu17i)
//============================================================================



static void Test_S_BFu0s_BFu17ll()
{
  {
    init_simple_test("S_BFu0s_BFu17ll");
    static STRUCT_IF_C S_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(S_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu17ll)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "S_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "S_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu17ll, S_BFu0s_BFu17ll)
//============================================================================



static void Test_S_BFu0s_BFu1c()
{
  {
    init_simple_test("S_BFu0s_BFu1c");
    static STRUCT_IF_C S_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(S_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu1c)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu1c, S_BFu0s_BFu1c)
//============================================================================



static void Test_S_BFu0s_BFu1i()
{
  {
    init_simple_test("S_BFu0s_BFu1i");
    static STRUCT_IF_C S_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(S_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu1i)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu1i, S_BFu0s_BFu1i)
//============================================================================



static void Test_S_BFu0s_BFu1ll()
{
  {
    init_simple_test("S_BFu0s_BFu1ll");
    static STRUCT_IF_C S_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(S_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu1ll)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu1ll, S_BFu0s_BFu1ll)
//============================================================================



static void Test_S_BFu0s_BFu1s()
{
  {
    init_simple_test("S_BFu0s_BFu1s");
    static STRUCT_IF_C S_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(S_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu1s)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu1s, S_BFu0s_BFu1s)
//============================================================================



static void Test_S_BFu0s_BFu31i()
{
  {
    init_simple_test("S_BFu0s_BFu31i");
    static STRUCT_IF_C S_BFu0s_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu31i)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "S_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "S_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu31i, S_BFu0s_BFu31i)
//============================================================================



static void Test_S_BFu0s_BFu31ll()
{
  {
    init_simple_test("S_BFu0s_BFu31ll");
    static STRUCT_IF_C S_BFu0s_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu31ll)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "S_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "S_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu31ll, S_BFu0s_BFu31ll)
//============================================================================



static void Test_S_BFu0s_BFu32i()
{
  {
    init_simple_test("S_BFu0s_BFu32i");
    static STRUCT_IF_C S_BFu0s_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu32i)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "S_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "S_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu32i, S_BFu0s_BFu32i)
//============================================================================



static void Test_S_BFu0s_BFu32ll()
{
  {
    init_simple_test("S_BFu0s_BFu32ll");
    static STRUCT_IF_C S_BFu0s_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu32ll)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "S_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "S_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu32ll, S_BFu0s_BFu32ll)
//============================================================================



static void Test_S_BFu0s_BFu33()
{
  {
    init_simple_test("S_BFu0s_BFu33");
    static STRUCT_IF_C S_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(S_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu33)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "S_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "S_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu33, S_BFu0s_BFu33)
//============================================================================



static void Test_S_BFu0s_BFu7c()
{
  {
    init_simple_test("S_BFu0s_BFu7c");
    static STRUCT_IF_C S_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(S_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu7c)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu7c, S_BFu0s_BFu7c)
//============================================================================



static void Test_S_BFu0s_BFu7i()
{
  {
    init_simple_test("S_BFu0s_BFu7i");
    static STRUCT_IF_C S_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(S_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu7i)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu7i, S_BFu0s_BFu7i)
//============================================================================



static void Test_S_BFu0s_BFu7ll()
{
  {
    init_simple_test("S_BFu0s_BFu7ll");
    static STRUCT_IF_C S_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(S_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu7ll)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu7ll, S_BFu0s_BFu7ll)
//============================================================================



static void Test_S_BFu0s_BFu7s()
{
  {
    init_simple_test("S_BFu0s_BFu7s");
    static STRUCT_IF_C S_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(S_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu7s)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu7s, S_BFu0s_BFu7s)
//============================================================================



static void Test_S_BFu0s_BFu8c()
{
  {
    init_simple_test("S_BFu0s_BFu8c");
    static STRUCT_IF_C S_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(S_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu8c)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu8c, S_BFu0s_BFu8c)
//============================================================================



static void Test_S_BFu0s_BFu8i()
{
  {
    init_simple_test("S_BFu0s_BFu8i");
    static STRUCT_IF_C S_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(S_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu8i)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu8i, S_BFu0s_BFu8i)
//============================================================================



static void Test_S_BFu0s_BFu8ll()
{
  {
    init_simple_test("S_BFu0s_BFu8ll");
    static STRUCT_IF_C S_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(S_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu8ll)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu8ll, S_BFu0s_BFu8ll)
//============================================================================



static void Test_S_BFu0s_BFu8s()
{
  {
    init_simple_test("S_BFu0s_BFu8s");
    static STRUCT_IF_C S_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(S_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu8s)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu8s, S_BFu0s_BFu8s)
//============================================================================



static void Test_S_BFu0s_BFu9i()
{
  {
    init_simple_test("S_BFu0s_BFu9i");
    static STRUCT_IF_C S_BFu0s_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu9i)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu9i, S_BFu0s_BFu9i)
//============================================================================



static void Test_S_BFu0s_BFu9ll()
{
  {
    init_simple_test("S_BFu0s_BFu9ll");
    static STRUCT_IF_C S_BFu0s_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu9ll)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu9ll, S_BFu0s_BFu9ll)
//============================================================================



static void Test_S_BFu0s_BFu9s()
{
  {
    init_simple_test("S_BFu0s_BFu9s");
    static STRUCT_IF_C S_BFu0s_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_BFu9s)");
    check_field_offset(lv, v1, 0, "S_BFu0s_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_BFu9s, S_BFu0s_BFu9s)
//============================================================================



static void Test_S_BFu0s_C()
{
  {
    init_simple_test("S_BFu0s_C");
    static STRUCT_IF_C S_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(S_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_C)");
    check_field_offset(lv, v1, 0, "S_BFu0s_C.v1");
    check_field_offset(lv, v2, 2, "S_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_C, S_BFu0s_C)
//============================================================================



static void Test_S_BFu0s_D()
{
  {
    init_simple_test("S_BFu0s_D");
    static STRUCT_IF_C S_BFu0s_D lv;
    check2(sizeof(lv), 10, "sizeof(S_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_D)");
    check_field_offset(lv, v1, 0, "S_BFu0s_D.v1");
    check_field_offset(lv, v2, 2, "S_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_D, S_BFu0s_D)
//============================================================================



static void Test_S_BFu0s_F()
{
  {
    init_simple_test("S_BFu0s_F");
    static STRUCT_IF_C S_BFu0s_F lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_F)");
    check_field_offset(lv, v1, 0, "S_BFu0s_F.v1");
    check_field_offset(lv, v2, 2, "S_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_F, S_BFu0s_F)
//============================================================================



static void Test_S_BFu0s_I()
{
  {
    init_simple_test("S_BFu0s_I");
    static STRUCT_IF_C S_BFu0s_I lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_I)");
    check_field_offset(lv, v1, 0, "S_BFu0s_I.v1");
    check_field_offset(lv, v2, 2, "S_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_I, S_BFu0s_I)
//============================================================================



static void Test_S_BFu0s_Ip()
{
  {
    init_simple_test("S_BFu0s_Ip");
    static STRUCT_IF_C S_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_Ip)");
    check_field_offset(lv, v1, 0, "S_BFu0s_Ip.v1");
    check_field_offset(lv, v2, 2, "S_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_Ip, S_BFu0s_Ip)
//============================================================================



static void Test_S_BFu0s_L()
{
  {
    init_simple_test("S_BFu0s_L");
    static STRUCT_IF_C S_BFu0s_L lv;
    check2(sizeof(lv), 10, "sizeof(S_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_L)");
    check_field_offset(lv, v1, 0, "S_BFu0s_L.v1");
    check_field_offset(lv, v2, 2, "S_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_L, S_BFu0s_L)
//============================================================================



static void Test_S_BFu0s_S()
{
  {
    init_simple_test("S_BFu0s_S");
    static STRUCT_IF_C S_BFu0s_S lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_S)");
    check_field_offset(lv, v1, 0, "S_BFu0s_S.v1");
    check_field_offset(lv, v2, 2, "S_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_S, S_BFu0s_S)
//============================================================================



static void Test_S_BFu0s_Uc()
{
  {
    init_simple_test("S_BFu0s_Uc");
    static STRUCT_IF_C S_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(S_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_Uc)");
    check_field_offset(lv, v1, 0, "S_BFu0s_Uc.v1");
    check_field_offset(lv, v2, 2, "S_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_Uc, S_BFu0s_Uc)
//============================================================================



static void Test_S_BFu0s_Ui()
{
  {
    init_simple_test("S_BFu0s_Ui");
    static STRUCT_IF_C S_BFu0s_Ui lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_Ui)");
    check_field_offset(lv, v1, 0, "S_BFu0s_Ui.v1");
    check_field_offset(lv, v2, 2, "S_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_Ui, S_BFu0s_Ui)
//============================================================================



static void Test_S_BFu0s_Ul()
{
  {
    init_simple_test("S_BFu0s_Ul");
    static STRUCT_IF_C S_BFu0s_Ul lv;
    check2(sizeof(lv), 10, "sizeof(S_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_Ul)");
    check_field_offset(lv, v1, 0, "S_BFu0s_Ul.v1");
    check_field_offset(lv, v2, 2, "S_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_Ul, S_BFu0s_Ul)
//============================================================================



static void Test_S_BFu0s_Us()
{
  {
    init_simple_test("S_BFu0s_Us");
    static STRUCT_IF_C S_BFu0s_Us lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_Us)");
    check_field_offset(lv, v1, 0, "S_BFu0s_Us.v1");
    check_field_offset(lv, v2, 2, "S_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_Us, S_BFu0s_Us)
//============================================================================



static void Test_S_BFu0s_Vp()
{
  {
    init_simple_test("S_BFu0s_Vp");
    static STRUCT_IF_C S_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu0s_Vp)");
    check_field_offset(lv, v1, 0, "S_BFu0s_Vp.v1");
    check_field_offset(lv, v2, 2, "S_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu0s_Vp, S_BFu0s_Vp)
//============================================================================



static void Test_S_BFu15i_BFu0c()
{
  {
    init_simple_test("S_BFu15i_BFu0c");
    static STRUCT_IF_C S_BFu15i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu15i_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu15i_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu15i_BFu0c, S_BFu15i_BFu0c)
//============================================================================



static void Test_S_BFu15i_BFu0i()
{
  {
    init_simple_test("S_BFu15i_BFu0i");
    static STRUCT_IF_C S_BFu15i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu15i_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu15i_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu15i_BFu0i, S_BFu15i_BFu0i)
//============================================================================



static void Test_S_BFu15i_BFu0ll()
{
  {
    init_simple_test("S_BFu15i_BFu0ll");
    static STRUCT_IF_C S_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu15i_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu15i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu15i_BFu0ll, S_BFu15i_BFu0ll)
//============================================================================



static void Test_S_BFu15i_BFu0s()
{
  {
    init_simple_test("S_BFu15i_BFu0s");
    static STRUCT_IF_C S_BFu15i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu15i_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu15i_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu15i_BFu0s, S_BFu15i_BFu0s)
//============================================================================



static void Test_S_BFu15ll_BFu0c()
{
  {
    init_simple_test("S_BFu15ll_BFu0c");
    static STRUCT_IF_C S_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu15ll_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu15ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu15ll_BFu0c, S_BFu15ll_BFu0c)
//============================================================================



static void Test_S_BFu15ll_BFu0i()
{
  {
    init_simple_test("S_BFu15ll_BFu0i");
    static STRUCT_IF_C S_BFu15ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu15ll_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu15ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu15ll_BFu0i, S_BFu15ll_BFu0i)
//============================================================================



static void Test_S_BFu15ll_BFu0ll()
{
  {
    init_simple_test("S_BFu15ll_BFu0ll");
    static STRUCT_IF_C S_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu15ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu15ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu15ll_BFu0ll, S_BFu15ll_BFu0ll)
//============================================================================



static void Test_S_BFu15ll_BFu0s()
{
  {
    init_simple_test("S_BFu15ll_BFu0s");
    static STRUCT_IF_C S_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu15ll_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu15ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu15ll_BFu0s, S_BFu15ll_BFu0s)
//============================================================================



static void Test_S_BFu15s_BFu0c()
{
  {
    init_simple_test("S_BFu15s_BFu0c");
    static STRUCT_IF_C S_BFu15s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu15s_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu15s_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu15s_BFu0c, S_BFu15s_BFu0c)
//============================================================================



static void Test_S_BFu15s_BFu0i()
{
  {
    init_simple_test("S_BFu15s_BFu0i");
    static STRUCT_IF_C S_BFu15s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu15s_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu15s_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu15s_BFu0i, S_BFu15s_BFu0i)
//============================================================================



static void Test_S_BFu15s_BFu0ll()
{
  {
    init_simple_test("S_BFu15s_BFu0ll");
    static STRUCT_IF_C S_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu15s_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu15s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu15s_BFu0ll, S_BFu15s_BFu0ll)
//============================================================================



static void Test_S_BFu15s_BFu0s()
{
  {
    init_simple_test("S_BFu15s_BFu0s");
    static STRUCT_IF_C S_BFu15s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu15s_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu15s_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu15s_BFu0s, S_BFu15s_BFu0s)
//============================================================================



static void Test_S_BFu16i_BFu0c()
{
  {
    init_simple_test("S_BFu16i_BFu0c");
    static STRUCT_IF_C S_BFu16i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu16i_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu16i_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu16i_BFu0c, S_BFu16i_BFu0c)
//============================================================================



static void Test_S_BFu16i_BFu0i()
{
  {
    init_simple_test("S_BFu16i_BFu0i");
    static STRUCT_IF_C S_BFu16i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu16i_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu16i_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu16i_BFu0i, S_BFu16i_BFu0i)
//============================================================================



static void Test_S_BFu16i_BFu0ll()
{
  {
    init_simple_test("S_BFu16i_BFu0ll");
    static STRUCT_IF_C S_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu16i_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu16i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu16i_BFu0ll, S_BFu16i_BFu0ll)
//============================================================================



static void Test_S_BFu16i_BFu0s()
{
  {
    init_simple_test("S_BFu16i_BFu0s");
    static STRUCT_IF_C S_BFu16i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu16i_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu16i_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu16i_BFu0s, S_BFu16i_BFu0s)
//============================================================================



static void Test_S_BFu16ll_BFu0c()
{
  {
    init_simple_test("S_BFu16ll_BFu0c");
    static STRUCT_IF_C S_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu16ll_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu16ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu16ll_BFu0c, S_BFu16ll_BFu0c)
//============================================================================



static void Test_S_BFu16ll_BFu0i()
{
  {
    init_simple_test("S_BFu16ll_BFu0i");
    static STRUCT_IF_C S_BFu16ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu16ll_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu16ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu16ll_BFu0i, S_BFu16ll_BFu0i)
//============================================================================



static void Test_S_BFu16ll_BFu0ll()
{
  {
    init_simple_test("S_BFu16ll_BFu0ll");
    static STRUCT_IF_C S_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu16ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu16ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu16ll_BFu0ll, S_BFu16ll_BFu0ll)
//============================================================================



static void Test_S_BFu16ll_BFu0s()
{
  {
    init_simple_test("S_BFu16ll_BFu0s");
    static STRUCT_IF_C S_BFu16ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu16ll_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu16ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu16ll_BFu0s, S_BFu16ll_BFu0s)
//============================================================================



static void Test_S_BFu16s_BFu0c()
{
  {
    init_simple_test("S_BFu16s_BFu0c");
    static STRUCT_IF_C S_BFu16s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu16s_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu16s_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu16s_BFu0c, S_BFu16s_BFu0c)
//============================================================================



static void Test_S_BFu16s_BFu0i()
{
  {
    init_simple_test("S_BFu16s_BFu0i");
    static STRUCT_IF_C S_BFu16s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu16s_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu16s_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu16s_BFu0i, S_BFu16s_BFu0i)
//============================================================================



static void Test_S_BFu16s_BFu0ll()
{
  {
    init_simple_test("S_BFu16s_BFu0ll");
    static STRUCT_IF_C S_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu16s_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu16s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu16s_BFu0ll, S_BFu16s_BFu0ll)
//============================================================================



static void Test_S_BFu16s_BFu0s()
{
  {
    init_simple_test("S_BFu16s_BFu0s");
    static STRUCT_IF_C S_BFu16s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu16s_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu16s_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu16s_BFu0s, S_BFu16s_BFu0s)
//============================================================================



static void Test_S_BFu17i_BFu0c()
{
  {
    init_simple_test("S_BFu17i_BFu0c");
    static STRUCT_IF_C S_BFu17i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(S_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu17i_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu17i_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "S_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "S_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu17i_BFu0c, S_BFu17i_BFu0c)
//============================================================================



static void Test_S_BFu17i_BFu0i()
{
  {
    init_simple_test("S_BFu17i_BFu0i");
    static STRUCT_IF_C S_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu17i_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu17i_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "S_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "S_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu17i_BFu0i, S_BFu17i_BFu0i)
//============================================================================



static void Test_S_BFu17i_BFu0ll()
{
  {
    init_simple_test("S_BFu17i_BFu0ll");
    static STRUCT_IF_C S_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu17i_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu17i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "S_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "S_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu17i_BFu0ll, S_BFu17i_BFu0ll)
//============================================================================



static void Test_S_BFu17i_BFu0s()
{
  {
    init_simple_test("S_BFu17i_BFu0s");
    static STRUCT_IF_C S_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(S_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu17i_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu17i_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "S_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "S_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu17i_BFu0s, S_BFu17i_BFu0s)
//============================================================================



static void Test_S_BFu17ll_BFu0c()
{
  {
    init_simple_test("S_BFu17ll_BFu0c");
    static STRUCT_IF_C S_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(S_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu17ll_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu17ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "S_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "S_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu17ll_BFu0c, S_BFu17ll_BFu0c)
//============================================================================



static void Test_S_BFu17ll_BFu0i()
{
  {
    init_simple_test("S_BFu17ll_BFu0i");
    static STRUCT_IF_C S_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu17ll_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu17ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "S_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "S_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu17ll_BFu0i, S_BFu17ll_BFu0i)
//============================================================================



static void Test_S_BFu17ll_BFu0ll()
{
  {
    init_simple_test("S_BFu17ll_BFu0ll");
    static STRUCT_IF_C S_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu17ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu17ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "S_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "S_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu17ll_BFu0ll, S_BFu17ll_BFu0ll)
//============================================================================



static void Test_S_BFu17ll_BFu0s()
{
  {
    init_simple_test("S_BFu17ll_BFu0s");
    static STRUCT_IF_C S_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(S_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu17ll_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu17ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "S_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "S_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu17ll_BFu0s, S_BFu17ll_BFu0s)
//============================================================================



static void Test_S_BFu1c_BFu0c()
{
  {
    init_simple_test("S_BFu1c_BFu0c");
    static STRUCT_IF_C S_BFu1c_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu1c_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu1c_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1c_BFu0c, S_BFu1c_BFu0c)
//============================================================================



static void Test_S_BFu1c_BFu0i()
{
  {
    init_simple_test("S_BFu1c_BFu0i");
    static STRUCT_IF_C S_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu1c_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu1c_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1c_BFu0i, S_BFu1c_BFu0i)
//============================================================================



static void Test_S_BFu1c_BFu0ll()
{
  {
    init_simple_test("S_BFu1c_BFu0ll");
    static STRUCT_IF_C S_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu1c_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu1c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1c_BFu0ll, S_BFu1c_BFu0ll)
//============================================================================



static void Test_S_BFu1c_BFu0s()
{
  {
    init_simple_test("S_BFu1c_BFu0s");
    static STRUCT_IF_C S_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu1c_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu1c_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1c_BFu0s, S_BFu1c_BFu0s)
//============================================================================



static void Test_S_BFu1i_BFu0c()
{
  {
    init_simple_test("S_BFu1i_BFu0c");
    static STRUCT_IF_C S_BFu1i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu1i_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu1i_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1i_BFu0c, S_BFu1i_BFu0c)
//============================================================================



static void Test_S_BFu1i_BFu0i()
{
  {
    init_simple_test("S_BFu1i_BFu0i");
    static STRUCT_IF_C S_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu1i_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu1i_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1i_BFu0i, S_BFu1i_BFu0i)
//============================================================================



static void Test_S_BFu1i_BFu0ll()
{
  {
    init_simple_test("S_BFu1i_BFu0ll");
    static STRUCT_IF_C S_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu1i_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu1i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1i_BFu0ll, S_BFu1i_BFu0ll)
//============================================================================



static void Test_S_BFu1i_BFu0s()
{
  {
    init_simple_test("S_BFu1i_BFu0s");
    static STRUCT_IF_C S_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu1i_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu1i_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1i_BFu0s, S_BFu1i_BFu0s)
//============================================================================



static void Test_S_BFu1ll_BFu0c()
{
  {
    init_simple_test("S_BFu1ll_BFu0c");
    static STRUCT_IF_C S_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu1ll_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu1ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1ll_BFu0c, S_BFu1ll_BFu0c)
//============================================================================



static void Test_S_BFu1ll_BFu0i()
{
  {
    init_simple_test("S_BFu1ll_BFu0i");
    static STRUCT_IF_C S_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu1ll_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu1ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1ll_BFu0i, S_BFu1ll_BFu0i)
//============================================================================



static void Test_S_BFu1ll_BFu0ll()
{
  {
    init_simple_test("S_BFu1ll_BFu0ll");
    static STRUCT_IF_C S_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu1ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu1ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1ll_BFu0ll, S_BFu1ll_BFu0ll)
//============================================================================



static void Test_S_BFu1ll_BFu0s()
{
  {
    init_simple_test("S_BFu1ll_BFu0s");
    static STRUCT_IF_C S_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu1ll_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu1ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1ll_BFu0s, S_BFu1ll_BFu0s)
//============================================================================



static void Test_S_BFu1s_BFu0c()
{
  {
    init_simple_test("S_BFu1s_BFu0c");
    static STRUCT_IF_C S_BFu1s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu1s_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu1s_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1s_BFu0c, S_BFu1s_BFu0c)
//============================================================================



static void Test_S_BFu1s_BFu0i()
{
  {
    init_simple_test("S_BFu1s_BFu0i");
    static STRUCT_IF_C S_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu1s_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu1s_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1s_BFu0i, S_BFu1s_BFu0i)
//============================================================================



static void Test_S_BFu1s_BFu0ll()
{
  {
    init_simple_test("S_BFu1s_BFu0ll");
    static STRUCT_IF_C S_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu1s_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu1s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1s_BFu0ll, S_BFu1s_BFu0ll)
//============================================================================



static void Test_S_BFu1s_BFu0s()
{
  {
    init_simple_test("S_BFu1s_BFu0s");
    static STRUCT_IF_C S_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu1s_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu1s_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1s_BFu0s, S_BFu1s_BFu0s)
//============================================================================



static void Test_S_BFu31i_BFu0c()
{
  {
    init_simple_test("S_BFu31i_BFu0c");
    static STRUCT_IF_C S_BFu31i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu31i_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu31i_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "S_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "S_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu31i_BFu0c, S_BFu31i_BFu0c)
//============================================================================



static void Test_S_BFu31i_BFu0i()
{
  {
    init_simple_test("S_BFu31i_BFu0i");
    static STRUCT_IF_C S_BFu31i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu31i_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu31i_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "S_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "S_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu31i_BFu0i, S_BFu31i_BFu0i)
//============================================================================



static void Test_S_BFu31i_BFu0ll()
{
  {
    init_simple_test("S_BFu31i_BFu0ll");
    static STRUCT_IF_C S_BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu31i_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu31i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "S_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "S_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu31i_BFu0ll, S_BFu31i_BFu0ll)
//============================================================================



static void Test_S_BFu31i_BFu0s()
{
  {
    init_simple_test("S_BFu31i_BFu0s");
    static STRUCT_IF_C S_BFu31i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu31i_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu31i_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "S_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "S_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu31i_BFu0s, S_BFu31i_BFu0s)
//============================================================================



static void Test_S_BFu31ll_BFu0c()
{
  {
    init_simple_test("S_BFu31ll_BFu0c");
    static STRUCT_IF_C S_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu31ll_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu31ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "S_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "S_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu31ll_BFu0c, S_BFu31ll_BFu0c)
//============================================================================



static void Test_S_BFu31ll_BFu0i()
{
  {
    init_simple_test("S_BFu31ll_BFu0i");
    static STRUCT_IF_C S_BFu31ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu31ll_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu31ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "S_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "S_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu31ll_BFu0i, S_BFu31ll_BFu0i)
//============================================================================



static void Test_S_BFu31ll_BFu0ll()
{
  {
    init_simple_test("S_BFu31ll_BFu0ll");
    static STRUCT_IF_C S_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu31ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu31ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "S_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "S_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu31ll_BFu0ll, S_BFu31ll_BFu0ll)
//============================================================================



static void Test_S_BFu31ll_BFu0s()
{
  {
    init_simple_test("S_BFu31ll_BFu0s");
    static STRUCT_IF_C S_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu31ll_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu31ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "S_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "S_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu31ll_BFu0s, S_BFu31ll_BFu0s)
//============================================================================



static void Test_S_BFu32i_BFu0c()
{
  {
    init_simple_test("S_BFu32i_BFu0c");
    static STRUCT_IF_C S_BFu32i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu32i_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu32i_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "S_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "S_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu32i_BFu0c, S_BFu32i_BFu0c)
//============================================================================



static void Test_S_BFu32i_BFu0i()
{
  {
    init_simple_test("S_BFu32i_BFu0i");
    static STRUCT_IF_C S_BFu32i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu32i_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu32i_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "S_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "S_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu32i_BFu0i, S_BFu32i_BFu0i)
//============================================================================



static void Test_S_BFu32i_BFu0ll()
{
  {
    init_simple_test("S_BFu32i_BFu0ll");
    static STRUCT_IF_C S_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu32i_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu32i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "S_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "S_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu32i_BFu0ll, S_BFu32i_BFu0ll)
//============================================================================



static void Test_S_BFu32i_BFu0s()
{
  {
    init_simple_test("S_BFu32i_BFu0s");
    static STRUCT_IF_C S_BFu32i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu32i_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu32i_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "S_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "S_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu32i_BFu0s, S_BFu32i_BFu0s)
//============================================================================



static void Test_S_BFu32ll_BFu0c()
{
  {
    init_simple_test("S_BFu32ll_BFu0c");
    static STRUCT_IF_C S_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu32ll_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu32ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "S_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "S_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu32ll_BFu0c, S_BFu32ll_BFu0c)
//============================================================================



static void Test_S_BFu32ll_BFu0i()
{
  {
    init_simple_test("S_BFu32ll_BFu0i");
    static STRUCT_IF_C S_BFu32ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu32ll_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu32ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "S_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "S_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu32ll_BFu0i, S_BFu32ll_BFu0i)
//============================================================================



static void Test_S_BFu32ll_BFu0ll()
{
  {
    init_simple_test("S_BFu32ll_BFu0ll");
    static STRUCT_IF_C S_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu32ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu32ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "S_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "S_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu32ll_BFu0ll, S_BFu32ll_BFu0ll)
//============================================================================



static void Test_S_BFu32ll_BFu0s()
{
  {
    init_simple_test("S_BFu32ll_BFu0s");
    static STRUCT_IF_C S_BFu32ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu32ll_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu32ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "S_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "S_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu32ll_BFu0s, S_BFu32ll_BFu0s)
//============================================================================



static void Test_S_BFu33_BFu0c()
{
  {
    init_simple_test("S_BFu33_BFu0c");
    static STRUCT_IF_C S_BFu33_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(S_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu33_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu33_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "S_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "S_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu33_BFu0c, S_BFu33_BFu0c)
//============================================================================



static void Test_S_BFu33_BFu0i()
{
  {
    init_simple_test("S_BFu33_BFu0i");
    static STRUCT_IF_C S_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu33_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu33_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "S_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "S_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu33_BFu0i, S_BFu33_BFu0i)
//============================================================================



static void Test_S_BFu33_BFu0ll()
{
  {
    init_simple_test("S_BFu33_BFu0ll");
    static STRUCT_IF_C S_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu33_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu33_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "S_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "S_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu33_BFu0ll, S_BFu33_BFu0ll)
//============================================================================



static void Test_S_BFu33_BFu0s()
{
  {
    init_simple_test("S_BFu33_BFu0s");
    static STRUCT_IF_C S_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu33_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu33_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "S_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "S_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu33_BFu0s, S_BFu33_BFu0s)
//============================================================================



static void Test_S_BFu7c_BFu0c()
{
  {
    init_simple_test("S_BFu7c_BFu0c");
    static STRUCT_IF_C S_BFu7c_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu7c_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu7c_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7c_BFu0c, S_BFu7c_BFu0c)
//============================================================================



static void Test_S_BFu7c_BFu0i()
{
  {
    init_simple_test("S_BFu7c_BFu0i");
    static STRUCT_IF_C S_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu7c_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu7c_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7c_BFu0i, S_BFu7c_BFu0i)
//============================================================================



static void Test_S_BFu7c_BFu0ll()
{
  {
    init_simple_test("S_BFu7c_BFu0ll");
    static STRUCT_IF_C S_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu7c_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu7c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7c_BFu0ll, S_BFu7c_BFu0ll)
//============================================================================



static void Test_S_BFu7c_BFu0s()
{
  {
    init_simple_test("S_BFu7c_BFu0s");
    static STRUCT_IF_C S_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu7c_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu7c_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7c_BFu0s, S_BFu7c_BFu0s)
//============================================================================



static void Test_S_BFu7i_BFu0c()
{
  {
    init_simple_test("S_BFu7i_BFu0c");
    static STRUCT_IF_C S_BFu7i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu7i_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu7i_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7i_BFu0c, S_BFu7i_BFu0c)
//============================================================================



static void Test_S_BFu7i_BFu0i()
{
  {
    init_simple_test("S_BFu7i_BFu0i");
    static STRUCT_IF_C S_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu7i_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu7i_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7i_BFu0i, S_BFu7i_BFu0i)
//============================================================================



static void Test_S_BFu7i_BFu0ll()
{
  {
    init_simple_test("S_BFu7i_BFu0ll");
    static STRUCT_IF_C S_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu7i_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu7i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7i_BFu0ll, S_BFu7i_BFu0ll)
//============================================================================



static void Test_S_BFu7i_BFu0s()
{
  {
    init_simple_test("S_BFu7i_BFu0s");
    static STRUCT_IF_C S_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu7i_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu7i_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7i_BFu0s, S_BFu7i_BFu0s)
//============================================================================



static void Test_S_BFu7ll_BFu0c()
{
  {
    init_simple_test("S_BFu7ll_BFu0c");
    static STRUCT_IF_C S_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu7ll_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu7ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7ll_BFu0c, S_BFu7ll_BFu0c)
//============================================================================



static void Test_S_BFu7ll_BFu0i()
{
  {
    init_simple_test("S_BFu7ll_BFu0i");
    static STRUCT_IF_C S_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu7ll_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu7ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7ll_BFu0i, S_BFu7ll_BFu0i)
//============================================================================



static void Test_S_BFu7ll_BFu0ll()
{
  {
    init_simple_test("S_BFu7ll_BFu0ll");
    static STRUCT_IF_C S_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu7ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu7ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7ll_BFu0ll, S_BFu7ll_BFu0ll)
//============================================================================



static void Test_S_BFu7ll_BFu0s()
{
  {
    init_simple_test("S_BFu7ll_BFu0s");
    static STRUCT_IF_C S_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu7ll_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu7ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7ll_BFu0s, S_BFu7ll_BFu0s)
//============================================================================



static void Test_S_BFu7s_BFu0c()
{
  {
    init_simple_test("S_BFu7s_BFu0c");
    static STRUCT_IF_C S_BFu7s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu7s_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu7s_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7s_BFu0c, S_BFu7s_BFu0c)
//============================================================================



static void Test_S_BFu7s_BFu0i()
{
  {
    init_simple_test("S_BFu7s_BFu0i");
    static STRUCT_IF_C S_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu7s_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu7s_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7s_BFu0i, S_BFu7s_BFu0i)
//============================================================================



static void Test_S_BFu7s_BFu0ll()
{
  {
    init_simple_test("S_BFu7s_BFu0ll");
    static STRUCT_IF_C S_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu7s_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu7s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7s_BFu0ll, S_BFu7s_BFu0ll)
//============================================================================



static void Test_S_BFu7s_BFu0s()
{
  {
    init_simple_test("S_BFu7s_BFu0s");
    static STRUCT_IF_C S_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu7s_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu7s_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7s_BFu0s, S_BFu7s_BFu0s)
//============================================================================



static void Test_S_BFu8c_BFu0c()
{
  {
    init_simple_test("S_BFu8c_BFu0c");
    static STRUCT_IF_C S_BFu8c_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu8c_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu8c_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8c_BFu0c, S_BFu8c_BFu0c)
//============================================================================



static void Test_S_BFu8c_BFu0i()
{
  {
    init_simple_test("S_BFu8c_BFu0i");
    static STRUCT_IF_C S_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu8c_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu8c_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8c_BFu0i, S_BFu8c_BFu0i)
//============================================================================



static void Test_S_BFu8c_BFu0ll()
{
  {
    init_simple_test("S_BFu8c_BFu0ll");
    static STRUCT_IF_C S_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu8c_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu8c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8c_BFu0ll, S_BFu8c_BFu0ll)
//============================================================================



static void Test_S_BFu8c_BFu0s()
{
  {
    init_simple_test("S_BFu8c_BFu0s");
    static STRUCT_IF_C S_BFu8c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu8c_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu8c_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8c_BFu0s, S_BFu8c_BFu0s)
//============================================================================



static void Test_S_BFu8i_BFu0c()
{
  {
    init_simple_test("S_BFu8i_BFu0c");
    static STRUCT_IF_C S_BFu8i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu8i_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu8i_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8i_BFu0c, S_BFu8i_BFu0c)
//============================================================================



static void Test_S_BFu8i_BFu0i()
{
  {
    init_simple_test("S_BFu8i_BFu0i");
    static STRUCT_IF_C S_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu8i_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu8i_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8i_BFu0i, S_BFu8i_BFu0i)
//============================================================================



static void Test_S_BFu8i_BFu0ll()
{
  {
    init_simple_test("S_BFu8i_BFu0ll");
    static STRUCT_IF_C S_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu8i_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu8i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8i_BFu0ll, S_BFu8i_BFu0ll)
//============================================================================



static void Test_S_BFu8i_BFu0s()
{
  {
    init_simple_test("S_BFu8i_BFu0s");
    static STRUCT_IF_C S_BFu8i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu8i_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu8i_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8i_BFu0s, S_BFu8i_BFu0s)
//============================================================================



static void Test_S_BFu8ll_BFu0c()
{
  {
    init_simple_test("S_BFu8ll_BFu0c");
    static STRUCT_IF_C S_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu8ll_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu8ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8ll_BFu0c, S_BFu8ll_BFu0c)
//============================================================================



static void Test_S_BFu8ll_BFu0i()
{
  {
    init_simple_test("S_BFu8ll_BFu0i");
    static STRUCT_IF_C S_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu8ll_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu8ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8ll_BFu0i, S_BFu8ll_BFu0i)
//============================================================================



static void Test_S_BFu8ll_BFu0ll()
{
  {
    init_simple_test("S_BFu8ll_BFu0ll");
    static STRUCT_IF_C S_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu8ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu8ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8ll_BFu0ll, S_BFu8ll_BFu0ll)
//============================================================================



static void Test_S_BFu8ll_BFu0s()
{
  {
    init_simple_test("S_BFu8ll_BFu0s");
    static STRUCT_IF_C S_BFu8ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu8ll_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu8ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8ll_BFu0s, S_BFu8ll_BFu0s)
//============================================================================



static void Test_S_BFu8s_BFu0c()
{
  {
    init_simple_test("S_BFu8s_BFu0c");
    static STRUCT_IF_C S_BFu8s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu8s_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu8s_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8s_BFu0c, S_BFu8s_BFu0c)
//============================================================================



static void Test_S_BFu8s_BFu0i()
{
  {
    init_simple_test("S_BFu8s_BFu0i");
    static STRUCT_IF_C S_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu8s_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu8s_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8s_BFu0i, S_BFu8s_BFu0i)
//============================================================================



static void Test_S_BFu8s_BFu0ll()
{
  {
    init_simple_test("S_BFu8s_BFu0ll");
    static STRUCT_IF_C S_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu8s_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu8s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8s_BFu0ll, S_BFu8s_BFu0ll)
//============================================================================



static void Test_S_BFu8s_BFu0s()
{
  {
    init_simple_test("S_BFu8s_BFu0s");
    static STRUCT_IF_C S_BFu8s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu8s_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu8s_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8s_BFu0s, S_BFu8s_BFu0s)
//============================================================================



static void Test_S_BFu9i_BFu0c()
{
  {
    init_simple_test("S_BFu9i_BFu0c");
    static STRUCT_IF_C S_BFu9i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu9i_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu9i_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu9i_BFu0c, S_BFu9i_BFu0c)
//============================================================================



static void Test_S_BFu9i_BFu0i()
{
  {
    init_simple_test("S_BFu9i_BFu0i");
    static STRUCT_IF_C S_BFu9i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu9i_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu9i_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu9i_BFu0i, S_BFu9i_BFu0i)
//============================================================================



static void Test_S_BFu9i_BFu0ll()
{
  {
    init_simple_test("S_BFu9i_BFu0ll");
    static STRUCT_IF_C S_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu9i_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu9i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu9i_BFu0ll, S_BFu9i_BFu0ll)
//============================================================================



static void Test_S_BFu9i_BFu0s()
{
  {
    init_simple_test("S_BFu9i_BFu0s");
    static STRUCT_IF_C S_BFu9i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu9i_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu9i_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu9i_BFu0s, S_BFu9i_BFu0s)
//============================================================================



static void Test_S_BFu9ll_BFu0c()
{
  {
    init_simple_test("S_BFu9ll_BFu0c");
    static STRUCT_IF_C S_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu9ll_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu9ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu9ll_BFu0c, S_BFu9ll_BFu0c)
//============================================================================



static void Test_S_BFu9ll_BFu0i()
{
  {
    init_simple_test("S_BFu9ll_BFu0i");
    static STRUCT_IF_C S_BFu9ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu9ll_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu9ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu9ll_BFu0i, S_BFu9ll_BFu0i)
//============================================================================



static void Test_S_BFu9ll_BFu0ll()
{
  {
    init_simple_test("S_BFu9ll_BFu0ll");
    static STRUCT_IF_C S_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu9ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu9ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu9ll_BFu0ll, S_BFu9ll_BFu0ll)
//============================================================================



static void Test_S_BFu9ll_BFu0s()
{
  {
    init_simple_test("S_BFu9ll_BFu0s");
    static STRUCT_IF_C S_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu9ll_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu9ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu9ll_BFu0s, S_BFu9ll_BFu0s)
//============================================================================



static void Test_S_BFu9s_BFu0c()
{
  {
    init_simple_test("S_BFu9s_BFu0c");
    static STRUCT_IF_C S_BFu9s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu9s_BFu0c)");
    check_field_offset(lv, v1, 0, "S_BFu9s_BFu0c.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu9s_BFu0c, S_BFu9s_BFu0c)
//============================================================================



static void Test_S_BFu9s_BFu0i()
{
  {
    init_simple_test("S_BFu9s_BFu0i");
    static STRUCT_IF_C S_BFu9s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu9s_BFu0i)");
    check_field_offset(lv, v1, 0, "S_BFu9s_BFu0i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu9s_BFu0i, S_BFu9s_BFu0i)
//============================================================================



static void Test_S_BFu9s_BFu0ll()
{
  {
    init_simple_test("S_BFu9s_BFu0ll");
    static STRUCT_IF_C S_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu9s_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_BFu9s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu9s_BFu0ll, S_BFu9s_BFu0ll)
//============================================================================



static void Test_S_BFu9s_BFu0s()
{
  {
    init_simple_test("S_BFu9s_BFu0s");
    static STRUCT_IF_C S_BFu9s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_BFu9s_BFu0s)");
    check_field_offset(lv, v1, 0, "S_BFu9s_BFu0s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu9s_BFu0s, S_BFu9s_BFu0s)
//============================================================================



static void Test_S_C_BFu0c()
{
  {
    init_simple_test("S_C_BFu0c");
    static STRUCT_IF_C S_C_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(S_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_C_BFu0c)");
    check_field_offset(lv, v1, 0, "S_C_BFu0c.v1");
    check_field_offset(lv, v2, 2, "S_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_C_BFu0c, S_C_BFu0c)
//============================================================================



static void Test_S_C_BFu0i()
{
  {
    init_simple_test("S_C_BFu0i");
    static STRUCT_IF_C S_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_C_BFu0i)");
    check_field_offset(lv, v1, 0, "S_C_BFu0i.v1");
    check_field_offset(lv, v2, 2, "S_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_C_BFu0i, S_C_BFu0i)
//============================================================================



static void Test_S_C_BFu0ll()
{
  {
    init_simple_test("S_C_BFu0ll");
    static STRUCT_IF_C S_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_C_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_C_BFu0ll.v1");
    check_field_offset(lv, v2, 2, "S_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_C_BFu0ll, S_C_BFu0ll)
//============================================================================



static void Test_S_C_BFu0s()
{
  {
    init_simple_test("S_C_BFu0s");
    static STRUCT_IF_C S_C_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_C_BFu0s)");
    check_field_offset(lv, v1, 0, "S_C_BFu0s.v1");
    check_field_offset(lv, v2, 2, "S_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_C_BFu0s, S_C_BFu0s)
//============================================================================



static void Test_S_D_BFu0c()
{
  {
    init_simple_test("S_D_BFu0c");
    static STRUCT_IF_C S_D_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(S_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_D_BFu0c)");
    check_field_offset(lv, v1, 0, "S_D_BFu0c.v1");
    check_field_offset(lv, v2, 2, "S_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_D_BFu0c, S_D_BFu0c)
//============================================================================



static void Test_S_D_BFu0i()
{
  {
    init_simple_test("S_D_BFu0i");
    static STRUCT_IF_C S_D_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(S_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_D_BFu0i)");
    check_field_offset(lv, v1, 0, "S_D_BFu0i.v1");
    check_field_offset(lv, v2, 2, "S_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_D_BFu0i, S_D_BFu0i)
//============================================================================



static void Test_S_D_BFu0ll()
{
  {
    init_simple_test("S_D_BFu0ll");
    static STRUCT_IF_C S_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(S_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_D_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_D_BFu0ll.v1");
    check_field_offset(lv, v2, 2, "S_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_D_BFu0ll, S_D_BFu0ll)
//============================================================================



static void Test_S_D_BFu0s()
{
  {
    init_simple_test("S_D_BFu0s");
    static STRUCT_IF_C S_D_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(S_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_D_BFu0s)");
    check_field_offset(lv, v1, 0, "S_D_BFu0s.v1");
    check_field_offset(lv, v2, 2, "S_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_D_BFu0s, S_D_BFu0s)
//============================================================================



static void Test_S_F_BFu0c()
{
  {
    init_simple_test("S_F_BFu0c");
    static STRUCT_IF_C S_F_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(S_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_F_BFu0c)");
    check_field_offset(lv, v1, 0, "S_F_BFu0c.v1");
    check_field_offset(lv, v2, 2, "S_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_F_BFu0c, S_F_BFu0c)
//============================================================================



static void Test_S_F_BFu0i()
{
  {
    init_simple_test("S_F_BFu0i");
    static STRUCT_IF_C S_F_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_F_BFu0i)");
    check_field_offset(lv, v1, 0, "S_F_BFu0i.v1");
    check_field_offset(lv, v2, 2, "S_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_F_BFu0i, S_F_BFu0i)
//============================================================================



static void Test_S_F_BFu0ll()
{
  {
    init_simple_test("S_F_BFu0ll");
    static STRUCT_IF_C S_F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_F_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_F_BFu0ll.v1");
    check_field_offset(lv, v2, 2, "S_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_F_BFu0ll, S_F_BFu0ll)
//============================================================================



static void Test_S_F_BFu0s()
{
  {
    init_simple_test("S_F_BFu0s");
    static STRUCT_IF_C S_F_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(S_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_F_BFu0s)");
    check_field_offset(lv, v1, 0, "S_F_BFu0s.v1");
    check_field_offset(lv, v2, 2, "S_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_F_BFu0s, S_F_BFu0s)
//============================================================================



static void Test_S_I_BFu0c()
{
  {
    init_simple_test("S_I_BFu0c");
    static STRUCT_IF_C S_I_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(S_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_I_BFu0c)");
    check_field_offset(lv, v1, 0, "S_I_BFu0c.v1");
    check_field_offset(lv, v2, 2, "S_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_I_BFu0c, S_I_BFu0c)
//============================================================================



static void Test_S_I_BFu0i()
{
  {
    init_simple_test("S_I_BFu0i");
    static STRUCT_IF_C S_I_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_I_BFu0i)");
    check_field_offset(lv, v1, 0, "S_I_BFu0i.v1");
    check_field_offset(lv, v2, 2, "S_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_I_BFu0i, S_I_BFu0i)
//============================================================================



static void Test_S_I_BFu0ll()
{
  {
    init_simple_test("S_I_BFu0ll");
    static STRUCT_IF_C S_I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_I_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_I_BFu0ll.v1");
    check_field_offset(lv, v2, 2, "S_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_I_BFu0ll, S_I_BFu0ll)
//============================================================================



static void Test_S_I_BFu0s()
{
  {
    init_simple_test("S_I_BFu0s");
    static STRUCT_IF_C S_I_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(S_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_I_BFu0s)");
    check_field_offset(lv, v1, 0, "S_I_BFu0s.v1");
    check_field_offset(lv, v2, 2, "S_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_I_BFu0s, S_I_BFu0s)
//============================================================================



static void Test_S_Ip_BFu0c()
{
  {
    init_simple_test("S_Ip_BFu0c");
    static STRUCT_IF_C S_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_Ip_BFu0c)");
    check_field_offset(lv, v1, 0, "S_Ip_BFu0c.v1");
    check_field_offset(lv, v2, 2, "S_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Ip_BFu0c, S_Ip_BFu0c)
//============================================================================



static void Test_S_Ip_BFu0i()
{
  {
    init_simple_test("S_Ip_BFu0i");
    static STRUCT_IF_C S_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(S_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Ip_BFu0i)");
    check_field_offset(lv, v1, 0, "S_Ip_BFu0i.v1");
    check_field_offset(lv, v2, 2, "S_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Ip_BFu0i, S_Ip_BFu0i)
//============================================================================



static void Test_S_Ip_BFu0ll()
{
  {
    init_simple_test("S_Ip_BFu0ll");
    static STRUCT_IF_C S_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(S_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Ip_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_Ip_BFu0ll.v1");
    check_field_offset(lv, v2, 2, "S_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Ip_BFu0ll, S_Ip_BFu0ll)
//============================================================================



static void Test_S_Ip_BFu0s()
{
  {
    init_simple_test("S_Ip_BFu0s");
    static STRUCT_IF_C S_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Ip_BFu0s)");
    check_field_offset(lv, v1, 0, "S_Ip_BFu0s.v1");
    check_field_offset(lv, v2, 2, "S_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Ip_BFu0s, S_Ip_BFu0s)
//============================================================================



static void Test_S_L_BFu0c()
{
  {
    init_simple_test("S_L_BFu0c");
    static STRUCT_IF_C S_L_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(S_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_L_BFu0c)");
    check_field_offset(lv, v1, 0, "S_L_BFu0c.v1");
    check_field_offset(lv, v2, 2, "S_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_L_BFu0c, S_L_BFu0c)
//============================================================================



static void Test_S_L_BFu0i()
{
  {
    init_simple_test("S_L_BFu0i");
    static STRUCT_IF_C S_L_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(S_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_L_BFu0i)");
    check_field_offset(lv, v1, 0, "S_L_BFu0i.v1");
    check_field_offset(lv, v2, 2, "S_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_L_BFu0i, S_L_BFu0i)
//============================================================================



static void Test_S_L_BFu0ll()
{
  {
    init_simple_test("S_L_BFu0ll");
    static STRUCT_IF_C S_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(S_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_L_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_L_BFu0ll.v1");
    check_field_offset(lv, v2, 2, "S_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_L_BFu0ll, S_L_BFu0ll)
//============================================================================



static void Test_S_L_BFu0s()
{
  {
    init_simple_test("S_L_BFu0s");
    static STRUCT_IF_C S_L_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(S_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_L_BFu0s)");
    check_field_offset(lv, v1, 0, "S_L_BFu0s.v1");
    check_field_offset(lv, v2, 2, "S_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_L_BFu0s, S_L_BFu0s)
//============================================================================



static void Test_S_S_BFu0c()
{
  {
    init_simple_test("S_S_BFu0c");
    static STRUCT_IF_C S_S_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(S_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_S_BFu0c)");
    check_field_offset(lv, v1, 0, "S_S_BFu0c.v1");
    check_field_offset(lv, v2, 2, "S_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_S_BFu0c, S_S_BFu0c)
//============================================================================



static void Test_S_S_BFu0i()
{
  {
    init_simple_test("S_S_BFu0i");
    static STRUCT_IF_C S_S_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(S_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_S_BFu0i)");
    check_field_offset(lv, v1, 0, "S_S_BFu0i.v1");
    check_field_offset(lv, v2, 2, "S_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_S_BFu0i, S_S_BFu0i)
//============================================================================



static void Test_S_S_BFu0ll()
{
  {
    init_simple_test("S_S_BFu0ll");
    static STRUCT_IF_C S_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_S_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_S_BFu0ll.v1");
    check_field_offset(lv, v2, 2, "S_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_S_BFu0ll, S_S_BFu0ll)
//============================================================================



static void Test_S_S_BFu0s()
{
  {
    init_simple_test("S_S_BFu0s");
    static STRUCT_IF_C S_S_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(S_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_S_BFu0s)");
    check_field_offset(lv, v1, 0, "S_S_BFu0s.v1");
    check_field_offset(lv, v2, 2, "S_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_S_BFu0s, S_S_BFu0s)
//============================================================================



static void Test_S_Uc_BFu0c()
{
  {
    init_simple_test("S_Uc_BFu0c");
    static STRUCT_IF_C S_Uc_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(S_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_Uc_BFu0c)");
    check_field_offset(lv, v1, 0, "S_Uc_BFu0c.v1");
    check_field_offset(lv, v2, 2, "S_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Uc_BFu0c, S_Uc_BFu0c)
//============================================================================



static void Test_S_Uc_BFu0i()
{
  {
    init_simple_test("S_Uc_BFu0i");
    static STRUCT_IF_C S_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Uc_BFu0i)");
    check_field_offset(lv, v1, 0, "S_Uc_BFu0i.v1");
    check_field_offset(lv, v2, 2, "S_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Uc_BFu0i, S_Uc_BFu0i)
//============================================================================



static void Test_S_Uc_BFu0ll()
{
  {
    init_simple_test("S_Uc_BFu0ll");
    static STRUCT_IF_C S_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Uc_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_Uc_BFu0ll.v1");
    check_field_offset(lv, v2, 2, "S_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Uc_BFu0ll, S_Uc_BFu0ll)
//============================================================================



static void Test_S_Uc_BFu0s()
{
  {
    init_simple_test("S_Uc_BFu0s");
    static STRUCT_IF_C S_Uc_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(S_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Uc_BFu0s)");
    check_field_offset(lv, v1, 0, "S_Uc_BFu0s.v1");
    check_field_offset(lv, v2, 2, "S_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Uc_BFu0s, S_Uc_BFu0s)
//============================================================================



static void Test_S_Ui_BFu0c()
{
  {
    init_simple_test("S_Ui_BFu0c");
    static STRUCT_IF_C S_Ui_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(S_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_Ui_BFu0c)");
    check_field_offset(lv, v1, 0, "S_Ui_BFu0c.v1");
    check_field_offset(lv, v2, 2, "S_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Ui_BFu0c, S_Ui_BFu0c)
//============================================================================



static void Test_S_Ui_BFu0i()
{
  {
    init_simple_test("S_Ui_BFu0i");
    static STRUCT_IF_C S_Ui_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Ui_BFu0i)");
    check_field_offset(lv, v1, 0, "S_Ui_BFu0i.v1");
    check_field_offset(lv, v2, 2, "S_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Ui_BFu0i, S_Ui_BFu0i)
//============================================================================



static void Test_S_Ui_BFu0ll()
{
  {
    init_simple_test("S_Ui_BFu0ll");
    static STRUCT_IF_C S_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(S_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Ui_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_Ui_BFu0ll.v1");
    check_field_offset(lv, v2, 2, "S_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Ui_BFu0ll, S_Ui_BFu0ll)
//============================================================================



static void Test_S_Ui_BFu0s()
{
  {
    init_simple_test("S_Ui_BFu0s");
    static STRUCT_IF_C S_Ui_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(S_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Ui_BFu0s)");
    check_field_offset(lv, v1, 0, "S_Ui_BFu0s.v1");
    check_field_offset(lv, v2, 2, "S_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Ui_BFu0s, S_Ui_BFu0s)
//============================================================================



static void Test_S_Ul_BFu0c()
{
  {
    init_simple_test("S_Ul_BFu0c");
    static STRUCT_IF_C S_Ul_BFu0c lv;
    check2(sizeof(lv), 10, "sizeof(S_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_Ul_BFu0c)");
    check_field_offset(lv, v1, 0, "S_Ul_BFu0c.v1");
    check_field_offset(lv, v2, 2, "S_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Ul_BFu0c, S_Ul_BFu0c)
//============================================================================



static void Test_S_Ul_BFu0i()
{
  {
    init_simple_test("S_Ul_BFu0i");
    static STRUCT_IF_C S_Ul_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(S_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Ul_BFu0i)");
    check_field_offset(lv, v1, 0, "S_Ul_BFu0i.v1");
    check_field_offset(lv, v2, 2, "S_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Ul_BFu0i, S_Ul_BFu0i)
//============================================================================



static void Test_S_Ul_BFu0ll()
{
  {
    init_simple_test("S_Ul_BFu0ll");
    static STRUCT_IF_C S_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(S_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Ul_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_Ul_BFu0ll.v1");
    check_field_offset(lv, v2, 2, "S_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Ul_BFu0ll, S_Ul_BFu0ll)
//============================================================================



static void Test_S_Ul_BFu0s()
{
  {
    init_simple_test("S_Ul_BFu0s");
    static STRUCT_IF_C S_Ul_BFu0s lv;
    check2(sizeof(lv), 10, "sizeof(S_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Ul_BFu0s)");
    check_field_offset(lv, v1, 0, "S_Ul_BFu0s.v1");
    check_field_offset(lv, v2, 2, "S_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Ul_BFu0s, S_Ul_BFu0s)
//============================================================================



static void Test_S_Us_BFu0c()
{
  {
    init_simple_test("S_Us_BFu0c");
    static STRUCT_IF_C S_Us_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(S_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_Us_BFu0c)");
    check_field_offset(lv, v1, 0, "S_Us_BFu0c.v1");
    check_field_offset(lv, v2, 2, "S_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Us_BFu0c, S_Us_BFu0c)
//============================================================================



static void Test_S_Us_BFu0i()
{
  {
    init_simple_test("S_Us_BFu0i");
    static STRUCT_IF_C S_Us_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(S_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Us_BFu0i)");
    check_field_offset(lv, v1, 0, "S_Us_BFu0i.v1");
    check_field_offset(lv, v2, 2, "S_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Us_BFu0i, S_Us_BFu0i)
//============================================================================



static void Test_S_Us_BFu0ll()
{
  {
    init_simple_test("S_Us_BFu0ll");
    static STRUCT_IF_C S_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(S_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Us_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_Us_BFu0ll.v1");
    check_field_offset(lv, v2, 2, "S_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Us_BFu0ll, S_Us_BFu0ll)
//============================================================================



static void Test_S_Us_BFu0s()
{
  {
    init_simple_test("S_Us_BFu0s");
    static STRUCT_IF_C S_Us_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(S_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Us_BFu0s)");
    check_field_offset(lv, v1, 0, "S_Us_BFu0s.v1");
    check_field_offset(lv, v2, 2, "S_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Us_BFu0s, S_Us_BFu0s)
//============================================================================



static void Test_S_Vp_BFu0c()
{
  {
    init_simple_test("S_Vp_BFu0c");
    static STRUCT_IF_C S_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(S_Vp_BFu0c)");
    check_field_offset(lv, v1, 0, "S_Vp_BFu0c.v1");
    check_field_offset(lv, v2, 2, "S_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Vp_BFu0c, S_Vp_BFu0c)
//============================================================================



static void Test_S_Vp_BFu0i()
{
  {
    init_simple_test("S_Vp_BFu0i");
    static STRUCT_IF_C S_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(S_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Vp_BFu0i)");
    check_field_offset(lv, v1, 0, "S_Vp_BFu0i.v1");
    check_field_offset(lv, v2, 2, "S_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Vp_BFu0i, S_Vp_BFu0i)
//============================================================================



static void Test_S_Vp_BFu0ll()
{
  {
    init_simple_test("S_Vp_BFu0ll");
    static STRUCT_IF_C S_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(S_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Vp_BFu0ll)");
    check_field_offset(lv, v1, 0, "S_Vp_BFu0ll.v1");
    check_field_offset(lv, v2, 2, "S_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Vp_BFu0ll, S_Vp_BFu0ll)
//============================================================================



static void Test_S_Vp_BFu0s()
{
  {
    init_simple_test("S_Vp_BFu0s");
    static STRUCT_IF_C S_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(S_Vp_BFu0s)");
    check_field_offset(lv, v1, 0, "S_Vp_BFu0s.v1");
    check_field_offset(lv, v2, 2, "S_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Vp_BFu0s, S_Vp_BFu0s)
//============================================================================



static void Test_Uc_BFu0c()
{
  {
    init_simple_test("Uc_BFu0c");
    static STRUCT_IF_C Uc_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c, Uc_BFu0c)
//============================================================================



static void Test_Uc_BFu0c_BFu0c()
{
  {
    init_simple_test("Uc_BFu0c_BFu0c");
    static STRUCT_IF_C Uc_BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(Uc_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu0c, Uc_BFu0c_BFu0c)
//============================================================================



static void Test_Uc_BFu0c_BFu0i()
{
  {
    init_simple_test("Uc_BFu0c_BFu0i");
    static STRUCT_IF_C Uc_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0c_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu0i, Uc_BFu0c_BFu0i)
//============================================================================



static void Test_Uc_BFu0c_BFu0ll()
{
  {
    init_simple_test("Uc_BFu0c_BFu0ll");
    static STRUCT_IF_C Uc_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0c_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu0ll, Uc_BFu0c_BFu0ll)
//============================================================================



static void Test_Uc_BFu0c_BFu0s()
{
  {
    init_simple_test("Uc_BFu0c_BFu0s");
    static STRUCT_IF_C Uc_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(Uc_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0c_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu0s, Uc_BFu0c_BFu0s)
//============================================================================



static void Test_Uc_BFu0c_BFu15i()
{
  {
    init_simple_test("Uc_BFu0c_BFu15i");
    static STRUCT_IF_C Uc_BFu0c_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu15i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "Uc_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "Uc_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu15i, Uc_BFu0c_BFu15i)
//============================================================================



static void Test_Uc_BFu0c_BFu15ll()
{
  {
    init_simple_test("Uc_BFu0c_BFu15ll");
    static STRUCT_IF_C Uc_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu15ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "Uc_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "Uc_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu15ll, Uc_BFu0c_BFu15ll)
//============================================================================



static void Test_Uc_BFu0c_BFu15s()
{
  {
    init_simple_test("Uc_BFu0c_BFu15s");
    static STRUCT_IF_C Uc_BFu0c_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu15s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "Uc_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "Uc_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu15s, Uc_BFu0c_BFu15s)
//============================================================================



static void Test_Uc_BFu0c_BFu16i()
{
  {
    init_simple_test("Uc_BFu0c_BFu16i");
    static STRUCT_IF_C Uc_BFu0c_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu16i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "Uc_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "Uc_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu16i, Uc_BFu0c_BFu16i)
//============================================================================



static void Test_Uc_BFu0c_BFu16ll()
{
  {
    init_simple_test("Uc_BFu0c_BFu16ll");
    static STRUCT_IF_C Uc_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu16ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "Uc_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "Uc_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu16ll, Uc_BFu0c_BFu16ll)
//============================================================================



static void Test_Uc_BFu0c_BFu16s()
{
  {
    init_simple_test("Uc_BFu0c_BFu16s");
    static STRUCT_IF_C Uc_BFu0c_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu16s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "Uc_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "Uc_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu16s, Uc_BFu0c_BFu16s)
//============================================================================



static void Test_Uc_BFu0c_BFu17i()
{
  {
    init_simple_test("Uc_BFu0c_BFu17i");
    static STRUCT_IF_C Uc_BFu0c_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(Uc_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu17i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "Uc_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "Uc_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu17i, Uc_BFu0c_BFu17i)
//============================================================================



static void Test_Uc_BFu0c_BFu17ll()
{
  {
    init_simple_test("Uc_BFu0c_BFu17ll");
    static STRUCT_IF_C Uc_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(Uc_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu17ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "Uc_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "Uc_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu17ll, Uc_BFu0c_BFu17ll)
//============================================================================



static void Test_Uc_BFu0c_BFu1c()
{
  {
    init_simple_test("Uc_BFu0c_BFu1c");
    static STRUCT_IF_C Uc_BFu0c_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu1c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu1c, Uc_BFu0c_BFu1c)
//============================================================================



static void Test_Uc_BFu0c_BFu1i()
{
  {
    init_simple_test("Uc_BFu0c_BFu1i");
    static STRUCT_IF_C Uc_BFu0c_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu1i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu1i, Uc_BFu0c_BFu1i)
//============================================================================



static void Test_Uc_BFu0c_BFu1ll()
{
  {
    init_simple_test("Uc_BFu0c_BFu1ll");
    static STRUCT_IF_C Uc_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu1ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu1ll, Uc_BFu0c_BFu1ll)
//============================================================================



static void Test_Uc_BFu0c_BFu1s()
{
  {
    init_simple_test("Uc_BFu0c_BFu1s");
    static STRUCT_IF_C Uc_BFu0c_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu1s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu1s, Uc_BFu0c_BFu1s)
//============================================================================



static void Test_Uc_BFu0c_BFu31i()
{
  {
    init_simple_test("Uc_BFu0c_BFu31i");
    static STRUCT_IF_C Uc_BFu0c_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(Uc_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu31i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "Uc_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "Uc_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu31i, Uc_BFu0c_BFu31i)
//============================================================================



static void Test_Uc_BFu0c_BFu31ll()
{
  {
    init_simple_test("Uc_BFu0c_BFu31ll");
    static STRUCT_IF_C Uc_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(Uc_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu31ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "Uc_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "Uc_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu31ll, Uc_BFu0c_BFu31ll)
//============================================================================



static void Test_Uc_BFu0c_BFu32i()
{
  {
    init_simple_test("Uc_BFu0c_BFu32i");
    static STRUCT_IF_C Uc_BFu0c_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(Uc_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu32i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "Uc_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "Uc_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu32i, Uc_BFu0c_BFu32i)
//============================================================================



static void Test_Uc_BFu0c_BFu32ll()
{
  {
    init_simple_test("Uc_BFu0c_BFu32ll");
    static STRUCT_IF_C Uc_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(Uc_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu32ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "Uc_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "Uc_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu32ll, Uc_BFu0c_BFu32ll)
//============================================================================



static void Test_Uc_BFu0c_BFu33()
{
  {
    init_simple_test("Uc_BFu0c_BFu33");
    static STRUCT_IF_C Uc_BFu0c_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(Uc_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu33)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "Uc_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "Uc_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu33, Uc_BFu0c_BFu33)
//============================================================================



static void Test_Uc_BFu0c_BFu7c()
{
  {
    init_simple_test("Uc_BFu0c_BFu7c");
    static STRUCT_IF_C Uc_BFu0c_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu7c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu7c, Uc_BFu0c_BFu7c)
//============================================================================



static void Test_Uc_BFu0c_BFu7i()
{
  {
    init_simple_test("Uc_BFu0c_BFu7i");
    static STRUCT_IF_C Uc_BFu0c_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu7i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu7i, Uc_BFu0c_BFu7i)
//============================================================================



static void Test_Uc_BFu0c_BFu7ll()
{
  {
    init_simple_test("Uc_BFu0c_BFu7ll");
    static STRUCT_IF_C Uc_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu7ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu7ll, Uc_BFu0c_BFu7ll)
//============================================================================



static void Test_Uc_BFu0c_BFu7s()
{
  {
    init_simple_test("Uc_BFu0c_BFu7s");
    static STRUCT_IF_C Uc_BFu0c_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu7s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu7s, Uc_BFu0c_BFu7s)
//============================================================================



static void Test_Uc_BFu0c_BFu8c()
{
  {
    init_simple_test("Uc_BFu0c_BFu8c");
    static STRUCT_IF_C Uc_BFu0c_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu8c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu8c, Uc_BFu0c_BFu8c)
//============================================================================



static void Test_Uc_BFu0c_BFu8i()
{
  {
    init_simple_test("Uc_BFu0c_BFu8i");
    static STRUCT_IF_C Uc_BFu0c_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu8i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu8i, Uc_BFu0c_BFu8i)
//============================================================================



static void Test_Uc_BFu0c_BFu8ll()
{
  {
    init_simple_test("Uc_BFu0c_BFu8ll");
    static STRUCT_IF_C Uc_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu8ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu8ll, Uc_BFu0c_BFu8ll)
//============================================================================



static void Test_Uc_BFu0c_BFu8s()
{
  {
    init_simple_test("Uc_BFu0c_BFu8s");
    static STRUCT_IF_C Uc_BFu0c_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu8s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu8s, Uc_BFu0c_BFu8s)
//============================================================================



static void Test_Uc_BFu0c_BFu9i()
{
  {
    init_simple_test("Uc_BFu0c_BFu9i");
    static STRUCT_IF_C Uc_BFu0c_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu9i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "Uc_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "Uc_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu9i, Uc_BFu0c_BFu9i)
//============================================================================



static void Test_Uc_BFu0c_BFu9ll()
{
  {
    init_simple_test("Uc_BFu0c_BFu9ll");
    static STRUCT_IF_C Uc_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu9ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "Uc_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "Uc_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu9ll, Uc_BFu0c_BFu9ll)
//============================================================================



static void Test_Uc_BFu0c_BFu9s()
{
  {
    init_simple_test("Uc_BFu0c_BFu9s");
    static STRUCT_IF_C Uc_BFu0c_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_BFu9s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "Uc_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "Uc_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_BFu9s, Uc_BFu0c_BFu9s)
//============================================================================



static void Test_Uc_BFu0c_C()
{
  {
    init_simple_test("Uc_BFu0c_C");
    static STRUCT_IF_C Uc_BFu0c_C lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_C)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_C.v1");
    check_field_offset(lv, v2, 1, "Uc_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_C, Uc_BFu0c_C)
//============================================================================



static void Test_Uc_BFu0c_D()
{
  {
    init_simple_test("Uc_BFu0c_D");
    static STRUCT_IF_C Uc_BFu0c_D lv;
    check2(sizeof(lv), 9, "sizeof(Uc_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_D)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_D.v1");
    check_field_offset(lv, v2, 1, "Uc_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_D, Uc_BFu0c_D)
//============================================================================



static void Test_Uc_BFu0c_F()
{
  {
    init_simple_test("Uc_BFu0c_F");
    static STRUCT_IF_C Uc_BFu0c_F lv;
    check2(sizeof(lv), 5, "sizeof(Uc_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_F)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_F.v1");
    check_field_offset(lv, v2, 1, "Uc_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_F, Uc_BFu0c_F)
//============================================================================



static void Test_Uc_BFu0c_I()
{
  {
    init_simple_test("Uc_BFu0c_I");
    static STRUCT_IF_C Uc_BFu0c_I lv;
    check2(sizeof(lv), 5, "sizeof(Uc_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_I)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_I.v1");
    check_field_offset(lv, v2, 1, "Uc_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_I, Uc_BFu0c_I)
//============================================================================



static void Test_Uc_BFu0c_Ip()
{
  {
    init_simple_test("Uc_BFu0c_Ip");
    static STRUCT_IF_C Uc_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_Ip)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_Ip.v1");
    check_field_offset(lv, v2, 1, "Uc_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_Ip, Uc_BFu0c_Ip)
//============================================================================



static void Test_Uc_BFu0c_L()
{
  {
    init_simple_test("Uc_BFu0c_L");
    static STRUCT_IF_C Uc_BFu0c_L lv;
    check2(sizeof(lv), 9, "sizeof(Uc_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_L)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_L.v1");
    check_field_offset(lv, v2, 1, "Uc_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_L, Uc_BFu0c_L)
//============================================================================



static void Test_Uc_BFu0c_S()
{
  {
    init_simple_test("Uc_BFu0c_S");
    static STRUCT_IF_C Uc_BFu0c_S lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_S)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_S.v1");
    check_field_offset(lv, v2, 1, "Uc_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_S, Uc_BFu0c_S)
//============================================================================



static void Test_Uc_BFu0c_Uc()
{
  {
    init_simple_test("Uc_BFu0c_Uc");
    static STRUCT_IF_C Uc_BFu0c_Uc lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_Uc)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_Uc.v1");
    check_field_offset(lv, v2, 1, "Uc_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_Uc, Uc_BFu0c_Uc)
//============================================================================



static void Test_Uc_BFu0c_Ui()
{
  {
    init_simple_test("Uc_BFu0c_Ui");
    static STRUCT_IF_C Uc_BFu0c_Ui lv;
    check2(sizeof(lv), 5, "sizeof(Uc_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_Ui)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_Ui.v1");
    check_field_offset(lv, v2, 1, "Uc_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_Ui, Uc_BFu0c_Ui)
//============================================================================



static void Test_Uc_BFu0c_Ul()
{
  {
    init_simple_test("Uc_BFu0c_Ul");
    static STRUCT_IF_C Uc_BFu0c_Ul lv;
    check2(sizeof(lv), 9, "sizeof(Uc_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_Ul)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_Ul.v1");
    check_field_offset(lv, v2, 1, "Uc_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_Ul, Uc_BFu0c_Ul)
//============================================================================



static void Test_Uc_BFu0c_Us()
{
  {
    init_simple_test("Uc_BFu0c_Us");
    static STRUCT_IF_C Uc_BFu0c_Us lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_Us)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_Us.v1");
    check_field_offset(lv, v2, 1, "Uc_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_Us, Uc_BFu0c_Us)
//============================================================================



static void Test_Uc_BFu0c_Vp()
{
  {
    init_simple_test("Uc_BFu0c_Vp");
    static STRUCT_IF_C Uc_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu0c_Vp)");
    check_field_offset(lv, v1, 0, "Uc_BFu0c_Vp.v1");
    check_field_offset(lv, v2, 1, "Uc_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0c_Vp, Uc_BFu0c_Vp)
//============================================================================



static void Test_Uc_BFu0i()
{
  {
    init_simple_test("Uc_BFu0i");
    static STRUCT_IF_C Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i, Uc_BFu0i)
//============================================================================



static void Test_Uc_BFu0i_BFu0c()
{
  {
    init_simple_test("Uc_BFu0i_BFu0c");
    static STRUCT_IF_C Uc_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu0c, Uc_BFu0i_BFu0c)
//============================================================================



static void Test_Uc_BFu0i_BFu0i()
{
  {
    init_simple_test("Uc_BFu0i_BFu0i");
    static STRUCT_IF_C Uc_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu0i, Uc_BFu0i_BFu0i)
//============================================================================



static void Test_Uc_BFu0i_BFu0ll()
{
  {
    init_simple_test("Uc_BFu0i_BFu0ll");
    static STRUCT_IF_C Uc_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu0ll, Uc_BFu0i_BFu0ll)
//============================================================================



static void Test_Uc_BFu0i_BFu0s()
{
  {
    init_simple_test("Uc_BFu0i_BFu0s");
    static STRUCT_IF_C Uc_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu0s, Uc_BFu0i_BFu0s)
//============================================================================



static void Test_Uc_BFu0i_BFu15i()
{
  {
    init_simple_test("Uc_BFu0i_BFu15i");
    static STRUCT_IF_C Uc_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu15i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu15i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "Uc_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "Uc_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu15i, Uc_BFu0i_BFu15i)
//============================================================================



static void Test_Uc_BFu0i_BFu15ll()
{
  {
    init_simple_test("Uc_BFu0i_BFu15ll");
    static STRUCT_IF_C Uc_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu15ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu15ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "Uc_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "Uc_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu15ll, Uc_BFu0i_BFu15ll)
//============================================================================



static void Test_Uc_BFu0i_BFu15s()
{
  {
    init_simple_test("Uc_BFu0i_BFu15s");
    static STRUCT_IF_C Uc_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu15s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu15s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "Uc_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "Uc_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu15s, Uc_BFu0i_BFu15s)
//============================================================================



static void Test_Uc_BFu0i_BFu16i()
{
  {
    init_simple_test("Uc_BFu0i_BFu16i");
    static STRUCT_IF_C Uc_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu16i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu16i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "Uc_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "Uc_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu16i, Uc_BFu0i_BFu16i)
//============================================================================



static void Test_Uc_BFu0i_BFu16ll()
{
  {
    init_simple_test("Uc_BFu0i_BFu16ll");
    static STRUCT_IF_C Uc_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu16ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu16ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "Uc_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "Uc_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu16ll, Uc_BFu0i_BFu16ll)
//============================================================================



static void Test_Uc_BFu0i_BFu16s()
{
  {
    init_simple_test("Uc_BFu0i_BFu16s");
    static STRUCT_IF_C Uc_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu16s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu16s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "Uc_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "Uc_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu16s, Uc_BFu0i_BFu16s)
//============================================================================



static void Test_Uc_BFu0i_BFu17i()
{
  {
    init_simple_test("Uc_BFu0i_BFu17i");
    static STRUCT_IF_C Uc_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(Uc_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu17i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu17i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, 1, "Uc_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, hide_ull(1LL<<16), "Uc_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu17i, Uc_BFu0i_BFu17i)
//============================================================================



static void Test_Uc_BFu0i_BFu17ll()
{
  {
    init_simple_test("Uc_BFu0i_BFu17ll");
    static STRUCT_IF_C Uc_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(Uc_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu17ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu17ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, 1, "Uc_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, hide_ull(1LL<<16), "Uc_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu17ll, Uc_BFu0i_BFu17ll)
//============================================================================



static void Test_Uc_BFu0i_BFu1c()
{
  {
    init_simple_test("Uc_BFu0i_BFu1c");
    static STRUCT_IF_C Uc_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Uc_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu1c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu1c.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "Uc_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu1c, Uc_BFu0i_BFu1c)
//============================================================================



static void Test_Uc_BFu0i_BFu1i()
{
  {
    init_simple_test("Uc_BFu0i_BFu1i");
    static STRUCT_IF_C Uc_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Uc_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu1i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu1i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "Uc_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu1i, Uc_BFu0i_BFu1i)
//============================================================================



static void Test_Uc_BFu0i_BFu1ll()
{
  {
    init_simple_test("Uc_BFu0i_BFu1ll");
    static STRUCT_IF_C Uc_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Uc_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu1ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu1ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "Uc_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu1ll, Uc_BFu0i_BFu1ll)
//============================================================================



static void Test_Uc_BFu0i_BFu1s()
{
  {
    init_simple_test("Uc_BFu0i_BFu1s");
    static STRUCT_IF_C Uc_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Uc_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu1s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu1s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "Uc_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu1s, Uc_BFu0i_BFu1s)
//============================================================================



static void Test_Uc_BFu0i_BFu31i()
{
  {
    init_simple_test("Uc_BFu0i_BFu31i");
    static STRUCT_IF_C Uc_BFu0i_BFu31i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu31i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu31i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, 1, "Uc_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, hide_ull(1LL<<30), "Uc_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu31i, Uc_BFu0i_BFu31i)
//============================================================================



static void Test_Uc_BFu0i_BFu31ll()
{
  {
    init_simple_test("Uc_BFu0i_BFu31ll");
    static STRUCT_IF_C Uc_BFu0i_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu31ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu31ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, 1, "Uc_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, hide_ull(1LL<<30), "Uc_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu31ll, Uc_BFu0i_BFu31ll)
//============================================================================



static void Test_Uc_BFu0i_BFu32i()
{
  {
    init_simple_test("Uc_BFu0i_BFu32i");
    static STRUCT_IF_C Uc_BFu0i_BFu32i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu32i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu32i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, 1, "Uc_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, hide_ull(1LL<<31), "Uc_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu32i, Uc_BFu0i_BFu32i)
//============================================================================



static void Test_Uc_BFu0i_BFu32ll()
{
  {
    init_simple_test("Uc_BFu0i_BFu32ll");
    static STRUCT_IF_C Uc_BFu0i_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu32ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu32ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, 1, "Uc_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, hide_ull(1LL<<31), "Uc_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu32ll, Uc_BFu0i_BFu32ll)
//============================================================================



static void Test_Uc_BFu0i_BFu33()
{
  {
    init_simple_test("Uc_BFu0i_BFu33");
    static STRUCT_IF_C Uc_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(Uc_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu33)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu33.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 33, 1, "Uc_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 33, hide_ull(1LL<<32), "Uc_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu33, Uc_BFu0i_BFu33)
//============================================================================



static void Test_Uc_BFu0i_BFu7c()
{
  {
    init_simple_test("Uc_BFu0i_BFu7c");
    static STRUCT_IF_C Uc_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Uc_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu7c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu7c.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "Uc_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "Uc_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu7c, Uc_BFu0i_BFu7c)
//============================================================================



static void Test_Uc_BFu0i_BFu7i()
{
  {
    init_simple_test("Uc_BFu0i_BFu7i");
    static STRUCT_IF_C Uc_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Uc_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu7i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu7i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "Uc_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "Uc_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu7i, Uc_BFu0i_BFu7i)
//============================================================================



static void Test_Uc_BFu0i_BFu7ll()
{
  {
    init_simple_test("Uc_BFu0i_BFu7ll");
    static STRUCT_IF_C Uc_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Uc_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu7ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu7ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "Uc_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "Uc_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu7ll, Uc_BFu0i_BFu7ll)
//============================================================================



static void Test_Uc_BFu0i_BFu7s()
{
  {
    init_simple_test("Uc_BFu0i_BFu7s");
    static STRUCT_IF_C Uc_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Uc_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu7s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu7s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "Uc_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "Uc_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu7s, Uc_BFu0i_BFu7s)
//============================================================================



static void Test_Uc_BFu0i_BFu8c()
{
  {
    init_simple_test("Uc_BFu0i_BFu8c");
    static STRUCT_IF_C Uc_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Uc_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu8c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu8c.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "Uc_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "Uc_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu8c, Uc_BFu0i_BFu8c)
//============================================================================



static void Test_Uc_BFu0i_BFu8i()
{
  {
    init_simple_test("Uc_BFu0i_BFu8i");
    static STRUCT_IF_C Uc_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Uc_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu8i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu8i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "Uc_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "Uc_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu8i, Uc_BFu0i_BFu8i)
//============================================================================



static void Test_Uc_BFu0i_BFu8ll()
{
  {
    init_simple_test("Uc_BFu0i_BFu8ll");
    static STRUCT_IF_C Uc_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Uc_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu8ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu8ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "Uc_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "Uc_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu8ll, Uc_BFu0i_BFu8ll)
//============================================================================



static void Test_Uc_BFu0i_BFu8s()
{
  {
    init_simple_test("Uc_BFu0i_BFu8s");
    static STRUCT_IF_C Uc_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Uc_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu8s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu8s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "Uc_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "Uc_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu8s, Uc_BFu0i_BFu8s)
//============================================================================



static void Test_Uc_BFu0i_BFu9i()
{
  {
    init_simple_test("Uc_BFu0i_BFu9i");
    static STRUCT_IF_C Uc_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu9i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu9i.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "Uc_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "Uc_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu9i, Uc_BFu0i_BFu9i)
//============================================================================



static void Test_Uc_BFu0i_BFu9ll()
{
  {
    init_simple_test("Uc_BFu0i_BFu9ll");
    static STRUCT_IF_C Uc_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu9ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu9ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "Uc_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "Uc_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu9ll, Uc_BFu0i_BFu9ll)
//============================================================================



static void Test_Uc_BFu0i_BFu9s()
{
  {
    init_simple_test("Uc_BFu0i_BFu9s");
    static STRUCT_IF_C Uc_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_BFu9s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_BFu9s.v1");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "Uc_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "Uc_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_BFu9s, Uc_BFu0i_BFu9s)
//============================================================================



static void Test_Uc_BFu0i_C()
{
  {
    init_simple_test("Uc_BFu0i_C");
    static STRUCT_IF_C Uc_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Uc_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_C)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_C.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "Uc_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_C, Uc_BFu0i_C)
//============================================================================



static void Test_Uc_BFu0i_D()
{
  {
    init_simple_test("Uc_BFu0i_D");
    static STRUCT_IF_C Uc_BFu0i_D lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(Uc_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_D)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_D.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "Uc_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_D, Uc_BFu0i_D)
//============================================================================



static void Test_Uc_BFu0i_F()
{
  {
    init_simple_test("Uc_BFu0i_F");
    static STRUCT_IF_C Uc_BFu0i_F lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_F)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_F.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "Uc_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_F, Uc_BFu0i_F)
//============================================================================



static void Test_Uc_BFu0i_I()
{
  {
    init_simple_test("Uc_BFu0i_I");
    static STRUCT_IF_C Uc_BFu0i_I lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_I)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_I.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "Uc_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_I, Uc_BFu0i_I)
//============================================================================



static void Test_Uc_BFu0i_Ip()
{
  {
    init_simple_test("Uc_BFu0i_Ip");
    static STRUCT_IF_C Uc_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Uc_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_Ip)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "Uc_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_Ip, Uc_BFu0i_Ip)
//============================================================================



static void Test_Uc_BFu0i_L()
{
  {
    init_simple_test("Uc_BFu0i_L");
    static STRUCT_IF_C Uc_BFu0i_L lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(Uc_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_L)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_L.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "Uc_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_L, Uc_BFu0i_L)
//============================================================================



static void Test_Uc_BFu0i_S()
{
  {
    init_simple_test("Uc_BFu0i_S");
    static STRUCT_IF_C Uc_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_S)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_S.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "Uc_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_S, Uc_BFu0i_S)
//============================================================================



static void Test_Uc_BFu0i_Uc()
{
  {
    init_simple_test("Uc_BFu0i_Uc");
    static STRUCT_IF_C Uc_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Uc_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_Uc)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "Uc_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_Uc, Uc_BFu0i_Uc)
//============================================================================



static void Test_Uc_BFu0i_Ui()
{
  {
    init_simple_test("Uc_BFu0i_Ui");
    static STRUCT_IF_C Uc_BFu0i_Ui lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_Ui)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "Uc_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_Ui, Uc_BFu0i_Ui)
//============================================================================



static void Test_Uc_BFu0i_Ul()
{
  {
    init_simple_test("Uc_BFu0i_Ul");
    static STRUCT_IF_C Uc_BFu0i_Ul lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(Uc_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_Ul)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "Uc_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_Ul, Uc_BFu0i_Ul)
//============================================================================



static void Test_Uc_BFu0i_Us()
{
  {
    init_simple_test("Uc_BFu0i_Us");
    static STRUCT_IF_C Uc_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_Us)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_Us.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "Uc_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_Us, Uc_BFu0i_Us)
//============================================================================



static void Test_Uc_BFu0i_Vp()
{
  {
    init_simple_test("Uc_BFu0i_Vp");
    static STRUCT_IF_C Uc_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Uc_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0i_Vp)");
    check_field_offset(lv, v1, 0, "Uc_BFu0i_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(4,4), "Uc_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0i_Vp, Uc_BFu0i_Vp)
//============================================================================



static void Test_Uc_BFu0ll()
{
  {
    init_simple_test("Uc_BFu0ll");
    static STRUCT_IF_C Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll, Uc_BFu0ll)
//============================================================================



static void Test_Uc_BFu0ll_BFu0c()
{
  {
    init_simple_test("Uc_BFu0ll_BFu0c");
    static STRUCT_IF_C Uc_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu0c, Uc_BFu0ll_BFu0c)
//============================================================================



static void Test_Uc_BFu0ll_BFu0i()
{
  {
    init_simple_test("Uc_BFu0ll_BFu0i");
    static STRUCT_IF_C Uc_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu0i, Uc_BFu0ll_BFu0i)
//============================================================================



static void Test_Uc_BFu0ll_BFu0ll()
{
  {
    init_simple_test("Uc_BFu0ll_BFu0ll");
    static STRUCT_IF_C Uc_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu0ll, Uc_BFu0ll_BFu0ll)
//============================================================================



static void Test_Uc_BFu0ll_BFu0s()
{
  {
    init_simple_test("Uc_BFu0ll_BFu0s");
    static STRUCT_IF_C Uc_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu0s, Uc_BFu0ll_BFu0s)
//============================================================================



static void Test_Uc_BFu0ll_BFu15i()
{
  {
    init_simple_test("Uc_BFu0ll_BFu15i");
    static STRUCT_IF_C Uc_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Uc_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu15i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu15i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Uc_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Uc_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu15i, Uc_BFu0ll_BFu15i)
//============================================================================



static void Test_Uc_BFu0ll_BFu15ll()
{
  {
    init_simple_test("Uc_BFu0ll_BFu15ll");
    static STRUCT_IF_C Uc_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Uc_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Uc_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Uc_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu15ll, Uc_BFu0ll_BFu15ll)
//============================================================================



static void Test_Uc_BFu0ll_BFu15s()
{
  {
    init_simple_test("Uc_BFu0ll_BFu15s");
    static STRUCT_IF_C Uc_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Uc_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu15s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu15s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Uc_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Uc_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu15s, Uc_BFu0ll_BFu15s)
//============================================================================



static void Test_Uc_BFu0ll_BFu16i()
{
  {
    init_simple_test("Uc_BFu0ll_BFu16i");
    static STRUCT_IF_C Uc_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Uc_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu16i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu16i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Uc_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Uc_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu16i, Uc_BFu0ll_BFu16i)
//============================================================================



static void Test_Uc_BFu0ll_BFu16ll()
{
  {
    init_simple_test("Uc_BFu0ll_BFu16ll");
    static STRUCT_IF_C Uc_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Uc_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Uc_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Uc_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu16ll, Uc_BFu0ll_BFu16ll)
//============================================================================



static void Test_Uc_BFu0ll_BFu16s()
{
  {
    init_simple_test("Uc_BFu0ll_BFu16s");
    static STRUCT_IF_C Uc_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Uc_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu16s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu16s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Uc_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Uc_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu16s, Uc_BFu0ll_BFu16s)
//============================================================================



static void Test_Uc_BFu0ll_BFu17i()
{
  {
    init_simple_test("Uc_BFu0ll_BFu17i");
    static STRUCT_IF_C Uc_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Uc_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu17i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu17i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Uc_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Uc_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu17i, Uc_BFu0ll_BFu17i)
//============================================================================



static void Test_Uc_BFu0ll_BFu17ll()
{
  {
    init_simple_test("Uc_BFu0ll_BFu17ll");
    static STRUCT_IF_C Uc_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Uc_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Uc_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Uc_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu17ll, Uc_BFu0ll_BFu17ll)
//============================================================================



static void Test_Uc_BFu0ll_BFu1c()
{
  {
    init_simple_test("Uc_BFu0ll_BFu1c");
    static STRUCT_IF_C Uc_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu1c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu1c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Uc_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu1c, Uc_BFu0ll_BFu1c)
//============================================================================



static void Test_Uc_BFu0ll_BFu1i()
{
  {
    init_simple_test("Uc_BFu0ll_BFu1i");
    static STRUCT_IF_C Uc_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu1i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu1i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Uc_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu1i, Uc_BFu0ll_BFu1i)
//============================================================================



static void Test_Uc_BFu0ll_BFu1ll()
{
  {
    init_simple_test("Uc_BFu0ll_BFu1ll");
    static STRUCT_IF_C Uc_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Uc_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu1ll, Uc_BFu0ll_BFu1ll)
//============================================================================



static void Test_Uc_BFu0ll_BFu1s()
{
  {
    init_simple_test("Uc_BFu0ll_BFu1s");
    static STRUCT_IF_C Uc_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu1s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu1s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Uc_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu1s, Uc_BFu0ll_BFu1s)
//============================================================================



static void Test_Uc_BFu0ll_BFu31i()
{
  {
    init_simple_test("Uc_BFu0ll_BFu31i");
    static STRUCT_IF_C Uc_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Uc_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu31i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu31i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Uc_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Uc_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu31i, Uc_BFu0ll_BFu31i)
//============================================================================



static void Test_Uc_BFu0ll_BFu31ll()
{
  {
    init_simple_test("Uc_BFu0ll_BFu31ll");
    static STRUCT_IF_C Uc_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Uc_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Uc_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Uc_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu31ll, Uc_BFu0ll_BFu31ll)
//============================================================================



static void Test_Uc_BFu0ll_BFu32i()
{
  {
    init_simple_test("Uc_BFu0ll_BFu32i");
    static STRUCT_IF_C Uc_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Uc_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu32i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu32i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Uc_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Uc_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu32i, Uc_BFu0ll_BFu32i)
//============================================================================



static void Test_Uc_BFu0ll_BFu32ll()
{
  {
    init_simple_test("Uc_BFu0ll_BFu32ll");
    static STRUCT_IF_C Uc_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Uc_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Uc_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Uc_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu32ll, Uc_BFu0ll_BFu32ll)
//============================================================================



static void Test_Uc_BFu0ll_BFu33()
{
  {
    init_simple_test("Uc_BFu0ll_BFu33");
    static STRUCT_IF_C Uc_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(Uc_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu33)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu33.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "Uc_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "Uc_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu33, Uc_BFu0ll_BFu33)
//============================================================================



static void Test_Uc_BFu0ll_BFu7c()
{
  {
    init_simple_test("Uc_BFu0ll_BFu7c");
    static STRUCT_IF_C Uc_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu7c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu7c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Uc_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Uc_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu7c, Uc_BFu0ll_BFu7c)
//============================================================================



static void Test_Uc_BFu0ll_BFu7i()
{
  {
    init_simple_test("Uc_BFu0ll_BFu7i");
    static STRUCT_IF_C Uc_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu7i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu7i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Uc_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Uc_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu7i, Uc_BFu0ll_BFu7i)
//============================================================================



static void Test_Uc_BFu0ll_BFu7ll()
{
  {
    init_simple_test("Uc_BFu0ll_BFu7ll");
    static STRUCT_IF_C Uc_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Uc_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Uc_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu7ll, Uc_BFu0ll_BFu7ll)
//============================================================================



static void Test_Uc_BFu0ll_BFu7s()
{
  {
    init_simple_test("Uc_BFu0ll_BFu7s");
    static STRUCT_IF_C Uc_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu7s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu7s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Uc_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Uc_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu7s, Uc_BFu0ll_BFu7s)
//============================================================================



static void Test_Uc_BFu0ll_BFu8c()
{
  {
    init_simple_test("Uc_BFu0ll_BFu8c");
    static STRUCT_IF_C Uc_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu8c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu8c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Uc_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Uc_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu8c, Uc_BFu0ll_BFu8c)
//============================================================================



static void Test_Uc_BFu0ll_BFu8i()
{
  {
    init_simple_test("Uc_BFu0ll_BFu8i");
    static STRUCT_IF_C Uc_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu8i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu8i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Uc_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Uc_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu8i, Uc_BFu0ll_BFu8i)
//============================================================================



static void Test_Uc_BFu0ll_BFu8ll()
{
  {
    init_simple_test("Uc_BFu0ll_BFu8ll");
    static STRUCT_IF_C Uc_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Uc_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Uc_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu8ll, Uc_BFu0ll_BFu8ll)
//============================================================================



static void Test_Uc_BFu0ll_BFu8s()
{
  {
    init_simple_test("Uc_BFu0ll_BFu8s");
    static STRUCT_IF_C Uc_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu8s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu8s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Uc_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Uc_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu8s, Uc_BFu0ll_BFu8s)
//============================================================================



static void Test_Uc_BFu0ll_BFu9i()
{
  {
    init_simple_test("Uc_BFu0ll_BFu9i");
    static STRUCT_IF_C Uc_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Uc_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu9i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu9i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Uc_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Uc_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu9i, Uc_BFu0ll_BFu9i)
//============================================================================



static void Test_Uc_BFu0ll_BFu9ll()
{
  {
    init_simple_test("Uc_BFu0ll_BFu9ll");
    static STRUCT_IF_C Uc_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Uc_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Uc_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Uc_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu9ll, Uc_BFu0ll_BFu9ll)
//============================================================================



static void Test_Uc_BFu0ll_BFu9s()
{
  {
    init_simple_test("Uc_BFu0ll_BFu9s");
    static STRUCT_IF_C Uc_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Uc_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_BFu9s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_BFu9s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Uc_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Uc_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_BFu9s, Uc_BFu0ll_BFu9s)
//============================================================================



static void Test_Uc_BFu0ll_C()
{
  {
    init_simple_test("Uc_BFu0ll_C");
    static STRUCT_IF_C Uc_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_C)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_C.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Uc_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_C, Uc_BFu0ll_C)
//============================================================================



static void Test_Uc_BFu0ll_D()
{
  {
    init_simple_test("Uc_BFu0ll_D");
    static STRUCT_IF_C Uc_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Uc_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_D)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_D.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Uc_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_D, Uc_BFu0ll_D)
//============================================================================



static void Test_Uc_BFu0ll_F()
{
  {
    init_simple_test("Uc_BFu0ll_F");
    static STRUCT_IF_C Uc_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Uc_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_F)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_F.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Uc_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_F, Uc_BFu0ll_F)
//============================================================================



static void Test_Uc_BFu0ll_I()
{
  {
    init_simple_test("Uc_BFu0ll_I");
    static STRUCT_IF_C Uc_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Uc_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_I)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_I.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Uc_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_I, Uc_BFu0ll_I)
//============================================================================



static void Test_Uc_BFu0ll_Ip()
{
  {
    init_simple_test("Uc_BFu0ll_Ip");
    static STRUCT_IF_C Uc_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Uc_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_Ip)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Uc_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_Ip, Uc_BFu0ll_Ip)
//============================================================================



static void Test_Uc_BFu0ll_L()
{
  {
    init_simple_test("Uc_BFu0ll_L");
    static STRUCT_IF_C Uc_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Uc_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_L)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_L.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Uc_BFu0ll_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_L, Uc_BFu0ll_L)
//============================================================================



static void Test_Uc_BFu0ll_S()
{
  {
    init_simple_test("Uc_BFu0ll_S");
    static STRUCT_IF_C Uc_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Uc_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_S)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_S.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Uc_BFu0ll_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_S, Uc_BFu0ll_S)
//============================================================================



static void Test_Uc_BFu0ll_Uc()
{
  {
    init_simple_test("Uc_BFu0ll_Uc");
    static STRUCT_IF_C Uc_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_Uc)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Uc_BFu0ll_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_Uc, Uc_BFu0ll_Uc)
//============================================================================



static void Test_Uc_BFu0ll_Ui()
{
  {
    init_simple_test("Uc_BFu0ll_Ui");
    static STRUCT_IF_C Uc_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Uc_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_Ui)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Uc_BFu0ll_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_Ui, Uc_BFu0ll_Ui)
//============================================================================



static void Test_Uc_BFu0ll_Ul()
{
  {
    init_simple_test("Uc_BFu0ll_Ul");
    static STRUCT_IF_C Uc_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Uc_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_Ul)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Uc_BFu0ll_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_Ul, Uc_BFu0ll_Ul)
//============================================================================



static void Test_Uc_BFu0ll_Us()
{
  {
    init_simple_test("Uc_BFu0ll_Us");
    static STRUCT_IF_C Uc_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Uc_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_Us)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_Us.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Uc_BFu0ll_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_Us, Uc_BFu0ll_Us)
//============================================================================



static void Test_Uc_BFu0ll_Vp()
{
  {
    init_simple_test("Uc_BFu0ll_Vp");
    static STRUCT_IF_C Uc_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Uc_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0ll_Vp)");
    check_field_offset(lv, v1, 0, "Uc_BFu0ll_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Uc_BFu0ll_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0ll_Vp, Uc_BFu0ll_Vp)
//============================================================================



static void Test_Uc_BFu0s()
{
  {
    init_simple_test("Uc_BFu0s");
    static STRUCT_IF_C Uc_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s, Uc_BFu0s)
//============================================================================



static void Test_Uc_BFu0s_BFu0c()
{
  {
    init_simple_test("Uc_BFu0s_BFu0c");
    static STRUCT_IF_C Uc_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(Uc_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu0c, Uc_BFu0s_BFu0c)
//============================================================================



static void Test_Uc_BFu0s_BFu0i()
{
  {
    init_simple_test("Uc_BFu0s_BFu0i");
    static STRUCT_IF_C Uc_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu0i, Uc_BFu0s_BFu0i)
//============================================================================



static void Test_Uc_BFu0s_BFu0ll()
{
  {
    init_simple_test("Uc_BFu0s_BFu0ll");
    static STRUCT_IF_C Uc_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu0ll, Uc_BFu0s_BFu0ll)
//============================================================================



static void Test_Uc_BFu0s_BFu0s()
{
  {
    init_simple_test("Uc_BFu0s_BFu0s");
    static STRUCT_IF_C Uc_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(Uc_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu0s, Uc_BFu0s_BFu0s)
//============================================================================



static void Test_Uc_BFu0s_BFu15i()
{
  {
    init_simple_test("Uc_BFu0s_BFu15i");
    static STRUCT_IF_C Uc_BFu0s_BFu15i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu15i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu15i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "Uc_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "Uc_BFu0s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu15i, Uc_BFu0s_BFu15i)
//============================================================================



static void Test_Uc_BFu0s_BFu15ll()
{
  {
    init_simple_test("Uc_BFu0s_BFu15ll");
    static STRUCT_IF_C Uc_BFu0s_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu15ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu15ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "Uc_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "Uc_BFu0s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu15ll, Uc_BFu0s_BFu15ll)
//============================================================================



static void Test_Uc_BFu0s_BFu15s()
{
  {
    init_simple_test("Uc_BFu0s_BFu15s");
    static STRUCT_IF_C Uc_BFu0s_BFu15s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu15s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu15s.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "Uc_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "Uc_BFu0s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu15s, Uc_BFu0s_BFu15s)
//============================================================================



static void Test_Uc_BFu0s_BFu16i()
{
  {
    init_simple_test("Uc_BFu0s_BFu16i");
    static STRUCT_IF_C Uc_BFu0s_BFu16i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu16i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu16i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "Uc_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "Uc_BFu0s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu16i, Uc_BFu0s_BFu16i)
//============================================================================



static void Test_Uc_BFu0s_BFu16ll()
{
  {
    init_simple_test("Uc_BFu0s_BFu16ll");
    static STRUCT_IF_C Uc_BFu0s_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu16ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu16ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "Uc_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "Uc_BFu0s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu16ll, Uc_BFu0s_BFu16ll)
//============================================================================



static void Test_Uc_BFu0s_BFu16s()
{
  {
    init_simple_test("Uc_BFu0s_BFu16s");
    static STRUCT_IF_C Uc_BFu0s_BFu16s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu16s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu16s.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "Uc_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "Uc_BFu0s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu16s, Uc_BFu0s_BFu16s)
//============================================================================



static void Test_Uc_BFu0s_BFu17i()
{
  {
    init_simple_test("Uc_BFu0s_BFu17i");
    static STRUCT_IF_C Uc_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Uc_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu17i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu17i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, 1, "Uc_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, hide_ull(1LL<<16), "Uc_BFu0s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu17i, Uc_BFu0s_BFu17i)
//============================================================================



static void Test_Uc_BFu0s_BFu17ll()
{
  {
    init_simple_test("Uc_BFu0s_BFu17ll");
    static STRUCT_IF_C Uc_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Uc_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu17ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu17ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, 1, "Uc_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, hide_ull(1LL<<16), "Uc_BFu0s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu17ll, Uc_BFu0s_BFu17ll)
//============================================================================



static void Test_Uc_BFu0s_BFu1c()
{
  {
    init_simple_test("Uc_BFu0s_BFu1c");
    static STRUCT_IF_C Uc_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(Uc_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu1c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu1c.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "Uc_BFu0s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu1c, Uc_BFu0s_BFu1c)
//============================================================================



static void Test_Uc_BFu0s_BFu1i()
{
  {
    init_simple_test("Uc_BFu0s_BFu1i");
    static STRUCT_IF_C Uc_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(Uc_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu1i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu1i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "Uc_BFu0s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu1i, Uc_BFu0s_BFu1i)
//============================================================================



static void Test_Uc_BFu0s_BFu1ll()
{
  {
    init_simple_test("Uc_BFu0s_BFu1ll");
    static STRUCT_IF_C Uc_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(Uc_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu1ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu1ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "Uc_BFu0s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu1ll, Uc_BFu0s_BFu1ll)
//============================================================================



static void Test_Uc_BFu0s_BFu1s()
{
  {
    init_simple_test("Uc_BFu0s_BFu1s");
    static STRUCT_IF_C Uc_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(Uc_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu1s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu1s.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "Uc_BFu0s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu1s, Uc_BFu0s_BFu1s)
//============================================================================



static void Test_Uc_BFu0s_BFu31i()
{
  {
    init_simple_test("Uc_BFu0s_BFu31i");
    static STRUCT_IF_C Uc_BFu0s_BFu31i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu31i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu31i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, 1, "Uc_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, hide_ull(1LL<<30), "Uc_BFu0s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu31i, Uc_BFu0s_BFu31i)
//============================================================================



static void Test_Uc_BFu0s_BFu31ll()
{
  {
    init_simple_test("Uc_BFu0s_BFu31ll");
    static STRUCT_IF_C Uc_BFu0s_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu31ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu31ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, 1, "Uc_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, hide_ull(1LL<<30), "Uc_BFu0s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu31ll, Uc_BFu0s_BFu31ll)
//============================================================================



static void Test_Uc_BFu0s_BFu32i()
{
  {
    init_simple_test("Uc_BFu0s_BFu32i");
    static STRUCT_IF_C Uc_BFu0s_BFu32i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu32i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu32i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, 1, "Uc_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, hide_ull(1LL<<31), "Uc_BFu0s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu32i, Uc_BFu0s_BFu32i)
//============================================================================



static void Test_Uc_BFu0s_BFu32ll()
{
  {
    init_simple_test("Uc_BFu0s_BFu32ll");
    static STRUCT_IF_C Uc_BFu0s_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu32ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu32ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, 1, "Uc_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, hide_ull(1LL<<31), "Uc_BFu0s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu32ll, Uc_BFu0s_BFu32ll)
//============================================================================



static void Test_Uc_BFu0s_BFu33()
{
  {
    init_simple_test("Uc_BFu0s_BFu33");
    static STRUCT_IF_C Uc_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(Uc_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu33)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu33.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 33, 1, "Uc_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 33, hide_ull(1LL<<32), "Uc_BFu0s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu33, Uc_BFu0s_BFu33)
//============================================================================



static void Test_Uc_BFu0s_BFu7c()
{
  {
    init_simple_test("Uc_BFu0s_BFu7c");
    static STRUCT_IF_C Uc_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(Uc_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu7c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu7c.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "Uc_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "Uc_BFu0s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu7c, Uc_BFu0s_BFu7c)
//============================================================================



static void Test_Uc_BFu0s_BFu7i()
{
  {
    init_simple_test("Uc_BFu0s_BFu7i");
    static STRUCT_IF_C Uc_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(Uc_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu7i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu7i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "Uc_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "Uc_BFu0s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu7i, Uc_BFu0s_BFu7i)
//============================================================================



static void Test_Uc_BFu0s_BFu7ll()
{
  {
    init_simple_test("Uc_BFu0s_BFu7ll");
    static STRUCT_IF_C Uc_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(Uc_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu7ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu7ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "Uc_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "Uc_BFu0s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu7ll, Uc_BFu0s_BFu7ll)
//============================================================================



static void Test_Uc_BFu0s_BFu7s()
{
  {
    init_simple_test("Uc_BFu0s_BFu7s");
    static STRUCT_IF_C Uc_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(Uc_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu7s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu7s.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "Uc_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "Uc_BFu0s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu7s, Uc_BFu0s_BFu7s)
//============================================================================



static void Test_Uc_BFu0s_BFu8c()
{
  {
    init_simple_test("Uc_BFu0s_BFu8c");
    static STRUCT_IF_C Uc_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(Uc_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu8c)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu8c.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "Uc_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "Uc_BFu0s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu8c, Uc_BFu0s_BFu8c)
//============================================================================



static void Test_Uc_BFu0s_BFu8i()
{
  {
    init_simple_test("Uc_BFu0s_BFu8i");
    static STRUCT_IF_C Uc_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(Uc_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu8i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu8i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "Uc_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "Uc_BFu0s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu8i, Uc_BFu0s_BFu8i)
//============================================================================



static void Test_Uc_BFu0s_BFu8ll()
{
  {
    init_simple_test("Uc_BFu0s_BFu8ll");
    static STRUCT_IF_C Uc_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(Uc_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu8ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu8ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "Uc_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "Uc_BFu0s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu8ll, Uc_BFu0s_BFu8ll)
//============================================================================



static void Test_Uc_BFu0s_BFu8s()
{
  {
    init_simple_test("Uc_BFu0s_BFu8s");
    static STRUCT_IF_C Uc_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(Uc_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu8s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu8s.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "Uc_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "Uc_BFu0s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu8s, Uc_BFu0s_BFu8s)
//============================================================================



static void Test_Uc_BFu0s_BFu9i()
{
  {
    init_simple_test("Uc_BFu0s_BFu9i");
    static STRUCT_IF_C Uc_BFu0s_BFu9i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu9i)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu9i.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "Uc_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "Uc_BFu0s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu9i, Uc_BFu0s_BFu9i)
//============================================================================



static void Test_Uc_BFu0s_BFu9ll()
{
  {
    init_simple_test("Uc_BFu0s_BFu9ll");
    static STRUCT_IF_C Uc_BFu0s_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu9ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu9ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "Uc_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "Uc_BFu0s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu9ll, Uc_BFu0s_BFu9ll)
//============================================================================



static void Test_Uc_BFu0s_BFu9s()
{
  {
    init_simple_test("Uc_BFu0s_BFu9s");
    static STRUCT_IF_C Uc_BFu0s_BFu9s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_BFu9s)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_BFu9s.v1");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "Uc_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "Uc_BFu0s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_BFu9s, Uc_BFu0s_BFu9s)
//============================================================================



static void Test_Uc_BFu0s_C()
{
  {
    init_simple_test("Uc_BFu0s_C");
    static STRUCT_IF_C Uc_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(Uc_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_C)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_C.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "Uc_BFu0s_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_C, Uc_BFu0s_C)
//============================================================================



static void Test_Uc_BFu0s_D()
{
  {
    init_simple_test("Uc_BFu0s_D");
    static STRUCT_IF_C Uc_BFu0s_D lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(Uc_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_D)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_D.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "Uc_BFu0s_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_D, Uc_BFu0s_D)
//============================================================================



static void Test_Uc_BFu0s_F()
{
  {
    init_simple_test("Uc_BFu0s_F");
    static STRUCT_IF_C Uc_BFu0s_F lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_F)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_F.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "Uc_BFu0s_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_F, Uc_BFu0s_F)
//============================================================================



static void Test_Uc_BFu0s_I()
{
  {
    init_simple_test("Uc_BFu0s_I");
    static STRUCT_IF_C Uc_BFu0s_I lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_I)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_I.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "Uc_BFu0s_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_I, Uc_BFu0s_I)
//============================================================================



static void Test_Uc_BFu0s_Ip()
{
  {
    init_simple_test("Uc_BFu0s_Ip");
    static STRUCT_IF_C Uc_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Uc_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_Ip)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "Uc_BFu0s_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_Ip, Uc_BFu0s_Ip)
//============================================================================



static void Test_Uc_BFu0s_L()
{
  {
    init_simple_test("Uc_BFu0s_L");
    static STRUCT_IF_C Uc_BFu0s_L lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(Uc_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_L)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_L.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "Uc_BFu0s_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_L, Uc_BFu0s_L)
//============================================================================



static void Test_Uc_BFu0s_S()
{
  {
    init_simple_test("Uc_BFu0s_S");
    static STRUCT_IF_C Uc_BFu0s_S lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_S)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_S.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "Uc_BFu0s_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_S, Uc_BFu0s_S)
//============================================================================



static void Test_Uc_BFu0s_Uc()
{
  {
    init_simple_test("Uc_BFu0s_Uc");
    static STRUCT_IF_C Uc_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(Uc_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_Uc)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "Uc_BFu0s_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_Uc, Uc_BFu0s_Uc)
//============================================================================



static void Test_Uc_BFu0s_Ui()
{
  {
    init_simple_test("Uc_BFu0s_Ui");
    static STRUCT_IF_C Uc_BFu0s_Ui lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_Ui)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "Uc_BFu0s_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_Ui, Uc_BFu0s_Ui)
//============================================================================



static void Test_Uc_BFu0s_Ul()
{
  {
    init_simple_test("Uc_BFu0s_Ul");
    static STRUCT_IF_C Uc_BFu0s_Ul lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(Uc_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_Ul)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "Uc_BFu0s_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_Ul, Uc_BFu0s_Ul)
//============================================================================



static void Test_Uc_BFu0s_Us()
{
  {
    init_simple_test("Uc_BFu0s_Us");
    static STRUCT_IF_C Uc_BFu0s_Us lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_Us)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_Us.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "Uc_BFu0s_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_Us, Uc_BFu0s_Us)
//============================================================================



static void Test_Uc_BFu0s_Vp()
{
  {
    init_simple_test("Uc_BFu0s_Vp");
    static STRUCT_IF_C Uc_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Uc_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu0s_Vp)");
    check_field_offset(lv, v1, 0, "Uc_BFu0s_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(2,2), "Uc_BFu0s_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu0s_Vp, Uc_BFu0s_Vp)
//============================================================================



static void Test_Uc_BFu15i_BFu0c()
{
  {
    init_simple_test("Uc_BFu15i_BFu0c");
    static STRUCT_IF_C Uc_BFu15i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu15i_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu15i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "Uc_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "Uc_BFu15i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu15i_BFu0c, Uc_BFu15i_BFu0c)
//============================================================================



static void Test_Uc_BFu15i_BFu0i()
{
  {
    init_simple_test("Uc_BFu15i_BFu0i");
    static STRUCT_IF_C Uc_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu15i_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu15i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "Uc_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "Uc_BFu15i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu15i_BFu0i, Uc_BFu15i_BFu0i)
//============================================================================



static void Test_Uc_BFu15i_BFu0ll()
{
  {
    init_simple_test("Uc_BFu15i_BFu0ll");
    static STRUCT_IF_C Uc_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu15i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu15i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "Uc_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "Uc_BFu15i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu15i_BFu0ll, Uc_BFu15i_BFu0ll)
//============================================================================



static void Test_Uc_BFu15i_BFu0s()
{
  {
    init_simple_test("Uc_BFu15i_BFu0s");
    static STRUCT_IF_C Uc_BFu15i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu15i_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu15i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "Uc_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "Uc_BFu15i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu15i_BFu0s, Uc_BFu15i_BFu0s)
//============================================================================



static void Test_Uc_BFu15ll_BFu0c()
{
  {
    init_simple_test("Uc_BFu15ll_BFu0c");
    static STRUCT_IF_C Uc_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu15ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu15ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "Uc_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "Uc_BFu15ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu15ll_BFu0c, Uc_BFu15ll_BFu0c)
//============================================================================



static void Test_Uc_BFu15ll_BFu0i()
{
  {
    init_simple_test("Uc_BFu15ll_BFu0i");
    static STRUCT_IF_C Uc_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu15ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu15ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "Uc_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "Uc_BFu15ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu15ll_BFu0i, Uc_BFu15ll_BFu0i)
//============================================================================



static void Test_Uc_BFu15ll_BFu0ll()
{
  {
    init_simple_test("Uc_BFu15ll_BFu0ll");
    static STRUCT_IF_C Uc_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu15ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu15ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "Uc_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "Uc_BFu15ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu15ll_BFu0ll, Uc_BFu15ll_BFu0ll)
//============================================================================



static void Test_Uc_BFu15ll_BFu0s()
{
  {
    init_simple_test("Uc_BFu15ll_BFu0s");
    static STRUCT_IF_C Uc_BFu15ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu15ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu15ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "Uc_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "Uc_BFu15ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu15ll_BFu0s, Uc_BFu15ll_BFu0s)
//============================================================================



static void Test_Uc_BFu15s_BFu0c()
{
  {
    init_simple_test("Uc_BFu15s_BFu0c");
    static STRUCT_IF_C Uc_BFu15s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu15s_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu15s_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "Uc_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "Uc_BFu15s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu15s_BFu0c, Uc_BFu15s_BFu0c)
//============================================================================



static void Test_Uc_BFu15s_BFu0i()
{
  {
    init_simple_test("Uc_BFu15s_BFu0i");
    static STRUCT_IF_C Uc_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu15s_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu15s_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "Uc_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "Uc_BFu15s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu15s_BFu0i, Uc_BFu15s_BFu0i)
//============================================================================



static void Test_Uc_BFu15s_BFu0ll()
{
  {
    init_simple_test("Uc_BFu15s_BFu0ll");
    static STRUCT_IF_C Uc_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu15s_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu15s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "Uc_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "Uc_BFu15s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu15s_BFu0ll, Uc_BFu15s_BFu0ll)
//============================================================================



static void Test_Uc_BFu15s_BFu0s()
{
  {
    init_simple_test("Uc_BFu15s_BFu0s");
    static STRUCT_IF_C Uc_BFu15s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu15s_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu15s_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "Uc_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "Uc_BFu15s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu15s_BFu0s, Uc_BFu15s_BFu0s)
//============================================================================



static void Test_Uc_BFu16i_BFu0c()
{
  {
    init_simple_test("Uc_BFu16i_BFu0c");
    static STRUCT_IF_C Uc_BFu16i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu16i_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu16i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "Uc_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "Uc_BFu16i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu16i_BFu0c, Uc_BFu16i_BFu0c)
//============================================================================



static void Test_Uc_BFu16i_BFu0i()
{
  {
    init_simple_test("Uc_BFu16i_BFu0i");
    static STRUCT_IF_C Uc_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu16i_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu16i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "Uc_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "Uc_BFu16i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu16i_BFu0i, Uc_BFu16i_BFu0i)
//============================================================================



static void Test_Uc_BFu16i_BFu0ll()
{
  {
    init_simple_test("Uc_BFu16i_BFu0ll");
    static STRUCT_IF_C Uc_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu16i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu16i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "Uc_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "Uc_BFu16i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu16i_BFu0ll, Uc_BFu16i_BFu0ll)
//============================================================================



static void Test_Uc_BFu16i_BFu0s()
{
  {
    init_simple_test("Uc_BFu16i_BFu0s");
    static STRUCT_IF_C Uc_BFu16i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu16i_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu16i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "Uc_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "Uc_BFu16i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu16i_BFu0s, Uc_BFu16i_BFu0s)
//============================================================================



static void Test_Uc_BFu16ll_BFu0c()
{
  {
    init_simple_test("Uc_BFu16ll_BFu0c");
    static STRUCT_IF_C Uc_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu16ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu16ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "Uc_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "Uc_BFu16ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu16ll_BFu0c, Uc_BFu16ll_BFu0c)
//============================================================================



static void Test_Uc_BFu16ll_BFu0i()
{
  {
    init_simple_test("Uc_BFu16ll_BFu0i");
    static STRUCT_IF_C Uc_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu16ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu16ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "Uc_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "Uc_BFu16ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu16ll_BFu0i, Uc_BFu16ll_BFu0i)
//============================================================================



static void Test_Uc_BFu16ll_BFu0ll()
{
  {
    init_simple_test("Uc_BFu16ll_BFu0ll");
    static STRUCT_IF_C Uc_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu16ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu16ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "Uc_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "Uc_BFu16ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu16ll_BFu0ll, Uc_BFu16ll_BFu0ll)
//============================================================================



static void Test_Uc_BFu16ll_BFu0s()
{
  {
    init_simple_test("Uc_BFu16ll_BFu0s");
    static STRUCT_IF_C Uc_BFu16ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu16ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu16ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "Uc_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "Uc_BFu16ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu16ll_BFu0s, Uc_BFu16ll_BFu0s)
//============================================================================



static void Test_Uc_BFu16s_BFu0c()
{
  {
    init_simple_test("Uc_BFu16s_BFu0c");
    static STRUCT_IF_C Uc_BFu16s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu16s_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu16s_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "Uc_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "Uc_BFu16s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu16s_BFu0c, Uc_BFu16s_BFu0c)
//============================================================================



static void Test_Uc_BFu16s_BFu0i()
{
  {
    init_simple_test("Uc_BFu16s_BFu0i");
    static STRUCT_IF_C Uc_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu16s_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu16s_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "Uc_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "Uc_BFu16s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu16s_BFu0i, Uc_BFu16s_BFu0i)
//============================================================================



static void Test_Uc_BFu16s_BFu0ll()
{
  {
    init_simple_test("Uc_BFu16s_BFu0ll");
    static STRUCT_IF_C Uc_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu16s_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu16s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "Uc_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "Uc_BFu16s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu16s_BFu0ll, Uc_BFu16s_BFu0ll)
//============================================================================



static void Test_Uc_BFu16s_BFu0s()
{
  {
    init_simple_test("Uc_BFu16s_BFu0s");
    static STRUCT_IF_C Uc_BFu16s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu16s_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu16s_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "Uc_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "Uc_BFu16s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu16s_BFu0s, Uc_BFu16s_BFu0s)
//============================================================================



static void Test_Uc_BFu17i_BFu0c()
{
  {
    init_simple_test("Uc_BFu17i_BFu0c");
    static STRUCT_IF_C Uc_BFu17i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(Uc_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu17i_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu17i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "Uc_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "Uc_BFu17i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu17i_BFu0c, Uc_BFu17i_BFu0c)
//============================================================================



static void Test_Uc_BFu17i_BFu0i()
{
  {
    init_simple_test("Uc_BFu17i_BFu0i");
    static STRUCT_IF_C Uc_BFu17i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(Uc_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu17i_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu17i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "Uc_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "Uc_BFu17i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu17i_BFu0i, Uc_BFu17i_BFu0i)
//============================================================================



static void Test_Uc_BFu17i_BFu0ll()
{
  {
    init_simple_test("Uc_BFu17i_BFu0ll");
    static STRUCT_IF_C Uc_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu17i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu17i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "Uc_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "Uc_BFu17i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu17i_BFu0ll, Uc_BFu17i_BFu0ll)
//============================================================================



static void Test_Uc_BFu17i_BFu0s()
{
  {
    init_simple_test("Uc_BFu17i_BFu0s");
    static STRUCT_IF_C Uc_BFu17i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(Uc_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu17i_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu17i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "Uc_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "Uc_BFu17i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu17i_BFu0s, Uc_BFu17i_BFu0s)
//============================================================================



static void Test_Uc_BFu17ll_BFu0c()
{
  {
    init_simple_test("Uc_BFu17ll_BFu0c");
    static STRUCT_IF_C Uc_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(Uc_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu17ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu17ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "Uc_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "Uc_BFu17ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu17ll_BFu0c, Uc_BFu17ll_BFu0c)
//============================================================================



static void Test_Uc_BFu17ll_BFu0i()
{
  {
    init_simple_test("Uc_BFu17ll_BFu0i");
    static STRUCT_IF_C Uc_BFu17ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(Uc_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu17ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu17ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "Uc_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "Uc_BFu17ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu17ll_BFu0i, Uc_BFu17ll_BFu0i)
//============================================================================



static void Test_Uc_BFu17ll_BFu0ll()
{
  {
    init_simple_test("Uc_BFu17ll_BFu0ll");
    static STRUCT_IF_C Uc_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu17ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu17ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "Uc_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "Uc_BFu17ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu17ll_BFu0ll, Uc_BFu17ll_BFu0ll)
//============================================================================



static void Test_Uc_BFu17ll_BFu0s()
{
  {
    init_simple_test("Uc_BFu17ll_BFu0s");
    static STRUCT_IF_C Uc_BFu17ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(Uc_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu17ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu17ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "Uc_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "Uc_BFu17ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu17ll_BFu0s, Uc_BFu17ll_BFu0s)
//============================================================================



static void Test_Uc_BFu1c_BFu0c()
{
  {
    init_simple_test("Uc_BFu1c_BFu0c");
    static STRUCT_IF_C Uc_BFu1c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu1c_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu1c_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu1c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu1c_BFu0c, Uc_BFu1c_BFu0c)
//============================================================================



static void Test_Uc_BFu1c_BFu0i()
{
  {
    init_simple_test("Uc_BFu1c_BFu0i");
    static STRUCT_IF_C Uc_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu1c_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu1c_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu1c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu1c_BFu0i, Uc_BFu1c_BFu0i)
//============================================================================



static void Test_Uc_BFu1c_BFu0ll()
{
  {
    init_simple_test("Uc_BFu1c_BFu0ll");
    static STRUCT_IF_C Uc_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu1c_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu1c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu1c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu1c_BFu0ll, Uc_BFu1c_BFu0ll)
//============================================================================



static void Test_Uc_BFu1c_BFu0s()
{
  {
    init_simple_test("Uc_BFu1c_BFu0s");
    static STRUCT_IF_C Uc_BFu1c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu1c_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu1c_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu1c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu1c_BFu0s, Uc_BFu1c_BFu0s)
//============================================================================



static void Test_Uc_BFu1i_BFu0c()
{
  {
    init_simple_test("Uc_BFu1i_BFu0c");
    static STRUCT_IF_C Uc_BFu1i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu1i_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu1i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu1i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu1i_BFu0c, Uc_BFu1i_BFu0c)
//============================================================================



static void Test_Uc_BFu1i_BFu0i()
{
  {
    init_simple_test("Uc_BFu1i_BFu0i");
    static STRUCT_IF_C Uc_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu1i_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu1i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu1i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu1i_BFu0i, Uc_BFu1i_BFu0i)
//============================================================================



static void Test_Uc_BFu1i_BFu0ll()
{
  {
    init_simple_test("Uc_BFu1i_BFu0ll");
    static STRUCT_IF_C Uc_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu1i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu1i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu1i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu1i_BFu0ll, Uc_BFu1i_BFu0ll)
//============================================================================



static void Test_Uc_BFu1i_BFu0s()
{
  {
    init_simple_test("Uc_BFu1i_BFu0s");
    static STRUCT_IF_C Uc_BFu1i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu1i_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu1i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu1i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu1i_BFu0s, Uc_BFu1i_BFu0s)
//============================================================================



static void Test_Uc_BFu1ll_BFu0c()
{
  {
    init_simple_test("Uc_BFu1ll_BFu0c");
    static STRUCT_IF_C Uc_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu1ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu1ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu1ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu1ll_BFu0c, Uc_BFu1ll_BFu0c)
//============================================================================



static void Test_Uc_BFu1ll_BFu0i()
{
  {
    init_simple_test("Uc_BFu1ll_BFu0i");
    static STRUCT_IF_C Uc_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu1ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu1ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu1ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu1ll_BFu0i, Uc_BFu1ll_BFu0i)
//============================================================================



static void Test_Uc_BFu1ll_BFu0ll()
{
  {
    init_simple_test("Uc_BFu1ll_BFu0ll");
    static STRUCT_IF_C Uc_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu1ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu1ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu1ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu1ll_BFu0ll, Uc_BFu1ll_BFu0ll)
//============================================================================



static void Test_Uc_BFu1ll_BFu0s()
{
  {
    init_simple_test("Uc_BFu1ll_BFu0s");
    static STRUCT_IF_C Uc_BFu1ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu1ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu1ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu1ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu1ll_BFu0s, Uc_BFu1ll_BFu0s)
//============================================================================



static void Test_Uc_BFu1s_BFu0c()
{
  {
    init_simple_test("Uc_BFu1s_BFu0c");
    static STRUCT_IF_C Uc_BFu1s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu1s_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu1s_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu1s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu1s_BFu0c, Uc_BFu1s_BFu0c)
//============================================================================



static void Test_Uc_BFu1s_BFu0i()
{
  {
    init_simple_test("Uc_BFu1s_BFu0i");
    static STRUCT_IF_C Uc_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu1s_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu1s_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu1s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu1s_BFu0i, Uc_BFu1s_BFu0i)
//============================================================================



static void Test_Uc_BFu1s_BFu0ll()
{
  {
    init_simple_test("Uc_BFu1s_BFu0ll");
    static STRUCT_IF_C Uc_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu1s_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu1s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu1s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu1s_BFu0ll, Uc_BFu1s_BFu0ll)
//============================================================================



static void Test_Uc_BFu1s_BFu0s()
{
  {
    init_simple_test("Uc_BFu1s_BFu0s");
    static STRUCT_IF_C Uc_BFu1s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu1s_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu1s_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "Uc_BFu1s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu1s_BFu0s, Uc_BFu1s_BFu0s)
//============================================================================



static void Test_Uc_BFu31i_BFu0c()
{
  {
    init_simple_test("Uc_BFu31i_BFu0c");
    static STRUCT_IF_C Uc_BFu31i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(Uc_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu31i_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu31i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "Uc_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "Uc_BFu31i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu31i_BFu0c, Uc_BFu31i_BFu0c)
//============================================================================



static void Test_Uc_BFu31i_BFu0i()
{
  {
    init_simple_test("Uc_BFu31i_BFu0i");
    static STRUCT_IF_C Uc_BFu31i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu31i_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu31i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "Uc_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "Uc_BFu31i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu31i_BFu0i, Uc_BFu31i_BFu0i)
//============================================================================



static void Test_Uc_BFu31i_BFu0ll()
{
  {
    init_simple_test("Uc_BFu31i_BFu0ll");
    static STRUCT_IF_C Uc_BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu31i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu31i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "Uc_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "Uc_BFu31i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu31i_BFu0ll, Uc_BFu31i_BFu0ll)
//============================================================================



static void Test_Uc_BFu31i_BFu0s()
{
  {
    init_simple_test("Uc_BFu31i_BFu0s");
    static STRUCT_IF_C Uc_BFu31i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu31i_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu31i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "Uc_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "Uc_BFu31i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu31i_BFu0s, Uc_BFu31i_BFu0s)
//============================================================================



static void Test_Uc_BFu31ll_BFu0c()
{
  {
    init_simple_test("Uc_BFu31ll_BFu0c");
    static STRUCT_IF_C Uc_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(Uc_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu31ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu31ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "Uc_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "Uc_BFu31ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu31ll_BFu0c, Uc_BFu31ll_BFu0c)
//============================================================================



static void Test_Uc_BFu31ll_BFu0i()
{
  {
    init_simple_test("Uc_BFu31ll_BFu0i");
    static STRUCT_IF_C Uc_BFu31ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu31ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu31ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "Uc_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "Uc_BFu31ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu31ll_BFu0i, Uc_BFu31ll_BFu0i)
//============================================================================



static void Test_Uc_BFu31ll_BFu0ll()
{
  {
    init_simple_test("Uc_BFu31ll_BFu0ll");
    static STRUCT_IF_C Uc_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu31ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu31ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "Uc_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "Uc_BFu31ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu31ll_BFu0ll, Uc_BFu31ll_BFu0ll)
//============================================================================



static void Test_Uc_BFu31ll_BFu0s()
{
  {
    init_simple_test("Uc_BFu31ll_BFu0s");
    static STRUCT_IF_C Uc_BFu31ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu31ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu31ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "Uc_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "Uc_BFu31ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu31ll_BFu0s, Uc_BFu31ll_BFu0s)
//============================================================================



static void Test_Uc_BFu32i_BFu0c()
{
  {
    init_simple_test("Uc_BFu32i_BFu0c");
    static STRUCT_IF_C Uc_BFu32i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(Uc_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu32i_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu32i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "Uc_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "Uc_BFu32i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu32i_BFu0c, Uc_BFu32i_BFu0c)
//============================================================================



static void Test_Uc_BFu32i_BFu0i()
{
  {
    init_simple_test("Uc_BFu32i_BFu0i");
    static STRUCT_IF_C Uc_BFu32i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu32i_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu32i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "Uc_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "Uc_BFu32i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu32i_BFu0i, Uc_BFu32i_BFu0i)
//============================================================================



static void Test_Uc_BFu32i_BFu0ll()
{
  {
    init_simple_test("Uc_BFu32i_BFu0ll");
    static STRUCT_IF_C Uc_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu32i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu32i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "Uc_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "Uc_BFu32i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu32i_BFu0ll, Uc_BFu32i_BFu0ll)
//============================================================================



static void Test_Uc_BFu32i_BFu0s()
{
  {
    init_simple_test("Uc_BFu32i_BFu0s");
    static STRUCT_IF_C Uc_BFu32i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu32i_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu32i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "Uc_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "Uc_BFu32i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu32i_BFu0s, Uc_BFu32i_BFu0s)
//============================================================================



static void Test_Uc_BFu32ll_BFu0c()
{
  {
    init_simple_test("Uc_BFu32ll_BFu0c");
    static STRUCT_IF_C Uc_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(Uc_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu32ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu32ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "Uc_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "Uc_BFu32ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu32ll_BFu0c, Uc_BFu32ll_BFu0c)
//============================================================================



static void Test_Uc_BFu32ll_BFu0i()
{
  {
    init_simple_test("Uc_BFu32ll_BFu0i");
    static STRUCT_IF_C Uc_BFu32ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu32ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu32ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "Uc_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "Uc_BFu32ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu32ll_BFu0i, Uc_BFu32ll_BFu0i)
//============================================================================



static void Test_Uc_BFu32ll_BFu0ll()
{
  {
    init_simple_test("Uc_BFu32ll_BFu0ll");
    static STRUCT_IF_C Uc_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu32ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu32ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "Uc_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "Uc_BFu32ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu32ll_BFu0ll, Uc_BFu32ll_BFu0ll)
//============================================================================



static void Test_Uc_BFu32ll_BFu0s()
{
  {
    init_simple_test("Uc_BFu32ll_BFu0s");
    static STRUCT_IF_C Uc_BFu32ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu32ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu32ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "Uc_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "Uc_BFu32ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu32ll_BFu0s, Uc_BFu32ll_BFu0s)
//============================================================================



static void Test_Uc_BFu33_BFu0c()
{
  {
    init_simple_test("Uc_BFu33_BFu0c");
    static STRUCT_IF_C Uc_BFu33_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(Uc_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu33_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu33_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "Uc_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "Uc_BFu33_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu33_BFu0c, Uc_BFu33_BFu0c)
//============================================================================



static void Test_Uc_BFu33_BFu0i()
{
  {
    init_simple_test("Uc_BFu33_BFu0i");
    static STRUCT_IF_C Uc_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu33_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu33_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "Uc_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "Uc_BFu33_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu33_BFu0i, Uc_BFu33_BFu0i)
//============================================================================



static void Test_Uc_BFu33_BFu0ll()
{
  {
    init_simple_test("Uc_BFu33_BFu0ll");
    static STRUCT_IF_C Uc_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu33_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu33_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "Uc_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "Uc_BFu33_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu33_BFu0ll, Uc_BFu33_BFu0ll)
//============================================================================



static void Test_Uc_BFu33_BFu0s()
{
  {
    init_simple_test("Uc_BFu33_BFu0s");
    static STRUCT_IF_C Uc_BFu33_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(Uc_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu33_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu33_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "Uc_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "Uc_BFu33_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu33_BFu0s, Uc_BFu33_BFu0s)
//============================================================================



static void Test_Uc_BFu7c_BFu0c()
{
  {
    init_simple_test("Uc_BFu7c_BFu0c");
    static STRUCT_IF_C Uc_BFu7c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu7c_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu7c_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu7c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu7c_BFu0c, Uc_BFu7c_BFu0c)
//============================================================================



static void Test_Uc_BFu7c_BFu0i()
{
  {
    init_simple_test("Uc_BFu7c_BFu0i");
    static STRUCT_IF_C Uc_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu7c_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu7c_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu7c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu7c_BFu0i, Uc_BFu7c_BFu0i)
//============================================================================



static void Test_Uc_BFu7c_BFu0ll()
{
  {
    init_simple_test("Uc_BFu7c_BFu0ll");
    static STRUCT_IF_C Uc_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu7c_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu7c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu7c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu7c_BFu0ll, Uc_BFu7c_BFu0ll)
//============================================================================



static void Test_Uc_BFu7c_BFu0s()
{
  {
    init_simple_test("Uc_BFu7c_BFu0s");
    static STRUCT_IF_C Uc_BFu7c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu7c_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu7c_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu7c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu7c_BFu0s, Uc_BFu7c_BFu0s)
//============================================================================



static void Test_Uc_BFu7i_BFu0c()
{
  {
    init_simple_test("Uc_BFu7i_BFu0c");
    static STRUCT_IF_C Uc_BFu7i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu7i_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu7i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu7i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu7i_BFu0c, Uc_BFu7i_BFu0c)
//============================================================================



static void Test_Uc_BFu7i_BFu0i()
{
  {
    init_simple_test("Uc_BFu7i_BFu0i");
    static STRUCT_IF_C Uc_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu7i_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu7i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu7i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu7i_BFu0i, Uc_BFu7i_BFu0i)
//============================================================================



static void Test_Uc_BFu7i_BFu0ll()
{
  {
    init_simple_test("Uc_BFu7i_BFu0ll");
    static STRUCT_IF_C Uc_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu7i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu7i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu7i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu7i_BFu0ll, Uc_BFu7i_BFu0ll)
//============================================================================



static void Test_Uc_BFu7i_BFu0s()
{
  {
    init_simple_test("Uc_BFu7i_BFu0s");
    static STRUCT_IF_C Uc_BFu7i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu7i_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu7i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu7i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu7i_BFu0s, Uc_BFu7i_BFu0s)
//============================================================================



static void Test_Uc_BFu7ll_BFu0c()
{
  {
    init_simple_test("Uc_BFu7ll_BFu0c");
    static STRUCT_IF_C Uc_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu7ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu7ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu7ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu7ll_BFu0c, Uc_BFu7ll_BFu0c)
//============================================================================



static void Test_Uc_BFu7ll_BFu0i()
{
  {
    init_simple_test("Uc_BFu7ll_BFu0i");
    static STRUCT_IF_C Uc_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu7ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu7ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu7ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu7ll_BFu0i, Uc_BFu7ll_BFu0i)
//============================================================================



static void Test_Uc_BFu7ll_BFu0ll()
{
  {
    init_simple_test("Uc_BFu7ll_BFu0ll");
    static STRUCT_IF_C Uc_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu7ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu7ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu7ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu7ll_BFu0ll, Uc_BFu7ll_BFu0ll)
//============================================================================



static void Test_Uc_BFu7ll_BFu0s()
{
  {
    init_simple_test("Uc_BFu7ll_BFu0s");
    static STRUCT_IF_C Uc_BFu7ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu7ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu7ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu7ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu7ll_BFu0s, Uc_BFu7ll_BFu0s)
//============================================================================



static void Test_Uc_BFu7s_BFu0c()
{
  {
    init_simple_test("Uc_BFu7s_BFu0c");
    static STRUCT_IF_C Uc_BFu7s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu7s_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu7s_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu7s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu7s_BFu0c, Uc_BFu7s_BFu0c)
//============================================================================



static void Test_Uc_BFu7s_BFu0i()
{
  {
    init_simple_test("Uc_BFu7s_BFu0i");
    static STRUCT_IF_C Uc_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu7s_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu7s_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu7s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu7s_BFu0i, Uc_BFu7s_BFu0i)
//============================================================================



static void Test_Uc_BFu7s_BFu0ll()
{
  {
    init_simple_test("Uc_BFu7s_BFu0ll");
    static STRUCT_IF_C Uc_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu7s_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu7s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu7s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu7s_BFu0ll, Uc_BFu7s_BFu0ll)
//============================================================================



static void Test_Uc_BFu7s_BFu0s()
{
  {
    init_simple_test("Uc_BFu7s_BFu0s");
    static STRUCT_IF_C Uc_BFu7s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu7s_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu7s_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "Uc_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "Uc_BFu7s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu7s_BFu0s, Uc_BFu7s_BFu0s)
//============================================================================



static void Test_Uc_BFu8c_BFu0c()
{
  {
    init_simple_test("Uc_BFu8c_BFu0c");
    static STRUCT_IF_C Uc_BFu8c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu8c_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu8c_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu8c_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu8c_BFu0c, Uc_BFu8c_BFu0c)
//============================================================================



static void Test_Uc_BFu8c_BFu0i()
{
  {
    init_simple_test("Uc_BFu8c_BFu0i");
    static STRUCT_IF_C Uc_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu8c_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu8c_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu8c_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu8c_BFu0i, Uc_BFu8c_BFu0i)
//============================================================================



static void Test_Uc_BFu8c_BFu0ll()
{
  {
    init_simple_test("Uc_BFu8c_BFu0ll");
    static STRUCT_IF_C Uc_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu8c_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu8c_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu8c_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu8c_BFu0ll, Uc_BFu8c_BFu0ll)
//============================================================================



static void Test_Uc_BFu8c_BFu0s()
{
  {
    init_simple_test("Uc_BFu8c_BFu0s");
    static STRUCT_IF_C Uc_BFu8c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu8c_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu8c_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu8c_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu8c_BFu0s, Uc_BFu8c_BFu0s)
//============================================================================



static void Test_Uc_BFu8i_BFu0c()
{
  {
    init_simple_test("Uc_BFu8i_BFu0c");
    static STRUCT_IF_C Uc_BFu8i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu8i_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu8i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu8i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu8i_BFu0c, Uc_BFu8i_BFu0c)
//============================================================================



static void Test_Uc_BFu8i_BFu0i()
{
  {
    init_simple_test("Uc_BFu8i_BFu0i");
    static STRUCT_IF_C Uc_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu8i_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu8i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu8i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu8i_BFu0i, Uc_BFu8i_BFu0i)
//============================================================================



static void Test_Uc_BFu8i_BFu0ll()
{
  {
    init_simple_test("Uc_BFu8i_BFu0ll");
    static STRUCT_IF_C Uc_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu8i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu8i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu8i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu8i_BFu0ll, Uc_BFu8i_BFu0ll)
//============================================================================



static void Test_Uc_BFu8i_BFu0s()
{
  {
    init_simple_test("Uc_BFu8i_BFu0s");
    static STRUCT_IF_C Uc_BFu8i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu8i_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu8i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu8i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu8i_BFu0s, Uc_BFu8i_BFu0s)
//============================================================================



static void Test_Uc_BFu8ll_BFu0c()
{
  {
    init_simple_test("Uc_BFu8ll_BFu0c");
    static STRUCT_IF_C Uc_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu8ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu8ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu8ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu8ll_BFu0c, Uc_BFu8ll_BFu0c)
//============================================================================



static void Test_Uc_BFu8ll_BFu0i()
{
  {
    init_simple_test("Uc_BFu8ll_BFu0i");
    static STRUCT_IF_C Uc_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu8ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu8ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu8ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu8ll_BFu0i, Uc_BFu8ll_BFu0i)
//============================================================================



static void Test_Uc_BFu8ll_BFu0ll()
{
  {
    init_simple_test("Uc_BFu8ll_BFu0ll");
    static STRUCT_IF_C Uc_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu8ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu8ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu8ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu8ll_BFu0ll, Uc_BFu8ll_BFu0ll)
//============================================================================



static void Test_Uc_BFu8ll_BFu0s()
{
  {
    init_simple_test("Uc_BFu8ll_BFu0s");
    static STRUCT_IF_C Uc_BFu8ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu8ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu8ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu8ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu8ll_BFu0s, Uc_BFu8ll_BFu0s)
//============================================================================



static void Test_Uc_BFu8s_BFu0c()
{
  {
    init_simple_test("Uc_BFu8s_BFu0c");
    static STRUCT_IF_C Uc_BFu8s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu8s_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu8s_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu8s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu8s_BFu0c, Uc_BFu8s_BFu0c)
//============================================================================



static void Test_Uc_BFu8s_BFu0i()
{
  {
    init_simple_test("Uc_BFu8s_BFu0i");
    static STRUCT_IF_C Uc_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu8s_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu8s_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu8s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu8s_BFu0i, Uc_BFu8s_BFu0i)
//============================================================================



static void Test_Uc_BFu8s_BFu0ll()
{
  {
    init_simple_test("Uc_BFu8s_BFu0ll");
    static STRUCT_IF_C Uc_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu8s_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu8s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu8s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu8s_BFu0ll, Uc_BFu8s_BFu0ll)
//============================================================================



static void Test_Uc_BFu8s_BFu0s()
{
  {
    init_simple_test("Uc_BFu8s_BFu0s");
    static STRUCT_IF_C Uc_BFu8s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu8s_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu8s_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "Uc_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "Uc_BFu8s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu8s_BFu0s, Uc_BFu8s_BFu0s)
//============================================================================



static void Test_Uc_BFu9i_BFu0c()
{
  {
    init_simple_test("Uc_BFu9i_BFu0c");
    static STRUCT_IF_C Uc_BFu9i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu9i_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu9i_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "Uc_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "Uc_BFu9i_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu9i_BFu0c, Uc_BFu9i_BFu0c)
//============================================================================



static void Test_Uc_BFu9i_BFu0i()
{
  {
    init_simple_test("Uc_BFu9i_BFu0i");
    static STRUCT_IF_C Uc_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu9i_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu9i_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "Uc_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "Uc_BFu9i_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu9i_BFu0i, Uc_BFu9i_BFu0i)
//============================================================================



static void Test_Uc_BFu9i_BFu0ll()
{
  {
    init_simple_test("Uc_BFu9i_BFu0ll");
    static STRUCT_IF_C Uc_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu9i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu9i_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "Uc_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "Uc_BFu9i_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu9i_BFu0ll, Uc_BFu9i_BFu0ll)
//============================================================================



static void Test_Uc_BFu9i_BFu0s()
{
  {
    init_simple_test("Uc_BFu9i_BFu0s");
    static STRUCT_IF_C Uc_BFu9i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu9i_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu9i_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "Uc_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "Uc_BFu9i_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu9i_BFu0s, Uc_BFu9i_BFu0s)
//============================================================================



static void Test_Uc_BFu9ll_BFu0c()
{
  {
    init_simple_test("Uc_BFu9ll_BFu0c");
    static STRUCT_IF_C Uc_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu9ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu9ll_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "Uc_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "Uc_BFu9ll_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu9ll_BFu0c, Uc_BFu9ll_BFu0c)
//============================================================================



static void Test_Uc_BFu9ll_BFu0i()
{
  {
    init_simple_test("Uc_BFu9ll_BFu0i");
    static STRUCT_IF_C Uc_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu9ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu9ll_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "Uc_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "Uc_BFu9ll_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu9ll_BFu0i, Uc_BFu9ll_BFu0i)
//============================================================================



static void Test_Uc_BFu9ll_BFu0ll()
{
  {
    init_simple_test("Uc_BFu9ll_BFu0ll");
    static STRUCT_IF_C Uc_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu9ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu9ll_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "Uc_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "Uc_BFu9ll_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu9ll_BFu0ll, Uc_BFu9ll_BFu0ll)
//============================================================================



static void Test_Uc_BFu9ll_BFu0s()
{
  {
    init_simple_test("Uc_BFu9ll_BFu0s");
    static STRUCT_IF_C Uc_BFu9ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu9ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu9ll_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "Uc_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "Uc_BFu9ll_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu9ll_BFu0s, Uc_BFu9ll_BFu0s)
//============================================================================



static void Test_Uc_BFu9s_BFu0c()
{
  {
    init_simple_test("Uc_BFu9s_BFu0c");
    static STRUCT_IF_C Uc_BFu9s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(Uc_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_BFu9s_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_BFu9s_BFu0c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "Uc_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "Uc_BFu9s_BFu0c");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu9s_BFu0c, Uc_BFu9s_BFu0c)
//============================================================================



static void Test_Uc_BFu9s_BFu0i()
{
  {
    init_simple_test("Uc_BFu9s_BFu0i");
    static STRUCT_IF_C Uc_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu9s_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_BFu9s_BFu0i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "Uc_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "Uc_BFu9s_BFu0i");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu9s_BFu0i, Uc_BFu9s_BFu0i)
//============================================================================



static void Test_Uc_BFu9s_BFu0ll()
{
  {
    init_simple_test("Uc_BFu9s_BFu0ll");
    static STRUCT_IF_C Uc_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu9s_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_BFu9s_BFu0ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "Uc_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "Uc_BFu9s_BFu0ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu9s_BFu0ll, Uc_BFu9s_BFu0ll)
//============================================================================



static void Test_Uc_BFu9s_BFu0s()
{
  {
    init_simple_test("Uc_BFu9s_BFu0s");
    static STRUCT_IF_C Uc_BFu9s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_BFu9s_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_BFu9s_BFu0s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "Uc_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "Uc_BFu9s_BFu0s");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_BFu9s_BFu0s, Uc_BFu9s_BFu0s)
//============================================================================



static void Test_Uc_C_BFu0c()
{
  {
    init_simple_test("Uc_C_BFu0c");
    static STRUCT_IF_C Uc_C_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_C_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_C_BFu0c.v1");
    check_field_offset(lv, v2, 1, "Uc_C_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_C_BFu0c, Uc_C_BFu0c)
//============================================================================



static void Test_Uc_C_BFu0i()
{
  {
    init_simple_test("Uc_C_BFu0i");
    static STRUCT_IF_C Uc_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_C_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_C_BFu0i.v1");
    check_field_offset(lv, v2, 1, "Uc_C_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_C_BFu0i, Uc_C_BFu0i)
//============================================================================



static void Test_Uc_C_BFu0ll()
{
  {
    init_simple_test("Uc_C_BFu0ll");
    static STRUCT_IF_C Uc_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_C_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_C_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "Uc_C_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_C_BFu0ll, Uc_C_BFu0ll)
//============================================================================



static void Test_Uc_C_BFu0s()
{
  {
    init_simple_test("Uc_C_BFu0s");
    static STRUCT_IF_C Uc_C_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_C_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_C_BFu0s.v1");
    check_field_offset(lv, v2, 1, "Uc_C_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_C_BFu0s, Uc_C_BFu0s)
//============================================================================



static void Test_Uc_D_BFu0c()
{
  {
    init_simple_test("Uc_D_BFu0c");
    static STRUCT_IF_C Uc_D_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(Uc_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_D_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_D_BFu0c.v1");
    check_field_offset(lv, v2, 1, "Uc_D_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_D_BFu0c, Uc_D_BFu0c)
//============================================================================



static void Test_Uc_D_BFu0i()
{
  {
    init_simple_test("Uc_D_BFu0i");
    static STRUCT_IF_C Uc_D_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(Uc_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_D_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_D_BFu0i.v1");
    check_field_offset(lv, v2, 1, "Uc_D_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_D_BFu0i, Uc_D_BFu0i)
//============================================================================



static void Test_Uc_D_BFu0ll()
{
  {
    init_simple_test("Uc_D_BFu0ll");
    static STRUCT_IF_C Uc_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Uc_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_D_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_D_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "Uc_D_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_D_BFu0ll, Uc_D_BFu0ll)
//============================================================================



static void Test_Uc_D_BFu0s()
{
  {
    init_simple_test("Uc_D_BFu0s");
    static STRUCT_IF_C Uc_D_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(Uc_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_D_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_D_BFu0s.v1");
    check_field_offset(lv, v2, 1, "Uc_D_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_D_BFu0s, Uc_D_BFu0s)
//============================================================================



static void Test_Uc_F_BFu0c()
{
  {
    init_simple_test("Uc_F_BFu0c");
    static STRUCT_IF_C Uc_F_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(Uc_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_F_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_F_BFu0c.v1");
    check_field_offset(lv, v2, 1, "Uc_F_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_F_BFu0c, Uc_F_BFu0c)
//============================================================================



static void Test_Uc_F_BFu0i()
{
  {
    init_simple_test("Uc_F_BFu0i");
    static STRUCT_IF_C Uc_F_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_F_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_F_BFu0i.v1");
    check_field_offset(lv, v2, 1, "Uc_F_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_F_BFu0i, Uc_F_BFu0i)
//============================================================================



static void Test_Uc_F_BFu0ll()
{
  {
    init_simple_test("Uc_F_BFu0ll");
    static STRUCT_IF_C Uc_F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_F_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_F_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "Uc_F_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_F_BFu0ll, Uc_F_BFu0ll)
//============================================================================



static void Test_Uc_F_BFu0s()
{
  {
    init_simple_test("Uc_F_BFu0s");
    static STRUCT_IF_C Uc_F_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_F_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_F_BFu0s.v1");
    check_field_offset(lv, v2, 1, "Uc_F_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_F_BFu0s, Uc_F_BFu0s)
//============================================================================



static void Test_Uc_I_BFu0c()
{
  {
    init_simple_test("Uc_I_BFu0c");
    static STRUCT_IF_C Uc_I_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(Uc_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_I_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_I_BFu0c.v1");
    check_field_offset(lv, v2, 1, "Uc_I_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_I_BFu0c, Uc_I_BFu0c)
//============================================================================



static void Test_Uc_I_BFu0i()
{
  {
    init_simple_test("Uc_I_BFu0i");
    static STRUCT_IF_C Uc_I_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_I_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_I_BFu0i.v1");
    check_field_offset(lv, v2, 1, "Uc_I_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_I_BFu0i, Uc_I_BFu0i)
//============================================================================



static void Test_Uc_I_BFu0ll()
{
  {
    init_simple_test("Uc_I_BFu0ll");
    static STRUCT_IF_C Uc_I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_I_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_I_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "Uc_I_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_I_BFu0ll, Uc_I_BFu0ll)
//============================================================================



static void Test_Uc_I_BFu0s()
{
  {
    init_simple_test("Uc_I_BFu0s");
    static STRUCT_IF_C Uc_I_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_I_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_I_BFu0s.v1");
    check_field_offset(lv, v2, 1, "Uc_I_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_I_BFu0s, Uc_I_BFu0s)
//============================================================================



static void Test_Uc_Ip_BFu0c()
{
  {
    init_simple_test("Uc_Ip_BFu0c");
    static STRUCT_IF_C Uc_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_Ip_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_Ip_BFu0c.v1");
    check_field_offset(lv, v2, 1, "Uc_Ip_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Ip_BFu0c, Uc_Ip_BFu0c)
//============================================================================



static void Test_Uc_Ip_BFu0i()
{
  {
    init_simple_test("Uc_Ip_BFu0i");
    static STRUCT_IF_C Uc_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Uc_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Ip_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_Ip_BFu0i.v1");
    check_field_offset(lv, v2, 1, "Uc_Ip_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Ip_BFu0i, Uc_Ip_BFu0i)
//============================================================================



static void Test_Uc_Ip_BFu0ll()
{
  {
    init_simple_test("Uc_Ip_BFu0ll");
    static STRUCT_IF_C Uc_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Uc_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Ip_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_Ip_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "Uc_Ip_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Ip_BFu0ll, Uc_Ip_BFu0ll)
//============================================================================



static void Test_Uc_Ip_BFu0s()
{
  {
    init_simple_test("Uc_Ip_BFu0s");
    static STRUCT_IF_C Uc_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Uc_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Ip_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_Ip_BFu0s.v1");
    check_field_offset(lv, v2, 1, "Uc_Ip_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Ip_BFu0s, Uc_Ip_BFu0s)
//============================================================================



static void Test_Uc_L_BFu0c()
{
  {
    init_simple_test("Uc_L_BFu0c");
    static STRUCT_IF_C Uc_L_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(Uc_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_L_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_L_BFu0c.v1");
    check_field_offset(lv, v2, 1, "Uc_L_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_L_BFu0c, Uc_L_BFu0c)
//============================================================================



static void Test_Uc_L_BFu0i()
{
  {
    init_simple_test("Uc_L_BFu0i");
    static STRUCT_IF_C Uc_L_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(Uc_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_L_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_L_BFu0i.v1");
    check_field_offset(lv, v2, 1, "Uc_L_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_L_BFu0i, Uc_L_BFu0i)
//============================================================================



static void Test_Uc_L_BFu0ll()
{
  {
    init_simple_test("Uc_L_BFu0ll");
    static STRUCT_IF_C Uc_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Uc_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_L_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_L_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "Uc_L_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_L_BFu0ll, Uc_L_BFu0ll)
//============================================================================



static void Test_Uc_L_BFu0s()
{
  {
    init_simple_test("Uc_L_BFu0s");
    static STRUCT_IF_C Uc_L_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(Uc_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_L_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_L_BFu0s.v1");
    check_field_offset(lv, v2, 1, "Uc_L_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_L_BFu0s, Uc_L_BFu0s)
//============================================================================



static void Test_Uc_S_BFu0c()
{
  {
    init_simple_test("Uc_S_BFu0c");
    static STRUCT_IF_C Uc_S_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(Uc_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_S_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_S_BFu0c.v1");
    check_field_offset(lv, v2, 1, "Uc_S_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_S_BFu0c, Uc_S_BFu0c)
//============================================================================



static void Test_Uc_S_BFu0i()
{
  {
    init_simple_test("Uc_S_BFu0i");
    static STRUCT_IF_C Uc_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_S_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_S_BFu0i.v1");
    check_field_offset(lv, v2, 1, "Uc_S_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_S_BFu0i, Uc_S_BFu0i)
//============================================================================



static void Test_Uc_S_BFu0ll()
{
  {
    init_simple_test("Uc_S_BFu0ll");
    static STRUCT_IF_C Uc_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_S_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_S_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "Uc_S_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_S_BFu0ll, Uc_S_BFu0ll)
//============================================================================



static void Test_Uc_S_BFu0s()
{
  {
    init_simple_test("Uc_S_BFu0s");
    static STRUCT_IF_C Uc_S_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_S_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_S_BFu0s.v1");
    check_field_offset(lv, v2, 1, "Uc_S_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_S_BFu0s, Uc_S_BFu0s)
//============================================================================



static void Test_Uc_Uc_BFu0c()
{
  {
    init_simple_test("Uc_Uc_BFu0c");
    static STRUCT_IF_C Uc_Uc_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(Uc_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_Uc_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_Uc_BFu0c.v1");
    check_field_offset(lv, v2, 1, "Uc_Uc_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Uc_BFu0c, Uc_Uc_BFu0c)
//============================================================================



static void Test_Uc_Uc_BFu0i()
{
  {
    init_simple_test("Uc_Uc_BFu0i");
    static STRUCT_IF_C Uc_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Uc_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_Uc_BFu0i.v1");
    check_field_offset(lv, v2, 1, "Uc_Uc_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Uc_BFu0i, Uc_Uc_BFu0i)
//============================================================================



static void Test_Uc_Uc_BFu0ll()
{
  {
    init_simple_test("Uc_Uc_BFu0ll");
    static STRUCT_IF_C Uc_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Uc_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_Uc_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "Uc_Uc_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Uc_BFu0ll, Uc_Uc_BFu0ll)
//============================================================================



static void Test_Uc_Uc_BFu0s()
{
  {
    init_simple_test("Uc_Uc_BFu0s");
    static STRUCT_IF_C Uc_Uc_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(Uc_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Uc_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_Uc_BFu0s.v1");
    check_field_offset(lv, v2, 1, "Uc_Uc_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Uc_BFu0s, Uc_Uc_BFu0s)
//============================================================================



static void Test_Uc_Ui_BFu0c()
{
  {
    init_simple_test("Uc_Ui_BFu0c");
    static STRUCT_IF_C Uc_Ui_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(Uc_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_Ui_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_Ui_BFu0c.v1");
    check_field_offset(lv, v2, 1, "Uc_Ui_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Ui_BFu0c, Uc_Ui_BFu0c)
//============================================================================



static void Test_Uc_Ui_BFu0i()
{
  {
    init_simple_test("Uc_Ui_BFu0i");
    static STRUCT_IF_C Uc_Ui_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Ui_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_Ui_BFu0i.v1");
    check_field_offset(lv, v2, 1, "Uc_Ui_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Ui_BFu0i, Uc_Ui_BFu0i)
//============================================================================



static void Test_Uc_Ui_BFu0ll()
{
  {
    init_simple_test("Uc_Ui_BFu0ll");
    static STRUCT_IF_C Uc_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(Uc_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Ui_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_Ui_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "Uc_Ui_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Ui_BFu0ll, Uc_Ui_BFu0ll)
//============================================================================



static void Test_Uc_Ui_BFu0s()
{
  {
    init_simple_test("Uc_Ui_BFu0s");
    static STRUCT_IF_C Uc_Ui_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Uc_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Ui_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_Ui_BFu0s.v1");
    check_field_offset(lv, v2, 1, "Uc_Ui_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Ui_BFu0s, Uc_Ui_BFu0s)
//============================================================================



static void Test_Uc_Ul_BFu0c()
{
  {
    init_simple_test("Uc_Ul_BFu0c");
    static STRUCT_IF_C Uc_Ul_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(Uc_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_Ul_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_Ul_BFu0c.v1");
    check_field_offset(lv, v2, 1, "Uc_Ul_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Ul_BFu0c, Uc_Ul_BFu0c)
//============================================================================



static void Test_Uc_Ul_BFu0i()
{
  {
    init_simple_test("Uc_Ul_BFu0i");
    static STRUCT_IF_C Uc_Ul_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(Uc_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Ul_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_Ul_BFu0i.v1");
    check_field_offset(lv, v2, 1, "Uc_Ul_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Ul_BFu0i, Uc_Ul_BFu0i)
//============================================================================



static void Test_Uc_Ul_BFu0ll()
{
  {
    init_simple_test("Uc_Ul_BFu0ll");
    static STRUCT_IF_C Uc_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Uc_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Ul_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_Ul_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "Uc_Ul_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Ul_BFu0ll, Uc_Ul_BFu0ll)
//============================================================================



static void Test_Uc_Ul_BFu0s()
{
  {
    init_simple_test("Uc_Ul_BFu0s");
    static STRUCT_IF_C Uc_Ul_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(Uc_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Ul_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_Ul_BFu0s.v1");
    check_field_offset(lv, v2, 1, "Uc_Ul_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Ul_BFu0s, Uc_Ul_BFu0s)
//============================================================================



static void Test_Uc_Us_BFu0c()
{
  {
    init_simple_test("Uc_Us_BFu0c");
    static STRUCT_IF_C Uc_Us_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(Uc_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_Us_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_Us_BFu0c.v1");
    check_field_offset(lv, v2, 1, "Uc_Us_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Us_BFu0c, Uc_Us_BFu0c)
//============================================================================



static void Test_Uc_Us_BFu0i()
{
  {
    init_simple_test("Uc_Us_BFu0i");
    static STRUCT_IF_C Uc_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Us_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_Us_BFu0i.v1");
    check_field_offset(lv, v2, 1, "Uc_Us_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Us_BFu0i, Uc_Us_BFu0i)
//============================================================================



static void Test_Uc_Us_BFu0ll()
{
  {
    init_simple_test("Uc_Us_BFu0ll");
    static STRUCT_IF_C Uc_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Uc_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Us_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_Us_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "Uc_Us_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Us_BFu0ll, Uc_Us_BFu0ll)
//============================================================================



static void Test_Uc_Us_BFu0s()
{
  {
    init_simple_test("Uc_Us_BFu0s");
    static STRUCT_IF_C Uc_Us_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(Uc_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Us_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_Us_BFu0s.v1");
    check_field_offset(lv, v2, 1, "Uc_Us_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Us_BFu0s, Uc_Us_BFu0s)
//============================================================================



static void Test_Uc_Vp_BFu0c()
{
  {
    init_simple_test("Uc_Vp_BFu0c");
    static STRUCT_IF_C Uc_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Uc_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Uc_Vp_BFu0c)");
    check_field_offset(lv, v1, 0, "Uc_Vp_BFu0c.v1");
    check_field_offset(lv, v2, 1, "Uc_Vp_BFu0c.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Vp_BFu0c, Uc_Vp_BFu0c)
//============================================================================



static void Test_Uc_Vp_BFu0i()
{
  {
    init_simple_test("Uc_Vp_BFu0i");
    static STRUCT_IF_C Uc_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Uc_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Vp_BFu0i)");
    check_field_offset(lv, v1, 0, "Uc_Vp_BFu0i.v1");
    check_field_offset(lv, v2, 1, "Uc_Vp_BFu0i.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Vp_BFu0i, Uc_Vp_BFu0i)
//============================================================================



static void Test_Uc_Vp_BFu0ll()
{
  {
    init_simple_test("Uc_Vp_BFu0ll");
    static STRUCT_IF_C Uc_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Uc_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Vp_BFu0ll)");
    check_field_offset(lv, v1, 0, "Uc_Vp_BFu0ll.v1");
    check_field_offset(lv, v2, 1, "Uc_Vp_BFu0ll.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Vp_BFu0ll, Uc_Vp_BFu0ll)
//============================================================================



static void Test_Uc_Vp_BFu0s()
{
  {
    init_simple_test("Uc_Vp_BFu0s");
    static STRUCT_IF_C Uc_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Uc_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Uc_Vp_BFu0s)");
    check_field_offset(lv, v1, 0, "Uc_Vp_BFu0s.v1");
    check_field_offset(lv, v2, 1, "Uc_Vp_BFu0s.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Uc_Vp_BFu0s, Uc_Vp_BFu0s)
//============================================================================



static void Test_Ui_BFu0c()
{
  {
    init_simple_test("Ui_BFu0c");
    static STRUCT_IF_C Ui_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c, Ui_BFu0c)
//============================================================================



static void Test_Ui_BFu0c_BFu0c()
{
  {
    init_simple_test("Ui_BFu0c_BFu0c");
    static STRUCT_IF_C Ui_BFu0c_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(Ui_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu0c)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu0c, Ui_BFu0c_BFu0c)
//============================================================================



static void Test_Ui_BFu0c_BFu0i()
{
  {
    init_simple_test("Ui_BFu0c_BFu0i");
    static STRUCT_IF_C Ui_BFu0c_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(Ui_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0c_BFu0i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu0i, Ui_BFu0c_BFu0i)
//============================================================================



static void Test_Ui_BFu0c_BFu0ll()
{
  {
    init_simple_test("Ui_BFu0c_BFu0ll");
    static STRUCT_IF_C Ui_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ui_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0c_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu0ll, Ui_BFu0c_BFu0ll)
//============================================================================



static void Test_Ui_BFu0c_BFu0s()
{
  {
    init_simple_test("Ui_BFu0c_BFu0s");
    static STRUCT_IF_C Ui_BFu0c_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(Ui_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0c_BFu0s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu0s, Ui_BFu0c_BFu0s)
//============================================================================



static void Test_Ui_BFu0c_BFu15i()
{
  {
    init_simple_test("Ui_BFu0c_BFu15i");
    static STRUCT_IF_C Ui_BFu0c_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(Ui_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu15i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu15i.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "Ui_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "Ui_BFu0c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu15i, Ui_BFu0c_BFu15i)
//============================================================================



static void Test_Ui_BFu0c_BFu15ll()
{
  {
    init_simple_test("Ui_BFu0c_BFu15ll");
    static STRUCT_IF_C Ui_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(Ui_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu15ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "Ui_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "Ui_BFu0c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu15ll, Ui_BFu0c_BFu15ll)
//============================================================================



static void Test_Ui_BFu0c_BFu15s()
{
  {
    init_simple_test("Ui_BFu0c_BFu15s");
    static STRUCT_IF_C Ui_BFu0c_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(Ui_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu15s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu15s.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "Ui_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "Ui_BFu0c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu15s, Ui_BFu0c_BFu15s)
//============================================================================



static void Test_Ui_BFu0c_BFu16i()
{
  {
    init_simple_test("Ui_BFu0c_BFu16i");
    static STRUCT_IF_C Ui_BFu0c_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(Ui_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu16i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu16i.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "Ui_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "Ui_BFu0c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu16i, Ui_BFu0c_BFu16i)
//============================================================================



static void Test_Ui_BFu0c_BFu16ll()
{
  {
    init_simple_test("Ui_BFu0c_BFu16ll");
    static STRUCT_IF_C Ui_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(Ui_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu16ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "Ui_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "Ui_BFu0c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu16ll, Ui_BFu0c_BFu16ll)
//============================================================================



static void Test_Ui_BFu0c_BFu16s()
{
  {
    init_simple_test("Ui_BFu0c_BFu16s");
    static STRUCT_IF_C Ui_BFu0c_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(Ui_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu16s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu16s.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "Ui_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "Ui_BFu0c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu16s, Ui_BFu0c_BFu16s)
//============================================================================



static void Test_Ui_BFu0c_BFu17i()
{
  {
    init_simple_test("Ui_BFu0c_BFu17i");
    static STRUCT_IF_C Ui_BFu0c_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(Ui_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu17i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu17i.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "Ui_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "Ui_BFu0c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu17i, Ui_BFu0c_BFu17i)
//============================================================================



static void Test_Ui_BFu0c_BFu17ll()
{
  {
    init_simple_test("Ui_BFu0c_BFu17ll");
    static STRUCT_IF_C Ui_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(Ui_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu17ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "Ui_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "Ui_BFu0c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu17ll, Ui_BFu0c_BFu17ll)
//============================================================================



static void Test_Ui_BFu0c_BFu1c()
{
  {
    init_simple_test("Ui_BFu0c_BFu1c");
    static STRUCT_IF_C Ui_BFu0c_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(Ui_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu1c)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu1c.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "Ui_BFu0c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu1c, Ui_BFu0c_BFu1c)
//============================================================================



static void Test_Ui_BFu0c_BFu1i()
{
  {
    init_simple_test("Ui_BFu0c_BFu1i");
    static STRUCT_IF_C Ui_BFu0c_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(Ui_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu1i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu1i.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "Ui_BFu0c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu1i, Ui_BFu0c_BFu1i)
//============================================================================



static void Test_Ui_BFu0c_BFu1ll()
{
  {
    init_simple_test("Ui_BFu0c_BFu1ll");
    static STRUCT_IF_C Ui_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(Ui_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu1ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "Ui_BFu0c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu1ll, Ui_BFu0c_BFu1ll)
//============================================================================



static void Test_Ui_BFu0c_BFu1s()
{
  {
    init_simple_test("Ui_BFu0c_BFu1s");
    static STRUCT_IF_C Ui_BFu0c_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(Ui_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu1s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu1s.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "Ui_BFu0c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu1s, Ui_BFu0c_BFu1s)
//============================================================================



static void Test_Ui_BFu0c_BFu31i()
{
  {
    init_simple_test("Ui_BFu0c_BFu31i");
    static STRUCT_IF_C Ui_BFu0c_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(Ui_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu31i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu31i.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "Ui_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "Ui_BFu0c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu31i, Ui_BFu0c_BFu31i)
//============================================================================



static void Test_Ui_BFu0c_BFu31ll()
{
  {
    init_simple_test("Ui_BFu0c_BFu31ll");
    static STRUCT_IF_C Ui_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(Ui_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu31ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "Ui_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "Ui_BFu0c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu31ll, Ui_BFu0c_BFu31ll)
//============================================================================



static void Test_Ui_BFu0c_BFu32i()
{
  {
    init_simple_test("Ui_BFu0c_BFu32i");
    static STRUCT_IF_C Ui_BFu0c_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(Ui_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu32i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu32i.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "Ui_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "Ui_BFu0c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu32i, Ui_BFu0c_BFu32i)
//============================================================================



static void Test_Ui_BFu0c_BFu32ll()
{
  {
    init_simple_test("Ui_BFu0c_BFu32ll");
    static STRUCT_IF_C Ui_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(Ui_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu32ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "Ui_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "Ui_BFu0c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu32ll, Ui_BFu0c_BFu32ll)
//============================================================================



static void Test_Ui_BFu0c_BFu33()
{
  {
    init_simple_test("Ui_BFu0c_BFu33");
    static STRUCT_IF_C Ui_BFu0c_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(Ui_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu33)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu33.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "Ui_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "Ui_BFu0c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu33, Ui_BFu0c_BFu33)
//============================================================================



static void Test_Ui_BFu0c_BFu7c()
{
  {
    init_simple_test("Ui_BFu0c_BFu7c");
    static STRUCT_IF_C Ui_BFu0c_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(Ui_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu7c)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu7c.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "Ui_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "Ui_BFu0c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu7c, Ui_BFu0c_BFu7c)
//============================================================================



static void Test_Ui_BFu0c_BFu7i()
{
  {
    init_simple_test("Ui_BFu0c_BFu7i");
    static STRUCT_IF_C Ui_BFu0c_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(Ui_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu7i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu7i.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "Ui_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "Ui_BFu0c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu7i, Ui_BFu0c_BFu7i)
//============================================================================



static void Test_Ui_BFu0c_BFu7ll()
{
  {
    init_simple_test("Ui_BFu0c_BFu7ll");
    static STRUCT_IF_C Ui_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(Ui_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu7ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "Ui_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "Ui_BFu0c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu7ll, Ui_BFu0c_BFu7ll)
//============================================================================



static void Test_Ui_BFu0c_BFu7s()
{
  {
    init_simple_test("Ui_BFu0c_BFu7s");
    static STRUCT_IF_C Ui_BFu0c_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(Ui_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu7s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu7s.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "Ui_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "Ui_BFu0c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu7s, Ui_BFu0c_BFu7s)
//============================================================================



static void Test_Ui_BFu0c_BFu8c()
{
  {
    init_simple_test("Ui_BFu0c_BFu8c");
    static STRUCT_IF_C Ui_BFu0c_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(Ui_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu8c)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu8c.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "Ui_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "Ui_BFu0c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu8c, Ui_BFu0c_BFu8c)
//============================================================================



static void Test_Ui_BFu0c_BFu8i()
{
  {
    init_simple_test("Ui_BFu0c_BFu8i");
    static STRUCT_IF_C Ui_BFu0c_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(Ui_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu8i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu8i.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "Ui_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "Ui_BFu0c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu8i, Ui_BFu0c_BFu8i)
//============================================================================



static void Test_Ui_BFu0c_BFu8ll()
{
  {
    init_simple_test("Ui_BFu0c_BFu8ll");
    static STRUCT_IF_C Ui_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(Ui_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu8ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "Ui_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "Ui_BFu0c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu8ll, Ui_BFu0c_BFu8ll)
//============================================================================



static void Test_Ui_BFu0c_BFu8s()
{
  {
    init_simple_test("Ui_BFu0c_BFu8s");
    static STRUCT_IF_C Ui_BFu0c_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(Ui_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu8s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu8s.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "Ui_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "Ui_BFu0c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu8s, Ui_BFu0c_BFu8s)
//============================================================================



static void Test_Ui_BFu0c_BFu9i()
{
  {
    init_simple_test("Ui_BFu0c_BFu9i");
    static STRUCT_IF_C Ui_BFu0c_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(Ui_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu9i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu9i.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "Ui_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "Ui_BFu0c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu9i, Ui_BFu0c_BFu9i)
//============================================================================



static void Test_Ui_BFu0c_BFu9ll()
{
  {
    init_simple_test("Ui_BFu0c_BFu9ll");
    static STRUCT_IF_C Ui_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(Ui_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu9ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "Ui_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "Ui_BFu0c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu9ll, Ui_BFu0c_BFu9ll)
//============================================================================



static void Test_Ui_BFu0c_BFu9s()
{
  {
    init_simple_test("Ui_BFu0c_BFu9s");
    static STRUCT_IF_C Ui_BFu0c_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(Ui_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_BFu9s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_BFu9s.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "Ui_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "Ui_BFu0c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_BFu9s, Ui_BFu0c_BFu9s)
//============================================================================



static void Test_Ui_BFu0c_C()
{
  {
    init_simple_test("Ui_BFu0c_C");
    static STRUCT_IF_C Ui_BFu0c_C lv;
    check2(sizeof(lv), 5, "sizeof(Ui_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_C)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_C.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0c_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_C, Ui_BFu0c_C)
//============================================================================



static void Test_Ui_BFu0c_D()
{
  {
    init_simple_test("Ui_BFu0c_D");
    static STRUCT_IF_C Ui_BFu0c_D lv;
    check2(sizeof(lv), 12, "sizeof(Ui_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_D)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_D.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0c_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_D, Ui_BFu0c_D)
//============================================================================



static void Test_Ui_BFu0c_F()
{
  {
    init_simple_test("Ui_BFu0c_F");
    static STRUCT_IF_C Ui_BFu0c_F lv;
    check2(sizeof(lv), 8, "sizeof(Ui_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_F)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_F.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0c_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_F, Ui_BFu0c_F)
//============================================================================



static void Test_Ui_BFu0c_I()
{
  {
    init_simple_test("Ui_BFu0c_I");
    static STRUCT_IF_C Ui_BFu0c_I lv;
    check2(sizeof(lv), 8, "sizeof(Ui_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_I)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_I.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0c_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_I, Ui_BFu0c_I)
//============================================================================



static void Test_Ui_BFu0c_Ip()
{
  {
    init_simple_test("Ui_BFu0c_Ip");
    static STRUCT_IF_C Ui_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ui_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_Ip)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_Ip.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0c_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_Ip, Ui_BFu0c_Ip)
//============================================================================



static void Test_Ui_BFu0c_L()
{
  {
    init_simple_test("Ui_BFu0c_L");
    static STRUCT_IF_C Ui_BFu0c_L lv;
    check2(sizeof(lv), 12, "sizeof(Ui_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_L)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_L.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0c_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_L, Ui_BFu0c_L)
//============================================================================



static void Test_Ui_BFu0c_S()
{
  {
    init_simple_test("Ui_BFu0c_S");
    static STRUCT_IF_C Ui_BFu0c_S lv;
    check2(sizeof(lv), 6, "sizeof(Ui_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_S)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_S.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0c_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_S, Ui_BFu0c_S)
//============================================================================



static void Test_Ui_BFu0c_Uc()
{
  {
    init_simple_test("Ui_BFu0c_Uc");
    static STRUCT_IF_C Ui_BFu0c_Uc lv;
    check2(sizeof(lv), 5, "sizeof(Ui_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_Uc)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_Uc.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0c_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_Uc, Ui_BFu0c_Uc)
//============================================================================



static void Test_Ui_BFu0c_Ui()
{
  {
    init_simple_test("Ui_BFu0c_Ui");
    static STRUCT_IF_C Ui_BFu0c_Ui lv;
    check2(sizeof(lv), 8, "sizeof(Ui_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_Ui)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_Ui.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0c_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_Ui, Ui_BFu0c_Ui)
//============================================================================



static void Test_Ui_BFu0c_Ul()
{
  {
    init_simple_test("Ui_BFu0c_Ul");
    static STRUCT_IF_C Ui_BFu0c_Ul lv;
    check2(sizeof(lv), 12, "sizeof(Ui_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_Ul)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_Ul.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0c_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_Ul, Ui_BFu0c_Ul)
//============================================================================



static void Test_Ui_BFu0c_Us()
{
  {
    init_simple_test("Ui_BFu0c_Us");
    static STRUCT_IF_C Ui_BFu0c_Us lv;
    check2(sizeof(lv), 6, "sizeof(Ui_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_Us)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_Us.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0c_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_Us, Ui_BFu0c_Us)
//============================================================================



static void Test_Ui_BFu0c_Vp()
{
  {
    init_simple_test("Ui_BFu0c_Vp");
    static STRUCT_IF_C Ui_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ui_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Ui_BFu0c_Vp)");
    check_field_offset(lv, v1, 0, "Ui_BFu0c_Vp.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0c_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0c_Vp, Ui_BFu0c_Vp)
//============================================================================



static void Test_Ui_BFu0i()
{
  {
    init_simple_test("Ui_BFu0i");
    static STRUCT_IF_C Ui_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i, Ui_BFu0i)
//============================================================================



static void Test_Ui_BFu0i_BFu0c()
{
  {
    init_simple_test("Ui_BFu0i_BFu0c");
    static STRUCT_IF_C Ui_BFu0i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(Ui_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu0c)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu0c, Ui_BFu0i_BFu0c)
//============================================================================



static void Test_Ui_BFu0i_BFu0i()
{
  {
    init_simple_test("Ui_BFu0i_BFu0i");
    static STRUCT_IF_C Ui_BFu0i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(Ui_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu0i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu0i, Ui_BFu0i_BFu0i)
//============================================================================



static void Test_Ui_BFu0i_BFu0ll()
{
  {
    init_simple_test("Ui_BFu0i_BFu0ll");
    static STRUCT_IF_C Ui_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ui_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu0ll, Ui_BFu0i_BFu0ll)
//============================================================================



static void Test_Ui_BFu0i_BFu0s()
{
  {
    init_simple_test("Ui_BFu0i_BFu0s");
    static STRUCT_IF_C Ui_BFu0i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(Ui_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu0s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu0s, Ui_BFu0i_BFu0s)
//============================================================================



static void Test_Ui_BFu0i_BFu15i()
{
  {
    init_simple_test("Ui_BFu0i_BFu15i");
    static STRUCT_IF_C Ui_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Ui_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu15i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu15i.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "Ui_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "Ui_BFu0i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu15i, Ui_BFu0i_BFu15i)
//============================================================================



static void Test_Ui_BFu0i_BFu15ll()
{
  {
    init_simple_test("Ui_BFu0i_BFu15ll");
    static STRUCT_IF_C Ui_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Ui_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu15ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "Ui_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "Ui_BFu0i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu15ll, Ui_BFu0i_BFu15ll)
//============================================================================



static void Test_Ui_BFu0i_BFu15s()
{
  {
    init_simple_test("Ui_BFu0i_BFu15s");
    static STRUCT_IF_C Ui_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Ui_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu15s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu15s.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "Ui_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "Ui_BFu0i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu15s, Ui_BFu0i_BFu15s)
//============================================================================



static void Test_Ui_BFu0i_BFu16i()
{
  {
    init_simple_test("Ui_BFu0i_BFu16i");
    static STRUCT_IF_C Ui_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Ui_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu16i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu16i.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "Ui_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "Ui_BFu0i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu16i, Ui_BFu0i_BFu16i)
//============================================================================



static void Test_Ui_BFu0i_BFu16ll()
{
  {
    init_simple_test("Ui_BFu0i_BFu16ll");
    static STRUCT_IF_C Ui_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Ui_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu16ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "Ui_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "Ui_BFu0i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu16ll, Ui_BFu0i_BFu16ll)
//============================================================================



static void Test_Ui_BFu0i_BFu16s()
{
  {
    init_simple_test("Ui_BFu0i_BFu16s");
    static STRUCT_IF_C Ui_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Ui_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu16s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu16s.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "Ui_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "Ui_BFu0i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu16s, Ui_BFu0i_BFu16s)
//============================================================================



static void Test_Ui_BFu0i_BFu17i()
{
  {
    init_simple_test("Ui_BFu0i_BFu17i");
    static STRUCT_IF_C Ui_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(Ui_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu17i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu17i.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "Ui_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "Ui_BFu0i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu17i, Ui_BFu0i_BFu17i)
//============================================================================



static void Test_Ui_BFu0i_BFu17ll()
{
  {
    init_simple_test("Ui_BFu0i_BFu17ll");
    static STRUCT_IF_C Ui_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(Ui_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu17ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "Ui_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "Ui_BFu0i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu17ll, Ui_BFu0i_BFu17ll)
//============================================================================



static void Test_Ui_BFu0i_BFu1c()
{
  {
    init_simple_test("Ui_BFu0i_BFu1c");
    static STRUCT_IF_C Ui_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Ui_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu1c)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu1c.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "Ui_BFu0i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu1c, Ui_BFu0i_BFu1c)
//============================================================================



static void Test_Ui_BFu0i_BFu1i()
{
  {
    init_simple_test("Ui_BFu0i_BFu1i");
    static STRUCT_IF_C Ui_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Ui_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu1i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu1i.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "Ui_BFu0i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu1i, Ui_BFu0i_BFu1i)
//============================================================================



static void Test_Ui_BFu0i_BFu1ll()
{
  {
    init_simple_test("Ui_BFu0i_BFu1ll");
    static STRUCT_IF_C Ui_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Ui_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu1ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "Ui_BFu0i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu1ll, Ui_BFu0i_BFu1ll)
//============================================================================



static void Test_Ui_BFu0i_BFu1s()
{
  {
    init_simple_test("Ui_BFu0i_BFu1s");
    static STRUCT_IF_C Ui_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Ui_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu1s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu1s.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "Ui_BFu0i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu1s, Ui_BFu0i_BFu1s)
//============================================================================



static void Test_Ui_BFu0i_BFu31i()
{
  {
    init_simple_test("Ui_BFu0i_BFu31i");
    static STRUCT_IF_C Ui_BFu0i_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(Ui_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu31i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu31i.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "Ui_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "Ui_BFu0i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu31i, Ui_BFu0i_BFu31i)
//============================================================================



static void Test_Ui_BFu0i_BFu31ll()
{
  {
    init_simple_test("Ui_BFu0i_BFu31ll");
    static STRUCT_IF_C Ui_BFu0i_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(Ui_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu31ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "Ui_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "Ui_BFu0i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu31ll, Ui_BFu0i_BFu31ll)
//============================================================================



static void Test_Ui_BFu0i_BFu32i()
{
  {
    init_simple_test("Ui_BFu0i_BFu32i");
    static STRUCT_IF_C Ui_BFu0i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(Ui_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu32i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu32i.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "Ui_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "Ui_BFu0i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu32i, Ui_BFu0i_BFu32i)
//============================================================================



static void Test_Ui_BFu0i_BFu32ll()
{
  {
    init_simple_test("Ui_BFu0i_BFu32ll");
    static STRUCT_IF_C Ui_BFu0i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(Ui_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu32ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "Ui_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "Ui_BFu0i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu32ll, Ui_BFu0i_BFu32ll)
//============================================================================



static void Test_Ui_BFu0i_BFu33()
{
  {
    init_simple_test("Ui_BFu0i_BFu33");
    static STRUCT_IF_C Ui_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(Ui_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu33)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu33.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "Ui_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "Ui_BFu0i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu33, Ui_BFu0i_BFu33)
//============================================================================



static void Test_Ui_BFu0i_BFu7c()
{
  {
    init_simple_test("Ui_BFu0i_BFu7c");
    static STRUCT_IF_C Ui_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Ui_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu7c)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu7c.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "Ui_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "Ui_BFu0i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu7c, Ui_BFu0i_BFu7c)
//============================================================================



static void Test_Ui_BFu0i_BFu7i()
{
  {
    init_simple_test("Ui_BFu0i_BFu7i");
    static STRUCT_IF_C Ui_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Ui_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu7i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu7i.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "Ui_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "Ui_BFu0i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu7i, Ui_BFu0i_BFu7i)
//============================================================================



static void Test_Ui_BFu0i_BFu7ll()
{
  {
    init_simple_test("Ui_BFu0i_BFu7ll");
    static STRUCT_IF_C Ui_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Ui_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu7ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "Ui_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "Ui_BFu0i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu7ll, Ui_BFu0i_BFu7ll)
//============================================================================



static void Test_Ui_BFu0i_BFu7s()
{
  {
    init_simple_test("Ui_BFu0i_BFu7s");
    static STRUCT_IF_C Ui_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Ui_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu7s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu7s.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "Ui_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "Ui_BFu0i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu7s, Ui_BFu0i_BFu7s)
//============================================================================



static void Test_Ui_BFu0i_BFu8c()
{
  {
    init_simple_test("Ui_BFu0i_BFu8c");
    static STRUCT_IF_C Ui_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Ui_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu8c)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu8c.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "Ui_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "Ui_BFu0i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu8c, Ui_BFu0i_BFu8c)
//============================================================================



static void Test_Ui_BFu0i_BFu8i()
{
  {
    init_simple_test("Ui_BFu0i_BFu8i");
    static STRUCT_IF_C Ui_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Ui_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu8i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu8i.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "Ui_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "Ui_BFu0i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu8i, Ui_BFu0i_BFu8i)
//============================================================================



static void Test_Ui_BFu0i_BFu8ll()
{
  {
    init_simple_test("Ui_BFu0i_BFu8ll");
    static STRUCT_IF_C Ui_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Ui_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu8ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "Ui_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "Ui_BFu0i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu8ll, Ui_BFu0i_BFu8ll)
//============================================================================



static void Test_Ui_BFu0i_BFu8s()
{
  {
    init_simple_test("Ui_BFu0i_BFu8s");
    static STRUCT_IF_C Ui_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Ui_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu8s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu8s.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "Ui_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "Ui_BFu0i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu8s, Ui_BFu0i_BFu8s)
//============================================================================



static void Test_Ui_BFu0i_BFu9i()
{
  {
    init_simple_test("Ui_BFu0i_BFu9i");
    static STRUCT_IF_C Ui_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Ui_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu9i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu9i.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "Ui_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "Ui_BFu0i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu9i, Ui_BFu0i_BFu9i)
//============================================================================



static void Test_Ui_BFu0i_BFu9ll()
{
  {
    init_simple_test("Ui_BFu0i_BFu9ll");
    static STRUCT_IF_C Ui_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Ui_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu9ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "Ui_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "Ui_BFu0i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu9ll, Ui_BFu0i_BFu9ll)
//============================================================================



static void Test_Ui_BFu0i_BFu9s()
{
  {
    init_simple_test("Ui_BFu0i_BFu9s");
    static STRUCT_IF_C Ui_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Ui_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_BFu9s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_BFu9s.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "Ui_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "Ui_BFu0i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_BFu9s, Ui_BFu0i_BFu9s)
//============================================================================



static void Test_Ui_BFu0i_C()
{
  {
    init_simple_test("Ui_BFu0i_C");
    static STRUCT_IF_C Ui_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Ui_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_C)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_C.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0i_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_C, Ui_BFu0i_C)
//============================================================================



static void Test_Ui_BFu0i_D()
{
  {
    init_simple_test("Ui_BFu0i_D");
    static STRUCT_IF_C Ui_BFu0i_D lv;
    check2(sizeof(lv), 12, "sizeof(Ui_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_D)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_D.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0i_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_D, Ui_BFu0i_D)
//============================================================================



static void Test_Ui_BFu0i_F()
{
  {
    init_simple_test("Ui_BFu0i_F");
    static STRUCT_IF_C Ui_BFu0i_F lv;
    check2(sizeof(lv), 8, "sizeof(Ui_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_F)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_F.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0i_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_F, Ui_BFu0i_F)
//============================================================================



static void Test_Ui_BFu0i_I()
{
  {
    init_simple_test("Ui_BFu0i_I");
    static STRUCT_IF_C Ui_BFu0i_I lv;
    check2(sizeof(lv), 8, "sizeof(Ui_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_I)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_I.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0i_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_I, Ui_BFu0i_I)
//============================================================================



static void Test_Ui_BFu0i_Ip()
{
  {
    init_simple_test("Ui_BFu0i_Ip");
    static STRUCT_IF_C Ui_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ui_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_Ip)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_Ip.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0i_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_Ip, Ui_BFu0i_Ip)
//============================================================================



static void Test_Ui_BFu0i_L()
{
  {
    init_simple_test("Ui_BFu0i_L");
    static STRUCT_IF_C Ui_BFu0i_L lv;
    check2(sizeof(lv), 12, "sizeof(Ui_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_L)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_L.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0i_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_L, Ui_BFu0i_L)
//============================================================================



static void Test_Ui_BFu0i_S()
{
  {
    init_simple_test("Ui_BFu0i_S");
    static STRUCT_IF_C Ui_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Ui_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_S)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_S.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0i_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_S, Ui_BFu0i_S)
//============================================================================



static void Test_Ui_BFu0i_Uc()
{
  {
    init_simple_test("Ui_BFu0i_Uc");
    static STRUCT_IF_C Ui_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(Ui_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_Uc)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_Uc.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0i_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_Uc, Ui_BFu0i_Uc)
//============================================================================



static void Test_Ui_BFu0i_Ui()
{
  {
    init_simple_test("Ui_BFu0i_Ui");
    static STRUCT_IF_C Ui_BFu0i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(Ui_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_Ui)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_Ui.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0i_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_Ui, Ui_BFu0i_Ui)
//============================================================================



static void Test_Ui_BFu0i_Ul()
{
  {
    init_simple_test("Ui_BFu0i_Ul");
    static STRUCT_IF_C Ui_BFu0i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(Ui_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_Ul)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_Ul.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0i_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_Ul, Ui_BFu0i_Ul)
//============================================================================



static void Test_Ui_BFu0i_Us()
{
  {
    init_simple_test("Ui_BFu0i_Us");
    static STRUCT_IF_C Ui_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(Ui_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_Us)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_Us.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0i_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_Us, Ui_BFu0i_Us)
//============================================================================



static void Test_Ui_BFu0i_Vp()
{
  {
    init_simple_test("Ui_BFu0i_Vp");
    static STRUCT_IF_C Ui_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ui_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0i_Vp)");
    check_field_offset(lv, v1, 0, "Ui_BFu0i_Vp.v1");
    check_field_offset(lv, v2, 4, "Ui_BFu0i_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0i_Vp, Ui_BFu0i_Vp)
//============================================================================



static void Test_Ui_BFu0ll()
{
  {
    init_simple_test("Ui_BFu0ll");
    static STRUCT_IF_C Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll, Ui_BFu0ll)
//============================================================================



static void Test_Ui_BFu0ll_BFu0c()
{
  {
    init_simple_test("Ui_BFu0ll_BFu0c");
    static STRUCT_IF_C Ui_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ui_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu0c)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu0c.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu0c, Ui_BFu0ll_BFu0c)
//============================================================================



static void Test_Ui_BFu0ll_BFu0i()
{
  {
    init_simple_test("Ui_BFu0ll_BFu0i");
    static STRUCT_IF_C Ui_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ui_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu0i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu0i.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu0i, Ui_BFu0ll_BFu0i)
//============================================================================



static void Test_Ui_BFu0ll_BFu0ll()
{
  {
    init_simple_test("Ui_BFu0ll_BFu0ll");
    static STRUCT_IF_C Ui_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ui_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu0ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu0ll.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu0ll, Ui_BFu0ll_BFu0ll)
//============================================================================



static void Test_Ui_BFu0ll_BFu0s()
{
  {
    init_simple_test("Ui_BFu0ll_BFu0s");
    static STRUCT_IF_C Ui_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ui_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu0s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu0s.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu0s, Ui_BFu0ll_BFu0s)
//============================================================================



static void Test_Ui_BFu0ll_BFu15i()
{
  {
    init_simple_test("Ui_BFu0ll_BFu15i");
    static STRUCT_IF_C Ui_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ui_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu15i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu15i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ui_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ui_BFu0ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu15i, Ui_BFu0ll_BFu15i)
//============================================================================



static void Test_Ui_BFu0ll_BFu15ll()
{
  {
    init_simple_test("Ui_BFu0ll_BFu15ll");
    static STRUCT_IF_C Ui_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ui_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ui_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ui_BFu0ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu15ll, Ui_BFu0ll_BFu15ll)
//============================================================================



static void Test_Ui_BFu0ll_BFu15s()
{
  {
    init_simple_test("Ui_BFu0ll_BFu15s");
    static STRUCT_IF_C Ui_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ui_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu15s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu15s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ui_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ui_BFu0ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu15s, Ui_BFu0ll_BFu15s)
//============================================================================



static void Test_Ui_BFu0ll_BFu16i()
{
  {
    init_simple_test("Ui_BFu0ll_BFu16i");
    static STRUCT_IF_C Ui_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ui_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu16i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu16i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ui_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ui_BFu0ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu16i, Ui_BFu0ll_BFu16i)
//============================================================================



static void Test_Ui_BFu0ll_BFu16ll()
{
  {
    init_simple_test("Ui_BFu0ll_BFu16ll");
    static STRUCT_IF_C Ui_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ui_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ui_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ui_BFu0ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu16ll, Ui_BFu0ll_BFu16ll)
//============================================================================



static void Test_Ui_BFu0ll_BFu16s()
{
  {
    init_simple_test("Ui_BFu0ll_BFu16s");
    static STRUCT_IF_C Ui_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ui_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu16s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu16s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ui_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ui_BFu0ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu16s, Ui_BFu0ll_BFu16s)
//============================================================================



static void Test_Ui_BFu0ll_BFu17i()
{
  {
    init_simple_test("Ui_BFu0ll_BFu17i");
    static STRUCT_IF_C Ui_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Ui_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu17i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu17i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ui_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ui_BFu0ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu17i, Ui_BFu0ll_BFu17i)
//============================================================================



static void Test_Ui_BFu0ll_BFu17ll()
{
  {
    init_simple_test("Ui_BFu0ll_BFu17ll");
    static STRUCT_IF_C Ui_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Ui_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ui_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ui_BFu0ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu17ll, Ui_BFu0ll_BFu17ll)
//============================================================================



static void Test_Ui_BFu0ll_BFu1c()
{
  {
    init_simple_test("Ui_BFu0ll_BFu1c");
    static STRUCT_IF_C Ui_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ui_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu1c)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu1c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ui_BFu0ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu1c, Ui_BFu0ll_BFu1c)
//============================================================================



static void Test_Ui_BFu0ll_BFu1i()
{
  {
    init_simple_test("Ui_BFu0ll_BFu1i");
    static STRUCT_IF_C Ui_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ui_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu1i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu1i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ui_BFu0ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu1i, Ui_BFu0ll_BFu1i)
//============================================================================



static void Test_Ui_BFu0ll_BFu1ll()
{
  {
    init_simple_test("Ui_BFu0ll_BFu1ll");
    static STRUCT_IF_C Ui_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ui_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ui_BFu0ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu1ll, Ui_BFu0ll_BFu1ll)
//============================================================================



static void Test_Ui_BFu0ll_BFu1s()
{
  {
    init_simple_test("Ui_BFu0ll_BFu1s");
    static STRUCT_IF_C Ui_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ui_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu1s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu1s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ui_BFu0ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu1s, Ui_BFu0ll_BFu1s)
//============================================================================



static void Test_Ui_BFu0ll_BFu31i()
{
  {
    init_simple_test("Ui_BFu0ll_BFu31i");
    static STRUCT_IF_C Ui_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ui_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu31i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu31i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ui_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ui_BFu0ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu31i, Ui_BFu0ll_BFu31i)
//============================================================================



static void Test_Ui_BFu0ll_BFu31ll()
{
  {
    init_simple_test("Ui_BFu0ll_BFu31ll");
    static STRUCT_IF_C Ui_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ui_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ui_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ui_BFu0ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu31ll, Ui_BFu0ll_BFu31ll)
//============================================================================



static void Test_Ui_BFu0ll_BFu32i()
{
  {
    init_simple_test("Ui_BFu0ll_BFu32i");
    static STRUCT_IF_C Ui_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ui_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu32i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu32i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ui_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ui_BFu0ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu32i, Ui_BFu0ll_BFu32i)
//============================================================================



static void Test_Ui_BFu0ll_BFu32ll()
{
  {
    init_simple_test("Ui_BFu0ll_BFu32ll");
    static STRUCT_IF_C Ui_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ui_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ui_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ui_BFu0ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu32ll, Ui_BFu0ll_BFu32ll)
//============================================================================



static void Test_Ui_BFu0ll_BFu33()
{
  {
    init_simple_test("Ui_BFu0ll_BFu33");
    static STRUCT_IF_C Ui_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(Ui_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu33)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu33.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "Ui_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "Ui_BFu0ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu33, Ui_BFu0ll_BFu33)
//============================================================================



static void Test_Ui_BFu0ll_BFu7c()
{
  {
    init_simple_test("Ui_BFu0ll_BFu7c");
    static STRUCT_IF_C Ui_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ui_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu7c)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu7c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ui_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ui_BFu0ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu7c, Ui_BFu0ll_BFu7c)
//============================================================================



static void Test_Ui_BFu0ll_BFu7i()
{
  {
    init_simple_test("Ui_BFu0ll_BFu7i");
    static STRUCT_IF_C Ui_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ui_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu7i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu7i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ui_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ui_BFu0ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu7i, Ui_BFu0ll_BFu7i)
//============================================================================



static void Test_Ui_BFu0ll_BFu7ll()
{
  {
    init_simple_test("Ui_BFu0ll_BFu7ll");
    static STRUCT_IF_C Ui_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ui_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ui_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ui_BFu0ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu7ll, Ui_BFu0ll_BFu7ll)
//============================================================================



static void Test_Ui_BFu0ll_BFu7s()
{
  {
    init_simple_test("Ui_BFu0ll_BFu7s");
    static STRUCT_IF_C Ui_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ui_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu7s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu7s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ui_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ui_BFu0ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu7s, Ui_BFu0ll_BFu7s)
//============================================================================



static void Test_Ui_BFu0ll_BFu8c()
{
  {
    init_simple_test("Ui_BFu0ll_BFu8c");
    static STRUCT_IF_C Ui_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ui_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu8c)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu8c.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ui_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ui_BFu0ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu8c, Ui_BFu0ll_BFu8c)
//============================================================================



static void Test_Ui_BFu0ll_BFu8i()
{
  {
    init_simple_test("Ui_BFu0ll_BFu8i");
    static STRUCT_IF_C Ui_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ui_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu8i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu8i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ui_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ui_BFu0ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu8i, Ui_BFu0ll_BFu8i)
//============================================================================



static void Test_Ui_BFu0ll_BFu8ll()
{
  {
    init_simple_test("Ui_BFu0ll_BFu8ll");
    static STRUCT_IF_C Ui_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ui_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ui_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ui_BFu0ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu8ll, Ui_BFu0ll_BFu8ll)
//============================================================================



static void Test_Ui_BFu0ll_BFu8s()
{
  {
    init_simple_test("Ui_BFu0ll_BFu8s");
    static STRUCT_IF_C Ui_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ui_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu8s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu8s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ui_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ui_BFu0ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu8s, Ui_BFu0ll_BFu8s)
//============================================================================



static void Test_Ui_BFu0ll_BFu9i()
{
  {
    init_simple_test("Ui_BFu0ll_BFu9i");
    static STRUCT_IF_C Ui_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ui_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu9i)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu9i.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ui_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ui_BFu0ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu9i, Ui_BFu0ll_BFu9i)
//============================================================================



static void Test_Ui_BFu0ll_BFu9ll()
{
  {
    init_simple_test("Ui_BFu0ll_BFu9ll");
    static STRUCT_IF_C Ui_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ui_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ui_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ui_BFu0ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu9ll, Ui_BFu0ll_BFu9ll)
//============================================================================



static void Test_Ui_BFu0ll_BFu9s()
{
  {
    init_simple_test("Ui_BFu0ll_BFu9s");
    static STRUCT_IF_C Ui_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ui_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_BFu9s)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_BFu9s.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ui_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ui_BFu0ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_BFu9s, Ui_BFu0ll_BFu9s)
//============================================================================



static void Test_Ui_BFu0ll_C()
{
  {
    init_simple_test("Ui_BFu0ll_C");
    static STRUCT_IF_C Ui_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ui_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_C)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_C.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ui_BFu0ll_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_C, Ui_BFu0ll_C)
//============================================================================



static void Test_Ui_BFu0ll_D()
{
  {
    init_simple_test("Ui_BFu0ll_D");
    static STRUCT_IF_C Ui_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ui_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_D)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_D.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ui_BFu0ll_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_D, Ui_BFu0ll_D)
//============================================================================



static void Test_Ui_BFu0ll_F()
{
  {
    init_simple_test("Ui_BFu0ll_F");
    static STRUCT_IF_C Ui_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ui_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_F)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_F.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ui_BFu0ll_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_F, Ui_BFu0ll_F)
//============================================================================



static void Test_Ui_BFu0ll_I()
{
  {
    init_simple_test("Ui_BFu0ll_I");
    static STRUCT_IF_C Ui_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ui_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_I)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_I.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ui_BFu0ll_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_I, Ui_BFu0ll_I)
//============================================================================



static void Test_Ui_BFu0ll_Ip()
{
  {
    init_simple_test("Ui_BFu0ll_Ip");
    static STRUCT_IF_C Ui_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ui_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(Ui_BFu0ll_Ip)");
    check_field_offset(lv, v1, 0, "Ui_BFu0ll_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ui_BFu0ll_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ui_BFu0ll_Ip, Ui_BFu0ll_Ip)
//============================================================================

